

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 14:02:15 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  1008                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  1008  3407               	retlw	7
   607  1009  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  07FC                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  07FC  3400               	retlw	0
   614  07FD  34A0               	retlw	160
   615  07FE  3441               	retlw	65
   616                           
   617                           	psect	strings
   618  0721                     __pstrings:	
   619  0721                     stringtab:	
   620  0721                     __stringtab:	
   621                           
   622                           ;	String table - string pointers are 1 byte each
   623  0721  1BFF               	btfsc	btemp+1,7
   624  0722  2F2B               	ljmp	stringcode
   625  0723  1383               	bcf	3,7
   626  0724  187F               	btfsc	btemp+1,0
   627  0725  1783               	bsf	3,7
   628  0726  0800               	movf	0,w
   629  0727  0A84               	incf	4,f
   630  0728  1903               	skipnz
   631  0729  0AFF               	incf	btemp+1,f
   632  072A  0008               	return
   633  072B                     stringcode:	
   634  072B                     stringdir:	
   635  072B  3007               	movlw	high stringdir
   636  072C  008A               	movwf	10
   637  072D  0804               	movf	4,w
   638  072E  0A84               	incf	4,f
   639  072F  0782               	addwf	2,f
   640  0730                     __stringbase:	
   641  0730  3400               	retlw	0
   642  0731                     __end_of__stringtab:	
   643  0731                     _dpowers:	
   644  0731  3401               	retlw	1
   645  0732  3400               	retlw	0
   646  0733  340A               	retlw	10
   647  0734  3400               	retlw	0
   648  0735  3464               	retlw	100
   649  0736  3400               	retlw	0
   650  0737  34E8               	retlw	232
   651  0738  3403               	retlw	3
   652  0739  3410               	retlw	16
   653  073A  3427               	retlw	39
   654  073B                     __end_of_dpowers:	
   655  000E                     _TMR1	set	14
   656  001F                     _ADCON0bits	set	31
   657  001E                     _ADRESH	set	30
   658  0017                     _CCP1CON	set	23
   659  0017                     _CCP1CONbits	set	23
   660  001D                     _CCP2CON	set	29
   661  001D                     _CCP2CONbits	set	29
   662  0015                     _CCPR1L	set	21
   663  001B                     _CCPR2L	set	27
   664  000B                     _INTCONbits	set	11
   665  000C                     _PIR1bits	set	12
   666  000D                     _PIR2bits	set	13
   667  0005                     _PORTA	set	5
   668  0006                     _PORTB	set	6
   669  0006                     _PORTBbits	set	6
   670  0007                     _PORTC	set	7
   671  0008                     _PORTD	set	8
   672  0009                     _PORTE	set	9
   673  0009                     _PORTEbits	set	9
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  0013                     _SSPBUF	set	19
   677  0014                     _SSPCONbits	set	20
   678  0010                     _T1CON	set	16
   679  0010                     _T1CONbits	set	16
   680  0012                     _T2CONbits	set	18
   681  0001                     _TMR0	set	1
   682  000F                     _TMR1H	set	15
   683  000E                     _TMR1L	set	14
   684  0019                     _TXREG	set	25
   685  00C1                     _OERR	set	193
   686  009F                     _ADCON1bits	set	159
   687  009E                     _ADRESL	set	158
   688  0081                     _OPTION_REGbits	set	129
   689  008C                     _PIE1bits	set	140
   690  008D                     _PIE2bits	set	141
   691  0092                     _PR2	set	146
   692  0099                     _SPBRG	set	153
   693  0093                     _SSPADD	set	147
   694  0091                     _SSPCON2	set	145
   695  0091                     _SSPCON2bits	set	145
   696  0094                     _SSPSTATbits	set	148
   697  0085                     _TRISA	set	133
   698  0086                     _TRISB	set	134
   699  0087                     _TRISC	set	135
   700  0088                     _TRISD	set	136
   701  0089                     _TRISE	set	137
   702  0098                     _TXSTAbits	set	152
   703  010D                     _EEADR	set	269
   704  010C                     _EEDATA	set	268
   705  018C                     _EECON1bits	set	396
   706  018D                     _EECON2	set	397
   707  073B                     __stringdata:	
   708  073B                     STR_19:	
   709  073B  340A               	retlw	10
   710  073C  340D               	retlw	13
   711  073D  3420               	retlw	32	;' '
   712  073E  342D               	retlw	45	;'-'
   713  073F  342D               	retlw	45	;'-'
   714  0740  342D               	retlw	45	;'-'
   715  0741  342D               	retlw	45	;'-'
   716  0742  342D               	retlw	45	;'-'
   717  0743  342D               	retlw	45	;'-'
   718  0744  342D               	retlw	45	;'-'
   719  0745  3420               	retlw	32	;' '
   720  0746  3445               	retlw	69	;'E'
   721  0747  3453               	retlw	83	;'S'
   722  0748  3454               	retlw	84	;'T'
   723  0749  344F               	retlw	79	;'O'
   724  074A  3455               	retlw	85	;'U'
   725  074B  3452               	retlw	82	;'R'
   726  074C  344F               	retlw	79	;'O'
   727  074D  3420               	retlw	32	;' '
   728  074E  3444               	retlw	68	;'D'
   729  074F  3445               	retlw	69	;'E'
   730  0750  3420               	retlw	32	;' '
   731  0751  3450               	retlw	80	;'P'
   732  0752  3449               	retlw	73	;'I'
   733  0753  344C               	retlw	76	;'L'
   734  0754  3448               	retlw	72	;'H'
   735  0755  3441               	retlw	65	;'A'
   736  0756  3420               	retlw	32	;' '
   737  0757  342D               	retlw	45	;'-'
   738  0758  342D               	retlw	45	;'-'
   739  0759  342D               	retlw	45	;'-'
   740  075A  342D               	retlw	45	;'-'
   741  075B  342D               	retlw	45	;'-'
   742  075C  342D               	retlw	45	;'-'
   743  075D  342D               	retlw	45	;'-'
   744  075E  3420               	retlw	32	;' '
   745  075F  340A               	retlw	10
   746  0760  340D               	retlw	13
   747  0761  3420               	retlw	32	;' '
   748  0762  3400               	retlw	0
   749  0763                     STR_11:	
   750  0763  3449               	retlw	73	;'I'
   751  0764  346E               	retlw	110	;'n'
   752  0765  3469               	retlw	105	;'i'
   753  0766  3463               	retlw	99	;'c'
   754  0767  3469               	retlw	105	;'i'
   755  0768  3461               	retlw	97	;'a'
   756  0769  346C               	retlw	108	;'l'
   757  076A  3469               	retlw	105	;'i'
   758  076B  347A               	retlw	122	;'z'
   759  076C  3461               	retlw	97	;'a'
   760  076D  346E               	retlw	110	;'n'
   761  076E  3464               	retlw	100	;'d'
   762  076F  346F               	retlw	111	;'o'
   763  0770  3420               	retlw	32	;' '
   764  0771  346F               	retlw	111	;'o'
   765  0772  3420               	retlw	32	;' '
   766  0773  3450               	retlw	80	;'P'
   767  0774  3449               	retlw	73	;'I'
   768  0775  3443               	retlw	67	;'C'
   769  0776  3431               	retlw	49	;'1'
   770  0777  3436               	retlw	54	;'6'
   771  0778  3446               	retlw	70	;'F'
   772  0779  3438               	retlw	56	;'8'
   773  077A  3437               	retlw	55	;'7'
   774  077B  3437               	retlw	55	;'7'
   775  077C  3441               	retlw	65	;'A'
   776  077D  340A               	retlw	10
   777  077E  340D               	retlw	13
   778  077F  3400               	retlw	0
   779  0780                     STR_12:	
   780  0780  3455               	retlw	85	;'U'
   781  0781  3453               	retlw	83	;'S'
   782  0782  3441               	retlw	65	;'A'
   783  0783  3452               	retlw	82	;'R'
   784  0784  3454               	retlw	84	;'T'
   785  0785  343A               	retlw	58	;':'
   786  0786  3420               	retlw	32	;' '
   787  0787  3431               	retlw	49	;'1'
   788  0788  3431               	retlw	49	;'1'
   789  0789  3435               	retlw	53	;'5'
   790  078A  342E               	retlw	46	;'.'
   791  078B  3432               	retlw	50	;'2'
   792  078C  3430               	retlw	48	;'0'
   793  078D  3430               	retlw	48	;'0'
   794  078E  3462               	retlw	98	;'b'
   795  078F  3470               	retlw	112	;'p'
   796  0790  3473               	retlw	115	;'s'
   797  0791  340A               	retlw	10
   798  0792  340D               	retlw	13
   799  0793  3400               	retlw	0
   800  0794                     STR_13:	
   801  0794  3449               	retlw	73	;'I'
   802  0795  346E               	retlw	110	;'n'
   803  0796  3469               	retlw	105	;'i'
   804  0797  3463               	retlw	99	;'c'
   805  0798  3469               	retlw	105	;'i'
   806  0799  3461               	retlw	97	;'a'
   807  079A  346C               	retlw	108	;'l'
   808  079B  3469               	retlw	105	;'i'
   809  079C  347A               	retlw	122	;'z'
   810  079D  3461               	retlw	97	;'a'
   811  079E  346E               	retlw	110	;'n'
   812  079F  3464               	retlw	100	;'d'
   813  07A0  346F               	retlw	111	;'o'
   814  07A1  342E               	retlw	46	;'.'
   815  07A2  342E               	retlw	46	;'.'
   816  07A3  342E               	retlw	46	;'.'
   817  07A4  3400               	retlw	0
   818  07A5                     STR_10:	
   819  07A5  340A               	retlw	10
   820  07A6  340D               	retlw	13
   821  07A7  3470               	retlw	112	;'p'
   822  07A8  3477               	retlw	119	;'w'
   823  07A9  346D               	retlw	109	;'m'
   824  07AA  3420               	retlw	32	;' '
   825  07AB  343D               	retlw	61	;'='
   826  07AC  3420               	retlw	32	;' '
   827  07AD  3431               	retlw	49	;'1'
   828  07AE  3430               	retlw	48	;'0'
   829  07AF  3432               	retlw	50	;'2'
   830  07B0  3433               	retlw	51	;'3'
   831  07B1  340A               	retlw	10
   832  07B2  340D               	retlw	13
   833  07B3  3400               	retlw	0
   834  07B4                     STR_8:	
   835  07B4  340A               	retlw	10
   836  07B5  340D               	retlw	13
   837  07B6  3470               	retlw	112	;'p'
   838  07B7  3477               	retlw	119	;'w'
   839  07B8  346D               	retlw	109	;'m'
   840  07B9  3420               	retlw	32	;' '
   841  07BA  343D               	retlw	61	;'='
   842  07BB  3420               	retlw	32	;' '
   843  07BC  3438               	retlw	56	;'8'
   844  07BD  3439               	retlw	57	;'9'
   845  07BE  3436               	retlw	54	;'6'
   846  07BF  340A               	retlw	10
   847  07C0  340D               	retlw	13
   848  07C1  3400               	retlw	0
   849  07C2                     STR_7:	
   850  07C2  340A               	retlw	10
   851  07C3  340D               	retlw	13
   852  07C4  3470               	retlw	112	;'p'
   853  07C5  3477               	retlw	119	;'w'
   854  07C6  346D               	retlw	109	;'m'
   855  07C7  3420               	retlw	32	;' '
   856  07C8  343D               	retlw	61	;'='
   857  07C9  3420               	retlw	32	;' '
   858  07CA  3437               	retlw	55	;'7'
   859  07CB  3436               	retlw	54	;'6'
   860  07CC  3438               	retlw	56	;'8'
   861  07CD  340A               	retlw	10
   862  07CE  340D               	retlw	13
   863  07CF  3400               	retlw	0
   864  07D0                     STR_1:	
   865  07D0  340A               	retlw	10
   866  07D1  340D               	retlw	13
   867  07D2  3464               	retlw	100	;'d'
   868  07D3  3465               	retlw	101	;'e'
   869  07D4  3473               	retlw	115	;'s'
   870  07D5  346C               	retlw	108	;'l'
   871  07D6  3469               	retlw	105	;'i'
   872  07D7  3467               	retlw	103	;'g'
   873  07D8  3461               	retlw	97	;'a'
   874  07D9  3464               	retlw	100	;'d'
   875  07DA  346F               	retlw	111	;'o'
   876  07DB  340A               	retlw	10
   877  07DC  340D               	retlw	13
   878  07DD  3400               	retlw	0
   879  07DE                     STR_2:	
   880  07DE  340A               	retlw	10
   881  07DF  340D               	retlw	13
   882  07E0  3470               	retlw	112	;'p'
   883  07E1  3477               	retlw	119	;'w'
   884  07E2  346D               	retlw	109	;'m'
   885  07E3  3420               	retlw	32	;' '
   886  07E4  343D               	retlw	61	;'='
   887  07E5  3420               	retlw	32	;' '
   888  07E6  340A               	retlw	10
   889  07E7  340D               	retlw	13
   890  07E8  3400               	retlw	0
   891  07E9                     STR_18:	
   892  07E9  3444               	retlw	68	;'D'
   893  07EA  3465               	retlw	101	;'e'
   894  07EB  346C               	retlw	108	;'l'
   895  07EC  3474               	retlw	116	;'t'
   896  07ED  3461               	retlw	97	;'a'
   897  07EE  343A               	retlw	58	;':'
   898  07EF  3420               	retlw	32	;' '
   899  07F0  3400               	retlw	0
   900  07F1                     STR_17:	
   901  07F1  3452               	retlw	82	;'R'
   902  07F2  3450               	retlw	80	;'P'
   903  07F3  344D               	retlw	77	;'M'
   904  07F4  343A               	retlw	58	;':'
   905  07F5  3420               	retlw	32	;' '
   906  07F6  3400               	retlw	0
   907  07F7                     STR_14:	
   908  07F7  3425               	retlw	37	;'%'
   909  07F8  3430               	retlw	48	;'0'
   910  07F9  3434               	retlw	52	;'4'
   911  07FA  3464               	retlw	100	;'d'
   912  07FB  3400               	retlw	0
   913  07FC                     __end_of__stringdata:	
   914                           
   915                           ; #config settings
   916  0000                     
   917                           	psect	cinit
   918  0019                     start_initialization:	
   919  0019                     __initialization:	
   920                           
   921                           ; Clear objects allocated to BANK1
   922  0019  1383               	bcf	3,7	;select IRP bank0
   923  001A  30A0               	movlw	low __pbssBANK1
   924  001B  0084               	movwf	4
   925  001C  30C8               	movlw	low (__pbssBANK1+40)
   926  001D  160A  118A  2028  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to BANK3
   929  0022  1783               	bsf	3,7	;select IRP bank2
   930  0023  3090               	movlw	low __pbssBANK3
   931  0024  0084               	movwf	4
   932  0025  30B4               	movlw	low (__pbssBANK3+36)
   933  0026  160A  118A  2028  120A  118A  	fcall	clear_ram0
   934                           
   935                           ; Initialize objects allocated to BANK3
   936  002B  1683               	bsf	3,5	;RP0=1, select bank3
   937  002C  1703               	bsf	3,6	;RP1=1, select bank3
   938  002D  120A  118A  27FC  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   939  0032  00BF               	movwf	__pdataBANK3& (0+127)
   940  0033  120A  118A  27FD  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   941  0038  00C0               	movwf	(__pdataBANK3+1)& (0+127)
   942  0039  120A  118A  27FE  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   943  003E  00C1               	movwf	(__pdataBANK3+2)& (0+127)
   944                           
   945                           ; Initialize objects allocated to BANK1
   946  003F  1683               	bsf	3,5	;RP0=1, select bank1
   947  0040  1303               	bcf	3,6	;RP1=0, select bank1
   948  0041  160A  118A  2008  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   949  0046  00E6               	movwf	__pdataBANK1& (0+127)
   950  0047  160A  118A  2009   	fcall	__pidataBANK1+1	;fetch initializer
   951  004A  00E7               	movwf	(__pdataBANK1+1)& (0+127)
   952  004B                     end_of_initialization:	
   953                           ;End of C runtime variable initialization code
   954                           
   955  004B                     __end_of__initialization:	
   956  004B  0183               	clrf	3
   957  004C  120A  158A  297A   	ljmp	_main	;jump to C main() function
   958                           
   959                           	psect	bssBANK1
   960  00A0                     __pbssBANK1:	
   961  00A0                     _fitemp:	
   962  00A0                     	ds	3
   963  00A3                     _fop_rule1:	
   964  00A3                     	ds	3
   965  00A6                     _fop_rule2:	
   966  00A6                     	ds	3
   967  00A9                     _fop_rule3:	
   968  00A9                     	ds	3
   969  00AC                     _sum:	
   970  00AC                     	ds	3
   971  00AF                     _temp:	
   972  00AF                     	ds	3
   973  00B2                     _tf:	
   974  00B2                     	ds	3
   975  00B5                     _total_area:	
   976  00B5                     	ds	3
   977  00B8                     _x:	
   978  00B8                     	ds	3
   979  00BB                     _y:	
   980  00BB                     	ds	3
   981  00BE                     _contagens_tm0:	
   982  00BE                     	ds	2
   983  00C0                     _deltaV:	
   984  00C0                     	ds	2
   985  00C2                     _pulsos:	
   986  00C2                     	ds	2
   987  00C4                     _pwm:	
   988  00C4                     	ds	2
   989  00C6                     _rpm:	
   990  00C6                     	ds	2
   991                           
   992                           	psect	dataBANK1
   993  00E6                     __pdataBANK1:	
   994  00E6                     _pas_cooler:	
   995  00E6                     	ds	2
   996                           
   997                           	psect	bssBANK3
   998  0190                     __pbssBANK3:	
   999  0190                     _ativa_fan:	
  1000  0190                     	ds	3
  1001  0193                     _derro:	
  1002  0193                     	ds	3
  1003  0196                     _ADCResult:	
  1004  0196                     	ds	2
  1005  0198                     _contador_rb6:	
  1006  0198                     	ds	2
  1007  019A                     _status:	
  1008  019A                     	ds	2
  1009  019C                     _temp_lida:	
  1010  019C                     	ds	2
  1011  019E                     _tempo_rb6:	
  1012  019E                     	ds	2
  1013  01A0                     _display_pwm:	
  1014  01A0                     	ds	10
  1015  01AA                     _display_rpm:	
  1016  01AA                     	ds	10
  1017                           
  1018                           	psect	dataBANK3
  1019  01BF                     __pdataBANK3:	
  1020  01BF                     _setpoint:	
  1021  01BF                     	ds	3
  1022                           
  1023                           	psect	clrtext
  1024  1028                     clear_ram0:	
  1025                           ;	Called with FSR containing the base address, and
  1026                           ;	W with the last address+1
  1027                           
  1028  1028  0064               	clrwdt	;clear the watchdog before getting into this loop
  1029  1029                     clrloop0:	
  1030  1029  0180               	clrf	0	;clear RAM location pointed to by FSR
  1031  102A  0A84               	incf	4,f	;increment pointer
  1032  102B  0604               	xorwf	4,w	;XOR with final address
  1033  102C  1903               	btfsc	3,2	;have we reached the end yet?
  1034  102D  3400               	retlw	0	;all done for this memory range, return
  1035  102E  0604               	xorwf	4,w	;XOR again to restore value
  1036  102F  2829               	goto	clrloop0	;do the next byte
  1037                           
  1038                           	psect	cstackBANK3
  1039  01B4                     __pcstackBANK3:	
  1040  01B4                     sprintf@ap:	
  1041                           
  1042                           ; 1 bytes @ 0x0
  1043  01B4                     	ds	1
  1044  01B5                     sprintf@prec:	
  1045                           
  1046                           ; 1 bytes @ 0x1
  1047  01B5                     	ds	1
  1048  01B6                     sprintf@_val:	
  1049                           
  1050                           ; 4 bytes @ 0x2
  1051  01B6                     	ds	4
  1052  01BA                     sprintf@flag:	
  1053                           
  1054                           ; 1 bytes @ 0x6
  1055  01BA                     	ds	1
  1056  01BB                     sprintf@width:	
  1057                           
  1058                           ; 2 bytes @ 0x7
  1059  01BB                     	ds	2
  1060  01BD                     sprintf@sp:	
  1061                           
  1062                           ; 1 bytes @ 0x9
  1063  01BD                     	ds	1
  1064  01BE                     sprintf@c:	
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067  01BE                     	ds	1
  1068                           
  1069                           	psect	cstackBANK1
  1070  00C8                     __pcstackBANK1:	
  1071  00C8                     ??_ISR:	
  1072                           
  1073                           ; 0 bytes @ 0x0
  1074  00C8                     	ds	4
  1075  00CC                     ?_PWM_DutyCycle2:	
  1076  00CC                     ??_TIMER0_Set:	
  1077                           ; 0 bytes @ 0x4
  1078                           
  1079  00CC                     ??_TIMER0_Init:	
  1080                           ; 0 bytes @ 0x4
  1081                           
  1082  00CC                     ??_ADC_Init:	
  1083                           ; 0 bytes @ 0x4
  1084                           
  1085  00CC                     ??_PWM_Init:	
  1086                           ; 0 bytes @ 0x4
  1087                           
  1088  00CC                     ?_LCD_Cursor:	
  1089                           ; 0 bytes @ 0x4
  1090                           
  1091  00CC                     ?_PWM_DutyCycle1:	
  1092                           ; 0 bytes @ 0x4
  1093                           
  1094  00CC                     ??_isdigit:	
  1095                           ; 0 bytes @ 0x4
  1096                           
  1097  00CC                     ??_USART_WriteChar:	
  1098                           ; 0 bytes @ 0x4
  1099                           
  1100  00CC                     ??_LCD_WriteCmd:	
  1101                           ; 0 bytes @ 0x4
  1102                           
  1103  00CC                     ??_LCD_WriteData:	
  1104                           ; 0 bytes @ 0x4
  1105                           
  1106  00CC                     ?___wmul:	
  1107                           ; 0 bytes @ 0x4
  1108                           
  1109  00CC                     ?___lwdiv:	
  1110                           ; 2 bytes @ 0x4
  1111                           
  1112  00CC                     ?___aldiv:	
  1113                           ; 2 bytes @ 0x4
  1114                           
  1115  00CC                     USART_WriteChar@byte:	
  1116                           ; 4 bytes @ 0x4
  1117                           
  1118  00CC                     TIMER0_Set@contagens:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  00CC                     LCD_Cursor@Col:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124  00CC                     _isdigit$1449:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127  00CC                     PWM_DutyCycle1@valor:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  00CC                     PWM_DutyCycle2@valor:	
  1131                           ; 2 bytes @ 0x4
  1132                           
  1133  00CC                     ___wmul@multiplier:	
  1134                           ; 2 bytes @ 0x4
  1135                           
  1136  00CC                     ___lwdiv@divisor:	
  1137                           ; 2 bytes @ 0x4
  1138                           
  1139  00CC                     ___aldiv@divisor:	
  1140                           ; 2 bytes @ 0x4
  1141                           
  1142                           
  1143                           ; 4 bytes @ 0x4
  1144  00CC                     	ds	1
  1145  00CD                     ?_USART_WriteString:	
  1146  00CD                     ??_LCD_Cursor:	
  1147                           ; 0 bytes @ 0x5
  1148                           
  1149  00CD                     LCD_WriteCmd@Byte:	
  1150                           ; 0 bytes @ 0x5
  1151                           
  1152  00CD                     LCD_WriteData@Byte:	
  1153                           ; 1 bytes @ 0x5
  1154                           
  1155  00CD                     isdigit@c:	
  1156                           ; 1 bytes @ 0x5
  1157                           
  1158  00CD                     USART_WriteString@str:	
  1159                           ; 1 bytes @ 0x5
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x5
  1163  00CD                     	ds	1
  1164  00CE                     ??_PWM_DutyCycle2:	
  1165  00CE                     ??_LCD_Init:	
  1166                           ; 0 bytes @ 0x6
  1167                           
  1168  00CE                     ?_LCD_WriteString:	
  1169                           ; 0 bytes @ 0x6
  1170                           
  1171  00CE                     ??_PWM_DutyCycle1:	
  1172                           ; 0 bytes @ 0x6
  1173                           
  1174  00CE                     ??_LCD_Clear:	
  1175                           ; 0 bytes @ 0x6
  1176                           
  1177  00CE                     LCD_Cursor@Row:	
  1178                           ; 0 bytes @ 0x6
  1179                           
  1180  00CE                     LCD_WriteString@Str:	
  1181                           ; 1 bytes @ 0x6
  1182                           
  1183  00CE                     ___wmul@multiplicand:	
  1184                           ; 2 bytes @ 0x6
  1185                           
  1186  00CE                     ___lwdiv@dividend:	
  1187                           ; 2 bytes @ 0x6
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x6
  1191  00CE                     	ds	1
  1192  00CF                     ??_USART_WriteString:	
  1193                           
  1194                           ; 0 bytes @ 0x7
  1195  00CF                     	ds	1
  1196  00D0                     ??_LCD_WriteString:	
  1197  00D0                     ??___wmul:	
  1198                           ; 0 bytes @ 0x8
  1199                           
  1200  00D0                     ??___lwdiv:	
  1201                           ; 0 bytes @ 0x8
  1202                           
  1203  00D0                     ___wmul@product:	
  1204                           ; 0 bytes @ 0x8
  1205                           
  1206  00D0                     ___aldiv@dividend:	
  1207                           ; 2 bytes @ 0x8
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x8
  1211  00D0                     	ds	1
  1212  00D1                     ___lwdiv@counter:	
  1213                           
  1214                           ; 1 bytes @ 0x9
  1215  00D1                     	ds	1
  1216  00D2                     ___lwdiv@quotient:	
  1217                           
  1218                           ; 2 bytes @ 0xA
  1219  00D2                     	ds	2
  1220  00D4                     ??___aldiv:	
  1221  00D4                     ?___lwmod:	
  1222                           ; 0 bytes @ 0xC
  1223                           
  1224  00D4                     ___lwmod@divisor:	
  1225                           ; 2 bytes @ 0xC
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0xC
  1229  00D4                     	ds	1
  1230  00D5                     ___aldiv@counter:	
  1231                           
  1232                           ; 1 bytes @ 0xD
  1233  00D5                     	ds	1
  1234  00D6                     ___aldiv@sign:	
  1235  00D6                     ___lwmod@dividend:	
  1236                           ; 1 bytes @ 0xE
  1237                           
  1238                           
  1239                           ; 2 bytes @ 0xE
  1240  00D6                     	ds	1
  1241  00D7                     ___aldiv@quotient:	
  1242                           
  1243                           ; 4 bytes @ 0xF
  1244  00D7                     	ds	1
  1245  00D8                     ??___lwmod:	
  1246                           
  1247                           ; 0 bytes @ 0x10
  1248  00D8                     	ds	1
  1249  00D9                     ___lwmod@counter:	
  1250                           
  1251                           ; 1 bytes @ 0x11
  1252  00D9                     	ds	1
  1253  00DA                     ?_sprintf:	
  1254  00DA                     sprintf@f:	
  1255                           ; 2 bytes @ 0x12
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x12
  1259  00DA                     	ds	1
  1260  00DB                     ?_USART_Init:	
  1261  00DB                     USART_Init@BaudRate:	
  1262                           ; 0 bytes @ 0x13
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x13
  1266  00DB                     	ds	2
  1267  00DD                     ??_sprintf:	
  1268                           
  1269                           ; 0 bytes @ 0x15
  1270  00DD                     	ds	2
  1271  00DF                     ??_USART_Init:	
  1272                           
  1273                           ; 0 bytes @ 0x17
  1274  00DF                     	ds	4
  1275  00E3                     ??_main:	
  1276                           
  1277                           ; 0 bytes @ 0x1B
  1278  00E3                     	ds	3
  1279                           
  1280                           	psect	cstackCOMMON
  1281  0070                     __pcstackCOMMON:	
  1282  0070                     ?_TIMER0_Set:	
  1283  0070                     ?_TIMER0_Init:	
  1284                           ; 0 bytes @ 0x0
  1285                           
  1286  0070                     ?_ADC_Init:	
  1287                           ; 0 bytes @ 0x0
  1288                           
  1289  0070                     ?_PWM_Init:	
  1290                           ; 0 bytes @ 0x0
  1291                           
  1292  0070                     ?_LCD_Init:	
  1293                           ; 0 bytes @ 0x0
  1294                           
  1295  0070                     ?_LCD_Clear:	
  1296                           ; 0 bytes @ 0x0
  1297                           
  1298  0070                     ?_isdigit:	
  1299                           ; 0 bytes @ 0x0
  1300                           
  1301  0070                     ?_Fuzzy:	
  1302                           ; 1 bit 
  1303                           
  1304  0070                     ?_ISR:	
  1305                           ; 0 bytes @ 0x0
  1306                           
  1307  0070                     ?_main:	
  1308                           ; 0 bytes @ 0x0
  1309                           
  1310  0070                     ?_USART_WriteChar:	
  1311                           ; 0 bytes @ 0x0
  1312                           
  1313  0070                     ?_LCD_WriteCmd:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ?_LCD_WriteData:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?___ftge:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?i1_USART_WriteChar:	
  1323                           ; 1 bit 
  1324                           
  1325  0070                     ??i1_USART_WriteChar:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?i1_TIMER0_Set:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ??i1_TIMER0_Set:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?i1_PWM_DutyCycle2:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_USART_ReceiveChar:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?i1___lwdiv:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?___ftpack:	
  1344                           ; 2 bytes @ 0x0
  1345                           
  1346  0070                     ?___ftneg:	
  1347                           ; 3 bytes @ 0x0
  1348                           
  1349  0070                     ?___fttol:	
  1350                           ; 3 bytes @ 0x0
  1351                           
  1352  0070                     i1USART_WriteChar@byte:	
  1353                           ; 4 bytes @ 0x0
  1354                           
  1355  0070                     i1TIMER0_Set@contagens:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     i1PWM_DutyCycle2@valor:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     i1___lwdiv@divisor:	
  1362                           ; 2 bytes @ 0x0
  1363                           
  1364  0070                     ___ftpack@arg:	
  1365                           ; 2 bytes @ 0x0
  1366                           
  1367  0070                     ___ftge@ff1:	
  1368                           ; 3 bytes @ 0x0
  1369                           
  1370  0070                     ___ftneg@f1:	
  1371                           ; 3 bytes @ 0x0
  1372                           
  1373  0070                     ___fttol@f1:	
  1374                           ; 3 bytes @ 0x0
  1375                           
  1376                           
  1377                           ; 3 bytes @ 0x0
  1378  0070                     	ds	1
  1379  0071                     ?i1_USART_WriteString:	
  1380  0071                     i1USART_WriteString@str:	
  1381                           ; 0 bytes @ 0x1
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x1
  1385  0071                     	ds	1
  1386  0072                     ??i1_PWM_DutyCycle2:	
  1387  0072                     i1___lwdiv@dividend:	
  1388                           ; 0 bytes @ 0x2
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0x2
  1392  0072                     	ds	1
  1393  0073                     ??_USART_ReceiveChar:	
  1394  0073                     ??___ftneg:	
  1395                           ; 0 bytes @ 0x3
  1396                           
  1397  0073                     ??i1_USART_WriteString:	
  1398                           ; 0 bytes @ 0x3
  1399                           
  1400  0073                     ___ftpack@exp:	
  1401                           ; 0 bytes @ 0x3
  1402                           
  1403  0073                     ___ftge@ff2:	
  1404                           ; 1 bytes @ 0x3
  1405                           
  1406                           
  1407                           ; 3 bytes @ 0x3
  1408  0073                     	ds	1
  1409  0074                     ??___fttol:	
  1410  0074                     ??i1___lwdiv:	
  1411                           ; 0 bytes @ 0x4
  1412                           
  1413  0074                     USART_ReceiveChar@byte:	
  1414                           ; 0 bytes @ 0x4
  1415                           
  1416  0074                     ___ftpack@sign:	
  1417                           ; 1 bytes @ 0x4
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x4
  1421  0074                     	ds	1
  1422  0075                     ??___ftpack:	
  1423  0075                     i1___lwdiv@quotient:	
  1424                           ; 0 bytes @ 0x5
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x5
  1428  0075                     	ds	1
  1429  0076                     ??___ftge:	
  1430                           
  1431                           ; 0 bytes @ 0x6
  1432  0076                     	ds	1
  1433  0077                     i1___lwdiv@counter:	
  1434                           
  1435                           ; 1 bytes @ 0x7
  1436  0077                     	ds	1
  1437  0078                     ?i1___wmul:	
  1438  0078                     ?___ftmul:	
  1439                           ; 2 bytes @ 0x8
  1440                           
  1441  0078                     ?___lwtoft:	
  1442                           ; 3 bytes @ 0x8
  1443                           
  1444  0078                     ___fttol@sign1:	
  1445                           ; 3 bytes @ 0x8
  1446                           
  1447  0078                     ___lwtoft@c:	
  1448                           ; 1 bytes @ 0x8
  1449                           
  1450  0078                     i1___wmul@multiplier:	
  1451                           ; 2 bytes @ 0x8
  1452                           
  1453  0078                     ___ftmul@f1:	
  1454                           ; 2 bytes @ 0x8
  1455                           
  1456                           
  1457                           ; 3 bytes @ 0x8
  1458  0078                     	ds	1
  1459  0079                     ___fttol@lval:	
  1460                           
  1461                           ; 4 bytes @ 0x9
  1462  0079                     	ds	1
  1463  007A                     i1___wmul@multiplicand:	
  1464                           
  1465                           ; 2 bytes @ 0xA
  1466  007A                     	ds	1
  1467  007B                     ??___lwtoft:	
  1468  007B                     ___ftmul@f2:	
  1469                           ; 0 bytes @ 0xB
  1470                           
  1471                           
  1472                           ; 3 bytes @ 0xB
  1473  007B                     	ds	1
  1474  007C                     ??_max_val:	
  1475  007C                     ??i1___wmul:	
  1476                           ; 0 bytes @ 0xC
  1477                           
  1478  007C                     i1___wmul@product:	
  1479                           ; 0 bytes @ 0xC
  1480                           
  1481                           
  1482                           ; 2 bytes @ 0xC
  1483  007C                     	ds	1
  1484  007D                     ___fttol@exp1:	
  1485                           
  1486                           ; 1 bytes @ 0xD
  1487  007D                     	ds	1
  1488  007E                     ??_trimf:	
  1489  007E                     ??_trapmf:	
  1490                           ; 0 bytes @ 0xE
  1491                           
  1492  007E                     ??_Fuzzy:	
  1493                           ; 0 bytes @ 0xE
  1494                           
  1495                           
  1496                           	psect	cstackBANK0
  1497  0020                     __pcstackBANK0:	
  1498                           ; 0 bytes @ 0xE
  1499                           
  1500  0020                     ??___ftmul:	
  1501  0020                     ?_max_val:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0020                     max_val@a:	
  1505                           ; 3 bytes @ 0x0
  1506                           
  1507                           
  1508                           ; 3 bytes @ 0x0
  1509  0020                     	ds	3
  1510  0023                     max_val@b:	
  1511                           
  1512                           ; 3 bytes @ 0x3
  1513  0023                     	ds	1
  1514  0024                     ___ftmul@exp:	
  1515                           
  1516                           ; 1 bytes @ 0x4
  1517  0024                     	ds	1
  1518  0025                     ___ftmul@f3_as_product:	
  1519                           
  1520                           ; 3 bytes @ 0x5
  1521  0025                     	ds	3
  1522  0028                     ___ftmul@cntr:	
  1523                           
  1524                           ; 1 bytes @ 0x8
  1525  0028                     	ds	1
  1526  0029                     ___ftmul@sign:	
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529  0029                     	ds	1
  1530  002A                     ?___ftadd:	
  1531  002A                     ___ftadd@f1:	
  1532                           ; 3 bytes @ 0xA
  1533                           
  1534                           
  1535                           ; 3 bytes @ 0xA
  1536  002A                     	ds	3
  1537  002D                     ___ftadd@f2:	
  1538                           
  1539                           ; 3 bytes @ 0xD
  1540  002D                     	ds	3
  1541  0030                     ??___ftadd:	
  1542                           
  1543                           ; 0 bytes @ 0x10
  1544  0030                     	ds	4
  1545  0034                     ___ftadd@sign:	
  1546                           
  1547                           ; 1 bytes @ 0x14
  1548  0034                     	ds	1
  1549  0035                     ___ftadd@exp2:	
  1550                           
  1551                           ; 1 bytes @ 0x15
  1552  0035                     	ds	1
  1553  0036                     ___ftadd@exp1:	
  1554                           
  1555                           ; 1 bytes @ 0x16
  1556  0036                     	ds	1
  1557  0037                     ?___ftdiv:	
  1558  0037                     ___ftdiv@f2:	
  1559                           ; 3 bytes @ 0x17
  1560                           
  1561                           
  1562                           ; 3 bytes @ 0x17
  1563  0037                     	ds	3
  1564  003A                     ___ftdiv@f1:	
  1565                           
  1566                           ; 3 bytes @ 0x1A
  1567  003A                     	ds	3
  1568  003D                     ??___ftdiv:	
  1569                           
  1570                           ; 0 bytes @ 0x1D
  1571  003D                     	ds	4
  1572  0041                     ___ftdiv@cntr:	
  1573                           
  1574                           ; 1 bytes @ 0x21
  1575  0041                     	ds	1
  1576  0042                     ___ftdiv@f3:	
  1577                           
  1578                           ; 3 bytes @ 0x22
  1579  0042                     	ds	3
  1580  0045                     ___ftdiv@exp:	
  1581                           
  1582                           ; 1 bytes @ 0x25
  1583  0045                     	ds	1
  1584  0046                     ___ftdiv@sign:	
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  0046                     	ds	1
  1588  0047                     ?_trimf:	
  1589  0047                     ?_trapmf:	
  1590                           ; 3 bytes @ 0x27
  1591                           
  1592  0047                     trimf@x:	
  1593                           ; 3 bytes @ 0x27
  1594                           
  1595  0047                     trapmf@x:	
  1596                           ; 3 bytes @ 0x27
  1597                           
  1598                           
  1599                           ; 3 bytes @ 0x27
  1600  0047                     	ds	3
  1601  004A                     trimf@a:	
  1602  004A                     trapmf@a:	
  1603                           ; 3 bytes @ 0x2A
  1604                           
  1605                           
  1606                           ; 3 bytes @ 0x2A
  1607  004A                     	ds	3
  1608  004D                     trimf@b:	
  1609  004D                     trapmf@b:	
  1610                           ; 3 bytes @ 0x2D
  1611                           
  1612                           
  1613                           ; 3 bytes @ 0x2D
  1614  004D                     	ds	3
  1615  0050                     trimf@c:	
  1616  0050                     trapmf@c:	
  1617                           ; 3 bytes @ 0x30
  1618                           
  1619                           
  1620                           ; 3 bytes @ 0x30
  1621  0050                     	ds	3
  1622  0053                     trimf@ua:	
  1623  0053                     trapmf@d:	
  1624                           ; 3 bytes @ 0x33
  1625                           
  1626                           
  1627                           ; 3 bytes @ 0x33
  1628  0053                     	ds	3
  1629  0056                     trapmf@ua:	
  1630                           
  1631                           ; 3 bytes @ 0x36
  1632  0056                     	ds	3
  1633  0059                     Fuzzy@a:	
  1634                           
  1635                           ; 2 bytes @ 0x39
  1636  0059                     	ds	2
  1637  005B                     Fuzzy@a_232:	
  1638                           
  1639                           ; 2 bytes @ 0x3B
  1640  005B                     	ds	2
  1641  005D                     Fuzzy@a_233:	
  1642                           
  1643                           ; 2 bytes @ 0x3D
  1644  005D                     	ds	2
  1645  005F                     Fuzzy@a_234:	
  1646                           
  1647                           ; 2 bytes @ 0x3F
  1648  005F                     	ds	2
  1649  0061                     Fuzzy@a_235:	
  1650                           
  1651                           ; 2 bytes @ 0x41
  1652  0061                     	ds	2
  1653  0063                     Fuzzy@tip:	
  1654                           
  1655                           ; 3 bytes @ 0x43
  1656  0063                     	ds	3
  1657  0066                     Fuzzy@mantem:	
  1658                           
  1659                           ; 3 bytes @ 0x46
  1660  0066                     	ds	3
  1661  0069                     Fuzzy@reduz:	
  1662                           
  1663                           ; 3 bytes @ 0x49
  1664  0069                     	ds	3
  1665  006C                     Fuzzy@aumenta:	
  1666                           
  1667                           ; 3 bytes @ 0x4C
  1668  006C                     	ds	3
  1669                           
  1670                           	psect	maintext
  1671  097A                     __pmaintext:	
  1672 ;;
  1673 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1674 ;;
  1675 ;; *************** function _main *****************
  1676 ;; Defined at:
  1677 ;;		line 470 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 17F/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       3       0       0
  1694 ;;      Totals:         0       0       3       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels required when called:    7
  1697 ;; This function calls:
  1698 ;;		_ADC_Init
  1699 ;;		_LCD_Clear
  1700 ;;		_LCD_Cursor
  1701 ;;		_LCD_Init
  1702 ;;		_LCD_WriteString
  1703 ;;		_PWM_DutyCycle1
  1704 ;;		_PWM_DutyCycle2
  1705 ;;		_PWM_Init
  1706 ;;		_TIMER0_Init
  1707 ;;		_TIMER0_Set
  1708 ;;		_USART_Init
  1709 ;;		_USART_WriteString
  1710 ;;		_sprintf
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _main
  1718  097A                     _main:	
  1719                           
  1720                           ;main.c: 472: TRISA = 0b00000001;
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1724  097A  3001               	movlw	1
  1725  097B  1683               	bsf	3,5	;RP0=1, select bank1
  1726  097C  1303               	bcf	3,6	;RP1=0, select bank1
  1727  097D  0085               	movwf	5	;volatile
  1728                           
  1729                           ;main.c: 473: PORTA = 0b00000001;
  1730  097E  3001               	movlw	1
  1731  097F  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0980  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0981  0085               	movwf	5	;volatile
  1734                           
  1735                           ;main.c: 474: TRISB = 0b00000000;
  1736  0982  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0983  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0984  0186               	clrf	6	;volatile
  1739                           
  1740                           ;main.c: 475: PORTB = 0b00000000;
  1741  0985  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0986  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0987  0186               	clrf	6	;volatile
  1744                           
  1745                           ;main.c: 476: TRISC = 0b10000001;
  1746  0988  3081               	movlw	129
  1747  0989  1683               	bsf	3,5	;RP0=1, select bank1
  1748  098A  1303               	bcf	3,6	;RP1=0, select bank1
  1749  098B  0087               	movwf	7	;volatile
  1750                           
  1751                           ;main.c: 477: PORTC = 0b11000000;
  1752  098C  30C0               	movlw	192
  1753  098D  1283               	bcf	3,5	;RP0=0, select bank0
  1754  098E  1303               	bcf	3,6	;RP1=0, select bank0
  1755  098F  0087               	movwf	7	;volatile
  1756                           
  1757                           ;main.c: 478: TRISD = 0b00000000;
  1758  0990  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0991  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0992  0188               	clrf	8	;volatile
  1761                           
  1762                           ;main.c: 479: PORTD = 0b00000000;
  1763  0993  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0994  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0995  0188               	clrf	8	;volatile
  1766                           
  1767                           ;main.c: 480: TRISE = 0b00000000;
  1768  0996  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0997  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0998  0189               	clrf	9	;volatile
  1771                           
  1772                           ;main.c: 481: PORTE = 0b00000000;
  1773  0999  1283               	bcf	3,5	;RP0=0, select bank0
  1774  099A  1303               	bcf	3,6	;RP1=0, select bank0
  1775  099B  0189               	clrf	9	;volatile
  1776                           
  1777                           ;main.c: 484: T1CON = 0x03;
  1778  099C  3003               	movlw	3
  1779  099D  0090               	movwf	16	;volatile
  1780                           
  1781                           ;main.c: 485: TMR1L = 0x00;
  1782  099E  018E               	clrf	14	;volatile
  1783                           
  1784                           ;main.c: 486: TMR1H = 0x00;
  1785  099F  018F               	clrf	15	;volatile
  1786                           
  1787                           ;main.c: 489: USART_Init(115200);
  1788  09A0  3000               	movlw	0
  1789  09A1  1683               	bsf	3,5	;RP0=1, select bank1
  1790  09A2  1303               	bcf	3,6	;RP1=0, select bank1
  1791  09A3  00DE               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1792  09A4  3001               	movlw	1
  1793  09A5  00DD               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1794  09A6  30C2               	movlw	194
  1795  09A7  00DC               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1796  09A8  3000               	movlw	0
  1797  09A9  00DB               	movwf	USART_Init@BaudRate^(0+128)
  1798  09AA  120A  158A  200D  120A  158A  	fcall	_USART_Init
  1799                           
  1800                           ;main.c: 490: TIMER0_Init();
  1801  09AF  160A  118A  2030  120A  158A  	fcall	_TIMER0_Init
  1802                           
  1803                           ;main.c: 491: ADC_Init();
  1804  09B4  160A  118A  204B  120A  158A  	fcall	_ADC_Init
  1805                           
  1806                           ;main.c: 492: PWM_Init();
  1807  09B9  160A  118A  219B  120A  158A  	fcall	_PWM_Init
  1808                           
  1809                           ;main.c: 493: LCD_Init();
  1810  09BE  160A  118A  23E8  120A  158A  	fcall	_LCD_Init
  1811                           
  1812                           ;main.c: 496: INTCONbits.PEIE = 1;
  1813  09C3  170B               	bsf	11,6	;volatile
  1814                           
  1815                           ;main.c: 497: INTCONbits.GIE = 1;
  1816  09C4  178B               	bsf	11,7	;volatile
  1817                           
  1818                           ;main.c: 500: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1819  09C5  3033               	movlw	low (STR_11-__stringbase)
  1820  09C6  1683               	bsf	3,5	;RP0=1, select bank1
  1821  09C7  1303               	bcf	3,6	;RP1=0, select bank1
  1822  09C8  00CD               	movwf	USART_WriteString@str^(0+128)
  1823  09C9  3080               	movlw	128
  1824  09CA  00CE               	movwf	(USART_WriteString@str+1)^(0+128)
  1825  09CB  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1826                           
  1827                           ;main.c: 501: USART_WriteString("USART: 115.200bps\n\r");
  1828  09D0  3050               	movlw	low (STR_12-__stringbase)
  1829  09D1  1683               	bsf	3,5	;RP0=1, select bank1
  1830  09D2  1303               	bcf	3,6	;RP1=0, select bank1
  1831  09D3  00CD               	movwf	USART_WriteString@str^(0+128)
  1832  09D4  3080               	movlw	128
  1833  09D5  00CE               	movwf	(USART_WriteString@str+1)^(0+128)
  1834  09D6  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1835                           
  1836                           ;main.c: 504: LCD_Init();
  1837  09DB  160A  118A  23E8  120A  158A  	fcall	_LCD_Init
  1838                           
  1839                           ;main.c: 505: LCD_Cursor(0,0);
  1840  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  1841  09E1  1303               	bcf	3,6	;RP1=0, select bank1
  1842  09E2  01CC               	clrf	LCD_Cursor@Col^(0+128)
  1843  09E3  3000               	movlw	0
  1844  09E4  160A  118A  20F3  120A  158A  	fcall	_LCD_Cursor
  1845                           
  1846                           ;main.c: 506: LCD_WriteString("Inicializando...");
  1847  09E9  3064               	movlw	low (STR_13-__stringbase)
  1848  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  1849  09EB  1303               	bcf	3,6	;RP1=0, select bank1
  1850  09EC  00CE               	movwf	LCD_WriteString@Str^(0+128)
  1851  09ED  3080               	movlw	128
  1852  09EE  00CF               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1853  09EF  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1854                           
  1855                           ;main.c: 509: PWM_DutyCycle1(0);
  1856  09F4  3000               	movlw	0
  1857  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  1858  09F6  1303               	bcf	3,6	;RP1=0, select bank1
  1859  09F7  00CC               	movwf	PWM_DutyCycle1@valor^(0+128)
  1860  09F8  3000               	movlw	0
  1861  09F9  00CD               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1862  09FA  160A  118A  2113  120A  158A  	fcall	_PWM_DutyCycle1
  1863                           
  1864                           ;main.c: 510: PWM_DutyCycle2(0);
  1865  09FF  3000               	movlw	0
  1866  0A00  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0A01  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0A02  00CC               	movwf	PWM_DutyCycle2@valor^(0+128)
  1869  0A03  3000               	movlw	0
  1870  0A04  00CD               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1871  0A05  160A  118A  2134  120A  158A  	fcall	_PWM_DutyCycle2
  1872                           
  1873                           ;main.c: 513: TIMER0_Set(238);
  1874  0A0A  30EE               	movlw	238
  1875  0A0B  160A  118A  2020  120A  158A  	fcall	_TIMER0_Set
  1876                           
  1877                           ;main.c: 516: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1878  0A10  3018               	movlw	24
  1879  0A11  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0A12  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0A13  00E5               	movwf	(??_main^(0+128)+2)
  1882  0A14  3061               	movlw	97
  1883  0A15  00E4               	movwf	(??_main^(0+128)+1)
  1884  0A16  306E               	movlw	110
  1885  0A17  00E3               	movwf	??_main^(0+128)
  1886  0A18                     u4527:	
  1887  0A18  0BE3               	decfsz	??_main^(0+128),f
  1888  0A19  2A18               	goto	u4527
  1889  0A1A  0BE4               	decfsz	(??_main^(0+128)+1),f
  1890  0A1B  2A18               	goto	u4527
  1891  0A1C  0BE5               	decfsz	(??_main^(0+128)+2),f
  1892  0A1D  2A18               	goto	u4527
  1893  0A1E  0000               	nop
  1894  0A1F                     l202:	
  1895                           ;main.c: 519: while(1)
  1896                           
  1897                           
  1898                           ;main.c: 520: {
  1899                           ;main.c: 524: sprintf(display_rpm,"%04d", rpm);
  1900  0A1F  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1901  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0A22  00E3               	movwf	??_main^(0+128)
  1904  0A23  0863               	movf	??_main^(0+128),w
  1905  0A24  00DA               	movwf	sprintf@f^(0+128)
  1906  0A25  0847               	movf	(_rpm+1)^(0+128),w
  1907  0A26  01DC               	clrf	((?_sprintf+1)^(0+128)+1)
  1908  0A27  07DC               	addwf	((?_sprintf+1)^(0+128)+1),f
  1909  0A28  0846               	movf	_rpm^(0+128),w
  1910  0A29  01DB               	clrf	(?_sprintf^(0+128)+1)
  1911  0A2A  07DB               	addwf	(?_sprintf^(0+128)+1),f
  1912  0A2B  30AA               	movlw	_display_rpm& (0+255)
  1913  0A2C  120A  158A  25B6  120A  158A  	fcall	_sprintf
  1914                           
  1915                           ;main.c: 525: sprintf(display_pwm,"%04d", deltaV);
  1916  0A31  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1917  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0A34  00E3               	movwf	??_main^(0+128)
  1920  0A35  0863               	movf	??_main^(0+128),w
  1921  0A36  00DA               	movwf	sprintf@f^(0+128)
  1922  0A37  0841               	movf	(_deltaV+1)^(0+128),w
  1923  0A38  01DC               	clrf	((?_sprintf+1)^(0+128)+1)
  1924  0A39  07DC               	addwf	((?_sprintf+1)^(0+128)+1),f
  1925  0A3A  0840               	movf	_deltaV^(0+128),w
  1926  0A3B  01DB               	clrf	(?_sprintf^(0+128)+1)
  1927  0A3C  07DB               	addwf	(?_sprintf^(0+128)+1),f
  1928  0A3D  30A0               	movlw	_display_pwm& (0+255)
  1929  0A3E  120A  158A  25B6  120A  158A  	fcall	_sprintf
  1930                           
  1931                           ;main.c: 529: USART_WriteString(display_rpm);
  1932  0A43  30AA               	movlw	_display_rpm& (0+255)
  1933  0A44  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0A45  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0A46  00CD               	movwf	USART_WriteString@str^(0+128)
  1936  0A47  3001               	movlw	1
  1937  0A48  00CE               	movwf	(USART_WriteString@str+1)^(0+128)
  1938  0A49  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1939                           
  1940                           ;main.c: 530: USART_WriteString("\n\r");
  1941  0A4E  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1942  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0A51  00CD               	movwf	USART_WriteString@str^(0+128)
  1945  0A52  3080               	movlw	128
  1946  0A53  00CE               	movwf	(USART_WriteString@str+1)^(0+128)
  1947  0A54  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1948                           
  1949                           ;main.c: 533: LCD_Clear();
  1950  0A59  160A  118A  21E4  120A  158A  	fcall	_LCD_Clear
  1951                           
  1952                           ;main.c: 534: LCD_Cursor(0,0);
  1953  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0A60  01CC               	clrf	LCD_Cursor@Col^(0+128)
  1956  0A61  3000               	movlw	0
  1957  0A62  160A  118A  20F3  120A  158A  	fcall	_LCD_Cursor
  1958                           
  1959                           ;main.c: 535: LCD_WriteString("RPM: ");
  1960  0A67  30C1               	movlw	low (STR_17-__stringbase)
  1961  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  1963  0A6A  00CE               	movwf	LCD_WriteString@Str^(0+128)
  1964  0A6B  3080               	movlw	128
  1965  0A6C  00CF               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1966  0A6D  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1967                           
  1968                           ;main.c: 536: LCD_Cursor(0,6);
  1969  0A72  3006               	movlw	6
  1970  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0A75  00E3               	movwf	??_main^(0+128)
  1973  0A76  0863               	movf	??_main^(0+128),w
  1974  0A77  00CC               	movwf	LCD_Cursor@Col^(0+128)
  1975  0A78  3000               	movlw	0
  1976  0A79  160A  118A  20F3  120A  158A  	fcall	_LCD_Cursor
  1977                           
  1978                           ;main.c: 537: LCD_WriteString(display_rpm);
  1979  0A7E  30AA               	movlw	_display_rpm& (0+255)
  1980  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  1981  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  1982  0A81  00CE               	movwf	LCD_WriteString@Str^(0+128)
  1983  0A82  3001               	movlw	1
  1984  0A83  00CF               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1985  0A84  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1986                           
  1987                           ;main.c: 538: LCD_Cursor(1,0);
  1988  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0A8B  01CC               	clrf	LCD_Cursor@Col^(0+128)
  1991  0A8C  3001               	movlw	1
  1992  0A8D  160A  118A  20F3  120A  158A  	fcall	_LCD_Cursor
  1993                           
  1994                           ;main.c: 539: LCD_WriteString("Delta: ");
  1995  0A92  30B9               	movlw	low (STR_18-__stringbase)
  1996  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0A95  00CE               	movwf	LCD_WriteString@Str^(0+128)
  1999  0A96  3080               	movlw	128
  2000  0A97  00CF               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2001  0A98  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  2002                           
  2003                           ;main.c: 540: LCD_Cursor(1,6);
  2004  0A9D  3006               	movlw	6
  2005  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0A9F  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0AA0  00E3               	movwf	??_main^(0+128)
  2008  0AA1  0863               	movf	??_main^(0+128),w
  2009  0AA2  00CC               	movwf	LCD_Cursor@Col^(0+128)
  2010  0AA3  3001               	movlw	1
  2011  0AA4  160A  118A  20F3  120A  158A  	fcall	_LCD_Cursor
  2012                           
  2013                           ;main.c: 541: LCD_WriteString(display_pwm);
  2014  0AA9  30A0               	movlw	_display_pwm& (0+255)
  2015  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0AAC  00CE               	movwf	LCD_WriteString@Str^(0+128)
  2018  0AAD  3001               	movlw	1
  2019  0AAE  00CF               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2020  0AAF  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  2021                           
  2022                           ;main.c: 543: _delay((unsigned long)((200)*(18432000/4000.0)));
  2023  0AB4  3005               	movlw	5
  2024  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0AB7  00E5               	movwf	(??_main^(0+128)+2)
  2027  0AB8  30AD               	movlw	173
  2028  0AB9  00E4               	movwf	(??_main^(0+128)+1)
  2029  0ABA  30E0               	movlw	224
  2030  0ABB  00E3               	movwf	??_main^(0+128)
  2031  0ABC                     u4537:	
  2032  0ABC  0BE3               	decfsz	??_main^(0+128),f
  2033  0ABD  2ABC               	goto	u4537
  2034  0ABE  0BE4               	decfsz	(??_main^(0+128)+1),f
  2035  0ABF  2ABC               	goto	u4537
  2036  0AC0  0BE5               	decfsz	(??_main^(0+128)+2),f
  2037  0AC1  2ABC               	goto	u4537
  2038  0AC2  2A1F               	goto	l202
  2039  0AC3                     __end_of_main:	
  2040                           
  2041                           	psect	text1
  2042  0DB6                     __ptext1:	
  2043 ;; *************** function _sprintf *****************
  2044 ;; Defined at:
  2045 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  sp              1    wreg     PTR unsigned char 
  2048 ;;		 -> display_pwm(10), display_rpm(10), 
  2049 ;;  f               1   18[BANK1 ] PTR const unsigned char 
  2050 ;;		 -> STR_15(5), STR_14(5), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  2053 ;;		 -> display_pwm(10), display_rpm(10), 
  2054 ;;  _val            4    2[BANK3 ] struct .
  2055 ;;  width           2    7[BANK3 ] int 
  2056 ;;  c               1   10[BANK3 ] char 
  2057 ;;  flag            1    6[BANK3 ] unsigned char 
  2058 ;;  prec            1    1[BANK3 ] char 
  2059 ;;  ap              1    0[BANK3 ] PTR void [1]
  2060 ;;		 -> ?_sprintf(2), 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  2   18[BANK1 ] int 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         0       0       3       0       0
  2071 ;;      Locals:         0       0       0      11       0
  2072 ;;      Temps:          0       0       3       0       0
  2073 ;;      Totals:         0       0       6      11       0
  2074 ;;Total ram usage:       17 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    6
  2077 ;; This function calls:
  2078 ;;		___lwdiv
  2079 ;;		___lwmod
  2080 ;;		___wmul
  2081 ;;		_isdigit
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _sprintf
  2089  0DB6                     _sprintf:	
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2093                           ;sprintf@sp stored from wreg
  2094  0DB6  1683               	bsf	3,5	;RP0=1, select bank3
  2095  0DB7  1703               	bsf	3,6	;RP1=1, select bank3
  2096  0DB8  00BD               	movwf	sprintf@sp^(0+384)
  2097                           
  2098                           ;doprnt.c: 494: va_list ap;
  2099                           ;doprnt.c: 499: signed char c;
  2100                           ;doprnt.c: 501: int width;
  2101                           ;doprnt.c: 506: signed char prec;
  2102                           ;doprnt.c: 508: unsigned char flag;
  2103                           ;doprnt.c: 527: union {
  2104                           ;doprnt.c: 528: unsigned int _val;
  2105                           ;doprnt.c: 529: struct {
  2106                           ;doprnt.c: 530: const char * _cp;
  2107                           ;doprnt.c: 531: unsigned _len;
  2108                           ;doprnt.c: 532: } _str;
  2109                           ;doprnt.c: 533: } _val;
  2110                           ;doprnt.c: 542: *ap = __va_start();
  2111  0DB9  30DB               	movlw	(?_sprintf+1)& (0+255)
  2112  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0DBC  00DD               	movwf	??_sprintf^(0+128)
  2115  0DBD  085D               	movf	??_sprintf^(0+128),w
  2116  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  2117  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  2118  0DC0  00B4               	movwf	sprintf@ap^(0+384)
  2119  0DC1                     l3538:	
  2120                           ;doprnt.c: 545: while(c = *f++) {
  2121                           
  2122  0DC1  3001               	movlw	1
  2123  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0DC4  07DA               	addwf	sprintf@f^(0+128),f
  2126  0DC5  30FF               	movlw	-1
  2127  0DC6  075A               	addwf	sprintf@f^(0+128),w
  2128  0DC7  0084               	movwf	4
  2129  0DC8  120A  118A  272B  120A  158A  	fcall	stringdir
  2130  0DCD  00DD               	movwf	??_sprintf^(0+128)
  2131  0DCE  085D               	movf	??_sprintf^(0+128),w
  2132  0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  2133  0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  2134  0DD1  00BE               	movwf	sprintf@c^(0+384)
  2135  0DD2  08BE               	movf	sprintf@c^(0+384),f
  2136  0DD3  1903               	btfsc	3,2
  2137  0DD4  2FF9               	goto	l3540
  2138                           
  2139                           ;doprnt.c: 547: if(c != '%')
  2140  0DD5  083E               	movf	sprintf@c^(0+384),w
  2141  0DD6  3A25               	xorlw	37
  2142  0DD7  1903               	skipnz
  2143  0DD8  2DED               	goto	l3442
  2144                           
  2145                           ;doprnt.c: 549: {
  2146                           ;doprnt.c: 550: ((*sp++ = (c)));
  2147  0DD9  083E               	movf	sprintf@c^(0+384),w
  2148  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0DDC  00DD               	movwf	??_sprintf^(0+128)
  2151  0DDD  1683               	bsf	3,5	;RP0=1, select bank3
  2152  0DDE  1703               	bsf	3,6	;RP1=1, select bank3
  2153  0DDF  083D               	movf	sprintf@sp^(0+384),w
  2154  0DE0  0084               	movwf	4
  2155  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0DE3  085D               	movf	??_sprintf^(0+128),w
  2158  0DE4  1783               	bsf	3,7	;select IRP bank2
  2159  0DE5  0080               	movwf	0
  2160  0DE6  3001               	movlw	1
  2161  0DE7  00DD               	movwf	??_sprintf^(0+128)
  2162  0DE8  085D               	movf	??_sprintf^(0+128),w
  2163  0DE9  1683               	bsf	3,5	;RP0=1, select bank3
  2164  0DEA  1703               	bsf	3,6	;RP1=1, select bank3
  2165  0DEB  07BD               	addwf	sprintf@sp^(0+384),f
  2166                           
  2167                           ;doprnt.c: 551: continue;
  2168  0DEC  2DC1               	goto	l3538
  2169  0DED                     l3442:	
  2170                           
  2171                           ;doprnt.c: 552: }
  2172                           ;doprnt.c: 555: width = 0;
  2173  0DED  01BB               	clrf	sprintf@width^(0+384)
  2174  0DEE  01BC               	clrf	(sprintf@width+1)^(0+384)
  2175                           
  2176                           ;doprnt.c: 557: flag = 0;
  2177  0DEF  01BA               	clrf	sprintf@flag^(0+384)
  2178                           
  2179                           ;doprnt.c: 560: switch(*f) {
  2180                           
  2181                           ;doprnt.c: 559: for(;;) {
  2182  0DF0  2DFA               	goto	l3448
  2183  0DF1                     l479:	
  2184                           ;doprnt.c: 588: case '0':
  2185                           
  2186                           
  2187                           ;doprnt.c: 589: flag |= 0x04;
  2188  0DF1  1683               	bsf	3,5	;RP0=1, select bank3
  2189  0DF2  1703               	bsf	3,6	;RP1=1, select bank3
  2190  0DF3  153A               	bsf	sprintf@flag^(0+384),2
  2191                           
  2192                           ;doprnt.c: 590: f++;
  2193  0DF4  3001               	movlw	1
  2194  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0DF7  00DD               	movwf	??_sprintf^(0+128)
  2197  0DF8  085D               	movf	??_sprintf^(0+128),w
  2198  0DF9  07DA               	addwf	sprintf@f^(0+128),f
  2199  0DFA                     l3448:	
  2200                           ;doprnt.c: 593: }
  2201                           
  2202                           ;doprnt.c: 591: continue;
  2203                           
  2204  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0DFB  085A               	movf	sprintf@f^(0+128),w
  2206  0DFC  0084               	movwf	4
  2207  0DFD  120A  118A  272B  120A  158A  	fcall	stringdir
  2208                           
  2209                           ; Switch size 1, requested type "space"
  2210                           ; Number of cases is 1, Range of values is 48 to 48
  2211                           ; switch strategies available:
  2212                           ; Name         Instructions Cycles
  2213                           ; simple_byte            4     3 (average)
  2214                           ; direct_byte           14    11 (fixed)
  2215                           ; jumptable            263     9 (fixed)
  2216                           ;	Chosen strategy is simple_byte
  2217  0E02  3A30               	xorlw	48	; case 48
  2218  0E03  1903               	skipnz
  2219  0E04  2DF1               	goto	l479
  2220  0E05  2E06               	goto	l3450
  2221  0E06                     l3450:	
  2222                           ;doprnt.c: 595: }
  2223                           
  2224                           ;doprnt.c: 594: break;
  2225                           
  2226                           
  2227                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2228  0E06  085A               	movf	sprintf@f^(0+128),w
  2229  0E07  0084               	movwf	4
  2230  0E08  120A  118A  272B  120A  158A  	fcall	stringdir
  2231  0E0D  160A  118A  203B  120A  158A  	fcall	_isdigit
  2232  0E12  1C03               	btfss	3,0
  2233  0E13  2E6E               	goto	l3464
  2234                           
  2235                           ;doprnt.c: 607: width = 0;
  2236  0E14  1683               	bsf	3,5	;RP0=1, select bank3
  2237  0E15  1703               	bsf	3,6	;RP1=1, select bank3
  2238  0E16  01BB               	clrf	sprintf@width^(0+384)
  2239  0E17  01BC               	clrf	(sprintf@width+1)^(0+384)
  2240  0E18                     l3454:	
  2241                           ;doprnt.c: 608: do {
  2242                           
  2243                           
  2244                           ;doprnt.c: 609: width *= 10;
  2245  0E18  300A               	movlw	10
  2246  0E19  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0E1B  00CC               	movwf	___wmul@multiplier^(0+128)
  2249  0E1C  3000               	movlw	0
  2250  0E1D  00CD               	movwf	(___wmul@multiplier^(0+128)+1)
  2251  0E1E  1683               	bsf	3,5	;RP0=1, select bank3
  2252  0E1F  1703               	bsf	3,6	;RP1=1, select bank3
  2253  0E20  083C               	movf	(sprintf@width+1)^(0+384),w
  2254  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0E23  01CF               	clrf	(___wmul@multiplicand+1)^(0+128)
  2257  0E24  07CF               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2258  0E25  1683               	bsf	3,5	;RP0=1, select bank3
  2259  0E26  1703               	bsf	3,6	;RP1=1, select bank3
  2260  0E27  083B               	movf	sprintf@width^(0+384),w
  2261  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0E2A  01CE               	clrf	___wmul@multiplicand^(0+128)
  2264  0E2B  07CE               	addwf	___wmul@multiplicand^(0+128),f
  2265  0E2C  160A  118A  21BF  120A  158A  	fcall	___wmul
  2266  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0E33  084D               	movf	(?___wmul+1)^(0+128),w
  2269  0E34  1683               	bsf	3,5	;RP0=1, select bank3
  2270  0E35  1703               	bsf	3,6	;RP1=1, select bank3
  2271  0E36  01BC               	clrf	(sprintf@width+1)^(0+384)
  2272  0E37  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2273  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2274  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2275  0E3A  084C               	movf	?___wmul^(0+128),w
  2276  0E3B  1683               	bsf	3,5	;RP0=1, select bank3
  2277  0E3C  1703               	bsf	3,6	;RP1=1, select bank3
  2278  0E3D  01BB               	clrf	sprintf@width^(0+384)
  2279  0E3E  07BB               	addwf	sprintf@width^(0+384),f
  2280                           
  2281                           ;doprnt.c: 610: width += *f++ - '0';
  2282  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0E41  085A               	movf	sprintf@f^(0+128),w
  2285  0E42  0084               	movwf	4
  2286  0E43  120A  118A  272B  120A  158A  	fcall	stringdir
  2287  0E48  3ED0               	addlw	208
  2288  0E49  00DD               	movwf	??_sprintf^(0+128)
  2289  0E4A  30FF               	movlw	255
  2290  0E4B  1803               	skipnc
  2291  0E4C  3000               	movlw	0
  2292  0E4D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2293  0E4E  085D               	movf	??_sprintf^(0+128),w
  2294  0E4F  1683               	bsf	3,5	;RP0=1, select bank3
  2295  0E50  1703               	bsf	3,6	;RP1=1, select bank3
  2296  0E51  07BB               	addwf	sprintf@width^(0+384),f
  2297  0E52  1803               	skipnc
  2298  0E53  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2299  0E54  1683               	bsf	3,5	;RP0=1, select bank1
  2300  0E55  1303               	bcf	3,6	;RP1=0, select bank1
  2301  0E56  085E               	movf	(??_sprintf+1)^(0+128),w
  2302  0E57  1683               	bsf	3,5	;RP0=1, select bank3
  2303  0E58  1703               	bsf	3,6	;RP1=1, select bank3
  2304  0E59  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2305  0E5A  3001               	movlw	1
  2306  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0E5D  00DD               	movwf	??_sprintf^(0+128)
  2309  0E5E  085D               	movf	??_sprintf^(0+128),w
  2310  0E5F  07DA               	addwf	sprintf@f^(0+128),f
  2311                           
  2312                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2313  0E60  085A               	movf	sprintf@f^(0+128),w
  2314  0E61  0084               	movwf	4
  2315  0E62  120A  118A  272B  120A  158A  	fcall	stringdir
  2316  0E67  160A  118A  203B  120A  158A  	fcall	_isdigit
  2317  0E6C  1803               	btfsc	3,0
  2318  0E6D  2E18               	goto	l3454
  2319  0E6E                     l3464:	
  2320                           ;doprnt.c: 831: }
  2321                           
  2322                           ;doprnt.c: 822: continue;
  2323                           
  2324                           ;doprnt.c: 811: default:
  2325                           
  2326                           ;doprnt.c: 707: case 'i':
  2327                           ;doprnt.c: 708: break;
  2328                           
  2329                           ;doprnt.c: 706: case 'd':
  2330                           
  2331                           ;doprnt.c: 647: goto alldone;
  2332                           
  2333                           ;doprnt.c: 646: case 0:
  2334                           
  2335                           ;doprnt.c: 617: }
  2336                           ;doprnt.c: 644: switch(c = *f++) {
  2337                           
  2338  0E6E  3001               	movlw	1
  2339  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  2340  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  2341  0E71  07DA               	addwf	sprintf@f^(0+128),f
  2342  0E72  30FF               	movlw	-1
  2343  0E73  075A               	addwf	sprintf@f^(0+128),w
  2344  0E74  0084               	movwf	4
  2345  0E75  120A  118A  272B  120A  158A  	fcall	stringdir
  2346  0E7A  1683               	bsf	3,5	;RP0=1, select bank3
  2347  0E7B  1703               	bsf	3,6	;RP1=1, select bank3
  2348  0E7C  00BE               	movwf	sprintf@c^(0+384)
  2349                           
  2350                           ; Switch size 1, requested type "space"
  2351                           ; Number of cases is 3, Range of values is 0 to 105
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte           10     6 (average)
  2355                           ; jumptable            260     6 (fixed)
  2356                           ;	Chosen strategy is simple_byte
  2357  0E7D  3A00               	xorlw	0	; case 0
  2358  0E7E  1903               	skipnz
  2359  0E7F  2FF9               	goto	l3540
  2360  0E80  3A64               	xorlw	100	; case 100
  2361  0E81  1903               	skipnz
  2362  0E82  2E87               	goto	l3466
  2363  0E83  3A0D               	xorlw	13	; case 105
  2364  0E84  1903               	skipnz
  2365  0E85  2E87               	goto	l3466
  2366  0E86  2DC1               	goto	l3538
  2367  0E87                     l3466:	
  2368                           
  2369                           ;doprnt.c: 1262: {
  2370                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2371  0E87  1683               	bsf	3,5	;RP0=1, select bank3
  2372  0E88  1703               	bsf	3,6	;RP1=1, select bank3
  2373  0E89  0834               	movf	sprintf@ap^(0+384),w
  2374  0E8A  0084               	movwf	4
  2375  0E8B  1383               	bcf	3,7	;select IRP bank0
  2376  0E8C  0800               	movf	0,w
  2377  0E8D  00B6               	movwf	sprintf@_val^(0+384)
  2378  0E8E  0A84               	incf	4,f
  2379  0E8F  0800               	movf	0,w
  2380  0E90  00B7               	movwf	(sprintf@_val+1)^(0+384)
  2381  0E91  3002               	movlw	2
  2382  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0E94  00DD               	movwf	??_sprintf^(0+128)
  2385  0E95  085D               	movf	??_sprintf^(0+128),w
  2386  0E96  1683               	bsf	3,5	;RP0=1, select bank3
  2387  0E97  1703               	bsf	3,6	;RP1=1, select bank3
  2388  0E98  07B4               	addwf	sprintf@ap^(0+384),f
  2389                           
  2390                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2391  0E99  1FB7               	btfss	(sprintf@_val+1)^(0+384),7
  2392  0E9A  2EA8               	goto	l3476
  2393                           
  2394                           ;doprnt.c: 1271: flag |= 0x03;
  2395  0E9B  3003               	movlw	3
  2396  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0E9E  00DD               	movwf	??_sprintf^(0+128)
  2399  0E9F  085D               	movf	??_sprintf^(0+128),w
  2400  0EA0  1683               	bsf	3,5	;RP0=1, select bank3
  2401  0EA1  1703               	bsf	3,6	;RP1=1, select bank3
  2402  0EA2  04BA               	iorwf	sprintf@flag^(0+384),f
  2403                           
  2404                           ;doprnt.c: 1272: _val._val = -_val._val;
  2405  0EA3  09B6               	comf	sprintf@_val^(0+384),f
  2406  0EA4  09B7               	comf	(sprintf@_val+1)^(0+384),f
  2407  0EA5  0AB6               	incf	sprintf@_val^(0+384),f
  2408  0EA6  1903               	skipnz
  2409  0EA7  0AB7               	incf	(sprintf@_val+1)^(0+384),f
  2410  0EA8                     l3476:	
  2411                           
  2412                           ;doprnt.c: 1273: }
  2413                           ;doprnt.c: 1275: }
  2414                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2415  0EA8  01BE               	clrf	sprintf@c^(0+384)
  2416  0EA9  0ABE               	incf	sprintf@c^(0+384),f
  2417  0EAA  083E               	movf	sprintf@c^(0+384),w
  2418  0EAB  3A05               	xorlw	5
  2419  0EAC  1903               	btfsc	3,2
  2420  0EAD  2EDB               	goto	l3488
  2421  0EAE                     l3480:	
  2422                           
  2423                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2424  0EAE  083E               	movf	sprintf@c^(0+384),w
  2425  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  2426  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  2427  0EB1  00DD               	movwf	??_sprintf^(0+128)
  2428  0EB2  075D               	addwf	??_sprintf^(0+128),w
  2429  0EB3  3E01               	addlw	low (_dpowers-__stringbase)
  2430  0EB4  0084               	movwf	4
  2431  0EB5  120A  118A  272B  120A  158A  	fcall	stringdir
  2432  0EBA  00DE               	movwf	(??_sprintf+1)^(0+128)
  2433  0EBB  120A  118A  272B  120A  158A  	fcall	stringdir
  2434  0EC0  00DF               	movwf	((??_sprintf+1)^(0+128)+1)
  2435  0EC1  085F               	movf	(??_sprintf+2)^(0+128),w
  2436  0EC2  1683               	bsf	3,5	;RP0=1, select bank3
  2437  0EC3  1703               	bsf	3,6	;RP1=1, select bank3
  2438  0EC4  0237               	subwf	(sprintf@_val+1)^(0+384),w
  2439  0EC5  1D03               	skipz
  2440  0EC6  2ECD               	goto	u4385
  2441  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0EC9  085E               	movf	(??_sprintf+1)^(0+128),w
  2444  0ECA  1683               	bsf	3,5	;RP0=1, select bank3
  2445  0ECB  1703               	bsf	3,6	;RP1=1, select bank3
  2446  0ECC  0236               	subwf	sprintf@_val^(0+384),w
  2447  0ECD                     u4385:	
  2448  0ECD  1C03               	btfss	3,0
  2449  0ECE  2EDB               	goto	l3488
  2450                           
  2451                           ;doprnt.c: 1316: break;
  2452  0ECF  3001               	movlw	1
  2453  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0ED2  00DD               	movwf	??_sprintf^(0+128)
  2456  0ED3  085D               	movf	??_sprintf^(0+128),w
  2457  0ED4  1683               	bsf	3,5	;RP0=1, select bank3
  2458  0ED5  1703               	bsf	3,6	;RP1=1, select bank3
  2459  0ED6  07BE               	addwf	sprintf@c^(0+384),f
  2460  0ED7  083E               	movf	sprintf@c^(0+384),w
  2461  0ED8  3A05               	xorlw	5
  2462  0ED9  1D03               	skipz
  2463  0EDA  2EAE               	goto	l3480
  2464  0EDB                     l3488:	
  2465                           
  2466                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2467  0EDB  083C               	movf	(sprintf@width+1)^(0+384),w
  2468  0EDC  043B               	iorwf	sprintf@width^(0+384),w
  2469  0EDD  1903               	skipnz
  2470  0EDE  2EE9               	goto	l497
  2471  0EDF  083A               	movf	sprintf@flag^(0+384),w
  2472  0EE0  3903               	andlw	3
  2473  0EE1  1903               	btfsc	3,2
  2474  0EE2  2EE9               	goto	l497
  2475                           
  2476                           ;doprnt.c: 1355: width--;
  2477  0EE3  30FF               	movlw	255
  2478  0EE4  07BB               	addwf	sprintf@width^(0+384),f
  2479  0EE5  1803               	skipnc
  2480  0EE6  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2481  0EE7  30FF               	movlw	255
  2482  0EE8  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2483  0EE9                     l497:	
  2484                           
  2485                           ;doprnt.c: 1390: if(width > c)
  2486  0EE9  083E               	movf	sprintf@c^(0+384),w
  2487  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  2488  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  2489  0EEC  00DD               	movwf	??_sprintf^(0+128)
  2490  0EED  01DE               	clrf	(??_sprintf^(0+128)+1)
  2491  0EEE  1BDD               	btfsc	??_sprintf^(0+128),7
  2492  0EEF  03DE               	decf	(??_sprintf^(0+128)+1),f
  2493  0EF0  085E               	movf	(??_sprintf+1)^(0+128),w
  2494  0EF1  3A80               	xorlw	128
  2495  0EF2  00DF               	movwf	(??_sprintf+2)^(0+128)
  2496  0EF3  1683               	bsf	3,5	;RP0=1, select bank3
  2497  0EF4  1703               	bsf	3,6	;RP1=1, select bank3
  2498  0EF5  083C               	movf	(sprintf@width+1)^(0+384),w
  2499  0EF6  3A80               	xorlw	128
  2500  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0EF9  025F               	subwf	(??_sprintf+2)^(0+128),w
  2503  0EFA  1D03               	skipz
  2504  0EFB  2F02               	goto	u4425
  2505  0EFC  1683               	bsf	3,5	;RP0=1, select bank3
  2506  0EFD  1703               	bsf	3,6	;RP1=1, select bank3
  2507  0EFE  083B               	movf	sprintf@width^(0+384),w
  2508  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0F01  025D               	subwf	??_sprintf^(0+128),w
  2511  0F02                     u4425:	
  2512  0F02  1803               	skipnc
  2513  0F03  2F1A               	goto	l3496
  2514                           
  2515                           ;doprnt.c: 1391: width -= c;
  2516  0F04  1683               	bsf	3,5	;RP0=1, select bank3
  2517  0F05  1703               	bsf	3,6	;RP1=1, select bank3
  2518  0F06  083E               	movf	sprintf@c^(0+384),w
  2519  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0F09  00DD               	movwf	??_sprintf^(0+128)
  2522  0F0A  01DE               	clrf	(??_sprintf^(0+128)+1)
  2523  0F0B  1BDD               	btfsc	??_sprintf^(0+128),7
  2524  0F0C  03DE               	decf	(??_sprintf^(0+128)+1),f
  2525  0F0D  085D               	movf	??_sprintf^(0+128),w
  2526  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2527  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2528  0F10  02BB               	subwf	sprintf@width^(0+384),f
  2529  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0F13  085E               	movf	(??_sprintf+1)^(0+128),w
  2532  0F14  1683               	bsf	3,5	;RP0=1, select bank3
  2533  0F15  1703               	bsf	3,6	;RP1=1, select bank3
  2534  0F16  1C03               	skipc
  2535  0F17  03BC               	decf	(sprintf@width+1)^(0+384),f
  2536  0F18  02BC               	subwf	(sprintf@width+1)^(0+384),f
  2537  0F19  2F1E               	goto	l3498
  2538  0F1A                     l3496:	
  2539                           
  2540                           ;doprnt.c: 1392: else
  2541                           ;doprnt.c: 1393: width = 0;
  2542  0F1A  1683               	bsf	3,5	;RP0=1, select bank3
  2543  0F1B  1703               	bsf	3,6	;RP1=1, select bank3
  2544  0F1C  01BB               	clrf	sprintf@width^(0+384)
  2545  0F1D  01BC               	clrf	(sprintf@width+1)^(0+384)
  2546  0F1E                     l3498:	
  2547                           
  2548                           ;doprnt.c: 1396: if(flag & 0x04) {
  2549  0F1E  1D3A               	btfss	sprintf@flag^(0+384),2
  2550  0F1F  2F55               	goto	l3514
  2551                           
  2552                           ;doprnt.c: 1401: if(flag & 0x03)
  2553  0F20  083A               	movf	sprintf@flag^(0+384),w
  2554  0F21  3903               	andlw	3
  2555  0F22  1903               	btfsc	3,2
  2556  0F23  2F37               	goto	l3506
  2557                           
  2558                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2559  0F24  302D               	movlw	45
  2560  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  2562  0F27  00DD               	movwf	??_sprintf^(0+128)
  2563  0F28  1683               	bsf	3,5	;RP0=1, select bank3
  2564  0F29  1703               	bsf	3,6	;RP1=1, select bank3
  2565  0F2A  083D               	movf	sprintf@sp^(0+384),w
  2566  0F2B  0084               	movwf	4
  2567  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0F2E  085D               	movf	??_sprintf^(0+128),w
  2570  0F2F  1783               	bsf	3,7	;select IRP bank2
  2571  0F30  0080               	movwf	0
  2572  0F31  3001               	movlw	1
  2573  0F32  00DD               	movwf	??_sprintf^(0+128)
  2574  0F33  085D               	movf	??_sprintf^(0+128),w
  2575  0F34  1683               	bsf	3,5	;RP0=1, select bank3
  2576  0F35  1703               	bsf	3,6	;RP1=1, select bank3
  2577  0F36  07BD               	addwf	sprintf@sp^(0+384),f
  2578  0F37                     l3506:	
  2579                           
  2580                           ;doprnt.c: 1424: if(width)
  2581  0F37  083C               	movf	(sprintf@width+1)^(0+384),w
  2582  0F38  043B               	iorwf	sprintf@width^(0+384),w
  2583  0F39  1903               	skipnz
  2584  0F3A  2F8D               	goto	l3528
  2585                           
  2586                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2587                           
  2588                           ;doprnt.c: 1425: do
  2589  0F3B  3030               	movlw	48
  2590  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0F3E  00DD               	movwf	??_sprintf^(0+128)
  2593  0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2594  0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2595  0F41  083D               	movf	sprintf@sp^(0+384),w
  2596  0F42  0084               	movwf	4
  2597  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0F45  085D               	movf	??_sprintf^(0+128),w
  2600  0F46  1783               	bsf	3,7	;select IRP bank2
  2601  0F47  0080               	movwf	0
  2602  0F48  3001               	movlw	1
  2603  0F49  00DD               	movwf	??_sprintf^(0+128)
  2604  0F4A  085D               	movf	??_sprintf^(0+128),w
  2605  0F4B  1683               	bsf	3,5	;RP0=1, select bank3
  2606  0F4C  1703               	bsf	3,6	;RP1=1, select bank3
  2607  0F4D  07BD               	addwf	sprintf@sp^(0+384),f
  2608                           
  2609                           ;doprnt.c: 1427: while(--width);
  2610  0F4E  30FF               	movlw	255
  2611  0F4F  07BB               	addwf	sprintf@width^(0+384),f
  2612  0F50  1803               	skipnc
  2613  0F51  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2614  0F52  30FF               	movlw	255
  2615  0F53  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2616  0F54  2F37               	goto	l3506
  2617  0F55                     l3514:	
  2618                           ;doprnt.c: 1429: } else
  2619                           
  2620                           
  2621                           ;doprnt.c: 1431: {
  2622                           ;doprnt.c: 1433: if(width
  2623                           ;doprnt.c: 1437: )
  2624  0F55  083C               	movf	(sprintf@width+1)^(0+384),w
  2625  0F56  043B               	iorwf	sprintf@width^(0+384),w
  2626  0F57  1903               	skipnz
  2627  0F58  2F76               	goto	l3522
  2628  0F59                     l3516:	
  2629                           ;doprnt.c: 1438: do
  2630                           
  2631                           
  2632                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2633  0F59  3020               	movlw	32
  2634  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0F5C  00DD               	movwf	??_sprintf^(0+128)
  2637  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  2638  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  2639  0F5F  083D               	movf	sprintf@sp^(0+384),w
  2640  0F60  0084               	movwf	4
  2641  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0F63  085D               	movf	??_sprintf^(0+128),w
  2644  0F64  1783               	bsf	3,7	;select IRP bank2
  2645  0F65  0080               	movwf	0
  2646  0F66  3001               	movlw	1
  2647  0F67  00DD               	movwf	??_sprintf^(0+128)
  2648  0F68  085D               	movf	??_sprintf^(0+128),w
  2649  0F69  1683               	bsf	3,5	;RP0=1, select bank3
  2650  0F6A  1703               	bsf	3,6	;RP1=1, select bank3
  2651  0F6B  07BD               	addwf	sprintf@sp^(0+384),f
  2652                           
  2653                           ;doprnt.c: 1440: while(--width);
  2654  0F6C  30FF               	movlw	255
  2655  0F6D  07BB               	addwf	sprintf@width^(0+384),f
  2656  0F6E  1803               	skipnc
  2657  0F6F  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2658  0F70  30FF               	movlw	255
  2659  0F71  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2660  0F72  083C               	movf	(sprintf@width+1)^(0+384),w
  2661  0F73  043B               	iorwf	sprintf@width^(0+384),w
  2662  0F74  1D03               	skipz
  2663  0F75  2F59               	goto	l3516
  2664  0F76                     l3522:	
  2665                           
  2666                           ;doprnt.c: 1447: if(flag & 0x03)
  2667  0F76  083A               	movf	sprintf@flag^(0+384),w
  2668  0F77  3903               	andlw	3
  2669  0F78  1903               	btfsc	3,2
  2670  0F79  2F8D               	goto	l3528
  2671                           
  2672                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2673  0F7A  302D               	movlw	45
  2674  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2676  0F7D  00DD               	movwf	??_sprintf^(0+128)
  2677  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2678  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2679  0F80  083D               	movf	sprintf@sp^(0+384),w
  2680  0F81  0084               	movwf	4
  2681  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0F84  085D               	movf	??_sprintf^(0+128),w
  2684  0F85  1783               	bsf	3,7	;select IRP bank2
  2685  0F86  0080               	movwf	0
  2686  0F87  3001               	movlw	1
  2687  0F88  00DD               	movwf	??_sprintf^(0+128)
  2688  0F89  085D               	movf	??_sprintf^(0+128),w
  2689  0F8A  1683               	bsf	3,5	;RP0=1, select bank3
  2690  0F8B  1703               	bsf	3,6	;RP1=1, select bank3
  2691  0F8C  07BD               	addwf	sprintf@sp^(0+384),f
  2692  0F8D                     l3528:	
  2693                           
  2694                           ;doprnt.c: 1478: }
  2695                           ;doprnt.c: 1481: prec = c;
  2696  0F8D  083E               	movf	sprintf@c^(0+384),w
  2697  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  2698  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  2699  0F90  00DD               	movwf	??_sprintf^(0+128)
  2700  0F91  085D               	movf	??_sprintf^(0+128),w
  2701  0F92  1683               	bsf	3,5	;RP0=1, select bank3
  2702  0F93  1703               	bsf	3,6	;RP1=1, select bank3
  2703  0F94  00B5               	movwf	sprintf@prec^(0+384)
  2704  0F95                     l3536:	
  2705                           ;doprnt.c: 1483: while(prec--) {
  2706                           
  2707  0F95  30FF               	movlw	-1
  2708  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0F98  00DD               	movwf	??_sprintf^(0+128)
  2711  0F99  085D               	movf	??_sprintf^(0+128),w
  2712  0F9A  1683               	bsf	3,5	;RP0=1, select bank3
  2713  0F9B  1703               	bsf	3,6	;RP1=1, select bank3
  2714  0F9C  07B5               	addwf	sprintf@prec^(0+384),f
  2715  0F9D  0835               	movf	sprintf@prec^(0+384),w
  2716  0F9E  3AFF               	xorlw	-1
  2717  0F9F  1903               	btfsc	3,2
  2718  0FA0  2DC1               	goto	l3538
  2719                           
  2720                           ;doprnt.c: 1487: {
  2721                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2722  0FA1  300A               	movlw	10
  2723  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0FA4  00D4               	movwf	___lwmod@divisor^(0+128)
  2726  0FA5  3000               	movlw	0
  2727  0FA6  00D5               	movwf	(___lwmod@divisor^(0+128)+1)
  2728  0FA7  1683               	bsf	3,5	;RP0=1, select bank3
  2729  0FA8  1703               	bsf	3,6	;RP1=1, select bank3
  2730  0FA9  0835               	movf	sprintf@prec^(0+384),w
  2731  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0FAC  00DD               	movwf	??_sprintf^(0+128)
  2734  0FAD  075D               	addwf	??_sprintf^(0+128),w
  2735  0FAE  3E01               	addlw	low (_dpowers-__stringbase)
  2736  0FAF  0084               	movwf	4
  2737  0FB0  120A  118A  272B  120A  158A  	fcall	stringdir
  2738  0FB5  00CC               	movwf	___lwdiv@divisor^(0+128)
  2739  0FB6  120A  118A  272B  120A  158A  	fcall	stringdir
  2740  0FBB  00CD               	movwf	(___lwdiv@divisor+1)^(0+128)
  2741  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  2742  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  2743  0FBE  0837               	movf	(sprintf@_val+1)^(0+384),w
  2744  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0FC1  01CF               	clrf	(___lwdiv@dividend+1)^(0+128)
  2747  0FC2  07CF               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2748  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2749  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2750  0FC5  0836               	movf	sprintf@_val^(0+384),w
  2751  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2753  0FC8  01CE               	clrf	___lwdiv@dividend^(0+128)
  2754  0FC9  07CE               	addwf	___lwdiv@dividend^(0+128),f
  2755  0FCA  160A  118A  22E3  120A  158A  	fcall	___lwdiv
  2756  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0FD1  084D               	movf	(?___lwdiv+1)^(0+128),w
  2759  0FD2  01D7               	clrf	(___lwmod@dividend+1)^(0+128)
  2760  0FD3  07D7               	addwf	(___lwmod@dividend+1)^(0+128),f
  2761  0FD4  084C               	movf	?___lwdiv^(0+128),w
  2762  0FD5  01D6               	clrf	___lwmod@dividend^(0+128)
  2763  0FD6  07D6               	addwf	___lwmod@dividend^(0+128),f
  2764  0FD7  160A  118A  226F  120A  158A  	fcall	___lwmod
  2765  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0FDE  0854               	movf	?___lwmod^(0+128),w
  2768  0FDF  3E30               	addlw	48
  2769  0FE0  00DE               	movwf	(??_sprintf+1)^(0+128)
  2770  0FE1  085E               	movf	(??_sprintf+1)^(0+128),w
  2771  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  2772  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  2773  0FE4  00BE               	movwf	sprintf@c^(0+384)
  2774                           
  2775                           ;doprnt.c: 1532: }
  2776                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2777  0FE5  083E               	movf	sprintf@c^(0+384),w
  2778  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0FE8  00DD               	movwf	??_sprintf^(0+128)
  2781  0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  2782  0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  2783  0FEB  083D               	movf	sprintf@sp^(0+384),w
  2784  0FEC  0084               	movwf	4
  2785  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0FEF  085D               	movf	??_sprintf^(0+128),w
  2788  0FF0  1783               	bsf	3,7	;select IRP bank2
  2789  0FF1  0080               	movwf	0
  2790  0FF2  3001               	movlw	1
  2791  0FF3  00DD               	movwf	??_sprintf^(0+128)
  2792  0FF4  085D               	movf	??_sprintf^(0+128),w
  2793  0FF5  1683               	bsf	3,5	;RP0=1, select bank3
  2794  0FF6  1703               	bsf	3,6	;RP1=1, select bank3
  2795  0FF7  07BD               	addwf	sprintf@sp^(0+384),f
  2796  0FF8  2F95               	goto	l3536
  2797  0FF9                     l3540:	
  2798                           ;doprnt.c: 1534: }
  2799                           ;doprnt.c: 1542: }
  2800                           ;doprnt.c: 1544: alldone:
  2801                           
  2802                           
  2803                           ;doprnt.c: 1547: *sp = 0;
  2804  0FF9  1683               	bsf	3,5	;RP0=1, select bank3
  2805  0FFA  1703               	bsf	3,6	;RP1=1, select bank3
  2806  0FFB  083D               	movf	sprintf@sp^(0+384),w
  2807  0FFC  0084               	movwf	4
  2808  0FFD  1783               	bsf	3,7	;select IRP bank2
  2809  0FFE  0180               	clrf	0
  2810  0FFF  0008               	return
  2811  1000                     __end_of_sprintf:	
  2812                           ;doprnt.c: 1549: return 0;
  2813                           ;	Return value of _sprintf is never used
  2814                           
  2815                           
  2816                           	psect	text2
  2817  103B                     __ptext2:	
  2818 ;; *************** function _isdigit *****************
  2819 ;; Defined at:
  2820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  c               1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  c               1    5[BANK1 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       0       2       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       0       2       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    5
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_sprintf
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _isdigit
  2850  103B                     _isdigit:	
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2854                           ;isdigit@c stored from wreg
  2855  103B  1683               	bsf	3,5	;RP0=1, select bank1
  2856  103C  1303               	bcf	3,6	;RP1=0, select bank1
  2857  103D  00CD               	movwf	isdigit@c^(0+128)
  2858  103E  01CC               	clrf	_isdigit$1449^(0+128)
  2859  103F  303A               	movlw	58
  2860  1040  024D               	subwf	isdigit@c^(0+128),w
  2861  1041  1803               	skipnc
  2862  1042  2849               	goto	l3370
  2863  1043  3030               	movlw	48
  2864  1044  024D               	subwf	isdigit@c^(0+128),w
  2865  1045  1C03               	skipc
  2866  1046  2849               	goto	l3370
  2867  1047  01CC               	clrf	_isdigit$1449^(0+128)
  2868  1048  0ACC               	incf	_isdigit$1449^(0+128),f
  2869  1049                     l3370:	
  2870  1049  0C4C               	rrf	_isdigit$1449^(0+128),w
  2871  104A  0008               	return
  2872  104B                     __end_of_isdigit:	
  2873                           
  2874                           	psect	text3
  2875  11BF                     __ptext3:	
  2876 ;; *************** function ___wmul *****************
  2877 ;; Defined at:
  2878 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  multiplier      2    4[BANK1 ] unsigned int 
  2881 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  product         2    8[BANK1 ] unsigned int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    4[BANK1 ] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       4       0       0
  2894 ;;      Locals:         0       0       2       0       0
  2895 ;;      Temps:          0       0       0       0       0
  2896 ;;      Totals:         0       0       6       0       0
  2897 ;;Total ram usage:        6 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    5
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_sprintf
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function ___wmul
  2909  11BF                     ___wmul:	
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2913  11BF  1683               	bsf	3,5	;RP0=1, select bank1
  2914  11C0  1303               	bcf	3,6	;RP1=0, select bank1
  2915  11C1  01D0               	clrf	___wmul@product^(0+128)
  2916  11C2  01D1               	clrf	(___wmul@product+1)^(0+128)
  2917  11C3                     l3376:	
  2918  11C3  1C4C               	btfss	___wmul@multiplier^(0+128),0
  2919  11C4  29CB               	goto	l598
  2920  11C5  084E               	movf	___wmul@multiplicand^(0+128),w
  2921  11C6  07D0               	addwf	___wmul@product^(0+128),f
  2922  11C7  1803               	skipnc
  2923  11C8  0AD1               	incf	(___wmul@product+1)^(0+128),f
  2924  11C9  084F               	movf	(___wmul@multiplicand+1)^(0+128),w
  2925  11CA  07D1               	addwf	(___wmul@product+1)^(0+128),f
  2926  11CB                     l598:	
  2927  11CB  3001               	movlw	1
  2928  11CC                     u4175:	
  2929  11CC  1003               	clrc
  2930  11CD  0DCE               	rlf	___wmul@multiplicand^(0+128),f
  2931  11CE  0DCF               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2932  11CF  3EFF               	addlw	-1
  2933  11D0  1D03               	skipz
  2934  11D1  29CC               	goto	u4175
  2935  11D2  3001               	movlw	1
  2936  11D3                     u4185:	
  2937  11D3  1003               	clrc
  2938  11D4  0CCD               	rrf	(___wmul@multiplier+1)^(0+128),f
  2939  11D5  0CCC               	rrf	___wmul@multiplier^(0+128),f
  2940  11D6  3EFF               	addlw	-1
  2941  11D7  1D03               	skipz
  2942  11D8  29D3               	goto	u4185
  2943  11D9  084D               	movf	(___wmul@multiplier+1)^(0+128),w
  2944  11DA  044C               	iorwf	___wmul@multiplier^(0+128),w
  2945  11DB  1D03               	skipz
  2946  11DC  29C3               	goto	l3376
  2947  11DD  0851               	movf	(___wmul@product+1)^(0+128),w
  2948  11DE  01CD               	clrf	(?___wmul+1)^(0+128)
  2949  11DF  07CD               	addwf	(?___wmul+1)^(0+128),f
  2950  11E0  0850               	movf	___wmul@product^(0+128),w
  2951  11E1  01CC               	clrf	?___wmul^(0+128)
  2952  11E2  07CC               	addwf	?___wmul^(0+128),f
  2953  11E3  0008               	return
  2954  11E4                     __end_of___wmul:	
  2955                           
  2956                           	psect	text4
  2957  126F                     __ptext4:	
  2958 ;; *************** function ___lwmod *****************
  2959 ;; Defined at:
  2960 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  divisor         2   12[BANK1 ] unsigned int 
  2963 ;;  dividend        2   14[BANK1 ] unsigned int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  counter         1   17[BANK1 ] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2   12[BANK1 ] unsigned int 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       4       0       0
  2976 ;;      Locals:         0       0       1       0       0
  2977 ;;      Temps:          0       0       1       0       0
  2978 ;;      Totals:         0       0       6       0       0
  2979 ;;Total ram usage:        6 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    5
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_sprintf
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function ___lwmod
  2991  126F                     ___lwmod:	
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2995  126F  1683               	bsf	3,5	;RP0=1, select bank1
  2996  1270  1303               	bcf	3,6	;RP1=0, select bank1
  2997  1271  0855               	movf	(___lwmod@divisor+1)^(0+128),w
  2998  1272  0454               	iorwf	___lwmod@divisor^(0+128),w
  2999  1273  1903               	skipnz
  3000  1274  2A9E               	goto	l3430
  3001  1275  01D9               	clrf	___lwmod@counter^(0+128)
  3002  1276  0AD9               	incf	___lwmod@counter^(0+128),f
  3003  1277                     l3420:	
  3004  1277  1BD5               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3005  1278  2A85               	goto	l3422
  3006  1279  3001               	movlw	1
  3007  127A                     u4285:	
  3008  127A  1003               	clrc
  3009  127B  0DD4               	rlf	___lwmod@divisor^(0+128),f
  3010  127C  0DD5               	rlf	(___lwmod@divisor+1)^(0+128),f
  3011  127D  3EFF               	addlw	-1
  3012  127E  1D03               	skipz
  3013  127F  2A7A               	goto	u4285
  3014  1280  3001               	movlw	1
  3015  1281  00D8               	movwf	??___lwmod^(0+128)
  3016  1282  0858               	movf	??___lwmod^(0+128),w
  3017  1283  07D9               	addwf	___lwmod@counter^(0+128),f
  3018  1284  2A77               	goto	l3420
  3019  1285                     l3422:	
  3020  1285  0855               	movf	(___lwmod@divisor+1)^(0+128),w
  3021  1286  0257               	subwf	(___lwmod@dividend+1)^(0+128),w
  3022  1287  1D03               	skipz
  3023  1288  2A8B               	goto	u4305
  3024  1289  0854               	movf	___lwmod@divisor^(0+128),w
  3025  128A  0256               	subwf	___lwmod@dividend^(0+128),w
  3026  128B                     u4305:	
  3027  128B  1C03               	skipc
  3028  128C  2A93               	goto	l3426
  3029  128D  0854               	movf	___lwmod@divisor^(0+128),w
  3030  128E  02D6               	subwf	___lwmod@dividend^(0+128),f
  3031  128F  0855               	movf	(___lwmod@divisor+1)^(0+128),w
  3032  1290  1C03               	skipc
  3033  1291  03D7               	decf	(___lwmod@dividend+1)^(0+128),f
  3034  1292  02D7               	subwf	(___lwmod@dividend+1)^(0+128),f
  3035  1293                     l3426:	
  3036  1293  3001               	movlw	1
  3037  1294                     u4315:	
  3038  1294  1003               	clrc
  3039  1295  0CD5               	rrf	(___lwmod@divisor+1)^(0+128),f
  3040  1296  0CD4               	rrf	___lwmod@divisor^(0+128),f
  3041  1297  3EFF               	addlw	-1
  3042  1298  1D03               	skipz
  3043  1299  2A94               	goto	u4315
  3044  129A  3001               	movlw	1
  3045  129B  02D9               	subwf	___lwmod@counter^(0+128),f
  3046  129C  1D03               	btfss	3,2
  3047  129D  2A85               	goto	l3422
  3048  129E                     l3430:	
  3049  129E  0857               	movf	(___lwmod@dividend+1)^(0+128),w
  3050  129F  01D5               	clrf	(?___lwmod+1)^(0+128)
  3051  12A0  07D5               	addwf	(?___lwmod+1)^(0+128),f
  3052  12A1  0856               	movf	___lwmod@dividend^(0+128),w
  3053  12A2  01D4               	clrf	?___lwmod^(0+128)
  3054  12A3  07D4               	addwf	?___lwmod^(0+128),f
  3055  12A4  0008               	return
  3056  12A5                     __end_of___lwmod:	
  3057                           
  3058                           	psect	text5
  3059  12E3                     __ptext5:	
  3060 ;; *************** function ___lwdiv *****************
  3061 ;; Defined at:
  3062 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  divisor         2    4[BANK1 ] unsigned int 
  3065 ;;  dividend        2    6[BANK1 ] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  quotient        2   10[BANK1 ] unsigned int 
  3068 ;;  counter         1    9[BANK1 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    4[BANK1 ] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       4       0       0
  3079 ;;      Locals:         0       0       3       0       0
  3080 ;;      Temps:          0       0       1       0       0
  3081 ;;      Totals:         0       0       8       0       0
  3082 ;;Total ram usage:        8 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    5
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_sprintf
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function ___lwdiv
  3094  12E3                     ___lwdiv:	
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3098  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  3099  12E4  1303               	bcf	3,6	;RP1=0, select bank1
  3100  12E5  01D2               	clrf	___lwdiv@quotient^(0+128)
  3101  12E6  01D3               	clrf	(___lwdiv@quotient+1)^(0+128)
  3102  12E7  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  3103  12E8  044C               	iorwf	___lwdiv@divisor^(0+128),w
  3104  12E9  1903               	skipnz
  3105  12EA  2B1C               	goto	l3408
  3106  12EB  01D1               	clrf	___lwdiv@counter^(0+128)
  3107  12EC  0AD1               	incf	___lwdiv@counter^(0+128),f
  3108  12ED                     l3396:	
  3109  12ED  1BCD               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3110  12EE  2AFB               	goto	l3398
  3111  12EF  3001               	movlw	1
  3112  12F0                     u4215:	
  3113  12F0  1003               	clrc
  3114  12F1  0DCC               	rlf	___lwdiv@divisor^(0+128),f
  3115  12F2  0DCD               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3116  12F3  3EFF               	addlw	-1
  3117  12F4  1D03               	skipz
  3118  12F5  2AF0               	goto	u4215
  3119  12F6  3001               	movlw	1
  3120  12F7  00D0               	movwf	??___lwdiv^(0+128)
  3121  12F8  0850               	movf	??___lwdiv^(0+128),w
  3122  12F9  07D1               	addwf	___lwdiv@counter^(0+128),f
  3123  12FA  2AED               	goto	l3396
  3124  12FB                     l3398:	
  3125  12FB  3001               	movlw	1
  3126  12FC                     u4235:	
  3127  12FC  1003               	clrc
  3128  12FD  0DD2               	rlf	___lwdiv@quotient^(0+128),f
  3129  12FE  0DD3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3130  12FF  3EFF               	addlw	-1
  3131  1300  1D03               	skipz
  3132  1301  2AFC               	goto	u4235
  3133  1302  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  3134  1303  024F               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3135  1304  1D03               	skipz
  3136  1305  2B08               	goto	u4245
  3137  1306  084C               	movf	___lwdiv@divisor^(0+128),w
  3138  1307  024E               	subwf	___lwdiv@dividend^(0+128),w
  3139  1308                     u4245:	
  3140  1308  1C03               	skipc
  3141  1309  2B11               	goto	l3404
  3142  130A  084C               	movf	___lwdiv@divisor^(0+128),w
  3143  130B  02CE               	subwf	___lwdiv@dividend^(0+128),f
  3144  130C  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  3145  130D  1C03               	skipc
  3146  130E  03CF               	decf	(___lwdiv@dividend+1)^(0+128),f
  3147  130F  02CF               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3148  1310  1452               	bsf	___lwdiv@quotient^(0+128),0
  3149  1311                     l3404:	
  3150  1311  3001               	movlw	1
  3151  1312                     u4255:	
  3152  1312  1003               	clrc
  3153  1313  0CCD               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3154  1314  0CCC               	rrf	___lwdiv@divisor^(0+128),f
  3155  1315  3EFF               	addlw	-1
  3156  1316  1D03               	skipz
  3157  1317  2B12               	goto	u4255
  3158  1318  3001               	movlw	1
  3159  1319  02D1               	subwf	___lwdiv@counter^(0+128),f
  3160  131A  1D03               	btfss	3,2
  3161  131B  2AFB               	goto	l3398
  3162  131C                     l3408:	
  3163  131C  0853               	movf	(___lwdiv@quotient+1)^(0+128),w
  3164  131D  01CD               	clrf	(?___lwdiv+1)^(0+128)
  3165  131E  07CD               	addwf	(?___lwdiv+1)^(0+128),f
  3166  131F  0852               	movf	___lwdiv@quotient^(0+128),w
  3167  1320  01CC               	clrf	?___lwdiv^(0+128)
  3168  1321  07CC               	addwf	?___lwdiv^(0+128),f
  3169  1322  0008               	return
  3170  1323                     __end_of___lwdiv:	
  3171                           
  3172                           	psect	text6
  3173  123E                     __ptext6:	
  3174 ;; *************** function _USART_WriteString *****************
  3175 ;; Defined at:
  3176 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3179 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3180 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3181 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3182 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;		None               void
  3187 ;; Registers used:
  3188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       0       2       0       0
  3195 ;;      Locals:         0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0
  3197 ;;      Totals:         0       0       2       0       0
  3198 ;;Total ram usage:        2 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    6
  3201 ;; This function calls:
  3202 ;;		_USART_WriteChar
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _USART_WriteString
  3210  123E                     _USART_WriteString:	
  3211  123E                     l2896:	
  3212                           ;usart.c: 54: while(*str != '\0')
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3216                           
  3217  123E  1683               	bsf	3,5	;RP0=1, select bank1
  3218  123F  1303               	bcf	3,6	;RP1=0, select bank1
  3219  1240  084E               	movf	(USART_WriteString@str+1)^(0+128),w
  3220  1241  1283               	bcf	3,5	;RP0=0, select bank0
  3221  1242  1303               	bcf	3,6	;RP1=0, select bank0
  3222  1243  00FF               	movwf	127
  3223  1244  1683               	bsf	3,5	;RP0=1, select bank1
  3224  1245  1303               	bcf	3,6	;RP1=0, select bank1
  3225  1246  084D               	movf	USART_WriteString@str^(0+128),w
  3226  1247  0084               	movwf	4
  3227  1248  1283               	bcf	3,5	;RP0=0, select bank0
  3228  1249  1303               	bcf	3,6	;RP1=0, select bank0
  3229  124A  120A  118A  2721  160A  118A  	fcall	stringtab
  3230  124F  3800               	iorlw	0
  3231  1250  1903               	btfsc	3,2
  3232  1251  0008               	return
  3233                           
  3234                           ;usart.c: 55: {
  3235                           ;usart.c: 56: USART_WriteChar(*str);
  3236  1252  1683               	bsf	3,5	;RP0=1, select bank1
  3237  1253  1303               	bcf	3,6	;RP1=0, select bank1
  3238  1254  084E               	movf	(USART_WriteString@str+1)^(0+128),w
  3239  1255  1283               	bcf	3,5	;RP0=0, select bank0
  3240  1256  1303               	bcf	3,6	;RP1=0, select bank0
  3241  1257  00FF               	movwf	127
  3242  1258  1683               	bsf	3,5	;RP0=1, select bank1
  3243  1259  1303               	bcf	3,6	;RP1=0, select bank1
  3244  125A  084D               	movf	USART_WriteString@str^(0+128),w
  3245  125B  0084               	movwf	4
  3246  125C  1283               	bcf	3,5	;RP0=0, select bank0
  3247  125D  1303               	bcf	3,6	;RP1=0, select bank0
  3248  125E  120A  118A  2721  160A  118A  	fcall	stringtab
  3249  1263  120A  158A  2000  160A  118A  	fcall	_USART_WriteChar
  3250                           
  3251                           ;usart.c: 57: str++;
  3252  1268  3001               	movlw	1
  3253  1269  1683               	bsf	3,5	;RP0=1, select bank1
  3254  126A  1303               	bcf	3,6	;RP1=0, select bank1
  3255  126B  07CD               	addwf	USART_WriteString@str^(0+128),f
  3256  126C  1803               	skipnc
  3257  126D  0ACE               	incf	(USART_WriteString@str+1)^(0+128),f
  3258  126E  2A3E               	goto	l2896
  3259  126F                     __end_of_USART_WriteString:	
  3260                           
  3261                           	psect	text7
  3262  0800                     __ptext7:	
  3263 ;; *************** function _USART_WriteChar *****************
  3264 ;; Defined at:
  3265 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  byte            1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  byte            1    4[BANK1 ] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;		None               void
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         0       0       1       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         0       0       1       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    5
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_USART_WriteString
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _USART_WriteChar
  3295  0800                     _USART_WriteChar:	
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _USART_WriteChar: [wreg]
  3299                           ;USART_WriteChar@byte stored from wreg
  3300  0800  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0801  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0802  00CC               	movwf	USART_WriteChar@byte^(0+128)
  3303  0803                     l227:	
  3304                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3305                           
  3306  0803  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0804  1E0C               	btfss	12,4	;volatile
  3308  0805  2803               	goto	l227
  3309                           
  3310                           ;usart.c: 47: TXREG = byte;
  3311  0806  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0807  1303               	bcf	3,6	;RP1=0, select bank1
  3313  0808  084C               	movf	USART_WriteChar@byte^(0+128),w
  3314  0809  1283               	bcf	3,5	;RP0=0, select bank0
  3315  080A  1303               	bcf	3,6	;RP1=0, select bank0
  3316  080B  0099               	movwf	25	;volatile
  3317  080C  0008               	return
  3318  080D                     __end_of_USART_WriteChar:	
  3319                           
  3320                           	psect	text8
  3321  080D                     __ptext8:	
  3322 ;; *************** function _USART_Init *****************
  3323 ;; Defined at:
  3324 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  BaudRate        4   19[BANK1 ] long 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       4       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       4       0       0
  3341 ;;      Totals:         0       0       8       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    6
  3345 ;; This function calls:
  3346 ;;		___aldiv
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _USART_Init
  3354  080D                     _USART_Init:	
  3355                           
  3356                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3360  080D  1683               	bsf	3,5	;RP0=1, select bank1
  3361  080E  1303               	bcf	3,6	;RP1=0, select bank1
  3362  080F  085B               	movf	USART_Init@BaudRate^(0+128),w
  3363  0810  00DF               	movwf	??_USART_Init^(0+128)
  3364  0811  085C               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3365  0812  00E0               	movwf	(??_USART_Init^(0+128)+1)
  3366  0813  085D               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3367  0814  00E1               	movwf	(??_USART_Init^(0+128)+2)
  3368  0815  085E               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3369  0816  00E2               	movwf	(??_USART_Init^(0+128)+3)
  3370  0817  3004               	movlw	4
  3371  0818                     u3625:	
  3372  0818  1003               	clrc
  3373  0819  0DDF               	rlf	??_USART_Init^(0+128),f
  3374  081A  0DE0               	rlf	(??_USART_Init^(0+128)+1),f
  3375  081B  0DE1               	rlf	(??_USART_Init^(0+128)+2),f
  3376  081C  0DE2               	rlf	(??_USART_Init^(0+128)+3),f
  3377  081D  3EFF               	addlw	-1
  3378  081E  1D03               	skipz
  3379  081F  2818               	goto	u3625
  3380  0820  0862               	movf	(??_USART_Init+3)^(0+128),w
  3381  0821  00CF               	movwf	(___aldiv@divisor+3)^(0+128)
  3382  0822  0861               	movf	(??_USART_Init+2)^(0+128),w
  3383  0823  00CE               	movwf	(___aldiv@divisor+2)^(0+128)
  3384  0824  0860               	movf	(??_USART_Init+1)^(0+128),w
  3385  0825  00CD               	movwf	(___aldiv@divisor+1)^(0+128)
  3386  0826  085F               	movf	??_USART_Init^(0+128),w
  3387  0827  00CC               	movwf	___aldiv@divisor^(0+128)
  3388  0828  3001               	movlw	1
  3389  0829  00D3               	movwf	(___aldiv@dividend+3)^(0+128)
  3390  082A  3019               	movlw	25
  3391  082B  00D2               	movwf	(___aldiv@dividend+2)^(0+128)
  3392  082C  3040               	movlw	64
  3393  082D  00D1               	movwf	(___aldiv@dividend+1)^(0+128)
  3394  082E  3000               	movlw	0
  3395  082F  00D0               	movwf	___aldiv@dividend^(0+128)
  3396  0830  160A  118A  24DF   	fcall	___aldiv
  3397  0833  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0834  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0835  084C               	movf	?___aldiv^(0+128),w
  3400  0836  3EFF               	addlw	255
  3401  0837  0099               	movwf	25	;volatile
  3402                           
  3403                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3404  0838  1398               	bcf	24,7	;volatile
  3405                           
  3406                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3407  0839  1318               	bcf	24,6	;volatile
  3408                           
  3409                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3410  083A  1698               	bsf	24,5	;volatile
  3411                           
  3412                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3413  083B  1218               	bcf	24,4	;volatile
  3414                           
  3415                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3416  083C  1518               	bsf	24,2	;volatile
  3417                           
  3418                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3419  083D  1498               	bsf	24,1	;volatile
  3420                           
  3421                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3422  083E  1018               	bcf	24,0	;volatile
  3423                           
  3424                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3425  083F  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0840  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0841  1798               	bsf	24,7	;volatile
  3428                           
  3429                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3430  0842  1318               	bcf	24,6	;volatile
  3431                           
  3432                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3433  0843  1298               	bcf	24,5	;volatile
  3434                           
  3435                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3436  0844  1618               	bsf	24,4	;volatile
  3437                           
  3438                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3439  0845  1198               	bcf	24,3	;volatile
  3440                           
  3441                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3442  0846  1118               	bcf	24,2	;volatile
  3443                           
  3444                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3445  0847  1098               	bcf	24,1	;volatile
  3446                           
  3447                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3448  0848  1018               	bcf	24,0	;volatile
  3449                           
  3450                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3451  0849  1683               	bsf	3,5	;RP0=1, select bank1
  3452  084A  1303               	bcf	3,6	;RP1=0, select bank1
  3453  084B  120C               	bcf	12,4	;volatile
  3454                           
  3455                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3456  084C  1283               	bcf	3,5	;RP0=0, select bank0
  3457  084D  1303               	bcf	3,6	;RP1=0, select bank0
  3458  084E  120C               	bcf	12,4	;volatile
  3459                           
  3460                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3461  084F  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0850  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0851  168C               	bsf	12,5	;volatile
  3464                           
  3465                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3466  0852  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0853  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0854  128C               	bcf	12,5	;volatile
  3469  0855  0008               	return
  3470  0856                     __end_of_USART_Init:	
  3471                           
  3472                           	psect	text9
  3473  14DF                     __ptext9:	
  3474 ;; *************** function ___aldiv *****************
  3475 ;; Defined at:
  3476 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  divisor         4    4[BANK1 ] long 
  3479 ;;  dividend        4    8[BANK1 ] long 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  quotient        4   15[BANK1 ] long 
  3482 ;;  sign            1   14[BANK1 ] unsigned char 
  3483 ;;  counter         1   13[BANK1 ] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  4    4[BANK1 ] long 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       8       0       0
  3494 ;;      Locals:         0       0       6       0       0
  3495 ;;      Temps:          0       0       1       0       0
  3496 ;;      Totals:         0       0      15       0       0
  3497 ;;Total ram usage:       15 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    5
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_USART_Init
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function ___aldiv
  3509  14DF                     ___aldiv:	
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3513  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  3514  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  3515  14E1  01D6               	clrf	___aldiv@sign^(0+128)
  3516  14E2  1FCF               	btfss	(___aldiv@divisor+3)^(0+128),7
  3517  14E3  2CF1               	goto	l653
  3518  14E4  09CC               	comf	___aldiv@divisor^(0+128),f
  3519  14E5  09CD               	comf	(___aldiv@divisor+1)^(0+128),f
  3520  14E6  09CE               	comf	(___aldiv@divisor+2)^(0+128),f
  3521  14E7  09CF               	comf	(___aldiv@divisor+3)^(0+128),f
  3522  14E8  0ACC               	incf	___aldiv@divisor^(0+128),f
  3523  14E9  1903               	skipnz
  3524  14EA  0ACD               	incf	(___aldiv@divisor+1)^(0+128),f
  3525  14EB  1903               	skipnz
  3526  14EC  0ACE               	incf	(___aldiv@divisor+2)^(0+128),f
  3527  14ED  1903               	skipnz
  3528  14EE  0ACF               	incf	(___aldiv@divisor+3)^(0+128),f
  3529  14EF  01D6               	clrf	___aldiv@sign^(0+128)
  3530  14F0  0AD6               	incf	___aldiv@sign^(0+128),f
  3531  14F1                     l653:	
  3532  14F1  1FD3               	btfss	(___aldiv@dividend+3)^(0+128),7
  3533  14F2  2D02               	goto	l2546
  3534  14F3  09D0               	comf	___aldiv@dividend^(0+128),f
  3535  14F4  09D1               	comf	(___aldiv@dividend+1)^(0+128),f
  3536  14F5  09D2               	comf	(___aldiv@dividend+2)^(0+128),f
  3537  14F6  09D3               	comf	(___aldiv@dividend+3)^(0+128),f
  3538  14F7  0AD0               	incf	___aldiv@dividend^(0+128),f
  3539  14F8  1903               	skipnz
  3540  14F9  0AD1               	incf	(___aldiv@dividend+1)^(0+128),f
  3541  14FA  1903               	skipnz
  3542  14FB  0AD2               	incf	(___aldiv@dividend+2)^(0+128),f
  3543  14FC  1903               	skipnz
  3544  14FD  0AD3               	incf	(___aldiv@dividend+3)^(0+128),f
  3545  14FE  3001               	movlw	1
  3546  14FF  00D4               	movwf	??___aldiv^(0+128)
  3547  1500  0854               	movf	??___aldiv^(0+128),w
  3548  1501  06D6               	xorwf	___aldiv@sign^(0+128),f
  3549  1502                     l2546:	
  3550  1502  3000               	movlw	0
  3551  1503  00DA               	movwf	(___aldiv@quotient+3)^(0+128)
  3552  1504  3000               	movlw	0
  3553  1505  00D9               	movwf	(___aldiv@quotient+2)^(0+128)
  3554  1506  3000               	movlw	0
  3555  1507  00D8               	movwf	(___aldiv@quotient+1)^(0+128)
  3556  1508  3000               	movlw	0
  3557  1509  00D7               	movwf	___aldiv@quotient^(0+128)
  3558  150A  084F               	movf	(___aldiv@divisor+3)^(0+128),w
  3559  150B  044E               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3560  150C  044D               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3561  150D  044C               	iorwf	___aldiv@divisor^(0+128),w
  3562  150E  1903               	skipnz
  3563  150F  2D57               	goto	l2568
  3564  1510  01D5               	clrf	___aldiv@counter^(0+128)
  3565  1511  0AD5               	incf	___aldiv@counter^(0+128),f
  3566  1512                     l2554:	
  3567  1512  1BCF               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3568  1513  2D22               	goto	l2556
  3569  1514  3001               	movlw	1
  3570  1515  00D4               	movwf	??___aldiv^(0+128)
  3571  1516                     u2895:	
  3572  1516  1003               	clrc
  3573  1517  0DCC               	rlf	___aldiv@divisor^(0+128),f
  3574  1518  0DCD               	rlf	(___aldiv@divisor+1)^(0+128),f
  3575  1519  0DCE               	rlf	(___aldiv@divisor+2)^(0+128),f
  3576  151A  0DCF               	rlf	(___aldiv@divisor+3)^(0+128),f
  3577  151B  0BD4               	decfsz	??___aldiv^(0+128),f
  3578  151C  2D16               	goto	u2895
  3579  151D  3001               	movlw	1
  3580  151E  00D4               	movwf	??___aldiv^(0+128)
  3581  151F  0854               	movf	??___aldiv^(0+128),w
  3582  1520  07D5               	addwf	___aldiv@counter^(0+128),f
  3583  1521  2D12               	goto	l2554
  3584  1522                     l2556:	
  3585  1522  3001               	movlw	1
  3586  1523  00D4               	movwf	??___aldiv^(0+128)
  3587  1524                     u2915:	
  3588  1524  1003               	clrc
  3589  1525  0DD7               	rlf	___aldiv@quotient^(0+128),f
  3590  1526  0DD8               	rlf	(___aldiv@quotient+1)^(0+128),f
  3591  1527  0DD9               	rlf	(___aldiv@quotient+2)^(0+128),f
  3592  1528  0DDA               	rlf	(___aldiv@quotient+3)^(0+128),f
  3593  1529  0BD4               	decfsz	??___aldiv^(0+128),f
  3594  152A  2D24               	goto	u2915
  3595  152B  084F               	movf	(___aldiv@divisor+3)^(0+128),w
  3596  152C  0253               	subwf	(___aldiv@dividend+3)^(0+128),w
  3597  152D  1D03               	skipz
  3598  152E  2D39               	goto	u2925
  3599  152F  084E               	movf	(___aldiv@divisor+2)^(0+128),w
  3600  1530  0252               	subwf	(___aldiv@dividend+2)^(0+128),w
  3601  1531  1D03               	skipz
  3602  1532  2D39               	goto	u2925
  3603  1533  084D               	movf	(___aldiv@divisor+1)^(0+128),w
  3604  1534  0251               	subwf	(___aldiv@dividend+1)^(0+128),w
  3605  1535  1D03               	skipz
  3606  1536  2D39               	goto	u2925
  3607  1537  084C               	movf	___aldiv@divisor^(0+128),w
  3608  1538  0250               	subwf	___aldiv@dividend^(0+128),w
  3609  1539                     u2925:	
  3610  1539  1C03               	skipc
  3611  153A  2D4A               	goto	l2564
  3612  153B  084C               	movf	___aldiv@divisor^(0+128),w
  3613  153C  02D0               	subwf	___aldiv@dividend^(0+128),f
  3614  153D  084D               	movf	(___aldiv@divisor+1)^(0+128),w
  3615  153E  1C03               	skipc
  3616  153F  0F4D               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3617  1540  02D1               	subwf	(___aldiv@dividend+1)^(0+128),f
  3618  1541  084E               	movf	(___aldiv@divisor+2)^(0+128),w
  3619  1542  1C03               	skipc
  3620  1543  0F4E               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3621  1544  02D2               	subwf	(___aldiv@dividend+2)^(0+128),f
  3622  1545  084F               	movf	(___aldiv@divisor+3)^(0+128),w
  3623  1546  1C03               	skipc
  3624  1547  0F4F               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3625  1548  02D3               	subwf	(___aldiv@dividend+3)^(0+128),f
  3626  1549  1457               	bsf	___aldiv@quotient^(0+128),0
  3627  154A                     l2564:	
  3628  154A  3001               	movlw	1
  3629  154B                     u2935:	
  3630  154B  1003               	clrc
  3631  154C  0CCF               	rrf	(___aldiv@divisor+3)^(0+128),f
  3632  154D  0CCE               	rrf	(___aldiv@divisor+2)^(0+128),f
  3633  154E  0CCD               	rrf	(___aldiv@divisor+1)^(0+128),f
  3634  154F  0CCC               	rrf	___aldiv@divisor^(0+128),f
  3635  1550  3EFF               	addlw	-1
  3636  1551  1D03               	skipz
  3637  1552  2D4B               	goto	u2935
  3638  1553  3001               	movlw	1
  3639  1554  02D5               	subwf	___aldiv@counter^(0+128),f
  3640  1555  1D03               	btfss	3,2
  3641  1556  2D22               	goto	l2556
  3642  1557                     l2568:	
  3643  1557  0856               	movf	___aldiv@sign^(0+128),w
  3644  1558  1903               	btfsc	3,2
  3645  1559  2D65               	goto	l2572
  3646  155A  09D7               	comf	___aldiv@quotient^(0+128),f
  3647  155B  09D8               	comf	(___aldiv@quotient+1)^(0+128),f
  3648  155C  09D9               	comf	(___aldiv@quotient+2)^(0+128),f
  3649  155D  09DA               	comf	(___aldiv@quotient+3)^(0+128),f
  3650  155E  0AD7               	incf	___aldiv@quotient^(0+128),f
  3651  155F  1903               	skipnz
  3652  1560  0AD8               	incf	(___aldiv@quotient+1)^(0+128),f
  3653  1561  1903               	skipnz
  3654  1562  0AD9               	incf	(___aldiv@quotient+2)^(0+128),f
  3655  1563  1903               	skipnz
  3656  1564  0ADA               	incf	(___aldiv@quotient+3)^(0+128),f
  3657  1565                     l2572:	
  3658  1565  085A               	movf	(___aldiv@quotient+3)^(0+128),w
  3659  1566  00CF               	movwf	(?___aldiv+3)^(0+128)
  3660  1567  0859               	movf	(___aldiv@quotient+2)^(0+128),w
  3661  1568  00CE               	movwf	(?___aldiv+2)^(0+128)
  3662  1569  0858               	movf	(___aldiv@quotient+1)^(0+128),w
  3663  156A  00CD               	movwf	(?___aldiv+1)^(0+128)
  3664  156B  0857               	movf	___aldiv@quotient^(0+128),w
  3665  156C  00CC               	movwf	?___aldiv^(0+128)
  3666  156D  0008               	return
  3667  156E                     __end_of___aldiv:	
  3668                           
  3669                           	psect	text10
  3670  1020                     __ptext10:	
  3671 ;; *************** function _TIMER0_Set *****************
  3672 ;; Defined at:
  3673 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  contagens       1    wreg     unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  contagens       1    4[BANK1 ] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;		None               void
  3680 ;; Registers used:
  3681 ;;		wreg
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         0       0       1       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       0       1       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    5
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _TIMER0_Set
  3703  1020                     _TIMER0_Set:	
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _TIMER0_Set: [wreg]
  3707                           ;TIMER0_Set@contagens stored from wreg
  3708  1020  1683               	bsf	3,5	;RP0=1, select bank1
  3709  1021  1303               	bcf	3,6	;RP1=0, select bank1
  3710  1022  00CC               	movwf	TIMER0_Set@contagens^(0+128)
  3711                           
  3712                           ;timers.c: 22: TMR0 = contagens;
  3713  1023  084C               	movf	TIMER0_Set@contagens^(0+128),w
  3714  1024  1283               	bcf	3,5	;RP0=0, select bank0
  3715  1025  1303               	bcf	3,6	;RP1=0, select bank0
  3716  1026  0081               	movwf	1	;volatile
  3717  1027  0008               	return
  3718  1028                     __end_of_TIMER0_Set:	
  3719                           
  3720                           	psect	text11
  3721  1030                     __ptext11:	
  3722 ;; *************** function _TIMER0_Init *****************
  3723 ;; Defined at:
  3724 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		None
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    5
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _TIMER0_Init
  3754  1030                     _TIMER0_Init:	
  3755                           
  3756                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _TIMER0_Init: []
  3760  1030  1683               	bsf	3,5	;RP0=1, select bank1
  3761  1031  1303               	bcf	3,6	;RP1=0, select bank1
  3762  1032  1281               	bcf	1,5	;volatile
  3763                           
  3764                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3765  1033  1201               	bcf	1,4	;volatile
  3766                           
  3767                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3768  1034  1181               	bcf	1,3	;volatile
  3769                           
  3770                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3771  1035  1501               	bsf	1,2	;volatile
  3772                           
  3773                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3774  1036  1481               	bsf	1,1	;volatile
  3775                           
  3776                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3777  1037  1401               	bsf	1,0	;volatile
  3778                           
  3779                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3780  1038  110B               	bcf	11,2	;volatile
  3781                           
  3782                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3783  1039  168B               	bsf	11,5	;volatile
  3784  103A  0008               	return
  3785  103B                     __end_of_TIMER0_Init:	
  3786                           
  3787                           	psect	text12
  3788  119B                     __ptext12:	
  3789 ;; *************** function _PWM_Init *****************
  3790 ;; Defined at:
  3791 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0
  3808 ;;      Totals:         0       0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    5
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function _PWM_Init
  3821  119B                     _PWM_Init:	
  3822                           
  3823                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _PWM_Init: [wreg]
  3827  119B  1283               	bcf	3,5	;RP0=0, select bank0
  3828  119C  1303               	bcf	3,6	;RP1=0, select bank0
  3829  119D  1492               	bsf	18,1	;volatile
  3830                           
  3831                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3832  119E  1012               	bcf	18,0	;volatile
  3833                           
  3834                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3835  119F  1312               	bcf	18,6	;volatile
  3836                           
  3837                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3838  11A0  1292               	bcf	18,5	;volatile
  3839                           
  3840                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3841  11A1  1212               	bcf	18,4	;volatile
  3842                           
  3843                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3844  11A2  1192               	bcf	18,3	;volatile
  3845                           
  3846                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3847  11A3  1512               	bsf	18,2	;volatile
  3848                           
  3849                           ;pwm.c: 27: PR2 = 255;
  3850  11A4  30FF               	movlw	255
  3851  11A5  1683               	bsf	3,5	;RP0=1, select bank1
  3852  11A6  1303               	bcf	3,6	;RP1=0, select bank1
  3853  11A7  0092               	movwf	18	;volatile
  3854                           
  3855                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3856  11A8  1283               	bcf	3,5	;RP0=0, select bank0
  3857  11A9  1303               	bcf	3,6	;RP1=0, select bank0
  3858  11AA  1597               	bsf	23,3	;volatile
  3859                           
  3860                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3861  11AB  1517               	bsf	23,2	;volatile
  3862                           
  3863                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3864  11AC  1497               	bsf	23,1	;volatile
  3865                           
  3866                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3867  11AD  1417               	bsf	23,0	;volatile
  3868                           
  3869                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3870  11AE  1683               	bsf	3,5	;RP0=1, select bank1
  3871  11AF  1303               	bcf	3,6	;RP1=0, select bank1
  3872  11B0  150C               	bsf	12,2	;volatile
  3873                           
  3874                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3875  11B1  1283               	bcf	3,5	;RP0=0, select bank0
  3876  11B2  1303               	bcf	3,6	;RP1=0, select bank0
  3877  11B3  110C               	bcf	12,2	;volatile
  3878                           
  3879                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3880  11B4  159D               	bsf	29,3	;volatile
  3881                           
  3882                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3883  11B5  151D               	bsf	29,2	;volatile
  3884                           
  3885                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3886  11B6  149D               	bsf	29,1	;volatile
  3887                           
  3888                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3889  11B7  141D               	bsf	29,0	;volatile
  3890                           
  3891                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3892  11B8  1683               	bsf	3,5	;RP0=1, select bank1
  3893  11B9  1303               	bcf	3,6	;RP1=0, select bank1
  3894  11BA  140D               	bsf	13,0	;volatile
  3895                           
  3896                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3897  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3898  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  3899  11BD  100D               	bcf	13,0	;volatile
  3900  11BE  0008               	return
  3901  11BF                     __end_of_PWM_Init:	
  3902                           
  3903                           	psect	text13
  3904  1134                     __ptext13:	
  3905 ;; *************** function _PWM_DutyCycle2 *****************
  3906 ;; Defined at:
  3907 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  valor           2    4[BANK1 ] int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       0       2       0       0
  3922 ;;      Locals:         0       0       0       0       0
  3923 ;;      Temps:          0       0       2       0       0
  3924 ;;      Totals:         0       0       4       0       0
  3925 ;;Total ram usage:        4 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    5
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function _PWM_DutyCycle2
  3937  1134                     _PWM_DutyCycle2:	
  3938                           
  3939                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3943  1134  1683               	bsf	3,5	;RP0=1, select bank1
  3944  1135  1303               	bcf	3,6	;RP1=0, select bank1
  3945  1136  084D               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3946  1137  00CF               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3947  1138  084C               	movf	PWM_DutyCycle2@valor^(0+128),w
  3948  1139  00CE               	movwf	??_PWM_DutyCycle2^(0+128)
  3949  113A  0D4F               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3950  113B  0CCF               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3951  113C  0CCE               	rrf	??_PWM_DutyCycle2^(0+128),f
  3952  113D  0D4F               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3953  113E  0CCF               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3954  113F  0CCE               	rrf	??_PWM_DutyCycle2^(0+128),f
  3955  1140  084E               	movf	??_PWM_DutyCycle2^(0+128),w
  3956  1141  1283               	bcf	3,5	;RP0=0, select bank0
  3957  1142  1303               	bcf	3,6	;RP1=0, select bank0
  3958  1143  009B               	movwf	27	;volatile
  3959                           
  3960                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3961  1144  1683               	bsf	3,5	;RP0=1, select bank1
  3962  1145  1303               	bcf	3,6	;RP1=0, select bank1
  3963  1146  084C               	movf	PWM_DutyCycle2@valor^(0+128),w
  3964  1147  00CE               	movwf	??_PWM_DutyCycle2^(0+128)
  3965  1148  3003               	movlw	3
  3966  1149                     u3595:	
  3967  1149  1003               	clrc
  3968  114A  0DCE               	rlf	??_PWM_DutyCycle2^(0+128),f
  3969  114B  3EFF               	addlw	-1
  3970  114C  1D03               	skipz
  3971  114D  2949               	goto	u3595
  3972  114E  1003               	clrc
  3973  114F  0D4E               	rlf	??_PWM_DutyCycle2^(0+128),w
  3974  1150  380C               	iorlw	12
  3975  1151  1283               	bcf	3,5	;RP0=0, select bank0
  3976  1152  1303               	bcf	3,6	;RP1=0, select bank0
  3977  1153  009D               	movwf	29	;volatile
  3978  1154  0008               	return
  3979  1155                     __end_of_PWM_DutyCycle2:	
  3980                           
  3981                           	psect	text14
  3982  1113                     __ptext14:	
  3983 ;; *************** function _PWM_DutyCycle1 *****************
  3984 ;; Defined at:
  3985 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  valor           2    4[BANK1 ] int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       2       0       0
  4000 ;;      Locals:         0       0       0       0       0
  4001 ;;      Temps:          0       0       2       0       0
  4002 ;;      Totals:         0       0       4       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    5
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _PWM_DutyCycle1
  4015  1113                     _PWM_DutyCycle1:	
  4016                           
  4017                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4021  1113  1683               	bsf	3,5	;RP0=1, select bank1
  4022  1114  1303               	bcf	3,6	;RP1=0, select bank1
  4023  1115  084D               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4024  1116  00CF               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4025  1117  084C               	movf	PWM_DutyCycle1@valor^(0+128),w
  4026  1118  00CE               	movwf	??_PWM_DutyCycle1^(0+128)
  4027  1119  0D4F               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4028  111A  0CCF               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4029  111B  0CCE               	rrf	??_PWM_DutyCycle1^(0+128),f
  4030  111C  0D4F               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4031  111D  0CCF               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4032  111E  0CCE               	rrf	??_PWM_DutyCycle1^(0+128),f
  4033  111F  084E               	movf	??_PWM_DutyCycle1^(0+128),w
  4034  1120  1283               	bcf	3,5	;RP0=0, select bank0
  4035  1121  1303               	bcf	3,6	;RP1=0, select bank0
  4036  1122  0095               	movwf	21	;volatile
  4037                           
  4038                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4039  1123  1683               	bsf	3,5	;RP0=1, select bank1
  4040  1124  1303               	bcf	3,6	;RP1=0, select bank1
  4041  1125  084C               	movf	PWM_DutyCycle1@valor^(0+128),w
  4042  1126  00CE               	movwf	??_PWM_DutyCycle1^(0+128)
  4043  1127  3003               	movlw	3
  4044  1128                     u3655:	
  4045  1128  1003               	clrc
  4046  1129  0DCE               	rlf	??_PWM_DutyCycle1^(0+128),f
  4047  112A  3EFF               	addlw	-1
  4048  112B  1D03               	skipz
  4049  112C  2928               	goto	u3655
  4050  112D  1003               	clrc
  4051  112E  0D4E               	rlf	??_PWM_DutyCycle1^(0+128),w
  4052  112F  380C               	iorlw	12
  4053  1130  1283               	bcf	3,5	;RP0=0, select bank0
  4054  1131  1303               	bcf	3,6	;RP1=0, select bank0
  4055  1132  0097               	movwf	23	;volatile
  4056  1133  0008               	return
  4057  1134                     __end_of_PWM_DutyCycle1:	
  4058                           
  4059                           	psect	text15
  4060  120D                     __ptext15:	
  4061 ;; *************** function _LCD_WriteString *****************
  4062 ;; Defined at:
  4063 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4066 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  4067 ;;		 -> STR_13(17), 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;		None               void
  4072 ;; Registers used:
  4073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       2       0       0
  4080 ;;      Locals:         0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       0       2       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    6
  4086 ;; This function calls:
  4087 ;;		_LCD_WriteData
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _LCD_WriteString
  4095  120D                     _LCD_WriteString:	
  4096  120D                     l3016:	
  4097                           ;lcd.c: 63: while(*Str != '\0')
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4101                           
  4102  120D  1683               	bsf	3,5	;RP0=1, select bank1
  4103  120E  1303               	bcf	3,6	;RP1=0, select bank1
  4104  120F  084F               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4105  1210  1283               	bcf	3,5	;RP0=0, select bank0
  4106  1211  1303               	bcf	3,6	;RP1=0, select bank0
  4107  1212  00FF               	movwf	127
  4108  1213  1683               	bsf	3,5	;RP0=1, select bank1
  4109  1214  1303               	bcf	3,6	;RP1=0, select bank1
  4110  1215  084E               	movf	LCD_WriteString@Str^(0+128),w
  4111  1216  0084               	movwf	4
  4112  1217  1283               	bcf	3,5	;RP0=0, select bank0
  4113  1218  1303               	bcf	3,6	;RP1=0, select bank0
  4114  1219  120A  118A  2721  160A  118A  	fcall	stringtab
  4115  121E  3800               	iorlw	0
  4116  121F  1903               	btfsc	3,2
  4117  1220  0008               	return
  4118                           
  4119                           ;lcd.c: 64: {
  4120                           ;lcd.c: 65: LCD_WriteData(*Str);
  4121  1221  1683               	bsf	3,5	;RP0=1, select bank1
  4122  1222  1303               	bcf	3,6	;RP1=0, select bank1
  4123  1223  084F               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4124  1224  1283               	bcf	3,5	;RP0=0, select bank0
  4125  1225  1303               	bcf	3,6	;RP1=0, select bank0
  4126  1226  00FF               	movwf	127
  4127  1227  1683               	bsf	3,5	;RP0=1, select bank1
  4128  1228  1303               	bcf	3,6	;RP1=0, select bank1
  4129  1229  084E               	movf	LCD_WriteString@Str^(0+128),w
  4130  122A  0084               	movwf	4
  4131  122B  1283               	bcf	3,5	;RP0=0, select bank0
  4132  122C  1303               	bcf	3,6	;RP1=0, select bank0
  4133  122D  120A  118A  2721  160A  118A  	fcall	stringtab
  4134  1232  160A  118A  2088  160A  118A  	fcall	_LCD_WriteData
  4135                           
  4136                           ;lcd.c: 66: Str++;
  4137  1237  3001               	movlw	1
  4138  1238  1683               	bsf	3,5	;RP0=1, select bank1
  4139  1239  1303               	bcf	3,6	;RP1=0, select bank1
  4140  123A  07CE               	addwf	LCD_WriteString@Str^(0+128),f
  4141  123B  1803               	skipnc
  4142  123C  0ACF               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4143  123D  2A0D               	goto	l3016
  4144  123E                     __end_of_LCD_WriteString:	
  4145                           
  4146                           	psect	text16
  4147  1088                     __ptext16:	
  4148 ;; *************** function _LCD_WriteData *****************
  4149 ;; Defined at:
  4150 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  Byte            1    wreg     unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  Byte            1    5[BANK1 ] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;		None               void
  4157 ;; Registers used:
  4158 ;;		wreg
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       0       0       0       0
  4165 ;;      Locals:         0       0       1       0       0
  4166 ;;      Temps:          0       0       1       0       0
  4167 ;;      Totals:         0       0       2       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    5
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_LCD_WriteString
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _LCD_WriteData
  4180  1088                     _LCD_WriteData:	
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _LCD_WriteData: [wreg]
  4184                           ;LCD_WriteData@Byte stored from wreg
  4185  1088  1683               	bsf	3,5	;RP0=1, select bank1
  4186  1089  1303               	bcf	3,6	;RP1=0, select bank1
  4187  108A  00CD               	movwf	LCD_WriteData@Byte^(0+128)
  4188                           
  4189                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4190  108B  1283               	bcf	3,5	;RP0=0, select bank0
  4191  108C  1303               	bcf	3,6	;RP1=0, select bank0
  4192  108D  1409               	bsf	9,0	;volatile
  4193                           
  4194                           ;lcd.c: 51: PORTD = Byte;
  4195  108E  1683               	bsf	3,5	;RP0=1, select bank1
  4196  108F  1303               	bcf	3,6	;RP1=0, select bank1
  4197  1090  084D               	movf	LCD_WriteData@Byte^(0+128),w
  4198  1091  1283               	bcf	3,5	;RP0=0, select bank0
  4199  1092  1303               	bcf	3,6	;RP1=0, select bank0
  4200  1093  0088               	movwf	8	;volatile
  4201                           
  4202                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4203  1094  1489               	bsf	9,1	;volatile
  4204                           
  4205                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4206  1095  303D               	movlw	61
  4207  1096  1683               	bsf	3,5	;RP0=1, select bank1
  4208  1097  1303               	bcf	3,6	;RP1=0, select bank1
  4209  1098  00CC               	movwf	??_LCD_WriteData^(0+128)
  4210  1099                     u4547:	
  4211  1099  0BCC               	decfsz	??_LCD_WriteData^(0+128),f
  4212  109A  2899               	goto	u4547
  4213                           
  4214                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4215  109B  1283               	bcf	3,5	;RP0=0, select bank0
  4216  109C  1303               	bcf	3,6	;RP1=0, select bank0
  4217  109D  1089               	bcf	9,1	;volatile
  4218  109E  0008               	return
  4219  109F                     __end_of_LCD_WriteData:	
  4220                           
  4221                           	psect	text17
  4222  13E8                     __ptext17:	
  4223 ;; *************** function _LCD_Init *****************
  4224 ;; Defined at:
  4225 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;		None               void
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, pclath, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4239 ;;      Params:         0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0
  4241 ;;      Temps:          0       0       2       0       0
  4242 ;;      Totals:         0       0       2       0       0
  4243 ;;Total ram usage:        2 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    6
  4246 ;; This function calls:
  4247 ;;		_LCD_WriteCmd
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           
  4254                           ;psect for function _LCD_Init
  4255  13E8                     _LCD_Init:	
  4256                           
  4257                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4261  13E8  1683               	bsf	3,5	;RP0=1, select bank1
  4262  13E9  1303               	bcf	3,6	;RP1=0, select bank1
  4263  13EA  119F               	bcf	31,3	;volatile
  4264                           
  4265                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4266  13EB  151F               	bsf	31,2	;volatile
  4267                           
  4268                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4269  13EC  109F               	bcf	31,1	;volatile
  4270                           
  4271                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4272  13ED  101F               	bcf	31,0	;volatile
  4273                           
  4274                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4275  13EE  305A               	movlw	90
  4276  13EF  00CF               	movwf	(??_LCD_Init^(0+128)+1)
  4277  13F0  30C3               	movlw	195
  4278  13F1  00CE               	movwf	??_LCD_Init^(0+128)
  4279  13F2                     u4557:	
  4280  13F2  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4281  13F3  2BF2               	goto	u4557
  4282  13F4  0BCF               	decfsz	(??_LCD_Init^(0+128)+1),f
  4283  13F5  2BF2               	goto	u4557
  4284                           
  4285                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4286  13F6  3030               	movlw	48
  4287  13F7  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4288                           
  4289                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4290  13FC  3018               	movlw	24
  4291  13FD  1683               	bsf	3,5	;RP0=1, select bank1
  4292  13FE  1303               	bcf	3,6	;RP1=0, select bank1
  4293  13FF  00CF               	movwf	(??_LCD_Init^(0+128)+1)
  4294  1400  30EF               	movlw	239
  4295  1401  00CE               	movwf	??_LCD_Init^(0+128)
  4296  1402                     u4567:	
  4297  1402  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4298  1403  2C02               	goto	u4567
  4299  1404  0BCF               	decfsz	(??_LCD_Init^(0+128)+1),f
  4300  1405  2C02               	goto	u4567
  4301                           
  4302                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4303  1406  3030               	movlw	48
  4304  1407  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4305                           
  4306                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4307  140C  3099               	movlw	153
  4308  140D  1683               	bsf	3,5	;RP0=1, select bank1
  4309  140E  1303               	bcf	3,6	;RP1=0, select bank1
  4310  140F  00CE               	movwf	??_LCD_Init^(0+128)
  4311  1410                     u4577:	
  4312  1410  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4313  1411  2C10               	goto	u4577
  4314                           
  4315                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4316  1412  3030               	movlw	48
  4317  1413  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4318                           
  4319                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4320  1418  303D               	movlw	61
  4321  1419  1683               	bsf	3,5	;RP0=1, select bank1
  4322  141A  1303               	bcf	3,6	;RP1=0, select bank1
  4323  141B  00CE               	movwf	??_LCD_Init^(0+128)
  4324  141C                     u4587:	
  4325  141C  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4326  141D  2C1C               	goto	u4587
  4327                           
  4328                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4329  141E  3038               	movlw	56
  4330  141F  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4331                           
  4332                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4333  1424  303D               	movlw	61
  4334  1425  1683               	bsf	3,5	;RP0=1, select bank1
  4335  1426  1303               	bcf	3,6	;RP1=0, select bank1
  4336  1427  00CE               	movwf	??_LCD_Init^(0+128)
  4337  1428                     u4597:	
  4338  1428  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4339  1429  2C28               	goto	u4597
  4340                           
  4341                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4342  142A  3001               	movlw	1
  4343  142B  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4344                           
  4345                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4346  1430  300C               	movlw	12
  4347  1431  1683               	bsf	3,5	;RP0=1, select bank1
  4348  1432  1303               	bcf	3,6	;RP1=0, select bank1
  4349  1433  00CF               	movwf	(??_LCD_Init^(0+128)+1)
  4350  1434  30F7               	movlw	247
  4351  1435  00CE               	movwf	??_LCD_Init^(0+128)
  4352  1436                     u4607:	
  4353  1436  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4354  1437  2C36               	goto	u4607
  4355  1438  0BCF               	decfsz	(??_LCD_Init^(0+128)+1),f
  4356  1439  2C36               	goto	u4607
  4357                           
  4358                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4359  143A  300C               	movlw	12
  4360  143B  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4361                           
  4362                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4363  1440  303D               	movlw	61
  4364  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4365  1442  1303               	bcf	3,6	;RP1=0, select bank1
  4366  1443  00CE               	movwf	??_LCD_Init^(0+128)
  4367  1444                     u4617:	
  4368  1444  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4369  1445  2C44               	goto	u4617
  4370                           
  4371                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4372  1446  3006               	movlw	6
  4373  1447  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4374                           
  4375                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4376  144C  303D               	movlw	61
  4377  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4378  144E  1303               	bcf	3,6	;RP1=0, select bank1
  4379  144F  00CE               	movwf	??_LCD_Init^(0+128)
  4380  1450                     u4627:	
  4381  1450  0BCE               	decfsz	??_LCD_Init^(0+128),f
  4382  1451  2C50               	goto	u4627
  4383  1452  0008               	return
  4384  1453                     __end_of_LCD_Init:	
  4385                           
  4386                           	psect	text18
  4387  10F3                     __ptext18:	
  4388 ;; *************** function _LCD_Cursor *****************
  4389 ;; Defined at:
  4390 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  Row             1    wreg     unsigned char 
  4393 ;;  Col             1    4[BANK1 ] unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  Row             1    6[BANK1 ] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         0       0       1       0       0
  4406 ;;      Locals:         0       0       1       0       0
  4407 ;;      Temps:          0       0       1       0       0
  4408 ;;      Totals:         0       0       3       0       0
  4409 ;;Total ram usage:        3 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    5
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _LCD_Cursor
  4421  10F3                     _LCD_Cursor:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4425                           ;LCD_Cursor@Row stored from wreg
  4426  10F3  1683               	bsf	3,5	;RP0=1, select bank1
  4427  10F4  1303               	bcf	3,6	;RP1=0, select bank1
  4428  10F5  00CE               	movwf	LCD_Cursor@Row^(0+128)
  4429                           
  4430                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4431  10F6  1283               	bcf	3,5	;RP0=0, select bank0
  4432  10F7  1303               	bcf	3,6	;RP1=0, select bank0
  4433  10F8  1009               	bcf	9,0	;volatile
  4434                           
  4435                           ;lcd.c: 14: if (Row == 0)
  4436  10F9  1683               	bsf	3,5	;RP0=1, select bank1
  4437  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  4438  10FB  08CE               	movf	LCD_Cursor@Row^(0+128),f
  4439  10FC  1D03               	skipz
  4440  10FD  2901               	goto	l3002
  4441                           
  4442                           ;lcd.c: 15: {
  4443                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4444  10FE  084C               	movf	LCD_Cursor@Col^(0+128),w
  4445  10FF  3E80               	addlw	128
  4446  1100  2905               	goto	L2
  4447  1101                     l3002:	
  4448                           ;lcd.c: 17: }
  4449                           
  4450                           
  4451                           ;lcd.c: 18: else
  4452                           ;lcd.c: 19: {
  4453                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4454  1101  1683               	bsf	3,5	;RP0=1, select bank1
  4455  1102  1303               	bcf	3,6	;RP1=0, select bank1
  4456  1103  084C               	movf	LCD_Cursor@Col^(0+128),w
  4457  1104  3EC0               	addlw	192
  4458  1105                     L2:	
  4459  1105  1283               	bcf	3,5	;RP0=0, select bank0
  4460  1106  1303               	bcf	3,6	;RP1=0, select bank0
  4461  1107  0088               	movwf	8	;volatile
  4462                           
  4463                           ;lcd.c: 21: }
  4464                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4465  1108  1489               	bsf	9,1	;volatile
  4466                           
  4467                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4468  1109  303D               	movlw	61
  4469  110A  1683               	bsf	3,5	;RP0=1, select bank1
  4470  110B  1303               	bcf	3,6	;RP1=0, select bank1
  4471  110C  00CD               	movwf	??_LCD_Cursor^(0+128)
  4472  110D                     u4637:	
  4473  110D  0BCD               	decfsz	??_LCD_Cursor^(0+128),f
  4474  110E  290D               	goto	u4637
  4475                           
  4476                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4477  110F  1283               	bcf	3,5	;RP0=0, select bank0
  4478  1110  1303               	bcf	3,6	;RP1=0, select bank0
  4479  1111  1089               	bcf	9,1	;volatile
  4480  1112  0008               	return
  4481  1113                     __end_of_LCD_Cursor:	
  4482                           
  4483                           	psect	text19
  4484  11E4                     __ptext19:	
  4485 ;; *************** function _LCD_Clear *****************
  4486 ;; Defined at:
  4487 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0
  4503 ;;      Temps:          0       0       2       0       0
  4504 ;;      Totals:         0       0       2       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    6
  4508 ;; This function calls:
  4509 ;;		_LCD_WriteCmd
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _LCD_Clear
  4517  11E4                     _LCD_Clear:	
  4518                           
  4519                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4523  11E4  3001               	movlw	1
  4524  11E5  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4525                           
  4526                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4527  11EA  300C               	movlw	12
  4528  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  4529  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  4530  11ED  00CF               	movwf	(??_LCD_Clear^(0+128)+1)
  4531  11EE  30F7               	movlw	247
  4532  11EF  00CE               	movwf	??_LCD_Clear^(0+128)
  4533  11F0                     u4647:	
  4534  11F0  0BCE               	decfsz	??_LCD_Clear^(0+128),f
  4535  11F1  29F0               	goto	u4647
  4536  11F2  0BCF               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4537  11F3  29F0               	goto	u4647
  4538                           
  4539                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4540  11F4  300C               	movlw	12
  4541  11F5  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4542                           
  4543                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4544  11FA  303D               	movlw	61
  4545  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  4546  11FC  1303               	bcf	3,6	;RP1=0, select bank1
  4547  11FD  00CE               	movwf	??_LCD_Clear^(0+128)
  4548  11FE                     u4657:	
  4549  11FE  0BCE               	decfsz	??_LCD_Clear^(0+128),f
  4550  11FF  29FE               	goto	u4657
  4551                           
  4552                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4553  1200  3006               	movlw	6
  4554  1201  160A  118A  2071  160A  118A  	fcall	_LCD_WriteCmd
  4555                           
  4556                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4557  1206  303D               	movlw	61
  4558  1207  1683               	bsf	3,5	;RP0=1, select bank1
  4559  1208  1303               	bcf	3,6	;RP1=0, select bank1
  4560  1209  00CE               	movwf	??_LCD_Clear^(0+128)
  4561  120A                     u4667:	
  4562  120A  0BCE               	decfsz	??_LCD_Clear^(0+128),f
  4563  120B  2A0A               	goto	u4667
  4564  120C  0008               	return
  4565  120D                     __end_of_LCD_Clear:	
  4566                           
  4567                           	psect	text20
  4568  1071                     __ptext20:	
  4569 ;; *************** function _LCD_WriteCmd *****************
  4570 ;; Defined at:
  4571 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  Byte            1    wreg     unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  Byte            1    5[BANK1 ] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       0       1       0       0
  4587 ;;      Temps:          0       0       1       0       0
  4588 ;;      Totals:         0       0       2       0       0
  4589 ;;Total ram usage:        2 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    5
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_LCD_Clear
  4596 ;;		_LCD_Init
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _LCD_WriteCmd
  4602  1071                     _LCD_WriteCmd:	
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in _LCD_WriteCmd: [wreg]
  4606                           ;LCD_WriteCmd@Byte stored from wreg
  4607  1071  1683               	bsf	3,5	;RP0=1, select bank1
  4608  1072  1303               	bcf	3,6	;RP1=0, select bank1
  4609  1073  00CD               	movwf	LCD_WriteCmd@Byte^(0+128)
  4610                           
  4611                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4612  1074  1283               	bcf	3,5	;RP0=0, select bank0
  4613  1075  1303               	bcf	3,6	;RP1=0, select bank0
  4614  1076  1009               	bcf	9,0	;volatile
  4615                           
  4616                           ;lcd.c: 36: PORTD = Byte;
  4617  1077  1683               	bsf	3,5	;RP0=1, select bank1
  4618  1078  1303               	bcf	3,6	;RP1=0, select bank1
  4619  1079  084D               	movf	LCD_WriteCmd@Byte^(0+128),w
  4620  107A  1283               	bcf	3,5	;RP0=0, select bank0
  4621  107B  1303               	bcf	3,6	;RP1=0, select bank0
  4622  107C  0088               	movwf	8	;volatile
  4623                           
  4624                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4625  107D  1489               	bsf	9,1	;volatile
  4626                           
  4627                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4628  107E  303D               	movlw	61
  4629  107F  1683               	bsf	3,5	;RP0=1, select bank1
  4630  1080  1303               	bcf	3,6	;RP1=0, select bank1
  4631  1081  00CC               	movwf	??_LCD_WriteCmd^(0+128)
  4632  1082                     u4677:	
  4633  1082  0BCC               	decfsz	??_LCD_WriteCmd^(0+128),f
  4634  1083  2882               	goto	u4677
  4635                           
  4636                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4637  1084  1283               	bcf	3,5	;RP0=0, select bank0
  4638  1085  1303               	bcf	3,6	;RP1=0, select bank0
  4639  1086  1089               	bcf	9,1	;volatile
  4640  1087  0008               	return
  4641  1088                     __end_of_LCD_WriteCmd:	
  4642                           
  4643                           	psect	text21
  4644  104B                     __ptext21:	
  4645 ;; *************** function _ADC_Init *****************
  4646 ;; Defined at:
  4647 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		None
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    5
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _ADC_Init
  4677  104B                     _ADC_Init:	
  4678                           
  4679                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in _ADC_Init: []
  4683  104B  1683               	bsf	3,5	;RP0=1, select bank1
  4684  104C  1303               	bcf	3,6	;RP1=0, select bank1
  4685  104D  179F               	bsf	31,7	;volatile
  4686                           
  4687                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4688  104E  159F               	bsf	31,3	;volatile
  4689                           
  4690                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4691  104F  151F               	bsf	31,2	;volatile
  4692                           
  4693                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4694  1050  149F               	bsf	31,1	;volatile
  4695                           
  4696                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4697  1051  101F               	bcf	31,0	;volatile
  4698                           
  4699                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4700  1052  1283               	bcf	3,5	;RP0=0, select bank0
  4701  1053  1303               	bcf	3,6	;RP1=0, select bank0
  4702  1054  179F               	bsf	31,7	;volatile
  4703                           
  4704                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4705  1055  131F               	bcf	31,6	;volatile
  4706                           
  4707                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4708  1056  1683               	bsf	3,5	;RP0=1, select bank1
  4709  1057  1303               	bcf	3,6	;RP1=0, select bank1
  4710  1058  130C               	bcf	12,6	;volatile
  4711                           
  4712                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4713  1059  1283               	bcf	3,5	;RP0=0, select bank0
  4714  105A  1303               	bcf	3,6	;RP1=0, select bank0
  4715  105B  130C               	bcf	12,6	;volatile
  4716  105C  0008               	return
  4717  105D                     __end_of_ADC_Init:	
  4718                           
  4719                           	psect	text22
  4720  0C19                     __ptext22:	
  4721 ;; *************** function _ISR *****************
  4722 ;; Defined at:
  4723 ;;		line 307 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;		None               void
  4730 ;; Registers used:
  4731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4737 ;;      Params:         0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0
  4739 ;;      Temps:          0       0       4       0       0
  4740 ;;      Totals:         0       0       4       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    4
  4744 ;; This function calls:
  4745 ;;		_Fuzzy
  4746 ;;		_USART_ReceiveChar
  4747 ;;		___lwtoft
  4748 ;;		i1_PWM_DutyCycle2
  4749 ;;		i1_TIMER0_Set
  4750 ;;		i1_USART_WriteString
  4751 ;;		i1___lwdiv
  4752 ;;		i1___wmul
  4753 ;; This function is called by:
  4754 ;;		Interrupt level 1
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _ISR
  4760  0C19                     _ISR:	
  4761                           
  4762                           ;main.c: 310: if (PIR1bits.RCIF)
  4763  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0C1B  1E8C               	btfss	12,5	;volatile
  4766  0C1C  2D44               	goto	i1l3270
  4767                           
  4768                           ;main.c: 311: {
  4769                           ;main.c: 312: if (USART_ReceiveChar() == '0')
  4770  0C1D  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4771  0C22  3A30               	xorlw	48
  4772  0C23  1D03               	skipz
  4773  0C24  2C3E               	goto	i1l3200
  4774                           
  4775                           ;main.c: 313: {
  4776                           ;main.c: 314: USART_WriteString("\n\rdesligado\n\r");
  4777  0C25  30A0               	movlw	low (STR_1-__stringbase)
  4778  0C26  00F1               	movwf	i1USART_WriteString@str
  4779  0C27  3080               	movlw	128
  4780  0C28  00F2               	movwf	i1USART_WriteString@str+1
  4781  0C29  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4782                           
  4783                           ;main.c: 315: pwm = 0;
  4784  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  4785  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  4786  0C30  01C4               	clrf	_pwm^(0+128)
  4787  0C31  01C5               	clrf	(_pwm+1)^(0+128)
  4788                           
  4789                           ;main.c: 316: PWM_DutyCycle2(pwm);
  4790  0C32  0845               	movf	(_pwm+1)^(0+128),w
  4791  0C33  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4792  0C34  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4793  0C35  0844               	movf	_pwm^(0+128),w
  4794  0C36  01F0               	clrf	i1PWM_DutyCycle2@valor
  4795  0C37  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4796  0C38  160A  118A  209F  120A  158A  	fcall	i1_PWM_DutyCycle2
  4797                           
  4798                           ;main.c: 317: return;
  4799  0C3D  2DA5               	goto	i1l180
  4800  0C3E                     i1l3200:	
  4801                           
  4802                           ;main.c: 318: }
  4803                           ;main.c: 320: if (USART_ReceiveChar() == '1')
  4804  0C3E  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4805  0C43  3A31               	xorlw	49
  4806  0C44  1D03               	skipz
  4807  0C45  2C55               	goto	i1l3206
  4808                           
  4809                           ;main.c: 321: {
  4810                           ;main.c: 322: USART_WriteString("\n\rpwm = \n\r");
  4811  0C46  30AE               	movlw	low (STR_2-__stringbase)
  4812  0C47  00F1               	movwf	i1USART_WriteString@str
  4813  0C48  3080               	movlw	128
  4814  0C49  00F2               	movwf	i1USART_WriteString@str+1
  4815  0C4A  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4816                           
  4817                           ;main.c: 323: pwm = 32;
  4818  0C4F  3020               	movlw	32
  4819  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  4820  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  4821  0C52  00C4               	movwf	_pwm^(0+128)
  4822  0C53  3000               	movlw	0
  4823  0C54  00C5               	movwf	(_pwm^(0+128)+1)
  4824  0C55                     i1l3206:	
  4825                           
  4826                           ;main.c: 325: }
  4827                           ;main.c: 327: if (USART_ReceiveChar() == '2')
  4828  0C55  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4829  0C5A  3A32               	xorlw	50
  4830  0C5B  1D03               	skipz
  4831  0C5C  2C6C               	goto	i1l3212
  4832                           
  4833                           ;main.c: 328: {
  4834                           ;main.c: 329: USART_WriteString("\n\rpwm = \n\r");
  4835  0C5D  30AE               	movlw	low (STR_2-__stringbase)
  4836  0C5E  00F1               	movwf	i1USART_WriteString@str
  4837  0C5F  3080               	movlw	128
  4838  0C60  00F2               	movwf	i1USART_WriteString@str+1
  4839  0C61  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4840                           
  4841                           ;main.c: 330: pwm = 64;
  4842  0C66  3040               	movlw	64
  4843  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  4844  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  4845  0C69  00C4               	movwf	_pwm^(0+128)
  4846  0C6A  3000               	movlw	0
  4847  0C6B  00C5               	movwf	(_pwm^(0+128)+1)
  4848  0C6C                     i1l3212:	
  4849                           
  4850                           ;main.c: 332: }
  4851                           ;main.c: 334: if (USART_ReceiveChar() == '3')
  4852  0C6C  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4853  0C71  3A33               	xorlw	51
  4854  0C72  1D03               	skipz
  4855  0C73  2C8A               	goto	i1l3222
  4856                           
  4857                           ;main.c: 335: {
  4858                           ;main.c: 336: USART_WriteString("\n\rpwm = \n\r");
  4859  0C74  30AE               	movlw	low (STR_2-__stringbase)
  4860  0C75  00F1               	movwf	i1USART_WriteString@str
  4861  0C76  3080               	movlw	128
  4862  0C77  00F2               	movwf	i1USART_WriteString@str+1
  4863  0C78  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4864                           
  4865                           ;main.c: 337: pwm = 128;
  4866  0C7D  3080               	movlw	128
  4867  0C7E  1683               	bsf	3,5	;RP0=1, select bank1
  4868  0C7F  1303               	bcf	3,6	;RP1=0, select bank1
  4869  0C80  00C4               	movwf	_pwm^(0+128)
  4870  0C81  3000               	movlw	0
  4871  0C82  00C5               	movwf	(_pwm^(0+128)+1)
  4872                           
  4873                           ;main.c: 339: if(PORTBbits.RB0 == 0)
  4874  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0C85  1806               	btfsc	6,0	;volatile
  4877  0C86  2C89               	goto	i1l184
  4878                           
  4879                           ;main.c: 340: {
  4880                           ;main.c: 341: PORTBbits.RB0 = 1;
  4881  0C87  1406               	bsf	6,0	;volatile
  4882                           
  4883                           ;main.c: 342: }else{
  4884  0C88  2C8A               	goto	i1l3222
  4885  0C89                     i1l184:	
  4886                           
  4887                           ;main.c: 343: PORTBbits.RB0 = 0;
  4888  0C89  1006               	bcf	6,0	;volatile
  4889  0C8A                     i1l3222:	
  4890                           
  4891                           ;main.c: 344: }
  4892                           ;main.c: 345: }
  4893                           ;main.c: 347: if (USART_ReceiveChar() == '4')
  4894  0C8A  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4895  0C8F  3A34               	xorlw	52
  4896  0C90  1D03               	skipz
  4897  0C91  2CB4               	goto	i1l3234
  4898                           
  4899                           ;main.c: 348: {
  4900                           ;main.c: 349: USART_WriteString("\n\rpwm = \n\r");
  4901  0C92  30AE               	movlw	low (STR_2-__stringbase)
  4902  0C93  00F1               	movwf	i1USART_WriteString@str
  4903  0C94  3080               	movlw	128
  4904  0C95  00F2               	movwf	i1USART_WriteString@str+1
  4905  0C96  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4906                           
  4907                           ;main.c: 350: pwm = 256;
  4908  0C9B  3000               	movlw	0
  4909  0C9C  1683               	bsf	3,5	;RP0=1, select bank1
  4910  0C9D  1303               	bcf	3,6	;RP1=0, select bank1
  4911  0C9E  00C4               	movwf	_pwm^(0+128)
  4912  0C9F  3001               	movlw	1
  4913  0CA0  00C5               	movwf	(_pwm^(0+128)+1)
  4914                           
  4915                           ;main.c: 351: PWM_DutyCycle2(pwm);
  4916  0CA1  0845               	movf	(_pwm+1)^(0+128),w
  4917  0CA2  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4918  0CA3  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4919  0CA4  0844               	movf	_pwm^(0+128),w
  4920  0CA5  01F0               	clrf	i1PWM_DutyCycle2@valor
  4921  0CA6  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4922  0CA7  160A  118A  209F  120A  158A  	fcall	i1_PWM_DutyCycle2
  4923                           
  4924                           ;main.c: 352: if(PORTBbits.RB1 == 0)
  4925  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0CAE  1886               	btfsc	6,1	;volatile
  4928  0CAF  2CB2               	goto	i1l187
  4929                           
  4930                           ;main.c: 353: {
  4931                           ;main.c: 354: PORTBbits.RB1 = 1;
  4932  0CB0  1486               	bsf	6,1	;volatile
  4933                           
  4934                           ;main.c: 355: }else{
  4935  0CB1  2DA5               	goto	i1l180
  4936  0CB2                     i1l187:	
  4937                           
  4938                           ;main.c: 356: PORTBbits.RB1 = 0;
  4939  0CB2  1086               	bcf	6,1	;volatile
  4940                           
  4941                           ;main.c: 357: }
  4942                           ;main.c: 358: return;
  4943  0CB3  2DA5               	goto	i1l180
  4944  0CB4                     i1l3234:	
  4945                           
  4946                           ;main.c: 359: }
  4947                           ;main.c: 361: if (USART_ReceiveChar() == '5')
  4948  0CB4  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4949  0CB9  3A35               	xorlw	53
  4950  0CBA  1D03               	skipz
  4951  0CBB  2CCB               	goto	i1l3240
  4952                           
  4953                           ;main.c: 362: {
  4954                           ;main.c: 363: USART_WriteString("\n\rpwm = \n\r");
  4955  0CBC  30AE               	movlw	low (STR_2-__stringbase)
  4956  0CBD  00F1               	movwf	i1USART_WriteString@str
  4957  0CBE  3080               	movlw	128
  4958  0CBF  00F2               	movwf	i1USART_WriteString@str+1
  4959  0CC0  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4960                           
  4961                           ;main.c: 364: pwm = 512;
  4962  0CC5  3000               	movlw	0
  4963  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  4964  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  4965  0CC8  00C4               	movwf	_pwm^(0+128)
  4966  0CC9  3002               	movlw	2
  4967  0CCA  00C5               	movwf	(_pwm^(0+128)+1)
  4968  0CCB                     i1l3240:	
  4969                           
  4970                           ;main.c: 366: }
  4971                           ;main.c: 368: if (USART_ReceiveChar() == '6')
  4972  0CCB  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4973  0CD0  3A36               	xorlw	54
  4974  0CD1  1D03               	skipz
  4975  0CD2  2CE2               	goto	i1l3246
  4976                           
  4977                           ;main.c: 369: {
  4978                           ;main.c: 370: USART_WriteString("\n\rpwm = 768\n\r");
  4979  0CD3  3092               	movlw	low (STR_7-__stringbase)
  4980  0CD4  00F1               	movwf	i1USART_WriteString@str
  4981  0CD5  3080               	movlw	128
  4982  0CD6  00F2               	movwf	i1USART_WriteString@str+1
  4983  0CD7  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  4984                           
  4985                           ;main.c: 371: pwm = 768;
  4986  0CDC  3000               	movlw	0
  4987  0CDD  1683               	bsf	3,5	;RP0=1, select bank1
  4988  0CDE  1303               	bcf	3,6	;RP1=0, select bank1
  4989  0CDF  00C4               	movwf	_pwm^(0+128)
  4990  0CE0  3003               	movlw	3
  4991  0CE1  00C5               	movwf	(_pwm^(0+128)+1)
  4992  0CE2                     i1l3246:	
  4993                           
  4994                           ;main.c: 373: }
  4995                           ;main.c: 375: if (USART_ReceiveChar() == '7')
  4996  0CE2  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  4997  0CE7  3A37               	xorlw	55
  4998  0CE8  1D03               	skipz
  4999  0CE9  2CF9               	goto	i1l3252
  5000                           
  5001                           ;main.c: 376: {
  5002                           ;main.c: 377: USART_WriteString("\n\rpwm = 896\n\r");
  5003  0CEA  3084               	movlw	low (STR_8-__stringbase)
  5004  0CEB  00F1               	movwf	i1USART_WriteString@str
  5005  0CEC  3080               	movlw	128
  5006  0CED  00F2               	movwf	i1USART_WriteString@str+1
  5007  0CEE  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  5008                           
  5009                           ;main.c: 378: pwm = 896;
  5010  0CF3  3080               	movlw	128
  5011  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  5012  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  5013  0CF6  00C4               	movwf	_pwm^(0+128)
  5014  0CF7  3003               	movlw	3
  5015  0CF8  00C5               	movwf	(_pwm^(0+128)+1)
  5016  0CF9                     i1l3252:	
  5017                           
  5018                           ;main.c: 380: }
  5019                           ;main.c: 382: if (USART_ReceiveChar() == '8')
  5020  0CF9  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  5021  0CFE  3A38               	xorlw	56
  5022  0CFF  1D03               	skipz
  5023  0D00  2D10               	goto	i1l3258
  5024                           
  5025                           ;main.c: 383: {
  5026                           ;main.c: 384: USART_WriteString("\n\rpwm = \n\r");
  5027  0D01  30AE               	movlw	low (STR_2-__stringbase)
  5028  0D02  00F1               	movwf	i1USART_WriteString@str
  5029  0D03  3080               	movlw	128
  5030  0D04  00F2               	movwf	i1USART_WriteString@str+1
  5031  0D05  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  5032                           
  5033                           ;main.c: 385: pwm = 1000;
  5034  0D0A  30E8               	movlw	232
  5035  0D0B  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0D0C  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0D0D  00C4               	movwf	_pwm^(0+128)
  5038  0D0E  3003               	movlw	3
  5039  0D0F  00C5               	movwf	(_pwm^(0+128)+1)
  5040  0D10                     i1l3258:	
  5041                           
  5042                           ;main.c: 387: }
  5043                           ;main.c: 389: if (USART_ReceiveChar() == '9')
  5044  0D10  160A  118A  20BA  120A  158A  	fcall	_USART_ReceiveChar
  5045  0D15  3A39               	xorlw	57
  5046  0D16  1D03               	skipz
  5047  0D17  2D27               	goto	i1l3264
  5048                           
  5049                           ;main.c: 390: {
  5050                           ;main.c: 391: USART_WriteString("\n\rpwm = 1023\n\r");
  5051  0D18  3075               	movlw	low (STR_10-__stringbase)
  5052  0D19  00F1               	movwf	i1USART_WriteString@str
  5053  0D1A  3080               	movlw	128
  5054  0D1B  00F2               	movwf	i1USART_WriteString@str+1
  5055  0D1C  160A  118A  2155  120A  158A  	fcall	i1_USART_WriteString
  5056                           
  5057                           ;main.c: 392: pwm = 1023;
  5058  0D21  30FF               	movlw	255
  5059  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  5060  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  5061  0D24  00C4               	movwf	_pwm^(0+128)
  5062  0D25  3003               	movlw	3
  5063  0D26  00C5               	movwf	(_pwm^(0+128)+1)
  5064  0D27                     i1l3264:	
  5065                           
  5066                           ;main.c: 394: }
  5067                           ;main.c: 398: Fuzzy();
  5068  0D27  120A  118A  204F  120A  158A  	fcall	_Fuzzy
  5069                           
  5070                           ;main.c: 399: tf = rpm;
  5071  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  5072  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  5073  0D2E  0847               	movf	(_rpm+1)^(0+128),w
  5074  0D2F  01F9               	clrf	___lwtoft@c+1
  5075  0D30  07F9               	addwf	___lwtoft@c+1,f
  5076  0D31  0846               	movf	_rpm^(0+128),w
  5077  0D32  01F8               	clrf	___lwtoft@c
  5078  0D33  07F8               	addwf	___lwtoft@c,f
  5079  0D34  160A  118A  205D  120A  158A  	fcall	___lwtoft
  5080  0D39  0878               	movf	?___lwtoft,w
  5081  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  5082  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  5083  0D3C  00B2               	movwf	_tf^(0+128)
  5084  0D3D  0879               	movf	?___lwtoft+1,w
  5085  0D3E  00B3               	movwf	(_tf+1)^(0+128)
  5086  0D3F  087A               	movf	?___lwtoft+2,w
  5087  0D40  00B4               	movwf	(_tf+2)^(0+128)
  5088                           
  5089                           ;main.c: 401: PIR1bits.RCIF = 0;
  5090  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0D43  128C               	bcf	12,5	;volatile
  5093  0D44                     i1l3270:	
  5094                           
  5095                           ;main.c: 402: }
  5096                           ;main.c: 405: if (PIR1bits.ADIF)
  5097  0D44  1B0C               	btfsc	12,6	;volatile
  5098                           
  5099                           ;main.c: 406: {
  5100                           ;main.c: 410: PIR1bits.ADIF = 0;
  5101  0D45  130C               	bcf	12,6	;volatile
  5102                           
  5103                           ;main.c: 411: }
  5104                           ;main.c: 415: if (INTCONbits.T0IF)
  5105  0D46  1D0B               	btfss	11,2	;volatile
  5106  0D47  2DA1               	goto	i1l3296
  5107                           
  5108                           ;main.c: 416: {
  5109                           ;main.c: 418: TIMER0_Set(238);
  5110  0D48  30EE               	movlw	238
  5111  0D49  160A  118A  200A  120A  158A  	fcall	i1_TIMER0_Set
  5112                           
  5113                           ;main.c: 421: if (contagens_tm0 < 499)
  5114  0D4E  3001               	movlw	1
  5115  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0D51  023F               	subwf	(_contagens_tm0+1)^(0+128),w
  5118  0D52  30F3               	movlw	243
  5119  0D53  1903               	skipnz
  5120  0D54  023E               	subwf	_contagens_tm0^(0+128),w
  5121  0D55  1803               	skipnc
  5122  0D56  2D61               	goto	i1l3282
  5123                           
  5124                           ;main.c: 422: {
  5125                           ;main.c: 424: contagens_tm0++;
  5126  0D57  3001               	movlw	1
  5127  0D58  07BE               	addwf	_contagens_tm0^(0+128),f
  5128  0D59  1803               	skipnc
  5129  0D5A  0ABF               	incf	(_contagens_tm0+1)^(0+128),f
  5130  0D5B  3000               	movlw	0
  5131  0D5C  07BF               	addwf	(_contagens_tm0+1)^(0+128),f
  5132                           
  5133                           ;main.c: 427: PORTBbits.RB6 = 1;
  5134  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5136  0D5F  1706               	bsf	6,6	;volatile
  5137                           
  5138                           ;main.c: 428: }
  5139  0D60  2DA0               	goto	i1l3294
  5140  0D61                     i1l3282:	
  5141                           
  5142                           ;main.c: 429: else
  5143                           ;main.c: 430: {
  5144                           ;main.c: 432: contagens_tm0 = 0;
  5145  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  5146  0D62  1303               	bcf	3,6	;RP1=0, select bank1
  5147  0D63  01BE               	clrf	_contagens_tm0^(0+128)
  5148  0D64  01BF               	clrf	(_contagens_tm0+1)^(0+128)
  5149                           
  5150                           ;main.c: 435: pulsos = (TMR1H << 8) + TMR1L;
  5151  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0D67  080F               	movf	15,w	;volatile
  5154  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  5155  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  5156  0D6A  01C3               	clrf	(_pulsos+1)^(0+128)
  5157  0D6B  07C3               	addwf	(_pulsos+1)^(0+128),f
  5158  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0D6E  080E               	movf	14,w	;volatile
  5161  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  5162  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  5163  0D71  01C2               	clrf	_pulsos^(0+128)
  5164  0D72  07C2               	addwf	_pulsos^(0+128),f
  5165                           
  5166                           ;main.c: 436: rpm = ((pulsos / pas_cooler) * 120);
  5167  0D73  0867               	movf	(_pas_cooler+1)^(0+128),w
  5168  0D74  01F1               	clrf	i1___lwdiv@divisor+1
  5169  0D75  07F1               	addwf	i1___lwdiv@divisor+1,f
  5170  0D76  0866               	movf	_pas_cooler^(0+128),w
  5171  0D77  01F0               	clrf	i1___lwdiv@divisor
  5172  0D78  07F0               	addwf	i1___lwdiv@divisor,f
  5173  0D79  0843               	movf	(_pulsos+1)^(0+128),w
  5174  0D7A  01F3               	clrf	i1___lwdiv@dividend+1
  5175  0D7B  07F3               	addwf	i1___lwdiv@dividend+1,f
  5176  0D7C  0842               	movf	_pulsos^(0+128),w
  5177  0D7D  01F2               	clrf	i1___lwdiv@dividend
  5178  0D7E  07F2               	addwf	i1___lwdiv@dividend,f
  5179  0D7F  160A  118A  22A5  120A  158A  	fcall	i1___lwdiv
  5180  0D84  0871               	movf	?i1___lwdiv+1,w
  5181  0D85  01F9               	clrf	i1___wmul@multiplier+1
  5182  0D86  07F9               	addwf	i1___wmul@multiplier+1,f
  5183  0D87  0870               	movf	?i1___lwdiv,w
  5184  0D88  01F8               	clrf	i1___wmul@multiplier
  5185  0D89  07F8               	addwf	i1___wmul@multiplier,f
  5186  0D8A  3078               	movlw	120
  5187  0D8B  00FA               	movwf	i1___wmul@multiplicand
  5188  0D8C  3000               	movlw	0
  5189  0D8D  00FB               	movwf	i1___wmul@multiplicand+1
  5190  0D8E  160A  118A  2178  120A  158A  	fcall	i1___wmul
  5191  0D93  0879               	movf	?i1___wmul+1,w
  5192  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  5193  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  5194  0D96  01C7               	clrf	(_rpm+1)^(0+128)
  5195  0D97  07C7               	addwf	(_rpm+1)^(0+128),f
  5196  0D98  0878               	movf	?i1___wmul,w
  5197  0D99  01C6               	clrf	_rpm^(0+128)
  5198  0D9A  07C6               	addwf	_rpm^(0+128),f
  5199                           
  5200                           ;main.c: 439: TMR1L = 0x00;
  5201  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0D9D  018E               	clrf	14	;volatile
  5204                           
  5205                           ;main.c: 440: TMR1H = 0x00;
  5206  0D9E  018F               	clrf	15	;volatile
  5207                           
  5208                           ;main.c: 443: PORTBbits.RB6 = 0;
  5209  0D9F  1306               	bcf	6,6	;volatile
  5210  0DA0                     i1l3294:	
  5211                           
  5212                           ;main.c: 444: }
  5213                           ;main.c: 447: INTCONbits.T0IF = 0;
  5214  0DA0  110B               	bcf	11,2	;volatile
  5215  0DA1                     i1l3296:	
  5216                           
  5217                           ;main.c: 448: }
  5218                           ;main.c: 451: if (PIR1bits.TMR1IF)
  5219  0DA1  180C               	btfsc	12,0	;volatile
  5220                           
  5221                           ;main.c: 452: {
  5222                           ;main.c: 456: PIR1bits.TMR1IF = 0;
  5223  0DA2  100C               	bcf	12,0	;volatile
  5224                           
  5225                           ;main.c: 457: }
  5226                           ;main.c: 460: if (PIR1bits.SSPIF)
  5227  0DA3  198C               	btfsc	12,3	;volatile
  5228                           
  5229                           ;main.c: 461: {
  5230                           ;main.c: 465: PIR1bits.SSPIF = 0;
  5231  0DA4  118C               	bcf	12,3	;volatile
  5232  0DA5                     i1l180:	
  5233  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  5234  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  5235  0DA7  084B               	movf	(??_ISR+3)^(0+128),w
  5236  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5237  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5238  0DAA  00FF               	movwf	127
  5239  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  5240  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  5241  0DAD  084A               	movf	(??_ISR+2)^(0+128),w
  5242  0DAE  008A               	movwf	10
  5243  0DAF  0849               	movf	(??_ISR+1)^(0+128),w
  5244  0DB0  0084               	movwf	4
  5245  0DB1  0E48               	swapf	??_ISR^(0+128),w
  5246  0DB2  0083               	movwf	3
  5247  0DB3  0EFE               	swapf	126,f
  5248  0DB4  0E7E               	swapf	126,w
  5249  0DB5  0009               	retfie
  5250  0DB6                     __end_of_ISR:	
  5251                           
  5252                           	psect	intentry
  5253  0004                     __pintentry:	
  5254                           ;incstack = 0
  5255                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5256                           
  5257  0004                     interrupt_function:	
  5258  007E                     saved_w	set	btemp
  5259  0004  00FE               	movwf	btemp
  5260  0005  0E03               	swapf	3,w
  5261  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5262  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5263  0008  00C8               	movwf	??_ISR^(0+128)
  5264  0009  0804               	movf	4,w
  5265  000A  00C9               	movwf	(??_ISR+1)^(0+128)
  5266  000B  080A               	movf	10,w
  5267  000C  00CA               	movwf	(??_ISR+2)^(0+128)
  5268  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5269  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5270  000F  087F               	movf	btemp+1,w
  5271  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5272  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5273  0012  00CB               	movwf	(??_ISR+3)^(0+128)
  5274  0013  120A  158A  2C19   	ljmp	_ISR
  5275                           
  5276                           	psect	text23
  5277  1178                     __ptext23:	
  5278 ;; *************** function i1___wmul *****************
  5279 ;; Defined at:
  5280 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  multiplier      2    8[COMMON] unsigned int 
  5283 ;;  multiplicand    2   10[COMMON] unsigned int 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  __wmul          2   12[COMMON] unsigned int 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  2    8[COMMON] unsigned int 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         4       0       0       0       0
  5296 ;;      Locals:         2       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0
  5298 ;;      Totals:         6       0       0       0       0
  5299 ;;Total ram usage:        6 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_ISR
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function i1___wmul
  5310  1178                     i1___wmul:	
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5314  1178  01FC               	clrf	i1___wmul@product
  5315  1179  01FD               	clrf	i1___wmul@product+1
  5316  117A                     i1l3146:	
  5317  117A  1C78               	btfss	i1___wmul@multiplier,0
  5318  117B  2982               	goto	i1l598
  5319  117C  087A               	movf	i1___wmul@multiplicand,w
  5320  117D  07FC               	addwf	i1___wmul@product,f
  5321  117E  1803               	skipnc
  5322  117F  0AFD               	incf	i1___wmul@product+1,f
  5323  1180  087B               	movf	i1___wmul@multiplicand+1,w
  5324  1181  07FD               	addwf	i1___wmul@product+1,f
  5325  1182                     i1l598:	
  5326  1182  3001               	movlw	1
  5327  1183                     u386_25:	
  5328  1183  1003               	clrc
  5329  1184  0DFA               	rlf	i1___wmul@multiplicand,f
  5330  1185  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5331  1186  3EFF               	addlw	-1
  5332  1187  1D03               	skipz
  5333  1188  2983               	goto	u386_25
  5334  1189  3001               	movlw	1
  5335  118A                     u387_25:	
  5336  118A  1003               	clrc
  5337  118B  0CF9               	rrf	i1___wmul@multiplier+1,f
  5338  118C  0CF8               	rrf	i1___wmul@multiplier,f
  5339  118D  3EFF               	addlw	-1
  5340  118E  1D03               	skipz
  5341  118F  298A               	goto	u387_25
  5342  1190  0879               	movf	i1___wmul@multiplier+1,w
  5343  1191  0478               	iorwf	i1___wmul@multiplier,w
  5344  1192  1D03               	skipz
  5345  1193  297A               	goto	i1l3146
  5346  1194  087D               	movf	i1___wmul@product+1,w
  5347  1195  01F9               	clrf	?i1___wmul+1
  5348  1196  07F9               	addwf	?i1___wmul+1,f
  5349  1197  087C               	movf	i1___wmul@product,w
  5350  1198  01F8               	clrf	?i1___wmul
  5351  1199  07F8               	addwf	?i1___wmul,f
  5352  119A  0008               	return
  5353  119B                     __end_ofi1___wmul:	
  5354                           
  5355                           	psect	text24
  5356  12A5                     __ptext24:	
  5357 ;; *************** function i1___lwdiv *****************
  5358 ;; Defined at:
  5359 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  divisor         2    0[COMMON] unsigned int 
  5362 ;;  dividend        2    2[COMMON] unsigned int 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5365 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2    0[COMMON] unsigned int 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         4       0       0       0       0
  5376 ;;      Locals:         3       0       0       0       0
  5377 ;;      Temps:          1       0       0       0       0
  5378 ;;      Totals:         8       0       0       0       0
  5379 ;;Total ram usage:        8 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_ISR
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function i1___lwdiv
  5390  12A5                     i1___lwdiv:	
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5394  12A5  01F5               	clrf	i1___lwdiv@quotient
  5395  12A6  01F6               	clrf	i1___lwdiv@quotient+1
  5396  12A7  0871               	movf	i1___lwdiv@divisor+1,w
  5397  12A8  0470               	iorwf	i1___lwdiv@divisor,w
  5398  12A9  1903               	skipnz
  5399  12AA  2ADC               	goto	i1l3178
  5400  12AB  01F7               	clrf	i1___lwdiv@counter
  5401  12AC  0AF7               	incf	i1___lwdiv@counter,f
  5402  12AD                     i1l3166:	
  5403  12AD  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5404  12AE  2ABB               	goto	i1l3168
  5405  12AF  3001               	movlw	1
  5406  12B0                     u390_25:	
  5407  12B0  1003               	clrc
  5408  12B1  0DF0               	rlf	i1___lwdiv@divisor,f
  5409  12B2  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5410  12B3  3EFF               	addlw	-1
  5411  12B4  1D03               	skipz
  5412  12B5  2AB0               	goto	u390_25
  5413  12B6  3001               	movlw	1
  5414  12B7  00F4               	movwf	??i1___lwdiv
  5415  12B8  0874               	movf	??i1___lwdiv,w
  5416  12B9  07F7               	addwf	i1___lwdiv@counter,f
  5417  12BA  2AAD               	goto	i1l3166
  5418  12BB                     i1l3168:	
  5419  12BB  3001               	movlw	1
  5420  12BC                     u392_25:	
  5421  12BC  1003               	clrc
  5422  12BD  0DF5               	rlf	i1___lwdiv@quotient,f
  5423  12BE  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5424  12BF  3EFF               	addlw	-1
  5425  12C0  1D03               	skipz
  5426  12C1  2ABC               	goto	u392_25
  5427  12C2  0871               	movf	i1___lwdiv@divisor+1,w
  5428  12C3  0273               	subwf	i1___lwdiv@dividend+1,w
  5429  12C4  1D03               	skipz
  5430  12C5  2AC8               	goto	u393_25
  5431  12C6  0870               	movf	i1___lwdiv@divisor,w
  5432  12C7  0272               	subwf	i1___lwdiv@dividend,w
  5433  12C8                     u393_25:	
  5434  12C8  1C03               	skipc
  5435  12C9  2AD1               	goto	i1l3174
  5436  12CA  0870               	movf	i1___lwdiv@divisor,w
  5437  12CB  02F2               	subwf	i1___lwdiv@dividend,f
  5438  12CC  0871               	movf	i1___lwdiv@divisor+1,w
  5439  12CD  1C03               	skipc
  5440  12CE  03F3               	decf	i1___lwdiv@dividend+1,f
  5441  12CF  02F3               	subwf	i1___lwdiv@dividend+1,f
  5442  12D0  1475               	bsf	i1___lwdiv@quotient,0
  5443  12D1                     i1l3174:	
  5444  12D1  3001               	movlw	1
  5445  12D2                     u394_25:	
  5446  12D2  1003               	clrc
  5447  12D3  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5448  12D4  0CF0               	rrf	i1___lwdiv@divisor,f
  5449  12D5  3EFF               	addlw	-1
  5450  12D6  1D03               	skipz
  5451  12D7  2AD2               	goto	u394_25
  5452  12D8  3001               	movlw	1
  5453  12D9  02F7               	subwf	i1___lwdiv@counter,f
  5454  12DA  1D03               	btfss	3,2
  5455  12DB  2ABB               	goto	i1l3168
  5456  12DC                     i1l3178:	
  5457  12DC  0876               	movf	i1___lwdiv@quotient+1,w
  5458  12DD  01F1               	clrf	?i1___lwdiv+1
  5459  12DE  07F1               	addwf	?i1___lwdiv+1,f
  5460  12DF  0875               	movf	i1___lwdiv@quotient,w
  5461  12E0  01F0               	clrf	?i1___lwdiv
  5462  12E1  07F0               	addwf	?i1___lwdiv,f
  5463  12E2  0008               	return
  5464  12E3                     __end_ofi1___lwdiv:	
  5465                           
  5466                           	psect	text25
  5467  100A                     __ptext25:	
  5468 ;; *************** function i1_TIMER0_Set *****************
  5469 ;; Defined at:
  5470 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  contagens       1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  contagens       1    0[COMMON] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         1       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0
  5487 ;;      Totals:         1       0       0       0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_ISR
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function i1_TIMER0_Set
  5499  100A                     i1_TIMER0_Set:	
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in i1_TIMER0_Set: [wreg]
  5503                           ;i1TIMER0_Set@contagens stored from wreg
  5504  100A  00F0               	movwf	i1TIMER0_Set@contagens
  5505                           
  5506                           ;timers.c: 22: TMR0 = contagens;
  5507  100B  0870               	movf	i1TIMER0_Set@contagens,w
  5508  100C  1283               	bcf	3,5	;RP0=0, select bank0
  5509  100D  1303               	bcf	3,6	;RP1=0, select bank0
  5510  100E  0081               	movwf	1	;volatile
  5511  100F  0008               	return
  5512  1010                     __end_ofi1_TIMER0_Set:	
  5513                           
  5514                           	psect	text26
  5515  10BA                     __ptext26:	
  5516 ;; *************** function _USART_ReceiveChar *****************
  5517 ;; Defined at:
  5518 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;		None
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  byte            1    4[COMMON] unsigned char 
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      unsigned char 
  5525 ;; Registers used:
  5526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5532 ;;      Params:         0       0       0       0       0
  5533 ;;      Locals:         1       0       0       0       0
  5534 ;;      Temps:          1       0       0       0       0
  5535 ;;      Totals:         2       0       0       0       0
  5536 ;;Total ram usage:        2 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; Hardware stack levels required when called:    2
  5539 ;; This function calls:
  5540 ;;		i1_USART_WriteString
  5541 ;; This function is called by:
  5542 ;;		_ISR
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function _USART_ReceiveChar
  5548  10BA                     _USART_ReceiveChar:	
  5549                           
  5550                           ;usart.c: 65: unsigned char byte;
  5551                           ;usart.c: 67: if (!OERR)
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5555  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  5556  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  5557  10BC  1898               	btfsc	24,1	;volatile
  5558  10BD  28C3               	goto	i1l2876
  5559                           
  5560                           ;usart.c: 68: {
  5561                           ;usart.c: 69: byte = RCREG;
  5562  10BE  081A               	movf	26,w	;volatile
  5563  10BF  00F3               	movwf	??_USART_ReceiveChar
  5564  10C0  0873               	movf	??_USART_ReceiveChar,w
  5565  10C1  00F4               	movwf	USART_ReceiveChar@byte
  5566  10C2  28D2               	goto	i1l2884
  5567  10C3                     i1l2876:	
  5568                           ;usart.c: 71: }
  5569                           
  5570                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5571                           
  5572                           
  5573                           ;usart.c: 72: else
  5574                           ;usart.c: 73: {
  5575                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5576  10C3  300B               	movlw	low (STR_19-__stringbase)
  5577  10C4  00F1               	movwf	i1USART_WriteString@str
  5578  10C5  3080               	movlw	128
  5579  10C6  00F2               	movwf	i1USART_WriteString@str+1
  5580  10C7  160A  118A  2155   	fcall	i1_USART_WriteString
  5581                           
  5582                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5583  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  5584  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  5585  10CC  1218               	bcf	24,4	;volatile
  5586                           
  5587                           ;usart.c: 77: byte = RCREG;
  5588  10CD  081A               	movf	26,w	;volatile
  5589  10CE  00F3               	movwf	??_USART_ReceiveChar
  5590  10CF  0873               	movf	??_USART_ReceiveChar,w
  5591  10D0  00F4               	movwf	USART_ReceiveChar@byte
  5592                           
  5593                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5594  10D1  1618               	bsf	24,4	;volatile
  5595  10D2                     i1l2884:	
  5596                           
  5597                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5598  10D2  128C               	bcf	12,5	;volatile
  5599                           
  5600                           ;usart.c: 80: }
  5601                           ;usart.c: 82: return(byte);
  5602  10D3  0874               	movf	USART_ReceiveChar@byte,w
  5603  10D4  0008               	return
  5604  10D5                     __end_of_USART_ReceiveChar:	
  5605                           
  5606                           	psect	text27
  5607  1155                     __ptext27:	
  5608 ;; *************** function i1_USART_WriteString *****************
  5609 ;; Defined at:
  5610 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  str             2    1[COMMON] PTR const unsigned char 
  5613 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5614 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5615 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5616 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;		None               void
  5621 ;; Registers used:
  5622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         2       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0
  5631 ;;      Totals:         2       0       0       0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    1
  5635 ;; This function calls:
  5636 ;;		i1_USART_WriteChar
  5637 ;; This function is called by:
  5638 ;;		_ISR
  5639 ;;		_USART_ReceiveChar
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function i1_USART_WriteString
  5645  1155                     i1_USART_WriteString:	
  5646  1155                     i1l2728:	
  5647                           ;usart.c: 54: while(*str != '\0')
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5651                           
  5652  1155  0872               	movf	i1USART_WriteString@str+1,w
  5653  1156  1283               	bcf	3,5	;RP0=0, select bank0
  5654  1157  1303               	bcf	3,6	;RP1=0, select bank0
  5655  1158  00FF               	movwf	127
  5656  1159  0871               	movf	i1USART_WriteString@str,w
  5657  115A  0084               	movwf	4
  5658  115B  120A  118A  2721  160A  118A  	fcall	stringtab
  5659  1160  3800               	iorlw	0
  5660  1161  1903               	btfsc	3,2
  5661  1162  0008               	return
  5662                           
  5663                           ;usart.c: 55: {
  5664                           ;usart.c: 56: USART_WriteChar(*str);
  5665  1163  0872               	movf	i1USART_WriteString@str+1,w
  5666  1164  1283               	bcf	3,5	;RP0=0, select bank0
  5667  1165  1303               	bcf	3,6	;RP1=0, select bank0
  5668  1166  00FF               	movwf	127
  5669  1167  0871               	movf	i1USART_WriteString@str,w
  5670  1168  0084               	movwf	4
  5671  1169  120A  118A  2721  160A  118A  	fcall	stringtab
  5672  116E  160A  118A  2018  160A  118A  	fcall	i1_USART_WriteChar
  5673                           
  5674                           ;usart.c: 57: str++;
  5675  1173  3001               	movlw	1
  5676  1174  07F1               	addwf	i1USART_WriteString@str,f
  5677  1175  1803               	skipnc
  5678  1176  0AF2               	incf	i1USART_WriteString@str+1,f
  5679  1177  2955               	goto	i1l2728
  5680  1178                     __end_ofi1_USART_WriteString:	
  5681                           
  5682                           	psect	text28
  5683  1018                     __ptext28:	
  5684 ;; *************** function i1_USART_WriteChar *****************
  5685 ;; Defined at:
  5686 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  byte            1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  byte            1    0[COMMON] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5700 ;;      Params:         0       0       0       0       0
  5701 ;;      Locals:         1       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0
  5703 ;;      Totals:         1       0       0       0       0
  5704 ;;Total ram usage:        1 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		i1_USART_WriteString
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function i1_USART_WriteChar
  5715  1018                     i1_USART_WriteChar:	
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in i1_USART_WriteChar: [wreg]
  5719                           ;i1USART_WriteChar@byte stored from wreg
  5720  1018  00F0               	movwf	i1USART_WriteChar@byte
  5721  1019                     i1l227:	
  5722                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5723                           
  5724  1019  1283               	bcf	3,5	;RP0=0, select bank0
  5725  101A  1303               	bcf	3,6	;RP1=0, select bank0
  5726  101B  1E0C               	btfss	12,4	;volatile
  5727  101C  2819               	goto	i1l227
  5728                           
  5729                           ;usart.c: 47: TXREG = byte;
  5730  101D  0870               	movf	i1USART_WriteChar@byte,w
  5731  101E  0099               	movwf	25	;volatile
  5732  101F  0008               	return
  5733  1020                     __end_ofi1_USART_WriteChar:	
  5734                           
  5735                           	psect	text29
  5736  004F                     __ptext29:	
  5737 ;; *************** function _Fuzzy *****************
  5738 ;; Defined at:
  5739 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;		None
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  a               2   61[BANK0 ] int 
  5744 ;;  a               2   59[BANK0 ] int 
  5745 ;;  a               2   57[BANK0 ] int 
  5746 ;;  a               2   65[BANK0 ] int 
  5747 ;;  a               2   63[BANK0 ] int 
  5748 ;;  aumenta         3   76[BANK0 ] float 
  5749 ;;  reduz           3   73[BANK0 ] float 
  5750 ;;  mantem          3   70[BANK0 ] float 
  5751 ;;  tip             3   67[BANK0 ] float 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;		None               void
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5761 ;;      Params:         0       0       0       0       0
  5762 ;;      Locals:         0      22       0       0       0
  5763 ;;      Temps:          0       0       0       0       0
  5764 ;;      Totals:         0      22       0       0       0
  5765 ;;Total ram usage:       22 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    3
  5768 ;; This function calls:
  5769 ;;		___ftadd
  5770 ;;		___ftdiv
  5771 ;;		___ftge
  5772 ;;		___ftmul
  5773 ;;		___ftneg
  5774 ;;		___fttol
  5775 ;;		___lwtoft
  5776 ;;		_max_val
  5777 ;;		_trapmf
  5778 ;;		_trimf
  5779 ;;		i1_PWM_DutyCycle2
  5780 ;; This function is called by:
  5781 ;;		_ISR
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _Fuzzy
  5787  004F                     _Fuzzy:	
  5788                           
  5789                           ;main.c: 140: setpoint = (float)pwm;
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5793  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5794  0050  1303               	bcf	3,6	;RP1=0, select bank1
  5795  0051  0845               	movf	(_pwm+1)^(0+128),w
  5796  0052  01F9               	clrf	___lwtoft@c+1
  5797  0053  07F9               	addwf	___lwtoft@c+1,f
  5798  0054  0844               	movf	_pwm^(0+128),w
  5799  0055  01F8               	clrf	___lwtoft@c
  5800  0056  07F8               	addwf	___lwtoft@c,f
  5801  0057  160A  118A  205D  120A  118A  	fcall	___lwtoft
  5802  005C  0878               	movf	?___lwtoft,w
  5803  005D  1683               	bsf	3,5	;RP0=1, select bank3
  5804  005E  1703               	bsf	3,6	;RP1=1, select bank3
  5805  005F  00BF               	movwf	_setpoint^(0+384)
  5806  0060  0879               	movf	?___lwtoft+1,w
  5807  0061  00C0               	movwf	(_setpoint+1)^(0+384)
  5808  0062  087A               	movf	?___lwtoft+2,w
  5809  0063  00C1               	movwf	(_setpoint+2)^(0+384)
  5810                           
  5811                           ;main.c: 142: float mantem = 1100;
  5812  0064  3080               	movlw	128
  5813  0065  1283               	bcf	3,5	;RP0=0, select bank0
  5814  0066  1303               	bcf	3,6	;RP1=0, select bank0
  5815  0067  00E6               	movwf	Fuzzy@mantem
  5816  0068  3089               	movlw	137
  5817  0069  00E7               	movwf	Fuzzy@mantem+1
  5818  006A  3044               	movlw	68
  5819  006B  00E8               	movwf	Fuzzy@mantem+2
  5820                           
  5821                           ;main.c: 143: float reduz = 2200;
  5822  006C  3080               	movlw	128
  5823  006D  00E9               	movwf	Fuzzy@reduz
  5824  006E  3009               	movlw	9
  5825  006F  00EA               	movwf	Fuzzy@reduz+1
  5826  0070  3045               	movlw	69
  5827  0071  00EB               	movwf	Fuzzy@reduz+2
  5828                           
  5829                           ;main.c: 144: float aumenta = 3300;
  5830  0072  3040               	movlw	64
  5831  0073  00EC               	movwf	Fuzzy@aumenta
  5832  0074  304E               	movlw	78
  5833  0075  00ED               	movwf	Fuzzy@aumenta+1
  5834  0076  3045               	movlw	69
  5835  0077  00EE               	movwf	Fuzzy@aumenta+2
  5836                           
  5837                           ;main.c: 145: float tip;
  5838                           ;main.c: 147: fitemp =0;
  5839  0078  3000               	movlw	0
  5840  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5841  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5842  007B  00A0               	movwf	_fitemp^(0+128)
  5843  007C  3000               	movlw	0
  5844  007D  00A1               	movwf	(_fitemp+1)^(0+128)
  5845  007E  3000               	movlw	0
  5846  007F  00A2               	movwf	(_fitemp+2)^(0+128)
  5847                           
  5848                           ;main.c: 150: temp = (setpoint - tf);
  5849  0080  1683               	bsf	3,5	;RP0=1, select bank3
  5850  0081  1703               	bsf	3,6	;RP1=1, select bank3
  5851  0082  083F               	movf	_setpoint^(0+384),w
  5852  0083  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0084  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0085  00AA               	movwf	___ftadd@f1
  5855  0086  1683               	bsf	3,5	;RP0=1, select bank3
  5856  0087  1703               	bsf	3,6	;RP1=1, select bank3
  5857  0088  0840               	movf	(_setpoint+1)^(0+384),w
  5858  0089  1283               	bcf	3,5	;RP0=0, select bank0
  5859  008A  1303               	bcf	3,6	;RP1=0, select bank0
  5860  008B  00AB               	movwf	___ftadd@f1+1
  5861  008C  1683               	bsf	3,5	;RP0=1, select bank3
  5862  008D  1703               	bsf	3,6	;RP1=1, select bank3
  5863  008E  0841               	movf	(_setpoint+2)^(0+384),w
  5864  008F  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0090  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0091  00AC               	movwf	___ftadd@f1+2
  5867  0092  1683               	bsf	3,5	;RP0=1, select bank1
  5868  0093  1303               	bcf	3,6	;RP1=0, select bank1
  5869  0094  0832               	movf	_tf^(0+128),w
  5870  0095  00F0               	movwf	___ftneg@f1
  5871  0096  0833               	movf	(_tf+1)^(0+128),w
  5872  0097  00F1               	movwf	___ftneg@f1+1
  5873  0098  0834               	movf	(_tf+2)^(0+128),w
  5874  0099  00F2               	movwf	___ftneg@f1+2
  5875  009A  160A  118A  2010  120A  118A  	fcall	___ftneg
  5876  009F  0870               	movf	?___ftneg,w
  5877  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  5878  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  5879  00A2  00AD               	movwf	___ftadd@f2
  5880  00A3  0871               	movf	?___ftneg+1,w
  5881  00A4  00AE               	movwf	___ftadd@f2+1
  5882  00A5  0872               	movf	?___ftneg+2,w
  5883  00A6  00AF               	movwf	___ftadd@f2+2
  5884  00A7  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5885  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  5886  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  5887  00AE  082A               	movf	?___ftadd,w
  5888  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  5889  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  5890  00B1  00AF               	movwf	_temp^(0+128)
  5891  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  5892  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  5893  00B4  082B               	movf	?___ftadd+1,w
  5894  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  5895  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  5896  00B7  00B0               	movwf	(_temp+1)^(0+128)
  5897  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  5898  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  5899  00BA  082C               	movf	?___ftadd+2,w
  5900  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  5901  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  5902  00BD  00B1               	movwf	(_temp+2)^(0+128)
  5903                           
  5904                           ;main.c: 151: temp = temp/10;
  5905  00BE  3000               	movlw	0
  5906  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5907  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5908  00C1  00B7               	movwf	___ftdiv@f2
  5909  00C2  3020               	movlw	32
  5910  00C3  00B8               	movwf	___ftdiv@f2+1
  5911  00C4  3041               	movlw	65
  5912  00C5  00B9               	movwf	___ftdiv@f2+2
  5913  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  5914  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  5915  00C8  082F               	movf	_temp^(0+128),w
  5916  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  5917  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  5918  00CB  00BA               	movwf	___ftdiv@f1
  5919  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  5920  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  5921  00CE  0830               	movf	(_temp+1)^(0+128),w
  5922  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5923  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5924  00D1  00BB               	movwf	___ftdiv@f1+1
  5925  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  5926  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  5927  00D4  0831               	movf	(_temp+2)^(0+128),w
  5928  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  5929  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  5930  00D7  00BC               	movwf	___ftdiv@f1+2
  5931  00D8  160A  118A  256E  120A  118A  	fcall	___ftdiv
  5932  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  5933  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  5934  00DF  0837               	movf	?___ftdiv,w
  5935  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  5936  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  5937  00E2  00AF               	movwf	_temp^(0+128)
  5938  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  5939  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  5940  00E5  0838               	movf	?___ftdiv+1,w
  5941  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  5942  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  5943  00E8  00B0               	movwf	(_temp+1)^(0+128)
  5944  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  5945  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  5946  00EB  0839               	movf	?___ftdiv+2,w
  5947  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  5948  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  5949  00EE  00B1               	movwf	(_temp+2)^(0+128)
  5950                           
  5951                           ;main.c: 152: deltaV = temp;
  5952  00EF  082F               	movf	_temp^(0+128),w
  5953  00F0  00F0               	movwf	___fttol@f1
  5954  00F1  0830               	movf	(_temp+1)^(0+128),w
  5955  00F2  00F1               	movwf	___fttol@f1+1
  5956  00F3  0831               	movf	(_temp+2)^(0+128),w
  5957  00F4  00F2               	movwf	___fttol@f1+2
  5958  00F5  160A  118A  2453  120A  118A  	fcall	___fttol
  5959  00FA  0871               	movf	?___fttol+1,w
  5960  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  5961  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  5962  00FD  01C1               	clrf	(_deltaV+1)^(0+128)
  5963  00FE  07C1               	addwf	(_deltaV+1)^(0+128),f
  5964  00FF  0870               	movf	?___fttol,w
  5965  0100  01C0               	clrf	_deltaV^(0+128)
  5966  0101  07C0               	addwf	_deltaV^(0+128),f
  5967                           
  5968                           ;main.c: 155: if (temp >100) temp = 100;
  5969  0102  3000               	movlw	0
  5970  0103  00F0               	movwf	___ftge@ff1
  5971  0104  30C8               	movlw	200
  5972  0105  00F1               	movwf	___ftge@ff1+1
  5973  0106  3042               	movlw	66
  5974  0107  00F2               	movwf	___ftge@ff1+2
  5975  0108  082F               	movf	_temp^(0+128),w
  5976  0109  00F3               	movwf	___ftge@ff2
  5977  010A  0830               	movf	(_temp+1)^(0+128),w
  5978  010B  00F4               	movwf	___ftge@ff2+1
  5979  010C  0831               	movf	(_temp+2)^(0+128),w
  5980  010D  00F5               	movwf	___ftge@ff2+2
  5981  010E  160A  118A  2323  120A  118A  	fcall	___ftge
  5982  0113  1803               	btfsc	3,0
  5983  0114  291D               	goto	i1l2746
  5984  0115  3000               	movlw	0
  5985  0116  1683               	bsf	3,5	;RP0=1, select bank1
  5986  0117  1303               	bcf	3,6	;RP1=0, select bank1
  5987  0118  00AF               	movwf	_temp^(0+128)
  5988  0119  30C8               	movlw	200
  5989  011A  00B0               	movwf	(_temp+1)^(0+128)
  5990  011B  3042               	movlw	66
  5991  011C  00B1               	movwf	(_temp+2)^(0+128)
  5992  011D                     i1l2746:	
  5993                           
  5994                           ;main.c: 156: if (temp <0) temp = 0;
  5995  011D  1683               	bsf	3,5	;RP0=1, select bank1
  5996  011E  1303               	bcf	3,6	;RP1=0, select bank1
  5997  011F  082F               	movf	_temp^(0+128),w
  5998  0120  00F0               	movwf	___ftge@ff1
  5999  0121  0830               	movf	(_temp+1)^(0+128),w
  6000  0122  00F1               	movwf	___ftge@ff1+1
  6001  0123  0831               	movf	(_temp+2)^(0+128),w
  6002  0124  00F2               	movwf	___ftge@ff1+2
  6003  0125  3000               	movlw	0
  6004  0126  00F3               	movwf	___ftge@ff2
  6005  0127  3000               	movlw	0
  6006  0128  00F4               	movwf	___ftge@ff2+1
  6007  0129  3000               	movlw	0
  6008  012A  00F5               	movwf	___ftge@ff2+2
  6009  012B  160A  118A  2323  120A  118A  	fcall	___ftge
  6010  0130  1803               	btfsc	3,0
  6011  0131  293A               	goto	i1l2750
  6012  0132  3000               	movlw	0
  6013  0133  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0134  1303               	bcf	3,6	;RP1=0, select bank1
  6015  0135  00AF               	movwf	_temp^(0+128)
  6016  0136  3000               	movlw	0
  6017  0137  00B0               	movwf	(_temp+1)^(0+128)
  6018  0138  3000               	movlw	0
  6019  0139  00B1               	movwf	(_temp+2)^(0+128)
  6020  013A                     i1l2750:	
  6021                           
  6022                           ;main.c: 159: if (temp < 25)
  6023  013A  1683               	bsf	3,5	;RP0=1, select bank1
  6024  013B  1303               	bcf	3,6	;RP1=0, select bank1
  6025  013C  082F               	movf	_temp^(0+128),w
  6026  013D  00F0               	movwf	___ftge@ff1
  6027  013E  0830               	movf	(_temp+1)^(0+128),w
  6028  013F  00F1               	movwf	___ftge@ff1+1
  6029  0140  0831               	movf	(_temp+2)^(0+128),w
  6030  0141  00F2               	movwf	___ftge@ff1+2
  6031  0142  3000               	movlw	0
  6032  0143  00F3               	movwf	___ftge@ff2
  6033  0144  30C8               	movlw	200
  6034  0145  00F4               	movwf	___ftge@ff2+1
  6035  0146  3041               	movlw	65
  6036  0147  00F5               	movwf	___ftge@ff2+2
  6037  0148  160A  118A  2323  120A  118A  	fcall	___ftge
  6038  014D  1803               	btfsc	3,0
  6039  014E  2AA3               	goto	i1l2774
  6040                           
  6041                           ;main.c: 160: {
  6042                           ;main.c: 163: fitemp = trapmf(temp, 0,0,13,32);
  6043  014F  1683               	bsf	3,5	;RP0=1, select bank1
  6044  0150  1303               	bcf	3,6	;RP1=0, select bank1
  6045  0151  082F               	movf	_temp^(0+128),w
  6046  0152  1283               	bcf	3,5	;RP0=0, select bank0
  6047  0153  1303               	bcf	3,6	;RP1=0, select bank0
  6048  0154  00C7               	movwf	trapmf@x
  6049  0155  1683               	bsf	3,5	;RP0=1, select bank1
  6050  0156  1303               	bcf	3,6	;RP1=0, select bank1
  6051  0157  0830               	movf	(_temp+1)^(0+128),w
  6052  0158  1283               	bcf	3,5	;RP0=0, select bank0
  6053  0159  1303               	bcf	3,6	;RP1=0, select bank0
  6054  015A  00C8               	movwf	trapmf@x+1
  6055  015B  1683               	bsf	3,5	;RP0=1, select bank1
  6056  015C  1303               	bcf	3,6	;RP1=0, select bank1
  6057  015D  0831               	movf	(_temp+2)^(0+128),w
  6058  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6059  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0160  00C9               	movwf	trapmf@x+2
  6061  0161  3000               	movlw	0
  6062  0162  00CA               	movwf	trapmf@a
  6063  0163  3000               	movlw	0
  6064  0164  00CB               	movwf	trapmf@a+1
  6065  0165  3000               	movlw	0
  6066  0166  00CC               	movwf	trapmf@a+2
  6067  0167  3000               	movlw	0
  6068  0168  00CD               	movwf	trapmf@b
  6069  0169  3000               	movlw	0
  6070  016A  00CE               	movwf	trapmf@b+1
  6071  016B  3000               	movlw	0
  6072  016C  00CF               	movwf	trapmf@b+2
  6073  016D  3000               	movlw	0
  6074  016E  00D0               	movwf	trapmf@c
  6075  016F  3050               	movlw	80
  6076  0170  00D1               	movwf	trapmf@c+1
  6077  0171  3041               	movlw	65
  6078  0172  00D2               	movwf	trapmf@c+2
  6079  0173  3000               	movlw	0
  6080  0174  00D3               	movwf	trapmf@d
  6081  0175  3000               	movlw	0
  6082  0176  00D4               	movwf	trapmf@d+1
  6083  0177  3042               	movlw	66
  6084  0178  00D5               	movwf	trapmf@d+2
  6085  0179  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6086  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6087  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6088  0180  0847               	movf	?_trapmf,w
  6089  0181  1683               	bsf	3,5	;RP0=1, select bank1
  6090  0182  1303               	bcf	3,6	;RP1=0, select bank1
  6091  0183  00A0               	movwf	_fitemp^(0+128)
  6092  0184  1283               	bcf	3,5	;RP0=0, select bank0
  6093  0185  1303               	bcf	3,6	;RP1=0, select bank0
  6094  0186  0848               	movf	?_trapmf+1,w
  6095  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0188  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0189  00A1               	movwf	(_fitemp+1)^(0+128)
  6098  018A  1283               	bcf	3,5	;RP0=0, select bank0
  6099  018B  1303               	bcf	3,6	;RP1=0, select bank0
  6100  018C  0849               	movf	?_trapmf+2,w
  6101  018D  1683               	bsf	3,5	;RP0=1, select bank1
  6102  018E  1303               	bcf	3,6	;RP1=0, select bank1
  6103  018F  00A2               	movwf	(_fitemp+2)^(0+128)
  6104                           
  6105                           ;main.c: 166: fop_rule1 = max_val(fitemp,0.1);
  6106  0190  0820               	movf	_fitemp^(0+128),w
  6107  0191  1283               	bcf	3,5	;RP0=0, select bank0
  6108  0192  1303               	bcf	3,6	;RP1=0, select bank0
  6109  0193  00A0               	movwf	max_val@a
  6110  0194  1683               	bsf	3,5	;RP0=1, select bank1
  6111  0195  1303               	bcf	3,6	;RP1=0, select bank1
  6112  0196  0821               	movf	(_fitemp+1)^(0+128),w
  6113  0197  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0198  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0199  00A1               	movwf	max_val@a+1
  6116  019A  1683               	bsf	3,5	;RP0=1, select bank1
  6117  019B  1303               	bcf	3,6	;RP1=0, select bank1
  6118  019C  0822               	movf	(_fitemp+2)^(0+128),w
  6119  019D  1283               	bcf	3,5	;RP0=0, select bank0
  6120  019E  1303               	bcf	3,6	;RP1=0, select bank0
  6121  019F  00A2               	movwf	max_val@a+2
  6122  01A0  30CD               	movlw	205
  6123  01A1  00A3               	movwf	max_val@b
  6124  01A2  30CC               	movlw	204
  6125  01A3  00A4               	movwf	max_val@b+1
  6126  01A4  303D               	movlw	61
  6127  01A5  00A5               	movwf	max_val@b+2
  6128  01A6  160A  118A  20D5  120A  118A  	fcall	_max_val
  6129  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  6130  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  6131  01AD  0820               	movf	?_max_val,w
  6132  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  6133  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  6134  01B0  00A3               	movwf	_fop_rule1^(0+128)
  6135  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  6136  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  6137  01B3  0821               	movf	?_max_val+1,w
  6138  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  6139  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  6140  01B6  00A4               	movwf	(_fop_rule1+1)^(0+128)
  6141  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  6142  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  6143  01B9  0822               	movf	?_max_val+2,w
  6144  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  6145  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  6146  01BC  00A5               	movwf	(_fop_rule1+2)^(0+128)
  6147                           
  6148                           ;main.c: 169: x=0;
  6149  01BD  3000               	movlw	0
  6150  01BE  00B8               	movwf	_x^(0+128)
  6151  01BF  3000               	movlw	0
  6152  01C0  00B9               	movwf	(_x+1)^(0+128)
  6153  01C1  3000               	movlw	0
  6154  01C2  00BA               	movwf	(_x+2)^(0+128)
  6155                           
  6156                           ;main.c: 170: y=0;
  6157  01C3  3000               	movlw	0
  6158  01C4  00BB               	movwf	_y^(0+128)
  6159  01C5  3000               	movlw	0
  6160  01C6  00BC               	movwf	(_y+1)^(0+128)
  6161  01C7  3000               	movlw	0
  6162  01C8  00BD               	movwf	(_y+2)^(0+128)
  6163                           
  6164                           ;main.c: 171: for (int a=0; a<=90; a++)
  6165  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  6166  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  6167  01CB  01D9               	clrf	Fuzzy@a
  6168  01CC  01DA               	clrf	Fuzzy@a+1
  6169  01CD  085A               	movf	Fuzzy@a+1,w
  6170  01CE  3A80               	xorlw	128
  6171  01CF  00FF               	movwf	127
  6172  01D0  3080               	movlw	128
  6173  01D1  027F               	subwf	127,w
  6174  01D2  1D03               	skipz
  6175  01D3  29D6               	goto	u338_25
  6176  01D4  305B               	movlw	91
  6177  01D5  0259               	subwf	Fuzzy@a,w
  6178  01D6                     u338_25:	
  6179  01D6  1803               	btfsc	3,0
  6180  01D7  2AA3               	goto	i1l2774
  6181  01D8                     i1l2764:	
  6182                           
  6183                           ;main.c: 172: {
  6184                           ;main.c: 173: y = trapmf(x,0,0,13,32);
  6185  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  6186  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  6187  01DA  0838               	movf	_x^(0+128),w
  6188  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6189  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6190  01DD  00C7               	movwf	trapmf@x
  6191  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  6192  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  6193  01E0  0839               	movf	(_x+1)^(0+128),w
  6194  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  6195  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  6196  01E3  00C8               	movwf	trapmf@x+1
  6197  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  6198  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  6199  01E6  083A               	movf	(_x+2)^(0+128),w
  6200  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  6201  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  6202  01E9  00C9               	movwf	trapmf@x+2
  6203  01EA  3000               	movlw	0
  6204  01EB  00CA               	movwf	trapmf@a
  6205  01EC  3000               	movlw	0
  6206  01ED  00CB               	movwf	trapmf@a+1
  6207  01EE  3000               	movlw	0
  6208  01EF  00CC               	movwf	trapmf@a+2
  6209  01F0  3000               	movlw	0
  6210  01F1  00CD               	movwf	trapmf@b
  6211  01F2  3000               	movlw	0
  6212  01F3  00CE               	movwf	trapmf@b+1
  6213  01F4  3000               	movlw	0
  6214  01F5  00CF               	movwf	trapmf@b+2
  6215  01F6  3000               	movlw	0
  6216  01F7  00D0               	movwf	trapmf@c
  6217  01F8  3050               	movlw	80
  6218  01F9  00D1               	movwf	trapmf@c+1
  6219  01FA  3041               	movlw	65
  6220  01FB  00D2               	movwf	trapmf@c+2
  6221  01FC  3000               	movlw	0
  6222  01FD  00D3               	movwf	trapmf@d
  6223  01FE  3000               	movlw	0
  6224  01FF  00D4               	movwf	trapmf@d+1
  6225  0200  3042               	movlw	66
  6226  0201  00D5               	movwf	trapmf@d+2
  6227  0202  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6228  0207  1283               	bcf	3,5	;RP0=0, select bank0
  6229  0208  1303               	bcf	3,6	;RP1=0, select bank0
  6230  0209  0847               	movf	?_trapmf,w
  6231  020A  1683               	bsf	3,5	;RP0=1, select bank1
  6232  020B  1303               	bcf	3,6	;RP1=0, select bank1
  6233  020C  00BB               	movwf	_y^(0+128)
  6234  020D  1283               	bcf	3,5	;RP0=0, select bank0
  6235  020E  1303               	bcf	3,6	;RP1=0, select bank0
  6236  020F  0848               	movf	?_trapmf+1,w
  6237  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6238  0211  1303               	bcf	3,6	;RP1=0, select bank1
  6239  0212  00BC               	movwf	(_y+1)^(0+128)
  6240  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0214  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0215  0849               	movf	?_trapmf+2,w
  6243  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6244  0217  1303               	bcf	3,6	;RP1=0, select bank1
  6245  0218  00BD               	movwf	(_y+2)^(0+128)
  6246                           
  6247                           ;main.c: 175: if (y > fop_rule1)
  6248  0219  0823               	movf	_fop_rule1^(0+128),w
  6249  021A  00F0               	movwf	___ftge@ff1
  6250  021B  0824               	movf	(_fop_rule1+1)^(0+128),w
  6251  021C  00F1               	movwf	___ftge@ff1+1
  6252  021D  0825               	movf	(_fop_rule1+2)^(0+128),w
  6253  021E  00F2               	movwf	___ftge@ff1+2
  6254  021F  083B               	movf	_y^(0+128),w
  6255  0220  00F3               	movwf	___ftge@ff2
  6256  0221  083C               	movf	(_y+1)^(0+128),w
  6257  0222  00F4               	movwf	___ftge@ff2+1
  6258  0223  083D               	movf	(_y+2)^(0+128),w
  6259  0224  00F5               	movwf	___ftge@ff2+2
  6260  0225  160A  118A  2323  120A  118A  	fcall	___ftge
  6261  022A  1803               	btfsc	3,0
  6262  022B  2A3C               	goto	i1l2768
  6263                           
  6264                           ;main.c: 176: {
  6265                           ;main.c: 177: mantem += fop_rule1;
  6266  022C  1683               	bsf	3,5	;RP0=1, select bank1
  6267  022D  1303               	bcf	3,6	;RP1=0, select bank1
  6268  022E  0823               	movf	_fop_rule1^(0+128),w
  6269  022F  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0230  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0231  00AA               	movwf	___ftadd@f1
  6272  0232  1683               	bsf	3,5	;RP0=1, select bank1
  6273  0233  1303               	bcf	3,6	;RP1=0, select bank1
  6274  0234  0824               	movf	(_fop_rule1+1)^(0+128),w
  6275  0235  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0236  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0237  00AB               	movwf	___ftadd@f1+1
  6278  0238  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0239  1303               	bcf	3,6	;RP1=0, select bank1
  6280  023A  0825               	movf	(_fop_rule1+2)^(0+128),w
  6281  023B  2A4B               	goto	L3
  6282  023C                     i1l2768:	
  6283                           ;main.c: 178: }
  6284                           
  6285                           
  6286                           ;main.c: 179: else
  6287                           ;main.c: 180: {
  6288                           ;main.c: 181: mantem += y;
  6289  023C  1683               	bsf	3,5	;RP0=1, select bank1
  6290  023D  1303               	bcf	3,6	;RP1=0, select bank1
  6291  023E  083B               	movf	_y^(0+128),w
  6292  023F  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0240  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0241  00AA               	movwf	___ftadd@f1
  6295  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6296  0243  1303               	bcf	3,6	;RP1=0, select bank1
  6297  0244  083C               	movf	(_y+1)^(0+128),w
  6298  0245  1283               	bcf	3,5	;RP0=0, select bank0
  6299  0246  1303               	bcf	3,6	;RP1=0, select bank0
  6300  0247  00AB               	movwf	___ftadd@f1+1
  6301  0248  1683               	bsf	3,5	;RP0=1, select bank1
  6302  0249  1303               	bcf	3,6	;RP1=0, select bank1
  6303  024A  083D               	movf	(_y+2)^(0+128),w
  6304  024B                     L3:	
  6305  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6306  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6307  024D  00AC               	movwf	___ftadd@f1+2
  6308  024E  0866               	movf	Fuzzy@mantem,w
  6309  024F  00AD               	movwf	___ftadd@f2
  6310  0250  0867               	movf	Fuzzy@mantem+1,w
  6311  0251  00AE               	movwf	___ftadd@f2+1
  6312  0252  0868               	movf	Fuzzy@mantem+2,w
  6313  0253  00AF               	movwf	___ftadd@f2+2
  6314  0254  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6315  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6316  025A  1303               	bcf	3,6	;RP1=0, select bank0
  6317  025B  082A               	movf	?___ftadd,w
  6318  025C  00E6               	movwf	Fuzzy@mantem
  6319  025D  082B               	movf	?___ftadd+1,w
  6320  025E  00E7               	movwf	Fuzzy@mantem+1
  6321  025F  082C               	movf	?___ftadd+2,w
  6322  0260  00E8               	movwf	Fuzzy@mantem+2
  6323                           
  6324                           ;main.c: 182: }
  6325                           ;main.c: 184: x=x+1;
  6326  0261  3000               	movlw	0
  6327  0262  00AA               	movwf	___ftadd@f1
  6328  0263  3080               	movlw	128
  6329  0264  00AB               	movwf	___ftadd@f1+1
  6330  0265  303F               	movlw	63
  6331  0266  00AC               	movwf	___ftadd@f1+2
  6332  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6333  0268  1303               	bcf	3,6	;RP1=0, select bank1
  6334  0269  0838               	movf	_x^(0+128),w
  6335  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6336  026B  1303               	bcf	3,6	;RP1=0, select bank0
  6337  026C  00AD               	movwf	___ftadd@f2
  6338  026D  1683               	bsf	3,5	;RP0=1, select bank1
  6339  026E  1303               	bcf	3,6	;RP1=0, select bank1
  6340  026F  0839               	movf	(_x+1)^(0+128),w
  6341  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6342  0271  1303               	bcf	3,6	;RP1=0, select bank0
  6343  0272  00AE               	movwf	___ftadd@f2+1
  6344  0273  1683               	bsf	3,5	;RP0=1, select bank1
  6345  0274  1303               	bcf	3,6	;RP1=0, select bank1
  6346  0275  083A               	movf	(_x+2)^(0+128),w
  6347  0276  1283               	bcf	3,5	;RP0=0, select bank0
  6348  0277  1303               	bcf	3,6	;RP1=0, select bank0
  6349  0278  00AF               	movwf	___ftadd@f2+2
  6350  0279  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6351  027E  1283               	bcf	3,5	;RP0=0, select bank0
  6352  027F  1303               	bcf	3,6	;RP1=0, select bank0
  6353  0280  082A               	movf	?___ftadd,w
  6354  0281  1683               	bsf	3,5	;RP0=1, select bank1
  6355  0282  1303               	bcf	3,6	;RP1=0, select bank1
  6356  0283  00B8               	movwf	_x^(0+128)
  6357  0284  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0285  1303               	bcf	3,6	;RP1=0, select bank0
  6359  0286  082B               	movf	?___ftadd+1,w
  6360  0287  1683               	bsf	3,5	;RP0=1, select bank1
  6361  0288  1303               	bcf	3,6	;RP1=0, select bank1
  6362  0289  00B9               	movwf	(_x+1)^(0+128)
  6363  028A  1283               	bcf	3,5	;RP0=0, select bank0
  6364  028B  1303               	bcf	3,6	;RP1=0, select bank0
  6365  028C  082C               	movf	?___ftadd+2,w
  6366  028D  1683               	bsf	3,5	;RP0=1, select bank1
  6367  028E  1303               	bcf	3,6	;RP1=0, select bank1
  6368  028F  00BA               	movwf	(_x+2)^(0+128)
  6369  0290  3001               	movlw	1
  6370  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0292  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0293  07D9               	addwf	Fuzzy@a,f
  6373  0294  1803               	skipnc
  6374  0295  0ADA               	incf	Fuzzy@a+1,f
  6375  0296  3000               	movlw	0
  6376  0297  07DA               	addwf	Fuzzy@a+1,f
  6377  0298  085A               	movf	Fuzzy@a+1,w
  6378  0299  3A80               	xorlw	128
  6379  029A  00FF               	movwf	127
  6380  029B  3080               	movlw	128
  6381  029C  027F               	subwf	127,w
  6382  029D  1D03               	skipz
  6383  029E  2AA1               	goto	u340_25
  6384  029F  305B               	movlw	91
  6385  02A0  0259               	subwf	Fuzzy@a,w
  6386  02A1                     u340_25:	
  6387  02A1  1C03               	skipc
  6388  02A2  29D8               	goto	i1l2764
  6389  02A3                     i1l2774:	
  6390                           
  6391                           ;main.c: 185: }
  6392                           ;main.c: 187: }
  6393                           ;main.c: 193: if ((temp > 20) && (temp < 70))
  6394  02A3  3000               	movlw	0
  6395  02A4  00F0               	movwf	___ftge@ff1
  6396  02A5  30A0               	movlw	160
  6397  02A6  00F1               	movwf	___ftge@ff1+1
  6398  02A7  3041               	movlw	65
  6399  02A8  00F2               	movwf	___ftge@ff1+2
  6400  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  6401  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  6402  02AB  082F               	movf	_temp^(0+128),w
  6403  02AC  00F3               	movwf	___ftge@ff2
  6404  02AD  0830               	movf	(_temp+1)^(0+128),w
  6405  02AE  00F4               	movwf	___ftge@ff2+1
  6406  02AF  0831               	movf	(_temp+2)^(0+128),w
  6407  02B0  00F5               	movwf	___ftge@ff2+2
  6408  02B1  160A  118A  2323  120A  118A  	fcall	___ftge
  6409  02B6  1803               	btfsc	3,0
  6410  02B7  2C15               	goto	i1l2800
  6411  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6412  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  6413  02BA  082F               	movf	_temp^(0+128),w
  6414  02BB  00F0               	movwf	___ftge@ff1
  6415  02BC  0830               	movf	(_temp+1)^(0+128),w
  6416  02BD  00F1               	movwf	___ftge@ff1+1
  6417  02BE  0831               	movf	(_temp+2)^(0+128),w
  6418  02BF  00F2               	movwf	___ftge@ff1+2
  6419  02C0  3000               	movlw	0
  6420  02C1  00F3               	movwf	___ftge@ff2
  6421  02C2  308C               	movlw	140
  6422  02C3  00F4               	movwf	___ftge@ff2+1
  6423  02C4  3042               	movlw	66
  6424  02C5  00F5               	movwf	___ftge@ff2+2
  6425  02C6  160A  118A  2323  120A  118A  	fcall	___ftge
  6426  02CB  1803               	btfsc	3,0
  6427  02CC  2C15               	goto	i1l2800
  6428                           
  6429                           ;main.c: 194: {
  6430                           ;main.c: 196: fitemp = trimf(temp, 9, 45, 81);
  6431  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  6432  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  6433  02CF  082F               	movf	_temp^(0+128),w
  6434  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  6435  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  6436  02D2  00C7               	movwf	trimf@x
  6437  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  6438  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  6439  02D5  0830               	movf	(_temp+1)^(0+128),w
  6440  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  6441  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  6442  02D8  00C8               	movwf	trimf@x+1
  6443  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6444  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6445  02DB  0831               	movf	(_temp+2)^(0+128),w
  6446  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6447  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6448  02DE  00C9               	movwf	trimf@x+2
  6449  02DF  3000               	movlw	0
  6450  02E0  00CA               	movwf	trimf@a
  6451  02E1  3010               	movlw	16
  6452  02E2  00CB               	movwf	trimf@a+1
  6453  02E3  3041               	movlw	65
  6454  02E4  00CC               	movwf	trimf@a+2
  6455  02E5  3000               	movlw	0
  6456  02E6  00CD               	movwf	trimf@b
  6457  02E7  3034               	movlw	52
  6458  02E8  00CE               	movwf	trimf@b+1
  6459  02E9  3042               	movlw	66
  6460  02EA  00CF               	movwf	trimf@b+2
  6461  02EB  3000               	movlw	0
  6462  02EC  00D0               	movwf	trimf@c
  6463  02ED  30A2               	movlw	162
  6464  02EE  00D1               	movwf	trimf@c+1
  6465  02EF  3042               	movlw	66
  6466  02F0  00D2               	movwf	trimf@c+2
  6467  02F1  120A  158A  2056  120A  118A  	fcall	_trimf
  6468  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6469  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6470  02F8  0847               	movf	?_trimf,w
  6471  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  6472  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6473  02FB  00A0               	movwf	_fitemp^(0+128)
  6474  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6475  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6476  02FE  0848               	movf	?_trimf+1,w
  6477  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  6478  0300  1303               	bcf	3,6	;RP1=0, select bank1
  6479  0301  00A1               	movwf	(_fitemp+1)^(0+128)
  6480  0302  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0303  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0304  0849               	movf	?_trimf+2,w
  6483  0305  1683               	bsf	3,5	;RP0=1, select bank1
  6484  0306  1303               	bcf	3,6	;RP1=0, select bank1
  6485  0307  00A2               	movwf	(_fitemp+2)^(0+128)
  6486                           
  6487                           ;main.c: 199: fop_rule2 = max_val(fitemp,0.1);
  6488  0308  0820               	movf	_fitemp^(0+128),w
  6489  0309  1283               	bcf	3,5	;RP0=0, select bank0
  6490  030A  1303               	bcf	3,6	;RP1=0, select bank0
  6491  030B  00A0               	movwf	max_val@a
  6492  030C  1683               	bsf	3,5	;RP0=1, select bank1
  6493  030D  1303               	bcf	3,6	;RP1=0, select bank1
  6494  030E  0821               	movf	(_fitemp+1)^(0+128),w
  6495  030F  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0310  1303               	bcf	3,6	;RP1=0, select bank0
  6497  0311  00A1               	movwf	max_val@a+1
  6498  0312  1683               	bsf	3,5	;RP0=1, select bank1
  6499  0313  1303               	bcf	3,6	;RP1=0, select bank1
  6500  0314  0822               	movf	(_fitemp+2)^(0+128),w
  6501  0315  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0316  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0317  00A2               	movwf	max_val@a+2
  6504  0318  30CD               	movlw	205
  6505  0319  00A3               	movwf	max_val@b
  6506  031A  30CC               	movlw	204
  6507  031B  00A4               	movwf	max_val@b+1
  6508  031C  303D               	movlw	61
  6509  031D  00A5               	movwf	max_val@b+2
  6510  031E  160A  118A  20D5  120A  118A  	fcall	_max_val
  6511  0323  1283               	bcf	3,5	;RP0=0, select bank0
  6512  0324  1303               	bcf	3,6	;RP1=0, select bank0
  6513  0325  0820               	movf	?_max_val,w
  6514  0326  1683               	bsf	3,5	;RP0=1, select bank1
  6515  0327  1303               	bcf	3,6	;RP1=0, select bank1
  6516  0328  00A6               	movwf	_fop_rule2^(0+128)
  6517  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6518  032A  1303               	bcf	3,6	;RP1=0, select bank0
  6519  032B  0821               	movf	?_max_val+1,w
  6520  032C  1683               	bsf	3,5	;RP0=1, select bank1
  6521  032D  1303               	bcf	3,6	;RP1=0, select bank1
  6522  032E  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6523  032F  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0330  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0331  0822               	movf	?_max_val+2,w
  6526  0332  1683               	bsf	3,5	;RP0=1, select bank1
  6527  0333  1303               	bcf	3,6	;RP1=0, select bank1
  6528  0334  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6529                           
  6530                           ;main.c: 202: x=0;
  6531  0335  3000               	movlw	0
  6532  0336  00B8               	movwf	_x^(0+128)
  6533  0337  3000               	movlw	0
  6534  0338  00B9               	movwf	(_x+1)^(0+128)
  6535  0339  3000               	movlw	0
  6536  033A  00BA               	movwf	(_x+2)^(0+128)
  6537                           
  6538                           ;main.c: 203: y=0;
  6539  033B  3000               	movlw	0
  6540  033C  00BB               	movwf	_y^(0+128)
  6541  033D  3000               	movlw	0
  6542  033E  00BC               	movwf	(_y+1)^(0+128)
  6543  033F  3000               	movlw	0
  6544  0340  00BD               	movwf	(_y+2)^(0+128)
  6545                           
  6546                           ;main.c: 204: for (int a=0; a<=90; a++)
  6547  0341  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0342  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0343  01DB               	clrf	Fuzzy@a_232
  6550  0344  01DC               	clrf	Fuzzy@a_232+1
  6551  0345  085C               	movf	Fuzzy@a_232+1,w
  6552  0346  3A80               	xorlw	128
  6553  0347  00FF               	movwf	127
  6554  0348  3080               	movlw	128
  6555  0349  027F               	subwf	127,w
  6556  034A  1D03               	skipz
  6557  034B  2B4E               	goto	u343_25
  6558  034C  305B               	movlw	91
  6559  034D  025B               	subwf	Fuzzy@a_232,w
  6560  034E                     u343_25:	
  6561  034E  1803               	btfsc	3,0
  6562  034F  2C15               	goto	i1l2800
  6563  0350                     i1l2790:	
  6564                           
  6565                           ;main.c: 205: {
  6566                           ;main.c: 206: y = trimf(x, 9, 45, 81);
  6567  0350  1683               	bsf	3,5	;RP0=1, select bank1
  6568  0351  1303               	bcf	3,6	;RP1=0, select bank1
  6569  0352  0838               	movf	_x^(0+128),w
  6570  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0355  00C7               	movwf	trimf@x
  6573  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6574  0357  1303               	bcf	3,6	;RP1=0, select bank1
  6575  0358  0839               	movf	(_x+1)^(0+128),w
  6576  0359  1283               	bcf	3,5	;RP0=0, select bank0
  6577  035A  1303               	bcf	3,6	;RP1=0, select bank0
  6578  035B  00C8               	movwf	trimf@x+1
  6579  035C  1683               	bsf	3,5	;RP0=1, select bank1
  6580  035D  1303               	bcf	3,6	;RP1=0, select bank1
  6581  035E  083A               	movf	(_x+2)^(0+128),w
  6582  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0361  00C9               	movwf	trimf@x+2
  6585  0362  3000               	movlw	0
  6586  0363  00CA               	movwf	trimf@a
  6587  0364  3010               	movlw	16
  6588  0365  00CB               	movwf	trimf@a+1
  6589  0366  3041               	movlw	65
  6590  0367  00CC               	movwf	trimf@a+2
  6591  0368  3000               	movlw	0
  6592  0369  00CD               	movwf	trimf@b
  6593  036A  3034               	movlw	52
  6594  036B  00CE               	movwf	trimf@b+1
  6595  036C  3042               	movlw	66
  6596  036D  00CF               	movwf	trimf@b+2
  6597  036E  3000               	movlw	0
  6598  036F  00D0               	movwf	trimf@c
  6599  0370  30A2               	movlw	162
  6600  0371  00D1               	movwf	trimf@c+1
  6601  0372  3042               	movlw	66
  6602  0373  00D2               	movwf	trimf@c+2
  6603  0374  120A  158A  2056  120A  118A  	fcall	_trimf
  6604  0379  1283               	bcf	3,5	;RP0=0, select bank0
  6605  037A  1303               	bcf	3,6	;RP1=0, select bank0
  6606  037B  0847               	movf	?_trimf,w
  6607  037C  1683               	bsf	3,5	;RP0=1, select bank1
  6608  037D  1303               	bcf	3,6	;RP1=0, select bank1
  6609  037E  00BB               	movwf	_y^(0+128)
  6610  037F  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0380  1303               	bcf	3,6	;RP1=0, select bank0
  6612  0381  0848               	movf	?_trimf+1,w
  6613  0382  1683               	bsf	3,5	;RP0=1, select bank1
  6614  0383  1303               	bcf	3,6	;RP1=0, select bank1
  6615  0384  00BC               	movwf	(_y+1)^(0+128)
  6616  0385  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0386  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0387  0849               	movf	?_trimf+2,w
  6619  0388  1683               	bsf	3,5	;RP0=1, select bank1
  6620  0389  1303               	bcf	3,6	;RP1=0, select bank1
  6621  038A  00BD               	movwf	(_y+2)^(0+128)
  6622                           
  6623                           ;main.c: 208: if (y >= fop_rule2)
  6624  038B  083B               	movf	_y^(0+128),w
  6625  038C  00F0               	movwf	___ftge@ff1
  6626  038D  083C               	movf	(_y+1)^(0+128),w
  6627  038E  00F1               	movwf	___ftge@ff1+1
  6628  038F  083D               	movf	(_y+2)^(0+128),w
  6629  0390  00F2               	movwf	___ftge@ff1+2
  6630  0391  0826               	movf	_fop_rule2^(0+128),w
  6631  0392  00F3               	movwf	___ftge@ff2
  6632  0393  0827               	movf	(_fop_rule2+1)^(0+128),w
  6633  0394  00F4               	movwf	___ftge@ff2+1
  6634  0395  0828               	movf	(_fop_rule2+2)^(0+128),w
  6635  0396  00F5               	movwf	___ftge@ff2+2
  6636  0397  160A  118A  2323  120A  118A  	fcall	___ftge
  6637  039C  1C03               	btfss	3,0
  6638  039D  2BAE               	goto	i1l2794
  6639                           
  6640                           ;main.c: 209: {
  6641                           ;main.c: 210: reduz += fop_rule2;
  6642  039E  1683               	bsf	3,5	;RP0=1, select bank1
  6643  039F  1303               	bcf	3,6	;RP1=0, select bank1
  6644  03A0  0826               	movf	_fop_rule2^(0+128),w
  6645  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  6646  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  6647  03A3  00AA               	movwf	___ftadd@f1
  6648  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  6649  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  6650  03A6  0827               	movf	(_fop_rule2+1)^(0+128),w
  6651  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  6652  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  6653  03A9  00AB               	movwf	___ftadd@f1+1
  6654  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  6655  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  6656  03AC  0828               	movf	(_fop_rule2+2)^(0+128),w
  6657  03AD  2BBD               	goto	L4
  6658  03AE                     i1l2794:	
  6659                           ;main.c: 211: }
  6660                           
  6661                           
  6662                           ;main.c: 212: else
  6663                           ;main.c: 213: {
  6664                           ;main.c: 214: reduz += y;
  6665  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  6666  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  6667  03B0  083B               	movf	_y^(0+128),w
  6668  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  6669  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  6670  03B3  00AA               	movwf	___ftadd@f1
  6671  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  6672  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  6673  03B6  083C               	movf	(_y+1)^(0+128),w
  6674  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  6675  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  6676  03B9  00AB               	movwf	___ftadd@f1+1
  6677  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6678  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6679  03BC  083D               	movf	(_y+2)^(0+128),w
  6680  03BD                     L4:	
  6681  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6682  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6683  03BF  00AC               	movwf	___ftadd@f1+2
  6684  03C0  0869               	movf	Fuzzy@reduz,w
  6685  03C1  00AD               	movwf	___ftadd@f2
  6686  03C2  086A               	movf	Fuzzy@reduz+1,w
  6687  03C3  00AE               	movwf	___ftadd@f2+1
  6688  03C4  086B               	movf	Fuzzy@reduz+2,w
  6689  03C5  00AF               	movwf	___ftadd@f2+2
  6690  03C6  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6691  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  6692  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  6693  03CD  082A               	movf	?___ftadd,w
  6694  03CE  00E9               	movwf	Fuzzy@reduz
  6695  03CF  082B               	movf	?___ftadd+1,w
  6696  03D0  00EA               	movwf	Fuzzy@reduz+1
  6697  03D1  082C               	movf	?___ftadd+2,w
  6698  03D2  00EB               	movwf	Fuzzy@reduz+2
  6699                           
  6700                           ;main.c: 215: }
  6701                           ;main.c: 217: x=x+1;
  6702  03D3  3000               	movlw	0
  6703  03D4  00AA               	movwf	___ftadd@f1
  6704  03D5  3080               	movlw	128
  6705  03D6  00AB               	movwf	___ftadd@f1+1
  6706  03D7  303F               	movlw	63
  6707  03D8  00AC               	movwf	___ftadd@f1+2
  6708  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  6709  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  6710  03DB  0838               	movf	_x^(0+128),w
  6711  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  6712  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  6713  03DE  00AD               	movwf	___ftadd@f2
  6714  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  6715  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  6716  03E1  0839               	movf	(_x+1)^(0+128),w
  6717  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  6718  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  6719  03E4  00AE               	movwf	___ftadd@f2+1
  6720  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  6721  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  6722  03E7  083A               	movf	(_x+2)^(0+128),w
  6723  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  6724  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  6725  03EA  00AF               	movwf	___ftadd@f2+2
  6726  03EB  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6727  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  6728  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  6729  03F2  082A               	movf	?___ftadd,w
  6730  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  6731  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  6732  03F5  00B8               	movwf	_x^(0+128)
  6733  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  6734  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  6735  03F8  082B               	movf	?___ftadd+1,w
  6736  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  6737  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  6738  03FB  00B9               	movwf	(_x+1)^(0+128)
  6739  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  6740  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  6741  03FE  082C               	movf	?___ftadd+2,w
  6742  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  6743  0400  1303               	bcf	3,6	;RP1=0, select bank1
  6744  0401  00BA               	movwf	(_x+2)^(0+128)
  6745  0402  3001               	movlw	1
  6746  0403  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0404  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0405  07DB               	addwf	Fuzzy@a_232,f
  6749  0406  1803               	skipnc
  6750  0407  0ADC               	incf	Fuzzy@a_232+1,f
  6751  0408  3000               	movlw	0
  6752  0409  07DC               	addwf	Fuzzy@a_232+1,f
  6753  040A  085C               	movf	Fuzzy@a_232+1,w
  6754  040B  3A80               	xorlw	128
  6755  040C  00FF               	movwf	127
  6756  040D  3080               	movlw	128
  6757  040E  027F               	subwf	127,w
  6758  040F  1D03               	skipz
  6759  0410  2C13               	goto	u345_25
  6760  0411  305B               	movlw	91
  6761  0412  025B               	subwf	Fuzzy@a_232,w
  6762  0413                     u345_25:	
  6763  0413  1C03               	skipc
  6764  0414  2B50               	goto	i1l2790
  6765  0415                     i1l2800:	
  6766                           
  6767                           ;main.c: 218: }
  6768                           ;main.c: 220: }
  6769                           ;main.c: 226: if (temp > 70 )
  6770  0415  3000               	movlw	0
  6771  0416  00F0               	movwf	___ftge@ff1
  6772  0417  308C               	movlw	140
  6773  0418  00F1               	movwf	___ftge@ff1+1
  6774  0419  3042               	movlw	66
  6775  041A  00F2               	movwf	___ftge@ff1+2
  6776  041B  1683               	bsf	3,5	;RP0=1, select bank1
  6777  041C  1303               	bcf	3,6	;RP1=0, select bank1
  6778  041D  082F               	movf	_temp^(0+128),w
  6779  041E  00F3               	movwf	___ftge@ff2
  6780  041F  0830               	movf	(_temp+1)^(0+128),w
  6781  0420  00F4               	movwf	___ftge@ff2+1
  6782  0421  0831               	movf	(_temp+2)^(0+128),w
  6783  0422  00F5               	movwf	___ftge@ff2+2
  6784  0423  160A  118A  2323  120A  118A  	fcall	___ftge
  6785  0428  1803               	btfsc	3,0
  6786  0429  2D7E               	goto	i1l2824
  6787                           
  6788                           ;main.c: 227: {
  6789                           ;main.c: 229: fitemp = trapmf(temp, 62, 79, 90, 90);
  6790  042A  1683               	bsf	3,5	;RP0=1, select bank1
  6791  042B  1303               	bcf	3,6	;RP1=0, select bank1
  6792  042C  082F               	movf	_temp^(0+128),w
  6793  042D  1283               	bcf	3,5	;RP0=0, select bank0
  6794  042E  1303               	bcf	3,6	;RP1=0, select bank0
  6795  042F  00C7               	movwf	trapmf@x
  6796  0430  1683               	bsf	3,5	;RP0=1, select bank1
  6797  0431  1303               	bcf	3,6	;RP1=0, select bank1
  6798  0432  0830               	movf	(_temp+1)^(0+128),w
  6799  0433  1283               	bcf	3,5	;RP0=0, select bank0
  6800  0434  1303               	bcf	3,6	;RP1=0, select bank0
  6801  0435  00C8               	movwf	trapmf@x+1
  6802  0436  1683               	bsf	3,5	;RP0=1, select bank1
  6803  0437  1303               	bcf	3,6	;RP1=0, select bank1
  6804  0438  0831               	movf	(_temp+2)^(0+128),w
  6805  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6806  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6807  043B  00C9               	movwf	trapmf@x+2
  6808  043C  3000               	movlw	0
  6809  043D  00CA               	movwf	trapmf@a
  6810  043E  3078               	movlw	120
  6811  043F  00CB               	movwf	trapmf@a+1
  6812  0440  3042               	movlw	66
  6813  0441  00CC               	movwf	trapmf@a+2
  6814  0442  3000               	movlw	0
  6815  0443  00CD               	movwf	trapmf@b
  6816  0444  309E               	movlw	158
  6817  0445  00CE               	movwf	trapmf@b+1
  6818  0446  3042               	movlw	66
  6819  0447  00CF               	movwf	trapmf@b+2
  6820  0448  3000               	movlw	0
  6821  0449  00D0               	movwf	trapmf@c
  6822  044A  30B4               	movlw	180
  6823  044B  00D1               	movwf	trapmf@c+1
  6824  044C  3042               	movlw	66
  6825  044D  00D2               	movwf	trapmf@c+2
  6826  044E  3000               	movlw	0
  6827  044F  00D3               	movwf	trapmf@d
  6828  0450  30B4               	movlw	180
  6829  0451  00D4               	movwf	trapmf@d+1
  6830  0452  3042               	movlw	66
  6831  0453  00D5               	movwf	trapmf@d+2
  6832  0454  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6833  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6834  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6835  045B  0847               	movf	?_trapmf,w
  6836  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6837  045D  1303               	bcf	3,6	;RP1=0, select bank1
  6838  045E  00A0               	movwf	_fitemp^(0+128)
  6839  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6841  0461  0848               	movf	?_trapmf+1,w
  6842  0462  1683               	bsf	3,5	;RP0=1, select bank1
  6843  0463  1303               	bcf	3,6	;RP1=0, select bank1
  6844  0464  00A1               	movwf	(_fitemp+1)^(0+128)
  6845  0465  1283               	bcf	3,5	;RP0=0, select bank0
  6846  0466  1303               	bcf	3,6	;RP1=0, select bank0
  6847  0467  0849               	movf	?_trapmf+2,w
  6848  0468  1683               	bsf	3,5	;RP0=1, select bank1
  6849  0469  1303               	bcf	3,6	;RP1=0, select bank1
  6850  046A  00A2               	movwf	(_fitemp+2)^(0+128)
  6851                           
  6852                           ;main.c: 233: fop_rule3 = max_val(fitemp,0.1);
  6853  046B  0820               	movf	_fitemp^(0+128),w
  6854  046C  1283               	bcf	3,5	;RP0=0, select bank0
  6855  046D  1303               	bcf	3,6	;RP1=0, select bank0
  6856  046E  00A0               	movwf	max_val@a
  6857  046F  1683               	bsf	3,5	;RP0=1, select bank1
  6858  0470  1303               	bcf	3,6	;RP1=0, select bank1
  6859  0471  0821               	movf	(_fitemp+1)^(0+128),w
  6860  0472  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0473  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0474  00A1               	movwf	max_val@a+1
  6863  0475  1683               	bsf	3,5	;RP0=1, select bank1
  6864  0476  1303               	bcf	3,6	;RP1=0, select bank1
  6865  0477  0822               	movf	(_fitemp+2)^(0+128),w
  6866  0478  1283               	bcf	3,5	;RP0=0, select bank0
  6867  0479  1303               	bcf	3,6	;RP1=0, select bank0
  6868  047A  00A2               	movwf	max_val@a+2
  6869  047B  30CD               	movlw	205
  6870  047C  00A3               	movwf	max_val@b
  6871  047D  30CC               	movlw	204
  6872  047E  00A4               	movwf	max_val@b+1
  6873  047F  303D               	movlw	61
  6874  0480  00A5               	movwf	max_val@b+2
  6875  0481  160A  118A  20D5  120A  118A  	fcall	_max_val
  6876  0486  1283               	bcf	3,5	;RP0=0, select bank0
  6877  0487  1303               	bcf	3,6	;RP1=0, select bank0
  6878  0488  0820               	movf	?_max_val,w
  6879  0489  1683               	bsf	3,5	;RP0=1, select bank1
  6880  048A  1303               	bcf	3,6	;RP1=0, select bank1
  6881  048B  00A9               	movwf	_fop_rule3^(0+128)
  6882  048C  1283               	bcf	3,5	;RP0=0, select bank0
  6883  048D  1303               	bcf	3,6	;RP1=0, select bank0
  6884  048E  0821               	movf	?_max_val+1,w
  6885  048F  1683               	bsf	3,5	;RP0=1, select bank1
  6886  0490  1303               	bcf	3,6	;RP1=0, select bank1
  6887  0491  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6888  0492  1283               	bcf	3,5	;RP0=0, select bank0
  6889  0493  1303               	bcf	3,6	;RP1=0, select bank0
  6890  0494  0822               	movf	?_max_val+2,w
  6891  0495  1683               	bsf	3,5	;RP0=1, select bank1
  6892  0496  1303               	bcf	3,6	;RP1=0, select bank1
  6893  0497  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6894                           
  6895                           ;main.c: 236: x=0;
  6896  0498  3000               	movlw	0
  6897  0499  00B8               	movwf	_x^(0+128)
  6898  049A  3000               	movlw	0
  6899  049B  00B9               	movwf	(_x+1)^(0+128)
  6900  049C  3000               	movlw	0
  6901  049D  00BA               	movwf	(_x+2)^(0+128)
  6902                           
  6903                           ;main.c: 237: y=0;
  6904  049E  3000               	movlw	0
  6905  049F  00BB               	movwf	_y^(0+128)
  6906  04A0  3000               	movlw	0
  6907  04A1  00BC               	movwf	(_y+1)^(0+128)
  6908  04A2  3000               	movlw	0
  6909  04A3  00BD               	movwf	(_y+2)^(0+128)
  6910                           
  6911                           ;main.c: 238: for (int a=0; a<=90; a++)
  6912  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  6913  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  6914  04A6  01DD               	clrf	Fuzzy@a_233
  6915  04A7  01DE               	clrf	Fuzzy@a_233+1
  6916  04A8  085E               	movf	Fuzzy@a_233+1,w
  6917  04A9  3A80               	xorlw	128
  6918  04AA  00FF               	movwf	127
  6919  04AB  3080               	movlw	128
  6920  04AC  027F               	subwf	127,w
  6921  04AD  1D03               	skipz
  6922  04AE  2CB1               	goto	u347_25
  6923  04AF  305B               	movlw	91
  6924  04B0  025D               	subwf	Fuzzy@a_233,w
  6925  04B1                     u347_25:	
  6926  04B1  1803               	btfsc	3,0
  6927  04B2  2D7E               	goto	i1l2824
  6928  04B3                     i1l2814:	
  6929                           
  6930                           ;main.c: 239: {
  6931                           ;main.c: 240: y = trapmf(x, 62, 79, 90, 90);
  6932  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  6933  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  6934  04B5  0838               	movf	_x^(0+128),w
  6935  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  6936  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  6937  04B8  00C7               	movwf	trapmf@x
  6938  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  6939  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  6940  04BB  0839               	movf	(_x+1)^(0+128),w
  6941  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6942  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6943  04BE  00C8               	movwf	trapmf@x+1
  6944  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6945  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  6946  04C1  083A               	movf	(_x+2)^(0+128),w
  6947  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  6948  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  6949  04C4  00C9               	movwf	trapmf@x+2
  6950  04C5  3000               	movlw	0
  6951  04C6  00CA               	movwf	trapmf@a
  6952  04C7  3078               	movlw	120
  6953  04C8  00CB               	movwf	trapmf@a+1
  6954  04C9  3042               	movlw	66
  6955  04CA  00CC               	movwf	trapmf@a+2
  6956  04CB  3000               	movlw	0
  6957  04CC  00CD               	movwf	trapmf@b
  6958  04CD  309E               	movlw	158
  6959  04CE  00CE               	movwf	trapmf@b+1
  6960  04CF  3042               	movlw	66
  6961  04D0  00CF               	movwf	trapmf@b+2
  6962  04D1  3000               	movlw	0
  6963  04D2  00D0               	movwf	trapmf@c
  6964  04D3  30B4               	movlw	180
  6965  04D4  00D1               	movwf	trapmf@c+1
  6966  04D5  3042               	movlw	66
  6967  04D6  00D2               	movwf	trapmf@c+2
  6968  04D7  3000               	movlw	0
  6969  04D8  00D3               	movwf	trapmf@d
  6970  04D9  30B4               	movlw	180
  6971  04DA  00D4               	movwf	trapmf@d+1
  6972  04DB  3042               	movlw	66
  6973  04DC  00D5               	movwf	trapmf@d+2
  6974  04DD  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6975  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  6976  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  6977  04E4  0847               	movf	?_trapmf,w
  6978  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  6979  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  6980  04E7  00BB               	movwf	_y^(0+128)
  6981  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  6982  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  6983  04EA  0848               	movf	?_trapmf+1,w
  6984  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  6985  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  6986  04ED  00BC               	movwf	(_y+1)^(0+128)
  6987  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6988  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6989  04F0  0849               	movf	?_trapmf+2,w
  6990  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  6991  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  6992  04F3  00BD               	movwf	(_y+2)^(0+128)
  6993                           
  6994                           ;main.c: 242: if (y >= fop_rule3)
  6995  04F4  083B               	movf	_y^(0+128),w
  6996  04F5  00F0               	movwf	___ftge@ff1
  6997  04F6  083C               	movf	(_y+1)^(0+128),w
  6998  04F7  00F1               	movwf	___ftge@ff1+1
  6999  04F8  083D               	movf	(_y+2)^(0+128),w
  7000  04F9  00F2               	movwf	___ftge@ff1+2
  7001  04FA  0829               	movf	_fop_rule3^(0+128),w
  7002  04FB  00F3               	movwf	___ftge@ff2
  7003  04FC  082A               	movf	(_fop_rule3+1)^(0+128),w
  7004  04FD  00F4               	movwf	___ftge@ff2+1
  7005  04FE  082B               	movf	(_fop_rule3+2)^(0+128),w
  7006  04FF  00F5               	movwf	___ftge@ff2+2
  7007  0500  160A  118A  2323  120A  118A  	fcall	___ftge
  7008  0505  1C03               	btfss	3,0
  7009  0506  2D17               	goto	i1l2818
  7010                           
  7011                           ;main.c: 243: {
  7012                           ;main.c: 244: aumenta += fop_rule3;
  7013  0507  1683               	bsf	3,5	;RP0=1, select bank1
  7014  0508  1303               	bcf	3,6	;RP1=0, select bank1
  7015  0509  0829               	movf	_fop_rule3^(0+128),w
  7016  050A  1283               	bcf	3,5	;RP0=0, select bank0
  7017  050B  1303               	bcf	3,6	;RP1=0, select bank0
  7018  050C  00AA               	movwf	___ftadd@f1
  7019  050D  1683               	bsf	3,5	;RP0=1, select bank1
  7020  050E  1303               	bcf	3,6	;RP1=0, select bank1
  7021  050F  082A               	movf	(_fop_rule3+1)^(0+128),w
  7022  0510  1283               	bcf	3,5	;RP0=0, select bank0
  7023  0511  1303               	bcf	3,6	;RP1=0, select bank0
  7024  0512  00AB               	movwf	___ftadd@f1+1
  7025  0513  1683               	bsf	3,5	;RP0=1, select bank1
  7026  0514  1303               	bcf	3,6	;RP1=0, select bank1
  7027  0515  082B               	movf	(_fop_rule3+2)^(0+128),w
  7028  0516  2D26               	goto	L5
  7029  0517                     i1l2818:	
  7030                           ;main.c: 245: }
  7031                           
  7032                           
  7033                           ;main.c: 246: else
  7034                           ;main.c: 247: {
  7035                           ;main.c: 248: aumenta += y;
  7036  0517  1683               	bsf	3,5	;RP0=1, select bank1
  7037  0518  1303               	bcf	3,6	;RP1=0, select bank1
  7038  0519  083B               	movf	_y^(0+128),w
  7039  051A  1283               	bcf	3,5	;RP0=0, select bank0
  7040  051B  1303               	bcf	3,6	;RP1=0, select bank0
  7041  051C  00AA               	movwf	___ftadd@f1
  7042  051D  1683               	bsf	3,5	;RP0=1, select bank1
  7043  051E  1303               	bcf	3,6	;RP1=0, select bank1
  7044  051F  083C               	movf	(_y+1)^(0+128),w
  7045  0520  1283               	bcf	3,5	;RP0=0, select bank0
  7046  0521  1303               	bcf	3,6	;RP1=0, select bank0
  7047  0522  00AB               	movwf	___ftadd@f1+1
  7048  0523  1683               	bsf	3,5	;RP0=1, select bank1
  7049  0524  1303               	bcf	3,6	;RP1=0, select bank1
  7050  0525  083D               	movf	(_y+2)^(0+128),w
  7051  0526                     L5:	
  7052  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7053  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7054  0528  00AC               	movwf	___ftadd@f1+2
  7055  0529  086C               	movf	Fuzzy@aumenta,w
  7056  052A  00AD               	movwf	___ftadd@f2
  7057  052B  086D               	movf	Fuzzy@aumenta+1,w
  7058  052C  00AE               	movwf	___ftadd@f2+1
  7059  052D  086E               	movf	Fuzzy@aumenta+2,w
  7060  052E  00AF               	movwf	___ftadd@f2+2
  7061  052F  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7062  0534  1283               	bcf	3,5	;RP0=0, select bank0
  7063  0535  1303               	bcf	3,6	;RP1=0, select bank0
  7064  0536  082A               	movf	?___ftadd,w
  7065  0537  00EC               	movwf	Fuzzy@aumenta
  7066  0538  082B               	movf	?___ftadd+1,w
  7067  0539  00ED               	movwf	Fuzzy@aumenta+1
  7068  053A  082C               	movf	?___ftadd+2,w
  7069  053B  00EE               	movwf	Fuzzy@aumenta+2
  7070                           
  7071                           ;main.c: 249: }
  7072                           ;main.c: 251: x=x+1;
  7073  053C  3000               	movlw	0
  7074  053D  00AA               	movwf	___ftadd@f1
  7075  053E  3080               	movlw	128
  7076  053F  00AB               	movwf	___ftadd@f1+1
  7077  0540  303F               	movlw	63
  7078  0541  00AC               	movwf	___ftadd@f1+2
  7079  0542  1683               	bsf	3,5	;RP0=1, select bank1
  7080  0543  1303               	bcf	3,6	;RP1=0, select bank1
  7081  0544  0838               	movf	_x^(0+128),w
  7082  0545  1283               	bcf	3,5	;RP0=0, select bank0
  7083  0546  1303               	bcf	3,6	;RP1=0, select bank0
  7084  0547  00AD               	movwf	___ftadd@f2
  7085  0548  1683               	bsf	3,5	;RP0=1, select bank1
  7086  0549  1303               	bcf	3,6	;RP1=0, select bank1
  7087  054A  0839               	movf	(_x+1)^(0+128),w
  7088  054B  1283               	bcf	3,5	;RP0=0, select bank0
  7089  054C  1303               	bcf	3,6	;RP1=0, select bank0
  7090  054D  00AE               	movwf	___ftadd@f2+1
  7091  054E  1683               	bsf	3,5	;RP0=1, select bank1
  7092  054F  1303               	bcf	3,6	;RP1=0, select bank1
  7093  0550  083A               	movf	(_x+2)^(0+128),w
  7094  0551  1283               	bcf	3,5	;RP0=0, select bank0
  7095  0552  1303               	bcf	3,6	;RP1=0, select bank0
  7096  0553  00AF               	movwf	___ftadd@f2+2
  7097  0554  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7098  0559  1283               	bcf	3,5	;RP0=0, select bank0
  7099  055A  1303               	bcf	3,6	;RP1=0, select bank0
  7100  055B  082A               	movf	?___ftadd,w
  7101  055C  1683               	bsf	3,5	;RP0=1, select bank1
  7102  055D  1303               	bcf	3,6	;RP1=0, select bank1
  7103  055E  00B8               	movwf	_x^(0+128)
  7104  055F  1283               	bcf	3,5	;RP0=0, select bank0
  7105  0560  1303               	bcf	3,6	;RP1=0, select bank0
  7106  0561  082B               	movf	?___ftadd+1,w
  7107  0562  1683               	bsf	3,5	;RP0=1, select bank1
  7108  0563  1303               	bcf	3,6	;RP1=0, select bank1
  7109  0564  00B9               	movwf	(_x+1)^(0+128)
  7110  0565  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0566  1303               	bcf	3,6	;RP1=0, select bank0
  7112  0567  082C               	movf	?___ftadd+2,w
  7113  0568  1683               	bsf	3,5	;RP0=1, select bank1
  7114  0569  1303               	bcf	3,6	;RP1=0, select bank1
  7115  056A  00BA               	movwf	(_x+2)^(0+128)
  7116  056B  3001               	movlw	1
  7117  056C  1283               	bcf	3,5	;RP0=0, select bank0
  7118  056D  1303               	bcf	3,6	;RP1=0, select bank0
  7119  056E  07DD               	addwf	Fuzzy@a_233,f
  7120  056F  1803               	skipnc
  7121  0570  0ADE               	incf	Fuzzy@a_233+1,f
  7122  0571  3000               	movlw	0
  7123  0572  07DE               	addwf	Fuzzy@a_233+1,f
  7124  0573  085E               	movf	Fuzzy@a_233+1,w
  7125  0574  3A80               	xorlw	128
  7126  0575  00FF               	movwf	127
  7127  0576  3080               	movlw	128
  7128  0577  027F               	subwf	127,w
  7129  0578  1D03               	skipz
  7130  0579  2D7C               	goto	u349_25
  7131  057A  305B               	movlw	91
  7132  057B  025D               	subwf	Fuzzy@a_233,w
  7133  057C                     u349_25:	
  7134  057C  1C03               	skipc
  7135  057D  2CB3               	goto	i1l2814
  7136  057E                     i1l2824:	
  7137                           
  7138                           ;main.c: 252: }
  7139                           ;main.c: 254: }
  7140                           ;main.c: 257: for (int a=0; a<1; a++)
  7141  057E  1283               	bcf	3,5	;RP0=0, select bank0
  7142  057F  1303               	bcf	3,6	;RP1=0, select bank0
  7143  0580  01DF               	clrf	Fuzzy@a_234
  7144  0581  01E0               	clrf	Fuzzy@a_234+1
  7145  0582  0860               	movf	Fuzzy@a_234+1,w
  7146  0583  3A80               	xorlw	128
  7147  0584  00FF               	movwf	127
  7148  0585  3080               	movlw	128
  7149  0586  027F               	subwf	127,w
  7150  0587  1D03               	skipz
  7151  0588  2D8B               	goto	u350_25
  7152  0589  3001               	movlw	1
  7153  058A  025F               	subwf	Fuzzy@a_234,w
  7154  058B                     u350_25:	
  7155  058B  1803               	btfsc	3,0
  7156  058C  2DF5               	goto	i1l2844
  7157  058D                     i1l2830:	
  7158                           
  7159                           ;main.c: 258: {
  7160                           ;main.c: 259: if (temp < 25)
  7161  058D  1683               	bsf	3,5	;RP0=1, select bank1
  7162  058E  1303               	bcf	3,6	;RP1=0, select bank1
  7163  058F  082F               	movf	_temp^(0+128),w
  7164  0590  00F0               	movwf	___ftge@ff1
  7165  0591  0830               	movf	(_temp+1)^(0+128),w
  7166  0592  00F1               	movwf	___ftge@ff1+1
  7167  0593  0831               	movf	(_temp+2)^(0+128),w
  7168  0594  00F2               	movwf	___ftge@ff1+2
  7169  0595  3000               	movlw	0
  7170  0596  00F3               	movwf	___ftge@ff2
  7171  0597  30C8               	movlw	200
  7172  0598  00F4               	movwf	___ftge@ff2+1
  7173  0599  3041               	movlw	65
  7174  059A  00F5               	movwf	___ftge@ff2+2
  7175  059B  160A  118A  2323  120A  118A  	fcall	___ftge
  7176  05A0  1803               	btfsc	3,0
  7177  05A1  2DAA               	goto	i1l2834
  7178                           
  7179                           ;main.c: 260: {
  7180                           ;main.c: 261: tip = mantem;
  7181  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  7182  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  7183  05A4  0866               	movf	Fuzzy@mantem,w
  7184  05A5  00E3               	movwf	Fuzzy@tip
  7185  05A6  0867               	movf	Fuzzy@mantem+1,w
  7186  05A7  00E4               	movwf	Fuzzy@tip+1
  7187  05A8  0868               	movf	Fuzzy@mantem+2,w
  7188  05A9  2DE3               	goto	L7
  7189  05AA                     i1l2834:	
  7190                           ;main.c: 262: }else
  7191                           
  7192                           
  7193                           ;main.c: 263: if (temp >= 25 && temp < 75)
  7194  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  7195  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  7196  05AC  082F               	movf	_temp^(0+128),w
  7197  05AD  00F0               	movwf	___ftge@ff1
  7198  05AE  0830               	movf	(_temp+1)^(0+128),w
  7199  05AF  00F1               	movwf	___ftge@ff1+1
  7200  05B0  0831               	movf	(_temp+2)^(0+128),w
  7201  05B1  00F2               	movwf	___ftge@ff1+2
  7202  05B2  3000               	movlw	0
  7203  05B3  00F3               	movwf	___ftge@ff2
  7204  05B4  30C8               	movlw	200
  7205  05B5  00F4               	movwf	___ftge@ff2+1
  7206  05B6  3041               	movlw	65
  7207  05B7  00F5               	movwf	___ftge@ff2+2
  7208  05B8  160A  118A  2323  120A  118A  	fcall	___ftge
  7209  05BD  1C03               	btfss	3,0
  7210  05BE  2DDC               	goto	i1l2840
  7211  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  7212  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  7213  05C1  082F               	movf	_temp^(0+128),w
  7214  05C2  00F0               	movwf	___ftge@ff1
  7215  05C3  0830               	movf	(_temp+1)^(0+128),w
  7216  05C4  00F1               	movwf	___ftge@ff1+1
  7217  05C5  0831               	movf	(_temp+2)^(0+128),w
  7218  05C6  00F2               	movwf	___ftge@ff1+2
  7219  05C7  3000               	movlw	0
  7220  05C8  00F3               	movwf	___ftge@ff2
  7221  05C9  3096               	movlw	150
  7222  05CA  00F4               	movwf	___ftge@ff2+1
  7223  05CB  3042               	movlw	66
  7224  05CC  00F5               	movwf	___ftge@ff2+2
  7225  05CD  160A  118A  2323  120A  118A  	fcall	___ftge
  7226  05D2  1803               	btfsc	3,0
  7227  05D3  2DDC               	goto	i1l2840
  7228                           
  7229                           ;main.c: 264: {
  7230                           ;main.c: 265: tip = reduz;
  7231  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  7232  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  7233  05D6  0869               	movf	Fuzzy@reduz,w
  7234  05D7  00E3               	movwf	Fuzzy@tip
  7235  05D8  086A               	movf	Fuzzy@reduz+1,w
  7236  05D9  00E4               	movwf	Fuzzy@tip+1
  7237  05DA  086B               	movf	Fuzzy@reduz+2,w
  7238  05DB  2DE3               	goto	L7
  7239  05DC                     i1l2840:	
  7240                           ;main.c: 266: }else
  7241                           
  7242                           
  7243                           ;main.c: 267: {
  7244                           ;main.c: 268: tip = aumenta;
  7245  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  7246  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  7247  05DE  086C               	movf	Fuzzy@aumenta,w
  7248  05DF  00E3               	movwf	Fuzzy@tip
  7249  05E0  086D               	movf	Fuzzy@aumenta+1,w
  7250  05E1  00E4               	movwf	Fuzzy@tip+1
  7251  05E2  086E               	movf	Fuzzy@aumenta+2,w
  7252  05E3                     L7:	
  7253  05E3  00E5               	movwf	Fuzzy@tip+2
  7254  05E4  3001               	movlw	1
  7255  05E5  07DF               	addwf	Fuzzy@a_234,f
  7256  05E6  1803               	skipnc
  7257  05E7  0AE0               	incf	Fuzzy@a_234+1,f
  7258  05E8  3000               	movlw	0
  7259  05E9  07E0               	addwf	Fuzzy@a_234+1,f
  7260  05EA  0860               	movf	Fuzzy@a_234+1,w
  7261  05EB  3A80               	xorlw	128
  7262  05EC  00FF               	movwf	127
  7263  05ED  3080               	movlw	128
  7264  05EE  027F               	subwf	127,w
  7265  05EF  1D03               	skipz
  7266  05F0  2DF3               	goto	u354_25
  7267  05F1  3001               	movlw	1
  7268  05F2  025F               	subwf	Fuzzy@a_234,w
  7269  05F3                     u354_25:	
  7270  05F3  1C03               	skipc
  7271  05F4  2D8D               	goto	i1l2830
  7272  05F5                     i1l2844:	
  7273                           
  7274                           ;main.c: 269: }
  7275                           ;main.c: 270: }
  7276                           ;main.c: 274: x = 0;
  7277  05F5  3000               	movlw	0
  7278  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  7279  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  7280  05F8  00B8               	movwf	_x^(0+128)
  7281  05F9  3000               	movlw	0
  7282  05FA  00B9               	movwf	(_x+1)^(0+128)
  7283  05FB  3000               	movlw	0
  7284  05FC  00BA               	movwf	(_x+2)^(0+128)
  7285                           
  7286                           ;main.c: 275: total_area = 0;
  7287  05FD  3000               	movlw	0
  7288  05FE  00B5               	movwf	_total_area^(0+128)
  7289  05FF  3000               	movlw	0
  7290  0600  00B6               	movwf	(_total_area+1)^(0+128)
  7291  0601  3000               	movlw	0
  7292  0602  00B7               	movwf	(_total_area+2)^(0+128)
  7293                           
  7294                           ;main.c: 276: sum = 0;
  7295  0603  3000               	movlw	0
  7296  0604  00AC               	movwf	_sum^(0+128)
  7297  0605  3000               	movlw	0
  7298  0606  00AD               	movwf	(_sum+1)^(0+128)
  7299  0607  3000               	movlw	0
  7300  0608  00AE               	movwf	(_sum+2)^(0+128)
  7301                           
  7302                           ;main.c: 277: for (int a=0; a<1; a++)
  7303  0609  1283               	bcf	3,5	;RP0=0, select bank0
  7304  060A  1303               	bcf	3,6	;RP1=0, select bank0
  7305  060B  01E1               	clrf	Fuzzy@a_235
  7306  060C  01E2               	clrf	Fuzzy@a_235+1
  7307  060D  0862               	movf	Fuzzy@a_235+1,w
  7308  060E  3A80               	xorlw	128
  7309  060F  00FF               	movwf	127
  7310  0610  3080               	movlw	128
  7311  0611  027F               	subwf	127,w
  7312  0612  1D03               	skipz
  7313  0613  2E16               	goto	u355_25
  7314  0614  3001               	movlw	1
  7315  0615  0261               	subwf	Fuzzy@a_235,w
  7316  0616                     u355_25:	
  7317  0616  1803               	btfsc	3,0
  7318  0617  2ECF               	goto	i1l2858
  7319  0618                     i1l2852:	
  7320                           
  7321                           ;main.c: 278: {
  7322                           ;main.c: 279: total_area = total_area + tip;
  7323  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7324  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7325  061A  0863               	movf	Fuzzy@tip,w
  7326  061B  00AA               	movwf	___ftadd@f1
  7327  061C  0864               	movf	Fuzzy@tip+1,w
  7328  061D  00AB               	movwf	___ftadd@f1+1
  7329  061E  0865               	movf	Fuzzy@tip+2,w
  7330  061F  00AC               	movwf	___ftadd@f1+2
  7331  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7332  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7333  0622  0835               	movf	_total_area^(0+128),w
  7334  0623  1283               	bcf	3,5	;RP0=0, select bank0
  7335  0624  1303               	bcf	3,6	;RP1=0, select bank0
  7336  0625  00AD               	movwf	___ftadd@f2
  7337  0626  1683               	bsf	3,5	;RP0=1, select bank1
  7338  0627  1303               	bcf	3,6	;RP1=0, select bank1
  7339  0628  0836               	movf	(_total_area+1)^(0+128),w
  7340  0629  1283               	bcf	3,5	;RP0=0, select bank0
  7341  062A  1303               	bcf	3,6	;RP1=0, select bank0
  7342  062B  00AE               	movwf	___ftadd@f2+1
  7343  062C  1683               	bsf	3,5	;RP0=1, select bank1
  7344  062D  1303               	bcf	3,6	;RP1=0, select bank1
  7345  062E  0837               	movf	(_total_area+2)^(0+128),w
  7346  062F  1283               	bcf	3,5	;RP0=0, select bank0
  7347  0630  1303               	bcf	3,6	;RP1=0, select bank0
  7348  0631  00AF               	movwf	___ftadd@f2+2
  7349  0632  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7350  0637  1283               	bcf	3,5	;RP0=0, select bank0
  7351  0638  1303               	bcf	3,6	;RP1=0, select bank0
  7352  0639  082A               	movf	?___ftadd,w
  7353  063A  1683               	bsf	3,5	;RP0=1, select bank1
  7354  063B  1303               	bcf	3,6	;RP1=0, select bank1
  7355  063C  00B5               	movwf	_total_area^(0+128)
  7356  063D  1283               	bcf	3,5	;RP0=0, select bank0
  7357  063E  1303               	bcf	3,6	;RP1=0, select bank0
  7358  063F  082B               	movf	?___ftadd+1,w
  7359  0640  1683               	bsf	3,5	;RP0=1, select bank1
  7360  0641  1303               	bcf	3,6	;RP1=0, select bank1
  7361  0642  00B6               	movwf	(_total_area+1)^(0+128)
  7362  0643  1283               	bcf	3,5	;RP0=0, select bank0
  7363  0644  1303               	bcf	3,6	;RP1=0, select bank0
  7364  0645  082C               	movf	?___ftadd+2,w
  7365  0646  1683               	bsf	3,5	;RP0=1, select bank1
  7366  0647  1303               	bcf	3,6	;RP1=0, select bank1
  7367  0648  00B7               	movwf	(_total_area+2)^(0+128)
  7368                           
  7369                           ;main.c: 280: sum = sum + (x * tip);
  7370  0649  082C               	movf	_sum^(0+128),w
  7371  064A  1283               	bcf	3,5	;RP0=0, select bank0
  7372  064B  1303               	bcf	3,6	;RP1=0, select bank0
  7373  064C  00AA               	movwf	___ftadd@f1
  7374  064D  1683               	bsf	3,5	;RP0=1, select bank1
  7375  064E  1303               	bcf	3,6	;RP1=0, select bank1
  7376  064F  082D               	movf	(_sum+1)^(0+128),w
  7377  0650  1283               	bcf	3,5	;RP0=0, select bank0
  7378  0651  1303               	bcf	3,6	;RP1=0, select bank0
  7379  0652  00AB               	movwf	___ftadd@f1+1
  7380  0653  1683               	bsf	3,5	;RP0=1, select bank1
  7381  0654  1303               	bcf	3,6	;RP1=0, select bank1
  7382  0655  082E               	movf	(_sum+2)^(0+128),w
  7383  0656  1283               	bcf	3,5	;RP0=0, select bank0
  7384  0657  1303               	bcf	3,6	;RP1=0, select bank0
  7385  0658  00AC               	movwf	___ftadd@f1+2
  7386  0659  0863               	movf	Fuzzy@tip,w
  7387  065A  00F8               	movwf	___ftmul@f1
  7388  065B  0864               	movf	Fuzzy@tip+1,w
  7389  065C  00F9               	movwf	___ftmul@f1+1
  7390  065D  0865               	movf	Fuzzy@tip+2,w
  7391  065E  00FA               	movwf	___ftmul@f1+2
  7392  065F  1683               	bsf	3,5	;RP0=1, select bank1
  7393  0660  1303               	bcf	3,6	;RP1=0, select bank1
  7394  0661  0838               	movf	_x^(0+128),w
  7395  0662  00FB               	movwf	___ftmul@f2
  7396  0663  0839               	movf	(_x+1)^(0+128),w
  7397  0664  00FC               	movwf	___ftmul@f2+1
  7398  0665  083A               	movf	(_x+2)^(0+128),w
  7399  0666  00FD               	movwf	___ftmul@f2+2
  7400  0667  160A  118A  2626  120A  118A  	fcall	___ftmul
  7401  066C  0878               	movf	?___ftmul,w
  7402  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7403  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7404  066F  00AD               	movwf	___ftadd@f2
  7405  0670  0879               	movf	?___ftmul+1,w
  7406  0671  00AE               	movwf	___ftadd@f2+1
  7407  0672  087A               	movf	?___ftmul+2,w
  7408  0673  00AF               	movwf	___ftadd@f2+2
  7409  0674  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7410  0679  1283               	bcf	3,5	;RP0=0, select bank0
  7411  067A  1303               	bcf	3,6	;RP1=0, select bank0
  7412  067B  082A               	movf	?___ftadd,w
  7413  067C  1683               	bsf	3,5	;RP0=1, select bank1
  7414  067D  1303               	bcf	3,6	;RP1=0, select bank1
  7415  067E  00AC               	movwf	_sum^(0+128)
  7416  067F  1283               	bcf	3,5	;RP0=0, select bank0
  7417  0680  1303               	bcf	3,6	;RP1=0, select bank0
  7418  0681  082B               	movf	?___ftadd+1,w
  7419  0682  1683               	bsf	3,5	;RP0=1, select bank1
  7420  0683  1303               	bcf	3,6	;RP1=0, select bank1
  7421  0684  00AD               	movwf	(_sum+1)^(0+128)
  7422  0685  1283               	bcf	3,5	;RP0=0, select bank0
  7423  0686  1303               	bcf	3,6	;RP1=0, select bank0
  7424  0687  082C               	movf	?___ftadd+2,w
  7425  0688  1683               	bsf	3,5	;RP0=1, select bank1
  7426  0689  1303               	bcf	3,6	;RP1=0, select bank1
  7427  068A  00AE               	movwf	(_sum+2)^(0+128)
  7428                           
  7429                           ;main.c: 282: x=x+1;
  7430  068B  3000               	movlw	0
  7431  068C  1283               	bcf	3,5	;RP0=0, select bank0
  7432  068D  1303               	bcf	3,6	;RP1=0, select bank0
  7433  068E  00AA               	movwf	___ftadd@f1
  7434  068F  3080               	movlw	128
  7435  0690  00AB               	movwf	___ftadd@f1+1
  7436  0691  303F               	movlw	63
  7437  0692  00AC               	movwf	___ftadd@f1+2
  7438  0693  1683               	bsf	3,5	;RP0=1, select bank1
  7439  0694  1303               	bcf	3,6	;RP1=0, select bank1
  7440  0695  0838               	movf	_x^(0+128),w
  7441  0696  1283               	bcf	3,5	;RP0=0, select bank0
  7442  0697  1303               	bcf	3,6	;RP1=0, select bank0
  7443  0698  00AD               	movwf	___ftadd@f2
  7444  0699  1683               	bsf	3,5	;RP0=1, select bank1
  7445  069A  1303               	bcf	3,6	;RP1=0, select bank1
  7446  069B  0839               	movf	(_x+1)^(0+128),w
  7447  069C  1283               	bcf	3,5	;RP0=0, select bank0
  7448  069D  1303               	bcf	3,6	;RP1=0, select bank0
  7449  069E  00AE               	movwf	___ftadd@f2+1
  7450  069F  1683               	bsf	3,5	;RP0=1, select bank1
  7451  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  7452  06A1  083A               	movf	(_x+2)^(0+128),w
  7453  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  7454  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  7455  06A4  00AF               	movwf	___ftadd@f2+2
  7456  06A5  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7457  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  7458  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  7459  06AC  082A               	movf	?___ftadd,w
  7460  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  7461  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  7462  06AF  00B8               	movwf	_x^(0+128)
  7463  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  7464  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  7465  06B2  082B               	movf	?___ftadd+1,w
  7466  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  7467  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  7468  06B5  00B9               	movwf	(_x+1)^(0+128)
  7469  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  7470  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  7471  06B8  082C               	movf	?___ftadd+2,w
  7472  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  7473  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  7474  06BB  00BA               	movwf	(_x+2)^(0+128)
  7475  06BC  3001               	movlw	1
  7476  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7477  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7478  06BF  07E1               	addwf	Fuzzy@a_235,f
  7479  06C0  1803               	skipnc
  7480  06C1  0AE2               	incf	Fuzzy@a_235+1,f
  7481  06C2  3000               	movlw	0
  7482  06C3  07E2               	addwf	Fuzzy@a_235+1,f
  7483  06C4  0862               	movf	Fuzzy@a_235+1,w
  7484  06C5  3A80               	xorlw	128
  7485  06C6  00FF               	movwf	127
  7486  06C7  3080               	movlw	128
  7487  06C8  027F               	subwf	127,w
  7488  06C9  1D03               	skipz
  7489  06CA  2ECD               	goto	u356_25
  7490  06CB  3001               	movlw	1
  7491  06CC  0261               	subwf	Fuzzy@a_235,w
  7492  06CD                     u356_25:	
  7493  06CD  1C03               	skipc
  7494  06CE  2E18               	goto	i1l2852
  7495  06CF                     i1l2858:	
  7496                           
  7497                           ;main.c: 283: }
  7498                           ;main.c: 286: ativa_fan = sum/total_area;
  7499  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  7500  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  7501  06D1  0835               	movf	_total_area^(0+128),w
  7502  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  7503  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  7504  06D4  00B7               	movwf	___ftdiv@f2
  7505  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  7506  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  7507  06D7  0836               	movf	(_total_area+1)^(0+128),w
  7508  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  7509  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  7510  06DA  00B8               	movwf	___ftdiv@f2+1
  7511  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  7512  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  7513  06DD  0837               	movf	(_total_area+2)^(0+128),w
  7514  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  7515  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  7516  06E0  00B9               	movwf	___ftdiv@f2+2
  7517  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  7518  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  7519  06E3  082C               	movf	_sum^(0+128),w
  7520  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  7521  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  7522  06E6  00BA               	movwf	___ftdiv@f1
  7523  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  7524  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  7525  06E9  082D               	movf	(_sum+1)^(0+128),w
  7526  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  7527  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  7528  06EC  00BB               	movwf	___ftdiv@f1+1
  7529  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  7530  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  7531  06EF  082E               	movf	(_sum+2)^(0+128),w
  7532  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  7533  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  7534  06F2  00BC               	movwf	___ftdiv@f1+2
  7535  06F3  160A  118A  256E  120A  118A  	fcall	___ftdiv
  7536  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  7537  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  7538  06FA  0837               	movf	?___ftdiv,w
  7539  06FB  1683               	bsf	3,5	;RP0=1, select bank3
  7540  06FC  1703               	bsf	3,6	;RP1=1, select bank3
  7541  06FD  0090               	movwf	_ativa_fan^(0+384)
  7542  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  7543  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  7544  0700  0838               	movf	?___ftdiv+1,w
  7545  0701  1683               	bsf	3,5	;RP0=1, select bank3
  7546  0702  1703               	bsf	3,6	;RP1=1, select bank3
  7547  0703  0091               	movwf	(_ativa_fan+1)^(0+384)
  7548  0704  1283               	bcf	3,5	;RP0=0, select bank0
  7549  0705  1303               	bcf	3,6	;RP1=0, select bank0
  7550  0706  0839               	movf	?___ftdiv+2,w
  7551  0707  1683               	bsf	3,5	;RP0=1, select bank3
  7552  0708  1703               	bsf	3,6	;RP1=1, select bank3
  7553  0709  0092               	movwf	(_ativa_fan+2)^(0+384)
  7554                           
  7555                           ;main.c: 290: if (deltaV >0 && deltaV < 1020)
  7556  070A  1683               	bsf	3,5	;RP0=1, select bank1
  7557  070B  1303               	bcf	3,6	;RP1=0, select bank1
  7558  070C  0841               	movf	(_deltaV+1)^(0+128),w
  7559  070D  0440               	iorwf	_deltaV^(0+128),w
  7560  070E  1903               	skipnz
  7561  070F  0008               	return
  7562  0710  3003               	movlw	3
  7563  0711  0241               	subwf	(_deltaV+1)^(0+128),w
  7564  0712  30FC               	movlw	252
  7565  0713  1903               	skipnz
  7566  0714  0240               	subwf	_deltaV^(0+128),w
  7567  0715  1803               	skipnc
  7568  0716  0008               	return
  7569                           
  7570                           ;main.c: 291: {
  7571                           ;main.c: 292: PWM_DutyCycle2(pwm);
  7572  0717  0845               	movf	(_pwm+1)^(0+128),w
  7573  0718  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7574  0719  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7575  071A  0844               	movf	_pwm^(0+128),w
  7576  071B  01F0               	clrf	i1PWM_DutyCycle2@valor
  7577  071C  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7578  071D  160A  118A  209F   	fcall	i1_PWM_DutyCycle2
  7579  0720  0008               	return
  7580  0721                     __end_of_Fuzzy:	
  7581                           
  7582                           	psect	text30
  7583  109F                     __ptext30:	
  7584 ;; *************** function i1_PWM_DutyCycle2 *****************
  7585 ;; Defined at:
  7586 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  valor           2    0[COMMON] int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;		None               void
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7600 ;;      Params:         2       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0
  7602 ;;      Temps:          2       0       0       0       0
  7603 ;;      Totals:         4       0       0       0       0
  7604 ;;Total ram usage:        4 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_Fuzzy
  7610 ;;		_ISR
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           
  7615                           ;psect for function i1_PWM_DutyCycle2
  7616  109F                     i1_PWM_DutyCycle2:	
  7617                           
  7618                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7622  109F  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7623  10A0  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7624  10A1  0870               	movf	i1PWM_DutyCycle2@valor,w
  7625  10A2  00F2               	movwf	??i1_PWM_DutyCycle2
  7626  10A3  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7627  10A4  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7628  10A5  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7629  10A6  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7630  10A7  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7631  10A8  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7632  10A9  0872               	movf	??i1_PWM_DutyCycle2,w
  7633  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  7634  10AB  1303               	bcf	3,6	;RP1=0, select bank0
  7635  10AC  009B               	movwf	27	;volatile
  7636                           
  7637                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7638  10AD  0870               	movf	i1PWM_DutyCycle2@valor,w
  7639  10AE  00F2               	movwf	??i1_PWM_DutyCycle2
  7640  10AF  3003               	movlw	3
  7641  10B0                     u334_25:	
  7642  10B0  1003               	clrc
  7643  10B1  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7644  10B2  3EFF               	addlw	-1
  7645  10B3  1D03               	skipz
  7646  10B4  28B0               	goto	u334_25
  7647  10B5  1003               	clrc
  7648  10B6  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7649  10B7  380C               	iorlw	12
  7650  10B8  009D               	movwf	29	;volatile
  7651  10B9  0008               	return
  7652  10BA                     __end_ofi1_PWM_DutyCycle2:	
  7653                           
  7654                           	psect	text31
  7655  0856                     __ptext31:	
  7656 ;; *************** function _trimf *****************
  7657 ;; Defined at:
  7658 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  x               3   39[BANK0 ] float 
  7661 ;;  a               3   42[BANK0 ] float 
  7662 ;;  b               3   45[BANK0 ] float 
  7663 ;;  c               3   48[BANK0 ] float 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  ua              3   51[BANK0 ] float 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  3   39[BANK0 ] float 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, pclath, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7675 ;;      Params:         0      12       0       0       0
  7676 ;;      Locals:         0       3       0       0       0
  7677 ;;      Temps:          0       0       0       0       0
  7678 ;;      Totals:         0      15       0       0       0
  7679 ;;Total ram usage:       15 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    2
  7682 ;; This function calls:
  7683 ;;		___ftadd
  7684 ;;		___ftdiv
  7685 ;;		___ftge
  7686 ;;		___ftneg
  7687 ;; This function is called by:
  7688 ;;		_Fuzzy
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function _trimf
  7694  0856                     _trimf:	
  7695                           
  7696                           ;main.c: 70: float ua = 0;
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7700  0856  3000               	movlw	0
  7701  0857  1283               	bcf	3,5	;RP0=0, select bank0
  7702  0858  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0859  00D3               	movwf	trimf@ua
  7704  085A  3000               	movlw	0
  7705  085B  00D4               	movwf	trimf@ua+1
  7706  085C  3000               	movlw	0
  7707  085D  00D5               	movwf	trimf@ua+2
  7708                           
  7709                           ;main.c: 72: if (x <= a)
  7710  085E  084A               	movf	trimf@a,w
  7711  085F  00F0               	movwf	___ftge@ff1
  7712  0860  084B               	movf	trimf@a+1,w
  7713  0861  00F1               	movwf	___ftge@ff1+1
  7714  0862  084C               	movf	trimf@a+2,w
  7715  0863  00F2               	movwf	___ftge@ff1+2
  7716  0864  0847               	movf	trimf@x,w
  7717  0865  00F3               	movwf	___ftge@ff2
  7718  0866  0848               	movf	trimf@x+1,w
  7719  0867  00F4               	movwf	___ftge@ff2+1
  7720  0868  0849               	movf	trimf@x+2,w
  7721  0869  00F5               	movwf	___ftge@ff2+2
  7722  086A  160A  118A  2323  120A  158A  	fcall	___ftge
  7723  086F  1803               	btfsc	3,0
  7724  0870  2969               	goto	L12
  7725                           
  7726                           ;main.c: 74: else if ((a < x) && (x <= b))
  7727                           
  7728                           ;main.c: 73: ua = 0;
  7729  0871  1283               	bcf	3,5	;RP0=0, select bank0
  7730  0872  1303               	bcf	3,6	;RP1=0, select bank0
  7731  0873  084A               	movf	trimf@a,w
  7732  0874  00F0               	movwf	___ftge@ff1
  7733  0875  084B               	movf	trimf@a+1,w
  7734  0876  00F1               	movwf	___ftge@ff1+1
  7735  0877  084C               	movf	trimf@a+2,w
  7736  0878  00F2               	movwf	___ftge@ff1+2
  7737  0879  0847               	movf	trimf@x,w
  7738  087A  00F3               	movwf	___ftge@ff2
  7739  087B  0848               	movf	trimf@x+1,w
  7740  087C  00F4               	movwf	___ftge@ff2+1
  7741  087D  0849               	movf	trimf@x+2,w
  7742  087E  00F5               	movwf	___ftge@ff2+2
  7743  087F  160A  118A  2323  120A  158A  	fcall	___ftge
  7744  0884  1803               	btfsc	3,0
  7745  0885  28CF               	goto	i1l2440
  7746  0886  1283               	bcf	3,5	;RP0=0, select bank0
  7747  0887  1303               	bcf	3,6	;RP1=0, select bank0
  7748  0888  084D               	movf	trimf@b,w
  7749  0889  00F0               	movwf	___ftge@ff1
  7750  088A  084E               	movf	trimf@b+1,w
  7751  088B  00F1               	movwf	___ftge@ff1+1
  7752  088C  084F               	movf	trimf@b+2,w
  7753  088D  00F2               	movwf	___ftge@ff1+2
  7754  088E  0847               	movf	trimf@x,w
  7755  088F  00F3               	movwf	___ftge@ff2
  7756  0890  0848               	movf	trimf@x+1,w
  7757  0891  00F4               	movwf	___ftge@ff2+1
  7758  0892  0849               	movf	trimf@x+2,w
  7759  0893  00F5               	movwf	___ftge@ff2+2
  7760  0894  160A  118A  2323  120A  158A  	fcall	___ftge
  7761  0899  1C03               	btfss	3,0
  7762  089A  28CF               	goto	i1l2440
  7763                           
  7764                           ;main.c: 75: ua = ((x - a) / (b - a));
  7765  089B  1283               	bcf	3,5	;RP0=0, select bank0
  7766  089C  1303               	bcf	3,6	;RP1=0, select bank0
  7767  089D  084D               	movf	trimf@b,w
  7768  089E  00AA               	movwf	___ftadd@f1
  7769  089F  084E               	movf	trimf@b+1,w
  7770  08A0  00AB               	movwf	___ftadd@f1+1
  7771  08A1  084F               	movf	trimf@b+2,w
  7772  08A2  00AC               	movwf	___ftadd@f1+2
  7773  08A3  084A               	movf	trimf@a,w
  7774  08A4  00F0               	movwf	___ftneg@f1
  7775  08A5  084B               	movf	trimf@a+1,w
  7776  08A6  00F1               	movwf	___ftneg@f1+1
  7777  08A7  084C               	movf	trimf@a+2,w
  7778  08A8  00F2               	movwf	___ftneg@f1+2
  7779  08A9  160A  118A  2010  120A  158A  	fcall	___ftneg
  7780  08AE  0870               	movf	?___ftneg,w
  7781  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  7782  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  7783  08B1  00AD               	movwf	___ftadd@f2
  7784  08B2  0871               	movf	?___ftneg+1,w
  7785  08B3  00AE               	movwf	___ftadd@f2+1
  7786  08B4  0872               	movf	?___ftneg+2,w
  7787  08B5  00AF               	movwf	___ftadd@f2+2
  7788  08B6  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7789  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  7790  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  7791  08BD  082A               	movf	?___ftadd,w
  7792  08BE  00B7               	movwf	___ftdiv@f2
  7793  08BF  082B               	movf	?___ftadd+1,w
  7794  08C0  00B8               	movwf	___ftdiv@f2+1
  7795  08C1  082C               	movf	?___ftadd+2,w
  7796  08C2  00B9               	movwf	___ftdiv@f2+2
  7797  08C3  0847               	movf	trimf@x,w
  7798  08C4  00AA               	movwf	___ftadd@f1
  7799  08C5  0848               	movf	trimf@x+1,w
  7800  08C6  00AB               	movwf	___ftadd@f1+1
  7801  08C7  0849               	movf	trimf@x+2,w
  7802  08C8  00AC               	movwf	___ftadd@f1+2
  7803  08C9  084A               	movf	trimf@a,w
  7804  08CA  00F0               	movwf	___ftneg@f1
  7805  08CB  084B               	movf	trimf@a+1,w
  7806  08CC  00F1               	movwf	___ftneg@f1+1
  7807  08CD  084C               	movf	trimf@a+2,w
  7808  08CE  292C               	goto	L13
  7809  08CF                     i1l2440:	
  7810                           
  7811                           ;main.c: 76: else if ((b < x) && (x <= c))
  7812  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  7813  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  7814  08D1  084D               	movf	trimf@b,w
  7815  08D2  00F0               	movwf	___ftge@ff1
  7816  08D3  084E               	movf	trimf@b+1,w
  7817  08D4  00F1               	movwf	___ftge@ff1+1
  7818  08D5  084F               	movf	trimf@b+2,w
  7819  08D6  00F2               	movwf	___ftge@ff1+2
  7820  08D7  0847               	movf	trimf@x,w
  7821  08D8  00F3               	movwf	___ftge@ff2
  7822  08D9  0848               	movf	trimf@x+1,w
  7823  08DA  00F4               	movwf	___ftge@ff2+1
  7824  08DB  0849               	movf	trimf@x+2,w
  7825  08DC  00F5               	movwf	___ftge@ff2+2
  7826  08DD  160A  118A  2323  120A  158A  	fcall	___ftge
  7827  08E2  1803               	btfsc	3,0
  7828  08E3  2954               	goto	i1l2446
  7829  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  7830  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  7831  08E6  0850               	movf	trimf@c,w
  7832  08E7  00F0               	movwf	___ftge@ff1
  7833  08E8  0851               	movf	trimf@c+1,w
  7834  08E9  00F1               	movwf	___ftge@ff1+1
  7835  08EA  0852               	movf	trimf@c+2,w
  7836  08EB  00F2               	movwf	___ftge@ff1+2
  7837  08EC  0847               	movf	trimf@x,w
  7838  08ED  00F3               	movwf	___ftge@ff2
  7839  08EE  0848               	movf	trimf@x+1,w
  7840  08EF  00F4               	movwf	___ftge@ff2+1
  7841  08F0  0849               	movf	trimf@x+2,w
  7842  08F1  00F5               	movwf	___ftge@ff2+2
  7843  08F2  160A  118A  2323  120A  158A  	fcall	___ftge
  7844  08F7  1C03               	btfss	3,0
  7845  08F8  2954               	goto	i1l2446
  7846                           
  7847                           ;main.c: 77: ua = ((x - c) / (b - c));
  7848  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  7849  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  7850  08FB  084D               	movf	trimf@b,w
  7851  08FC  00AA               	movwf	___ftadd@f1
  7852  08FD  084E               	movf	trimf@b+1,w
  7853  08FE  00AB               	movwf	___ftadd@f1+1
  7854  08FF  084F               	movf	trimf@b+2,w
  7855  0900  00AC               	movwf	___ftadd@f1+2
  7856  0901  0850               	movf	trimf@c,w
  7857  0902  00F0               	movwf	___ftneg@f1
  7858  0903  0851               	movf	trimf@c+1,w
  7859  0904  00F1               	movwf	___ftneg@f1+1
  7860  0905  0852               	movf	trimf@c+2,w
  7861  0906  00F2               	movwf	___ftneg@f1+2
  7862  0907  160A  118A  2010  120A  158A  	fcall	___ftneg
  7863  090C  0870               	movf	?___ftneg,w
  7864  090D  1283               	bcf	3,5	;RP0=0, select bank0
  7865  090E  1303               	bcf	3,6	;RP1=0, select bank0
  7866  090F  00AD               	movwf	___ftadd@f2
  7867  0910  0871               	movf	?___ftneg+1,w
  7868  0911  00AE               	movwf	___ftadd@f2+1
  7869  0912  0872               	movf	?___ftneg+2,w
  7870  0913  00AF               	movwf	___ftadd@f2+2
  7871  0914  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7872  0919  1283               	bcf	3,5	;RP0=0, select bank0
  7873  091A  1303               	bcf	3,6	;RP1=0, select bank0
  7874  091B  082A               	movf	?___ftadd,w
  7875  091C  00B7               	movwf	___ftdiv@f2
  7876  091D  082B               	movf	?___ftadd+1,w
  7877  091E  00B8               	movwf	___ftdiv@f2+1
  7878  091F  082C               	movf	?___ftadd+2,w
  7879  0920  00B9               	movwf	___ftdiv@f2+2
  7880  0921  0847               	movf	trimf@x,w
  7881  0922  00AA               	movwf	___ftadd@f1
  7882  0923  0848               	movf	trimf@x+1,w
  7883  0924  00AB               	movwf	___ftadd@f1+1
  7884  0925  0849               	movf	trimf@x+2,w
  7885  0926  00AC               	movwf	___ftadd@f1+2
  7886  0927  0850               	movf	trimf@c,w
  7887  0928  00F0               	movwf	___ftneg@f1
  7888  0929  0851               	movf	trimf@c+1,w
  7889  092A  00F1               	movwf	___ftneg@f1+1
  7890  092B  0852               	movf	trimf@c+2,w
  7891  092C                     L13:	
  7892  092C  00F2               	movwf	___ftneg@f1+2
  7893  092D  160A  118A  2010  120A  158A  	fcall	___ftneg
  7894  0932  0870               	movf	?___ftneg,w
  7895  0933  1283               	bcf	3,5	;RP0=0, select bank0
  7896  0934  1303               	bcf	3,6	;RP1=0, select bank0
  7897  0935  00AD               	movwf	___ftadd@f2
  7898  0936  0871               	movf	?___ftneg+1,w
  7899  0937  00AE               	movwf	___ftadd@f2+1
  7900  0938  0872               	movf	?___ftneg+2,w
  7901  0939  00AF               	movwf	___ftadd@f2+2
  7902  093A  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7903  093F  1283               	bcf	3,5	;RP0=0, select bank0
  7904  0940  1303               	bcf	3,6	;RP1=0, select bank0
  7905  0941  082A               	movf	?___ftadd,w
  7906  0942  00BA               	movwf	___ftdiv@f1
  7907  0943  082B               	movf	?___ftadd+1,w
  7908  0944  00BB               	movwf	___ftdiv@f1+1
  7909  0945  082C               	movf	?___ftadd+2,w
  7910  0946  00BC               	movwf	___ftdiv@f1+2
  7911  0947  160A  118A  256E  120A  158A  	fcall	___ftdiv
  7912  094C  1283               	bcf	3,5	;RP0=0, select bank0
  7913  094D  1303               	bcf	3,6	;RP1=0, select bank0
  7914  094E  0837               	movf	?___ftdiv,w
  7915  094F  00D3               	movwf	trimf@ua
  7916  0950  0838               	movf	?___ftdiv+1,w
  7917  0951  00D4               	movwf	trimf@ua+1
  7918  0952  0839               	movf	?___ftdiv+2,w
  7919  0953  2970               	goto	L10
  7920  0954                     i1l2446:	
  7921                           
  7922                           ;main.c: 78: else if (x > c)
  7923  0954  1283               	bcf	3,5	;RP0=0, select bank0
  7924  0955  1303               	bcf	3,6	;RP1=0, select bank0
  7925  0956  0850               	movf	trimf@c,w
  7926  0957  00F0               	movwf	___ftge@ff1
  7927  0958  0851               	movf	trimf@c+1,w
  7928  0959  00F1               	movwf	___ftge@ff1+1
  7929  095A  0852               	movf	trimf@c+2,w
  7930  095B  00F2               	movwf	___ftge@ff1+2
  7931  095C  0847               	movf	trimf@x,w
  7932  095D  00F3               	movwf	___ftge@ff2
  7933  095E  0848               	movf	trimf@x+1,w
  7934  095F  00F4               	movwf	___ftge@ff2+1
  7935  0960  0849               	movf	trimf@x+2,w
  7936  0961  00F5               	movwf	___ftge@ff2+2
  7937  0962  160A  118A  2323  120A  158A  	fcall	___ftge
  7938  0967  1803               	btfsc	3,0
  7939  0968  2971               	goto	i1l118
  7940  0969                     L12:	
  7941                           
  7942                           ;main.c: 79: ua = 0;
  7943  0969  3000               	movlw	0
  7944  096A  1283               	bcf	3,5	;RP0=0, select bank0
  7945  096B  1303               	bcf	3,6	;RP1=0, select bank0
  7946  096C  00D3               	movwf	trimf@ua
  7947  096D  3000               	movlw	0
  7948  096E  00D4               	movwf	trimf@ua+1
  7949  096F  3000               	movlw	0
  7950  0970                     L10:	
  7951  0970  00D5               	movwf	trimf@ua+2
  7952  0971                     i1l118:	
  7953                           
  7954                           ;main.c: 81: return(ua);
  7955  0971  1283               	bcf	3,5	;RP0=0, select bank0
  7956  0972  1303               	bcf	3,6	;RP1=0, select bank0
  7957  0973  0853               	movf	trimf@ua,w
  7958  0974  00C7               	movwf	?_trimf
  7959  0975  0854               	movf	trimf@ua+1,w
  7960  0976  00C8               	movwf	?_trimf+1
  7961  0977  0855               	movf	trimf@ua+2,w
  7962  0978  00C9               	movwf	?_trimf+2
  7963  0979  0008               	return
  7964  097A                     __end_of_trimf:	
  7965                           
  7966                           	psect	text32
  7967  0AC3                     __ptext32:	
  7968 ;; *************** function _trapmf *****************
  7969 ;; Defined at:
  7970 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;  x               3   39[BANK0 ] float 
  7973 ;;  a               3   42[BANK0 ] float 
  7974 ;;  b               3   45[BANK0 ] float 
  7975 ;;  c               3   48[BANK0 ] float 
  7976 ;;  d               3   51[BANK0 ] float 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  ua              3   54[BANK0 ] float 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  3   39[BANK0 ] float 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0, pclath, cstack
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7988 ;;      Params:         0      15       0       0       0
  7989 ;;      Locals:         0       3       0       0       0
  7990 ;;      Temps:          0       0       0       0       0
  7991 ;;      Totals:         0      18       0       0       0
  7992 ;;Total ram usage:       18 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    2
  7995 ;; This function calls:
  7996 ;;		___ftadd
  7997 ;;		___ftdiv
  7998 ;;		___ftge
  7999 ;;		___ftneg
  8000 ;; This function is called by:
  8001 ;;		_Fuzzy
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           
  8006                           ;psect for function _trapmf
  8007  0AC3                     _trapmf:	
  8008                           
  8009                           ;main.c: 89: float ua = 0;
  8010                           
  8011                           ;incstack = 0
  8012                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  8013  0AC3  3000               	movlw	0
  8014  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  8015  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  8016  0AC6  00D6               	movwf	trapmf@ua
  8017  0AC7  3000               	movlw	0
  8018  0AC8  00D7               	movwf	trapmf@ua+1
  8019  0AC9  3000               	movlw	0
  8020  0ACA  00D8               	movwf	trapmf@ua+2
  8021                           
  8022                           ;main.c: 91: if (x <= a)
  8023  0ACB  084A               	movf	trapmf@a,w
  8024  0ACC  00F0               	movwf	___ftge@ff1
  8025  0ACD  084B               	movf	trapmf@a+1,w
  8026  0ACE  00F1               	movwf	___ftge@ff1+1
  8027  0ACF  084C               	movf	trapmf@a+2,w
  8028  0AD0  00F2               	movwf	___ftge@ff1+2
  8029  0AD1  0847               	movf	trapmf@x,w
  8030  0AD2  00F3               	movwf	___ftge@ff2
  8031  0AD3  0848               	movf	trapmf@x+1,w
  8032  0AD4  00F4               	movwf	___ftge@ff2+1
  8033  0AD5  0849               	movf	trapmf@x+2,w
  8034  0AD6  00F5               	movwf	___ftge@ff2+2
  8035  0AD7  160A  118A  2323  120A  158A  	fcall	___ftge
  8036  0ADC  1803               	btfsc	3,0
  8037  0ADD  2C08               	goto	L18
  8038                           
  8039                           ;main.c: 93: else if ((a < x) && (x <= b))
  8040                           
  8041                           ;main.c: 92: ua = 0;
  8042  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  8043  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  8044  0AE0  084A               	movf	trapmf@a,w
  8045  0AE1  00F0               	movwf	___ftge@ff1
  8046  0AE2  084B               	movf	trapmf@a+1,w
  8047  0AE3  00F1               	movwf	___ftge@ff1+1
  8048  0AE4  084C               	movf	trapmf@a+2,w
  8049  0AE5  00F2               	movwf	___ftge@ff1+2
  8050  0AE6  0847               	movf	trapmf@x,w
  8051  0AE7  00F3               	movwf	___ftge@ff2
  8052  0AE8  0848               	movf	trapmf@x+1,w
  8053  0AE9  00F4               	movwf	___ftge@ff2+1
  8054  0AEA  0849               	movf	trapmf@x+2,w
  8055  0AEB  00F5               	movwf	___ftge@ff2+2
  8056  0AEC  160A  118A  2323  120A  158A  	fcall	___ftge
  8057  0AF1  1803               	btfsc	3,0
  8058  0AF2  2B3C               	goto	i1l2464
  8059  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  8060  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  8061  0AF5  084D               	movf	trapmf@b,w
  8062  0AF6  00F0               	movwf	___ftge@ff1
  8063  0AF7  084E               	movf	trapmf@b+1,w
  8064  0AF8  00F1               	movwf	___ftge@ff1+1
  8065  0AF9  084F               	movf	trapmf@b+2,w
  8066  0AFA  00F2               	movwf	___ftge@ff1+2
  8067  0AFB  0847               	movf	trapmf@x,w
  8068  0AFC  00F3               	movwf	___ftge@ff2
  8069  0AFD  0848               	movf	trapmf@x+1,w
  8070  0AFE  00F4               	movwf	___ftge@ff2+1
  8071  0AFF  0849               	movf	trapmf@x+2,w
  8072  0B00  00F5               	movwf	___ftge@ff2+2
  8073  0B01  160A  118A  2323  120A  158A  	fcall	___ftge
  8074  0B06  1C03               	btfss	3,0
  8075  0B07  2B3C               	goto	i1l2464
  8076                           
  8077                           ;main.c: 94: ua = ((x - a) / (b - a));
  8078  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  8079  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  8080  0B0A  084D               	movf	trapmf@b,w
  8081  0B0B  00AA               	movwf	___ftadd@f1
  8082  0B0C  084E               	movf	trapmf@b+1,w
  8083  0B0D  00AB               	movwf	___ftadd@f1+1
  8084  0B0E  084F               	movf	trapmf@b+2,w
  8085  0B0F  00AC               	movwf	___ftadd@f1+2
  8086  0B10  084A               	movf	trapmf@a,w
  8087  0B11  00F0               	movwf	___ftneg@f1
  8088  0B12  084B               	movf	trapmf@a+1,w
  8089  0B13  00F1               	movwf	___ftneg@f1+1
  8090  0B14  084C               	movf	trapmf@a+2,w
  8091  0B15  00F2               	movwf	___ftneg@f1+2
  8092  0B16  160A  118A  2010  120A  158A  	fcall	___ftneg
  8093  0B1B  0870               	movf	?___ftneg,w
  8094  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  8095  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  8096  0B1E  00AD               	movwf	___ftadd@f2
  8097  0B1F  0871               	movf	?___ftneg+1,w
  8098  0B20  00AE               	movwf	___ftadd@f2+1
  8099  0B21  0872               	movf	?___ftneg+2,w
  8100  0B22  00AF               	movwf	___ftadd@f2+2
  8101  0B23  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8102  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  8103  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  8104  0B2A  082A               	movf	?___ftadd,w
  8105  0B2B  00B7               	movwf	___ftdiv@f2
  8106  0B2C  082B               	movf	?___ftadd+1,w
  8107  0B2D  00B8               	movwf	___ftdiv@f2+1
  8108  0B2E  082C               	movf	?___ftadd+2,w
  8109  0B2F  00B9               	movwf	___ftdiv@f2+2
  8110  0B30  0847               	movf	trapmf@x,w
  8111  0B31  00AA               	movwf	___ftadd@f1
  8112  0B32  0848               	movf	trapmf@x+1,w
  8113  0B33  00AB               	movwf	___ftadd@f1+1
  8114  0B34  0849               	movf	trapmf@x+2,w
  8115  0B35  00AC               	movwf	___ftadd@f1+2
  8116  0B36  084A               	movf	trapmf@a,w
  8117  0B37  00F0               	movwf	___ftneg@f1
  8118  0B38  084B               	movf	trapmf@a+1,w
  8119  0B39  00F1               	movwf	___ftneg@f1+1
  8120  0B3A  084C               	movf	trapmf@a+2,w
  8121  0B3B  2BCB               	goto	L20
  8122  0B3C                     i1l2464:	
  8123                           
  8124                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8125  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  8126  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  8127  0B3E  0847               	movf	trapmf@x,w
  8128  0B3F  00F0               	movwf	___ftge@ff1
  8129  0B40  0848               	movf	trapmf@x+1,w
  8130  0B41  00F1               	movwf	___ftge@ff1+1
  8131  0B42  0849               	movf	trapmf@x+2,w
  8132  0B43  00F2               	movwf	___ftge@ff1+2
  8133  0B44  084D               	movf	trapmf@b,w
  8134  0B45  00F3               	movwf	___ftge@ff2
  8135  0B46  084E               	movf	trapmf@b+1,w
  8136  0B47  00F4               	movwf	___ftge@ff2+1
  8137  0B48  084F               	movf	trapmf@b+2,w
  8138  0B49  00F5               	movwf	___ftge@ff2+2
  8139  0B4A  160A  118A  2323  120A  158A  	fcall	___ftge
  8140  0B4F  1C03               	btfss	3,0
  8141  0B50  2B6E               	goto	i1l2470
  8142  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  8143  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  8144  0B53  0850               	movf	trapmf@c,w
  8145  0B54  00F0               	movwf	___ftge@ff1
  8146  0B55  0851               	movf	trapmf@c+1,w
  8147  0B56  00F1               	movwf	___ftge@ff1+1
  8148  0B57  0852               	movf	trapmf@c+2,w
  8149  0B58  00F2               	movwf	___ftge@ff1+2
  8150  0B59  0847               	movf	trapmf@x,w
  8151  0B5A  00F3               	movwf	___ftge@ff2
  8152  0B5B  0848               	movf	trapmf@x+1,w
  8153  0B5C  00F4               	movwf	___ftge@ff2+1
  8154  0B5D  0849               	movf	trapmf@x+2,w
  8155  0B5E  00F5               	movwf	___ftge@ff2+2
  8156  0B5F  160A  118A  2323  120A  158A  	fcall	___ftge
  8157  0B64  1C03               	btfss	3,0
  8158  0B65  2B6E               	goto	i1l2470
  8159                           
  8160                           ;main.c: 96: ua = 1;
  8161  0B66  3000               	movlw	0
  8162  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  8163  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  8164  0B69  00D6               	movwf	trapmf@ua
  8165  0B6A  3080               	movlw	128
  8166  0B6B  00D7               	movwf	trapmf@ua+1
  8167  0B6C  303F               	movlw	63
  8168  0B6D  2C0F               	goto	L17
  8169  0B6E                     i1l2470:	
  8170                           
  8171                           ;main.c: 97: else if ((c < x) && (x <= d))
  8172  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  8173  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0B70  0850               	movf	trapmf@c,w
  8175  0B71  00F0               	movwf	___ftge@ff1
  8176  0B72  0851               	movf	trapmf@c+1,w
  8177  0B73  00F1               	movwf	___ftge@ff1+1
  8178  0B74  0852               	movf	trapmf@c+2,w
  8179  0B75  00F2               	movwf	___ftge@ff1+2
  8180  0B76  0847               	movf	trapmf@x,w
  8181  0B77  00F3               	movwf	___ftge@ff2
  8182  0B78  0848               	movf	trapmf@x+1,w
  8183  0B79  00F4               	movwf	___ftge@ff2+1
  8184  0B7A  0849               	movf	trapmf@x+2,w
  8185  0B7B  00F5               	movwf	___ftge@ff2+2
  8186  0B7C  160A  118A  2323  120A  158A  	fcall	___ftge
  8187  0B81  1803               	btfsc	3,0
  8188  0B82  2BF3               	goto	i1l2476
  8189  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  8190  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  8191  0B85  0853               	movf	trapmf@d,w
  8192  0B86  00F0               	movwf	___ftge@ff1
  8193  0B87  0854               	movf	trapmf@d+1,w
  8194  0B88  00F1               	movwf	___ftge@ff1+1
  8195  0B89  0855               	movf	trapmf@d+2,w
  8196  0B8A  00F2               	movwf	___ftge@ff1+2
  8197  0B8B  0847               	movf	trapmf@x,w
  8198  0B8C  00F3               	movwf	___ftge@ff2
  8199  0B8D  0848               	movf	trapmf@x+1,w
  8200  0B8E  00F4               	movwf	___ftge@ff2+1
  8201  0B8F  0849               	movf	trapmf@x+2,w
  8202  0B90  00F5               	movwf	___ftge@ff2+2
  8203  0B91  160A  118A  2323  120A  158A  	fcall	___ftge
  8204  0B96  1C03               	btfss	3,0
  8205  0B97  2BF3               	goto	i1l2476
  8206                           
  8207                           ;main.c: 98: ua = ((d - x) / (d - c));
  8208  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  8209  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  8210  0B9A  0853               	movf	trapmf@d,w
  8211  0B9B  00AA               	movwf	___ftadd@f1
  8212  0B9C  0854               	movf	trapmf@d+1,w
  8213  0B9D  00AB               	movwf	___ftadd@f1+1
  8214  0B9E  0855               	movf	trapmf@d+2,w
  8215  0B9F  00AC               	movwf	___ftadd@f1+2
  8216  0BA0  0850               	movf	trapmf@c,w
  8217  0BA1  00F0               	movwf	___ftneg@f1
  8218  0BA2  0851               	movf	trapmf@c+1,w
  8219  0BA3  00F1               	movwf	___ftneg@f1+1
  8220  0BA4  0852               	movf	trapmf@c+2,w
  8221  0BA5  00F2               	movwf	___ftneg@f1+2
  8222  0BA6  160A  118A  2010  120A  158A  	fcall	___ftneg
  8223  0BAB  0870               	movf	?___ftneg,w
  8224  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  8225  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  8226  0BAE  00AD               	movwf	___ftadd@f2
  8227  0BAF  0871               	movf	?___ftneg+1,w
  8228  0BB0  00AE               	movwf	___ftadd@f2+1
  8229  0BB1  0872               	movf	?___ftneg+2,w
  8230  0BB2  00AF               	movwf	___ftadd@f2+2
  8231  0BB3  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8232  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  8233  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  8234  0BBA  082A               	movf	?___ftadd,w
  8235  0BBB  00B7               	movwf	___ftdiv@f2
  8236  0BBC  082B               	movf	?___ftadd+1,w
  8237  0BBD  00B8               	movwf	___ftdiv@f2+1
  8238  0BBE  082C               	movf	?___ftadd+2,w
  8239  0BBF  00B9               	movwf	___ftdiv@f2+2
  8240  0BC0  0853               	movf	trapmf@d,w
  8241  0BC1  00AA               	movwf	___ftadd@f1
  8242  0BC2  0854               	movf	trapmf@d+1,w
  8243  0BC3  00AB               	movwf	___ftadd@f1+1
  8244  0BC4  0855               	movf	trapmf@d+2,w
  8245  0BC5  00AC               	movwf	___ftadd@f1+2
  8246  0BC6  0847               	movf	trapmf@x,w
  8247  0BC7  00F0               	movwf	___ftneg@f1
  8248  0BC8  0848               	movf	trapmf@x+1,w
  8249  0BC9  00F1               	movwf	___ftneg@f1+1
  8250  0BCA  0849               	movf	trapmf@x+2,w
  8251  0BCB                     L20:	
  8252  0BCB  00F2               	movwf	___ftneg@f1+2
  8253  0BCC  160A  118A  2010  120A  158A  	fcall	___ftneg
  8254  0BD1  0870               	movf	?___ftneg,w
  8255  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  8256  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  8257  0BD4  00AD               	movwf	___ftadd@f2
  8258  0BD5  0871               	movf	?___ftneg+1,w
  8259  0BD6  00AE               	movwf	___ftadd@f2+1
  8260  0BD7  0872               	movf	?___ftneg+2,w
  8261  0BD8  00AF               	movwf	___ftadd@f2+2
  8262  0BD9  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8263  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8264  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8265  0BE0  082A               	movf	?___ftadd,w
  8266  0BE1  00BA               	movwf	___ftdiv@f1
  8267  0BE2  082B               	movf	?___ftadd+1,w
  8268  0BE3  00BB               	movwf	___ftdiv@f1+1
  8269  0BE4  082C               	movf	?___ftadd+2,w
  8270  0BE5  00BC               	movwf	___ftdiv@f1+2
  8271  0BE6  160A  118A  256E  120A  158A  	fcall	___ftdiv
  8272  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  8273  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  8274  0BED  0837               	movf	?___ftdiv,w
  8275  0BEE  00D6               	movwf	trapmf@ua
  8276  0BEF  0838               	movf	?___ftdiv+1,w
  8277  0BF0  00D7               	movwf	trapmf@ua+1
  8278  0BF1  0839               	movf	?___ftdiv+2,w
  8279  0BF2  2C0F               	goto	L17
  8280  0BF3                     i1l2476:	
  8281                           
  8282                           ;main.c: 99: else if (x > d)
  8283  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  8284  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  8285  0BF5  0853               	movf	trapmf@d,w
  8286  0BF6  00F0               	movwf	___ftge@ff1
  8287  0BF7  0854               	movf	trapmf@d+1,w
  8288  0BF8  00F1               	movwf	___ftge@ff1+1
  8289  0BF9  0855               	movf	trapmf@d+2,w
  8290  0BFA  00F2               	movwf	___ftge@ff1+2
  8291  0BFB  0847               	movf	trapmf@x,w
  8292  0BFC  00F3               	movwf	___ftge@ff2
  8293  0BFD  0848               	movf	trapmf@x+1,w
  8294  0BFE  00F4               	movwf	___ftge@ff2+1
  8295  0BFF  0849               	movf	trapmf@x+2,w
  8296  0C00  00F5               	movwf	___ftge@ff2+2
  8297  0C01  160A  118A  2323  120A  158A  	fcall	___ftge
  8298  0C06  1803               	btfsc	3,0
  8299  0C07  2C10               	goto	i1l128
  8300  0C08                     L18:	
  8301                           
  8302                           ;main.c: 100: ua = 0;
  8303  0C08  3000               	movlw	0
  8304  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  8305  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  8306  0C0B  00D6               	movwf	trapmf@ua
  8307  0C0C  3000               	movlw	0
  8308  0C0D  00D7               	movwf	trapmf@ua+1
  8309  0C0E  3000               	movlw	0
  8310  0C0F                     L17:	
  8311  0C0F  00D8               	movwf	trapmf@ua+2
  8312  0C10                     i1l128:	
  8313                           
  8314                           ;main.c: 102: return(ua);
  8315  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  8316  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  8317  0C12  0856               	movf	trapmf@ua,w
  8318  0C13  00C7               	movwf	?_trapmf
  8319  0C14  0857               	movf	trapmf@ua+1,w
  8320  0C15  00C8               	movwf	?_trapmf+1
  8321  0C16  0858               	movf	trapmf@ua+2,w
  8322  0C17  00C9               	movwf	?_trapmf+2
  8323  0C18  0008               	return
  8324  0C19                     __end_of_trapmf:	
  8325                           
  8326                           	psect	text33
  8327  1010                     __ptext33:	
  8328 ;; *************** function ___ftneg *****************
  8329 ;; Defined at:
  8330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  f1              3    0[COMMON] float 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  3    0[COMMON] float 
  8337 ;; Registers used:
  8338 ;;		wreg
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8344 ;;      Params:         3       0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0
  8347 ;;      Totals:         3       0       0       0       0
  8348 ;;Total ram usage:        3 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_trimf
  8354 ;;		_trapmf
  8355 ;;		_Fuzzy
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function ___ftneg
  8361  1010                     ___ftneg:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in ___ftneg: [wreg]
  8365  1010  0872               	movf	___ftneg@f1+2,w
  8366  1011  0471               	iorwf	___ftneg@f1+1,w
  8367  1012  0470               	iorwf	___ftneg@f1,w
  8368  1013  1903               	skipnz
  8369  1014  0008               	return
  8370  1015  3080               	movlw	128
  8371  1016  06F2               	xorwf	___ftneg@f1+2,f
  8372  1017  0008               	return
  8373  1018                     __end_of___ftneg:	
  8374                           
  8375                           	psect	text34
  8376  156E                     __ptext34:	
  8377 ;; *************** function ___ftdiv *****************
  8378 ;; Defined at:
  8379 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  f2              3   23[BANK0 ] float 
  8382 ;;  f1              3   26[BANK0 ] float 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  f3              3   34[BANK0 ] float 
  8385 ;;  sign            1   38[BANK0 ] unsigned char 
  8386 ;;  exp             1   37[BANK0 ] unsigned char 
  8387 ;;  cntr            1   33[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  3   23[BANK0 ] float 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8397 ;;      Params:         0       6       0       0       0
  8398 ;;      Locals:         0       6       0       0       0
  8399 ;;      Temps:          0       4       0       0       0
  8400 ;;      Totals:         0      16       0       0       0
  8401 ;;Total ram usage:       16 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    1
  8404 ;; This function calls:
  8405 ;;		___ftpack
  8406 ;; This function is called by:
  8407 ;;		_trimf
  8408 ;;		_trapmf
  8409 ;;		_Fuzzy
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function ___ftdiv
  8415  156E                     ___ftdiv:	
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8419  156E  1283               	bcf	3,5	;RP0=0, select bank0
  8420  156F  1303               	bcf	3,6	;RP1=0, select bank0
  8421  1570  083A               	movf	___ftdiv@f1,w
  8422  1571  00BD               	movwf	??___ftdiv
  8423  1572  083B               	movf	___ftdiv@f1+1,w
  8424  1573  00BE               	movwf	??___ftdiv+1
  8425  1574  083C               	movf	___ftdiv@f1+2,w
  8426  1575  00BF               	movwf	??___ftdiv+2
  8427  1576  1003               	clrc
  8428  1577  0D3E               	rlf	??___ftdiv+1,w
  8429  1578  0D3F               	rlf	??___ftdiv+2,w
  8430  1579  00C0               	movwf	??___ftdiv+3
  8431  157A  0840               	movf	??___ftdiv+3,w
  8432  157B  00C5               	movwf	___ftdiv@exp
  8433  157C  08C5               	movf	___ftdiv@exp,f
  8434  157D  1D03               	skipz
  8435  157E  2D86               	goto	i1l2360
  8436  157F  3000               	movlw	0
  8437  1580  00B7               	movwf	?___ftdiv
  8438  1581  3000               	movlw	0
  8439  1582  00B8               	movwf	?___ftdiv+1
  8440  1583  3000               	movlw	0
  8441  1584  00B9               	movwf	?___ftdiv+2
  8442  1585  0008               	return
  8443  1586                     i1l2360:	
  8444  1586  0837               	movf	___ftdiv@f2,w
  8445  1587  00BD               	movwf	??___ftdiv
  8446  1588  0838               	movf	___ftdiv@f2+1,w
  8447  1589  00BE               	movwf	??___ftdiv+1
  8448  158A  0839               	movf	___ftdiv@f2+2,w
  8449  158B  00BF               	movwf	??___ftdiv+2
  8450  158C  1003               	clrc
  8451  158D  0D3E               	rlf	??___ftdiv+1,w
  8452  158E  0D3F               	rlf	??___ftdiv+2,w
  8453  158F  00C0               	movwf	??___ftdiv+3
  8454  1590  0840               	movf	??___ftdiv+3,w
  8455  1591  00C6               	movwf	___ftdiv@sign
  8456  1592  08C6               	movf	___ftdiv@sign,f
  8457  1593  1D03               	skipz
  8458  1594  2D9C               	goto	i1l2366
  8459  1595  3000               	movlw	0
  8460  1596  00B7               	movwf	?___ftdiv
  8461  1597  3000               	movlw	0
  8462  1598  00B8               	movwf	?___ftdiv+1
  8463  1599  3000               	movlw	0
  8464  159A  00B9               	movwf	?___ftdiv+2
  8465  159B  0008               	return
  8466  159C                     i1l2366:	
  8467  159C  3000               	movlw	0
  8468  159D  00C2               	movwf	___ftdiv@f3
  8469  159E  3000               	movlw	0
  8470  159F  00C3               	movwf	___ftdiv@f3+1
  8471  15A0  3000               	movlw	0
  8472  15A1  00C4               	movwf	___ftdiv@f3+2
  8473  15A2  3089               	movlw	137
  8474  15A3  0746               	addwf	___ftdiv@sign,w
  8475  15A4  00BD               	movwf	??___ftdiv
  8476  15A5  083D               	movf	??___ftdiv,w
  8477  15A6  02C5               	subwf	___ftdiv@exp,f
  8478  15A7  083A               	movf	___ftdiv@f1,w
  8479  15A8  00BD               	movwf	??___ftdiv
  8480  15A9  083B               	movf	___ftdiv@f1+1,w
  8481  15AA  00BE               	movwf	??___ftdiv+1
  8482  15AB  083C               	movf	___ftdiv@f1+2,w
  8483  15AC  00BF               	movwf	??___ftdiv+2
  8484  15AD  3010               	movlw	16
  8485  15AE                     u251_25:	
  8486  15AE  1003               	clrc
  8487  15AF  0CBF               	rrf	??___ftdiv+2,f
  8488  15B0  0CBE               	rrf	??___ftdiv+1,f
  8489  15B1  0CBD               	rrf	??___ftdiv,f
  8490  15B2  3EFF               	addlw	-1
  8491  15B3  1D03               	skipz
  8492  15B4  2DAE               	goto	u251_25
  8493  15B5  083D               	movf	??___ftdiv,w
  8494  15B6  00C0               	movwf	??___ftdiv+3
  8495  15B7  0840               	movf	??___ftdiv+3,w
  8496  15B8  00C6               	movwf	___ftdiv@sign
  8497  15B9  0837               	movf	___ftdiv@f2,w
  8498  15BA  00BD               	movwf	??___ftdiv
  8499  15BB  0838               	movf	___ftdiv@f2+1,w
  8500  15BC  00BE               	movwf	??___ftdiv+1
  8501  15BD  0839               	movf	___ftdiv@f2+2,w
  8502  15BE  00BF               	movwf	??___ftdiv+2
  8503  15BF  3010               	movlw	16
  8504  15C0                     u252_25:	
  8505  15C0  1003               	clrc
  8506  15C1  0CBF               	rrf	??___ftdiv+2,f
  8507  15C2  0CBE               	rrf	??___ftdiv+1,f
  8508  15C3  0CBD               	rrf	??___ftdiv,f
  8509  15C4  3EFF               	addlw	-1
  8510  15C5  1D03               	skipz
  8511  15C6  2DC0               	goto	u252_25
  8512  15C7  083D               	movf	??___ftdiv,w
  8513  15C8  00C0               	movwf	??___ftdiv+3
  8514  15C9  0840               	movf	??___ftdiv+3,w
  8515  15CA  06C6               	xorwf	___ftdiv@sign,f
  8516  15CB  3080               	movlw	128
  8517  15CC  00BD               	movwf	??___ftdiv
  8518  15CD  083D               	movf	??___ftdiv,w
  8519  15CE  05C6               	andwf	___ftdiv@sign,f
  8520  15CF  17BB               	bsf	___ftdiv@f1+1,7
  8521  15D0  30FF               	movlw	255
  8522  15D1  05BA               	andwf	___ftdiv@f1,f
  8523  15D2  30FF               	movlw	255
  8524  15D3  05BB               	andwf	___ftdiv@f1+1,f
  8525  15D4  3000               	movlw	0
  8526  15D5  05BC               	andwf	___ftdiv@f1+2,f
  8527  15D6  17B8               	bsf	___ftdiv@f2+1,7
  8528  15D7  30FF               	movlw	255
  8529  15D8  05B7               	andwf	___ftdiv@f2,f
  8530  15D9  30FF               	movlw	255
  8531  15DA  05B8               	andwf	___ftdiv@f2+1,f
  8532  15DB  3000               	movlw	0
  8533  15DC  05B9               	andwf	___ftdiv@f2+2,f
  8534  15DD  3018               	movlw	24
  8535  15DE  00BD               	movwf	??___ftdiv
  8536  15DF  083D               	movf	??___ftdiv,w
  8537  15E0  00C1               	movwf	___ftdiv@cntr
  8538  15E1                     i1l2380:	
  8539  15E1  3001               	movlw	1
  8540  15E2                     u253_25:	
  8541  15E2  1003               	clrc
  8542  15E3  0DC2               	rlf	___ftdiv@f3,f
  8543  15E4  0DC3               	rlf	___ftdiv@f3+1,f
  8544  15E5  0DC4               	rlf	___ftdiv@f3+2,f
  8545  15E6  3EFF               	addlw	-1
  8546  15E7  1D03               	skipz
  8547  15E8  2DE2               	goto	u253_25
  8548  15E9  0839               	movf	___ftdiv@f2+2,w
  8549  15EA  023C               	subwf	___ftdiv@f1+2,w
  8550  15EB  1D03               	skipz
  8551  15EC  2DF3               	goto	u254_25
  8552  15ED  0838               	movf	___ftdiv@f2+1,w
  8553  15EE  023B               	subwf	___ftdiv@f1+1,w
  8554  15EF  1D03               	skipz
  8555  15F0  2DF3               	goto	u254_25
  8556  15F1  0837               	movf	___ftdiv@f2,w
  8557  15F2  023A               	subwf	___ftdiv@f1,w
  8558  15F3                     u254_25:	
  8559  15F3  1C03               	skipc
  8560  15F4  2E00               	goto	i1l2388
  8561  15F5  0837               	movf	___ftdiv@f2,w
  8562  15F6  02BA               	subwf	___ftdiv@f1,f
  8563  15F7  0838               	movf	___ftdiv@f2+1,w
  8564  15F8  1C03               	skipc
  8565  15F9  0F38               	incfsz	___ftdiv@f2+1,w
  8566  15FA  02BB               	subwf	___ftdiv@f1+1,f
  8567  15FB  0839               	movf	___ftdiv@f2+2,w
  8568  15FC  1C03               	skipc
  8569  15FD  0A39               	incf	___ftdiv@f2+2,w
  8570  15FE  02BC               	subwf	___ftdiv@f1+2,f
  8571  15FF  1442               	bsf	___ftdiv@f3,0
  8572  1600                     i1l2388:	
  8573  1600  3001               	movlw	1
  8574  1601                     u255_25:	
  8575  1601  1003               	clrc
  8576  1602  0DBA               	rlf	___ftdiv@f1,f
  8577  1603  0DBB               	rlf	___ftdiv@f1+1,f
  8578  1604  0DBC               	rlf	___ftdiv@f1+2,f
  8579  1605  3EFF               	addlw	-1
  8580  1606  1D03               	skipz
  8581  1607  2E01               	goto	u255_25
  8582  1608  3001               	movlw	1
  8583  1609  02C1               	subwf	___ftdiv@cntr,f
  8584  160A  1D03               	btfss	3,2
  8585  160B  2DE1               	goto	i1l2380
  8586  160C  0842               	movf	___ftdiv@f3,w
  8587  160D  00F0               	movwf	___ftpack@arg
  8588  160E  0843               	movf	___ftdiv@f3+1,w
  8589  160F  00F1               	movwf	___ftpack@arg+1
  8590  1610  0844               	movf	___ftdiv@f3+2,w
  8591  1611  00F2               	movwf	___ftpack@arg+2
  8592  1612  0845               	movf	___ftdiv@exp,w
  8593  1613  00BD               	movwf	??___ftdiv
  8594  1614  083D               	movf	??___ftdiv,w
  8595  1615  00F3               	movwf	___ftpack@exp
  8596  1616  0846               	movf	___ftdiv@sign,w
  8597  1617  00BE               	movwf	??___ftdiv+1
  8598  1618  083E               	movf	??___ftdiv+1,w
  8599  1619  00F4               	movwf	___ftpack@sign
  8600  161A  160A  118A  2380   	fcall	___ftpack
  8601  161D  0870               	movf	?___ftpack,w
  8602  161E  1283               	bcf	3,5	;RP0=0, select bank0
  8603  161F  1303               	bcf	3,6	;RP1=0, select bank0
  8604  1620  00B7               	movwf	?___ftdiv
  8605  1621  0871               	movf	?___ftpack+1,w
  8606  1622  00B8               	movwf	?___ftdiv+1
  8607  1623  0872               	movf	?___ftpack+2,w
  8608  1624  00B9               	movwf	?___ftdiv+2
  8609  1625  0008               	return
  8610  1626                     __end_of___ftdiv:	
  8611                           
  8612                           	psect	text35
  8613  16F7                     __ptext35:	
  8614 ;; *************** function ___ftadd *****************
  8615 ;; Defined at:
  8616 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  f1              3   10[BANK0 ] float 
  8619 ;;  f2              3   13[BANK0 ] float 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  exp1            1   22[BANK0 ] unsigned char 
  8622 ;;  exp2            1   21[BANK0 ] unsigned char 
  8623 ;;  sign            1   20[BANK0 ] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  3   10[BANK0 ] float 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0, pclath, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8633 ;;      Params:         0       6       0       0       0
  8634 ;;      Locals:         0       3       0       0       0
  8635 ;;      Temps:          0       4       0       0       0
  8636 ;;      Totals:         0      13       0       0       0
  8637 ;;Total ram usage:       13 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    1
  8640 ;; This function calls:
  8641 ;;		___ftpack
  8642 ;; This function is called by:
  8643 ;;		_trimf
  8644 ;;		_trapmf
  8645 ;;		_Fuzzy
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function ___ftadd
  8651  16F7                     ___ftadd:	
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8655  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8656  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8657  16F9  082A               	movf	___ftadd@f1,w
  8658  16FA  00B0               	movwf	??___ftadd
  8659  16FB  082B               	movf	___ftadd@f1+1,w
  8660  16FC  00B1               	movwf	??___ftadd+1
  8661  16FD  082C               	movf	___ftadd@f1+2,w
  8662  16FE  00B2               	movwf	??___ftadd+2
  8663  16FF  1003               	clrc
  8664  1700  0D31               	rlf	??___ftadd+1,w
  8665  1701  0D32               	rlf	??___ftadd+2,w
  8666  1702  00B3               	movwf	??___ftadd+3
  8667  1703  0833               	movf	??___ftadd+3,w
  8668  1704  00B6               	movwf	___ftadd@exp1
  8669  1705  082D               	movf	___ftadd@f2,w
  8670  1706  00B0               	movwf	??___ftadd
  8671  1707  082E               	movf	___ftadd@f2+1,w
  8672  1708  00B1               	movwf	??___ftadd+1
  8673  1709  082F               	movf	___ftadd@f2+2,w
  8674  170A  00B2               	movwf	??___ftadd+2
  8675  170B  1003               	clrc
  8676  170C  0D31               	rlf	??___ftadd+1,w
  8677  170D  0D32               	rlf	??___ftadd+2,w
  8678  170E  00B3               	movwf	??___ftadd+3
  8679  170F  0833               	movf	??___ftadd+3,w
  8680  1710  00B5               	movwf	___ftadd@exp2
  8681  1711  0836               	movf	___ftadd@exp1,w
  8682  1712  1903               	btfsc	3,2
  8683  1713  2F20               	goto	i1l2290
  8684  1714  0835               	movf	___ftadd@exp2,w
  8685  1715  0236               	subwf	___ftadd@exp1,w
  8686  1716  1803               	skipnc
  8687  1717  2F27               	goto	i1l2294
  8688  1718  0336               	decf	___ftadd@exp1,w
  8689  1719  3AFF               	xorlw	255
  8690  171A  0735               	addwf	___ftadd@exp2,w
  8691  171B  00B0               	movwf	??___ftadd
  8692  171C  3019               	movlw	25
  8693  171D  0230               	subwf	??___ftadd,w
  8694  171E  1C03               	skipc
  8695  171F  2F27               	goto	i1l2294
  8696  1720                     i1l2290:	
  8697  1720  082D               	movf	___ftadd@f2,w
  8698  1721  00AA               	movwf	?___ftadd
  8699  1722  082E               	movf	___ftadd@f2+1,w
  8700  1723  00AB               	movwf	?___ftadd+1
  8701  1724  082F               	movf	___ftadd@f2+2,w
  8702  1725  00AC               	movwf	?___ftadd+2
  8703  1726  0008               	return
  8704  1727                     i1l2294:	
  8705  1727  0835               	movf	___ftadd@exp2,w
  8706  1728  1903               	btfsc	3,2
  8707  1729  0008               	return
  8708  172A  0836               	movf	___ftadd@exp1,w
  8709  172B  0235               	subwf	___ftadd@exp2,w
  8710  172C  1803               	skipnc
  8711  172D  2F36               	goto	i1l2300
  8712  172E  0335               	decf	___ftadd@exp2,w
  8713  172F  3AFF               	xorlw	255
  8714  1730  0736               	addwf	___ftadd@exp1,w
  8715  1731  00B0               	movwf	??___ftadd
  8716  1732  3019               	movlw	25
  8717  1733  0230               	subwf	??___ftadd,w
  8718  1734  1803               	btfsc	3,0
  8719  1735  0008               	return
  8720  1736                     i1l2300:	
  8721  1736  3006               	movlw	6
  8722  1737  00B0               	movwf	??___ftadd
  8723  1738  0830               	movf	??___ftadd,w
  8724  1739  00B4               	movwf	___ftadd@sign
  8725  173A  1BAC               	btfsc	___ftadd@f1+2,7
  8726  173B  17B4               	bsf	___ftadd@sign,7
  8727  173C  1BAF               	btfsc	___ftadd@f2+2,7
  8728  173D  1734               	bsf	___ftadd@sign,6
  8729  173E  17AB               	bsf	___ftadd@f1+1,7
  8730  173F  30FF               	movlw	255
  8731  1740  05AA               	andwf	___ftadd@f1,f
  8732  1741  30FF               	movlw	255
  8733  1742  05AB               	andwf	___ftadd@f1+1,f
  8734  1743  3000               	movlw	0
  8735  1744  05AC               	andwf	___ftadd@f1+2,f
  8736  1745  17AE               	bsf	___ftadd@f2+1,7
  8737  1746  30FF               	movlw	255
  8738  1747  05AD               	andwf	___ftadd@f2,f
  8739  1748  30FF               	movlw	255
  8740  1749  05AE               	andwf	___ftadd@f2+1,f
  8741  174A  3000               	movlw	0
  8742  174B  05AF               	andwf	___ftadd@f2+2,f
  8743  174C  0835               	movf	___ftadd@exp2,w
  8744  174D  0236               	subwf	___ftadd@exp1,w
  8745  174E  1803               	skipnc
  8746  174F  2F76               	goto	i1l2322
  8747  1750                     i1l2312:	
  8748  1750  3001               	movlw	1
  8749  1751                     u234_25:	
  8750  1751  1003               	clrc
  8751  1752  0DAD               	rlf	___ftadd@f2,f
  8752  1753  0DAE               	rlf	___ftadd@f2+1,f
  8753  1754  0DAF               	rlf	___ftadd@f2+2,f
  8754  1755  3EFF               	addlw	-1
  8755  1756  1D03               	skipz
  8756  1757  2F51               	goto	u234_25
  8757  1758  3001               	movlw	1
  8758  1759  02B5               	subwf	___ftadd@exp2,f
  8759  175A  0835               	movf	___ftadd@exp2,w
  8760  175B  0636               	xorwf	___ftadd@exp1,w
  8761  175C  1903               	skipnz
  8762  175D  2F71               	goto	i1l2320
  8763  175E  3001               	movlw	1
  8764  175F  02B4               	subwf	___ftadd@sign,f
  8765  1760  0834               	movf	___ftadd@sign,w
  8766  1761  3907               	andlw	7
  8767  1762  1903               	btfsc	3,2
  8768  1763  2F71               	goto	i1l2320
  8769  1764  2F50               	goto	i1l2312
  8770  1765                     i1l2318:	
  8771  1765  3001               	movlw	1
  8772  1766                     u237_25:	
  8773  1766  1003               	clrc
  8774  1767  0CAC               	rrf	___ftadd@f1+2,f
  8775  1768  0CAB               	rrf	___ftadd@f1+1,f
  8776  1769  0CAA               	rrf	___ftadd@f1,f
  8777  176A  3EFF               	addlw	-1
  8778  176B  1D03               	skipz
  8779  176C  2F66               	goto	u237_25
  8780  176D  3001               	movlw	1
  8781  176E  00B0               	movwf	??___ftadd
  8782  176F  0830               	movf	??___ftadd,w
  8783  1770  07B6               	addwf	___ftadd@exp1,f
  8784  1771                     i1l2320:	
  8785  1771  0836               	movf	___ftadd@exp1,w
  8786  1772  0635               	xorwf	___ftadd@exp2,w
  8787  1773  1903               	btfsc	3,2
  8788  1774  2F9F               	goto	i1l788
  8789  1775  2F65               	goto	i1l2318
  8790  1776                     i1l2322:	
  8791  1776  0836               	movf	___ftadd@exp1,w
  8792  1777  0235               	subwf	___ftadd@exp2,w
  8793  1778  1803               	skipnc
  8794  1779  2F9F               	goto	i1l788
  8795  177A                     i1l2324:	
  8796  177A  3001               	movlw	1
  8797  177B                     u240_25:	
  8798  177B  1003               	clrc
  8799  177C  0DAA               	rlf	___ftadd@f1,f
  8800  177D  0DAB               	rlf	___ftadd@f1+1,f
  8801  177E  0DAC               	rlf	___ftadd@f1+2,f
  8802  177F  3EFF               	addlw	-1
  8803  1780  1D03               	skipz
  8804  1781  2F7B               	goto	u240_25
  8805  1782  3001               	movlw	1
  8806  1783  02B6               	subwf	___ftadd@exp1,f
  8807  1784  0835               	movf	___ftadd@exp2,w
  8808  1785  0636               	xorwf	___ftadd@exp1,w
  8809  1786  1903               	skipnz
  8810  1787  2F9B               	goto	i1l2332
  8811  1788  3001               	movlw	1
  8812  1789  02B4               	subwf	___ftadd@sign,f
  8813  178A  0834               	movf	___ftadd@sign,w
  8814  178B  3907               	andlw	7
  8815  178C  1903               	btfsc	3,2
  8816  178D  2F9B               	goto	i1l2332
  8817  178E  2F7A               	goto	i1l2324
  8818  178F                     i1l2330:	
  8819  178F  3001               	movlw	1
  8820  1790                     u243_25:	
  8821  1790  1003               	clrc
  8822  1791  0CAF               	rrf	___ftadd@f2+2,f
  8823  1792  0CAE               	rrf	___ftadd@f2+1,f
  8824  1793  0CAD               	rrf	___ftadd@f2,f
  8825  1794  3EFF               	addlw	-1
  8826  1795  1D03               	skipz
  8827  1796  2F90               	goto	u243_25
  8828  1797  3001               	movlw	1
  8829  1798  00B0               	movwf	??___ftadd
  8830  1799  0830               	movf	??___ftadd,w
  8831  179A  07B5               	addwf	___ftadd@exp2,f
  8832  179B                     i1l2332:	
  8833  179B  0836               	movf	___ftadd@exp1,w
  8834  179C  0635               	xorwf	___ftadd@exp2,w
  8835  179D  1D03               	skipz
  8836  179E  2F8F               	goto	i1l2330
  8837  179F                     i1l788:	
  8838  179F  1FB4               	btfss	___ftadd@sign,7
  8839  17A0  2FB1               	goto	i1l2336
  8840  17A1  30FF               	movlw	255
  8841  17A2  06AA               	xorwf	___ftadd@f1,f
  8842  17A3  30FF               	movlw	255
  8843  17A4  06AB               	xorwf	___ftadd@f1+1,f
  8844  17A5  30FF               	movlw	255
  8845  17A6  06AC               	xorwf	___ftadd@f1+2,f
  8846  17A7  3001               	movlw	1
  8847  17A8  07AA               	addwf	___ftadd@f1,f
  8848  17A9  3000               	movlw	0
  8849  17AA  1803               	skipnc
  8850  17AB  3001               	movlw	1
  8851  17AC  07AB               	addwf	___ftadd@f1+1,f
  8852  17AD  3000               	movlw	0
  8853  17AE  1803               	skipnc
  8854  17AF  3001               	movlw	1
  8855  17B0  07AC               	addwf	___ftadd@f1+2,f
  8856  17B1                     i1l2336:	
  8857  17B1  1F34               	btfss	___ftadd@sign,6
  8858  17B2  2FC3               	goto	i1l2340
  8859  17B3  30FF               	movlw	255
  8860  17B4  06AD               	xorwf	___ftadd@f2,f
  8861  17B5  30FF               	movlw	255
  8862  17B6  06AE               	xorwf	___ftadd@f2+1,f
  8863  17B7  30FF               	movlw	255
  8864  17B8  06AF               	xorwf	___ftadd@f2+2,f
  8865  17B9  3001               	movlw	1
  8866  17BA  07AD               	addwf	___ftadd@f2,f
  8867  17BB  3000               	movlw	0
  8868  17BC  1803               	skipnc
  8869  17BD  3001               	movlw	1
  8870  17BE  07AE               	addwf	___ftadd@f2+1,f
  8871  17BF  3000               	movlw	0
  8872  17C0  1803               	skipnc
  8873  17C1  3001               	movlw	1
  8874  17C2  07AF               	addwf	___ftadd@f2+2,f
  8875  17C3                     i1l2340:	
  8876  17C3  01B4               	clrf	___ftadd@sign
  8877  17C4  082A               	movf	___ftadd@f1,w
  8878  17C5  07AD               	addwf	___ftadd@f2,f
  8879  17C6  082B               	movf	___ftadd@f1+1,w
  8880  17C7  1103               	clrz
  8881  17C8  1803               	skipnc
  8882  17C9  0A2B               	incf	___ftadd@f1+1,w
  8883  17CA  1D03               	btfss	3,2
  8884  17CB  07AE               	addwf	___ftadd@f2+1,f
  8885  17CC  082C               	movf	___ftadd@f1+2,w
  8886  17CD  1103               	clrz
  8887  17CE  1803               	skipnc
  8888  17CF  0A2C               	incf	___ftadd@f1+2,w
  8889  17D0  1D03               	btfss	3,2
  8890  17D1  07AF               	addwf	___ftadd@f2+2,f
  8891  17D2  1FAF               	btfss	___ftadd@f2+2,7
  8892  17D3  2FE6               	goto	i1l2350
  8893  17D4  30FF               	movlw	255
  8894  17D5  06AD               	xorwf	___ftadd@f2,f
  8895  17D6  30FF               	movlw	255
  8896  17D7  06AE               	xorwf	___ftadd@f2+1,f
  8897  17D8  30FF               	movlw	255
  8898  17D9  06AF               	xorwf	___ftadd@f2+2,f
  8899  17DA  3001               	movlw	1
  8900  17DB  07AD               	addwf	___ftadd@f2,f
  8901  17DC  3000               	movlw	0
  8902  17DD  1803               	skipnc
  8903  17DE  3001               	movlw	1
  8904  17DF  07AE               	addwf	___ftadd@f2+1,f
  8905  17E0  3000               	movlw	0
  8906  17E1  1803               	skipnc
  8907  17E2  3001               	movlw	1
  8908  17E3  07AF               	addwf	___ftadd@f2+2,f
  8909  17E4  01B4               	clrf	___ftadd@sign
  8910  17E5  0AB4               	incf	___ftadd@sign,f
  8911  17E6                     i1l2350:	
  8912  17E6  082D               	movf	___ftadd@f2,w
  8913  17E7  00F0               	movwf	___ftpack@arg
  8914  17E8  082E               	movf	___ftadd@f2+1,w
  8915  17E9  00F1               	movwf	___ftpack@arg+1
  8916  17EA  082F               	movf	___ftadd@f2+2,w
  8917  17EB  00F2               	movwf	___ftpack@arg+2
  8918  17EC  0836               	movf	___ftadd@exp1,w
  8919  17ED  00B0               	movwf	??___ftadd
  8920  17EE  0830               	movf	??___ftadd,w
  8921  17EF  00F3               	movwf	___ftpack@exp
  8922  17F0  0834               	movf	___ftadd@sign,w
  8923  17F1  00B1               	movwf	??___ftadd+1
  8924  17F2  0831               	movf	??___ftadd+1,w
  8925  17F3  00F4               	movwf	___ftpack@sign
  8926  17F4  160A  118A  2380   	fcall	___ftpack
  8927  17F7  0870               	movf	?___ftpack,w
  8928  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8929  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8930  17FA  00AA               	movwf	?___ftadd
  8931  17FB  0871               	movf	?___ftpack+1,w
  8932  17FC  00AB               	movwf	?___ftadd+1
  8933  17FD  0872               	movf	?___ftpack+2,w
  8934  17FE  00AC               	movwf	?___ftadd+2
  8935  17FF  0008               	return
  8936  1800                     __end_of___ftadd:	
  8937                           
  8938                           	psect	text36
  8939  10D5                     __ptext36:	
  8940 ;; *************** function _max_val *****************
  8941 ;; Defined at:
  8942 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  a               3    0[BANK0 ] float 
  8945 ;;  b               3    3[BANK0 ] float 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  3    0[BANK0 ] float 
  8950 ;; Registers used:
  8951 ;;		wreg, status,2, status,0, pclath, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8957 ;;      Params:         0       6       0       0       0
  8958 ;;      Locals:         0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0
  8960 ;;      Totals:         0       6       0       0       0
  8961 ;;Total ram usage:        6 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:    1
  8964 ;; This function calls:
  8965 ;;		___ftge
  8966 ;; This function is called by:
  8967 ;;		_Fuzzy
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           
  8972                           ;psect for function _max_val
  8973  10D5                     _max_val:	
  8974                           
  8975                           ;main.c: 119: if (a > b)
  8976                           
  8977                           ;incstack = 0
  8978                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8979  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  8980  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  8981  10D7  0823               	movf	max_val@b,w
  8982  10D8  00F0               	movwf	___ftge@ff1
  8983  10D9  0824               	movf	max_val@b+1,w
  8984  10DA  00F1               	movwf	___ftge@ff1+1
  8985  10DB  0825               	movf	max_val@b+2,w
  8986  10DC  00F2               	movwf	___ftge@ff1+2
  8987  10DD  0820               	movf	max_val@a,w
  8988  10DE  00F3               	movwf	___ftge@ff2
  8989  10DF  0821               	movf	max_val@a+1,w
  8990  10E0  00F4               	movwf	___ftge@ff2+1
  8991  10E1  0822               	movf	max_val@a+2,w
  8992  10E2  00F5               	movwf	___ftge@ff2+2
  8993  10E3  160A  118A  2323  160A  118A  	fcall	___ftge
  8994  10E8  1C03               	btfss	3,0
  8995  10E9  0008               	return
  8996                           
  8997                           ;main.c: 121: else
  8998                           ;main.c: 122: return b;
  8999                           
  9000                           ;main.c: 120: return a;
  9001  10EA  1283               	bcf	3,5	;RP0=0, select bank0
  9002  10EB  1303               	bcf	3,6	;RP1=0, select bank0
  9003  10EC  0823               	movf	max_val@b,w
  9004  10ED  00A0               	movwf	?_max_val
  9005  10EE  0824               	movf	max_val@b+1,w
  9006  10EF  00A1               	movwf	?_max_val+1
  9007  10F0  0825               	movf	max_val@b+2,w
  9008  10F1  00A2               	movwf	?_max_val+2
  9009  10F2  0008               	return
  9010  10F3                     __end_of_max_val:	
  9011                           
  9012                           	psect	text37
  9013  1323                     __ptext37:	
  9014 ;; *************** function ___ftge *****************
  9015 ;; Defined at:
  9016 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  ff1             3    0[COMMON] float 
  9019 ;;  ff2             3    3[COMMON] float 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;		None               void
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9031 ;;      Params:         6       0       0       0       0
  9032 ;;      Locals:         0       0       0       0       0
  9033 ;;      Temps:          6       0       0       0       0
  9034 ;;      Totals:        12       0       0       0       0
  9035 ;;Total ram usage:       12 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_trimf
  9041 ;;		_trapmf
  9042 ;;		_max_val
  9043 ;;		_Fuzzy
  9044 ;;		_min_val
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           
  9049                           ;psect for function ___ftge
  9050  1323                     ___ftge:	
  9051                           
  9052                           ;incstack = 0
  9053                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9054  1323  1FF2               	btfss	___ftge@ff1+2,7
  9055  1324  2B4A               	goto	i1l2400
  9056  1325  3000               	movlw	0
  9057  1326  00F6               	movwf	??___ftge
  9058  1327  3000               	movlw	0
  9059  1328  00F7               	movwf	??___ftge+1
  9060  1329  3080               	movlw	128
  9061  132A  00F8               	movwf	??___ftge+2
  9062  132B  0970               	comf	___ftge@ff1,w
  9063  132C  00F9               	movwf	??___ftge+3
  9064  132D  0971               	comf	___ftge@ff1+1,w
  9065  132E  00FA               	movwf	??___ftge+4
  9066  132F  0972               	comf	___ftge@ff1+2,w
  9067  1330  00FB               	movwf	??___ftge+5
  9068  1331  0AF9               	incf	??___ftge+3,f
  9069  1332  1903               	skipnz
  9070  1333  0AFA               	incf	??___ftge+4,f
  9071  1334  1903               	skipnz
  9072  1335  0AFB               	incf	??___ftge+5,f
  9073  1336  0879               	movf	??___ftge+3,w
  9074  1337  07F6               	addwf	??___ftge,f
  9075  1338  087A               	movf	??___ftge+4,w
  9076  1339  1803               	skipnc
  9077  133A  0F7A               	incfsz	??___ftge+4,w
  9078  133B  2B3D               	goto	u258_21
  9079  133C  2B3E               	goto	u258_22
  9080  133D                     u258_21:	
  9081  133D  07F7               	addwf	??___ftge+1,f
  9082  133E                     u258_22:	
  9083  133E  087B               	movf	??___ftge+5,w
  9084  133F  1803               	skipnc
  9085  1340  0F7B               	incfsz	??___ftge+5,w
  9086  1341  2B43               	goto	u258_23
  9087  1342  2B44               	goto	u258_24
  9088  1343                     u258_23:	
  9089  1343  07F8               	addwf	??___ftge+2,f
  9090  1344                     u258_24:	
  9091  1344  0876               	movf	??___ftge,w
  9092  1345  00F0               	movwf	___ftge@ff1
  9093  1346  0877               	movf	??___ftge+1,w
  9094  1347  00F1               	movwf	___ftge@ff1+1
  9095  1348  0878               	movf	??___ftge+2,w
  9096  1349  00F2               	movwf	___ftge@ff1+2
  9097  134A                     i1l2400:	
  9098  134A  1FF5               	btfss	___ftge@ff2+2,7
  9099  134B  2B71               	goto	i1l2404
  9100  134C  3000               	movlw	0
  9101  134D  00F6               	movwf	??___ftge
  9102  134E  3000               	movlw	0
  9103  134F  00F7               	movwf	??___ftge+1
  9104  1350  3080               	movlw	128
  9105  1351  00F8               	movwf	??___ftge+2
  9106  1352  0973               	comf	___ftge@ff2,w
  9107  1353  00F9               	movwf	??___ftge+3
  9108  1354  0974               	comf	___ftge@ff2+1,w
  9109  1355  00FA               	movwf	??___ftge+4
  9110  1356  0975               	comf	___ftge@ff2+2,w
  9111  1357  00FB               	movwf	??___ftge+5
  9112  1358  0AF9               	incf	??___ftge+3,f
  9113  1359  1903               	skipnz
  9114  135A  0AFA               	incf	??___ftge+4,f
  9115  135B  1903               	skipnz
  9116  135C  0AFB               	incf	??___ftge+5,f
  9117  135D  0879               	movf	??___ftge+3,w
  9118  135E  07F6               	addwf	??___ftge,f
  9119  135F  087A               	movf	??___ftge+4,w
  9120  1360  1803               	skipnc
  9121  1361  0F7A               	incfsz	??___ftge+4,w
  9122  1362  2B64               	goto	u260_21
  9123  1363  2B65               	goto	u260_22
  9124  1364                     u260_21:	
  9125  1364  07F7               	addwf	??___ftge+1,f
  9126  1365                     u260_22:	
  9127  1365  087B               	movf	??___ftge+5,w
  9128  1366  1803               	skipnc
  9129  1367  0F7B               	incfsz	??___ftge+5,w
  9130  1368  2B6A               	goto	u260_23
  9131  1369  2B6B               	goto	u260_24
  9132  136A                     u260_23:	
  9133  136A  07F8               	addwf	??___ftge+2,f
  9134  136B                     u260_24:	
  9135  136B  0876               	movf	??___ftge,w
  9136  136C  00F3               	movwf	___ftge@ff2
  9137  136D  0877               	movf	??___ftge+1,w
  9138  136E  00F4               	movwf	___ftge@ff2+1
  9139  136F  0878               	movf	??___ftge+2,w
  9140  1370  00F5               	movwf	___ftge@ff2+2
  9141  1371                     i1l2404:	
  9142  1371  3080               	movlw	128
  9143  1372  06F2               	xorwf	___ftge@ff1+2,f
  9144  1373  3080               	movlw	128
  9145  1374  06F5               	xorwf	___ftge@ff2+2,f
  9146  1375  0875               	movf	___ftge@ff2+2,w
  9147  1376  0272               	subwf	___ftge@ff1+2,w
  9148  1377  1D03               	skipz
  9149  1378  0008               	return
  9150  1379  0874               	movf	___ftge@ff2+1,w
  9151  137A  0271               	subwf	___ftge@ff1+1,w
  9152  137B  1D03               	skipz
  9153  137C  0008               	return
  9154  137D  0873               	movf	___ftge@ff2,w
  9155  137E  0270               	subwf	___ftge@ff1,w
  9156  137F  0008               	return
  9157  1380                     __end_of___ftge:	
  9158                           
  9159                           	psect	text38
  9160  105D                     __ptext38:	
  9161 ;; *************** function ___lwtoft *****************
  9162 ;; Defined at:
  9163 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  c               2    8[COMMON] unsigned int 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  3    8[COMMON] float 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, pclath, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9177 ;;      Params:         3       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0
  9179 ;;      Temps:          1       0       0       0       0
  9180 ;;      Totals:         4       0       0       0       0
  9181 ;;Total ram usage:        4 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    1
  9184 ;; This function calls:
  9185 ;;		___ftpack
  9186 ;; This function is called by:
  9187 ;;		_Fuzzy
  9188 ;;		_ISR
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function ___lwtoft
  9194  105D                     ___lwtoft:	
  9195                           
  9196                           ;incstack = 0
  9197                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9198  105D  0878               	movf	___lwtoft@c,w
  9199  105E  00F0               	movwf	___ftpack@arg
  9200  105F  0879               	movf	___lwtoft@c+1,w
  9201  1060  00F1               	movwf	___ftpack@arg+1
  9202  1061  01F2               	clrf	___ftpack@arg+2
  9203  1062  308E               	movlw	142
  9204  1063  00FB               	movwf	??___lwtoft
  9205  1064  087B               	movf	??___lwtoft,w
  9206  1065  00F3               	movwf	___ftpack@exp
  9207  1066  01F4               	clrf	___ftpack@sign
  9208  1067  160A  118A  2380   	fcall	___ftpack
  9209  106A  0870               	movf	?___ftpack,w
  9210  106B  00F8               	movwf	?___lwtoft
  9211  106C  0871               	movf	?___ftpack+1,w
  9212  106D  00F9               	movwf	?___lwtoft+1
  9213  106E  0872               	movf	?___ftpack+2,w
  9214  106F  00FA               	movwf	?___lwtoft+2
  9215  1070  0008               	return
  9216  1071                     __end_of___lwtoft:	
  9217                           
  9218                           	psect	text39
  9219  1453                     __ptext39:	
  9220 ;; *************** function ___fttol *****************
  9221 ;; Defined at:
  9222 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  f1              3    0[COMMON] float 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  lval            4    9[COMMON] unsigned long 
  9227 ;;  exp1            1   13[COMMON] unsigned char 
  9228 ;;  sign1           1    8[COMMON] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  4    0[COMMON] long 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9238 ;;      Params:         4       0       0       0       0
  9239 ;;      Locals:         6       0       0       0       0
  9240 ;;      Temps:          4       0       0       0       0
  9241 ;;      Totals:        14       0       0       0       0
  9242 ;;Total ram usage:       14 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_Fuzzy
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           
  9252                           ;psect for function ___fttol
  9253  1453                     ___fttol:	
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9257  1453  0870               	movf	___fttol@f1,w
  9258  1454  00F4               	movwf	??___fttol
  9259  1455  0871               	movf	___fttol@f1+1,w
  9260  1456  00F5               	movwf	??___fttol+1
  9261  1457  0872               	movf	___fttol@f1+2,w
  9262  1458  00F6               	movwf	??___fttol+2
  9263  1459  1003               	clrc
  9264  145A  0D75               	rlf	??___fttol+1,w
  9265  145B  0D76               	rlf	??___fttol+2,w
  9266  145C  00F7               	movwf	??___fttol+3
  9267  145D  0877               	movf	??___fttol+3,w
  9268  145E  00FD               	movwf	___fttol@exp1
  9269  145F  08FD               	movf	___fttol@exp1,f
  9270  1460  1D03               	skipz
  9271  1461  2C6B               	goto	i1l2632
  9272  1462  3000               	movlw	0
  9273  1463  00F3               	movwf	?___fttol+3
  9274  1464  3000               	movlw	0
  9275  1465  00F2               	movwf	?___fttol+2
  9276  1466  3000               	movlw	0
  9277  1467  00F1               	movwf	?___fttol+1
  9278  1468  3000               	movlw	0
  9279  1469  00F0               	movwf	?___fttol
  9280  146A  0008               	return
  9281  146B                     i1l2632:	
  9282  146B  0870               	movf	___fttol@f1,w
  9283  146C  00F4               	movwf	??___fttol
  9284  146D  0871               	movf	___fttol@f1+1,w
  9285  146E  00F5               	movwf	??___fttol+1
  9286  146F  0872               	movf	___fttol@f1+2,w
  9287  1470  00F6               	movwf	??___fttol+2
  9288  1471  3017               	movlw	23
  9289  1472                     u311_25:	
  9290  1472  1003               	clrc
  9291  1473  0CF6               	rrf	??___fttol+2,f
  9292  1474  0CF5               	rrf	??___fttol+1,f
  9293  1475  0CF4               	rrf	??___fttol,f
  9294  1476  3EFF               	addlw	-1
  9295  1477  1D03               	skipz
  9296  1478  2C72               	goto	u311_25
  9297  1479  0874               	movf	??___fttol,w
  9298  147A  00F7               	movwf	??___fttol+3
  9299  147B  0877               	movf	??___fttol+3,w
  9300  147C  00F8               	movwf	___fttol@sign1
  9301  147D  17F1               	bsf	___fttol@f1+1,7
  9302  147E  30FF               	movlw	255
  9303  147F  05F0               	andwf	___fttol@f1,f
  9304  1480  30FF               	movlw	255
  9305  1481  05F1               	andwf	___fttol@f1+1,f
  9306  1482  3000               	movlw	0
  9307  1483  05F2               	andwf	___fttol@f1+2,f
  9308  1484  0870               	movf	___fttol@f1,w
  9309  1485  00F9               	movwf	___fttol@lval
  9310  1486  0871               	movf	___fttol@f1+1,w
  9311  1487  00FA               	movwf	___fttol@lval+1
  9312  1488  0872               	movf	___fttol@f1+2,w
  9313  1489  00FB               	movwf	___fttol@lval+2
  9314  148A  01FC               	clrf	___fttol@lval+3
  9315  148B  308E               	movlw	142
  9316  148C  02FD               	subwf	___fttol@exp1,f
  9317  148D  1FFD               	btfss	___fttol@exp1,7
  9318  148E  2CAD               	goto	i1l2652
  9319  148F  087D               	movf	___fttol@exp1,w
  9320  1490  3A80               	xorlw	128
  9321  1491  3E8F               	addlw	143
  9322  1492  1803               	skipnc
  9323  1493  2C9D               	goto	i1l2650
  9324  1494  3000               	movlw	0
  9325  1495  00F3               	movwf	?___fttol+3
  9326  1496  3000               	movlw	0
  9327  1497  00F2               	movwf	?___fttol+2
  9328  1498  3000               	movlw	0
  9329  1499  00F1               	movwf	?___fttol+1
  9330  149A  3000               	movlw	0
  9331  149B  00F0               	movwf	?___fttol
  9332  149C  0008               	return
  9333  149D                     i1l2650:	
  9334  149D  3001               	movlw	1
  9335  149E                     u314_25:	
  9336  149E  1003               	clrc
  9337  149F  0CFC               	rrf	___fttol@lval+3,f
  9338  14A0  0CFB               	rrf	___fttol@lval+2,f
  9339  14A1  0CFA               	rrf	___fttol@lval+1,f
  9340  14A2  0CF9               	rrf	___fttol@lval,f
  9341  14A3  3EFF               	addlw	-1
  9342  14A4  1D03               	skipz
  9343  14A5  2C9E               	goto	u314_25
  9344  14A6  3001               	movlw	1
  9345  14A7  00F4               	movwf	??___fttol
  9346  14A8  0874               	movf	??___fttol,w
  9347  14A9  07FD               	addwf	___fttol@exp1,f
  9348  14AA  1903               	btfsc	3,2
  9349  14AB  2CC8               	goto	i1l2662
  9350  14AC  2C9D               	goto	i1l2650
  9351  14AD                     i1l2652:	
  9352  14AD  3018               	movlw	24
  9353  14AE  027D               	subwf	___fttol@exp1,w
  9354  14AF  1C03               	skipc
  9355  14B0  2CC5               	goto	i1l2660
  9356  14B1  3000               	movlw	0
  9357  14B2  00F3               	movwf	?___fttol+3
  9358  14B3  3000               	movlw	0
  9359  14B4  00F2               	movwf	?___fttol+2
  9360  14B5  3000               	movlw	0
  9361  14B6  00F1               	movwf	?___fttol+1
  9362  14B7  3000               	movlw	0
  9363  14B8  00F0               	movwf	?___fttol
  9364  14B9  0008               	return
  9365  14BA                     i1l2658:	
  9366  14BA  3001               	movlw	1
  9367  14BB  00F4               	movwf	??___fttol
  9368  14BC                     u317_25:	
  9369  14BC  1003               	clrc
  9370  14BD  0DF9               	rlf	___fttol@lval,f
  9371  14BE  0DFA               	rlf	___fttol@lval+1,f
  9372  14BF  0DFB               	rlf	___fttol@lval+2,f
  9373  14C0  0DFC               	rlf	___fttol@lval+3,f
  9374  14C1  0BF4               	decfsz	??___fttol,f
  9375  14C2  2CBC               	goto	u317_25
  9376  14C3  3001               	movlw	1
  9377  14C4  02FD               	subwf	___fttol@exp1,f
  9378  14C5                     i1l2660:	
  9379  14C5  08FD               	movf	___fttol@exp1,f
  9380  14C6  1D03               	skipz
  9381  14C7  2CBA               	goto	i1l2658
  9382  14C8                     i1l2662:	
  9383  14C8  0878               	movf	___fttol@sign1,w
  9384  14C9  1903               	btfsc	3,2
  9385  14CA  2CD6               	goto	i1l2666
  9386  14CB  09F9               	comf	___fttol@lval,f
  9387  14CC  09FA               	comf	___fttol@lval+1,f
  9388  14CD  09FB               	comf	___fttol@lval+2,f
  9389  14CE  09FC               	comf	___fttol@lval+3,f
  9390  14CF  0AF9               	incf	___fttol@lval,f
  9391  14D0  1903               	skipnz
  9392  14D1  0AFA               	incf	___fttol@lval+1,f
  9393  14D2  1903               	skipnz
  9394  14D3  0AFB               	incf	___fttol@lval+2,f
  9395  14D4  1903               	skipnz
  9396  14D5  0AFC               	incf	___fttol@lval+3,f
  9397  14D6                     i1l2666:	
  9398  14D6  087C               	movf	___fttol@lval+3,w
  9399  14D7  00F3               	movwf	?___fttol+3
  9400  14D8  087B               	movf	___fttol@lval+2,w
  9401  14D9  00F2               	movwf	?___fttol+2
  9402  14DA  087A               	movf	___fttol@lval+1,w
  9403  14DB  00F1               	movwf	?___fttol+1
  9404  14DC  0879               	movf	___fttol@lval,w
  9405  14DD  00F0               	movwf	?___fttol
  9406  14DE  0008               	return
  9407  14DF                     __end_of___fttol:	
  9408                           
  9409                           	psect	text40
  9410  1626                     __ptext40:	
  9411 ;; *************** function ___ftmul *****************
  9412 ;; Defined at:
  9413 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  f1              3    8[COMMON] float 
  9416 ;;  f2              3   11[COMMON] float 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9419 ;;  sign            1    9[BANK0 ] unsigned char 
  9420 ;;  cntr            1    8[BANK0 ] unsigned char 
  9421 ;;  exp             1    4[BANK0 ] unsigned char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  3    8[COMMON] float 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0, pclath, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         6       0       0       0       0
  9432 ;;      Locals:         0       6       0       0       0
  9433 ;;      Temps:          0       4       0       0       0
  9434 ;;      Totals:         6      10       0       0       0
  9435 ;;Total ram usage:       16 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    1
  9438 ;; This function calls:
  9439 ;;		___ftpack
  9440 ;; This function is called by:
  9441 ;;		_Fuzzy
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           
  9446                           ;psect for function ___ftmul
  9447  1626                     ___ftmul:	
  9448                           
  9449                           ;incstack = 0
  9450                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9451  1626  0878               	movf	___ftmul@f1,w
  9452  1627  1283               	bcf	3,5	;RP0=0, select bank0
  9453  1628  1303               	bcf	3,6	;RP1=0, select bank0
  9454  1629  00A0               	movwf	??___ftmul
  9455  162A  0879               	movf	___ftmul@f1+1,w
  9456  162B  00A1               	movwf	??___ftmul+1
  9457  162C  087A               	movf	___ftmul@f1+2,w
  9458  162D  00A2               	movwf	??___ftmul+2
  9459  162E  1003               	clrc
  9460  162F  0D21               	rlf	??___ftmul+1,w
  9461  1630  0D22               	rlf	??___ftmul+2,w
  9462  1631  00A3               	movwf	??___ftmul+3
  9463  1632  0823               	movf	??___ftmul+3,w
  9464  1633  00A4               	movwf	___ftmul@exp
  9465  1634  08A4               	movf	___ftmul@exp,f
  9466  1635  1D03               	skipz
  9467  1636  2E3E               	goto	i1l2582
  9468  1637  3000               	movlw	0
  9469  1638  00F8               	movwf	?___ftmul
  9470  1639  3000               	movlw	0
  9471  163A  00F9               	movwf	?___ftmul+1
  9472  163B  3000               	movlw	0
  9473  163C  00FA               	movwf	?___ftmul+2
  9474  163D  0008               	return
  9475  163E                     i1l2582:	
  9476  163E  087B               	movf	___ftmul@f2,w
  9477  163F  00A0               	movwf	??___ftmul
  9478  1640  087C               	movf	___ftmul@f2+1,w
  9479  1641  00A1               	movwf	??___ftmul+1
  9480  1642  087D               	movf	___ftmul@f2+2,w
  9481  1643  00A2               	movwf	??___ftmul+2
  9482  1644  1003               	clrc
  9483  1645  0D21               	rlf	??___ftmul+1,w
  9484  1646  0D22               	rlf	??___ftmul+2,w
  9485  1647  00A3               	movwf	??___ftmul+3
  9486  1648  0823               	movf	??___ftmul+3,w
  9487  1649  00A9               	movwf	___ftmul@sign
  9488  164A  08A9               	movf	___ftmul@sign,f
  9489  164B  1D03               	skipz
  9490  164C  2E54               	goto	i1l2588
  9491  164D  3000               	movlw	0
  9492  164E  00F8               	movwf	?___ftmul
  9493  164F  3000               	movlw	0
  9494  1650  00F9               	movwf	?___ftmul+1
  9495  1651  3000               	movlw	0
  9496  1652  00FA               	movwf	?___ftmul+2
  9497  1653  0008               	return
  9498  1654                     i1l2588:	
  9499  1654  0829               	movf	___ftmul@sign,w
  9500  1655  3E7B               	addlw	123
  9501  1656  00A0               	movwf	??___ftmul
  9502  1657  0820               	movf	??___ftmul,w
  9503  1658  07A4               	addwf	___ftmul@exp,f
  9504  1659  0878               	movf	___ftmul@f1,w
  9505  165A  00A0               	movwf	??___ftmul
  9506  165B  0879               	movf	___ftmul@f1+1,w
  9507  165C  00A1               	movwf	??___ftmul+1
  9508  165D  087A               	movf	___ftmul@f1+2,w
  9509  165E  00A2               	movwf	??___ftmul+2
  9510  165F  3010               	movlw	16
  9511  1660                     u298_25:	
  9512  1660  1003               	clrc
  9513  1661  0CA2               	rrf	??___ftmul+2,f
  9514  1662  0CA1               	rrf	??___ftmul+1,f
  9515  1663  0CA0               	rrf	??___ftmul,f
  9516  1664  3EFF               	addlw	-1
  9517  1665  1D03               	skipz
  9518  1666  2E60               	goto	u298_25
  9519  1667  0820               	movf	??___ftmul,w
  9520  1668  00A3               	movwf	??___ftmul+3
  9521  1669  0823               	movf	??___ftmul+3,w
  9522  166A  00A9               	movwf	___ftmul@sign
  9523  166B  087B               	movf	___ftmul@f2,w
  9524  166C  00A0               	movwf	??___ftmul
  9525  166D  087C               	movf	___ftmul@f2+1,w
  9526  166E  00A1               	movwf	??___ftmul+1
  9527  166F  087D               	movf	___ftmul@f2+2,w
  9528  1670  00A2               	movwf	??___ftmul+2
  9529  1671  3010               	movlw	16
  9530  1672                     u299_25:	
  9531  1672  1003               	clrc
  9532  1673  0CA2               	rrf	??___ftmul+2,f
  9533  1674  0CA1               	rrf	??___ftmul+1,f
  9534  1675  0CA0               	rrf	??___ftmul,f
  9535  1676  3EFF               	addlw	-1
  9536  1677  1D03               	skipz
  9537  1678  2E72               	goto	u299_25
  9538  1679  0820               	movf	??___ftmul,w
  9539  167A  00A3               	movwf	??___ftmul+3
  9540  167B  0823               	movf	??___ftmul+3,w
  9541  167C  06A9               	xorwf	___ftmul@sign,f
  9542  167D  3080               	movlw	128
  9543  167E  00A0               	movwf	??___ftmul
  9544  167F  0820               	movf	??___ftmul,w
  9545  1680  05A9               	andwf	___ftmul@sign,f
  9546  1681  17F9               	bsf	___ftmul@f1+1,7
  9547  1682  17FC               	bsf	___ftmul@f2+1,7
  9548  1683  30FF               	movlw	255
  9549  1684  05FB               	andwf	___ftmul@f2,f
  9550  1685  30FF               	movlw	255
  9551  1686  05FC               	andwf	___ftmul@f2+1,f
  9552  1687  3000               	movlw	0
  9553  1688  05FD               	andwf	___ftmul@f2+2,f
  9554  1689  3000               	movlw	0
  9555  168A  00A5               	movwf	___ftmul@f3_as_product
  9556  168B  3000               	movlw	0
  9557  168C  00A6               	movwf	___ftmul@f3_as_product+1
  9558  168D  3000               	movlw	0
  9559  168E  00A7               	movwf	___ftmul@f3_as_product+2
  9560  168F  3007               	movlw	7
  9561  1690  00A0               	movwf	??___ftmul
  9562  1691  0820               	movf	??___ftmul,w
  9563  1692  00A8               	movwf	___ftmul@cntr
  9564  1693                     i1l2600:	
  9565  1693  1C78               	btfss	___ftmul@f1,0
  9566  1694  2EA3               	goto	i1l2604
  9567  1695  087B               	movf	___ftmul@f2,w
  9568  1696  07A5               	addwf	___ftmul@f3_as_product,f
  9569  1697  087C               	movf	___ftmul@f2+1,w
  9570  1698  1103               	clrz
  9571  1699  1803               	skipnc
  9572  169A  0A7C               	incf	___ftmul@f2+1,w
  9573  169B  1D03               	btfss	3,2
  9574  169C  07A6               	addwf	___ftmul@f3_as_product+1,f
  9575  169D  087D               	movf	___ftmul@f2+2,w
  9576  169E  1103               	clrz
  9577  169F  1803               	skipnc
  9578  16A0  0A7D               	incf	___ftmul@f2+2,w
  9579  16A1  1D03               	btfss	3,2
  9580  16A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  9581  16A3                     i1l2604:	
  9582  16A3  3001               	movlw	1
  9583  16A4                     u302_25:	
  9584  16A4  1003               	clrc
  9585  16A5  0CFA               	rrf	___ftmul@f1+2,f
  9586  16A6  0CF9               	rrf	___ftmul@f1+1,f
  9587  16A7  0CF8               	rrf	___ftmul@f1,f
  9588  16A8  3EFF               	addlw	-1
  9589  16A9  1D03               	skipz
  9590  16AA  2EA4               	goto	u302_25
  9591  16AB  3001               	movlw	1
  9592  16AC                     u303_25:	
  9593  16AC  1003               	clrc
  9594  16AD  0DFB               	rlf	___ftmul@f2,f
  9595  16AE  0DFC               	rlf	___ftmul@f2+1,f
  9596  16AF  0DFD               	rlf	___ftmul@f2+2,f
  9597  16B0  3EFF               	addlw	-1
  9598  16B1  1D03               	skipz
  9599  16B2  2EAC               	goto	u303_25
  9600  16B3  3001               	movlw	1
  9601  16B4  02A8               	subwf	___ftmul@cntr,f
  9602  16B5  1D03               	btfss	3,2
  9603  16B6  2E93               	goto	i1l2600
  9604  16B7  3009               	movlw	9
  9605  16B8  00A0               	movwf	??___ftmul
  9606  16B9  0820               	movf	??___ftmul,w
  9607  16BA  00A8               	movwf	___ftmul@cntr
  9608  16BB                     i1l2612:	
  9609  16BB  1C78               	btfss	___ftmul@f1,0
  9610  16BC  2ECB               	goto	i1l2616
  9611  16BD  087B               	movf	___ftmul@f2,w
  9612  16BE  07A5               	addwf	___ftmul@f3_as_product,f
  9613  16BF  087C               	movf	___ftmul@f2+1,w
  9614  16C0  1103               	clrz
  9615  16C1  1803               	skipnc
  9616  16C2  0A7C               	incf	___ftmul@f2+1,w
  9617  16C3  1D03               	btfss	3,2
  9618  16C4  07A6               	addwf	___ftmul@f3_as_product+1,f
  9619  16C5  087D               	movf	___ftmul@f2+2,w
  9620  16C6  1103               	clrz
  9621  16C7  1803               	skipnc
  9622  16C8  0A7D               	incf	___ftmul@f2+2,w
  9623  16C9  1D03               	btfss	3,2
  9624  16CA  07A7               	addwf	___ftmul@f3_as_product+2,f
  9625  16CB                     i1l2616:	
  9626  16CB  3001               	movlw	1
  9627  16CC                     u307_25:	
  9628  16CC  1003               	clrc
  9629  16CD  0CFA               	rrf	___ftmul@f1+2,f
  9630  16CE  0CF9               	rrf	___ftmul@f1+1,f
  9631  16CF  0CF8               	rrf	___ftmul@f1,f
  9632  16D0  3EFF               	addlw	-1
  9633  16D1  1D03               	skipz
  9634  16D2  2ECC               	goto	u307_25
  9635  16D3  3001               	movlw	1
  9636  16D4                     u308_25:	
  9637  16D4  1003               	clrc
  9638  16D5  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9639  16D6  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9640  16D7  0CA5               	rrf	___ftmul@f3_as_product,f
  9641  16D8  3EFF               	addlw	-1
  9642  16D9  1D03               	skipz
  9643  16DA  2ED4               	goto	u308_25
  9644  16DB  3001               	movlw	1
  9645  16DC  02A8               	subwf	___ftmul@cntr,f
  9646  16DD  1D03               	btfss	3,2
  9647  16DE  2EBB               	goto	i1l2612
  9648  16DF  0825               	movf	___ftmul@f3_as_product,w
  9649  16E0  00F0               	movwf	___ftpack@arg
  9650  16E1  0826               	movf	___ftmul@f3_as_product+1,w
  9651  16E2  00F1               	movwf	___ftpack@arg+1
  9652  16E3  0827               	movf	___ftmul@f3_as_product+2,w
  9653  16E4  00F2               	movwf	___ftpack@arg+2
  9654  16E5  0824               	movf	___ftmul@exp,w
  9655  16E6  00A0               	movwf	??___ftmul
  9656  16E7  0820               	movf	??___ftmul,w
  9657  16E8  00F3               	movwf	___ftpack@exp
  9658  16E9  0829               	movf	___ftmul@sign,w
  9659  16EA  00A1               	movwf	??___ftmul+1
  9660  16EB  0821               	movf	??___ftmul+1,w
  9661  16EC  00F4               	movwf	___ftpack@sign
  9662  16ED  160A  118A  2380   	fcall	___ftpack
  9663  16F0  0870               	movf	?___ftpack,w
  9664  16F1  00F8               	movwf	?___ftmul
  9665  16F2  0871               	movf	?___ftpack+1,w
  9666  16F3  00F9               	movwf	?___ftmul+1
  9667  16F4  0872               	movf	?___ftpack+2,w
  9668  16F5  00FA               	movwf	?___ftmul+2
  9669  16F6  0008               	return
  9670  16F7                     __end_of___ftmul:	
  9671                           
  9672                           	psect	text41
  9673  1380                     __ptext41:	
  9674 ;; *************** function ___ftpack *****************
  9675 ;; Defined at:
  9676 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  arg             3    0[COMMON] unsigned um
  9679 ;;  exp             1    3[COMMON] unsigned char 
  9680 ;;  sign            1    4[COMMON] unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  3    0[COMMON] float 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9692 ;;      Params:         5       0       0       0       0
  9693 ;;      Locals:         0       0       0       0       0
  9694 ;;      Temps:          3       0       0       0       0
  9695 ;;      Totals:         8       0       0       0       0
  9696 ;;Total ram usage:        8 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		___ftadd
  9702 ;;		___ftdiv
  9703 ;;		___ftmul
  9704 ;;		___lwtoft
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function ___ftpack
  9710  1380                     ___ftpack:	
  9711                           
  9712                           ;incstack = 0
  9713                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9714  1380  0873               	movf	___ftpack@exp,w
  9715  1381  1903               	btfsc	3,2
  9716  1382  2B88               	goto	i1l2256
  9717  1383  0872               	movf	___ftpack@arg+2,w
  9718  1384  0471               	iorwf	___ftpack@arg+1,w
  9719  1385  0470               	iorwf	___ftpack@arg,w
  9720  1386  1D03               	skipz
  9721  1387  2B9B               	goto	i1l2262
  9722  1388                     i1l2256:	
  9723  1388  3000               	movlw	0
  9724  1389  00F0               	movwf	?___ftpack
  9725  138A  3000               	movlw	0
  9726  138B  00F1               	movwf	?___ftpack+1
  9727  138C  3000               	movlw	0
  9728  138D  00F2               	movwf	?___ftpack+2
  9729  138E  0008               	return
  9730  138F                     i1l2260:	
  9731  138F  3001               	movlw	1
  9732  1390  00F5               	movwf	??___ftpack
  9733  1391  0875               	movf	??___ftpack,w
  9734  1392  07F3               	addwf	___ftpack@exp,f
  9735  1393  3001               	movlw	1
  9736  1394                     u216_25:	
  9737  1394  1003               	clrc
  9738  1395  0CF2               	rrf	___ftpack@arg+2,f
  9739  1396  0CF1               	rrf	___ftpack@arg+1,f
  9740  1397  0CF0               	rrf	___ftpack@arg,f
  9741  1398  3EFF               	addlw	-1
  9742  1399  1D03               	skipz
  9743  139A  2B94               	goto	u216_25
  9744  139B                     i1l2262:	
  9745  139B  30FE               	movlw	254
  9746  139C  0572               	andwf	___ftpack@arg+2,w
  9747  139D  1903               	btfsc	3,2
  9748  139E  2BB6               	goto	i1l759
  9749  139F  2B8F               	goto	i1l2260
  9750  13A0                     i1l2264:	
  9751  13A0  3001               	movlw	1
  9752  13A1  00F5               	movwf	??___ftpack
  9753  13A2  0875               	movf	??___ftpack,w
  9754  13A3  07F3               	addwf	___ftpack@exp,f
  9755  13A4  3001               	movlw	1
  9756  13A5  07F0               	addwf	___ftpack@arg,f
  9757  13A6  3000               	movlw	0
  9758  13A7  1803               	skipnc
  9759  13A8  3001               	movlw	1
  9760  13A9  07F1               	addwf	___ftpack@arg+1,f
  9761  13AA  3000               	movlw	0
  9762  13AB  1803               	skipnc
  9763  13AC  3001               	movlw	1
  9764  13AD  07F2               	addwf	___ftpack@arg+2,f
  9765  13AE  3001               	movlw	1
  9766  13AF                     u218_25:	
  9767  13AF  1003               	clrc
  9768  13B0  0CF2               	rrf	___ftpack@arg+2,f
  9769  13B1  0CF1               	rrf	___ftpack@arg+1,f
  9770  13B2  0CF0               	rrf	___ftpack@arg,f
  9771  13B3  3EFF               	addlw	-1
  9772  13B4  1D03               	skipz
  9773  13B5  2BAF               	goto	u218_25
  9774  13B6                     i1l759:	
  9775  13B6  30FF               	movlw	255
  9776  13B7  0572               	andwf	___ftpack@arg+2,w
  9777  13B8  1903               	btfsc	3,2
  9778  13B9  2BC5               	goto	i1l2272
  9779  13BA  2BA0               	goto	i1l2264
  9780  13BB                     i1l2270:	
  9781  13BB  3001               	movlw	1
  9782  13BC  02F3               	subwf	___ftpack@exp,f
  9783  13BD  3001               	movlw	1
  9784  13BE                     u220_25:	
  9785  13BE  1003               	clrc
  9786  13BF  0DF0               	rlf	___ftpack@arg,f
  9787  13C0  0DF1               	rlf	___ftpack@arg+1,f
  9788  13C1  0DF2               	rlf	___ftpack@arg+2,f
  9789  13C2  3EFF               	addlw	-1
  9790  13C3  1D03               	skipz
  9791  13C4  2BBE               	goto	u220_25
  9792  13C5                     i1l2272:	
  9793  13C5  1FF1               	btfss	___ftpack@arg+1,7
  9794  13C6  2BBB               	goto	i1l2270
  9795  13C7  1873               	btfsc	___ftpack@exp,0
  9796  13C8  2BCF               	goto	i1l765
  9797  13C9  30FF               	movlw	255
  9798  13CA  05F0               	andwf	___ftpack@arg,f
  9799  13CB  307F               	movlw	127
  9800  13CC  05F1               	andwf	___ftpack@arg+1,f
  9801  13CD  30FF               	movlw	255
  9802  13CE  05F2               	andwf	___ftpack@arg+2,f
  9803  13CF                     i1l765:	
  9804  13CF  1003               	clrc
  9805  13D0  0CF3               	rrf	___ftpack@exp,f
  9806  13D1  0873               	movf	___ftpack@exp,w
  9807  13D2  00F5               	movwf	??___ftpack
  9808  13D3  01F6               	clrf	??___ftpack+1
  9809  13D4  01F7               	clrf	??___ftpack+2
  9810  13D5  3010               	movlw	16
  9811  13D6                     u223_25:	
  9812  13D6  1003               	clrc
  9813  13D7  0DF5               	rlf	??___ftpack,f
  9814  13D8  0DF6               	rlf	??___ftpack+1,f
  9815  13D9  0DF7               	rlf	??___ftpack+2,f
  9816  13DA  3EFF               	addlw	-1
  9817  13DB  1D03               	skipz
  9818  13DC  2BD6               	goto	u223_25
  9819  13DD  0875               	movf	??___ftpack,w
  9820  13DE  04F0               	iorwf	___ftpack@arg,f
  9821  13DF  0876               	movf	??___ftpack+1,w
  9822  13E0  04F1               	iorwf	___ftpack@arg+1,f
  9823  13E1  0877               	movf	??___ftpack+2,w
  9824  13E2  04F2               	iorwf	___ftpack@arg+2,f
  9825  13E3  0874               	movf	___ftpack@sign,w
  9826  13E4  1903               	btfsc	3,2
  9827  13E5  0008               	return
  9828  13E6  17F2               	bsf	___ftpack@arg+2,7
  9829  13E7  0008               	return
  9830  13E8                     __end_of___ftpack:	
  9831  007E                     btemp	set	126	;btemp
  9832  007E                     wtemp	set	126
  9833  007E                     wtemp0	set	126
  9834  0080                     wtemp1	set	128
  9835  0082                     wtemp2	set	130
  9836  0084                     wtemp3	set	132
  9837  0086                     wtemp4	set	134
  9838  0088                     wtemp5	set	136
  9839  007F                     wtemp6	set	127
  9840  007E                     ttemp	set	126
  9841  007E                     ttemp0	set	126
  9842  0081                     ttemp1	set	129
  9843  0084                     ttemp2	set	132
  9844  0087                     ttemp3	set	135
  9845  007F                     ttemp4	set	127
  9846  007E                     ltemp	set	126
  9847  007E                     ltemp0	set	126
  9848  0082                     ltemp1	set	130
  9849  0086                     ltemp2	set	134
  9850  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        5
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      72
    BANK3            96     11      50
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5324
                                             27 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2900
                                             18 BANK1      6     3      3
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55404
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51974
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   14094
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14951
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 14:02:15 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B8                             _y 00BB  
                           pc 0002                   ?_LCD_Cursor 00CC       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00B2                            fsr 0004           ___wmul@multiplicand 00CE  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BE                  ___ftadd@sign 0034  
                         l202 0A1F                           l227 0803                           l653 14F1  
                         l479 0DF1                           l497 0EE9                           l598 11CB  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0C19  
                         _rpm 00C6                           fsr0 0004                           _pwm 00C4  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00D0                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
                        l3002 1101            LCD_WriteString@Str 00CE                          l3016 120D  
                        l3404 1311                          l3420 1277                          l3422 1285  
                        l3430 129E                          l3408 131C                          l2554 1512  
                        l2546 1502                          l3426 1293                          l3370 1049  
                        l3522 0F76                          l3506 0F37                          l3514 0F55  
                        l3450 0E06                          l3442 0DED                          l2572 1565  
                        l2564 154A                          l2556 1522                          l3516 0F59  
                        l3540 0FF9                          l3454 0E18                          l2568 1557  
                        l3376 11C3                          l3536 0F95                          l3528 0F8D  
                        l3480 0EAE                          l3464 0E6E                          l3448 0DFA  
                        l3466 0E87                          l3538 0DC1                          l3396 12ED  
                        l3476 0EA8                          l3398 12FB                          l3496 0F1A  
                        l3488 0EDB                          l3498 0F1E                          l2896 123E  
                        STR_1 07D0                          STR_2 07DE                          STR_3 07DE  
                        STR_4 07DE                          STR_5 07DE                          STR_6 07DE  
                        STR_7 07C2                          STR_8 07B4                          STR_9 07DE  
                        u4215 12F0                          u4305 128B                          u4235 12FC  
                        u4315 1294                          u4245 1308                          u4255 1312  
                        u4175 11CC                          u3625 0818                          u4185 11D3  
                        u4425 0F02                          u2915 1524                          u2925 1539  
                        u4285 127A                          u4607 1436                          u3655 1128  
                        u2935 154B                          u4527 0A18                          u4617 1444  
                        u4385 0ECD                          u4537 0ABC                          u4627 1450  
                        u4547 1099                          u3595 1149                          u4637 110D  
                        u4557 13F2                          u4647 11F0                          u4567 1402  
                        u2895 1516                          u4657 11FE                          u4577 1410  
                        u4667 120A                          u4587 141C                          u4677 1082  
                        u4597 1428                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 097A                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 105D                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 1088                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 080D                         ??_ISR 00C8  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1453               __end_of___aldiv 156E                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 1800                         STR_10 07A5  
                       STR_11 0763                         STR_12 0780                         STR_13 0794  
                       STR_14 07F7                         STR_15 07F7                         STR_16 07E6  
                       STR_17 07F1                 __CFG_WDTE$OFF 0000                         STR_18 07E9  
                       STR_19 073B               __end_of___ftdiv 1626               __end_of___ftneg 1018  
             __end_of___ftmul 16F7                         _T1CON 0010               __end_of___fttol 14DF  
             __end_of___lwdiv 1323                         i1l118 0971                         i1l128 0C10  
                       i1l227 1019                         i1l180 0DA5                         i1l184 0C89  
             __end_of___lwmod 12A5                         i1l187 0CB2                         i1l765 13CF  
                       i1l598 1182                         i1l759 13B6                         i1l788 179F  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 004F                         _derro 0193  
             __end_of_dpowers 073B               __end_of_max_val 10F3               __end_of_isdigit 104B  
               ___ftpack@sign 0074                         _trimf 0856                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 11BF  
            __end_ofi1___wmul 119B                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 1000            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00CC                ?_LCD_WriteData 0070                   ?_USART_Init 00DB  
       i1TIMER0_Set@contagens 0070               __initialization 0019                  __end_of_main 0AC3  
                      ??_main 00E3                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 120D                    Fuzzy@a_232 005B                    Fuzzy@a_233 005D  
                  Fuzzy@a_234 005F                    Fuzzy@a_235 0061                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0069                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 13E8                        ?_trimf 0047  
                      i1l2300 1736                        i1l2400 134A                        i1l2320 1771  
                      i1l2312 1750                        i1l3200 0C3E                        i1l2330 178F  
                      i1l2322 1776                        i1l2260 138F                        i1l2404 1371  
                      i1l2340 17C3                        i1l2332 179B                        i1l2324 177A  
                      i1l3212 0C6C                        i1l2270 13BB                        i1l2262 139B  
                      i1l2350 17E6                        i1l2318 1765                        i1l3222 0C8A  
                      i1l3206 0C55                        i1l2272 13C5                        i1l2264 13A0  
                      i1l2256 1388                        i1l2600 1693                        i1l2336 17B1  
                      i1l2360 1586                        i1l2440 08CF                        i1l3240 0CCB  
                      i1l2290 1720                        i1l3146 117A                        i1l3234 0CB4  
                      i1l2612 16BB                        i1l2604 16A3                        i1l2380 15E1  
                      i1l3252 0CF9                        i1l2294 1727                        i1l2366 159C  
                      i1l2470 0B6E                        i1l2446 0954                        i1l3174 12D1  
                      i1l3166 12AD                        i1l3246 0CE2                        i1l3270 0D44  
                      i1l2616 16CB                        i1l2632 146B                        i1l2464 0B3C  
                      i1l2800 0415                        i1l3168 12BB                        i1l3264 0D27  
                      i1l2650 149D                        i1l3178 12DC                        i1l3282 0D61  
                      i1l3258 0D10                        i1l2660 14C5                        i1l2652 14AD  
                      i1l2388 1600                        i1l2476 0BF3                        i1l2582 163E  
                      i1l2662 14C8                        i1l2830 058D                        i1l2814 04B3  
                      i1l2750 013A                        i1l3294 0DA0                        i1l2840 05DC  
                      i1l2824 057E                        i1l2728 1155                        i1l3296 0DA1  
                      i1l2666 14D6                        i1l2658 14BA                        i1l2834 05AA  
                      i1l2818 0517                        i1l2746 011D                        i1l2588 1654  
                      i1l2852 0618                        i1l2844 05F5                        i1l2764 01D8  
                      i1l2790 0350                        i1l2774 02A3                        i1l2768 023C  
                      i1l2858 06CF                        i1l2794 03AE                        i1l2884 10D2  
                      i1l2876 10C3                        u220_25 13BE                        u302_25 16A4  
                      u223_25 13D6                        u303_25 16AC                        u311_25 1472  
                      u216_25 1394                        u240_25 177B                        u218_25 13AF  
                      u314_25 149E                        u234_25 1751                        u307_25 16CC  
                      u243_25 1790                        u251_25 15AE                        u260_21 1364  
                      u260_22 1365                        u260_23 136A                        u260_24 136B  
                      u308_25 16D4                        u252_25 15C0                        u340_25 02A1  
                      u317_25 14BC                        u237_25 1766                        u253_25 15E2  
                      u254_25 15F3                        u334_25 10B0                        u350_25 058B  
                      u255_25 1601                        u343_25 034E                        u345_25 0413  
                      u258_21 133D              __end_of___lwtoft 1071                        u258_22 133E  
                      u258_23 1343                        u258_24 1344                        u354_25 05F3  
                      u338_25 01D6                        u355_25 0616                        u347_25 04B1  
                      u356_25 06CD                        u349_25 057C           __size_of_TIMER0_Set 0008  
                      u390_25 12B0                        u392_25 12BC                        u393_25 12C8  
                      u298_25 1660                        u394_25 12D2                        u386_25 1183  
                      u299_25 1672                        u387_25 118A                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 0059              LCD_WriteCmd@Byte 00CD  
         i1_USART_WriteString 1155                        ___ftge 1323                     ??___aldiv 00D4  
                      ___wmul 11BF                     ??___ftadd 0030                _PWM_DutyCycle1 1113  
              _PWM_DutyCycle2 1134              ?_USART_WriteChar 0070                     ??___ftdiv 003D  
                   ??___ftneg 0073                        _deltaV 00C0                     ??___ftmul 0020  
                   ??___fttol 0074                     ??___lwdiv 00D0                     ??___lwmod 00D8  
                      _fitemp 00A0         USART_ReceiveChar@byte 0074                        _trapmf 0AC3  
                      _pulsos 00C2                        _status 019A         ___ftmul@f3_as_product 0025  
                   ??_max_val 007C             __end_ofi1___lwdiv 12E3                     ??_isdigit 00CC  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 004A                        trimf@b 004D  
                      trimf@c 0050                        trimf@x 0047                     ??_sprintf 00DD  
               ?i1_TIMER0_Set 0070       __end_of__initialization 004B                     ?_LCD_Init 0070  
                  ___ftadd@f1 002A                    ___ftadd@f2 002D               ??_LCD_WriteData 00CC  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 0037                    ___ftdiv@f3 0042                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 1134        __end_of_PWM_DutyCycle2 1155                    ___ftmul@f1 0078  
                  ___ftmul@f2 007B                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 0721                  __pidataBANK1 1008                  __pidataBANK3 07FC  
               LCD_Cursor@Col 00CC                 LCD_Cursor@Row 00CE                  ??_LCD_Cursor 00CD  
             _LCD_WriteString 120D                 __end_of_trimf 097A                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00CC          __end_of_LCD_WriteCmd 1088         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 01BB                       ??_trimf 007E                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 1113                    ??_LCD_Init 00CE  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CC               ?_PWM_DutyCycle2 00CC  
                  __pmaintext 097A                   Fuzzy@mantem 0066                       ?___ftge 0070  
                     ?___wmul 00CC                    __pintentry 0004                  ??_TIMER0_Set 00CC  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0047                    ??_PWM_Init 00CC                    ??i1___wmul 007C  
                   ?___lwtoft 0078          __size_of_TIMER0_Init 000B                       _SSPCON2 0091  
                  __stringtab 0721            __end_of_TIMER0_Set 1028       __end_of_LCD_WriteString 123E  
                   _ADCResult 0196                  ??_USART_Init 00DF             LCD_WriteData@Byte 00CD  
                     ___aldiv 14DF               __size_of___ftge 005D                       ___ftadd 16F7  
                     ___ftdiv 156E                       ___ftneg 1010               __size_of___wmul 0025  
                     ___ftmul 1626                       ___fttol 1453                       ___lwdiv 12E3  
                     ___lwmod 126F                    ??___ftpack 0075                       __ptext1 0DB6  
                     __ptext2 103B                       __ptext3 11BF                       __ptext4 126F  
                     __ptext5 12E3                       __ptext6 123E                       __ptext7 0800  
                     __ptext8 080D                       __ptext9 14DF                    _pas_cooler 00E6  
                  ??___lwtoft 007B               __size_of_trapmf 0156                  __size_of_ISR 019D  
                   _T1CONbits 0010                       _dpowers 0731             i1___lwdiv@divisor 0070  
                   _T2CONbits 0012                       _max_val 10D5                       _isdigit 103B  
           i1___lwdiv@counter 0077              ___aldiv@dividend 00D0                     _LCD_Clear 11E4  
          __end_of_USART_Init 0856                       _sprintf 0DB6                       clrloop0 1029  
        end_of_initialization 004B                     _RCSTAbits 0018              ___aldiv@quotient 00D7  
                     trapmf@a 004A                       trapmf@b 004D                       trapmf@c 0050  
                     trapmf@d 0053                       trapmf@x 0047                       trimf@ua 0053  
        __end_ofi1_TIMER0_Set 1010         i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017  
                   _PORTBbits 0006                     _PORTEbits 0009                    ?_LCD_Clear 0070  
            i1_PWM_DutyCycle2 109F             __size_of_ADC_Init 0012                     i1___lwdiv 12A5  
                _contador_rb6 0198           PWM_DutyCycle1@valor 00CC                    _total_area 00B5  
         PWM_DutyCycle2@valor 00CC                   _CCP1CONbits 0017                   ___ftdiv@exp 0045  
                 _CCP2CONbits 001D                     _TXSTAbits 0098              ?_LCD_WriteString 00CE  
           __size_of_LCD_Init 006B                  _LCD_WriteCmd 1071                   ___ftmul@exp 0024  
              __end_of___ftge 1380                __end_of___wmul 11E4             i1_USART_WriteChar 1018  
          ?i1_USART_WriteChar 0070                __end_of_trapmf 0C19      __size_of_USART_WriteChar 000D  
           __size_of_PWM_Init 0024           start_initialization 0019             __size_ofi1___wmul 0023  
                 __end_of_ISR 0DB6           ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070  
            ??_PWM_DutyCycle1 00CE              ??_PWM_DutyCycle2 00CE         __end_of_LCD_WriteData 109F  
           _USART_ReceiveChar 10BA                      ??___ftge 0076            ?_USART_ReceiveChar 0070  
   __end_ofi1_USART_WriteChar 1020                      ??___wmul 00D0                   __pdataBANK1 00E6  
                 __pdataBANK3 01BF   __end_ofi1_USART_WriteString 1178                      ??_trapmf 007E  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00C8  
               __pcstackBANK3 01B4                   ??_LCD_Clear 00CE           __end_of__stringdata 07FC  
                _isdigit$1449 00CC                   sprintf@_val 01B6                   sprintf@flag 01BA  
                 sprintf@prec 01B5     __end_of_USART_ReceiveChar 10D5         __size_ofi1_TIMER0_Set 0006  
            ___lwdiv@dividend 00CE           TIMER0_Set@contagens 00CC                  Fuzzy@aumenta 006C  
                    ?___aldiv 00CC                      ?___ftadd 002A                      ?___ftdiv 0037  
                    ?___ftneg 0070                      ?___ftmul 0078                      ?___fttol 0070  
                    ?___lwdiv 00CC                      ?___lwmod 00D4                     __pstrings 0721  
                   _ativa_fan 0190                 ??_TIMER0_Init 00CC            USART_Init@BaudRate 00DB  
                    ?_max_val 0020                      ?_isdigit 0070                      _ADC_Init 104B  
                   _fop_rule1 00A3                     _fop_rule2 00A6                     _fop_rule3 00A9  
              __size_of_Fuzzy 06D2              ___lwdiv@quotient 00D2                   ??i1___lwdiv 0074  
                    ?_sprintf 00DA                __size_of_trimf 0124             ??_USART_WriteChar 00CC  
                i1_TIMER0_Set 100A               ___aldiv@divisor 00CC             interrupt_function 0004  
             ___aldiv@counter 00D5                      _LCD_Init 13E8                ___wmul@product 00D0  
                   clear_ram0 1028                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 019C  
    __end_ofi1_PWM_DutyCycle2 10BA                     _tempo_rb6 019E    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 01AA                   _display_pwm 01A0                    _ADCON0bits 001F  
                 __stringbase 0730                    _ADCON1bits 009F                   __stringdata 073B  
                    _PWM_Init 119B             ___wmul@multiplier 00CC                      i1___wmul 1178  
         __end_of_TIMER0_Init 103B    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@tip 0063              __size_of___aldiv 008F              __size_of___ftadd 0109  
            __size_of___ftdiv 00B8              __size_of___ftneg 0008              __size_of___ftmul 00D1  
            __size_of___fttol 008C              __size_of___lwdiv 0040              __size_of___lwmod 0036  
                    ___ftpack 1380            __end_of__stringtab 0731                      ___lwtoft 105D  
            __size_of_max_val 001E              __size_of_isdigit 0010               ___lwdiv@divisor 00CC  
             ___lwdiv@counter 00D1             _USART_WriteString 123E                      __ptext10 1020  
                    __ptext11 1030                      __ptext20 1071                      __ptext12 119B  
                    __ptext21 104B                      __ptext13 1134                      __ptext30 109F  
                    __ptext22 0C19                      __ptext14 1113                      __ptext31 0856  
                    __ptext23 1178                      __ptext15 120D                      __ptext40 1626  
                    __ptext32 0AC3                      __ptext24 12A5                      __ptext16 1088  
                    __ptext41 1380                      __ptext33 1010                      __ptext25 100A  
                    __ptext17 13E8                      __ptext34 156E                      __ptext26 10BA  
                    __ptext18 10F3                      __ptext35 16F7                      __ptext27 1155  
                    __ptext19 11E4                      __ptext36 10D5                      __ptext28 1018  
                    __ptext37 1323                      __ptext29 004F                      __ptext38 105D  
                    __ptext39 1453            ?_USART_WriteString 00CD              __size_of_sprintf 024A  
          i1___lwdiv@dividend 0072                 __size_of_main 0149           USART_WriteChar@byte 00CC  
         ??_USART_WriteString 00CF        i1USART_WriteString@str 0071                      _setpoint 01BF  
                  _LCD_Cursor 10F3      __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075  
                 _TIMER0_Init 1030                    _INTCONbits 000B     __end_of_USART_WriteString 126F  
                    max_val@a 0020                      max_val@b 0023                      isdigit@c 00CD  
                    intlevel1 0000                     sprintf@ap 01B4                     sprintf@sp 01BD  
            ___lwmod@dividend 00D6                     stringcode 072B          USART_WriteString@str 00CD  
                  _TIMER0_Set 1020                      trapmf@ua 0056               _USART_WriteChar 0800  
                    sprintf@c 01BE                      sprintf@f 00DA               ___lwmod@divisor 00D4  
             ___lwmod@counter 00D9                      stringdir 072B                      stringtab 0721  
                ___aldiv@sign 00D6        __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014  
                  _USART_Init 080D  
