

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 21:59:41 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    58                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0000                     	;# 
   361  0001                     	;# 
   362  0002                     	;# 
   363  0003                     	;# 
   364  0004                     	;# 
   365  0005                     	;# 
   366  0006                     	;# 
   367  0007                     	;# 
   368  0008                     	;# 
   369  0009                     	;# 
   370  000A                     	;# 
   371  000B                     	;# 
   372  000C                     	;# 
   373  000D                     	;# 
   374  000E                     	;# 
   375  000E                     	;# 
   376  000F                     	;# 
   377  0010                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0014                     	;# 
   382  0015                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0017                     	;# 
   386  0018                     	;# 
   387  0019                     	;# 
   388  001A                     	;# 
   389  001B                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001D                     	;# 
   393  001E                     	;# 
   394  001F                     	;# 
   395  0081                     	;# 
   396  0085                     	;# 
   397  0086                     	;# 
   398  0087                     	;# 
   399  0088                     	;# 
   400  0089                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0094                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0088                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  010F                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600                           
   601                           	psect	idataBANK0
   602  12D4                     __pidataBANK0:	
   603                           
   604                           ;initializer for _pas_cooler
   605  12D4  3407               	retlw	7
   606  12D5  3400               	retlw	0
   607                           
   608                           	psect	idataBANK1
   609  12D2                     __pidataBANK1:	
   610                           
   611                           ;initializer for _pwm
   612  12D2  3401               	retlw	1
   613  12D3  3400               	retlw	0
   614  000E                     _TMR1	set	14
   615  001F                     _ADCON0bits	set	31
   616  001E                     _ADRESH	set	30
   617  0017                     _CCP1CON	set	23
   618  0017                     _CCP1CONbits	set	23
   619  001D                     _CCP2CON	set	29
   620  001D                     _CCP2CONbits	set	29
   621  0015                     _CCPR1L	set	21
   622  001B                     _CCPR2L	set	27
   623  000B                     _INTCONbits	set	11
   624  000C                     _PIR1bits	set	12
   625  000D                     _PIR2bits	set	13
   626  0005                     _PORTA	set	5
   627  0006                     _PORTB	set	6
   628  0006                     _PORTBbits	set	6
   629  0007                     _PORTC	set	7
   630  0008                     _PORTD	set	8
   631  0009                     _PORTE	set	9
   632  0009                     _PORTEbits	set	9
   633  001A                     _RCREG	set	26
   634  0018                     _RCSTAbits	set	24
   635  0013                     _SSPBUF	set	19
   636  0014                     _SSPCONbits	set	20
   637  0010                     _T1CON	set	16
   638  0010                     _T1CONbits	set	16
   639  0012                     _T2CONbits	set	18
   640  0001                     _TMR0	set	1
   641  000F                     _TMR1H	set	15
   642  000E                     _TMR1L	set	14
   643  0019                     _TXREG	set	25
   644  00C1                     _OERR	set	193
   645  009F                     _ADCON1bits	set	159
   646  009E                     _ADRESL	set	158
   647  0081                     _OPTION_REGbits	set	129
   648  008C                     _PIE1bits	set	140
   649  008D                     _PIE2bits	set	141
   650  0092                     _PR2	set	146
   651  0099                     _SPBRG	set	153
   652  0093                     _SSPADD	set	147
   653  0091                     _SSPCON2	set	145
   654  0091                     _SSPCON2bits	set	145
   655  0094                     _SSPSTATbits	set	148
   656  0085                     _TRISA	set	133
   657  0086                     _TRISB	set	134
   658  0087                     _TRISC	set	135
   659  0088                     _TRISD	set	136
   660  0089                     _TRISE	set	137
   661  0098                     _TXSTAbits	set	152
   662  010D                     _EEADR	set	269
   663  010C                     _EEDATA	set	268
   664  018C                     _EECON1bits	set	396
   665  018D                     _EECON2	set	397
   666                           
   667                           	psect	strings
   668  1000                     __pstrings:	
   669  1000                     stringtab:	
   670  1000                     __stringtab:	
   671                           
   672                           ;	String table - string pointers are 1 byte each
   673  1000  1BFF               	btfsc	btemp+1,7
   674  1001  280A               	ljmp	stringcode
   675  1002  1383               	bcf	3,7
   676  1003  187F               	btfsc	btemp+1,0
   677  1004  1783               	bsf	3,7
   678  1005  0800               	movf	0,w
   679  1006  0A84               	incf	4,f
   680  1007  1903               	skipnz
   681  1008  0AFF               	incf	btemp+1,f
   682  1009  0008               	return
   683  100A                     stringcode:	
   684  100A                     stringdir:	
   685  100A  3010               	movlw	high stringdir
   686  100B  008A               	movwf	10
   687  100C  0804               	movf	4,w
   688  100D  0A84               	incf	4,f
   689  100E  0782               	addwf	2,f
   690  100F                     __stringbase:	
   691  100F  3400               	retlw	0
   692  1010                     __end_of__stringtab:	
   693  1010                     __stringdata:	
   694  1010                     STR_4:	
   695  1010  340A               	retlw	10
   696  1011  340D               	retlw	13
   697  1012  3420               	retlw	32	;' '
   698  1013  342D               	retlw	45	;'-'
   699  1014  342D               	retlw	45	;'-'
   700  1015  342D               	retlw	45	;'-'
   701  1016  342D               	retlw	45	;'-'
   702  1017  342D               	retlw	45	;'-'
   703  1018  342D               	retlw	45	;'-'
   704  1019  342D               	retlw	45	;'-'
   705  101A  3420               	retlw	32	;' '
   706  101B  3445               	retlw	69	;'E'
   707  101C  3453               	retlw	83	;'S'
   708  101D  3454               	retlw	84	;'T'
   709  101E  344F               	retlw	79	;'O'
   710  101F  3455               	retlw	85	;'U'
   711  1020  3452               	retlw	82	;'R'
   712  1021  344F               	retlw	79	;'O'
   713  1022  3420               	retlw	32	;' '
   714  1023  3444               	retlw	68	;'D'
   715  1024  3445               	retlw	69	;'E'
   716  1025  3420               	retlw	32	;' '
   717  1026  3450               	retlw	80	;'P'
   718  1027  3449               	retlw	73	;'I'
   719  1028  344C               	retlw	76	;'L'
   720  1029  3448               	retlw	72	;'H'
   721  102A  3441               	retlw	65	;'A'
   722  102B  3420               	retlw	32	;' '
   723  102C  342D               	retlw	45	;'-'
   724  102D  342D               	retlw	45	;'-'
   725  102E  342D               	retlw	45	;'-'
   726  102F  342D               	retlw	45	;'-'
   727  1030  342D               	retlw	45	;'-'
   728  1031  342D               	retlw	45	;'-'
   729  1032  342D               	retlw	45	;'-'
   730  1033  3420               	retlw	32	;' '
   731  1034  340A               	retlw	10
   732  1035  340D               	retlw	13
   733  1036  3420               	retlw	32	;' '
   734  1037  3400               	retlw	0
   735  1038                     STR_2:	
   736  1038  3449               	retlw	73	;'I'
   737  1039  346E               	retlw	110	;'n'
   738  103A  3469               	retlw	105	;'i'
   739  103B  3463               	retlw	99	;'c'
   740  103C  3469               	retlw	105	;'i'
   741  103D  3461               	retlw	97	;'a'
   742  103E  346C               	retlw	108	;'l'
   743  103F  3469               	retlw	105	;'i'
   744  1040  347A               	retlw	122	;'z'
   745  1041  3461               	retlw	97	;'a'
   746  1042  346E               	retlw	110	;'n'
   747  1043  3464               	retlw	100	;'d'
   748  1044  346F               	retlw	111	;'o'
   749  1045  342E               	retlw	46	;'.'
   750  1046  342E               	retlw	46	;'.'
   751  1047  342E               	retlw	46	;'.'
   752  1048  3400               	retlw	0
   753  1049                     STR_1:	
   754  1049  340A               	retlw	10
   755  104A  340D               	retlw	13
   756  104B  3464               	retlw	100	;'d'
   757  104C  3465               	retlw	101	;'e'
   758  104D  3473               	retlw	115	;'s'
   759  104E  346C               	retlw	108	;'l'
   760  104F  3469               	retlw	105	;'i'
   761  1050  3467               	retlw	103	;'g'
   762  1051  3461               	retlw	97	;'a'
   763  1052  3464               	retlw	100	;'d'
   764  1053  346F               	retlw	111	;'o'
   765  1054  340A               	retlw	10
   766  1055  340D               	retlw	13
   767  1056  3400               	retlw	0
   768  1057                     STR_3:	
   769  1057  346B               	retlw	107	;'k'
   770  1058  346D               	retlw	109	;'m'
   771  1059  3448               	retlw	72	;'H'
   772  105A  343A               	retlw	58	;':'
   773  105B  3420               	retlw	32	;' '
   774  105C  3400               	retlw	0
   775  105D                     __end_of__stringdata:	
   776                           
   777                           ; #config settings
   778  0000                     
   779                           	psect	cinit
   780  0015                     start_initialization:	
   781  0015                     __initialization:	
   782                           
   783                           ; Clear objects allocated to BANK0
   784  0015  01E8               	clrf	__pbssBANK0& (0+127)
   785  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   786  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   787  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   788  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   789  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   790                           
   791                           ; Clear objects allocated to BANK1
   792  001B  1383               	bcf	3,7	;select IRP bank0
   793  001C  30C2               	movlw	low __pbssBANK1
   794  001D  0084               	movwf	4
   795  001E  30E2               	movlw	low (__pbssBANK1+32)
   796  001F  160A  118A  22EC  120A  118A  	fcall	clear_ram0
   797                           
   798                           ; Clear objects allocated to BANK3
   799  0024  1783               	bsf	3,7	;select IRP bank2
   800  0025  3090               	movlw	low __pbssBANK3
   801  0026  0084               	movwf	4
   802  0027  30AD               	movlw	low (__pbssBANK3+29)
   803  0028  160A  118A  22EC  120A  118A  	fcall	clear_ram0
   804                           
   805                           ; Initialize objects allocated to BANK1
   806  002D  1683               	bsf	3,5	;RP0=1, select bank1
   807  002E  1303               	bcf	3,6	;RP1=0, select bank1
   808  002F  160A  118A  22D2  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   809  0034  00E2               	movwf	__pdataBANK1& (0+127)
   810  0035  160A  118A  22D3  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   811  003A  00E3               	movwf	(__pdataBANK1+1)& (0+127)
   812                           
   813                           ; Initialize objects allocated to BANK0
   814  003B  1283               	bcf	3,5	;RP0=0, select bank0
   815  003C  1303               	bcf	3,6	;RP1=0, select bank0
   816  003D  160A  118A  22D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   817  0042  00EE               	movwf	__pdataBANK0& (0+127)
   818  0043  160A  118A  22D5   	fcall	__pidataBANK0+1	;fetch initializer
   819  0046  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   820  0047                     end_of_initialization:	
   821                           ;End of C runtime variable initialization code
   822                           
   823  0047                     __end_of__initialization:	
   824  0047  0183               	clrf	3
   825  0048  120A  158A  2A9E   	ljmp	_main	;jump to C main() function
   826                           
   827                           	psect	bssBANK0
   828  0068                     __pbssBANK0:	
   829  0068                     _deltaV:	
   830  0068                     	ds	2
   831  006A                     _rpm:	
   832  006A                     	ds	2
   833  006C                     _setpointUI:	
   834  006C                     	ds	2
   835                           
   836                           	psect	dataBANK0
   837  006E                     __pdataBANK0:	
   838  006E                     _pas_cooler:	
   839  006E                     	ds	2
   840                           
   841                           	psect	bssBANK1
   842  00C2                     __pbssBANK1:	
   843  00C2                     _fitemp:	
   844  00C2                     	ds	3
   845  00C5                     _rulegrande:	
   846  00C5                     	ds	3
   847  00C8                     _rulemedio:	
   848  00C8                     	ds	3
   849  00CB                     _rulepequeno:	
   850  00CB                     	ds	3
   851  00CE                     _sum:	
   852  00CE                     	ds	3
   853  00D1                     _total_area:	
   854  00D1                     	ds	3
   855  00D4                     _ADCResult:	
   856  00D4                     	ds	2
   857  00D6                     _antigoUI:	
   858  00D6                     	ds	2
   859  00D8                     _contagens_tm0:	
   860  00D8                     	ds	2
   861  00DA                     _pulsos:	
   862  00DA                     	ds	2
   863  00DC                     _status:	
   864  00DC                     	ds	2
   865  00DE                     _x:	
   866  00DE                     	ds	2
   867  00E0                     _y:	
   868  00E0                     	ds	2
   869                           
   870                           	psect	dataBANK1
   871  00E2                     __pdataBANK1:	
   872  00E2                     _pwm:	
   873  00E2                     	ds	2
   874                           
   875                           	psect	bssBANK3
   876  0190                     __pbssBANK3:	
   877  0190                     _buffer:	
   878  0190                     	ds	13
   879  019D                     _antigo:	
   880  019D                     	ds	3
   881  01A0                     _ativa_fan:	
   882  01A0                     	ds	3
   883  01A3                     _display_rpm:	
   884  01A3                     	ds	10
   885                           
   886                           	psect	clrtext
   887  12EC                     clear_ram0:	
   888                           ;	Called with FSR containing the base address, and
   889                           ;	W with the last address+1
   890                           
   891  12EC  0064               	clrwdt	;clear the watchdog before getting into this loop
   892  12ED                     clrloop0:	
   893  12ED  0180               	clrf	0	;clear RAM location pointed to by FSR
   894  12EE  0A84               	incf	4,f	;increment pointer
   895  12EF  0604               	xorwf	4,w	;XOR with final address
   896  12F0  1903               	btfsc	3,2	;have we reached the end yet?
   897  12F1  3400               	retlw	0	;all done for this memory range, return
   898  12F2  0604               	xorwf	4,w	;XOR again to restore value
   899  12F3  2AED               	goto	clrloop0	;do the next byte
   900                           
   901                           	psect	cstackBANK3
   902  01AD                     __pcstackBANK3:	
   903  01AD                     ?_PWM_DutyCycle2:	
   904  01AD                     ??_TIMER0_Set:	
   905                           ; 0 bytes @ 0x0
   906                           
   907  01AD                     ??_TIMER0_Init:	
   908                           ; 0 bytes @ 0x0
   909                           
   910  01AD                     ??_ADC_Init:	
   911                           ; 0 bytes @ 0x0
   912                           
   913  01AD                     ??_PWM_Init:	
   914                           ; 0 bytes @ 0x0
   915                           
   916  01AD                     ?_LCD_Cursor:	
   917                           ; 0 bytes @ 0x0
   918                           
   919  01AD                     ?_PWM_DutyCycle1:	
   920                           ; 0 bytes @ 0x0
   921                           
   922  01AD                     ??_LCD_WriteCmd:	
   923                           ; 0 bytes @ 0x0
   924                           
   925  01AD                     ??_LCD_WriteData:	
   926                           ; 0 bytes @ 0x0
   927                           
   928  01AD                     ?___aldiv:	
   929                           ; 0 bytes @ 0x0
   930                           
   931  01AD                     TIMER0_Set@contagens:	
   932                           ; 4 bytes @ 0x0
   933                           
   934  01AD                     LCD_Cursor@Col:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  01AD                     PWM_DutyCycle1@valor:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  01AD                     PWM_DutyCycle2@valor:	
   941                           ; 2 bytes @ 0x0
   942                           
   943  01AD                     ___aldiv@divisor:	
   944                           ; 2 bytes @ 0x0
   945                           
   946                           
   947                           ; 4 bytes @ 0x0
   948  01AD                     	ds	1
   949  01AE                     ??_LCD_Cursor:	
   950  01AE                     LCD_WriteCmd@Byte:	
   951                           ; 0 bytes @ 0x1
   952                           
   953  01AE                     LCD_WriteData@Byte:	
   954                           ; 1 bytes @ 0x1
   955                           
   956                           
   957                           ; 1 bytes @ 0x1
   958  01AE                     	ds	1
   959  01AF                     ??_PWM_DutyCycle2:	
   960  01AF                     ??_LCD_Init:	
   961                           ; 0 bytes @ 0x2
   962                           
   963  01AF                     ?_LCD_WriteString:	
   964                           ; 0 bytes @ 0x2
   965                           
   966  01AF                     ??_PWM_DutyCycle1:	
   967                           ; 0 bytes @ 0x2
   968                           
   969  01AF                     ??_LCD_Clear:	
   970                           ; 0 bytes @ 0x2
   971                           
   972  01AF                     LCD_Cursor@Row:	
   973                           ; 0 bytes @ 0x2
   974                           
   975  01AF                     LCD_WriteString@Str:	
   976                           ; 1 bytes @ 0x2
   977                           
   978                           
   979                           ; 2 bytes @ 0x2
   980  01AF                     	ds	2
   981  01B1                     ??_LCD_WriteString:	
   982  01B1                     ___aldiv@dividend:	
   983                           ; 0 bytes @ 0x4
   984                           
   985                           
   986                           ; 4 bytes @ 0x4
   987  01B1                     	ds	4
   988  01B5                     ??___aldiv:	
   989                           
   990                           ; 0 bytes @ 0x8
   991  01B5                     	ds	1
   992  01B6                     ___aldiv@counter:	
   993                           
   994                           ; 1 bytes @ 0x9
   995  01B6                     	ds	1
   996  01B7                     ___aldiv@sign:	
   997                           
   998                           ; 1 bytes @ 0xA
   999  01B7                     	ds	1
  1000  01B8                     ___aldiv@quotient:	
  1001                           
  1002                           ; 4 bytes @ 0xB
  1003  01B8                     	ds	4
  1004  01BC                     ?_USART_Init:	
  1005  01BC                     USART_Init@BaudRate:	
  1006                           ; 0 bytes @ 0xF
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0xF
  1010  01BC                     	ds	4
  1011  01C0                     ??_USART_Init:	
  1012                           
  1013                           ; 0 bytes @ 0x13
  1014  01C0                     	ds	4
  1015  01C4                     ??_main:	
  1016                           
  1017                           ; 0 bytes @ 0x17
  1018  01C4                     	ds	3
  1019                           
  1020                           	psect	cstackBANK1
  1021  00A0                     __pcstackBANK1:	
  1022  00A0                     _Fuzzy$1688:	
  1023                           
  1024                           ; 3 bytes @ 0x0
  1025  00A0                     	ds	3
  1026  00A3                     _Fuzzy$1689:	
  1027                           
  1028                           ; 2 bytes @ 0x3
  1029  00A3                     	ds	2
  1030  00A5                     Fuzzy@reajuste:	
  1031                           
  1032                           ; 3 bytes @ 0x5
  1033  00A5                     	ds	3
  1034  00A8                     _Fuzzy$248:	
  1035                           
  1036                           ; 2 bytes @ 0x8
  1037  00A8                     	ds	2
  1038  00AA                     Fuzzy@a:	
  1039                           
  1040                           ; 2 bytes @ 0xA
  1041  00AA                     	ds	2
  1042  00AC                     Fuzzy@a_241:	
  1043                           
  1044                           ; 2 bytes @ 0xC
  1045  00AC                     	ds	2
  1046  00AE                     Fuzzy@a_242:	
  1047                           
  1048                           ; 2 bytes @ 0xE
  1049  00AE                     	ds	2
  1050  00B0                     Fuzzy@a_243:	
  1051                           
  1052                           ; 2 bytes @ 0x10
  1053  00B0                     	ds	2
  1054  00B2                     Fuzzy@delta:	
  1055                           
  1056                           ; 2 bytes @ 0x12
  1057  00B2                     	ds	2
  1058  00B4                     Fuzzy@soma:	
  1059                           
  1060                           ; 3 bytes @ 0x14
  1061  00B4                     	ds	3
  1062  00B7                     Fuzzy@total_area:	
  1063                           
  1064                           ; 3 bytes @ 0x17
  1065  00B7                     	ds	3
  1066  00BA                     Fuzzy@a_246:	
  1067                           
  1068                           ; 2 bytes @ 0x1A
  1069  00BA                     	ds	2
  1070  00BC                     Fuzzy@rule:	
  1071                           
  1072                           ; 3 bytes @ 0x1C
  1073  00BC                     	ds	3
  1074  00BF                     Fuzzy@x:	
  1075                           
  1076                           ; 3 bytes @ 0x1F
  1077  00BF                     	ds	3
  1078                           
  1079                           	psect	cstackCOMMON
  1080  0070                     __pcstackCOMMON:	
  1081  0070                     ?_USART_WriteChar:	
  1082  0070                     ??_USART_WriteChar:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ?_USART_WriteString:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ?_TIMER0_Set:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?_TIMER0_Init:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_ADC_Init:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_PWM_Init:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?_LCD_Init:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ?_LCD_Clear:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?_send:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_Fuzzy:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_ISR:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_main:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_LCD_WriteCmd:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_LCD_WriteData:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?___ftge:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?i1_TIMER0_Set:	
  1128                           ; 1 bit 
  1129                           
  1130  0070                     ??i1_TIMER0_Set:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?i1_PWM_DutyCycle2:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?_USART_ReceiveChar:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_abs:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?___lwdiv:	
  1143                           ; 2 bytes @ 0x0
  1144                           
  1145  0070                     ?___ftpack:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0070                     USART_WriteChar@byte:	
  1149                           ; 3 bytes @ 0x0
  1150                           
  1151  0070                     i1TIMER0_Set@contagens:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     abs@a:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ___lwdiv@divisor:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160  0070                     i1PWM_DutyCycle2@valor:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163  0070                     ___ftpack@arg:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0070                     ___ftge@ff1:	
  1167                           ; 3 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0071                     ??_USART_WriteString:	
  1173                           
  1174                           ; 0 bytes @ 0x1
  1175  0071                     	ds	1
  1176  0072                     ??_abs:	
  1177  0072                     ??i1_PWM_DutyCycle2:	
  1178                           ; 0 bytes @ 0x2
  1179                           
  1180  0072                     USART_WriteString@str:	
  1181                           ; 0 bytes @ 0x2
  1182                           
  1183  0072                     ___lwdiv@dividend:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x2
  1188  0072                     	ds	1
  1189  0073                     ??_USART_ReceiveChar:	
  1190  0073                     ___ftpack@exp:	
  1191                           ; 0 bytes @ 0x3
  1192                           
  1193  0073                     ___ftge@ff2:	
  1194                           ; 1 bytes @ 0x3
  1195                           
  1196                           
  1197                           ; 3 bytes @ 0x3
  1198  0073                     	ds	1
  1199  0074                     ??___lwdiv:	
  1200  0074                     USART_ReceiveChar@byte:	
  1201                           ; 0 bytes @ 0x4
  1202                           
  1203  0074                     ___ftpack@sign:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x4
  1208  0074                     	ds	1
  1209  0075                     ??___ftpack:	
  1210  0075                     ___lwdiv@quotient:	
  1211                           ; 0 bytes @ 0x5
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x5
  1215  0075                     	ds	1
  1216  0076                     ??___ftge:	
  1217                           
  1218                           ; 0 bytes @ 0x6
  1219  0076                     	ds	1
  1220  0077                     ___lwdiv@counter:	
  1221                           
  1222                           ; 1 bytes @ 0x7
  1223  0077                     	ds	1
  1224  0078                     ?___awtoft:	
  1225  0078                     ?___lwtoft:	
  1226                           ; 3 bytes @ 0x8
  1227                           
  1228  0078                     ___awtoft@c:	
  1229                           ; 3 bytes @ 0x8
  1230                           
  1231  0078                     ___lwtoft@c:	
  1232                           ; 2 bytes @ 0x8
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x8
  1236  0078                     	ds	3
  1237  007B                     ??___awtoft:	
  1238  007B                     ??___lwtoft:	
  1239                           ; 0 bytes @ 0xB
  1240                           
  1241                           
  1242                           ; 0 bytes @ 0xB
  1243  007B                     	ds	2
  1244  007D                     ___awtoft@sign:	
  1245                           
  1246                           ; 1 bytes @ 0xD
  1247  007D                     	ds	1
  1248  007E                     ??_trapmf:	
  1249  007E                     ??_maximo:	
  1250                           ; 0 bytes @ 0xE
  1251                           
  1252  007E                     ??_minimo:	
  1253                           ; 0 bytes @ 0xE
  1254                           
  1255  007E                     ??___wmul:	
  1256                           ; 0 bytes @ 0xE
  1257                           
  1258  007E                     ??___ftneg:	
  1259                           ; 0 bytes @ 0xE
  1260                           
  1261                           
  1262                           	psect	cstackBANK0
  1263  0020                     __pcstackBANK0:	
  1264                           ; 0 bytes @ 0xE
  1265                           
  1266  0020                     ?_minimo:	
  1267  0020                     ?___ftneg:	
  1268                           ; 3 bytes @ 0x0
  1269                           
  1270  0020                     minimo@a:	
  1271                           ; 3 bytes @ 0x0
  1272                           
  1273  0020                     ___ftneg@f1:	
  1274                           ; 3 bytes @ 0x0
  1275                           
  1276                           
  1277                           ; 3 bytes @ 0x0
  1278  0020                     	ds	3
  1279  0023                     ?___ftadd:	
  1280  0023                     minimo@b:	
  1281                           ; 3 bytes @ 0x3
  1282                           
  1283  0023                     ___ftadd@f1:	
  1284                           ; 3 bytes @ 0x3
  1285                           
  1286                           
  1287                           ; 3 bytes @ 0x3
  1288  0023                     	ds	3
  1289  0026                     ?_maximo:	
  1290  0026                     maximo@a:	
  1291                           ; 3 bytes @ 0x6
  1292                           
  1293  0026                     ___ftadd@f2:	
  1294                           ; 3 bytes @ 0x6
  1295                           
  1296                           
  1297                           ; 3 bytes @ 0x6
  1298  0026                     	ds	3
  1299  0029                     ??___ftadd:	
  1300  0029                     maximo@b:	
  1301                           ; 0 bytes @ 0x9
  1302                           
  1303                           
  1304                           ; 3 bytes @ 0x9
  1305  0029                     	ds	3
  1306  002C                     ?___fttol:	
  1307  002C                     ___fttol@f1:	
  1308                           ; 4 bytes @ 0xC
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0xC
  1312  002C                     	ds	1
  1313  002D                     ___ftadd@sign:	
  1314                           
  1315                           ; 1 bytes @ 0xD
  1316  002D                     	ds	1
  1317  002E                     ___ftadd@exp2:	
  1318                           
  1319                           ; 1 bytes @ 0xE
  1320  002E                     	ds	1
  1321  002F                     ___ftadd@exp1:	
  1322                           
  1323                           ; 1 bytes @ 0xF
  1324  002F                     	ds	1
  1325  0030                     ??___fttol:	
  1326  0030                     ?___ftdiv:	
  1327                           ; 0 bytes @ 0x10
  1328                           
  1329  0030                     ___ftdiv@f2:	
  1330                           ; 3 bytes @ 0x10
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x10
  1334  0030                     	ds	3
  1335  0033                     ___ftdiv@f1:	
  1336                           
  1337                           ; 3 bytes @ 0x13
  1338  0033                     	ds	1
  1339  0034                     ___fttol@sign1:	
  1340                           
  1341                           ; 1 bytes @ 0x14
  1342  0034                     	ds	1
  1343  0035                     ___fttol@lval:	
  1344                           
  1345                           ; 4 bytes @ 0x15
  1346  0035                     	ds	1
  1347  0036                     ??___ftdiv:	
  1348                           
  1349                           ; 0 bytes @ 0x16
  1350  0036                     	ds	3
  1351  0039                     ___fttol@exp1:	
  1352                           
  1353                           ; 1 bytes @ 0x19
  1354  0039                     	ds	1
  1355  003A                     ?___wmul:	
  1356  003A                     ___ftdiv@cntr:	
  1357                           ; 2 bytes @ 0x1A
  1358                           
  1359  003A                     ___wmul@multiplier:	
  1360                           ; 1 bytes @ 0x1A
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0x1A
  1364  003A                     	ds	1
  1365  003B                     ___ftdiv@f3:	
  1366                           
  1367                           ; 3 bytes @ 0x1B
  1368  003B                     	ds	1
  1369  003C                     ___wmul@multiplicand:	
  1370                           
  1371                           ; 2 bytes @ 0x1C
  1372  003C                     	ds	2
  1373  003E                     ___ftdiv@exp:	
  1374  003E                     ___wmul@product:	
  1375                           ; 1 bytes @ 0x1E
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x1E
  1379  003E                     	ds	1
  1380  003F                     ___ftdiv@sign:	
  1381                           
  1382                           ; 1 bytes @ 0x1F
  1383  003F                     	ds	1
  1384  0040                     ??_send:	
  1385  0040                     ?_trapmf:	
  1386                           ; 0 bytes @ 0x20
  1387                           
  1388  0040                     trapmf@x:	
  1389                           ; 3 bytes @ 0x20
  1390                           
  1391                           
  1392                           ; 3 bytes @ 0x20
  1393  0040                     	ds	1
  1394  0041                     send@checksum:	
  1395                           
  1396                           ; 1 bytes @ 0x21
  1397  0041                     	ds	1
  1398  0042                     send@velocidade:	
  1399                           
  1400                           ; 2 bytes @ 0x22
  1401  0042                     	ds	1
  1402  0043                     trapmf@a:	
  1403                           
  1404                           ; 3 bytes @ 0x23
  1405  0043                     	ds	1
  1406  0044                     send@index:	
  1407                           
  1408                           ; 1 bytes @ 0x24
  1409  0044                     	ds	2
  1410  0046                     trapmf@b:	
  1411                           
  1412                           ; 3 bytes @ 0x26
  1413  0046                     	ds	3
  1414  0049                     trapmf@c:	
  1415                           
  1416                           ; 3 bytes @ 0x29
  1417  0049                     	ds	3
  1418  004C                     trapmf@d:	
  1419                           
  1420                           ; 3 bytes @ 0x2C
  1421  004C                     	ds	3
  1422  004F                     trapmf@ua:	
  1423                           
  1424                           ; 3 bytes @ 0x2F
  1425  004F                     	ds	3
  1426  0052                     ?___ftmul:	
  1427  0052                     ___ftmul@f1:	
  1428                           ; 3 bytes @ 0x32
  1429                           
  1430                           
  1431                           ; 3 bytes @ 0x32
  1432  0052                     	ds	3
  1433  0055                     ___ftmul@f2:	
  1434                           
  1435                           ; 3 bytes @ 0x35
  1436  0055                     	ds	3
  1437  0058                     ??___ftmul:	
  1438                           
  1439                           ; 0 bytes @ 0x38
  1440  0058                     	ds	4
  1441  005C                     ___ftmul@exp:	
  1442                           
  1443                           ; 1 bytes @ 0x3C
  1444  005C                     	ds	1
  1445  005D                     ___ftmul@f3_as_product:	
  1446                           
  1447                           ; 3 bytes @ 0x3D
  1448  005D                     	ds	3
  1449  0060                     ___ftmul@cntr:	
  1450                           
  1451                           ; 1 bytes @ 0x40
  1452  0060                     	ds	1
  1453  0061                     ___ftmul@sign:	
  1454                           
  1455                           ; 1 bytes @ 0x41
  1456  0061                     	ds	1
  1457  0062                     ??_Fuzzy:	
  1458                           
  1459                           ; 0 bytes @ 0x42
  1460  0062                     	ds	2
  1461  0064                     ??_ISR:	
  1462                           
  1463                           ; 0 bytes @ 0x44
  1464  0064                     	ds	4
  1465                           
  1466                           	psect	maintext
  1467  0A9E                     __pmaintext:	
  1468 ;;
  1469 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1470 ;;
  1471 ;; *************** function _main *****************
  1472 ;; Defined at:
  1473 ;;		line 462 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 17F/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       3       0
  1490 ;;      Totals:         0       0       0       3       0
  1491 ;;Total ram usage:        3 bytes
  1492 ;; Hardware stack levels required when called:    7
  1493 ;; This function calls:
  1494 ;;		_ADC_Init
  1495 ;;		_LCD_Clear
  1496 ;;		_LCD_Cursor
  1497 ;;		_LCD_Init
  1498 ;;		_LCD_WriteString
  1499 ;;		_PWM_DutyCycle1
  1500 ;;		_PWM_DutyCycle2
  1501 ;;		_PWM_Init
  1502 ;;		_TIMER0_Init
  1503 ;;		_TIMER0_Set
  1504 ;;		_USART_Init
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _main
  1512  0A9E                     _main:	
  1513                           
  1514                           ;main.c: 464: TRISA = 0b00000001;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1518  0A9E  3001               	movlw	1
  1519  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0AA0  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0AA1  0085               	movwf	5	;volatile
  1522                           
  1523                           ;main.c: 465: PORTA = 0b00000001;
  1524  0AA2  3001               	movlw	1
  1525  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0AA5  0085               	movwf	5	;volatile
  1528                           
  1529                           ;main.c: 466: TRISB = 0b00000000;
  1530  0AA6  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0AA7  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0AA8  0186               	clrf	6	;volatile
  1533                           
  1534                           ;main.c: 467: PORTB = 0b00000000;
  1535  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0AAB  0186               	clrf	6	;volatile
  1538                           
  1539                           ;main.c: 468: TRISC = 0b10000001;
  1540  0AAC  3081               	movlw	129
  1541  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0AAF  0087               	movwf	7	;volatile
  1544                           
  1545                           ;main.c: 469: PORTC = 0b11000000;
  1546  0AB0  30C0               	movlw	192
  1547  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0AB3  0087               	movwf	7	;volatile
  1550                           
  1551                           ;main.c: 470: TRISD = 0b00000000;
  1552  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0AB6  0188               	clrf	8	;volatile
  1555                           
  1556                           ;main.c: 471: PORTD = 0b00000000;
  1557  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0AB9  0188               	clrf	8	;volatile
  1560                           
  1561                           ;main.c: 472: TRISE = 0b00000000;
  1562  0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0ABC  0189               	clrf	9	;volatile
  1565                           
  1566                           ;main.c: 473: PORTE = 0b00000000;
  1567  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0ABF  0189               	clrf	9	;volatile
  1570                           
  1571                           ;main.c: 476: T1CON = 0x03;
  1572  0AC0  3003               	movlw	3
  1573  0AC1  0090               	movwf	16	;volatile
  1574                           
  1575                           ;main.c: 477: TMR1L = 0x00;
  1576  0AC2  018E               	clrf	14	;volatile
  1577                           
  1578                           ;main.c: 478: TMR1H = 0x00;
  1579  0AC3  018F               	clrf	15	;volatile
  1580                           
  1581                           ;main.c: 481: USART_Init(115200);
  1582  0AC4  3000               	movlw	0
  1583  0AC5  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0AC6  1703               	bsf	3,6	;RP1=1, select bank3
  1585  0AC7  00BF               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1586  0AC8  3001               	movlw	1
  1587  0AC9  00BE               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1588  0ACA  30C2               	movlw	194
  1589  0ACB  00BD               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1590  0ACC  3000               	movlw	0
  1591  0ACD  00BC               	movwf	USART_Init@BaudRate^(0+384)
  1592  0ACE  160A  118A  2548  120A  158A  	fcall	_USART_Init
  1593                           
  1594                           ;main.c: 482: TIMER0_Init();
  1595  0AD3  160A  118A  22FE  120A  158A  	fcall	_TIMER0_Init
  1596                           
  1597                           ;main.c: 483: ADC_Init();
  1598  0AD8  120A  118A  27ED  120A  158A  	fcall	_ADC_Init
  1599                           
  1600                           ;main.c: 484: PWM_Init();
  1601  0ADD  160A  118A  2467  120A  158A  	fcall	_PWM_Init
  1602                           
  1603                           ;main.c: 485: LCD_Init();
  1604  0AE2  120A  158A  2000  120A  158A  	fcall	_LCD_Init
  1605                           
  1606                           ;main.c: 488: INTCONbits.PEIE = 1;
  1607  0AE7  170B               	bsf	11,6	;volatile
  1608                           
  1609                           ;main.c: 489: INTCONbits.GIE = 1;
  1610  0AE8  178B               	bsf	11,7	;volatile
  1611                           
  1612                           ;main.c: 496: LCD_Init();
  1613  0AE9  120A  158A  2000  120A  158A  	fcall	_LCD_Init
  1614                           
  1615                           ;main.c: 497: LCD_Cursor(0,0);
  1616  0AEE  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0AEF  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0AF0  01AD               	clrf	LCD_Cursor@Col^(0+384)
  1619  0AF1  3000               	movlw	0
  1620  0AF2  160A  118A  23E4  120A  158A  	fcall	_LCD_Cursor
  1621                           
  1622                           ;main.c: 498: LCD_WriteString("Inicializando...");
  1623  0AF7  3029               	movlw	low (STR_2-__stringbase)
  1624  0AF8  1683               	bsf	3,5	;RP0=1, select bank3
  1625  0AF9  1703               	bsf	3,6	;RP1=1, select bank3
  1626  0AFA  00AF               	movwf	LCD_WriteString@Str^(0+384)
  1627  0AFB  3080               	movlw	128
  1628  0AFC  00B0               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1629  0AFD  160A  118A  24D9  120A  158A  	fcall	_LCD_WriteString
  1630                           
  1631                           ;main.c: 501: PWM_DutyCycle1(0);
  1632  0B02  3000               	movlw	0
  1633  0B03  1683               	bsf	3,5	;RP0=1, select bank3
  1634  0B04  1703               	bsf	3,6	;RP1=1, select bank3
  1635  0B05  00AD               	movwf	PWM_DutyCycle1@valor^(0+384)
  1636  0B06  3000               	movlw	0
  1637  0B07  00AE               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1638  0B08  160A  118A  2425  120A  158A  	fcall	_PWM_DutyCycle1
  1639                           
  1640                           ;main.c: 502: PWM_DutyCycle2(0);
  1641  0B0D  3000               	movlw	0
  1642  0B0E  1683               	bsf	3,5	;RP0=1, select bank3
  1643  0B0F  1703               	bsf	3,6	;RP1=1, select bank3
  1644  0B10  00AD               	movwf	PWM_DutyCycle2@valor^(0+384)
  1645  0B11  3000               	movlw	0
  1646  0B12  00AE               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1647  0B13  160A  118A  2446  120A  158A  	fcall	_PWM_DutyCycle2
  1648                           
  1649                           ;main.c: 505: TIMER0_Set(238);
  1650  0B18  30EE               	movlw	238
  1651  0B19  160A  118A  22E4  120A  158A  	fcall	_TIMER0_Set
  1652                           
  1653                           ;main.c: 508: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1654  0B1E  3018               	movlw	24
  1655  0B1F  1683               	bsf	3,5	;RP0=1, select bank3
  1656  0B20  1703               	bsf	3,6	;RP1=1, select bank3
  1657  0B21  00C6               	movwf	(??_main^(0+384)+2)
  1658  0B22  3061               	movlw	97
  1659  0B23  00C5               	movwf	(??_main^(0+384)+1)
  1660  0B24  306E               	movlw	110
  1661  0B25  00C4               	movwf	??_main^(0+384)
  1662  0B26                     u5477:	
  1663  0B26  0BC4               	decfsz	??_main^(0+384),f
  1664  0B27  2B26               	goto	u5477
  1665  0B28  0BC5               	decfsz	(??_main^(0+384)+1),f
  1666  0B29  2B26               	goto	u5477
  1667  0B2A  0BC6               	decfsz	(??_main^(0+384)+2),f
  1668  0B2B  2B26               	goto	u5477
  1669  0B2C  0000               	nop
  1670  0B2D                     l3271:	
  1671                           ;main.c: 511: while(1)
  1672                           
  1673                           
  1674                           ;main.c: 512: {
  1675                           ;main.c: 518: LCD_Clear();
  1676  0B2D  160A  118A  24B0  120A  158A  	fcall	_LCD_Clear
  1677                           
  1678                           ;main.c: 519: LCD_Cursor(0,0);
  1679  0B32  1683               	bsf	3,5	;RP0=1, select bank3
  1680  0B33  1703               	bsf	3,6	;RP1=1, select bank3
  1681  0B34  01AD               	clrf	LCD_Cursor@Col^(0+384)
  1682  0B35  3000               	movlw	0
  1683  0B36  160A  118A  23E4  120A  158A  	fcall	_LCD_Cursor
  1684                           
  1685                           ;main.c: 520: LCD_WriteString("kmH: ");
  1686  0B3B  3048               	movlw	low (STR_3-__stringbase)
  1687  0B3C  1683               	bsf	3,5	;RP0=1, select bank3
  1688  0B3D  1703               	bsf	3,6	;RP1=1, select bank3
  1689  0B3E  00AF               	movwf	LCD_WriteString@Str^(0+384)
  1690  0B3F  3080               	movlw	128
  1691  0B40  00B0               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1692  0B41  160A  118A  24D9  120A  158A  	fcall	_LCD_WriteString
  1693                           
  1694                           ;main.c: 521: LCD_Cursor(0,6);
  1695  0B46  3006               	movlw	6
  1696  0B47  1683               	bsf	3,5	;RP0=1, select bank3
  1697  0B48  1703               	bsf	3,6	;RP1=1, select bank3
  1698  0B49  00C4               	movwf	??_main^(0+384)
  1699  0B4A  0844               	movf	??_main^(0+384),w
  1700  0B4B  00AD               	movwf	LCD_Cursor@Col^(0+384)
  1701  0B4C  3000               	movlw	0
  1702  0B4D  160A  118A  23E4  120A  158A  	fcall	_LCD_Cursor
  1703                           
  1704                           ;main.c: 522: LCD_WriteString(display_rpm);
  1705  0B52  30A3               	movlw	_display_rpm& (0+255)
  1706  0B53  1683               	bsf	3,5	;RP0=1, select bank3
  1707  0B54  1703               	bsf	3,6	;RP1=1, select bank3
  1708  0B55  00AF               	movwf	LCD_WriteString@Str^(0+384)
  1709  0B56  3001               	movlw	1
  1710  0B57  00B0               	movwf	(LCD_WriteString@Str+1)^(0+384)
  1711  0B58  160A  118A  24D9  120A  158A  	fcall	_LCD_WriteString
  1712                           
  1713                           ;main.c: 523: LCD_Cursor(1,0);
  1714  0B5D  1683               	bsf	3,5	;RP0=1, select bank3
  1715  0B5E  1703               	bsf	3,6	;RP1=1, select bank3
  1716  0B5F  01AD               	clrf	LCD_Cursor@Col^(0+384)
  1717  0B60  3001               	movlw	1
  1718  0B61  160A  118A  23E4  120A  158A  	fcall	_LCD_Cursor
  1719                           
  1720                           ;main.c: 528: _delay((unsigned long)((200)*(18432000/4000.0)));
  1721  0B66  3005               	movlw	5
  1722  0B67  1683               	bsf	3,5	;RP0=1, select bank3
  1723  0B68  1703               	bsf	3,6	;RP1=1, select bank3
  1724  0B69  00C6               	movwf	(??_main^(0+384)+2)
  1725  0B6A  30AD               	movlw	173
  1726  0B6B  00C5               	movwf	(??_main^(0+384)+1)
  1727  0B6C  30E0               	movlw	224
  1728  0B6D  00C4               	movwf	??_main^(0+384)
  1729  0B6E                     u5487:	
  1730  0B6E  0BC4               	decfsz	??_main^(0+384),f
  1731  0B6F  2B6E               	goto	u5487
  1732  0B70  0BC5               	decfsz	(??_main^(0+384)+1),f
  1733  0B71  2B6E               	goto	u5487
  1734  0B72  0BC6               	decfsz	(??_main^(0+384)+2),f
  1735  0B73  2B6E               	goto	u5487
  1736  0B74  2B2D               	goto	l3271
  1737  0B75                     __end_of_main:	
  1738                           
  1739                           	psect	text1
  1740  1548                     __ptext1:	
  1741 ;; *************** function _USART_Init *****************
  1742 ;; Defined at:
  1743 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  BaudRate        4   15[BANK3 ] long 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;		None               void
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       0       0       4       0
  1758 ;;      Locals:         0       0       0       0       0
  1759 ;;      Temps:          0       0       0       4       0
  1760 ;;      Totals:         0       0       0       8       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    6
  1764 ;; This function calls:
  1765 ;;		___aldiv
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _USART_Init
  1773  1548                     _USART_Init:	
  1774                           
  1775                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1779  1548  1683               	bsf	3,5	;RP0=1, select bank3
  1780  1549  1703               	bsf	3,6	;RP1=1, select bank3
  1781  154A  083C               	movf	USART_Init@BaudRate^(0+384),w
  1782  154B  00C0               	movwf	??_USART_Init^(0+384)
  1783  154C  083D               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1784  154D  00C1               	movwf	(??_USART_Init^(0+384)+1)
  1785  154E  083E               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1786  154F  00C2               	movwf	(??_USART_Init^(0+384)+2)
  1787  1550  083F               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1788  1551  00C3               	movwf	(??_USART_Init^(0+384)+3)
  1789  1552  3004               	movlw	4
  1790  1553                     u3695:	
  1791  1553  1003               	clrc
  1792  1554  0DC0               	rlf	??_USART_Init^(0+384),f
  1793  1555  0DC1               	rlf	(??_USART_Init^(0+384)+1),f
  1794  1556  0DC2               	rlf	(??_USART_Init^(0+384)+2),f
  1795  1557  0DC3               	rlf	(??_USART_Init^(0+384)+3),f
  1796  1558  3EFF               	addlw	-1
  1797  1559  1D03               	skipz
  1798  155A  2D53               	goto	u3695
  1799  155B  0843               	movf	(??_USART_Init+3)^(0+384),w
  1800  155C  00B0               	movwf	(___aldiv@divisor+3)^(0+384)
  1801  155D  0842               	movf	(??_USART_Init+2)^(0+384),w
  1802  155E  00AF               	movwf	(___aldiv@divisor+2)^(0+384)
  1803  155F  0841               	movf	(??_USART_Init+1)^(0+384),w
  1804  1560  00AE               	movwf	(___aldiv@divisor+1)^(0+384)
  1805  1561  0840               	movf	??_USART_Init^(0+384),w
  1806  1562  00AD               	movwf	___aldiv@divisor^(0+384)
  1807  1563  3001               	movlw	1
  1808  1564  00B4               	movwf	(___aldiv@dividend+3)^(0+384)
  1809  1565  3019               	movlw	25
  1810  1566  00B3               	movwf	(___aldiv@dividend+2)^(0+384)
  1811  1567  3040               	movlw	64
  1812  1568  00B2               	movwf	(___aldiv@dividend+1)^(0+384)
  1813  1569  3000               	movlw	0
  1814  156A  00B1               	movwf	___aldiv@dividend^(0+384)
  1815  156B  160A  118A  2771   	fcall	___aldiv
  1816  156E  1683               	bsf	3,5	;RP0=1, select bank3
  1817  156F  1703               	bsf	3,6	;RP1=1, select bank3
  1818  1570  082D               	movf	?___aldiv^(0+384),w
  1819  1571  3EFF               	addlw	255
  1820  1572  1683               	bsf	3,5	;RP0=1, select bank1
  1821  1573  1303               	bcf	3,6	;RP1=0, select bank1
  1822  1574  0099               	movwf	25	;volatile
  1823                           
  1824                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1825  1575  1398               	bcf	24,7	;volatile
  1826                           
  1827                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1828  1576  1318               	bcf	24,6	;volatile
  1829                           
  1830                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1831  1577  1698               	bsf	24,5	;volatile
  1832                           
  1833                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1834  1578  1218               	bcf	24,4	;volatile
  1835                           
  1836                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1837  1579  1518               	bsf	24,2	;volatile
  1838                           
  1839                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1840  157A  1498               	bsf	24,1	;volatile
  1841                           
  1842                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1843  157B  1018               	bcf	24,0	;volatile
  1844                           
  1845                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1846  157C  1283               	bcf	3,5	;RP0=0, select bank0
  1847  157D  1303               	bcf	3,6	;RP1=0, select bank0
  1848  157E  1798               	bsf	24,7	;volatile
  1849                           
  1850                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1851  157F  1318               	bcf	24,6	;volatile
  1852                           
  1853                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1854  1580  1298               	bcf	24,5	;volatile
  1855                           
  1856                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1857  1581  1618               	bsf	24,4	;volatile
  1858                           
  1859                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1860  1582  1198               	bcf	24,3	;volatile
  1861                           
  1862                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1863  1583  1118               	bcf	24,2	;volatile
  1864                           
  1865                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1866  1584  1098               	bcf	24,1	;volatile
  1867                           
  1868                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1869  1585  1018               	bcf	24,0	;volatile
  1870                           
  1871                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1872  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1873  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1874  1588  120C               	bcf	12,4	;volatile
  1875                           
  1876                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1877  1589  1283               	bcf	3,5	;RP0=0, select bank0
  1878  158A  1303               	bcf	3,6	;RP1=0, select bank0
  1879  158B  120C               	bcf	12,4	;volatile
  1880                           
  1881                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1882  158C  1683               	bsf	3,5	;RP0=1, select bank1
  1883  158D  1303               	bcf	3,6	;RP1=0, select bank1
  1884  158E  168C               	bsf	12,5	;volatile
  1885                           
  1886                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1887  158F  1283               	bcf	3,5	;RP0=0, select bank0
  1888  1590  1303               	bcf	3,6	;RP1=0, select bank0
  1889  1591  128C               	bcf	12,5	;volatile
  1890  1592  0008               	return
  1891  1593                     __end_of_USART_Init:	
  1892                           
  1893                           	psect	text2
  1894  1771                     __ptext2:	
  1895 ;; *************** function ___aldiv *****************
  1896 ;; Defined at:
  1897 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  divisor         4    0[BANK3 ] long 
  1900 ;;  dividend        4    4[BANK3 ] long 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  quotient        4   11[BANK3 ] long 
  1903 ;;  sign            1   10[BANK3 ] unsigned char 
  1904 ;;  counter         1    9[BANK3 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  4    0[BANK3 ] long 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       8       0
  1915 ;;      Locals:         0       0       0       6       0
  1916 ;;      Temps:          0       0       0       1       0
  1917 ;;      Totals:         0       0       0      15       0
  1918 ;;Total ram usage:       15 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    5
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_USART_Init
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function ___aldiv
  1930  1771                     ___aldiv:	
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1934  1771  1683               	bsf	3,5	;RP0=1, select bank3
  1935  1772  1703               	bsf	3,6	;RP1=1, select bank3
  1936  1773  01B7               	clrf	___aldiv@sign^(0+384)
  1937  1774  1FB0               	btfss	(___aldiv@divisor+3)^(0+384),7
  1938  1775  2F83               	goto	l611
  1939  1776  09AD               	comf	___aldiv@divisor^(0+384),f
  1940  1777  09AE               	comf	(___aldiv@divisor+1)^(0+384),f
  1941  1778  09AF               	comf	(___aldiv@divisor+2)^(0+384),f
  1942  1779  09B0               	comf	(___aldiv@divisor+3)^(0+384),f
  1943  177A  0AAD               	incf	___aldiv@divisor^(0+384),f
  1944  177B  1903               	skipnz
  1945  177C  0AAE               	incf	(___aldiv@divisor+1)^(0+384),f
  1946  177D  1903               	skipnz
  1947  177E  0AAF               	incf	(___aldiv@divisor+2)^(0+384),f
  1948  177F  1903               	skipnz
  1949  1780  0AB0               	incf	(___aldiv@divisor+3)^(0+384),f
  1950  1781  01B7               	clrf	___aldiv@sign^(0+384)
  1951  1782  0AB7               	incf	___aldiv@sign^(0+384),f
  1952  1783                     l611:	
  1953  1783  1FB4               	btfss	(___aldiv@dividend+3)^(0+384),7
  1954  1784  2F94               	goto	l3061
  1955  1785  09B1               	comf	___aldiv@dividend^(0+384),f
  1956  1786  09B2               	comf	(___aldiv@dividend+1)^(0+384),f
  1957  1787  09B3               	comf	(___aldiv@dividend+2)^(0+384),f
  1958  1788  09B4               	comf	(___aldiv@dividend+3)^(0+384),f
  1959  1789  0AB1               	incf	___aldiv@dividend^(0+384),f
  1960  178A  1903               	skipnz
  1961  178B  0AB2               	incf	(___aldiv@dividend+1)^(0+384),f
  1962  178C  1903               	skipnz
  1963  178D  0AB3               	incf	(___aldiv@dividend+2)^(0+384),f
  1964  178E  1903               	skipnz
  1965  178F  0AB4               	incf	(___aldiv@dividend+3)^(0+384),f
  1966  1790  3001               	movlw	1
  1967  1791  00B5               	movwf	??___aldiv^(0+384)
  1968  1792  0835               	movf	??___aldiv^(0+384),w
  1969  1793  06B7               	xorwf	___aldiv@sign^(0+384),f
  1970  1794                     l3061:	
  1971  1794  3000               	movlw	0
  1972  1795  00BB               	movwf	(___aldiv@quotient+3)^(0+384)
  1973  1796  3000               	movlw	0
  1974  1797  00BA               	movwf	(___aldiv@quotient+2)^(0+384)
  1975  1798  3000               	movlw	0
  1976  1799  00B9               	movwf	(___aldiv@quotient+1)^(0+384)
  1977  179A  3000               	movlw	0
  1978  179B  00B8               	movwf	___aldiv@quotient^(0+384)
  1979  179C  0830               	movf	(___aldiv@divisor+3)^(0+384),w
  1980  179D  042F               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1981  179E  042E               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1982  179F  042D               	iorwf	___aldiv@divisor^(0+384),w
  1983  17A0  1903               	skipnz
  1984  17A1  2FE9               	goto	l3083
  1985  17A2  01B6               	clrf	___aldiv@counter^(0+384)
  1986  17A3  0AB6               	incf	___aldiv@counter^(0+384),f
  1987  17A4                     l3069:	
  1988  17A4  1BB0               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1989  17A5  2FB4               	goto	l3071
  1990  17A6  3001               	movlw	1
  1991  17A7  00B5               	movwf	??___aldiv^(0+384)
  1992  17A8                     u3615:	
  1993  17A8  1003               	clrc
  1994  17A9  0DAD               	rlf	___aldiv@divisor^(0+384),f
  1995  17AA  0DAE               	rlf	(___aldiv@divisor+1)^(0+384),f
  1996  17AB  0DAF               	rlf	(___aldiv@divisor+2)^(0+384),f
  1997  17AC  0DB0               	rlf	(___aldiv@divisor+3)^(0+384),f
  1998  17AD  0BB5               	decfsz	??___aldiv^(0+384),f
  1999  17AE  2FA8               	goto	u3615
  2000  17AF  3001               	movlw	1
  2001  17B0  00B5               	movwf	??___aldiv^(0+384)
  2002  17B1  0835               	movf	??___aldiv^(0+384),w
  2003  17B2  07B6               	addwf	___aldiv@counter^(0+384),f
  2004  17B3  2FA4               	goto	l3069
  2005  17B4                     l3071:	
  2006  17B4  3001               	movlw	1
  2007  17B5  00B5               	movwf	??___aldiv^(0+384)
  2008  17B6                     u3635:	
  2009  17B6  1003               	clrc
  2010  17B7  0DB8               	rlf	___aldiv@quotient^(0+384),f
  2011  17B8  0DB9               	rlf	(___aldiv@quotient+1)^(0+384),f
  2012  17B9  0DBA               	rlf	(___aldiv@quotient+2)^(0+384),f
  2013  17BA  0DBB               	rlf	(___aldiv@quotient+3)^(0+384),f
  2014  17BB  0BB5               	decfsz	??___aldiv^(0+384),f
  2015  17BC  2FB6               	goto	u3635
  2016  17BD  0830               	movf	(___aldiv@divisor+3)^(0+384),w
  2017  17BE  0234               	subwf	(___aldiv@dividend+3)^(0+384),w
  2018  17BF  1D03               	skipz
  2019  17C0  2FCB               	goto	u3645
  2020  17C1  082F               	movf	(___aldiv@divisor+2)^(0+384),w
  2021  17C2  0233               	subwf	(___aldiv@dividend+2)^(0+384),w
  2022  17C3  1D03               	skipz
  2023  17C4  2FCB               	goto	u3645
  2024  17C5  082E               	movf	(___aldiv@divisor+1)^(0+384),w
  2025  17C6  0232               	subwf	(___aldiv@dividend+1)^(0+384),w
  2026  17C7  1D03               	skipz
  2027  17C8  2FCB               	goto	u3645
  2028  17C9  082D               	movf	___aldiv@divisor^(0+384),w
  2029  17CA  0231               	subwf	___aldiv@dividend^(0+384),w
  2030  17CB                     u3645:	
  2031  17CB  1C03               	skipc
  2032  17CC  2FDC               	goto	l3079
  2033  17CD  082D               	movf	___aldiv@divisor^(0+384),w
  2034  17CE  02B1               	subwf	___aldiv@dividend^(0+384),f
  2035  17CF  082E               	movf	(___aldiv@divisor+1)^(0+384),w
  2036  17D0  1C03               	skipc
  2037  17D1  0F2E               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2038  17D2  02B2               	subwf	(___aldiv@dividend+1)^(0+384),f
  2039  17D3  082F               	movf	(___aldiv@divisor+2)^(0+384),w
  2040  17D4  1C03               	skipc
  2041  17D5  0F2F               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2042  17D6  02B3               	subwf	(___aldiv@dividend+2)^(0+384),f
  2043  17D7  0830               	movf	(___aldiv@divisor+3)^(0+384),w
  2044  17D8  1C03               	skipc
  2045  17D9  0F30               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2046  17DA  02B4               	subwf	(___aldiv@dividend+3)^(0+384),f
  2047  17DB  1438               	bsf	___aldiv@quotient^(0+384),0
  2048  17DC                     l3079:	
  2049  17DC  3001               	movlw	1
  2050  17DD                     u3655:	
  2051  17DD  1003               	clrc
  2052  17DE  0CB0               	rrf	(___aldiv@divisor+3)^(0+384),f
  2053  17DF  0CAF               	rrf	(___aldiv@divisor+2)^(0+384),f
  2054  17E0  0CAE               	rrf	(___aldiv@divisor+1)^(0+384),f
  2055  17E1  0CAD               	rrf	___aldiv@divisor^(0+384),f
  2056  17E2  3EFF               	addlw	-1
  2057  17E3  1D03               	skipz
  2058  17E4  2FDD               	goto	u3655
  2059  17E5  3001               	movlw	1
  2060  17E6  02B6               	subwf	___aldiv@counter^(0+384),f
  2061  17E7  1D03               	btfss	3,2
  2062  17E8  2FB4               	goto	l3071
  2063  17E9                     l3083:	
  2064  17E9  0837               	movf	___aldiv@sign^(0+384),w
  2065  17EA  1903               	btfsc	3,2
  2066  17EB  2FF7               	goto	l3087
  2067  17EC  09B8               	comf	___aldiv@quotient^(0+384),f
  2068  17ED  09B9               	comf	(___aldiv@quotient+1)^(0+384),f
  2069  17EE  09BA               	comf	(___aldiv@quotient+2)^(0+384),f
  2070  17EF  09BB               	comf	(___aldiv@quotient+3)^(0+384),f
  2071  17F0  0AB8               	incf	___aldiv@quotient^(0+384),f
  2072  17F1  1903               	skipnz
  2073  17F2  0AB9               	incf	(___aldiv@quotient+1)^(0+384),f
  2074  17F3  1903               	skipnz
  2075  17F4  0ABA               	incf	(___aldiv@quotient+2)^(0+384),f
  2076  17F5  1903               	skipnz
  2077  17F6  0ABB               	incf	(___aldiv@quotient+3)^(0+384),f
  2078  17F7                     l3087:	
  2079  17F7  083B               	movf	(___aldiv@quotient+3)^(0+384),w
  2080  17F8  00B0               	movwf	(?___aldiv+3)^(0+384)
  2081  17F9  083A               	movf	(___aldiv@quotient+2)^(0+384),w
  2082  17FA  00AF               	movwf	(?___aldiv+2)^(0+384)
  2083  17FB  0839               	movf	(___aldiv@quotient+1)^(0+384),w
  2084  17FC  00AE               	movwf	(?___aldiv+1)^(0+384)
  2085  17FD  0838               	movf	___aldiv@quotient^(0+384),w
  2086  17FE  00AD               	movwf	?___aldiv^(0+384)
  2087  17FF  0008               	return
  2088  1800                     __end_of___aldiv:	
  2089                           
  2090                           	psect	text3
  2091  12E4                     __ptext3:	
  2092 ;; *************** function _TIMER0_Set *****************
  2093 ;; Defined at:
  2094 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  contagens       1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  contagens       1    0[BANK3 ] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       0       0       1       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       0       0       1       0
  2112 ;;Total ram usage:        1 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    5
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _TIMER0_Set
  2124  12E4                     _TIMER0_Set:	
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _TIMER0_Set: [wreg]
  2128                           ;TIMER0_Set@contagens stored from wreg
  2129  12E4  1683               	bsf	3,5	;RP0=1, select bank3
  2130  12E5  1703               	bsf	3,6	;RP1=1, select bank3
  2131  12E6  00AD               	movwf	TIMER0_Set@contagens^(0+384)
  2132                           
  2133                           ;timers.c: 22: TMR0 = contagens;
  2134  12E7  082D               	movf	TIMER0_Set@contagens^(0+384),w
  2135  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  2136  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  2137  12EA  0081               	movwf	1	;volatile
  2138  12EB  0008               	return
  2139  12EC                     __end_of_TIMER0_Set:	
  2140                           
  2141                           	psect	text4
  2142  12FE                     __ptext4:	
  2143 ;; *************** function _TIMER0_Init *****************
  2144 ;; Defined at:
  2145 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		None
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    5
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _TIMER0_Init
  2175  12FE                     _TIMER0_Init:	
  2176                           
  2177                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _TIMER0_Init: []
  2181  12FE  1683               	bsf	3,5	;RP0=1, select bank1
  2182  12FF  1303               	bcf	3,6	;RP1=0, select bank1
  2183  1300  1281               	bcf	1,5	;volatile
  2184                           
  2185                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2186  1301  1201               	bcf	1,4	;volatile
  2187                           
  2188                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2189  1302  1181               	bcf	1,3	;volatile
  2190                           
  2191                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2192  1303  1501               	bsf	1,2	;volatile
  2193                           
  2194                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2195  1304  1481               	bsf	1,1	;volatile
  2196                           
  2197                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2198  1305  1401               	bsf	1,0	;volatile
  2199                           
  2200                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2201  1306  110B               	bcf	11,2	;volatile
  2202                           
  2203                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2204  1307  168B               	bsf	11,5	;volatile
  2205  1308  0008               	return
  2206  1309                     __end_of_TIMER0_Init:	
  2207                           
  2208                           	psect	text5
  2209  1467                     __ptext5:	
  2210 ;; *************** function _PWM_Init *****************
  2211 ;; Defined at:
  2212 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;		None               void
  2219 ;; Registers used:
  2220 ;;		wreg
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    5
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _PWM_Init
  2242  1467                     _PWM_Init:	
  2243                           
  2244                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _PWM_Init: [wreg]
  2248  1467  1283               	bcf	3,5	;RP0=0, select bank0
  2249  1468  1303               	bcf	3,6	;RP1=0, select bank0
  2250  1469  1492               	bsf	18,1	;volatile
  2251                           
  2252                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2253  146A  1012               	bcf	18,0	;volatile
  2254                           
  2255                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2256  146B  1312               	bcf	18,6	;volatile
  2257                           
  2258                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2259  146C  1292               	bcf	18,5	;volatile
  2260                           
  2261                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2262  146D  1212               	bcf	18,4	;volatile
  2263                           
  2264                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2265  146E  1192               	bcf	18,3	;volatile
  2266                           
  2267                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2268  146F  1512               	bsf	18,2	;volatile
  2269                           
  2270                           ;pwm.c: 27: PR2 = 255;
  2271  1470  30FF               	movlw	255
  2272  1471  1683               	bsf	3,5	;RP0=1, select bank1
  2273  1472  1303               	bcf	3,6	;RP1=0, select bank1
  2274  1473  0092               	movwf	18	;volatile
  2275                           
  2276                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2277  1474  1283               	bcf	3,5	;RP0=0, select bank0
  2278  1475  1303               	bcf	3,6	;RP1=0, select bank0
  2279  1476  1597               	bsf	23,3	;volatile
  2280                           
  2281                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2282  1477  1517               	bsf	23,2	;volatile
  2283                           
  2284                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2285  1478  1497               	bsf	23,1	;volatile
  2286                           
  2287                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2288  1479  1417               	bsf	23,0	;volatile
  2289                           
  2290                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2291  147A  1683               	bsf	3,5	;RP0=1, select bank1
  2292  147B  1303               	bcf	3,6	;RP1=0, select bank1
  2293  147C  150C               	bsf	12,2	;volatile
  2294                           
  2295                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2296  147D  1283               	bcf	3,5	;RP0=0, select bank0
  2297  147E  1303               	bcf	3,6	;RP1=0, select bank0
  2298  147F  110C               	bcf	12,2	;volatile
  2299                           
  2300                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2301  1480  159D               	bsf	29,3	;volatile
  2302                           
  2303                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2304  1481  151D               	bsf	29,2	;volatile
  2305                           
  2306                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2307  1482  149D               	bsf	29,1	;volatile
  2308                           
  2309                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2310  1483  141D               	bsf	29,0	;volatile
  2311                           
  2312                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2313  1484  1683               	bsf	3,5	;RP0=1, select bank1
  2314  1485  1303               	bcf	3,6	;RP1=0, select bank1
  2315  1486  140D               	bsf	13,0	;volatile
  2316                           
  2317                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2318  1487  1283               	bcf	3,5	;RP0=0, select bank0
  2319  1488  1303               	bcf	3,6	;RP1=0, select bank0
  2320  1489  100D               	bcf	13,0	;volatile
  2321  148A  0008               	return
  2322  148B                     __end_of_PWM_Init:	
  2323                           
  2324                           	psect	text6
  2325  1446                     __ptext6:	
  2326 ;; *************** function _PWM_DutyCycle2 *****************
  2327 ;; Defined at:
  2328 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  valor           2    0[BANK3 ] int 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;		None               void
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       2       0
  2343 ;;      Locals:         0       0       0       0       0
  2344 ;;      Temps:          0       0       0       2       0
  2345 ;;      Totals:         0       0       0       4       0
  2346 ;;Total ram usage:        4 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    5
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _PWM_DutyCycle2
  2358  1446                     _PWM_DutyCycle2:	
  2359                           
  2360                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2364  1446  1683               	bsf	3,5	;RP0=1, select bank3
  2365  1447  1703               	bsf	3,6	;RP1=1, select bank3
  2366  1448  082E               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2367  1449  00B0               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2368  144A  082D               	movf	PWM_DutyCycle2@valor^(0+384),w
  2369  144B  00AF               	movwf	??_PWM_DutyCycle2^(0+384)
  2370  144C  0D30               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2371  144D  0CB0               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2372  144E  0CAF               	rrf	??_PWM_DutyCycle2^(0+384),f
  2373  144F  0D30               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2374  1450  0CB0               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2375  1451  0CAF               	rrf	??_PWM_DutyCycle2^(0+384),f
  2376  1452  082F               	movf	??_PWM_DutyCycle2^(0+384),w
  2377  1453  1283               	bcf	3,5	;RP0=0, select bank0
  2378  1454  1303               	bcf	3,6	;RP1=0, select bank0
  2379  1455  009B               	movwf	27	;volatile
  2380                           
  2381                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2382  1456  1683               	bsf	3,5	;RP0=1, select bank3
  2383  1457  1703               	bsf	3,6	;RP1=1, select bank3
  2384  1458  082D               	movf	PWM_DutyCycle2@valor^(0+384),w
  2385  1459  00AF               	movwf	??_PWM_DutyCycle2^(0+384)
  2386  145A  3003               	movlw	3
  2387  145B                     u3685:	
  2388  145B  1003               	clrc
  2389  145C  0DAF               	rlf	??_PWM_DutyCycle2^(0+384),f
  2390  145D  3EFF               	addlw	-1
  2391  145E  1D03               	skipz
  2392  145F  2C5B               	goto	u3685
  2393  1460  1003               	clrc
  2394  1461  0D2F               	rlf	??_PWM_DutyCycle2^(0+384),w
  2395  1462  380C               	iorlw	12
  2396  1463  1283               	bcf	3,5	;RP0=0, select bank0
  2397  1464  1303               	bcf	3,6	;RP1=0, select bank0
  2398  1465  009D               	movwf	29	;volatile
  2399  1466  0008               	return
  2400  1467                     __end_of_PWM_DutyCycle2:	
  2401                           
  2402                           	psect	text7
  2403  1425                     __ptext7:	
  2404 ;; *************** function _PWM_DutyCycle1 *****************
  2405 ;; Defined at:
  2406 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  valor           2    0[BANK3 ] int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       2       0
  2421 ;;      Locals:         0       0       0       0       0
  2422 ;;      Temps:          0       0       0       2       0
  2423 ;;      Totals:         0       0       0       4       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    5
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _PWM_DutyCycle1
  2436  1425                     _PWM_DutyCycle1:	
  2437                           
  2438                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2442  1425  1683               	bsf	3,5	;RP0=1, select bank3
  2443  1426  1703               	bsf	3,6	;RP1=1, select bank3
  2444  1427  082E               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2445  1428  00B0               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2446  1429  082D               	movf	PWM_DutyCycle1@valor^(0+384),w
  2447  142A  00AF               	movwf	??_PWM_DutyCycle1^(0+384)
  2448  142B  0D30               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2449  142C  0CB0               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2450  142D  0CAF               	rrf	??_PWM_DutyCycle1^(0+384),f
  2451  142E  0D30               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2452  142F  0CB0               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2453  1430  0CAF               	rrf	??_PWM_DutyCycle1^(0+384),f
  2454  1431  082F               	movf	??_PWM_DutyCycle1^(0+384),w
  2455  1432  1283               	bcf	3,5	;RP0=0, select bank0
  2456  1433  1303               	bcf	3,6	;RP1=0, select bank0
  2457  1434  0095               	movwf	21	;volatile
  2458                           
  2459                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2460  1435  1683               	bsf	3,5	;RP0=1, select bank3
  2461  1436  1703               	bsf	3,6	;RP1=1, select bank3
  2462  1437  082D               	movf	PWM_DutyCycle1@valor^(0+384),w
  2463  1438  00AF               	movwf	??_PWM_DutyCycle1^(0+384)
  2464  1439  3003               	movlw	3
  2465  143A                     u3725:	
  2466  143A  1003               	clrc
  2467  143B  0DAF               	rlf	??_PWM_DutyCycle1^(0+384),f
  2468  143C  3EFF               	addlw	-1
  2469  143D  1D03               	skipz
  2470  143E  2C3A               	goto	u3725
  2471  143F  1003               	clrc
  2472  1440  0D2F               	rlf	??_PWM_DutyCycle1^(0+384),w
  2473  1441  380C               	iorlw	12
  2474  1442  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1443  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1444  0097               	movwf	23	;volatile
  2477  1445  0008               	return
  2478  1446                     __end_of_PWM_DutyCycle1:	
  2479                           
  2480                           	psect	text8
  2481  14D9                     __ptext8:	
  2482 ;; *************** function _LCD_WriteString *****************
  2483 ;; Defined at:
  2484 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  Str             2    2[BANK3 ] PTR const unsigned char 
  2487 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;		None               void
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         0       0       0       2       0
  2500 ;;      Locals:         0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0
  2502 ;;      Totals:         0       0       0       2       0
  2503 ;;Total ram usage:        2 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    6
  2506 ;; This function calls:
  2507 ;;		_LCD_WriteData
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _LCD_WriteString
  2515  14D9                     _LCD_WriteString:	
  2516  14D9                     l3213:	
  2517                           ;lcd.c: 63: while(*Str != '\0')
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2521                           
  2522  14D9  1683               	bsf	3,5	;RP0=1, select bank3
  2523  14DA  1703               	bsf	3,6	;RP1=1, select bank3
  2524  14DB  0830               	movf	(LCD_WriteString@Str+1)^(0+384),w
  2525  14DC  1283               	bcf	3,5	;RP0=0, select bank0
  2526  14DD  1303               	bcf	3,6	;RP1=0, select bank0
  2527  14DE  00FF               	movwf	127
  2528  14DF  1683               	bsf	3,5	;RP0=1, select bank3
  2529  14E0  1703               	bsf	3,6	;RP1=1, select bank3
  2530  14E1  082F               	movf	LCD_WriteString@Str^(0+384),w
  2531  14E2  0084               	movwf	4
  2532  14E3  1283               	bcf	3,5	;RP0=0, select bank0
  2533  14E4  1303               	bcf	3,6	;RP1=0, select bank0
  2534  14E5  160A  118A  2000  160A  118A  	fcall	stringtab
  2535  14EA  3800               	iorlw	0
  2536  14EB  1903               	btfsc	3,2
  2537  14EC  0008               	return
  2538                           
  2539                           ;lcd.c: 64: {
  2540                           ;lcd.c: 65: LCD_WriteData(*Str);
  2541  14ED  1683               	bsf	3,5	;RP0=1, select bank3
  2542  14EE  1703               	bsf	3,6	;RP1=1, select bank3
  2543  14EF  0830               	movf	(LCD_WriteString@Str+1)^(0+384),w
  2544  14F0  1283               	bcf	3,5	;RP0=0, select bank0
  2545  14F1  1303               	bcf	3,6	;RP1=0, select bank0
  2546  14F2  00FF               	movwf	127
  2547  14F3  1683               	bsf	3,5	;RP0=1, select bank3
  2548  14F4  1703               	bsf	3,6	;RP1=1, select bank3
  2549  14F5  082F               	movf	LCD_WriteString@Str^(0+384),w
  2550  14F6  0084               	movwf	4
  2551  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2552  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  2553  14F9  160A  118A  2000  160A  118A  	fcall	stringtab
  2554  14FE  160A  118A  2342  160A  118A  	fcall	_LCD_WriteData
  2555                           
  2556                           ;lcd.c: 66: Str++;
  2557  1503  3001               	movlw	1
  2558  1504  1683               	bsf	3,5	;RP0=1, select bank3
  2559  1505  1703               	bsf	3,6	;RP1=1, select bank3
  2560  1506  07AF               	addwf	LCD_WriteString@Str^(0+384),f
  2561  1507  1803               	skipnc
  2562  1508  0AB0               	incf	(LCD_WriteString@Str+1)^(0+384),f
  2563  1509  2CD9               	goto	l3213
  2564  150A                     __end_of_LCD_WriteString:	
  2565                           
  2566                           	psect	text9
  2567  1342                     __ptext9:	
  2568 ;; *************** function _LCD_WriteData *****************
  2569 ;; Defined at:
  2570 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  Byte            1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  Byte            1    1[BANK3 ] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2584 ;;      Params:         0       0       0       0       0
  2585 ;;      Locals:         0       0       0       1       0
  2586 ;;      Temps:          0       0       0       1       0
  2587 ;;      Totals:         0       0       0       2       0
  2588 ;;Total ram usage:        2 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    5
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_LCD_WriteString
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _LCD_WriteData
  2600  1342                     _LCD_WriteData:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _LCD_WriteData: [wreg]
  2604                           ;LCD_WriteData@Byte stored from wreg
  2605  1342  1683               	bsf	3,5	;RP0=1, select bank3
  2606  1343  1703               	bsf	3,6	;RP1=1, select bank3
  2607  1344  00AE               	movwf	LCD_WriteData@Byte^(0+384)
  2608                           
  2609                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2610  1345  1283               	bcf	3,5	;RP0=0, select bank0
  2611  1346  1303               	bcf	3,6	;RP1=0, select bank0
  2612  1347  1409               	bsf	9,0	;volatile
  2613                           
  2614                           ;lcd.c: 51: PORTD = Byte;
  2615  1348  1683               	bsf	3,5	;RP0=1, select bank3
  2616  1349  1703               	bsf	3,6	;RP1=1, select bank3
  2617  134A  082E               	movf	LCD_WriteData@Byte^(0+384),w
  2618  134B  1283               	bcf	3,5	;RP0=0, select bank0
  2619  134C  1303               	bcf	3,6	;RP1=0, select bank0
  2620  134D  0088               	movwf	8	;volatile
  2621                           
  2622                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2623  134E  1489               	bsf	9,1	;volatile
  2624                           
  2625                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2626  134F  303D               	movlw	61
  2627  1350  1683               	bsf	3,5	;RP0=1, select bank3
  2628  1351  1703               	bsf	3,6	;RP1=1, select bank3
  2629  1352  00AD               	movwf	??_LCD_WriteData^(0+384)
  2630  1353                     u5497:	
  2631  1353  0BAD               	decfsz	??_LCD_WriteData^(0+384),f
  2632  1354  2B53               	goto	u5497
  2633                           
  2634                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2635  1355  1283               	bcf	3,5	;RP0=0, select bank0
  2636  1356  1303               	bcf	3,6	;RP1=0, select bank0
  2637  1357  1089               	bcf	9,1	;volatile
  2638  1358  0008               	return
  2639  1359                     __end_of_LCD_WriteData:	
  2640                           
  2641                           	psect	text10
  2642  0800                     __ptext10:	
  2643 ;; *************** function _LCD_Init *****************
  2644 ;; Defined at:
  2645 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0
  2661 ;;      Temps:          0       0       0       2       0
  2662 ;;      Totals:         0       0       0       2       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    6
  2666 ;; This function calls:
  2667 ;;		_LCD_WriteCmd
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _LCD_Init
  2675  0800                     _LCD_Init:	
  2676                           
  2677                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2678                           
  2679                           ;incstack = 0
  2680                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2681  0800  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0801  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0802  119F               	bcf	31,3	;volatile
  2684                           
  2685                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2686  0803  151F               	bsf	31,2	;volatile
  2687                           
  2688                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2689  0804  109F               	bcf	31,1	;volatile
  2690                           
  2691                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2692  0805  101F               	bcf	31,0	;volatile
  2693                           
  2694                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2695  0806  305A               	movlw	90
  2696  0807  1683               	bsf	3,5	;RP0=1, select bank3
  2697  0808  1703               	bsf	3,6	;RP1=1, select bank3
  2698  0809  00B0               	movwf	(??_LCD_Init^(0+384)+1)
  2699  080A  30C3               	movlw	195
  2700  080B  00AF               	movwf	??_LCD_Init^(0+384)
  2701  080C                     u5507:	
  2702  080C  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2703  080D  280C               	goto	u5507
  2704  080E  0BB0               	decfsz	(??_LCD_Init^(0+384)+1),f
  2705  080F  280C               	goto	u5507
  2706                           
  2707                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2708  0810  3030               	movlw	48
  2709  0811  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2710                           
  2711                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2712  0816  3018               	movlw	24
  2713  0817  1683               	bsf	3,5	;RP0=1, select bank3
  2714  0818  1703               	bsf	3,6	;RP1=1, select bank3
  2715  0819  00B0               	movwf	(??_LCD_Init^(0+384)+1)
  2716  081A  30EF               	movlw	239
  2717  081B  00AF               	movwf	??_LCD_Init^(0+384)
  2718  081C                     u5517:	
  2719  081C  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2720  081D  281C               	goto	u5517
  2721  081E  0BB0               	decfsz	(??_LCD_Init^(0+384)+1),f
  2722  081F  281C               	goto	u5517
  2723                           
  2724                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2725  0820  3030               	movlw	48
  2726  0821  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2727                           
  2728                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2729  0826  3099               	movlw	153
  2730  0827  1683               	bsf	3,5	;RP0=1, select bank3
  2731  0828  1703               	bsf	3,6	;RP1=1, select bank3
  2732  0829  00AF               	movwf	??_LCD_Init^(0+384)
  2733  082A                     u5527:	
  2734  082A  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2735  082B  282A               	goto	u5527
  2736                           
  2737                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2738  082C  3030               	movlw	48
  2739  082D  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2740                           
  2741                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2742  0832  303D               	movlw	61
  2743  0833  1683               	bsf	3,5	;RP0=1, select bank3
  2744  0834  1703               	bsf	3,6	;RP1=1, select bank3
  2745  0835  00AF               	movwf	??_LCD_Init^(0+384)
  2746  0836                     u5537:	
  2747  0836  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2748  0837  2836               	goto	u5537
  2749                           
  2750                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2751  0838  3038               	movlw	56
  2752  0839  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2753                           
  2754                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2755  083E  303D               	movlw	61
  2756  083F  1683               	bsf	3,5	;RP0=1, select bank3
  2757  0840  1703               	bsf	3,6	;RP1=1, select bank3
  2758  0841  00AF               	movwf	??_LCD_Init^(0+384)
  2759  0842                     u5547:	
  2760  0842  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2761  0843  2842               	goto	u5547
  2762                           
  2763                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2764  0844  3001               	movlw	1
  2765  0845  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2766                           
  2767                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2768  084A  300C               	movlw	12
  2769  084B  1683               	bsf	3,5	;RP0=1, select bank3
  2770  084C  1703               	bsf	3,6	;RP1=1, select bank3
  2771  084D  00B0               	movwf	(??_LCD_Init^(0+384)+1)
  2772  084E  30F7               	movlw	247
  2773  084F  00AF               	movwf	??_LCD_Init^(0+384)
  2774  0850                     u5557:	
  2775  0850  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2776  0851  2850               	goto	u5557
  2777  0852  0BB0               	decfsz	(??_LCD_Init^(0+384)+1),f
  2778  0853  2850               	goto	u5557
  2779                           
  2780                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2781  0854  300C               	movlw	12
  2782  0855  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2783                           
  2784                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2785  085A  303D               	movlw	61
  2786  085B  1683               	bsf	3,5	;RP0=1, select bank3
  2787  085C  1703               	bsf	3,6	;RP1=1, select bank3
  2788  085D  00AF               	movwf	??_LCD_Init^(0+384)
  2789  085E                     u5567:	
  2790  085E  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2791  085F  285E               	goto	u5567
  2792                           
  2793                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2794  0860  3006               	movlw	6
  2795  0861  160A  118A  232B  120A  158A  	fcall	_LCD_WriteCmd
  2796                           
  2797                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2798  0866  303D               	movlw	61
  2799  0867  1683               	bsf	3,5	;RP0=1, select bank3
  2800  0868  1703               	bsf	3,6	;RP1=1, select bank3
  2801  0869  00AF               	movwf	??_LCD_Init^(0+384)
  2802  086A                     u5577:	
  2803  086A  0BAF               	decfsz	??_LCD_Init^(0+384),f
  2804  086B  286A               	goto	u5577
  2805  086C  0008               	return
  2806  086D                     __end_of_LCD_Init:	
  2807                           
  2808                           	psect	text11
  2809  13E4                     __ptext11:	
  2810 ;; *************** function _LCD_Cursor *****************
  2811 ;; Defined at:
  2812 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  Row             1    wreg     unsigned char 
  2815 ;;  Col             1    0[BANK3 ] unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  Row             1    2[BANK3 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       1       0
  2828 ;;      Locals:         0       0       0       1       0
  2829 ;;      Temps:          0       0       0       1       0
  2830 ;;      Totals:         0       0       0       3       0
  2831 ;;Total ram usage:        3 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    5
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _LCD_Cursor
  2843  13E4                     _LCD_Cursor:	
  2844                           
  2845                           ;incstack = 0
  2846                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2847                           ;LCD_Cursor@Row stored from wreg
  2848  13E4  1683               	bsf	3,5	;RP0=1, select bank3
  2849  13E5  1703               	bsf	3,6	;RP1=1, select bank3
  2850  13E6  00AF               	movwf	LCD_Cursor@Row^(0+384)
  2851                           
  2852                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2853  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  2854  13E8  1303               	bcf	3,6	;RP1=0, select bank0
  2855  13E9  1009               	bcf	9,0	;volatile
  2856                           
  2857                           ;lcd.c: 14: if (Row == 0)
  2858  13EA  1683               	bsf	3,5	;RP0=1, select bank3
  2859  13EB  1703               	bsf	3,6	;RP1=1, select bank3
  2860  13EC  08AF               	movf	LCD_Cursor@Row^(0+384),f
  2861  13ED  1D03               	skipz
  2862  13EE  2BF2               	goto	l3199
  2863                           
  2864                           ;lcd.c: 15: {
  2865                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2866  13EF  082D               	movf	LCD_Cursor@Col^(0+384),w
  2867  13F0  3E80               	addlw	128
  2868  13F1  2BF6               	goto	L1
  2869  13F2                     l3199:	
  2870                           ;lcd.c: 17: }
  2871                           
  2872                           
  2873                           ;lcd.c: 18: else
  2874                           ;lcd.c: 19: {
  2875                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2876  13F2  1683               	bsf	3,5	;RP0=1, select bank3
  2877  13F3  1703               	bsf	3,6	;RP1=1, select bank3
  2878  13F4  082D               	movf	LCD_Cursor@Col^(0+384),w
  2879  13F5  3EC0               	addlw	192
  2880  13F6                     L1:	
  2881  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  2882  13F7  1303               	bcf	3,6	;RP1=0, select bank0
  2883  13F8  0088               	movwf	8	;volatile
  2884                           
  2885                           ;lcd.c: 21: }
  2886                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2887  13F9  1489               	bsf	9,1	;volatile
  2888                           
  2889                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2890  13FA  303D               	movlw	61
  2891  13FB  1683               	bsf	3,5	;RP0=1, select bank3
  2892  13FC  1703               	bsf	3,6	;RP1=1, select bank3
  2893  13FD  00AE               	movwf	??_LCD_Cursor^(0+384)
  2894  13FE                     u5587:	
  2895  13FE  0BAE               	decfsz	??_LCD_Cursor^(0+384),f
  2896  13FF  2BFE               	goto	u5587
  2897                           
  2898                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2899  1400  1283               	bcf	3,5	;RP0=0, select bank0
  2900  1401  1303               	bcf	3,6	;RP1=0, select bank0
  2901  1402  1089               	bcf	9,1	;volatile
  2902  1403  0008               	return
  2903  1404                     __end_of_LCD_Cursor:	
  2904                           
  2905                           	psect	text12
  2906  14B0                     __ptext12:	
  2907 ;; *************** function _LCD_Clear *****************
  2908 ;; Defined at:
  2909 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;		None               void
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       2       0
  2926 ;;      Totals:         0       0       0       2       0
  2927 ;;Total ram usage:        2 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    6
  2930 ;; This function calls:
  2931 ;;		_LCD_WriteCmd
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function _LCD_Clear
  2939  14B0                     _LCD_Clear:	
  2940                           
  2941                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2942                           
  2943                           ;incstack = 0
  2944                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2945  14B0  3001               	movlw	1
  2946  14B1  160A  118A  232B  160A  118A  	fcall	_LCD_WriteCmd
  2947                           
  2948                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2949  14B6  300C               	movlw	12
  2950  14B7  1683               	bsf	3,5	;RP0=1, select bank3
  2951  14B8  1703               	bsf	3,6	;RP1=1, select bank3
  2952  14B9  00B0               	movwf	(??_LCD_Clear^(0+384)+1)
  2953  14BA  30F7               	movlw	247
  2954  14BB  00AF               	movwf	??_LCD_Clear^(0+384)
  2955  14BC                     u5597:	
  2956  14BC  0BAF               	decfsz	??_LCD_Clear^(0+384),f
  2957  14BD  2CBC               	goto	u5597
  2958  14BE  0BB0               	decfsz	(??_LCD_Clear^(0+384)+1),f
  2959  14BF  2CBC               	goto	u5597
  2960                           
  2961                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2962  14C0  300C               	movlw	12
  2963  14C1  160A  118A  232B  160A  118A  	fcall	_LCD_WriteCmd
  2964                           
  2965                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2966  14C6  303D               	movlw	61
  2967  14C7  1683               	bsf	3,5	;RP0=1, select bank3
  2968  14C8  1703               	bsf	3,6	;RP1=1, select bank3
  2969  14C9  00AF               	movwf	??_LCD_Clear^(0+384)
  2970  14CA                     u5607:	
  2971  14CA  0BAF               	decfsz	??_LCD_Clear^(0+384),f
  2972  14CB  2CCA               	goto	u5607
  2973                           
  2974                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2975  14CC  3006               	movlw	6
  2976  14CD  160A  118A  232B  160A  118A  	fcall	_LCD_WriteCmd
  2977                           
  2978                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2979  14D2  303D               	movlw	61
  2980  14D3  1683               	bsf	3,5	;RP0=1, select bank3
  2981  14D4  1703               	bsf	3,6	;RP1=1, select bank3
  2982  14D5  00AF               	movwf	??_LCD_Clear^(0+384)
  2983  14D6                     u5617:	
  2984  14D6  0BAF               	decfsz	??_LCD_Clear^(0+384),f
  2985  14D7  2CD6               	goto	u5617
  2986  14D8  0008               	return
  2987  14D9                     __end_of_LCD_Clear:	
  2988                           
  2989                           	psect	text13
  2990  132B                     __ptext13:	
  2991 ;; *************** function _LCD_WriteCmd *****************
  2992 ;; Defined at:
  2993 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  Byte            1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  Byte            1    1[BANK3 ] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         0       0       0       0       0
  3008 ;;      Locals:         0       0       0       1       0
  3009 ;;      Temps:          0       0       0       1       0
  3010 ;;      Totals:         0       0       0       2       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    5
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_LCD_Clear
  3018 ;;		_LCD_Init
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _LCD_WriteCmd
  3024  132B                     _LCD_WriteCmd:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _LCD_WriteCmd: [wreg]
  3028                           ;LCD_WriteCmd@Byte stored from wreg
  3029  132B  1683               	bsf	3,5	;RP0=1, select bank3
  3030  132C  1703               	bsf	3,6	;RP1=1, select bank3
  3031  132D  00AE               	movwf	LCD_WriteCmd@Byte^(0+384)
  3032                           
  3033                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3034  132E  1283               	bcf	3,5	;RP0=0, select bank0
  3035  132F  1303               	bcf	3,6	;RP1=0, select bank0
  3036  1330  1009               	bcf	9,0	;volatile
  3037                           
  3038                           ;lcd.c: 36: PORTD = Byte;
  3039  1331  1683               	bsf	3,5	;RP0=1, select bank3
  3040  1332  1703               	bsf	3,6	;RP1=1, select bank3
  3041  1333  082E               	movf	LCD_WriteCmd@Byte^(0+384),w
  3042  1334  1283               	bcf	3,5	;RP0=0, select bank0
  3043  1335  1303               	bcf	3,6	;RP1=0, select bank0
  3044  1336  0088               	movwf	8	;volatile
  3045                           
  3046                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3047  1337  1489               	bsf	9,1	;volatile
  3048                           
  3049                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3050  1338  303D               	movlw	61
  3051  1339  1683               	bsf	3,5	;RP0=1, select bank3
  3052  133A  1703               	bsf	3,6	;RP1=1, select bank3
  3053  133B  00AD               	movwf	??_LCD_WriteCmd^(0+384)
  3054  133C                     u5627:	
  3055  133C  0BAD               	decfsz	??_LCD_WriteCmd^(0+384),f
  3056  133D  2B3C               	goto	u5627
  3057                           
  3058                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3059  133E  1283               	bcf	3,5	;RP0=0, select bank0
  3060  133F  1303               	bcf	3,6	;RP1=0, select bank0
  3061  1340  1089               	bcf	9,1	;volatile
  3062  1341  0008               	return
  3063  1342                     __end_of_LCD_WriteCmd:	
  3064                           
  3065                           	psect	text14
  3066  07ED                     __ptext14:	
  3067 ;; *************** function _ADC_Init *****************
  3068 ;; Defined at:
  3069 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		None
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0
  3086 ;;      Totals:         0       0       0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _ADC_Init
  3099  07ED                     _ADC_Init:	
  3100                           
  3101                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _ADC_Init: []
  3105  07ED  1683               	bsf	3,5	;RP0=1, select bank1
  3106  07EE  1303               	bcf	3,6	;RP1=0, select bank1
  3107  07EF  179F               	bsf	31,7	;volatile
  3108                           
  3109                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3110  07F0  159F               	bsf	31,3	;volatile
  3111                           
  3112                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3113  07F1  151F               	bsf	31,2	;volatile
  3114                           
  3115                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3116  07F2  149F               	bsf	31,1	;volatile
  3117                           
  3118                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3119  07F3  101F               	bcf	31,0	;volatile
  3120                           
  3121                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3122  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3123  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3124  07F6  179F               	bsf	31,7	;volatile
  3125                           
  3126                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3127  07F7  131F               	bcf	31,6	;volatile
  3128                           
  3129                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3130  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  3131  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  3132  07FA  130C               	bcf	12,6	;volatile
  3133                           
  3134                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3135  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3136  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3137  07FD  130C               	bcf	12,6	;volatile
  3138  07FE  0008               	return
  3139  07FF                     __end_of_ADC_Init:	
  3140                           
  3141                           	psect	text15
  3142  0B75                     __ptext15:	
  3143 ;; *************** function _ISR *****************
  3144 ;; Defined at:
  3145 ;;		line 320 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0
  3161 ;;      Temps:          0       4       0       0       0
  3162 ;;      Totals:         0       4       0       0       0
  3163 ;;Total ram usage:        4 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    4
  3166 ;; This function calls:
  3167 ;;		_Fuzzy
  3168 ;;		_USART_ReceiveChar
  3169 ;;		_USART_WriteString
  3170 ;;		___lwdiv
  3171 ;;		___wmul
  3172 ;;		_send
  3173 ;;		i1_PWM_DutyCycle2
  3174 ;;		i1_TIMER0_Set
  3175 ;; This function is called by:
  3176 ;;		Interrupt level 1
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _ISR
  3182  0B75                     _ISR:	
  3183                           
  3184                           ;main.c: 323: if (PIR1bits.RCIF)
  3185  0B75  1E8C               	btfss	12,5	;volatile
  3186  0B76  2C30               	goto	i1l3973
  3187                           
  3188                           ;main.c: 324: {
  3189                           ;main.c: 325: if (USART_ReceiveChar() == '0')
  3190  0B77  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3191  0B7C  3A30               	xorlw	48
  3192  0B7D  1D03               	skipz
  3193  0B7E  2B8F               	goto	i1l3927
  3194                           
  3195                           ;main.c: 326: {
  3196                           ;main.c: 327: USART_WriteString("\n\rdesligado\n\r");
  3197  0B7F  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3198  0B80  160A  118A  238C  120A  158A  	fcall	_USART_WriteString
  3199                           
  3200                           ;main.c: 329: PWM_DutyCycle2(0);
  3201  0B85  3000               	movlw	0
  3202  0B86  00F0               	movwf	i1PWM_DutyCycle2@valor
  3203  0B87  3000               	movlw	0
  3204  0B88  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3205  0B89  160A  118A  2371  120A  158A  	fcall	i1_PWM_DutyCycle2
  3206                           
  3207                           ;main.c: 330: return;
  3208  0B8E  2C95               	goto	i1l188
  3209  0B8F                     i1l3927:	
  3210                           
  3211                           ;main.c: 331: }
  3212                           ;main.c: 333: if (USART_ReceiveChar() == '1')
  3213  0B8F  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3214  0B94  3A31               	xorlw	49
  3215  0B95  1D03               	skipz
  3216  0B96  2B9D               	goto	i1l3931
  3217                           
  3218                           ;main.c: 334: {
  3219                           ;main.c: 335: setpointUI = 430;
  3220  0B97  30AE               	movlw	174
  3221  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0B9A  00EC               	movwf	_setpointUI
  3224  0B9B  3001               	movlw	1
  3225  0B9C  00ED               	movwf	_setpointUI+1
  3226  0B9D                     i1l3931:	
  3227                           
  3228                           ;main.c: 336: }
  3229                           ;main.c: 338: if (USART_ReceiveChar() == '2')
  3230  0B9D  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3231  0BA2  3A32               	xorlw	50
  3232  0BA3  1D03               	skipz
  3233  0BA4  2BAB               	goto	i1l3935
  3234                           
  3235                           ;main.c: 339: {
  3236                           ;main.c: 340: setpointUI = 520;
  3237  0BA5  3008               	movlw	8
  3238  0BA6  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0BA7  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0BA8  00EC               	movwf	_setpointUI
  3241  0BA9  3002               	movlw	2
  3242  0BAA  00ED               	movwf	_setpointUI+1
  3243  0BAB                     i1l3935:	
  3244                           
  3245                           ;main.c: 341: }
  3246                           ;main.c: 343: if (USART_ReceiveChar() == '3')
  3247  0BAB  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3248  0BB0  3A33               	xorlw	51
  3249  0BB1  1D03               	skipz
  3250  0BB2  2BB9               	goto	i1l3939
  3251                           
  3252                           ;main.c: 344: {
  3253                           ;main.c: 345: setpointUI = 760;
  3254  0BB3  30F8               	movlw	248
  3255  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0BB6  00EC               	movwf	_setpointUI
  3258  0BB7  3002               	movlw	2
  3259  0BB8  00ED               	movwf	_setpointUI+1
  3260  0BB9                     i1l3939:	
  3261                           
  3262                           ;main.c: 346: }
  3263                           ;main.c: 348: if (USART_ReceiveChar() == '4')
  3264  0BB9  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3265  0BBE  3A34               	xorlw	52
  3266  0BBF  1D03               	skipz
  3267  0BC0  2BC7               	goto	i1l3943
  3268                           
  3269                           ;main.c: 349: {
  3270                           ;main.c: 350: setpointUI = 890;
  3271  0BC1  307A               	movlw	122
  3272  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0BC4  00EC               	movwf	_setpointUI
  3275  0BC5  3003               	movlw	3
  3276  0BC6  00ED               	movwf	_setpointUI+1
  3277  0BC7                     i1l3943:	
  3278                           
  3279                           ;main.c: 351: }
  3280                           ;main.c: 353: if (USART_ReceiveChar() == '5')
  3281  0BC7  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3282  0BCC  3A35               	xorlw	53
  3283  0BCD  1D03               	skipz
  3284  0BCE  2BD5               	goto	i1l3947
  3285                           
  3286                           ;main.c: 354: {
  3287                           ;main.c: 355: setpointUI = 1250;
  3288  0BCF  30E2               	movlw	226
  3289  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0BD2  00EC               	movwf	_setpointUI
  3292  0BD3  3004               	movlw	4
  3293  0BD4  00ED               	movwf	_setpointUI+1
  3294  0BD5                     i1l3947:	
  3295                           
  3296                           ;main.c: 356: }
  3297                           ;main.c: 358: if (USART_ReceiveChar() == '6')
  3298  0BD5  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3299  0BDA  3A36               	xorlw	54
  3300  0BDB  1D03               	skipz
  3301  0BDC  2BE3               	goto	i1l3951
  3302                           
  3303                           ;main.c: 359: {
  3304                           ;main.c: 360: setpointUI = 2250;
  3305  0BDD  30CA               	movlw	202
  3306  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0BE0  00EC               	movwf	_setpointUI
  3309  0BE1  3008               	movlw	8
  3310  0BE2  00ED               	movwf	_setpointUI+1
  3311  0BE3                     i1l3951:	
  3312                           
  3313                           ;main.c: 361: }
  3314                           ;main.c: 363: if (USART_ReceiveChar() == '7')
  3315  0BE3  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3316  0BE8  3A37               	xorlw	55
  3317  0BE9  1D03               	skipz
  3318  0BEA  2BF1               	goto	i1l3955
  3319                           
  3320                           ;main.c: 364: {
  3321                           ;main.c: 365: setpointUI = 3450;
  3322  0BEB  307A               	movlw	122
  3323  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0BEE  00EC               	movwf	_setpointUI
  3326  0BEF  300D               	movlw	13
  3327  0BF0  00ED               	movwf	_setpointUI+1
  3328  0BF1                     i1l3955:	
  3329                           
  3330                           ;main.c: 366: }
  3331                           ;main.c: 368: if (USART_ReceiveChar() == '8')
  3332  0BF1  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3333  0BF6  3A38               	xorlw	56
  3334  0BF7  1D03               	skipz
  3335  0BF8  2BFF               	goto	i1l3959
  3336                           
  3337                           ;main.c: 369: {
  3338                           ;main.c: 370: setpointUI = 4650;
  3339  0BF9  302A               	movlw	42
  3340  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0BFC  00EC               	movwf	_setpointUI
  3343  0BFD  3012               	movlw	18
  3344  0BFE  00ED               	movwf	_setpointUI+1
  3345  0BFF                     i1l3959:	
  3346                           
  3347                           ;main.c: 371: }
  3348                           ;main.c: 373: if (USART_ReceiveChar() == '9')
  3349  0BFF  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3350  0C04  3A39               	xorlw	57
  3351  0C05  1D03               	skipz
  3352  0C06  2C0D               	goto	i1l3963
  3353                           
  3354                           ;main.c: 374: {
  3355                           ;main.c: 375: setpointUI = 5400;
  3356  0C07  3018               	movlw	24
  3357  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0C0A  00EC               	movwf	_setpointUI
  3360  0C0B  3015               	movlw	21
  3361  0C0C  00ED               	movwf	_setpointUI+1
  3362  0C0D                     i1l3963:	
  3363                           
  3364                           ;main.c: 376: }
  3365                           ;main.c: 380: Fuzzy();
  3366  0C0D  160A  118A  2658  120A  158A  	fcall	_Fuzzy
  3367                           
  3368                           ;main.c: 381: antigoUI = setpointUI;
  3369  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0C14  086D               	movf	_setpointUI+1,w
  3372  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0C17  01D7               	clrf	(_antigoUI+1)^(0+128)
  3375  0C18  07D7               	addwf	(_antigoUI+1)^(0+128),f
  3376  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0C1B  086C               	movf	_setpointUI,w
  3379  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  3380  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  3381  0C1E  01D6               	clrf	_antigoUI^(0+128)
  3382  0C1F  07D6               	addwf	_antigoUI^(0+128),f
  3383                           
  3384                           ;main.c: 384: if(USART_ReceiveChar() == 'X')
  3385  0C20  160A  118A  2359  120A  158A  	fcall	_USART_ReceiveChar
  3386  0C25  3A58               	xorlw	88
  3387  0C26  1D03               	skipz
  3388  0C27  2C2D               	goto	i1l3971
  3389                           
  3390                           ;main.c: 385: {
  3391                           ;main.c: 386: send();
  3392  0C28  120A  158A  206D  120A  158A  	fcall	_send
  3393  0C2D                     i1l3971:	
  3394                           
  3395                           ;main.c: 387: }
  3396                           ;main.c: 389: PIR1bits.RCIF = 0;
  3397  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0C2F  128C               	bcf	12,5	;volatile
  3400  0C30                     i1l3973:	
  3401                           
  3402                           ;main.c: 390: }
  3403                           ;main.c: 393: if (PIR1bits.ADIF)
  3404  0C30  1B0C               	btfsc	12,6	;volatile
  3405                           
  3406                           ;main.c: 394: {
  3407                           ;main.c: 398: PIR1bits.ADIF = 0;
  3408  0C31  130C               	bcf	12,6	;volatile
  3409                           
  3410                           ;main.c: 399: }
  3411                           ;main.c: 403: if (INTCONbits.T0IF)
  3412  0C32  1D0B               	btfss	11,2	;volatile
  3413  0C33  2C91               	goto	i1l3999
  3414                           
  3415                           ;main.c: 404: {
  3416                           ;main.c: 406: TIMER0_Set(238);
  3417  0C34  30EE               	movlw	238
  3418  0C35  160A  118A  22D6  120A  158A  	fcall	i1_TIMER0_Set
  3419                           
  3420                           ;main.c: 409: if (contagens_tm0 < 499)
  3421  0C3A  3001               	movlw	1
  3422  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  3424  0C3D  0259               	subwf	(_contagens_tm0+1)^(0+128),w
  3425  0C3E  30F3               	movlw	243
  3426  0C3F  1903               	skipnz
  3427  0C40  0258               	subwf	_contagens_tm0^(0+128),w
  3428  0C41  1803               	skipnc
  3429  0C42  2C4D               	goto	i1l3985
  3430                           
  3431                           ;main.c: 410: {
  3432                           ;main.c: 412: contagens_tm0++;
  3433  0C43  3001               	movlw	1
  3434  0C44  07D8               	addwf	_contagens_tm0^(0+128),f
  3435  0C45  1803               	skipnc
  3436  0C46  0AD9               	incf	(_contagens_tm0+1)^(0+128),f
  3437  0C47  3000               	movlw	0
  3438  0C48  07D9               	addwf	(_contagens_tm0+1)^(0+128),f
  3439                           
  3440                           ;main.c: 415: PORTBbits.RB6 = 1;
  3441  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0C4B  1706               	bsf	6,6	;volatile
  3444                           
  3445                           ;main.c: 416: }
  3446  0C4C  2C90               	goto	i1l3997
  3447  0C4D                     i1l3985:	
  3448                           
  3449                           ;main.c: 417: else
  3450                           ;main.c: 418: {
  3451                           ;main.c: 420: contagens_tm0 = 0;
  3452  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0C4E  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0C4F  01D8               	clrf	_contagens_tm0^(0+128)
  3455  0C50  01D9               	clrf	(_contagens_tm0+1)^(0+128)
  3456                           
  3457                           ;main.c: 423: pulsos = (TMR1H << 8) + TMR1L;
  3458  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0C53  080F               	movf	15,w	;volatile
  3461  0C54  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0C55  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0C56  01DB               	clrf	(_pulsos+1)^(0+128)
  3464  0C57  07DB               	addwf	(_pulsos+1)^(0+128),f
  3465  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0C5A  080E               	movf	14,w	;volatile
  3468  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  3469  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  3470  0C5D  01DA               	clrf	_pulsos^(0+128)
  3471  0C5E  07DA               	addwf	_pulsos^(0+128),f
  3472                           
  3473                           ;main.c: 424: rpm = ((pulsos / pas_cooler) * 120);
  3474  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0C61  086F               	movf	_pas_cooler+1,w
  3477  0C62  01F1               	clrf	___lwdiv@divisor+1
  3478  0C63  07F1               	addwf	___lwdiv@divisor+1,f
  3479  0C64  086E               	movf	_pas_cooler,w
  3480  0C65  01F0               	clrf	___lwdiv@divisor
  3481  0C66  07F0               	addwf	___lwdiv@divisor,f
  3482  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  3484  0C69  085B               	movf	(_pulsos+1)^(0+128),w
  3485  0C6A  01F3               	clrf	___lwdiv@dividend+1
  3486  0C6B  07F3               	addwf	___lwdiv@dividend+1,f
  3487  0C6C  085A               	movf	_pulsos^(0+128),w
  3488  0C6D  01F2               	clrf	___lwdiv@dividend
  3489  0C6E  07F2               	addwf	___lwdiv@dividend,f
  3490  0C6F  160A  118A  250A  120A  158A  	fcall	___lwdiv
  3491  0C74  0871               	movf	?___lwdiv+1,w
  3492  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0C77  01BB               	clrf	___wmul@multiplier+1
  3495  0C78  07BB               	addwf	___wmul@multiplier+1,f
  3496  0C79  0870               	movf	?___lwdiv,w
  3497  0C7A  01BA               	clrf	___wmul@multiplier
  3498  0C7B  07BA               	addwf	___wmul@multiplier,f
  3499  0C7C  3078               	movlw	120
  3500  0C7D  00BC               	movwf	___wmul@multiplicand
  3501  0C7E  3000               	movlw	0
  3502  0C7F  00BD               	movwf	___wmul@multiplicand+1
  3503  0C80  160A  118A  248B  120A  158A  	fcall	___wmul
  3504  0C85  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0C86  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0C87  083B               	movf	?___wmul+1,w
  3507  0C88  01EB               	clrf	_rpm+1
  3508  0C89  07EB               	addwf	_rpm+1,f
  3509  0C8A  083A               	movf	?___wmul,w
  3510  0C8B  01EA               	clrf	_rpm
  3511  0C8C  07EA               	addwf	_rpm,f
  3512                           
  3513                           ;main.c: 431: TMR1L = 0x00;
  3514  0C8D  018E               	clrf	14	;volatile
  3515                           
  3516                           ;main.c: 432: TMR1H = 0x00;
  3517  0C8E  018F               	clrf	15	;volatile
  3518                           
  3519                           ;main.c: 435: PORTBbits.RB6 = 0;
  3520  0C8F  1306               	bcf	6,6	;volatile
  3521  0C90                     i1l3997:	
  3522                           
  3523                           ;main.c: 436: }
  3524                           ;main.c: 439: INTCONbits.T0IF = 0;
  3525  0C90  110B               	bcf	11,2	;volatile
  3526  0C91                     i1l3999:	
  3527                           
  3528                           ;main.c: 440: }
  3529                           ;main.c: 443: if (PIR1bits.TMR1IF)
  3530  0C91  180C               	btfsc	12,0	;volatile
  3531                           
  3532                           ;main.c: 444: {
  3533                           ;main.c: 448: PIR1bits.TMR1IF = 0;
  3534  0C92  100C               	bcf	12,0	;volatile
  3535                           
  3536                           ;main.c: 449: }
  3537                           ;main.c: 452: if (PIR1bits.SSPIF)
  3538  0C93  198C               	btfsc	12,3	;volatile
  3539                           
  3540                           ;main.c: 453: {
  3541                           ;main.c: 457: PIR1bits.SSPIF = 0;
  3542  0C94  118C               	bcf	12,3	;volatile
  3543  0C95                     i1l188:	
  3544  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0C97  0867               	movf	??_ISR+3,w
  3547  0C98  00FF               	movwf	127
  3548  0C99  0866               	movf	??_ISR+2,w
  3549  0C9A  008A               	movwf	10
  3550  0C9B  0865               	movf	??_ISR+1,w
  3551  0C9C  0084               	movwf	4
  3552  0C9D  0E64               	swapf	??_ISR^0,w
  3553  0C9E  0083               	movwf	3
  3554  0C9F  0EFE               	swapf	126,f
  3555  0CA0  0E7E               	swapf	126,w
  3556  0CA1  0009               	retfie
  3557  0CA2                     __end_of_ISR:	
  3558                           
  3559                           	psect	intentry
  3560  0004                     __pintentry:	
  3561                           ;incstack = 0
  3562                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3563                           
  3564  0004                     interrupt_function:	
  3565  007E                     saved_w	set	btemp
  3566  0004  00FE               	movwf	btemp
  3567  0005  0E03               	swapf	3,w
  3568  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0008  00E4               	movwf	??_ISR
  3571  0009  0804               	movf	4,w
  3572  000A  00E5               	movwf	??_ISR+1
  3573  000B  080A               	movf	10,w
  3574  000C  00E6               	movwf	??_ISR+2
  3575  000D  087F               	movf	btemp+1,w
  3576  000E  00E7               	movwf	??_ISR+3
  3577  000F  120A  158A  2B75   	ljmp	_ISR
  3578                           
  3579                           	psect	text16
  3580  12D6                     __ptext16:	
  3581 ;; *************** function i1_TIMER0_Set *****************
  3582 ;; Defined at:
  3583 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  contagens       1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  contagens       1    0[COMMON] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;		None               void
  3590 ;; Registers used:
  3591 ;;		wreg
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       0       0       0       0
  3598 ;;      Locals:         1       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0
  3600 ;;      Totals:         1       0       0       0       0
  3601 ;;Total ram usage:        1 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_ISR
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function i1_TIMER0_Set
  3612  12D6                     i1_TIMER0_Set:	
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in i1_TIMER0_Set: [wreg]
  3616                           ;i1TIMER0_Set@contagens stored from wreg
  3617  12D6  00F0               	movwf	i1TIMER0_Set@contagens
  3618                           
  3619                           ;timers.c: 22: TMR0 = contagens;
  3620  12D7  0870               	movf	i1TIMER0_Set@contagens,w
  3621  12D8  1283               	bcf	3,5	;RP0=0, select bank0
  3622  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  3623  12DA  0081               	movwf	1	;volatile
  3624  12DB  0008               	return
  3625  12DC                     __end_ofi1_TIMER0_Set:	
  3626                           
  3627                           	psect	text17
  3628  086D                     __ptext17:	
  3629 ;; *************** function _send *****************
  3630 ;; Defined at:
  3631 ;;		line 117 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  index           1   36[BANK0 ] unsigned char 
  3636 ;;  velocidade      2   34[BANK0 ] unsigned int 
  3637 ;;  checksum        1   33[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         0       4       0       0       0
  3649 ;;      Temps:          0       1       0       0       0
  3650 ;;      Totals:         0       5       0       0       0
  3651 ;;Total ram usage:        5 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		_USART_WriteChar
  3656 ;;		___wmul
  3657 ;; This function is called by:
  3658 ;;		_ISR
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           
  3663                           ;psect for function _send
  3664  086D                     _send:	
  3665                           
  3666                           ;main.c: 120: buffer[0] = '#';
  3667                           
  3668                           ;incstack = 0
  3669                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3670  086D  3023               	movlw	35
  3671  086E  1283               	bcf	3,5	;RP0=0, select bank0
  3672  086F  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0870  00C0               	movwf	??_send
  3674  0871  0840               	movf	??_send,w
  3675  0872  1683               	bsf	3,5	;RP0=1, select bank3
  3676  0873  1703               	bsf	3,6	;RP1=1, select bank3
  3677  0874  0090               	movwf	_buffer^(0+384)
  3678                           
  3679                           ;main.c: 121: buffer[1] = '$';
  3680  0875  3024               	movlw	36
  3681  0876  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0877  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0878  00C0               	movwf	??_send
  3684  0879  0840               	movf	??_send,w
  3685  087A  1683               	bsf	3,5	;RP0=1, select bank3
  3686  087B  1703               	bsf	3,6	;RP1=1, select bank3
  3687  087C  0091               	movwf	(_buffer^(0+384)+1)
  3688                           
  3689                           ;main.c: 122: buffer[2] = ':';
  3690  087D  303A               	movlw	58
  3691  087E  1283               	bcf	3,5	;RP0=0, select bank0
  3692  087F  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0880  00C0               	movwf	??_send
  3694  0881  0840               	movf	??_send,w
  3695  0882  1683               	bsf	3,5	;RP0=1, select bank3
  3696  0883  1703               	bsf	3,6	;RP1=1, select bank3
  3697  0884  0092               	movwf	(_buffer^(0+384)+2)
  3698                           
  3699                           ;main.c: 124: unsigned int velocidade = rpm * 40;
  3700  0885  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0886  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0887  086B               	movf	_rpm+1,w
  3703  0888  01BB               	clrf	___wmul@multiplier+1
  3704  0889  07BB               	addwf	___wmul@multiplier+1,f
  3705  088A  086A               	movf	_rpm,w
  3706  088B  01BA               	clrf	___wmul@multiplier
  3707  088C  07BA               	addwf	___wmul@multiplier,f
  3708  088D  3028               	movlw	40
  3709  088E  00BC               	movwf	___wmul@multiplicand
  3710  088F  3000               	movlw	0
  3711  0890  00BD               	movwf	___wmul@multiplicand+1
  3712  0891  160A  118A  248B  120A  158A  	fcall	___wmul
  3713  0896  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0897  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0898  083B               	movf	?___wmul+1,w
  3716  0899  01C3               	clrf	send@velocidade+1
  3717  089A  07C3               	addwf	send@velocidade+1,f
  3718  089B  083A               	movf	?___wmul,w
  3719  089C  01C2               	clrf	send@velocidade
  3720  089D  07C2               	addwf	send@velocidade,f
  3721                           
  3722                           ;main.c: 126: buffer[3] = (velocidade >> 8) & 0xFF;
  3723  089E  0843               	movf	send@velocidade+1,w
  3724  089F  00C0               	movwf	??_send
  3725  08A0  0840               	movf	??_send,w
  3726  08A1  1683               	bsf	3,5	;RP0=1, select bank3
  3727  08A2  1703               	bsf	3,6	;RP1=1, select bank3
  3728  08A3  0093               	movwf	(_buffer^(0+384)+3)
  3729                           
  3730                           ;main.c: 127: buffer[4] = velocidade & 0xFF;
  3731  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  3732  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  3733  08A6  0842               	movf	send@velocidade,w
  3734  08A7  00C0               	movwf	??_send
  3735  08A8  0840               	movf	??_send,w
  3736  08A9  1683               	bsf	3,5	;RP0=1, select bank3
  3737  08AA  1703               	bsf	3,6	;RP1=1, select bank3
  3738  08AB  0094               	movwf	(_buffer^(0+384)+4)
  3739                           
  3740                           ;main.c: 128: buffer[5] = 'V';
  3741  08AC  3056               	movlw	86
  3742  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  3743  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  3744  08AF  00C0               	movwf	??_send
  3745  08B0  0840               	movf	??_send,w
  3746  08B1  1683               	bsf	3,5	;RP0=1, select bank3
  3747  08B2  1703               	bsf	3,6	;RP1=1, select bank3
  3748  08B3  0095               	movwf	(_buffer^(0+384)+5)
  3749                           
  3750                           ;main.c: 131: buffer[6] = (setpointUI >> 8) & 0xFF;
  3751  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  3752  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  3753  08B6  086D               	movf	_setpointUI+1,w
  3754  08B7  00C0               	movwf	??_send
  3755  08B8  0840               	movf	??_send,w
  3756  08B9  1683               	bsf	3,5	;RP0=1, select bank3
  3757  08BA  1703               	bsf	3,6	;RP1=1, select bank3
  3758  08BB  0096               	movwf	(_buffer^(0+384)+6)
  3759                           
  3760                           ;main.c: 132: buffer[7] = setpointUI & 0xFF;
  3761  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  3762  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  3763  08BE  086C               	movf	_setpointUI,w
  3764  08BF  00C0               	movwf	??_send
  3765  08C0  0840               	movf	??_send,w
  3766  08C1  1683               	bsf	3,5	;RP0=1, select bank3
  3767  08C2  1703               	bsf	3,6	;RP1=1, select bank3
  3768  08C3  0097               	movwf	(_buffer^(0+384)+7)
  3769                           
  3770                           ;main.c: 133: buffer[8] = 'S';
  3771  08C4  3053               	movlw	83
  3772  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  3773  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  3774  08C7  00C0               	movwf	??_send
  3775  08C8  0840               	movf	??_send,w
  3776  08C9  1683               	bsf	3,5	;RP0=1, select bank3
  3777  08CA  1703               	bsf	3,6	;RP1=1, select bank3
  3778  08CB  0098               	movwf	(_buffer^(0+384)+8)
  3779                           
  3780                           ;main.c: 136: buffer[9] = (deltaV >> 8) & 0xFF;
  3781  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  3782  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  3783  08CE  0869               	movf	_deltaV+1,w
  3784  08CF  00C0               	movwf	??_send
  3785  08D0  0840               	movf	??_send,w
  3786  08D1  1683               	bsf	3,5	;RP0=1, select bank3
  3787  08D2  1703               	bsf	3,6	;RP1=1, select bank3
  3788  08D3  0099               	movwf	(_buffer^(0+384)+9)
  3789                           
  3790                           ;main.c: 137: buffer[10] = deltaV & 0xFF;
  3791  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  3792  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  3793  08D6  0868               	movf	_deltaV,w
  3794  08D7  00C0               	movwf	??_send
  3795  08D8  0840               	movf	??_send,w
  3796  08D9  1683               	bsf	3,5	;RP0=1, select bank3
  3797  08DA  1703               	bsf	3,6	;RP1=1, select bank3
  3798  08DB  009A               	movwf	(_buffer^(0+384)+10)
  3799                           
  3800                           ;main.c: 138: buffer[11] = 'S';
  3801  08DC  3053               	movlw	83
  3802  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  3803  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  3804  08DF  00C0               	movwf	??_send
  3805  08E0  0840               	movf	??_send,w
  3806  08E1  1683               	bsf	3,5	;RP0=1, select bank3
  3807  08E2  1703               	bsf	3,6	;RP1=1, select bank3
  3808  08E3  009B               	movwf	(_buffer^(0+384)+11)
  3809                           
  3810                           ;main.c: 140: unsigned char checksum = 0x00;
  3811  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  3812  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  3813  08E6  01C1               	clrf	send@checksum
  3814                           
  3815                           ;main.c: 141: for (unsigned char index = 0; index < 12; index++)
  3816  08E7  01C4               	clrf	send@index
  3817  08E8  300C               	movlw	12
  3818  08E9  0244               	subwf	send@index,w
  3819  08EA  1803               	btfsc	3,0
  3820  08EB  2908               	goto	i1l2521
  3821  08EC                     i1l2513:	
  3822                           
  3823                           ;main.c: 142: {
  3824                           ;main.c: 143: USART_WriteChar(buffer[index]);
  3825  08EC  0844               	movf	send@index,w
  3826  08ED  3E90               	addlw	_buffer& (0+255)
  3827  08EE  0084               	movwf	4
  3828  08EF  1783               	bsf	3,7	;select IRP bank3
  3829  08F0  0800               	movf	0,w
  3830  08F1  160A  118A  22DC  120A  158A  	fcall	_USART_WriteChar
  3831                           
  3832                           ;main.c: 144: checksum ^= buffer[index];
  3833  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  3834  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  3835  08F8  0844               	movf	send@index,w
  3836  08F9  3E90               	addlw	_buffer& (0+255)
  3837  08FA  0084               	movwf	4
  3838  08FB  1783               	bsf	3,7	;select IRP bank3
  3839  08FC  0800               	movf	0,w
  3840  08FD  00C0               	movwf	??_send
  3841  08FE  0840               	movf	??_send,w
  3842  08FF  06C1               	xorwf	send@checksum,f
  3843  0900  3001               	movlw	1
  3844  0901  00C0               	movwf	??_send
  3845  0902  0840               	movf	??_send,w
  3846  0903  07C4               	addwf	send@index,f
  3847  0904  300C               	movlw	12
  3848  0905  0244               	subwf	send@index,w
  3849  0906  1C03               	skipc
  3850  0907  28EC               	goto	i1l2513
  3851  0908                     i1l2521:	
  3852                           
  3853                           ;main.c: 145: }
  3854                           ;main.c: 146: buffer[12] = checksum;
  3855  0908  0841               	movf	send@checksum,w
  3856  0909  00C0               	movwf	??_send
  3857  090A  0840               	movf	??_send,w
  3858  090B  1683               	bsf	3,5	;RP0=1, select bank3
  3859  090C  1703               	bsf	3,6	;RP1=1, select bank3
  3860  090D  009C               	movwf	(_buffer^(0+384)+12)
  3861                           
  3862                           ;main.c: 147: USART_WriteChar(buffer[12]);
  3863  090E  081C               	movf	(_buffer^(0+384)+12),w
  3864  090F  160A  118A  22DC   	fcall	_USART_WriteChar
  3865  0912  0008               	return
  3866  0913                     __end_of_send:	
  3867                           
  3868                           	psect	text18
  3869  150A                     __ptext18:	
  3870 ;; *************** function ___lwdiv *****************
  3871 ;; Defined at:
  3872 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  divisor         2    0[COMMON] unsigned int 
  3875 ;;  dividend        2    2[COMMON] unsigned int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  quotient        2    5[COMMON] unsigned int 
  3878 ;;  counter         1    7[COMMON] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2    0[COMMON] unsigned int 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         4       0       0       0       0
  3889 ;;      Locals:         3       0       0       0       0
  3890 ;;      Temps:          1       0       0       0       0
  3891 ;;      Totals:         8       0       0       0       0
  3892 ;;Total ram usage:        8 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_ISR
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function ___lwdiv
  3903  150A                     ___lwdiv:	
  3904                           
  3905                           ;incstack = 0
  3906                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3907  150A  01F5               	clrf	___lwdiv@quotient
  3908  150B  01F6               	clrf	___lwdiv@quotient+1
  3909  150C  0871               	movf	___lwdiv@divisor+1,w
  3910  150D  0470               	iorwf	___lwdiv@divisor,w
  3911  150E  1903               	skipnz
  3912  150F  2D41               	goto	i1l2853
  3913  1510  01F7               	clrf	___lwdiv@counter
  3914  1511  0AF7               	incf	___lwdiv@counter,f
  3915  1512                     i1l2841:	
  3916  1512  1BF1               	btfsc	___lwdiv@divisor+1,7
  3917  1513  2D20               	goto	i1l2843
  3918  1514  3001               	movlw	1
  3919  1515                     u329_25:	
  3920  1515  1003               	clrc
  3921  1516  0DF0               	rlf	___lwdiv@divisor,f
  3922  1517  0DF1               	rlf	___lwdiv@divisor+1,f
  3923  1518  3EFF               	addlw	-1
  3924  1519  1D03               	skipz
  3925  151A  2D15               	goto	u329_25
  3926  151B  3001               	movlw	1
  3927  151C  00F4               	movwf	??___lwdiv
  3928  151D  0874               	movf	??___lwdiv,w
  3929  151E  07F7               	addwf	___lwdiv@counter,f
  3930  151F  2D12               	goto	i1l2841
  3931  1520                     i1l2843:	
  3932  1520  3001               	movlw	1
  3933  1521                     u331_25:	
  3934  1521  1003               	clrc
  3935  1522  0DF5               	rlf	___lwdiv@quotient,f
  3936  1523  0DF6               	rlf	___lwdiv@quotient+1,f
  3937  1524  3EFF               	addlw	-1
  3938  1525  1D03               	skipz
  3939  1526  2D21               	goto	u331_25
  3940  1527  0871               	movf	___lwdiv@divisor+1,w
  3941  1528  0273               	subwf	___lwdiv@dividend+1,w
  3942  1529  1D03               	skipz
  3943  152A  2D2D               	goto	u332_25
  3944  152B  0870               	movf	___lwdiv@divisor,w
  3945  152C  0272               	subwf	___lwdiv@dividend,w
  3946  152D                     u332_25:	
  3947  152D  1C03               	skipc
  3948  152E  2D36               	goto	i1l2849
  3949  152F  0870               	movf	___lwdiv@divisor,w
  3950  1530  02F2               	subwf	___lwdiv@dividend,f
  3951  1531  0871               	movf	___lwdiv@divisor+1,w
  3952  1532  1C03               	skipc
  3953  1533  03F3               	decf	___lwdiv@dividend+1,f
  3954  1534  02F3               	subwf	___lwdiv@dividend+1,f
  3955  1535  1475               	bsf	___lwdiv@quotient,0
  3956  1536                     i1l2849:	
  3957  1536  3001               	movlw	1
  3958  1537                     u333_25:	
  3959  1537  1003               	clrc
  3960  1538  0CF1               	rrf	___lwdiv@divisor+1,f
  3961  1539  0CF0               	rrf	___lwdiv@divisor,f
  3962  153A  3EFF               	addlw	-1
  3963  153B  1D03               	skipz
  3964  153C  2D37               	goto	u333_25
  3965  153D  3001               	movlw	1
  3966  153E  02F7               	subwf	___lwdiv@counter,f
  3967  153F  1D03               	btfss	3,2
  3968  1540  2D20               	goto	i1l2843
  3969  1541                     i1l2853:	
  3970  1541  0876               	movf	___lwdiv@quotient+1,w
  3971  1542  01F1               	clrf	?___lwdiv+1
  3972  1543  07F1               	addwf	?___lwdiv+1,f
  3973  1544  0875               	movf	___lwdiv@quotient,w
  3974  1545  01F0               	clrf	?___lwdiv
  3975  1546  07F0               	addwf	?___lwdiv,f
  3976  1547  0008               	return
  3977  1548                     __end_of___lwdiv:	
  3978                           
  3979                           	psect	text19
  3980  1359                     __ptext19:	
  3981 ;; *************** function _USART_ReceiveChar *****************
  3982 ;; Defined at:
  3983 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  byte            1    4[COMMON] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      unsigned char 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0
  3999 ;;      Temps:          1       0       0       0       0
  4000 ;;      Totals:         2       0       0       0       0
  4001 ;;Total ram usage:        2 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		_USART_WriteString
  4006 ;; This function is called by:
  4007 ;;		_ISR
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _USART_ReceiveChar
  4013  1359                     _USART_ReceiveChar:	
  4014                           
  4015                           ;usart.c: 65: unsigned char byte;
  4016                           ;usart.c: 67: if (!OERR)
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4020  1359  1283               	bcf	3,5	;RP0=0, select bank0
  4021  135A  1303               	bcf	3,6	;RP1=0, select bank0
  4022  135B  1898               	btfsc	24,1	;volatile
  4023  135C  2B62               	goto	i1l2683
  4024                           
  4025                           ;usart.c: 68: {
  4026                           ;usart.c: 69: byte = RCREG;
  4027  135D  081A               	movf	26,w	;volatile
  4028  135E  00F3               	movwf	??_USART_ReceiveChar
  4029  135F  0873               	movf	??_USART_ReceiveChar,w
  4030  1360  00F4               	movwf	USART_ReceiveChar@byte
  4031  1361  2B6E               	goto	i1l2691
  4032  1362                     i1l2683:	
  4033                           ;usart.c: 71: }
  4034                           
  4035                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4036                           
  4037                           
  4038                           ;usart.c: 72: else
  4039                           ;usart.c: 73: {
  4040                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4041  1362  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4042  1363  160A  118A  238C   	fcall	_USART_WriteString
  4043                           
  4044                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4045  1366  1283               	bcf	3,5	;RP0=0, select bank0
  4046  1367  1303               	bcf	3,6	;RP1=0, select bank0
  4047  1368  1218               	bcf	24,4	;volatile
  4048                           
  4049                           ;usart.c: 77: byte = RCREG;
  4050  1369  081A               	movf	26,w	;volatile
  4051  136A  00F3               	movwf	??_USART_ReceiveChar
  4052  136B  0873               	movf	??_USART_ReceiveChar,w
  4053  136C  00F4               	movwf	USART_ReceiveChar@byte
  4054                           
  4055                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4056  136D  1618               	bsf	24,4	;volatile
  4057  136E                     i1l2691:	
  4058                           
  4059                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4060  136E  128C               	bcf	12,5	;volatile
  4061                           
  4062                           ;usart.c: 80: }
  4063                           ;usart.c: 82: return(byte);
  4064  136F  0874               	movf	USART_ReceiveChar@byte,w
  4065  1370  0008               	return
  4066  1371                     __end_of_USART_ReceiveChar:	
  4067                           
  4068                           	psect	text20
  4069  138C                     __ptext20:	
  4070 ;; *************** function _USART_WriteString *****************
  4071 ;; Defined at:
  4072 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  str             1    wreg     PTR const unsigned char 
  4075 ;;		 -> STR_4(40), STR_1(14), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  str             1    2[COMMON] PTR const unsigned char 
  4078 ;;		 -> STR_4(40), STR_1(14), 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       0       0       0       0
  4089 ;;      Locals:         1       0       0       0       0
  4090 ;;      Temps:          1       0       0       0       0
  4091 ;;      Totals:         2       0       0       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    1
  4095 ;; This function calls:
  4096 ;;		_USART_WriteChar
  4097 ;; This function is called by:
  4098 ;;		_ISR
  4099 ;;		_USART_ReceiveChar
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function _USART_WriteString
  4105  138C                     _USART_WriteString:	
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4109                           ;USART_WriteString@str stored from wreg
  4110  138C  00F2               	movwf	USART_WriteString@str
  4111  138D                     i1l2299:	
  4112                           ;usart.c: 54: while(*str != '\0')
  4113                           
  4114  138D  0872               	movf	USART_WriteString@str,w
  4115  138E  0084               	movwf	4
  4116  138F  160A  118A  200A  160A  118A  	fcall	stringdir
  4117  1394  3800               	iorlw	0
  4118  1395  1903               	btfsc	3,2
  4119  1396  0008               	return
  4120                           
  4121                           ;usart.c: 55: {
  4122                           ;usart.c: 56: USART_WriteChar(*str);
  4123  1397  0872               	movf	USART_WriteString@str,w
  4124  1398  0084               	movwf	4
  4125  1399  160A  118A  200A  160A  118A  	fcall	stringdir
  4126  139E  160A  118A  22DC  160A  118A  	fcall	_USART_WriteChar
  4127                           
  4128                           ;usart.c: 57: str++;
  4129  13A3  3001               	movlw	1
  4130  13A4  00F1               	movwf	??_USART_WriteString
  4131  13A5  0871               	movf	??_USART_WriteString,w
  4132  13A6  07F2               	addwf	USART_WriteString@str,f
  4133  13A7  2B8D               	goto	i1l2299
  4134  13A8                     __end_of_USART_WriteString:	
  4135                           
  4136                           	psect	text21
  4137  12DC                     __ptext21:	
  4138 ;; *************** function _USART_WriteChar *****************
  4139 ;; Defined at:
  4140 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  byte            1    wreg     unsigned char 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  byte            1    0[COMMON] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;		None               void
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4154 ;;      Params:         0       0       0       0       0
  4155 ;;      Locals:         1       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0
  4157 ;;      Totals:         1       0       0       0       0
  4158 ;;Total ram usage:        1 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_send
  4164 ;;		_USART_WriteString
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _USART_WriteChar
  4170  12DC                     _USART_WriteChar:	
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _USART_WriteChar: [wreg]
  4174                           ;USART_WriteChar@byte stored from wreg
  4175  12DC  00F0               	movwf	USART_WriteChar@byte
  4176  12DD                     i1l232:	
  4177                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4178                           
  4179  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  4180  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  4181  12DF  1E0C               	btfss	12,4	;volatile
  4182  12E0  2ADD               	goto	i1l232
  4183                           
  4184                           ;usart.c: 47: TXREG = byte;
  4185  12E1  0870               	movf	USART_WriteChar@byte,w
  4186  12E2  0099               	movwf	25	;volatile
  4187  12E3  0008               	return
  4188  12E4                     __end_of_USART_WriteChar:	
  4189                           
  4190                           	psect	text22
  4191  1658                     __ptext22:	
  4192 ;; *************** function _Fuzzy *****************
  4193 ;; Defined at:
  4194 ;;		line 172 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  a               2   16[BANK1 ] int 
  4199 ;;  a               2   14[BANK1 ] int 
  4200 ;;  a               2   12[BANK1 ] int 
  4201 ;;  a               2   10[BANK1 ] int 
  4202 ;;  a               2   26[BANK1 ] int 
  4203 ;;  x               3   31[BANK1 ] float 
  4204 ;;  rule            3   28[BANK1 ] float 
  4205 ;;  total_area      3   23[BANK1 ] float 
  4206 ;;  soma            3   20[BANK1 ] float 
  4207 ;;  reajuste        3    5[BANK1 ] float 
  4208 ;;  delta           2   18[BANK1 ] int 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;		None               void
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4218 ;;      Params:         0       0       0       0       0
  4219 ;;      Locals:         0       0      34       0       0
  4220 ;;      Temps:          0       2       0       0       0
  4221 ;;      Totals:         0       2      34       0       0
  4222 ;;Total ram usage:       36 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    3
  4225 ;; This function calls:
  4226 ;;		___awtoft
  4227 ;;		___ftadd
  4228 ;;		___ftdiv
  4229 ;;		___ftge
  4230 ;;		___ftmul
  4231 ;;		___ftneg
  4232 ;;		___fttol
  4233 ;;		___lwtoft
  4234 ;;		___wmul
  4235 ;;		_abs
  4236 ;;		_maximo
  4237 ;;		_minimo
  4238 ;;		_trapmf
  4239 ;;		i1_PWM_DutyCycle2
  4240 ;; This function is called by:
  4241 ;;		_ISR
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function _Fuzzy
  4247  1658                     _Fuzzy:	
  4248                           
  4249                           ;main.c: 191: deltaV = minimo(abs(setpointUI - rpm), 2000);
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4253  1658  3000               	movlw	0
  4254  1659  1283               	bcf	3,5	;RP0=0, select bank0
  4255  165A  1303               	bcf	3,6	;RP1=0, select bank0
  4256  165B  00A3               	movwf	minimo@b
  4257  165C  30FA               	movlw	250
  4258  165D  00A4               	movwf	minimo@b+1
  4259  165E  3044               	movlw	68
  4260  165F  00A5               	movwf	minimo@b+2
  4261  1660  096A               	comf	_rpm,w
  4262  1661  00E2               	movwf	??_Fuzzy
  4263  1662  096B               	comf	_rpm+1,w
  4264  1663  00E3               	movwf	??_Fuzzy+1
  4265  1664  0AE2               	incf	??_Fuzzy,f
  4266  1665  1903               	skipnz
  4267  1666  0AE3               	incf	??_Fuzzy+1,f
  4268  1667  086C               	movf	_setpointUI,w
  4269  1668  0762               	addwf	??_Fuzzy,w
  4270  1669  00F0               	movwf	abs@a
  4271  166A  086D               	movf	_setpointUI+1,w
  4272  166B  1803               	skipnc
  4273  166C  0A6D               	incf	_setpointUI+1,w
  4274  166D  0763               	addwf	??_Fuzzy+1,w
  4275  166E  00F1               	movwf	abs@a+1
  4276  166F  160A  118A  2309  160A  118A  	fcall	_abs
  4277  1674  0871               	movf	?_abs+1,w
  4278  1675  01F9               	clrf	___awtoft@c+1
  4279  1676  07F9               	addwf	___awtoft@c+1,f
  4280  1677  0870               	movf	?_abs,w
  4281  1678  01F8               	clrf	___awtoft@c
  4282  1679  07F8               	addwf	___awtoft@c,f
  4283  167A  160A  118A  2404  160A  118A  	fcall	___awtoft
  4284  167F  0878               	movf	?___awtoft,w
  4285  1680  1283               	bcf	3,5	;RP0=0, select bank0
  4286  1681  1303               	bcf	3,6	;RP1=0, select bank0
  4287  1682  00A0               	movwf	minimo@a
  4288  1683  0879               	movf	?___awtoft+1,w
  4289  1684  00A1               	movwf	minimo@a+1
  4290  1685  087A               	movf	?___awtoft+2,w
  4291  1686  00A2               	movwf	minimo@a+2
  4292  1687  160A  118A  23C6  160A  118A  	fcall	_minimo
  4293  168C  1283               	bcf	3,5	;RP0=0, select bank0
  4294  168D  1303               	bcf	3,6	;RP1=0, select bank0
  4295  168E  0820               	movf	?_minimo,w
  4296  168F  00AC               	movwf	___fttol@f1
  4297  1690  0821               	movf	?_minimo+1,w
  4298  1691  00AD               	movwf	___fttol@f1+1
  4299  1692  0822               	movf	?_minimo+2,w
  4300  1693  00AE               	movwf	___fttol@f1+2
  4301  1694  160A  118A  26E3  160A  118A  	fcall	___fttol
  4302  1699  1283               	bcf	3,5	;RP0=0, select bank0
  4303  169A  1303               	bcf	3,6	;RP1=0, select bank0
  4304  169B  082D               	movf	?___fttol+1,w
  4305  169C  01E9               	clrf	_deltaV+1
  4306  169D  07E9               	addwf	_deltaV+1,f
  4307  169E  082C               	movf	?___fttol,w
  4308  169F  01E8               	clrf	_deltaV
  4309  16A0  07E8               	addwf	_deltaV,f
  4310                           
  4311                           ;main.c: 192: int delta = maximo(minimo(abs(deltaV - antigoUI), 1000), 1);
  4312  16A1  3000               	movlw	0
  4313  16A2  00A9               	movwf	maximo@b
  4314  16A3  3080               	movlw	128
  4315  16A4  00AA               	movwf	maximo@b+1
  4316  16A5  303F               	movlw	63
  4317  16A6  00AB               	movwf	maximo@b+2
  4318  16A7  3000               	movlw	0
  4319  16A8  00A3               	movwf	minimo@b
  4320  16A9  307A               	movlw	122
  4321  16AA  00A4               	movwf	minimo@b+1
  4322  16AB  3044               	movlw	68
  4323  16AC  00A5               	movwf	minimo@b+2
  4324  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  4325  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  4326  16AF  0956               	comf	_antigoUI^(0+128),w
  4327  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  4328  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  4329  16B2  00E2               	movwf	??_Fuzzy
  4330  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  4331  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  4332  16B5  0957               	comf	(_antigoUI+1)^(0+128),w
  4333  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  4334  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  4335  16B8  00E3               	movwf	??_Fuzzy+1
  4336  16B9  0AE2               	incf	??_Fuzzy,f
  4337  16BA  1903               	skipnz
  4338  16BB  0AE3               	incf	??_Fuzzy+1,f
  4339  16BC  0868               	movf	_deltaV,w
  4340  16BD  0762               	addwf	??_Fuzzy,w
  4341  16BE  00F0               	movwf	abs@a
  4342  16BF  0869               	movf	_deltaV+1,w
  4343  16C0  1803               	skipnc
  4344  16C1  0A69               	incf	_deltaV+1,w
  4345  16C2  0763               	addwf	??_Fuzzy+1,w
  4346  16C3  00F1               	movwf	abs@a+1
  4347  16C4  160A  118A  2309  160A  118A  	fcall	_abs
  4348  16C9  0871               	movf	?_abs+1,w
  4349  16CA  01F9               	clrf	___awtoft@c+1
  4350  16CB  07F9               	addwf	___awtoft@c+1,f
  4351  16CC  0870               	movf	?_abs,w
  4352  16CD  01F8               	clrf	___awtoft@c
  4353  16CE  07F8               	addwf	___awtoft@c,f
  4354  16CF  160A  118A  2404  160A  118A  	fcall	___awtoft
  4355  16D4  0878               	movf	?___awtoft,w
  4356  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  4357  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  4358  16D7  00A0               	movwf	minimo@a
  4359  16D8  0879               	movf	?___awtoft+1,w
  4360  16D9  00A1               	movwf	minimo@a+1
  4361  16DA  087A               	movf	?___awtoft+2,w
  4362  16DB  00A2               	movwf	minimo@a+2
  4363  16DC  160A  118A  23C6   	fcall	_minimo
  4364  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  4365  16E0  120A  158A  2DF8   	ljmp	L11
  4366                           
  4367                           	psect	text23
  4368  1371                     __ptext23:	
  4369 ;; *************** function i1_PWM_DutyCycle2 *****************
  4370 ;; Defined at:
  4371 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  valor           2    0[COMMON] int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;		None               void
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         2       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0
  4387 ;;      Temps:          2       0       0       0       0
  4388 ;;      Totals:         4       0       0       0       0
  4389 ;;Total ram usage:        4 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_Fuzzy
  4395 ;;		_ISR
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function i1_PWM_DutyCycle2
  4401  1371                     i1_PWM_DutyCycle2:	
  4402                           
  4403                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4404                           
  4405                           ;incstack = 0
  4406                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4407  1371  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4408  1372  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4409  1373  0870               	movf	i1PWM_DutyCycle2@valor,w
  4410  1374  00F2               	movwf	??i1_PWM_DutyCycle2
  4411  1375  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4412  1376  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4413  1377  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4414  1378  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4415  1379  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4416  137A  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4417  137B  0872               	movf	??i1_PWM_DutyCycle2,w
  4418  137C  1283               	bcf	3,5	;RP0=0, select bank0
  4419  137D  1303               	bcf	3,6	;RP1=0, select bank0
  4420  137E  009B               	movwf	27	;volatile
  4421                           
  4422                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4423  137F  0870               	movf	i1PWM_DutyCycle2@valor,w
  4424  1380  00F2               	movwf	??i1_PWM_DutyCycle2
  4425  1381  3003               	movlw	3
  4426  1382                     u287_25:	
  4427  1382  1003               	clrc
  4428  1383  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4429  1384  3EFF               	addlw	-1
  4430  1385  1D03               	skipz
  4431  1386  2B82               	goto	u287_25
  4432  1387  1003               	clrc
  4433  1388  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4434  1389  380C               	iorlw	12
  4435  138A  009D               	movwf	29	;volatile
  4436  138B  0008               	return
  4437  138C                     __end_ofi1_PWM_DutyCycle2:	
  4438                           
  4439                           	psect	text24
  4440  0CA2                     __ptext24:	
  4441 ;; *************** function _trapmf *****************
  4442 ;; Defined at:
  4443 ;;		line 83 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  x               3   32[BANK0 ] float 
  4446 ;;  a               3   35[BANK0 ] float 
  4447 ;;  b               3   38[BANK0 ] float 
  4448 ;;  c               3   41[BANK0 ] float 
  4449 ;;  d               3   44[BANK0 ] float 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  ua              3   47[BANK0 ] float 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  3   32[BANK0 ] float 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0      15       0       0       0
  4462 ;;      Locals:         0       3       0       0       0
  4463 ;;      Temps:          0       0       0       0       0
  4464 ;;      Totals:         0      18       0       0       0
  4465 ;;Total ram usage:       18 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		___ftadd
  4470 ;;		___ftdiv
  4471 ;;		___ftge
  4472 ;;		___ftneg
  4473 ;; This function is called by:
  4474 ;;		_Fuzzy
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _trapmf
  4480  0CA2                     _trapmf:	
  4481                           
  4482                           ;main.c: 85: float ua = 0;
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4486  0CA2  3000               	movlw	0
  4487  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0CA5  00CF               	movwf	trapmf@ua
  4490  0CA6  3000               	movlw	0
  4491  0CA7  00D0               	movwf	trapmf@ua+1
  4492  0CA8  3000               	movlw	0
  4493  0CA9  00D1               	movwf	trapmf@ua+2
  4494                           
  4495                           ;main.c: 87: if (x <= a)
  4496  0CAA  0843               	movf	trapmf@a,w
  4497  0CAB  00F0               	movwf	___ftge@ff1
  4498  0CAC  0844               	movf	trapmf@a+1,w
  4499  0CAD  00F1               	movwf	___ftge@ff1+1
  4500  0CAE  0845               	movf	trapmf@a+2,w
  4501  0CAF  00F2               	movwf	___ftge@ff1+2
  4502  0CB0  0840               	movf	trapmf@x,w
  4503  0CB1  00F3               	movwf	___ftge@ff2
  4504  0CB2  0841               	movf	trapmf@x+1,w
  4505  0CB3  00F4               	movwf	___ftge@ff2+1
  4506  0CB4  0842               	movf	trapmf@x+2,w
  4507  0CB5  00F5               	movwf	___ftge@ff2+2
  4508  0CB6  160A  118A  2593  120A  158A  	fcall	___ftge
  4509  0CBB  1803               	btfsc	3,0
  4510  0CBC  2DE7               	goto	L7
  4511                           
  4512                           ;main.c: 89: else if ((a < x) && (x <= b))
  4513                           
  4514                           ;main.c: 88: ua = 0;
  4515  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0CBF  0843               	movf	trapmf@a,w
  4518  0CC0  00F0               	movwf	___ftge@ff1
  4519  0CC1  0844               	movf	trapmf@a+1,w
  4520  0CC2  00F1               	movwf	___ftge@ff1+1
  4521  0CC3  0845               	movf	trapmf@a+2,w
  4522  0CC4  00F2               	movwf	___ftge@ff1+2
  4523  0CC5  0840               	movf	trapmf@x,w
  4524  0CC6  00F3               	movwf	___ftge@ff2
  4525  0CC7  0841               	movf	trapmf@x+1,w
  4526  0CC8  00F4               	movwf	___ftge@ff2+1
  4527  0CC9  0842               	movf	trapmf@x+2,w
  4528  0CCA  00F5               	movwf	___ftge@ff2+2
  4529  0CCB  160A  118A  2593  120A  158A  	fcall	___ftge
  4530  0CD0  1803               	btfsc	3,0
  4531  0CD1  2D1B               	goto	i1l3727
  4532  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0CD4  0846               	movf	trapmf@b,w
  4535  0CD5  00F0               	movwf	___ftge@ff1
  4536  0CD6  0847               	movf	trapmf@b+1,w
  4537  0CD7  00F1               	movwf	___ftge@ff1+1
  4538  0CD8  0848               	movf	trapmf@b+2,w
  4539  0CD9  00F2               	movwf	___ftge@ff1+2
  4540  0CDA  0840               	movf	trapmf@x,w
  4541  0CDB  00F3               	movwf	___ftge@ff2
  4542  0CDC  0841               	movf	trapmf@x+1,w
  4543  0CDD  00F4               	movwf	___ftge@ff2+1
  4544  0CDE  0842               	movf	trapmf@x+2,w
  4545  0CDF  00F5               	movwf	___ftge@ff2+2
  4546  0CE0  160A  118A  2593  120A  158A  	fcall	___ftge
  4547  0CE5  1C03               	btfss	3,0
  4548  0CE6  2D1B               	goto	i1l3727
  4549                           
  4550                           ;main.c: 90: ua = ((x - a) / (b - a));
  4551  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0CE9  0846               	movf	trapmf@b,w
  4554  0CEA  00A3               	movwf	___ftadd@f1
  4555  0CEB  0847               	movf	trapmf@b+1,w
  4556  0CEC  00A4               	movwf	___ftadd@f1+1
  4557  0CED  0848               	movf	trapmf@b+2,w
  4558  0CEE  00A5               	movwf	___ftadd@f1+2
  4559  0CEF  0843               	movf	trapmf@a,w
  4560  0CF0  00A0               	movwf	___ftneg@f1
  4561  0CF1  0844               	movf	trapmf@a+1,w
  4562  0CF2  00A1               	movwf	___ftneg@f1+1
  4563  0CF3  0845               	movf	trapmf@a+2,w
  4564  0CF4  00A2               	movwf	___ftneg@f1+2
  4565  0CF5  160A  118A  22F4  120A  158A  	fcall	___ftneg
  4566  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0CFC  0820               	movf	?___ftneg,w
  4569  0CFD  00A6               	movwf	___ftadd@f2
  4570  0CFE  0821               	movf	?___ftneg+1,w
  4571  0CFF  00A7               	movwf	___ftadd@f2+1
  4572  0D00  0822               	movf	?___ftneg+2,w
  4573  0D01  00A8               	movwf	___ftadd@f2+2
  4574  0D02  120A  118A  26E4  120A  158A  	fcall	___ftadd
  4575  0D07  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0D08  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0D09  0823               	movf	?___ftadd,w
  4578  0D0A  00B0               	movwf	___ftdiv@f2
  4579  0D0B  0824               	movf	?___ftadd+1,w
  4580  0D0C  00B1               	movwf	___ftdiv@f2+1
  4581  0D0D  0825               	movf	?___ftadd+2,w
  4582  0D0E  00B2               	movwf	___ftdiv@f2+2
  4583  0D0F  0840               	movf	trapmf@x,w
  4584  0D10  00A3               	movwf	___ftadd@f1
  4585  0D11  0841               	movf	trapmf@x+1,w
  4586  0D12  00A4               	movwf	___ftadd@f1+1
  4587  0D13  0842               	movf	trapmf@x+2,w
  4588  0D14  00A5               	movwf	___ftadd@f1+2
  4589  0D15  0843               	movf	trapmf@a,w
  4590  0D16  00A0               	movwf	___ftneg@f1
  4591  0D17  0844               	movf	trapmf@a+1,w
  4592  0D18  00A1               	movwf	___ftneg@f1+1
  4593  0D19  0845               	movf	trapmf@a+2,w
  4594  0D1A  2DAA               	goto	L9
  4595  0D1B                     i1l3727:	
  4596                           
  4597                           ;main.c: 91: else if ((b <= x) && (x <= c))
  4598  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  4599  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  4600  0D1D  0840               	movf	trapmf@x,w
  4601  0D1E  00F0               	movwf	___ftge@ff1
  4602  0D1F  0841               	movf	trapmf@x+1,w
  4603  0D20  00F1               	movwf	___ftge@ff1+1
  4604  0D21  0842               	movf	trapmf@x+2,w
  4605  0D22  00F2               	movwf	___ftge@ff1+2
  4606  0D23  0846               	movf	trapmf@b,w
  4607  0D24  00F3               	movwf	___ftge@ff2
  4608  0D25  0847               	movf	trapmf@b+1,w
  4609  0D26  00F4               	movwf	___ftge@ff2+1
  4610  0D27  0848               	movf	trapmf@b+2,w
  4611  0D28  00F5               	movwf	___ftge@ff2+2
  4612  0D29  160A  118A  2593  120A  158A  	fcall	___ftge
  4613  0D2E  1C03               	btfss	3,0
  4614  0D2F  2D4D               	goto	i1l3733
  4615  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  4616  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0D32  0849               	movf	trapmf@c,w
  4618  0D33  00F0               	movwf	___ftge@ff1
  4619  0D34  084A               	movf	trapmf@c+1,w
  4620  0D35  00F1               	movwf	___ftge@ff1+1
  4621  0D36  084B               	movf	trapmf@c+2,w
  4622  0D37  00F2               	movwf	___ftge@ff1+2
  4623  0D38  0840               	movf	trapmf@x,w
  4624  0D39  00F3               	movwf	___ftge@ff2
  4625  0D3A  0841               	movf	trapmf@x+1,w
  4626  0D3B  00F4               	movwf	___ftge@ff2+1
  4627  0D3C  0842               	movf	trapmf@x+2,w
  4628  0D3D  00F5               	movwf	___ftge@ff2+2
  4629  0D3E  160A  118A  2593  120A  158A  	fcall	___ftge
  4630  0D43  1C03               	btfss	3,0
  4631  0D44  2D4D               	goto	i1l3733
  4632                           
  4633                           ;main.c: 92: ua = 1;
  4634  0D45  3000               	movlw	0
  4635  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0D48  00CF               	movwf	trapmf@ua
  4638  0D49  3080               	movlw	128
  4639  0D4A  00D0               	movwf	trapmf@ua+1
  4640  0D4B  303F               	movlw	63
  4641  0D4C  2DEE               	goto	L6
  4642  0D4D                     i1l3733:	
  4643                           
  4644                           ;main.c: 93: else if ((c < x) && (x <= d))
  4645  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0D4F  0849               	movf	trapmf@c,w
  4648  0D50  00F0               	movwf	___ftge@ff1
  4649  0D51  084A               	movf	trapmf@c+1,w
  4650  0D52  00F1               	movwf	___ftge@ff1+1
  4651  0D53  084B               	movf	trapmf@c+2,w
  4652  0D54  00F2               	movwf	___ftge@ff1+2
  4653  0D55  0840               	movf	trapmf@x,w
  4654  0D56  00F3               	movwf	___ftge@ff2
  4655  0D57  0841               	movf	trapmf@x+1,w
  4656  0D58  00F4               	movwf	___ftge@ff2+1
  4657  0D59  0842               	movf	trapmf@x+2,w
  4658  0D5A  00F5               	movwf	___ftge@ff2+2
  4659  0D5B  160A  118A  2593  120A  158A  	fcall	___ftge
  4660  0D60  1803               	btfsc	3,0
  4661  0D61  2DD2               	goto	i1l3739
  4662  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0D64  084C               	movf	trapmf@d,w
  4665  0D65  00F0               	movwf	___ftge@ff1
  4666  0D66  084D               	movf	trapmf@d+1,w
  4667  0D67  00F1               	movwf	___ftge@ff1+1
  4668  0D68  084E               	movf	trapmf@d+2,w
  4669  0D69  00F2               	movwf	___ftge@ff1+2
  4670  0D6A  0840               	movf	trapmf@x,w
  4671  0D6B  00F3               	movwf	___ftge@ff2
  4672  0D6C  0841               	movf	trapmf@x+1,w
  4673  0D6D  00F4               	movwf	___ftge@ff2+1
  4674  0D6E  0842               	movf	trapmf@x+2,w
  4675  0D6F  00F5               	movwf	___ftge@ff2+2
  4676  0D70  160A  118A  2593  120A  158A  	fcall	___ftge
  4677  0D75  1C03               	btfss	3,0
  4678  0D76  2DD2               	goto	i1l3739
  4679                           
  4680                           ;main.c: 94: ua = ((d - x) / (d - c));
  4681  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  4682  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  4683  0D79  084C               	movf	trapmf@d,w
  4684  0D7A  00A3               	movwf	___ftadd@f1
  4685  0D7B  084D               	movf	trapmf@d+1,w
  4686  0D7C  00A4               	movwf	___ftadd@f1+1
  4687  0D7D  084E               	movf	trapmf@d+2,w
  4688  0D7E  00A5               	movwf	___ftadd@f1+2
  4689  0D7F  0849               	movf	trapmf@c,w
  4690  0D80  00A0               	movwf	___ftneg@f1
  4691  0D81  084A               	movf	trapmf@c+1,w
  4692  0D82  00A1               	movwf	___ftneg@f1+1
  4693  0D83  084B               	movf	trapmf@c+2,w
  4694  0D84  00A2               	movwf	___ftneg@f1+2
  4695  0D85  160A  118A  22F4  120A  158A  	fcall	___ftneg
  4696  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  4697  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  4698  0D8C  0820               	movf	?___ftneg,w
  4699  0D8D  00A6               	movwf	___ftadd@f2
  4700  0D8E  0821               	movf	?___ftneg+1,w
  4701  0D8F  00A7               	movwf	___ftadd@f2+1
  4702  0D90  0822               	movf	?___ftneg+2,w
  4703  0D91  00A8               	movwf	___ftadd@f2+2
  4704  0D92  120A  118A  26E4  120A  158A  	fcall	___ftadd
  4705  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0D99  0823               	movf	?___ftadd,w
  4708  0D9A  00B0               	movwf	___ftdiv@f2
  4709  0D9B  0824               	movf	?___ftadd+1,w
  4710  0D9C  00B1               	movwf	___ftdiv@f2+1
  4711  0D9D  0825               	movf	?___ftadd+2,w
  4712  0D9E  00B2               	movwf	___ftdiv@f2+2
  4713  0D9F  084C               	movf	trapmf@d,w
  4714  0DA0  00A3               	movwf	___ftadd@f1
  4715  0DA1  084D               	movf	trapmf@d+1,w
  4716  0DA2  00A4               	movwf	___ftadd@f1+1
  4717  0DA3  084E               	movf	trapmf@d+2,w
  4718  0DA4  00A5               	movwf	___ftadd@f1+2
  4719  0DA5  0840               	movf	trapmf@x,w
  4720  0DA6  00A0               	movwf	___ftneg@f1
  4721  0DA7  0841               	movf	trapmf@x+1,w
  4722  0DA8  00A1               	movwf	___ftneg@f1+1
  4723  0DA9  0842               	movf	trapmf@x+2,w
  4724  0DAA                     L9:	
  4725  0DAA  00A2               	movwf	___ftneg@f1+2
  4726  0DAB  160A  118A  22F4  120A  158A  	fcall	___ftneg
  4727  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0DB2  0820               	movf	?___ftneg,w
  4730  0DB3  00A6               	movwf	___ftadd@f2
  4731  0DB4  0821               	movf	?___ftneg+1,w
  4732  0DB5  00A7               	movwf	___ftadd@f2+1
  4733  0DB6  0822               	movf	?___ftneg+2,w
  4734  0DB7  00A8               	movwf	___ftadd@f2+2
  4735  0DB8  120A  118A  26E4  120A  158A  	fcall	___ftadd
  4736  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4737  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4738  0DBF  0823               	movf	?___ftadd,w
  4739  0DC0  00B3               	movwf	___ftdiv@f1
  4740  0DC1  0824               	movf	?___ftadd+1,w
  4741  0DC2  00B4               	movwf	___ftdiv@f1+1
  4742  0DC3  0825               	movf	?___ftadd+2,w
  4743  0DC4  00B5               	movwf	___ftdiv@f1+2
  4744  0DC5  120A  158A  2113  120A  158A  	fcall	___ftdiv
  4745  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0DCC  0830               	movf	?___ftdiv,w
  4748  0DCD  00CF               	movwf	trapmf@ua
  4749  0DCE  0831               	movf	?___ftdiv+1,w
  4750  0DCF  00D0               	movwf	trapmf@ua+1
  4751  0DD0  0832               	movf	?___ftdiv+2,w
  4752  0DD1  2DEE               	goto	L6
  4753  0DD2                     i1l3739:	
  4754                           
  4755                           ;main.c: 95: else if (x > d)
  4756  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0DD4  084C               	movf	trapmf@d,w
  4759  0DD5  00F0               	movwf	___ftge@ff1
  4760  0DD6  084D               	movf	trapmf@d+1,w
  4761  0DD7  00F1               	movwf	___ftge@ff1+1
  4762  0DD8  084E               	movf	trapmf@d+2,w
  4763  0DD9  00F2               	movwf	___ftge@ff1+2
  4764  0DDA  0840               	movf	trapmf@x,w
  4765  0DDB  00F3               	movwf	___ftge@ff2
  4766  0DDC  0841               	movf	trapmf@x+1,w
  4767  0DDD  00F4               	movwf	___ftge@ff2+1
  4768  0DDE  0842               	movf	trapmf@x+2,w
  4769  0DDF  00F5               	movwf	___ftge@ff2+2
  4770  0DE0  160A  118A  2593  120A  158A  	fcall	___ftge
  4771  0DE5  1803               	btfsc	3,0
  4772  0DE6  2DEF               	goto	i1l122
  4773  0DE7                     L7:	
  4774                           
  4775                           ;main.c: 96: ua = 0;
  4776  0DE7  3000               	movlw	0
  4777  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4779  0DEA  00CF               	movwf	trapmf@ua
  4780  0DEB  3000               	movlw	0
  4781  0DEC  00D0               	movwf	trapmf@ua+1
  4782  0DED  3000               	movlw	0
  4783  0DEE                     L6:	
  4784  0DEE  00D1               	movwf	trapmf@ua+2
  4785  0DEF                     i1l122:	
  4786                           
  4787                           ;main.c: 98: return(ua);
  4788  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0DF1  084F               	movf	trapmf@ua,w
  4791  0DF2  00C0               	movwf	?_trapmf
  4792  0DF3  0850               	movf	trapmf@ua+1,w
  4793  0DF4  00C1               	movwf	?_trapmf+1
  4794  0DF5  0851               	movf	trapmf@ua+2,w
  4795  0DF6  00C2               	movwf	?_trapmf+2
  4796  0DF7  0008               	return
  4797  0DF8                     __end_of_trapmf:	
  4798                           
  4799                           	psect	text25
  4800  12F4                     __ptext25:	
  4801 ;; *************** function ___ftneg *****************
  4802 ;; Defined at:
  4803 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  f1              3    0[BANK0 ] float 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  3    0[BANK0 ] float 
  4810 ;; Registers used:
  4811 ;;		wreg
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       3       0       0       0
  4818 ;;      Locals:         0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0
  4820 ;;      Totals:         0       3       0       0       0
  4821 ;;Total ram usage:        3 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_trapmf
  4827 ;;		_Fuzzy
  4828 ;;		_trimf
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function ___ftneg
  4834  12F4                     ___ftneg:	
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in ___ftneg: [wreg]
  4838  12F4  1283               	bcf	3,5	;RP0=0, select bank0
  4839  12F5  1303               	bcf	3,6	;RP1=0, select bank0
  4840  12F6  0822               	movf	___ftneg@f1+2,w
  4841  12F7  0421               	iorwf	___ftneg@f1+1,w
  4842  12F8  0420               	iorwf	___ftneg@f1,w
  4843  12F9  1903               	skipnz
  4844  12FA  0008               	return
  4845  12FB  3080               	movlw	128
  4846  12FC  06A2               	xorwf	___ftneg@f1+2,f
  4847  12FD  0008               	return
  4848  12FE                     __end_of___ftneg:	
  4849                           
  4850                           	psect	text26
  4851  0913                     __ptext26:	
  4852 ;; *************** function ___ftdiv *****************
  4853 ;; Defined at:
  4854 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  f2              3   16[BANK0 ] float 
  4857 ;;  f1              3   19[BANK0 ] float 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  f3              3   27[BANK0 ] float 
  4860 ;;  sign            1   31[BANK0 ] unsigned char 
  4861 ;;  exp             1   30[BANK0 ] unsigned char 
  4862 ;;  cntr            1   26[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  3   16[BANK0 ] float 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         0       6       0       0       0
  4873 ;;      Locals:         0       6       0       0       0
  4874 ;;      Temps:          0       4       0       0       0
  4875 ;;      Totals:         0      16       0       0       0
  4876 ;;Total ram usage:       16 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    1
  4879 ;; This function calls:
  4880 ;;		___ftpack
  4881 ;; This function is called by:
  4882 ;;		_trapmf
  4883 ;;		_Fuzzy
  4884 ;;		_trimf
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function ___ftdiv
  4890  0913                     ___ftdiv:	
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4894  0913  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0914  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0915  0833               	movf	___ftdiv@f1,w
  4897  0916  00B6               	movwf	??___ftdiv
  4898  0917  0834               	movf	___ftdiv@f1+1,w
  4899  0918  00B7               	movwf	??___ftdiv+1
  4900  0919  0835               	movf	___ftdiv@f1+2,w
  4901  091A  00B8               	movwf	??___ftdiv+2
  4902  091B  1003               	clrc
  4903  091C  0D37               	rlf	??___ftdiv+1,w
  4904  091D  0D38               	rlf	??___ftdiv+2,w
  4905  091E  00B9               	movwf	??___ftdiv+3
  4906  091F  0839               	movf	??___ftdiv+3,w
  4907  0920  00BE               	movwf	___ftdiv@exp
  4908  0921  08BE               	movf	___ftdiv@exp,f
  4909  0922  1D03               	skipz
  4910  0923  292B               	goto	i1l2177
  4911  0924  3000               	movlw	0
  4912  0925  00B0               	movwf	?___ftdiv
  4913  0926  3000               	movlw	0
  4914  0927  00B1               	movwf	?___ftdiv+1
  4915  0928  3000               	movlw	0
  4916  0929  00B2               	movwf	?___ftdiv+2
  4917  092A  0008               	return
  4918  092B                     i1l2177:	
  4919  092B  0830               	movf	___ftdiv@f2,w
  4920  092C  00B6               	movwf	??___ftdiv
  4921  092D  0831               	movf	___ftdiv@f2+1,w
  4922  092E  00B7               	movwf	??___ftdiv+1
  4923  092F  0832               	movf	___ftdiv@f2+2,w
  4924  0930  00B8               	movwf	??___ftdiv+2
  4925  0931  1003               	clrc
  4926  0932  0D37               	rlf	??___ftdiv+1,w
  4927  0933  0D38               	rlf	??___ftdiv+2,w
  4928  0934  00B9               	movwf	??___ftdiv+3
  4929  0935  0839               	movf	??___ftdiv+3,w
  4930  0936  00BF               	movwf	___ftdiv@sign
  4931  0937  08BF               	movf	___ftdiv@sign,f
  4932  0938  1D03               	skipz
  4933  0939  2941               	goto	i1l2183
  4934  093A  3000               	movlw	0
  4935  093B  00B0               	movwf	?___ftdiv
  4936  093C  3000               	movlw	0
  4937  093D  00B1               	movwf	?___ftdiv+1
  4938  093E  3000               	movlw	0
  4939  093F  00B2               	movwf	?___ftdiv+2
  4940  0940  0008               	return
  4941  0941                     i1l2183:	
  4942  0941  3000               	movlw	0
  4943  0942  00BB               	movwf	___ftdiv@f3
  4944  0943  3000               	movlw	0
  4945  0944  00BC               	movwf	___ftdiv@f3+1
  4946  0945  3000               	movlw	0
  4947  0946  00BD               	movwf	___ftdiv@f3+2
  4948  0947  3089               	movlw	137
  4949  0948  073F               	addwf	___ftdiv@sign,w
  4950  0949  00B6               	movwf	??___ftdiv
  4951  094A  0836               	movf	??___ftdiv,w
  4952  094B  02BE               	subwf	___ftdiv@exp,f
  4953  094C  0833               	movf	___ftdiv@f1,w
  4954  094D  00B6               	movwf	??___ftdiv
  4955  094E  0834               	movf	___ftdiv@f1+1,w
  4956  094F  00B7               	movwf	??___ftdiv+1
  4957  0950  0835               	movf	___ftdiv@f1+2,w
  4958  0951  00B8               	movwf	??___ftdiv+2
  4959  0952  3010               	movlw	16
  4960  0953                     u224_25:	
  4961  0953  1003               	clrc
  4962  0954  0CB8               	rrf	??___ftdiv+2,f
  4963  0955  0CB7               	rrf	??___ftdiv+1,f
  4964  0956  0CB6               	rrf	??___ftdiv,f
  4965  0957  3EFF               	addlw	-1
  4966  0958  1D03               	skipz
  4967  0959  2953               	goto	u224_25
  4968  095A  0836               	movf	??___ftdiv,w
  4969  095B  00B9               	movwf	??___ftdiv+3
  4970  095C  0839               	movf	??___ftdiv+3,w
  4971  095D  00BF               	movwf	___ftdiv@sign
  4972  095E  0830               	movf	___ftdiv@f2,w
  4973  095F  00B6               	movwf	??___ftdiv
  4974  0960  0831               	movf	___ftdiv@f2+1,w
  4975  0961  00B7               	movwf	??___ftdiv+1
  4976  0962  0832               	movf	___ftdiv@f2+2,w
  4977  0963  00B8               	movwf	??___ftdiv+2
  4978  0964  3010               	movlw	16
  4979  0965                     u225_25:	
  4980  0965  1003               	clrc
  4981  0966  0CB8               	rrf	??___ftdiv+2,f
  4982  0967  0CB7               	rrf	??___ftdiv+1,f
  4983  0968  0CB6               	rrf	??___ftdiv,f
  4984  0969  3EFF               	addlw	-1
  4985  096A  1D03               	skipz
  4986  096B  2965               	goto	u225_25
  4987  096C  0836               	movf	??___ftdiv,w
  4988  096D  00B9               	movwf	??___ftdiv+3
  4989  096E  0839               	movf	??___ftdiv+3,w
  4990  096F  06BF               	xorwf	___ftdiv@sign,f
  4991  0970  3080               	movlw	128
  4992  0971  00B6               	movwf	??___ftdiv
  4993  0972  0836               	movf	??___ftdiv,w
  4994  0973  05BF               	andwf	___ftdiv@sign,f
  4995  0974  17B4               	bsf	___ftdiv@f1+1,7
  4996  0975  30FF               	movlw	255
  4997  0976  05B3               	andwf	___ftdiv@f1,f
  4998  0977  30FF               	movlw	255
  4999  0978  05B4               	andwf	___ftdiv@f1+1,f
  5000  0979  3000               	movlw	0
  5001  097A  05B5               	andwf	___ftdiv@f1+2,f
  5002  097B  17B1               	bsf	___ftdiv@f2+1,7
  5003  097C  30FF               	movlw	255
  5004  097D  05B0               	andwf	___ftdiv@f2,f
  5005  097E  30FF               	movlw	255
  5006  097F  05B1               	andwf	___ftdiv@f2+1,f
  5007  0980  3000               	movlw	0
  5008  0981  05B2               	andwf	___ftdiv@f2+2,f
  5009  0982  3018               	movlw	24
  5010  0983  00B6               	movwf	??___ftdiv
  5011  0984  0836               	movf	??___ftdiv,w
  5012  0985  00BA               	movwf	___ftdiv@cntr
  5013  0986                     i1l2197:	
  5014  0986  3001               	movlw	1
  5015  0987                     u226_25:	
  5016  0987  1003               	clrc
  5017  0988  0DBB               	rlf	___ftdiv@f3,f
  5018  0989  0DBC               	rlf	___ftdiv@f3+1,f
  5019  098A  0DBD               	rlf	___ftdiv@f3+2,f
  5020  098B  3EFF               	addlw	-1
  5021  098C  1D03               	skipz
  5022  098D  2987               	goto	u226_25
  5023  098E  0832               	movf	___ftdiv@f2+2,w
  5024  098F  0235               	subwf	___ftdiv@f1+2,w
  5025  0990  1D03               	skipz
  5026  0991  2998               	goto	u227_25
  5027  0992  0831               	movf	___ftdiv@f2+1,w
  5028  0993  0234               	subwf	___ftdiv@f1+1,w
  5029  0994  1D03               	skipz
  5030  0995  2998               	goto	u227_25
  5031  0996  0830               	movf	___ftdiv@f2,w
  5032  0997  0233               	subwf	___ftdiv@f1,w
  5033  0998                     u227_25:	
  5034  0998  1C03               	skipc
  5035  0999  29A5               	goto	i1l2205
  5036  099A  0830               	movf	___ftdiv@f2,w
  5037  099B  02B3               	subwf	___ftdiv@f1,f
  5038  099C  0831               	movf	___ftdiv@f2+1,w
  5039  099D  1C03               	skipc
  5040  099E  0F31               	incfsz	___ftdiv@f2+1,w
  5041  099F  02B4               	subwf	___ftdiv@f1+1,f
  5042  09A0  0832               	movf	___ftdiv@f2+2,w
  5043  09A1  1C03               	skipc
  5044  09A2  0A32               	incf	___ftdiv@f2+2,w
  5045  09A3  02B5               	subwf	___ftdiv@f1+2,f
  5046  09A4  143B               	bsf	___ftdiv@f3,0
  5047  09A5                     i1l2205:	
  5048  09A5  3001               	movlw	1
  5049  09A6                     u228_25:	
  5050  09A6  1003               	clrc
  5051  09A7  0DB3               	rlf	___ftdiv@f1,f
  5052  09A8  0DB4               	rlf	___ftdiv@f1+1,f
  5053  09A9  0DB5               	rlf	___ftdiv@f1+2,f
  5054  09AA  3EFF               	addlw	-1
  5055  09AB  1D03               	skipz
  5056  09AC  29A6               	goto	u228_25
  5057  09AD  3001               	movlw	1
  5058  09AE  02BA               	subwf	___ftdiv@cntr,f
  5059  09AF  1D03               	btfss	3,2
  5060  09B0  2986               	goto	i1l2197
  5061  09B1  083B               	movf	___ftdiv@f3,w
  5062  09B2  00F0               	movwf	___ftpack@arg
  5063  09B3  083C               	movf	___ftdiv@f3+1,w
  5064  09B4  00F1               	movwf	___ftpack@arg+1
  5065  09B5  083D               	movf	___ftdiv@f3+2,w
  5066  09B6  00F2               	movwf	___ftpack@arg+2
  5067  09B7  083E               	movf	___ftdiv@exp,w
  5068  09B8  00B6               	movwf	??___ftdiv
  5069  09B9  0836               	movf	??___ftdiv,w
  5070  09BA  00F3               	movwf	___ftpack@exp
  5071  09BB  083F               	movf	___ftdiv@sign,w
  5072  09BC  00B7               	movwf	??___ftdiv+1
  5073  09BD  0837               	movf	??___ftdiv+1,w
  5074  09BE  00F4               	movwf	___ftpack@sign
  5075  09BF  160A  118A  25F0   	fcall	___ftpack
  5076  09C2  0870               	movf	?___ftpack,w
  5077  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  5078  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  5079  09C5  00B0               	movwf	?___ftdiv
  5080  09C6  0871               	movf	?___ftpack+1,w
  5081  09C7  00B1               	movwf	?___ftdiv+1
  5082  09C8  0872               	movf	?___ftpack+2,w
  5083  09C9  00B2               	movwf	?___ftdiv+2
  5084  09CA  0008               	return
  5085  09CB                     __end_of___ftdiv:	
  5086                           
  5087                           	psect	text27
  5088  06E4                     __ptext27:	
  5089 ;; *************** function ___ftadd *****************
  5090 ;; Defined at:
  5091 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  f1              3    3[BANK0 ] float 
  5094 ;;  f2              3    6[BANK0 ] float 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  exp1            1   15[BANK0 ] unsigned char 
  5097 ;;  exp2            1   14[BANK0 ] unsigned char 
  5098 ;;  sign            1   13[BANK0 ] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  3    3[BANK0 ] float 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, pclath, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       6       0       0       0
  5109 ;;      Locals:         0       3       0       0       0
  5110 ;;      Temps:          0       4       0       0       0
  5111 ;;      Totals:         0      13       0       0       0
  5112 ;;Total ram usage:       13 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    1
  5115 ;; This function calls:
  5116 ;;		___ftpack
  5117 ;; This function is called by:
  5118 ;;		_trapmf
  5119 ;;		_Fuzzy
  5120 ;;		_trimf
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function ___ftadd
  5126  06E4                     ___ftadd:	
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5130  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  5131  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  5132  06E6  0823               	movf	___ftadd@f1,w
  5133  06E7  00A9               	movwf	??___ftadd
  5134  06E8  0824               	movf	___ftadd@f1+1,w
  5135  06E9  00AA               	movwf	??___ftadd+1
  5136  06EA  0825               	movf	___ftadd@f1+2,w
  5137  06EB  00AB               	movwf	??___ftadd+2
  5138  06EC  1003               	clrc
  5139  06ED  0D2A               	rlf	??___ftadd+1,w
  5140  06EE  0D2B               	rlf	??___ftadd+2,w
  5141  06EF  00AC               	movwf	??___ftadd+3
  5142  06F0  082C               	movf	??___ftadd+3,w
  5143  06F1  00AF               	movwf	___ftadd@exp1
  5144  06F2  0826               	movf	___ftadd@f2,w
  5145  06F3  00A9               	movwf	??___ftadd
  5146  06F4  0827               	movf	___ftadd@f2+1,w
  5147  06F5  00AA               	movwf	??___ftadd+1
  5148  06F6  0828               	movf	___ftadd@f2+2,w
  5149  06F7  00AB               	movwf	??___ftadd+2
  5150  06F8  1003               	clrc
  5151  06F9  0D2A               	rlf	??___ftadd+1,w
  5152  06FA  0D2B               	rlf	??___ftadd+2,w
  5153  06FB  00AC               	movwf	??___ftadd+3
  5154  06FC  082C               	movf	??___ftadd+3,w
  5155  06FD  00AE               	movwf	___ftadd@exp2
  5156  06FE  082F               	movf	___ftadd@exp1,w
  5157  06FF  1903               	btfsc	3,2
  5158  0700  2F0D               	goto	i1l3651
  5159  0701  082E               	movf	___ftadd@exp2,w
  5160  0702  022F               	subwf	___ftadd@exp1,w
  5161  0703  1803               	skipnc
  5162  0704  2F14               	goto	i1l3655
  5163  0705  032F               	decf	___ftadd@exp1,w
  5164  0706  3AFF               	xorlw	255
  5165  0707  072E               	addwf	___ftadd@exp2,w
  5166  0708  00A9               	movwf	??___ftadd
  5167  0709  3019               	movlw	25
  5168  070A  0229               	subwf	??___ftadd,w
  5169  070B  1C03               	skipc
  5170  070C  2F14               	goto	i1l3655
  5171  070D                     i1l3651:	
  5172  070D  0826               	movf	___ftadd@f2,w
  5173  070E  00A3               	movwf	?___ftadd
  5174  070F  0827               	movf	___ftadd@f2+1,w
  5175  0710  00A4               	movwf	?___ftadd+1
  5176  0711  0828               	movf	___ftadd@f2+2,w
  5177  0712  00A5               	movwf	?___ftadd+2
  5178  0713  0008               	return
  5179  0714                     i1l3655:	
  5180  0714  082E               	movf	___ftadd@exp2,w
  5181  0715  1903               	btfsc	3,2
  5182  0716  0008               	return
  5183  0717  082F               	movf	___ftadd@exp1,w
  5184  0718  022E               	subwf	___ftadd@exp2,w
  5185  0719  1803               	skipnc
  5186  071A  2F23               	goto	i1l3661
  5187  071B  032E               	decf	___ftadd@exp2,w
  5188  071C  3AFF               	xorlw	255
  5189  071D  072F               	addwf	___ftadd@exp1,w
  5190  071E  00A9               	movwf	??___ftadd
  5191  071F  3019               	movlw	25
  5192  0720  0229               	subwf	??___ftadd,w
  5193  0721  1803               	btfsc	3,0
  5194  0722  0008               	return
  5195  0723                     i1l3661:	
  5196  0723  3006               	movlw	6
  5197  0724  00A9               	movwf	??___ftadd
  5198  0725  0829               	movf	??___ftadd,w
  5199  0726  00AD               	movwf	___ftadd@sign
  5200  0727  1BA5               	btfsc	___ftadd@f1+2,7
  5201  0728  17AD               	bsf	___ftadd@sign,7
  5202  0729  1BA8               	btfsc	___ftadd@f2+2,7
  5203  072A  172D               	bsf	___ftadd@sign,6
  5204  072B  17A4               	bsf	___ftadd@f1+1,7
  5205  072C  30FF               	movlw	255
  5206  072D  05A3               	andwf	___ftadd@f1,f
  5207  072E  30FF               	movlw	255
  5208  072F  05A4               	andwf	___ftadd@f1+1,f
  5209  0730  3000               	movlw	0
  5210  0731  05A5               	andwf	___ftadd@f1+2,f
  5211  0732  17A7               	bsf	___ftadd@f2+1,7
  5212  0733  30FF               	movlw	255
  5213  0734  05A6               	andwf	___ftadd@f2,f
  5214  0735  30FF               	movlw	255
  5215  0736  05A7               	andwf	___ftadd@f2+1,f
  5216  0737  3000               	movlw	0
  5217  0738  05A8               	andwf	___ftadd@f2+2,f
  5218  0739  082E               	movf	___ftadd@exp2,w
  5219  073A  022F               	subwf	___ftadd@exp1,w
  5220  073B  1803               	skipnc
  5221  073C  2F63               	goto	i1l3683
  5222  073D                     i1l3673:	
  5223  073D  3001               	movlw	1
  5224  073E                     u469_25:	
  5225  073E  1003               	clrc
  5226  073F  0DA6               	rlf	___ftadd@f2,f
  5227  0740  0DA7               	rlf	___ftadd@f2+1,f
  5228  0741  0DA8               	rlf	___ftadd@f2+2,f
  5229  0742  3EFF               	addlw	-1
  5230  0743  1D03               	skipz
  5231  0744  2F3E               	goto	u469_25
  5232  0745  3001               	movlw	1
  5233  0746  02AE               	subwf	___ftadd@exp2,f
  5234  0747  082E               	movf	___ftadd@exp2,w
  5235  0748  062F               	xorwf	___ftadd@exp1,w
  5236  0749  1903               	skipnz
  5237  074A  2F5E               	goto	i1l3681
  5238  074B  3001               	movlw	1
  5239  074C  02AD               	subwf	___ftadd@sign,f
  5240  074D  082D               	movf	___ftadd@sign,w
  5241  074E  3907               	andlw	7
  5242  074F  1903               	btfsc	3,2
  5243  0750  2F5E               	goto	i1l3681
  5244  0751  2F3D               	goto	i1l3673
  5245  0752                     i1l3679:	
  5246  0752  3001               	movlw	1
  5247  0753                     u472_25:	
  5248  0753  1003               	clrc
  5249  0754  0CA5               	rrf	___ftadd@f1+2,f
  5250  0755  0CA4               	rrf	___ftadd@f1+1,f
  5251  0756  0CA3               	rrf	___ftadd@f1,f
  5252  0757  3EFF               	addlw	-1
  5253  0758  1D03               	skipz
  5254  0759  2F53               	goto	u472_25
  5255  075A  3001               	movlw	1
  5256  075B  00A9               	movwf	??___ftadd
  5257  075C  0829               	movf	??___ftadd,w
  5258  075D  07AF               	addwf	___ftadd@exp1,f
  5259  075E                     i1l3681:	
  5260  075E  082F               	movf	___ftadd@exp1,w
  5261  075F  062E               	xorwf	___ftadd@exp2,w
  5262  0760  1903               	btfsc	3,2
  5263  0761  2F8C               	goto	i1l746
  5264  0762  2F52               	goto	i1l3679
  5265  0763                     i1l3683:	
  5266  0763  082F               	movf	___ftadd@exp1,w
  5267  0764  022E               	subwf	___ftadd@exp2,w
  5268  0765  1803               	skipnc
  5269  0766  2F8C               	goto	i1l746
  5270  0767                     i1l3685:	
  5271  0767  3001               	movlw	1
  5272  0768                     u475_25:	
  5273  0768  1003               	clrc
  5274  0769  0DA3               	rlf	___ftadd@f1,f
  5275  076A  0DA4               	rlf	___ftadd@f1+1,f
  5276  076B  0DA5               	rlf	___ftadd@f1+2,f
  5277  076C  3EFF               	addlw	-1
  5278  076D  1D03               	skipz
  5279  076E  2F68               	goto	u475_25
  5280  076F  3001               	movlw	1
  5281  0770  02AF               	subwf	___ftadd@exp1,f
  5282  0771  082E               	movf	___ftadd@exp2,w
  5283  0772  062F               	xorwf	___ftadd@exp1,w
  5284  0773  1903               	skipnz
  5285  0774  2F88               	goto	i1l3693
  5286  0775  3001               	movlw	1
  5287  0776  02AD               	subwf	___ftadd@sign,f
  5288  0777  082D               	movf	___ftadd@sign,w
  5289  0778  3907               	andlw	7
  5290  0779  1903               	btfsc	3,2
  5291  077A  2F88               	goto	i1l3693
  5292  077B  2F67               	goto	i1l3685
  5293  077C                     i1l3691:	
  5294  077C  3001               	movlw	1
  5295  077D                     u478_25:	
  5296  077D  1003               	clrc
  5297  077E  0CA8               	rrf	___ftadd@f2+2,f
  5298  077F  0CA7               	rrf	___ftadd@f2+1,f
  5299  0780  0CA6               	rrf	___ftadd@f2,f
  5300  0781  3EFF               	addlw	-1
  5301  0782  1D03               	skipz
  5302  0783  2F7D               	goto	u478_25
  5303  0784  3001               	movlw	1
  5304  0785  00A9               	movwf	??___ftadd
  5305  0786  0829               	movf	??___ftadd,w
  5306  0787  07AE               	addwf	___ftadd@exp2,f
  5307  0788                     i1l3693:	
  5308  0788  082F               	movf	___ftadd@exp1,w
  5309  0789  062E               	xorwf	___ftadd@exp2,w
  5310  078A  1D03               	skipz
  5311  078B  2F7C               	goto	i1l3691
  5312  078C                     i1l746:	
  5313  078C  1FAD               	btfss	___ftadd@sign,7
  5314  078D  2F9E               	goto	i1l3697
  5315  078E  30FF               	movlw	255
  5316  078F  06A3               	xorwf	___ftadd@f1,f
  5317  0790  30FF               	movlw	255
  5318  0791  06A4               	xorwf	___ftadd@f1+1,f
  5319  0792  30FF               	movlw	255
  5320  0793  06A5               	xorwf	___ftadd@f1+2,f
  5321  0794  3001               	movlw	1
  5322  0795  07A3               	addwf	___ftadd@f1,f
  5323  0796  3000               	movlw	0
  5324  0797  1803               	skipnc
  5325  0798  3001               	movlw	1
  5326  0799  07A4               	addwf	___ftadd@f1+1,f
  5327  079A  3000               	movlw	0
  5328  079B  1803               	skipnc
  5329  079C  3001               	movlw	1
  5330  079D  07A5               	addwf	___ftadd@f1+2,f
  5331  079E                     i1l3697:	
  5332  079E  1F2D               	btfss	___ftadd@sign,6
  5333  079F  2FB0               	goto	i1l3701
  5334  07A0  30FF               	movlw	255
  5335  07A1  06A6               	xorwf	___ftadd@f2,f
  5336  07A2  30FF               	movlw	255
  5337  07A3  06A7               	xorwf	___ftadd@f2+1,f
  5338  07A4  30FF               	movlw	255
  5339  07A5  06A8               	xorwf	___ftadd@f2+2,f
  5340  07A6  3001               	movlw	1
  5341  07A7  07A6               	addwf	___ftadd@f2,f
  5342  07A8  3000               	movlw	0
  5343  07A9  1803               	skipnc
  5344  07AA  3001               	movlw	1
  5345  07AB  07A7               	addwf	___ftadd@f2+1,f
  5346  07AC  3000               	movlw	0
  5347  07AD  1803               	skipnc
  5348  07AE  3001               	movlw	1
  5349  07AF  07A8               	addwf	___ftadd@f2+2,f
  5350  07B0                     i1l3701:	
  5351  07B0  01AD               	clrf	___ftadd@sign
  5352  07B1  0823               	movf	___ftadd@f1,w
  5353  07B2  07A6               	addwf	___ftadd@f2,f
  5354  07B3  0824               	movf	___ftadd@f1+1,w
  5355  07B4  1103               	clrz
  5356  07B5  1803               	skipnc
  5357  07B6  0A24               	incf	___ftadd@f1+1,w
  5358  07B7  1D03               	btfss	3,2
  5359  07B8  07A7               	addwf	___ftadd@f2+1,f
  5360  07B9  0825               	movf	___ftadd@f1+2,w
  5361  07BA  1103               	clrz
  5362  07BB  1803               	skipnc
  5363  07BC  0A25               	incf	___ftadd@f1+2,w
  5364  07BD  1D03               	btfss	3,2
  5365  07BE  07A8               	addwf	___ftadd@f2+2,f
  5366  07BF  1FA8               	btfss	___ftadd@f2+2,7
  5367  07C0  2FD3               	goto	i1l3711
  5368  07C1  30FF               	movlw	255
  5369  07C2  06A6               	xorwf	___ftadd@f2,f
  5370  07C3  30FF               	movlw	255
  5371  07C4  06A7               	xorwf	___ftadd@f2+1,f
  5372  07C5  30FF               	movlw	255
  5373  07C6  06A8               	xorwf	___ftadd@f2+2,f
  5374  07C7  3001               	movlw	1
  5375  07C8  07A6               	addwf	___ftadd@f2,f
  5376  07C9  3000               	movlw	0
  5377  07CA  1803               	skipnc
  5378  07CB  3001               	movlw	1
  5379  07CC  07A7               	addwf	___ftadd@f2+1,f
  5380  07CD  3000               	movlw	0
  5381  07CE  1803               	skipnc
  5382  07CF  3001               	movlw	1
  5383  07D0  07A8               	addwf	___ftadd@f2+2,f
  5384  07D1  01AD               	clrf	___ftadd@sign
  5385  07D2  0AAD               	incf	___ftadd@sign,f
  5386  07D3                     i1l3711:	
  5387  07D3  0826               	movf	___ftadd@f2,w
  5388  07D4  00F0               	movwf	___ftpack@arg
  5389  07D5  0827               	movf	___ftadd@f2+1,w
  5390  07D6  00F1               	movwf	___ftpack@arg+1
  5391  07D7  0828               	movf	___ftadd@f2+2,w
  5392  07D8  00F2               	movwf	___ftpack@arg+2
  5393  07D9  082F               	movf	___ftadd@exp1,w
  5394  07DA  00A9               	movwf	??___ftadd
  5395  07DB  0829               	movf	??___ftadd,w
  5396  07DC  00F3               	movwf	___ftpack@exp
  5397  07DD  082D               	movf	___ftadd@sign,w
  5398  07DE  00AA               	movwf	??___ftadd+1
  5399  07DF  082A               	movf	??___ftadd+1,w
  5400  07E0  00F4               	movwf	___ftpack@sign
  5401  07E1  160A  118A  25F0   	fcall	___ftpack
  5402  07E4  0870               	movf	?___ftpack,w
  5403  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5404  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5405  07E7  00A3               	movwf	?___ftadd
  5406  07E8  0871               	movf	?___ftpack+1,w
  5407  07E9  00A4               	movwf	?___ftadd+1
  5408  07EA  0872               	movf	?___ftpack+2,w
  5409  07EB  00A5               	movwf	?___ftadd+2
  5410  07EC  0008               	return
  5411  07ED                     __end_of___ftadd:	
  5412                           
  5413                           	psect	text28
  5414  13C6                     __ptext28:	
  5415 ;; *************** function _minimo *****************
  5416 ;; Defined at:
  5417 ;;		line 108 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  a               3    0[BANK0 ] float 
  5420 ;;  b               3    3[BANK0 ] float 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  3    0[BANK0 ] float 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0, pclath, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5432 ;;      Params:         0       6       0       0       0
  5433 ;;      Locals:         0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0
  5435 ;;      Totals:         0       6       0       0       0
  5436 ;;Total ram usage:        6 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    1
  5439 ;; This function calls:
  5440 ;;		___ftge
  5441 ;; This function is called by:
  5442 ;;		_Fuzzy
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           
  5447                           ;psect for function _minimo
  5448  13C6                     _minimo:	
  5449                           
  5450                           ;main.c: 109: if (a < b) {
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5454  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  5455  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  5456  13C8  0820               	movf	minimo@a,w
  5457  13C9  00F0               	movwf	___ftge@ff1
  5458  13CA  0821               	movf	minimo@a+1,w
  5459  13CB  00F1               	movwf	___ftge@ff1+1
  5460  13CC  0822               	movf	minimo@a+2,w
  5461  13CD  00F2               	movwf	___ftge@ff1+2
  5462  13CE  0823               	movf	minimo@b,w
  5463  13CF  00F3               	movwf	___ftge@ff2
  5464  13D0  0824               	movf	minimo@b+1,w
  5465  13D1  00F4               	movwf	___ftge@ff2+1
  5466  13D2  0825               	movf	minimo@b+2,w
  5467  13D3  00F5               	movwf	___ftge@ff2+2
  5468  13D4  160A  118A  2593  160A  118A  	fcall	___ftge
  5469  13D9  1C03               	btfss	3,0
  5470  13DA  0008               	return
  5471                           
  5472                           ;main.c: 111: }
  5473                           ;main.c: 112: return b;
  5474                           
  5475                           ;main.c: 110: return a;
  5476  13DB  1283               	bcf	3,5	;RP0=0, select bank0
  5477  13DC  1303               	bcf	3,6	;RP1=0, select bank0
  5478  13DD  0823               	movf	minimo@b,w
  5479  13DE  00A0               	movwf	?_minimo
  5480  13DF  0824               	movf	minimo@b+1,w
  5481  13E0  00A1               	movwf	?_minimo+1
  5482  13E1  0825               	movf	minimo@b+2,w
  5483  13E2  00A2               	movwf	?_minimo+2
  5484  13E3  0008               	return
  5485  13E4                     __end_of_minimo:	
  5486                           
  5487                           	psect	text29
  5488  13A8                     __ptext29:	
  5489 ;; *************** function _maximo *****************
  5490 ;; Defined at:
  5491 ;;		line 101 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  a               3    6[BANK0 ] float 
  5494 ;;  b               3    9[BANK0 ] float 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  3    6[BANK0 ] float 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, pclath, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5506 ;;      Params:         0       6       0       0       0
  5507 ;;      Locals:         0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0
  5509 ;;      Totals:         0       6       0       0       0
  5510 ;;Total ram usage:        6 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    1
  5513 ;; This function calls:
  5514 ;;		___ftge
  5515 ;; This function is called by:
  5516 ;;		_Fuzzy
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _maximo
  5522  13A8                     _maximo:	
  5523                           
  5524                           ;main.c: 102: if (a > b) {
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5528  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  5529  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  5530  13AA  0829               	movf	maximo@b,w
  5531  13AB  00F0               	movwf	___ftge@ff1
  5532  13AC  082A               	movf	maximo@b+1,w
  5533  13AD  00F1               	movwf	___ftge@ff1+1
  5534  13AE  082B               	movf	maximo@b+2,w
  5535  13AF  00F2               	movwf	___ftge@ff1+2
  5536  13B0  0826               	movf	maximo@a,w
  5537  13B1  00F3               	movwf	___ftge@ff2
  5538  13B2  0827               	movf	maximo@a+1,w
  5539  13B3  00F4               	movwf	___ftge@ff2+1
  5540  13B4  0828               	movf	maximo@a+2,w
  5541  13B5  00F5               	movwf	___ftge@ff2+2
  5542  13B6  160A  118A  2593  160A  118A  	fcall	___ftge
  5543  13BB  1C03               	btfss	3,0
  5544  13BC  0008               	return
  5545                           
  5546                           ;main.c: 104: }
  5547                           ;main.c: 105: return b;
  5548                           
  5549                           ;main.c: 103: return a;
  5550  13BD  1283               	bcf	3,5	;RP0=0, select bank0
  5551  13BE  1303               	bcf	3,6	;RP1=0, select bank0
  5552  13BF  0829               	movf	maximo@b,w
  5553  13C0  00A6               	movwf	?_maximo
  5554  13C1  082A               	movf	maximo@b+1,w
  5555  13C2  00A7               	movwf	?_maximo+1
  5556  13C3  082B               	movf	maximo@b+2,w
  5557  13C4  00A8               	movwf	?_maximo+2
  5558  13C5  0008               	return
  5559  13C6                     __end_of_maximo:	
  5560                           
  5561                           	psect	text30
  5562  1593                     __ptext30:	
  5563 ;; *************** function ___ftge *****************
  5564 ;; Defined at:
  5565 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  ff1             3    0[COMMON] float 
  5568 ;;  ff2             3    3[COMMON] float 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;		None               void
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         6       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0
  5582 ;;      Temps:          6       0       0       0       0
  5583 ;;      Totals:        12       0       0       0       0
  5584 ;;Total ram usage:       12 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_trapmf
  5590 ;;		_maximo
  5591 ;;		_minimo
  5592 ;;		_Fuzzy
  5593 ;;		_trimf
  5594 ;;		_min_val
  5595 ;;		_max_val
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function ___ftge
  5601  1593                     ___ftge:	
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5605  1593  1FF2               	btfss	___ftge@ff1+2,7
  5606  1594  2DBA               	goto	i1l2217
  5607  1595  3000               	movlw	0
  5608  1596  00F6               	movwf	??___ftge
  5609  1597  3000               	movlw	0
  5610  1598  00F7               	movwf	??___ftge+1
  5611  1599  3080               	movlw	128
  5612  159A  00F8               	movwf	??___ftge+2
  5613  159B  0970               	comf	___ftge@ff1,w
  5614  159C  00F9               	movwf	??___ftge+3
  5615  159D  0971               	comf	___ftge@ff1+1,w
  5616  159E  00FA               	movwf	??___ftge+4
  5617  159F  0972               	comf	___ftge@ff1+2,w
  5618  15A0  00FB               	movwf	??___ftge+5
  5619  15A1  0AF9               	incf	??___ftge+3,f
  5620  15A2  1903               	skipnz
  5621  15A3  0AFA               	incf	??___ftge+4,f
  5622  15A4  1903               	skipnz
  5623  15A5  0AFB               	incf	??___ftge+5,f
  5624  15A6  0879               	movf	??___ftge+3,w
  5625  15A7  07F6               	addwf	??___ftge,f
  5626  15A8  087A               	movf	??___ftge+4,w
  5627  15A9  1803               	skipnc
  5628  15AA  0F7A               	incfsz	??___ftge+4,w
  5629  15AB  2DAD               	goto	u231_21
  5630  15AC  2DAE               	goto	u231_22
  5631  15AD                     u231_21:	
  5632  15AD  07F7               	addwf	??___ftge+1,f
  5633  15AE                     u231_22:	
  5634  15AE  087B               	movf	??___ftge+5,w
  5635  15AF  1803               	skipnc
  5636  15B0  0F7B               	incfsz	??___ftge+5,w
  5637  15B1  2DB3               	goto	u231_23
  5638  15B2  2DB4               	goto	u231_24
  5639  15B3                     u231_23:	
  5640  15B3  07F8               	addwf	??___ftge+2,f
  5641  15B4                     u231_24:	
  5642  15B4  0876               	movf	??___ftge,w
  5643  15B5  00F0               	movwf	___ftge@ff1
  5644  15B6  0877               	movf	??___ftge+1,w
  5645  15B7  00F1               	movwf	___ftge@ff1+1
  5646  15B8  0878               	movf	??___ftge+2,w
  5647  15B9  00F2               	movwf	___ftge@ff1+2
  5648  15BA                     i1l2217:	
  5649  15BA  1FF5               	btfss	___ftge@ff2+2,7
  5650  15BB  2DE1               	goto	i1l2221
  5651  15BC  3000               	movlw	0
  5652  15BD  00F6               	movwf	??___ftge
  5653  15BE  3000               	movlw	0
  5654  15BF  00F7               	movwf	??___ftge+1
  5655  15C0  3080               	movlw	128
  5656  15C1  00F8               	movwf	??___ftge+2
  5657  15C2  0973               	comf	___ftge@ff2,w
  5658  15C3  00F9               	movwf	??___ftge+3
  5659  15C4  0974               	comf	___ftge@ff2+1,w
  5660  15C5  00FA               	movwf	??___ftge+4
  5661  15C6  0975               	comf	___ftge@ff2+2,w
  5662  15C7  00FB               	movwf	??___ftge+5
  5663  15C8  0AF9               	incf	??___ftge+3,f
  5664  15C9  1903               	skipnz
  5665  15CA  0AFA               	incf	??___ftge+4,f
  5666  15CB  1903               	skipnz
  5667  15CC  0AFB               	incf	??___ftge+5,f
  5668  15CD  0879               	movf	??___ftge+3,w
  5669  15CE  07F6               	addwf	??___ftge,f
  5670  15CF  087A               	movf	??___ftge+4,w
  5671  15D0  1803               	skipnc
  5672  15D1  0F7A               	incfsz	??___ftge+4,w
  5673  15D2  2DD4               	goto	u233_21
  5674  15D3  2DD5               	goto	u233_22
  5675  15D4                     u233_21:	
  5676  15D4  07F7               	addwf	??___ftge+1,f
  5677  15D5                     u233_22:	
  5678  15D5  087B               	movf	??___ftge+5,w
  5679  15D6  1803               	skipnc
  5680  15D7  0F7B               	incfsz	??___ftge+5,w
  5681  15D8  2DDA               	goto	u233_23
  5682  15D9  2DDB               	goto	u233_24
  5683  15DA                     u233_23:	
  5684  15DA  07F8               	addwf	??___ftge+2,f
  5685  15DB                     u233_24:	
  5686  15DB  0876               	movf	??___ftge,w
  5687  15DC  00F3               	movwf	___ftge@ff2
  5688  15DD  0877               	movf	??___ftge+1,w
  5689  15DE  00F4               	movwf	___ftge@ff2+1
  5690  15DF  0878               	movf	??___ftge+2,w
  5691  15E0  00F5               	movwf	___ftge@ff2+2
  5692  15E1                     i1l2221:	
  5693  15E1  3080               	movlw	128
  5694  15E2  06F2               	xorwf	___ftge@ff1+2,f
  5695  15E3  3080               	movlw	128
  5696  15E4  06F5               	xorwf	___ftge@ff2+2,f
  5697  15E5  0875               	movf	___ftge@ff2+2,w
  5698  15E6  0272               	subwf	___ftge@ff1+2,w
  5699  15E7  1D03               	skipz
  5700  15E8  0008               	return
  5701  15E9  0874               	movf	___ftge@ff2+1,w
  5702  15EA  0271               	subwf	___ftge@ff1+1,w
  5703  15EB  1D03               	skipz
  5704  15EC  0008               	return
  5705  15ED  0873               	movf	___ftge@ff2,w
  5706  15EE  0270               	subwf	___ftge@ff1,w
  5707  15EF  0008               	return
  5708  15F0                     __end_of___ftge:	
  5709                           
  5710                           	psect	text31
  5711  1309                     __ptext31:	
  5712 ;; *************** function _abs *****************
  5713 ;; Defined at:
  5714 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  a               2    0[COMMON] int 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  2    0[COMMON] int 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5728 ;;      Params:         2       0       0       0       0
  5729 ;;      Locals:         0       0       0       0       0
  5730 ;;      Temps:          2       0       0       0       0
  5731 ;;      Totals:         4       0       0       0       0
  5732 ;;Total ram usage:        4 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_Fuzzy
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _abs
  5743  1309                     _abs:	
  5744                           
  5745                           ;incstack = 0
  5746                           ; Regs used in _abs: [wreg+status,2+status,0]
  5747  1309  1FF1               	btfss	abs@a+1,7
  5748  130A  0008               	return
  5749  130B  0970               	comf	abs@a,w
  5750  130C  00F2               	movwf	??_abs
  5751  130D  0971               	comf	abs@a+1,w
  5752  130E  00F3               	movwf	??_abs+1
  5753  130F  0AF2               	incf	??_abs,f
  5754  1310  1903               	skipnz
  5755  1311  0AF3               	incf	??_abs+1,f
  5756  1312  0872               	movf	??_abs,w
  5757  1313  00F0               	movwf	?_abs
  5758  1314  0873               	movf	??_abs+1,w
  5759  1315  00F1               	movwf	?_abs+1
  5760  1316  0008               	return
  5761  1317                     __end_of_abs:	
  5762                           
  5763                           	psect	text32
  5764  148B                     __ptext32:	
  5765 ;; *************** function ___wmul *****************
  5766 ;; Defined at:
  5767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  multiplier      2   26[BANK0 ] unsigned int 
  5770 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  product         2   30[BANK0 ] unsigned int 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2   26[BANK0 ] unsigned int 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       4       0       0       0
  5783 ;;      Locals:         0       2       0       0       0
  5784 ;;      Temps:          0       0       0       0       0
  5785 ;;      Totals:         0       6       0       0       0
  5786 ;;Total ram usage:        6 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_send
  5792 ;;		_Fuzzy
  5793 ;;		_ISR
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function ___wmul
  5799  148B                     ___wmul:	
  5800                           
  5801                           ;incstack = 0
  5802                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5803  148B  1283               	bcf	3,5	;RP0=0, select bank0
  5804  148C  1303               	bcf	3,6	;RP1=0, select bank0
  5805  148D  01BE               	clrf	___wmul@product
  5806  148E  01BF               	clrf	___wmul@product+1
  5807  148F                     i1l2319:	
  5808  148F  1C3A               	btfss	___wmul@multiplier,0
  5809  1490  2C97               	goto	i1l552
  5810  1491  083C               	movf	___wmul@multiplicand,w
  5811  1492  07BE               	addwf	___wmul@product,f
  5812  1493  1803               	skipnc
  5813  1494  0ABF               	incf	___wmul@product+1,f
  5814  1495  083D               	movf	___wmul@multiplicand+1,w
  5815  1496  07BF               	addwf	___wmul@product+1,f
  5816  1497                     i1l552:	
  5817  1497  3001               	movlw	1
  5818  1498                     u249_25:	
  5819  1498  1003               	clrc
  5820  1499  0DBC               	rlf	___wmul@multiplicand,f
  5821  149A  0DBD               	rlf	___wmul@multiplicand+1,f
  5822  149B  3EFF               	addlw	-1
  5823  149C  1D03               	skipz
  5824  149D  2C98               	goto	u249_25
  5825  149E  3001               	movlw	1
  5826  149F                     u250_25:	
  5827  149F  1003               	clrc
  5828  14A0  0CBB               	rrf	___wmul@multiplier+1,f
  5829  14A1  0CBA               	rrf	___wmul@multiplier,f
  5830  14A2  3EFF               	addlw	-1
  5831  14A3  1D03               	skipz
  5832  14A4  2C9F               	goto	u250_25
  5833  14A5  083B               	movf	___wmul@multiplier+1,w
  5834  14A6  043A               	iorwf	___wmul@multiplier,w
  5835  14A7  1D03               	skipz
  5836  14A8  2C8F               	goto	i1l2319
  5837  14A9  083F               	movf	___wmul@product+1,w
  5838  14AA  01BB               	clrf	?___wmul+1
  5839  14AB  07BB               	addwf	?___wmul+1,f
  5840  14AC  083E               	movf	___wmul@product,w
  5841  14AD  01BA               	clrf	?___wmul
  5842  14AE  07BA               	addwf	?___wmul,f
  5843  14AF  0008               	return
  5844  14B0                     __end_of___wmul:	
  5845                           
  5846                           	psect	text33
  5847  1317                     __ptext33:	
  5848 ;; *************** function ___lwtoft *****************
  5849 ;; Defined at:
  5850 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  c               2    8[COMMON] unsigned int 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  3    8[COMMON] float 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0, pclath, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5864 ;;      Params:         3       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0
  5866 ;;      Temps:          1       0       0       0       0
  5867 ;;      Totals:         4       0       0       0       0
  5868 ;;Total ram usage:        4 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    1
  5871 ;; This function calls:
  5872 ;;		___ftpack
  5873 ;; This function is called by:
  5874 ;;		_Fuzzy
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function ___lwtoft
  5880  1317                     ___lwtoft:	
  5881                           
  5882                           ;incstack = 0
  5883                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5884  1317  0878               	movf	___lwtoft@c,w
  5885  1318  00F0               	movwf	___ftpack@arg
  5886  1319  0879               	movf	___lwtoft@c+1,w
  5887  131A  00F1               	movwf	___ftpack@arg+1
  5888  131B  01F2               	clrf	___ftpack@arg+2
  5889  131C  308E               	movlw	142
  5890  131D  00FB               	movwf	??___lwtoft
  5891  131E  087B               	movf	??___lwtoft,w
  5892  131F  00F3               	movwf	___ftpack@exp
  5893  1320  01F4               	clrf	___ftpack@sign
  5894  1321  160A  118A  25F0   	fcall	___ftpack
  5895  1324  0870               	movf	?___ftpack,w
  5896  1325  00F8               	movwf	?___lwtoft
  5897  1326  0871               	movf	?___ftpack+1,w
  5898  1327  00F9               	movwf	?___lwtoft+1
  5899  1328  0872               	movf	?___ftpack+2,w
  5900  1329  00FA               	movwf	?___lwtoft+2
  5901  132A  0008               	return
  5902  132B                     __end_of___lwtoft:	
  5903                           
  5904                           	psect	text34
  5905  16E3                     __ptext34:	
  5906 ;; *************** function ___fttol *****************
  5907 ;; Defined at:
  5908 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  f1              3   12[BANK0 ] float 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  lval            4   21[BANK0 ] unsigned long 
  5913 ;;  exp1            1   25[BANK0 ] unsigned char 
  5914 ;;  sign1           1   20[BANK0 ] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  4   12[BANK0 ] long 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5924 ;;      Params:         0       4       0       0       0
  5925 ;;      Locals:         0       6       0       0       0
  5926 ;;      Temps:          0       4       0       0       0
  5927 ;;      Totals:         0      14       0       0       0
  5928 ;;Total ram usage:       14 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_Fuzzy
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function ___fttol
  5939  16E3                     ___fttol:	
  5940                           
  5941                           ;incstack = 0
  5942                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5943  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  5944  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  5945  16E5  082C               	movf	___fttol@f1,w
  5946  16E6  00B0               	movwf	??___fttol
  5947  16E7  082D               	movf	___fttol@f1+1,w
  5948  16E8  00B1               	movwf	??___fttol+1
  5949  16E9  082E               	movf	___fttol@f1+2,w
  5950  16EA  00B2               	movwf	??___fttol+2
  5951  16EB  1003               	clrc
  5952  16EC  0D31               	rlf	??___fttol+1,w
  5953  16ED  0D32               	rlf	??___fttol+2,w
  5954  16EE  00B3               	movwf	??___fttol+3
  5955  16EF  0833               	movf	??___fttol+3,w
  5956  16F0  00B9               	movwf	___fttol@exp1
  5957  16F1  08B9               	movf	___fttol@exp1,f
  5958  16F2  1D03               	skipz
  5959  16F3  2EFD               	goto	i1l2437
  5960  16F4  3000               	movlw	0
  5961  16F5  00AF               	movwf	?___fttol+3
  5962  16F6  3000               	movlw	0
  5963  16F7  00AE               	movwf	?___fttol+2
  5964  16F8  3000               	movlw	0
  5965  16F9  00AD               	movwf	?___fttol+1
  5966  16FA  3000               	movlw	0
  5967  16FB  00AC               	movwf	?___fttol
  5968  16FC  0008               	return
  5969  16FD                     i1l2437:	
  5970  16FD  082C               	movf	___fttol@f1,w
  5971  16FE  00B0               	movwf	??___fttol
  5972  16FF  082D               	movf	___fttol@f1+1,w
  5973  1700  00B1               	movwf	??___fttol+1
  5974  1701  082E               	movf	___fttol@f1+2,w
  5975  1702  00B2               	movwf	??___fttol+2
  5976  1703  3017               	movlw	23
  5977  1704                     u278_25:	
  5978  1704  1003               	clrc
  5979  1705  0CB2               	rrf	??___fttol+2,f
  5980  1706  0CB1               	rrf	??___fttol+1,f
  5981  1707  0CB0               	rrf	??___fttol,f
  5982  1708  3EFF               	addlw	-1
  5983  1709  1D03               	skipz
  5984  170A  2F04               	goto	u278_25
  5985  170B  0830               	movf	??___fttol,w
  5986  170C  00B3               	movwf	??___fttol+3
  5987  170D  0833               	movf	??___fttol+3,w
  5988  170E  00B4               	movwf	___fttol@sign1
  5989  170F  17AD               	bsf	___fttol@f1+1,7
  5990  1710  30FF               	movlw	255
  5991  1711  05AC               	andwf	___fttol@f1,f
  5992  1712  30FF               	movlw	255
  5993  1713  05AD               	andwf	___fttol@f1+1,f
  5994  1714  3000               	movlw	0
  5995  1715  05AE               	andwf	___fttol@f1+2,f
  5996  1716  082C               	movf	___fttol@f1,w
  5997  1717  00B5               	movwf	___fttol@lval
  5998  1718  082D               	movf	___fttol@f1+1,w
  5999  1719  00B6               	movwf	___fttol@lval+1
  6000  171A  082E               	movf	___fttol@f1+2,w
  6001  171B  00B7               	movwf	___fttol@lval+2
  6002  171C  01B8               	clrf	___fttol@lval+3
  6003  171D  308E               	movlw	142
  6004  171E  02B9               	subwf	___fttol@exp1,f
  6005  171F  1FB9               	btfss	___fttol@exp1,7
  6006  1720  2F3F               	goto	i1l2457
  6007  1721  0839               	movf	___fttol@exp1,w
  6008  1722  3A80               	xorlw	128
  6009  1723  3E8F               	addlw	143
  6010  1724  1803               	skipnc
  6011  1725  2F2F               	goto	i1l2455
  6012  1726  3000               	movlw	0
  6013  1727  00AF               	movwf	?___fttol+3
  6014  1728  3000               	movlw	0
  6015  1729  00AE               	movwf	?___fttol+2
  6016  172A  3000               	movlw	0
  6017  172B  00AD               	movwf	?___fttol+1
  6018  172C  3000               	movlw	0
  6019  172D  00AC               	movwf	?___fttol
  6020  172E  0008               	return
  6021  172F                     i1l2455:	
  6022  172F  3001               	movlw	1
  6023  1730                     u281_25:	
  6024  1730  1003               	clrc
  6025  1731  0CB8               	rrf	___fttol@lval+3,f
  6026  1732  0CB7               	rrf	___fttol@lval+2,f
  6027  1733  0CB6               	rrf	___fttol@lval+1,f
  6028  1734  0CB5               	rrf	___fttol@lval,f
  6029  1735  3EFF               	addlw	-1
  6030  1736  1D03               	skipz
  6031  1737  2F30               	goto	u281_25
  6032  1738  3001               	movlw	1
  6033  1739  00B0               	movwf	??___fttol
  6034  173A  0830               	movf	??___fttol,w
  6035  173B  07B9               	addwf	___fttol@exp1,f
  6036  173C  1903               	btfsc	3,2
  6037  173D  2F5A               	goto	i1l2467
  6038  173E  2F2F               	goto	i1l2455
  6039  173F                     i1l2457:	
  6040  173F  3018               	movlw	24
  6041  1740  0239               	subwf	___fttol@exp1,w
  6042  1741  1C03               	skipc
  6043  1742  2F57               	goto	i1l2465
  6044  1743  3000               	movlw	0
  6045  1744  00AF               	movwf	?___fttol+3
  6046  1745  3000               	movlw	0
  6047  1746  00AE               	movwf	?___fttol+2
  6048  1747  3000               	movlw	0
  6049  1748  00AD               	movwf	?___fttol+1
  6050  1749  3000               	movlw	0
  6051  174A  00AC               	movwf	?___fttol
  6052  174B  0008               	return
  6053  174C                     i1l2463:	
  6054  174C  3001               	movlw	1
  6055  174D  00B0               	movwf	??___fttol
  6056  174E                     u284_25:	
  6057  174E  1003               	clrc
  6058  174F  0DB5               	rlf	___fttol@lval,f
  6059  1750  0DB6               	rlf	___fttol@lval+1,f
  6060  1751  0DB7               	rlf	___fttol@lval+2,f
  6061  1752  0DB8               	rlf	___fttol@lval+3,f
  6062  1753  0BB0               	decfsz	??___fttol,f
  6063  1754  2F4E               	goto	u284_25
  6064  1755  3001               	movlw	1
  6065  1756  02B9               	subwf	___fttol@exp1,f
  6066  1757                     i1l2465:	
  6067  1757  08B9               	movf	___fttol@exp1,f
  6068  1758  1D03               	skipz
  6069  1759  2F4C               	goto	i1l2463
  6070  175A                     i1l2467:	
  6071  175A  0834               	movf	___fttol@sign1,w
  6072  175B  1903               	btfsc	3,2
  6073  175C  2F68               	goto	i1l2471
  6074  175D  09B5               	comf	___fttol@lval,f
  6075  175E  09B6               	comf	___fttol@lval+1,f
  6076  175F  09B7               	comf	___fttol@lval+2,f
  6077  1760  09B8               	comf	___fttol@lval+3,f
  6078  1761  0AB5               	incf	___fttol@lval,f
  6079  1762  1903               	skipnz
  6080  1763  0AB6               	incf	___fttol@lval+1,f
  6081  1764  1903               	skipnz
  6082  1765  0AB7               	incf	___fttol@lval+2,f
  6083  1766  1903               	skipnz
  6084  1767  0AB8               	incf	___fttol@lval+3,f
  6085  1768                     i1l2471:	
  6086  1768  0838               	movf	___fttol@lval+3,w
  6087  1769  00AF               	movwf	?___fttol+3
  6088  176A  0837               	movf	___fttol@lval+2,w
  6089  176B  00AE               	movwf	?___fttol+2
  6090  176C  0836               	movf	___fttol@lval+1,w
  6091  176D  00AD               	movwf	?___fttol+1
  6092  176E  0835               	movf	___fttol@lval,w
  6093  176F  00AC               	movwf	?___fttol
  6094  1770  0008               	return
  6095  1771                     __end_of___fttol:	
  6096                           
  6097                           	psect	text35
  6098  09CB                     __ptext35:	
  6099 ;; *************** function ___ftmul *****************
  6100 ;; Defined at:
  6101 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  f1              3   50[BANK0 ] float 
  6104 ;;  f2              3   53[BANK0 ] float 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6107 ;;  sign            1   65[BANK0 ] unsigned char 
  6108 ;;  cntr            1   64[BANK0 ] unsigned char 
  6109 ;;  exp             1   60[BANK0 ] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  3   50[BANK0 ] float 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, pclath, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6119 ;;      Params:         0       6       0       0       0
  6120 ;;      Locals:         0       6       0       0       0
  6121 ;;      Temps:          0       4       0       0       0
  6122 ;;      Totals:         0      16       0       0       0
  6123 ;;Total ram usage:       16 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    1
  6126 ;; This function calls:
  6127 ;;		___ftpack
  6128 ;; This function is called by:
  6129 ;;		_Fuzzy
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function ___ftmul
  6135  09CB                     ___ftmul:	
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6139  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  6140  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  6141  09CD  0852               	movf	___ftmul@f1,w
  6142  09CE  00D8               	movwf	??___ftmul
  6143  09CF  0853               	movf	___ftmul@f1+1,w
  6144  09D0  00D9               	movwf	??___ftmul+1
  6145  09D1  0854               	movf	___ftmul@f1+2,w
  6146  09D2  00DA               	movwf	??___ftmul+2
  6147  09D3  1003               	clrc
  6148  09D4  0D59               	rlf	??___ftmul+1,w
  6149  09D5  0D5A               	rlf	??___ftmul+2,w
  6150  09D6  00DB               	movwf	??___ftmul+3
  6151  09D7  085B               	movf	??___ftmul+3,w
  6152  09D8  00DC               	movwf	___ftmul@exp
  6153  09D9  08DC               	movf	___ftmul@exp,f
  6154  09DA  1D03               	skipz
  6155  09DB  29E3               	goto	i1l2387
  6156  09DC  3000               	movlw	0
  6157  09DD  00D2               	movwf	?___ftmul
  6158  09DE  3000               	movlw	0
  6159  09DF  00D3               	movwf	?___ftmul+1
  6160  09E0  3000               	movlw	0
  6161  09E1  00D4               	movwf	?___ftmul+2
  6162  09E2  0008               	return
  6163  09E3                     i1l2387:	
  6164  09E3  0855               	movf	___ftmul@f2,w
  6165  09E4  00D8               	movwf	??___ftmul
  6166  09E5  0856               	movf	___ftmul@f2+1,w
  6167  09E6  00D9               	movwf	??___ftmul+1
  6168  09E7  0857               	movf	___ftmul@f2+2,w
  6169  09E8  00DA               	movwf	??___ftmul+2
  6170  09E9  1003               	clrc
  6171  09EA  0D59               	rlf	??___ftmul+1,w
  6172  09EB  0D5A               	rlf	??___ftmul+2,w
  6173  09EC  00DB               	movwf	??___ftmul+3
  6174  09ED  085B               	movf	??___ftmul+3,w
  6175  09EE  00E1               	movwf	___ftmul@sign
  6176  09EF  08E1               	movf	___ftmul@sign,f
  6177  09F0  1D03               	skipz
  6178  09F1  29F9               	goto	i1l2393
  6179  09F2  3000               	movlw	0
  6180  09F3  00D2               	movwf	?___ftmul
  6181  09F4  3000               	movlw	0
  6182  09F5  00D3               	movwf	?___ftmul+1
  6183  09F6  3000               	movlw	0
  6184  09F7  00D4               	movwf	?___ftmul+2
  6185  09F8  0008               	return
  6186  09F9                     i1l2393:	
  6187  09F9  0861               	movf	___ftmul@sign,w
  6188  09FA  3E7B               	addlw	123
  6189  09FB  00D8               	movwf	??___ftmul
  6190  09FC  0858               	movf	??___ftmul,w
  6191  09FD  07DC               	addwf	___ftmul@exp,f
  6192  09FE  0852               	movf	___ftmul@f1,w
  6193  09FF  00D8               	movwf	??___ftmul
  6194  0A00  0853               	movf	___ftmul@f1+1,w
  6195  0A01  00D9               	movwf	??___ftmul+1
  6196  0A02  0854               	movf	___ftmul@f1+2,w
  6197  0A03  00DA               	movwf	??___ftmul+2
  6198  0A04  3010               	movlw	16
  6199  0A05                     u265_25:	
  6200  0A05  1003               	clrc
  6201  0A06  0CDA               	rrf	??___ftmul+2,f
  6202  0A07  0CD9               	rrf	??___ftmul+1,f
  6203  0A08  0CD8               	rrf	??___ftmul,f
  6204  0A09  3EFF               	addlw	-1
  6205  0A0A  1D03               	skipz
  6206  0A0B  2A05               	goto	u265_25
  6207  0A0C  0858               	movf	??___ftmul,w
  6208  0A0D  00DB               	movwf	??___ftmul+3
  6209  0A0E  085B               	movf	??___ftmul+3,w
  6210  0A0F  00E1               	movwf	___ftmul@sign
  6211  0A10  0855               	movf	___ftmul@f2,w
  6212  0A11  00D8               	movwf	??___ftmul
  6213  0A12  0856               	movf	___ftmul@f2+1,w
  6214  0A13  00D9               	movwf	??___ftmul+1
  6215  0A14  0857               	movf	___ftmul@f2+2,w
  6216  0A15  00DA               	movwf	??___ftmul+2
  6217  0A16  3010               	movlw	16
  6218  0A17                     u266_25:	
  6219  0A17  1003               	clrc
  6220  0A18  0CDA               	rrf	??___ftmul+2,f
  6221  0A19  0CD9               	rrf	??___ftmul+1,f
  6222  0A1A  0CD8               	rrf	??___ftmul,f
  6223  0A1B  3EFF               	addlw	-1
  6224  0A1C  1D03               	skipz
  6225  0A1D  2A17               	goto	u266_25
  6226  0A1E  0858               	movf	??___ftmul,w
  6227  0A1F  00DB               	movwf	??___ftmul+3
  6228  0A20  085B               	movf	??___ftmul+3,w
  6229  0A21  06E1               	xorwf	___ftmul@sign,f
  6230  0A22  3080               	movlw	128
  6231  0A23  00D8               	movwf	??___ftmul
  6232  0A24  0858               	movf	??___ftmul,w
  6233  0A25  05E1               	andwf	___ftmul@sign,f
  6234  0A26  17D3               	bsf	___ftmul@f1+1,7
  6235  0A27  17D6               	bsf	___ftmul@f2+1,7
  6236  0A28  30FF               	movlw	255
  6237  0A29  05D5               	andwf	___ftmul@f2,f
  6238  0A2A  30FF               	movlw	255
  6239  0A2B  05D6               	andwf	___ftmul@f2+1,f
  6240  0A2C  3000               	movlw	0
  6241  0A2D  05D7               	andwf	___ftmul@f2+2,f
  6242  0A2E  3000               	movlw	0
  6243  0A2F  00DD               	movwf	___ftmul@f3_as_product
  6244  0A30  3000               	movlw	0
  6245  0A31  00DE               	movwf	___ftmul@f3_as_product+1
  6246  0A32  3000               	movlw	0
  6247  0A33  00DF               	movwf	___ftmul@f3_as_product+2
  6248  0A34  3007               	movlw	7
  6249  0A35  00D8               	movwf	??___ftmul
  6250  0A36  0858               	movf	??___ftmul,w
  6251  0A37  00E0               	movwf	___ftmul@cntr
  6252  0A38                     i1l2405:	
  6253  0A38  1C52               	btfss	___ftmul@f1,0
  6254  0A39  2A48               	goto	i1l2409
  6255  0A3A  0855               	movf	___ftmul@f2,w
  6256  0A3B  07DD               	addwf	___ftmul@f3_as_product,f
  6257  0A3C  0856               	movf	___ftmul@f2+1,w
  6258  0A3D  1103               	clrz
  6259  0A3E  1803               	skipnc
  6260  0A3F  0A56               	incf	___ftmul@f2+1,w
  6261  0A40  1D03               	btfss	3,2
  6262  0A41  07DE               	addwf	___ftmul@f3_as_product+1,f
  6263  0A42  0857               	movf	___ftmul@f2+2,w
  6264  0A43  1103               	clrz
  6265  0A44  1803               	skipnc
  6266  0A45  0A57               	incf	___ftmul@f2+2,w
  6267  0A46  1D03               	btfss	3,2
  6268  0A47  07DF               	addwf	___ftmul@f3_as_product+2,f
  6269  0A48                     i1l2409:	
  6270  0A48  3001               	movlw	1
  6271  0A49                     u269_25:	
  6272  0A49  1003               	clrc
  6273  0A4A  0CD4               	rrf	___ftmul@f1+2,f
  6274  0A4B  0CD3               	rrf	___ftmul@f1+1,f
  6275  0A4C  0CD2               	rrf	___ftmul@f1,f
  6276  0A4D  3EFF               	addlw	-1
  6277  0A4E  1D03               	skipz
  6278  0A4F  2A49               	goto	u269_25
  6279  0A50  3001               	movlw	1
  6280  0A51                     u270_25:	
  6281  0A51  1003               	clrc
  6282  0A52  0DD5               	rlf	___ftmul@f2,f
  6283  0A53  0DD6               	rlf	___ftmul@f2+1,f
  6284  0A54  0DD7               	rlf	___ftmul@f2+2,f
  6285  0A55  3EFF               	addlw	-1
  6286  0A56  1D03               	skipz
  6287  0A57  2A51               	goto	u270_25
  6288  0A58  3001               	movlw	1
  6289  0A59  02E0               	subwf	___ftmul@cntr,f
  6290  0A5A  1D03               	btfss	3,2
  6291  0A5B  2A38               	goto	i1l2405
  6292  0A5C  3009               	movlw	9
  6293  0A5D  00D8               	movwf	??___ftmul
  6294  0A5E  0858               	movf	??___ftmul,w
  6295  0A5F  00E0               	movwf	___ftmul@cntr
  6296  0A60                     i1l2417:	
  6297  0A60  1C52               	btfss	___ftmul@f1,0
  6298  0A61  2A70               	goto	i1l2421
  6299  0A62  0855               	movf	___ftmul@f2,w
  6300  0A63  07DD               	addwf	___ftmul@f3_as_product,f
  6301  0A64  0856               	movf	___ftmul@f2+1,w
  6302  0A65  1103               	clrz
  6303  0A66  1803               	skipnc
  6304  0A67  0A56               	incf	___ftmul@f2+1,w
  6305  0A68  1D03               	btfss	3,2
  6306  0A69  07DE               	addwf	___ftmul@f3_as_product+1,f
  6307  0A6A  0857               	movf	___ftmul@f2+2,w
  6308  0A6B  1103               	clrz
  6309  0A6C  1803               	skipnc
  6310  0A6D  0A57               	incf	___ftmul@f2+2,w
  6311  0A6E  1D03               	btfss	3,2
  6312  0A6F  07DF               	addwf	___ftmul@f3_as_product+2,f
  6313  0A70                     i1l2421:	
  6314  0A70  3001               	movlw	1
  6315  0A71                     u274_25:	
  6316  0A71  1003               	clrc
  6317  0A72  0CD4               	rrf	___ftmul@f1+2,f
  6318  0A73  0CD3               	rrf	___ftmul@f1+1,f
  6319  0A74  0CD2               	rrf	___ftmul@f1,f
  6320  0A75  3EFF               	addlw	-1
  6321  0A76  1D03               	skipz
  6322  0A77  2A71               	goto	u274_25
  6323  0A78  3001               	movlw	1
  6324  0A79                     u275_25:	
  6325  0A79  1003               	clrc
  6326  0A7A  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6327  0A7B  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6328  0A7C  0CDD               	rrf	___ftmul@f3_as_product,f
  6329  0A7D  3EFF               	addlw	-1
  6330  0A7E  1D03               	skipz
  6331  0A7F  2A79               	goto	u275_25
  6332  0A80  3001               	movlw	1
  6333  0A81  02E0               	subwf	___ftmul@cntr,f
  6334  0A82  1D03               	btfss	3,2
  6335  0A83  2A60               	goto	i1l2417
  6336  0A84  085D               	movf	___ftmul@f3_as_product,w
  6337  0A85  00F0               	movwf	___ftpack@arg
  6338  0A86  085E               	movf	___ftmul@f3_as_product+1,w
  6339  0A87  00F1               	movwf	___ftpack@arg+1
  6340  0A88  085F               	movf	___ftmul@f3_as_product+2,w
  6341  0A89  00F2               	movwf	___ftpack@arg+2
  6342  0A8A  085C               	movf	___ftmul@exp,w
  6343  0A8B  00D8               	movwf	??___ftmul
  6344  0A8C  0858               	movf	??___ftmul,w
  6345  0A8D  00F3               	movwf	___ftpack@exp
  6346  0A8E  0861               	movf	___ftmul@sign,w
  6347  0A8F  00D9               	movwf	??___ftmul+1
  6348  0A90  0859               	movf	??___ftmul+1,w
  6349  0A91  00F4               	movwf	___ftpack@sign
  6350  0A92  160A  118A  25F0   	fcall	___ftpack
  6351  0A95  0870               	movf	?___ftpack,w
  6352  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0A98  00D2               	movwf	?___ftmul
  6355  0A99  0871               	movf	?___ftpack+1,w
  6356  0A9A  00D3               	movwf	?___ftmul+1
  6357  0A9B  0872               	movf	?___ftpack+2,w
  6358  0A9C  00D4               	movwf	?___ftmul+2
  6359  0A9D  0008               	return
  6360  0A9E                     __end_of___ftmul:	
  6361                           
  6362                           	psect	text36
  6363  1404                     __ptext36:	
  6364 ;; *************** function ___awtoft *****************
  6365 ;; Defined at:
  6366 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  c               2    8[COMMON] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  sign            1   13[COMMON] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  3    8[COMMON] float 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0, pclath, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6380 ;;      Params:         3       0       0       0       0
  6381 ;;      Locals:         1       0       0       0       0
  6382 ;;      Temps:          2       0       0       0       0
  6383 ;;      Totals:         6       0       0       0       0
  6384 ;;Total ram usage:        6 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    1
  6387 ;; This function calls:
  6388 ;;		___ftpack
  6389 ;; This function is called by:
  6390 ;;		_Fuzzy
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function ___awtoft
  6396  1404                     ___awtoft:	
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6400  1404  01FD               	clrf	___awtoft@sign
  6401  1405  1FF9               	btfss	___awtoft@c+1,7
  6402  1406  2C0E               	goto	i1l2377
  6403  1407  09F8               	comf	___awtoft@c,f
  6404  1408  09F9               	comf	___awtoft@c+1,f
  6405  1409  0AF8               	incf	___awtoft@c,f
  6406  140A  1903               	skipnz
  6407  140B  0AF9               	incf	___awtoft@c+1,f
  6408  140C  01FD               	clrf	___awtoft@sign
  6409  140D  0AFD               	incf	___awtoft@sign,f
  6410  140E                     i1l2377:	
  6411  140E  0878               	movf	___awtoft@c,w
  6412  140F  00F0               	movwf	___ftpack@arg
  6413  1410  0879               	movf	___awtoft@c+1,w
  6414  1411  00F1               	movwf	___ftpack@arg+1
  6415  1412  01F2               	clrf	___ftpack@arg+2
  6416  1413  308E               	movlw	142
  6417  1414  00FB               	movwf	??___awtoft
  6418  1415  087B               	movf	??___awtoft,w
  6419  1416  00F3               	movwf	___ftpack@exp
  6420  1417  087D               	movf	___awtoft@sign,w
  6421  1418  00FC               	movwf	??___awtoft+1
  6422  1419  087C               	movf	??___awtoft+1,w
  6423  141A  00F4               	movwf	___ftpack@sign
  6424  141B  160A  118A  25F0   	fcall	___ftpack
  6425  141E  0870               	movf	?___ftpack,w
  6426  141F  00F8               	movwf	?___awtoft
  6427  1420  0871               	movf	?___ftpack+1,w
  6428  1421  00F9               	movwf	?___awtoft+1
  6429  1422  0872               	movf	?___ftpack+2,w
  6430  1423  00FA               	movwf	?___awtoft+2
  6431  1424  0008               	return
  6432  1425                     __end_of___awtoft:	
  6433                           
  6434                           	psect	text37
  6435  15F0                     __ptext37:	
  6436 ;; *************** function ___ftpack *****************
  6437 ;; Defined at:
  6438 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  arg             3    0[COMMON] unsigned um
  6441 ;;  exp             1    3[COMMON] unsigned char 
  6442 ;;  sign            1    4[COMMON] unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  3    0[COMMON] float 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6454 ;;      Params:         5       0       0       0       0
  6455 ;;      Locals:         0       0       0       0       0
  6456 ;;      Temps:          3       0       0       0       0
  6457 ;;      Totals:         8       0       0       0       0
  6458 ;;Total ram usage:        8 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		___awtoft
  6464 ;;		___ftadd
  6465 ;;		___ftdiv
  6466 ;;		___ftmul
  6467 ;;		___lwtoft
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function ___ftpack
  6473  15F0                     ___ftpack:	
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6477  15F0  0873               	movf	___ftpack@exp,w
  6478  15F1  1903               	btfsc	3,2
  6479  15F2  2DF8               	goto	i1l2069
  6480  15F3  0872               	movf	___ftpack@arg+2,w
  6481  15F4  0471               	iorwf	___ftpack@arg+1,w
  6482  15F5  0470               	iorwf	___ftpack@arg,w
  6483  15F6  1D03               	skipz
  6484  15F7  2E0B               	goto	i1l2075
  6485  15F8                     i1l2069:	
  6486  15F8  3000               	movlw	0
  6487  15F9  00F0               	movwf	?___ftpack
  6488  15FA  3000               	movlw	0
  6489  15FB  00F1               	movwf	?___ftpack+1
  6490  15FC  3000               	movlw	0
  6491  15FD  00F2               	movwf	?___ftpack+2
  6492  15FE  0008               	return
  6493  15FF                     i1l2073:	
  6494  15FF  3001               	movlw	1
  6495  1600  00F5               	movwf	??___ftpack
  6496  1601  0875               	movf	??___ftpack,w
  6497  1602  07F3               	addwf	___ftpack@exp,f
  6498  1603  3001               	movlw	1
  6499  1604                     u188_25:	
  6500  1604  1003               	clrc
  6501  1605  0CF2               	rrf	___ftpack@arg+2,f
  6502  1606  0CF1               	rrf	___ftpack@arg+1,f
  6503  1607  0CF0               	rrf	___ftpack@arg,f
  6504  1608  3EFF               	addlw	-1
  6505  1609  1D03               	skipz
  6506  160A  2E04               	goto	u188_25
  6507  160B                     i1l2075:	
  6508  160B  30FE               	movlw	254
  6509  160C  0572               	andwf	___ftpack@arg+2,w
  6510  160D  1903               	btfsc	3,2
  6511  160E  2E26               	goto	i1l717
  6512  160F  2DFF               	goto	i1l2073
  6513  1610                     i1l2077:	
  6514  1610  3001               	movlw	1
  6515  1611  00F5               	movwf	??___ftpack
  6516  1612  0875               	movf	??___ftpack,w
  6517  1613  07F3               	addwf	___ftpack@exp,f
  6518  1614  3001               	movlw	1
  6519  1615  07F0               	addwf	___ftpack@arg,f
  6520  1616  3000               	movlw	0
  6521  1617  1803               	skipnc
  6522  1618  3001               	movlw	1
  6523  1619  07F1               	addwf	___ftpack@arg+1,f
  6524  161A  3000               	movlw	0
  6525  161B  1803               	skipnc
  6526  161C  3001               	movlw	1
  6527  161D  07F2               	addwf	___ftpack@arg+2,f
  6528  161E  3001               	movlw	1
  6529  161F                     u190_25:	
  6530  161F  1003               	clrc
  6531  1620  0CF2               	rrf	___ftpack@arg+2,f
  6532  1621  0CF1               	rrf	___ftpack@arg+1,f
  6533  1622  0CF0               	rrf	___ftpack@arg,f
  6534  1623  3EFF               	addlw	-1
  6535  1624  1D03               	skipz
  6536  1625  2E1F               	goto	u190_25
  6537  1626                     i1l717:	
  6538  1626  30FF               	movlw	255
  6539  1627  0572               	andwf	___ftpack@arg+2,w
  6540  1628  1903               	btfsc	3,2
  6541  1629  2E35               	goto	i1l2085
  6542  162A  2E10               	goto	i1l2077
  6543  162B                     i1l2083:	
  6544  162B  3001               	movlw	1
  6545  162C  02F3               	subwf	___ftpack@exp,f
  6546  162D  3001               	movlw	1
  6547  162E                     u192_25:	
  6548  162E  1003               	clrc
  6549  162F  0DF0               	rlf	___ftpack@arg,f
  6550  1630  0DF1               	rlf	___ftpack@arg+1,f
  6551  1631  0DF2               	rlf	___ftpack@arg+2,f
  6552  1632  3EFF               	addlw	-1
  6553  1633  1D03               	skipz
  6554  1634  2E2E               	goto	u192_25
  6555  1635                     i1l2085:	
  6556  1635  1FF1               	btfss	___ftpack@arg+1,7
  6557  1636  2E2B               	goto	i1l2083
  6558  1637  1873               	btfsc	___ftpack@exp,0
  6559  1638  2E3F               	goto	i1l723
  6560  1639  30FF               	movlw	255
  6561  163A  05F0               	andwf	___ftpack@arg,f
  6562  163B  307F               	movlw	127
  6563  163C  05F1               	andwf	___ftpack@arg+1,f
  6564  163D  30FF               	movlw	255
  6565  163E  05F2               	andwf	___ftpack@arg+2,f
  6566  163F                     i1l723:	
  6567  163F  1003               	clrc
  6568  1640  0CF3               	rrf	___ftpack@exp,f
  6569  1641  0873               	movf	___ftpack@exp,w
  6570  1642  00F5               	movwf	??___ftpack
  6571  1643  01F6               	clrf	??___ftpack+1
  6572  1644  01F7               	clrf	??___ftpack+2
  6573  1645  3010               	movlw	16
  6574  1646                     u195_25:	
  6575  1646  1003               	clrc
  6576  1647  0DF5               	rlf	??___ftpack,f
  6577  1648  0DF6               	rlf	??___ftpack+1,f
  6578  1649  0DF7               	rlf	??___ftpack+2,f
  6579  164A  3EFF               	addlw	-1
  6580  164B  1D03               	skipz
  6581  164C  2E46               	goto	u195_25
  6582  164D  0875               	movf	??___ftpack,w
  6583  164E  04F0               	iorwf	___ftpack@arg,f
  6584  164F  0876               	movf	??___ftpack+1,w
  6585  1650  04F1               	iorwf	___ftpack@arg+1,f
  6586  1651  0877               	movf	??___ftpack+2,w
  6587  1652  04F2               	iorwf	___ftpack@arg+2,f
  6588  1653  0874               	movf	___ftpack@sign,w
  6589  1654  1903               	btfsc	3,2
  6590  1655  0008               	return
  6591  1656  17F2               	bsf	___ftpack@arg+2,7
  6592  1657  0008               	return
  6593  1658                     __end_of___ftpack:	
  6594  007E                     btemp	set	126	;btemp
  6595  007E                     wtemp	set	126
  6596  007E                     wtemp0	set	126
  6597  0080                     wtemp1	set	128
  6598  0082                     wtemp2	set	130
  6599  0084                     wtemp3	set	132
  6600  0086                     wtemp4	set	134
  6601  0088                     wtemp5	set	136
  6602  007F                     wtemp6	set	127
  6603  007E                     ttemp	set	126
  6604  007E                     ttemp0	set	126
  6605  0081                     ttemp1	set	129
  6606  0084                     ttemp2	set	132
  6607  0087                     ttemp3	set	135
  6608  007F                     ttemp4	set	127
  6609  007E                     ltemp	set	126
  6610  007E                     ltemp0	set	126
  6611  0082                     ltemp1	set	130
  6612  0086                     ltemp2	set	134
  6613  0080                     ltemp3	set	128
  6614                           
  6615                           	psect	text22_split_1
  6616  0DF8                     L11:	
  6617  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0DF9  0820               	movf	?_minimo,w
  6619  0DFA  00A6               	movwf	maximo@a
  6620  0DFB  0821               	movf	?_minimo+1,w
  6621  0DFC  00A7               	movwf	maximo@a+1
  6622  0DFD  0822               	movf	?_minimo+2,w
  6623  0DFE  00A8               	movwf	maximo@a+2
  6624  0DFF  160A  118A  23A8  120A  158A  	fcall	_maximo
  6625  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  6626  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  6627  0E06  0826               	movf	?_maximo,w
  6628  0E07  00AC               	movwf	___fttol@f1
  6629  0E08  0827               	movf	?_maximo+1,w
  6630  0E09  00AD               	movwf	___fttol@f1+1
  6631  0E0A  0828               	movf	?_maximo+2,w
  6632  0E0B  00AE               	movwf	___fttol@f1+2
  6633  0E0C  160A  118A  26E3  120A  158A  	fcall	___fttol
  6634  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  6636  0E13  082D               	movf	?___fttol+1,w
  6637  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  6638  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  6639  0E16  01B3               	clrf	(Fuzzy@delta+1)^(0+128)
  6640  0E17  07B3               	addwf	(Fuzzy@delta+1)^(0+128),f
  6641  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  6642  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  6643  0E1A  082C               	movf	?___fttol,w
  6644  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  6645  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  6646  0E1D  01B2               	clrf	Fuzzy@delta^(0+128)
  6647  0E1E  07B2               	addwf	Fuzzy@delta^(0+128),f
  6648                           
  6649                           ;main.c: 193: float x = 0;
  6650  0E1F  3000               	movlw	0
  6651  0E20  00BF               	movwf	Fuzzy@x^(0+128)
  6652  0E21  3000               	movlw	0
  6653  0E22  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6654  0E23  3000               	movlw	0
  6655  0E24  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6656                           
  6657                           ;main.c: 194: float rule = 0;
  6658  0E25  3000               	movlw	0
  6659  0E26  00BC               	movwf	Fuzzy@rule^(0+128)
  6660  0E27  3000               	movlw	0
  6661  0E28  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6662  0E29  3000               	movlw	0
  6663  0E2A  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6664                           
  6665                           ;main.c: 197: if (deltaV <= 100) {
  6666  0E2B  3000               	movlw	0
  6667  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0E2E  0269               	subwf	_deltaV+1,w
  6670  0E2F  3065               	movlw	101
  6671  0E30  1903               	skipnz
  6672  0E31  0268               	subwf	_deltaV,w
  6673  0E32  1803               	skipnc
  6674  0E33  2F27               	goto	i1l3773
  6675                           
  6676                           ;main.c: 200: rule = trapmf(deltaV, -1, 0, 1, 100);
  6677  0E34  0869               	movf	_deltaV+1,w
  6678  0E35  01F9               	clrf	___lwtoft@c+1
  6679  0E36  07F9               	addwf	___lwtoft@c+1,f
  6680  0E37  0868               	movf	_deltaV,w
  6681  0E38  01F8               	clrf	___lwtoft@c
  6682  0E39  07F8               	addwf	___lwtoft@c,f
  6683  0E3A  160A  118A  2317  120A  158A  	fcall	___lwtoft
  6684  0E3F  0878               	movf	?___lwtoft,w
  6685  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  6687  0E42  00C0               	movwf	trapmf@x
  6688  0E43  0879               	movf	?___lwtoft+1,w
  6689  0E44  00C1               	movwf	trapmf@x+1
  6690  0E45  087A               	movf	?___lwtoft+2,w
  6691  0E46  00C2               	movwf	trapmf@x+2
  6692  0E47  3000               	movlw	0
  6693  0E48  00C3               	movwf	trapmf@a
  6694  0E49  3080               	movlw	128
  6695  0E4A  00C4               	movwf	trapmf@a+1
  6696  0E4B  30BF               	movlw	191
  6697  0E4C  00C5               	movwf	trapmf@a+2
  6698  0E4D  3000               	movlw	0
  6699  0E4E  00C6               	movwf	trapmf@b
  6700  0E4F  3000               	movlw	0
  6701  0E50  00C7               	movwf	trapmf@b+1
  6702  0E51  3000               	movlw	0
  6703  0E52  00C8               	movwf	trapmf@b+2
  6704  0E53  3000               	movlw	0
  6705  0E54  00C9               	movwf	trapmf@c
  6706  0E55  3080               	movlw	128
  6707  0E56  00CA               	movwf	trapmf@c+1
  6708  0E57  303F               	movlw	63
  6709  0E58  00CB               	movwf	trapmf@c+2
  6710  0E59  3000               	movlw	0
  6711  0E5A  00CC               	movwf	trapmf@d
  6712  0E5B  30C8               	movlw	200
  6713  0E5C  00CD               	movwf	trapmf@d+1
  6714  0E5D  3042               	movlw	66
  6715  0E5E  00CE               	movwf	trapmf@d+2
  6716  0E5F  120A  158A  24A2  120A  158A  	fcall	_trapmf
  6717  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  6719  0E66  0840               	movf	?_trapmf,w
  6720  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  6721  0E68  1303               	bcf	3,6	;RP1=0, select bank1
  6722  0E69  00BC               	movwf	Fuzzy@rule^(0+128)
  6723  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6724  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6725  0E6C  0841               	movf	?_trapmf+1,w
  6726  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  6727  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  6728  0E6F  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6729  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  6730  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  6731  0E72  0842               	movf	?_trapmf+2,w
  6732  0E73  1683               	bsf	3,5	;RP0=1, select bank1
  6733  0E74  1303               	bcf	3,6	;RP1=0, select bank1
  6734  0E75  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6735                           
  6736                           ;main.c: 202: x = 0;
  6737  0E76  3000               	movlw	0
  6738  0E77  00BF               	movwf	Fuzzy@x^(0+128)
  6739  0E78  3000               	movlw	0
  6740  0E79  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6741  0E7A  3000               	movlw	0
  6742  0E7B  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6743                           
  6744                           ;main.c: 203: for (int a = 0; a <= 15; a++) {
  6745  0E7C  01AA               	clrf	Fuzzy@a^(0+128)
  6746  0E7D  01AB               	clrf	(Fuzzy@a+1)^(0+128)
  6747  0E7E  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6748  0E7F  3A80               	xorlw	128
  6749  0E80  00FF               	movwf	127
  6750  0E81  3080               	movlw	128
  6751  0E82  027F               	subwf	127,w
  6752  0E83  1D03               	skipz
  6753  0E84  2E87               	goto	u493_25
  6754  0E85  3010               	movlw	16
  6755  0E86  022A               	subwf	Fuzzy@a^(0+128),w
  6756  0E87                     u493_25:	
  6757  0E87  1803               	btfsc	3,0
  6758  0E88  2F27               	goto	i1l3773
  6759  0E89                     i1l3763:	
  6760                           
  6761                           ;main.c: 204: rulepequeno = trapmf(x, -1, 0, 0, 5);
  6762  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  6763  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  6764  0E8B  083F               	movf	Fuzzy@x^(0+128),w
  6765  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0E8E  00C0               	movwf	trapmf@x
  6768  0E8F  1683               	bsf	3,5	;RP0=1, select bank1
  6769  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  6770  0E91  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6771  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  6772  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  6773  0E94  00C1               	movwf	trapmf@x+1
  6774  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  6775  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  6776  0E97  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6777  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  6778  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  6779  0E9A  00C2               	movwf	trapmf@x+2
  6780  0E9B  3000               	movlw	0
  6781  0E9C  00C3               	movwf	trapmf@a
  6782  0E9D  3080               	movlw	128
  6783  0E9E  00C4               	movwf	trapmf@a+1
  6784  0E9F  30BF               	movlw	191
  6785  0EA0  00C5               	movwf	trapmf@a+2
  6786  0EA1  3000               	movlw	0
  6787  0EA2  00C6               	movwf	trapmf@b
  6788  0EA3  3000               	movlw	0
  6789  0EA4  00C7               	movwf	trapmf@b+1
  6790  0EA5  3000               	movlw	0
  6791  0EA6  00C8               	movwf	trapmf@b+2
  6792  0EA7  3000               	movlw	0
  6793  0EA8  00C9               	movwf	trapmf@c
  6794  0EA9  3000               	movlw	0
  6795  0EAA  00CA               	movwf	trapmf@c+1
  6796  0EAB  3000               	movlw	0
  6797  0EAC  00CB               	movwf	trapmf@c+2
  6798  0EAD  3000               	movlw	0
  6799  0EAE  00CC               	movwf	trapmf@d
  6800  0EAF  30A0               	movlw	160
  6801  0EB0  00CD               	movwf	trapmf@d+1
  6802  0EB1  3040               	movlw	64
  6803  0EB2  00CE               	movwf	trapmf@d+2
  6804  0EB3  120A  158A  24A2  120A  158A  	fcall	_trapmf
  6805  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  6806  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  6807  0EBA  0840               	movf	?_trapmf,w
  6808  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  6809  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  6810  0EBD  00CB               	movwf	_rulepequeno^(0+128)
  6811  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  6812  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  6813  0EC0  0841               	movf	?_trapmf+1,w
  6814  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  6815  0EC2  1303               	bcf	3,6	;RP1=0, select bank1
  6816  0EC3  00CC               	movwf	(_rulepequeno+1)^(0+128)
  6817  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6819  0EC6  0842               	movf	?_trapmf+2,w
  6820  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  6821  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  6822  0EC9  00CD               	movwf	(_rulepequeno+2)^(0+128)
  6823                           
  6824                           ;main.c: 205: if (rulepequeno >= rule) {
  6825  0ECA  084B               	movf	_rulepequeno^(0+128),w
  6826  0ECB  00F0               	movwf	___ftge@ff1
  6827  0ECC  084C               	movf	(_rulepequeno+1)^(0+128),w
  6828  0ECD  00F1               	movwf	___ftge@ff1+1
  6829  0ECE  084D               	movf	(_rulepequeno+2)^(0+128),w
  6830  0ECF  00F2               	movwf	___ftge@ff1+2
  6831  0ED0  083C               	movf	Fuzzy@rule^(0+128),w
  6832  0ED1  00F3               	movwf	___ftge@ff2
  6833  0ED2  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6834  0ED3  00F4               	movwf	___ftge@ff2+1
  6835  0ED4  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6836  0ED5  00F5               	movwf	___ftge@ff2+2
  6837  0ED6  160A  118A  2593  120A  158A  	fcall	___ftge
  6838  0EDB  1C03               	btfss	3,0
  6839  0EDC  2EE5               	goto	i1l3767
  6840                           
  6841                           ;main.c: 206: rulepequeno = rule;
  6842  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  6843  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  6844  0EDF  083C               	movf	Fuzzy@rule^(0+128),w
  6845  0EE0  00CB               	movwf	_rulepequeno^(0+128)
  6846  0EE1  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6847  0EE2  00CC               	movwf	(_rulepequeno+1)^(0+128)
  6848  0EE3  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6849  0EE4  00CD               	movwf	(_rulepequeno+2)^(0+128)
  6850  0EE5                     i1l3767:	
  6851                           
  6852                           ;main.c: 207: }
  6853                           ;main.c: 209: x += 1;
  6854  0EE5  3000               	movlw	0
  6855  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  6856  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  6857  0EE8  00A3               	movwf	___ftadd@f1
  6858  0EE9  3080               	movlw	128
  6859  0EEA  00A4               	movwf	___ftadd@f1+1
  6860  0EEB  303F               	movlw	63
  6861  0EEC  00A5               	movwf	___ftadd@f1+2
  6862  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  6863  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  6864  0EEF  083F               	movf	Fuzzy@x^(0+128),w
  6865  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6866  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  6867  0EF2  00A6               	movwf	___ftadd@f2
  6868  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  6869  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  6870  0EF5  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6871  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  6873  0EF8  00A7               	movwf	___ftadd@f2+1
  6874  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  6875  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  6876  0EFB  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6877  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  6879  0EFE  00A8               	movwf	___ftadd@f2+2
  6880  0EFF  120A  118A  26E4  120A  158A  	fcall	___ftadd
  6881  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0F06  0823               	movf	?___ftadd,w
  6884  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  6885  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  6886  0F09  00BF               	movwf	Fuzzy@x^(0+128)
  6887  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  6889  0F0C  0824               	movf	?___ftadd+1,w
  6890  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  6891  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  6892  0F0F  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6893  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  6894  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  6895  0F12  0825               	movf	?___ftadd+2,w
  6896  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  6897  0F14  1303               	bcf	3,6	;RP1=0, select bank1
  6898  0F15  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6899  0F16  3001               	movlw	1
  6900  0F17  07AA               	addwf	Fuzzy@a^(0+128),f
  6901  0F18  1803               	skipnc
  6902  0F19  0AAB               	incf	(Fuzzy@a+1)^(0+128),f
  6903  0F1A  3000               	movlw	0
  6904  0F1B  07AB               	addwf	(Fuzzy@a+1)^(0+128),f
  6905  0F1C  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6906  0F1D  3A80               	xorlw	128
  6907  0F1E  00FF               	movwf	127
  6908  0F1F  3080               	movlw	128
  6909  0F20  027F               	subwf	127,w
  6910  0F21  1D03               	skipz
  6911  0F22  2F25               	goto	u495_25
  6912  0F23  3010               	movlw	16
  6913  0F24  022A               	subwf	Fuzzy@a^(0+128),w
  6914  0F25                     u495_25:	
  6915  0F25  1C03               	skipc
  6916  0F26  2E89               	goto	i1l3763
  6917  0F27                     i1l3773:	
  6918                           
  6919                           ;main.c: 210: }
  6920                           ;main.c: 211: }
  6921                           ;main.c: 215: if (deltaV >= 100 && deltaV <= 1001 && delta <= 200)
  6922  0F27  3000               	movlw	0
  6923  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  6924  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  6925  0F2A  0269               	subwf	_deltaV+1,w
  6926  0F2B  3064               	movlw	100
  6927  0F2C  1903               	skipnz
  6928  0F2D  0268               	subwf	_deltaV,w
  6929  0F2E  1C03               	skipc
  6930  0F2F  2FFD               	goto	L13
  6931  0F30  3003               	movlw	3
  6932  0F31  0269               	subwf	_deltaV+1,w
  6933  0F32  30EA               	movlw	234
  6934  0F33  1903               	skipnz
  6935  0F34  0268               	subwf	_deltaV,w
  6936  0F35  1803               	skipnc
  6937  0F36  2FFD               	goto	L14
  6938  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  6939  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  6940  0F39  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  6941  0F3A  3A80               	xorlw	128
  6942  0F3B  00FF               	movwf	127
  6943  0F3C  3080               	movlw	128
  6944  0F3D  027F               	subwf	127,w
  6945  0F3E  1D03               	skipz
  6946  0F3F  2F42               	goto	u498_25
  6947  0F40  30C9               	movlw	201
  6948  0F41  0232               	subwf	Fuzzy@delta^(0+128),w
  6949  0F42                     u498_25:	
  6950  0F42  1803               	skipnc
  6951  0F43  2FFD               	goto	L14
  6952                           
  6953                           ;main.c: 216: {
  6954                           ;main.c: 218: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  6955                           ;main.c: 219: (1 - trapmf(delta, -1, 0, 1, 200));
  6956  0F44  3000               	movlw	0
  6957  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  6958  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  6959  0F47  00CC               	movwf	trapmf@d
  6960  0F48  3048               	movlw	72
  6961  0F49  00CD               	movwf	trapmf@d+1
  6962  0F4A  3043               	movlw	67
  6963  0F4B  00CE               	movwf	trapmf@d+2
  6964  0F4C  3000               	movlw	0
  6965  0F4D  00C9               	movwf	trapmf@c
  6966  0F4E  3080               	movlw	128
  6967  0F4F  00CA               	movwf	trapmf@c+1
  6968  0F50  303F               	movlw	63
  6969  0F51  00CB               	movwf	trapmf@c+2
  6970  0F52  3000               	movlw	0
  6971  0F53  00C6               	movwf	trapmf@b
  6972  0F54  3000               	movlw	0
  6973  0F55  00C7               	movwf	trapmf@b+1
  6974  0F56  3000               	movlw	0
  6975  0F57  00C8               	movwf	trapmf@b+2
  6976  0F58  3000               	movlw	0
  6977  0F59  00C3               	movwf	trapmf@a
  6978  0F5A  3080               	movlw	128
  6979  0F5B  00C4               	movwf	trapmf@a+1
  6980  0F5C  30BF               	movlw	191
  6981  0F5D  00C5               	movwf	trapmf@a+2
  6982  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  6983  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  6984  0F60  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  6985  0F61  01F9               	clrf	___awtoft@c+1
  6986  0F62  07F9               	addwf	___awtoft@c+1,f
  6987  0F63  0832               	movf	Fuzzy@delta^(0+128),w
  6988  0F64  01F8               	clrf	___awtoft@c
  6989  0F65  07F8               	addwf	___awtoft@c,f
  6990  0F66  160A  118A  2404  120A  158A  	fcall	___awtoft
  6991  0F6B  0878               	movf	?___awtoft,w
  6992  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  6993  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  6994  0F6E  00C0               	movwf	trapmf@x
  6995  0F6F  0879               	movf	?___awtoft+1,w
  6996  0F70  00C1               	movwf	trapmf@x+1
  6997  0F71  087A               	movf	?___awtoft+2,w
  6998  0F72  00C2               	movwf	trapmf@x+2
  6999  0F73  120A  158A  24A2  120A  158A  	fcall	_trapmf
  7000  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  7001  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  7002  0F7A  0840               	movf	?_trapmf,w
  7003  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  7004  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  7005  0F7D  00A0               	movwf	_Fuzzy$1688^(0+128)
  7006  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  7007  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  7008  0F80  0841               	movf	?_trapmf+1,w
  7009  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  7010  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  7011  0F83  00A1               	movwf	(_Fuzzy$1688+1)^(0+128)
  7012  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  7013  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  7014  0F86  0842               	movf	?_trapmf+2,w
  7015  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  7016  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  7017  0F89  00A2               	movwf	(_Fuzzy$1688+2)^(0+128)
  7018                           
  7019                           ;main.c: 216: {
  7020                           ;main.c: 218: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7021                           ;main.c: 219: (1 - trapmf(delta, -1, 0, 1, 200));
  7022  0F8A  30C0               	movlw	192
  7023  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  7024  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  7025  0F8D  00CC               	movwf	trapmf@d
  7026  0F8E  30C1               	movlw	193
  7027  0F8F  00CD               	movwf	trapmf@d+1
  7028  0F90  3044               	movlw	68
  7029  0F91  00CE               	movwf	trapmf@d+2
  7030  0F92  3000               	movlw	0
  7031  0F93  00C9               	movwf	trapmf@c
  7032  0F94  3048               	movlw	72
  7033  0F95  00CA               	movwf	trapmf@c+1
  7034  0F96  3044               	movlw	68
  7035  0F97  00CB               	movwf	trapmf@c+2
  7036  0F98  3000               	movlw	0
  7037  0F99  00C6               	movwf	trapmf@b
  7038  0F9A  3048               	movlw	72
  7039  0F9B  00C7               	movwf	trapmf@b+1
  7040  0F9C  3044               	movlw	68
  7041  0F9D  00C8               	movwf	trapmf@b+2
  7042  0F9E  3000               	movlw	0
  7043  0F9F  00C3               	movwf	trapmf@a
  7044  0FA0  3048               	movlw	72
  7045  0FA1  00C4               	movwf	trapmf@a+1
  7046  0FA2  3042               	movlw	66
  7047  0FA3  00C5               	movwf	trapmf@a+2
  7048  0FA4  0869               	movf	_deltaV+1,w
  7049  0FA5  01F9               	clrf	___lwtoft@c+1
  7050  0FA6  07F9               	addwf	___lwtoft@c+1,f
  7051  0FA7  0868               	movf	_deltaV,w
  7052  0FA8  01F8               	clrf	___lwtoft@c
  7053  0FA9  07F8               	addwf	___lwtoft@c,f
  7054  0FAA  160A  118A  2317  120A  158A  	fcall	___lwtoft
  7055  0FAF  0878               	movf	?___lwtoft,w
  7056  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  7057  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  7058  0FB2  00C0               	movwf	trapmf@x
  7059  0FB3  0879               	movf	?___lwtoft+1,w
  7060  0FB4  00C1               	movwf	trapmf@x+1
  7061  0FB5  087A               	movf	?___lwtoft+2,w
  7062  0FB6  00C2               	movwf	trapmf@x+2
  7063  0FB7  120A  158A  24A2  120A  158A  	fcall	_trapmf
  7064  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  7066  0FBE  0840               	movf	?_trapmf,w
  7067  0FBF  00D2               	movwf	___ftmul@f1
  7068  0FC0  0841               	movf	?_trapmf+1,w
  7069  0FC1  00D3               	movwf	___ftmul@f1+1
  7070  0FC2  0842               	movf	?_trapmf+2,w
  7071  0FC3  00D4               	movwf	___ftmul@f1+2
  7072  0FC4  3000               	movlw	0
  7073  0FC5  00A3               	movwf	___ftadd@f1
  7074  0FC6  3080               	movlw	128
  7075  0FC7  00A4               	movwf	___ftadd@f1+1
  7076  0FC8  303F               	movlw	63
  7077  0FC9  00A5               	movwf	___ftadd@f1+2
  7078  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  7079  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  7080  0FCC  0820               	movf	_Fuzzy$1688^(0+128),w
  7081  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  7082  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  7083  0FCF  00A0               	movwf	___ftneg@f1
  7084  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  7085  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  7086  0FD2  0821               	movf	(_Fuzzy$1688+1)^(0+128),w
  7087  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  7088  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  7089  0FD5  00A1               	movwf	___ftneg@f1+1
  7090  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  7091  0FD7  1303               	bcf	3,6	;RP1=0, select bank1
  7092  0FD8  0822               	movf	(_Fuzzy$1688+2)^(0+128),w
  7093  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  7095  0FDB  00A2               	movwf	___ftneg@f1+2
  7096  0FDC  160A  118A  22F4  120A  158A  	fcall	___ftneg
  7097  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  7098  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  7099  0FE3  0820               	movf	?___ftneg,w
  7100  0FE4  00A6               	movwf	___ftadd@f2
  7101  0FE5  0821               	movf	?___ftneg+1,w
  7102  0FE6  00A7               	movwf	___ftadd@f2+1
  7103  0FE7  0822               	movf	?___ftneg+2,w
  7104  0FE8  00A8               	movwf	___ftadd@f2+2
  7105  0FE9  120A  118A  26E4  120A  158A  	fcall	___ftadd
  7106  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  7107  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  7108  0FF0  0823               	movf	?___ftadd,w
  7109  0FF1  00D5               	movwf	___ftmul@f2
  7110  0FF2  0824               	movf	?___ftadd+1,w
  7111  0FF3  00D6               	movwf	___ftmul@f2+1
  7112  0FF4  0825               	movf	?___ftadd+2,w
  7113  0FF5  00D7               	movwf	___ftmul@f2+2
  7114  0FF6  120A  158A  21CB   	fcall	___ftmul
  7115  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  7116  0FFA  120A  118A  284B   	ljmp	L12
  7117  0FFD                     L14:	
  7118  0FFD                     L13:	
  7119  0FFD  120A  118A  290D   	ljmp	i1l3799
  7120                           
  7121                           	psect	text22_split_2
  7122  004B                     L12:	
  7123  004B  1303               	bcf	3,6	;RP1=0, select bank0
  7124  004C  0852               	movf	?___ftmul,w
  7125  004D  1683               	bsf	3,5	;RP0=1, select bank1
  7126  004E  1303               	bcf	3,6	;RP1=0, select bank1
  7127  004F  00BC               	movwf	Fuzzy@rule^(0+128)
  7128  0050  1283               	bcf	3,5	;RP0=0, select bank0
  7129  0051  1303               	bcf	3,6	;RP1=0, select bank0
  7130  0052  0853               	movf	?___ftmul+1,w
  7131  0053  1683               	bsf	3,5	;RP0=1, select bank1
  7132  0054  1303               	bcf	3,6	;RP1=0, select bank1
  7133  0055  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7134  0056  1283               	bcf	3,5	;RP0=0, select bank0
  7135  0057  1303               	bcf	3,6	;RP1=0, select bank0
  7136  0058  0854               	movf	?___ftmul+2,w
  7137  0059  1683               	bsf	3,5	;RP0=1, select bank1
  7138  005A  1303               	bcf	3,6	;RP1=0, select bank1
  7139  005B  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7140                           
  7141                           ;main.c: 221: x = 0;
  7142  005C  3000               	movlw	0
  7143  005D  00BF               	movwf	Fuzzy@x^(0+128)
  7144  005E  3000               	movlw	0
  7145  005F  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7146  0060  3000               	movlw	0
  7147  0061  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7148                           
  7149                           ;main.c: 222: for (int a = 0; a <= 15; a++) {
  7150  0062  01AC               	clrf	Fuzzy@a_241^(0+128)
  7151  0063  01AD               	clrf	(Fuzzy@a_241+1)^(0+128)
  7152  0064  082D               	movf	(Fuzzy@a_241+1)^(0+128),w
  7153  0065  3A80               	xorlw	128
  7154  0066  00FF               	movwf	127
  7155  0067  3080               	movlw	128
  7156  0068  027F               	subwf	127,w
  7157  0069  1D03               	skipz
  7158  006A  286D               	goto	u499_25
  7159  006B  3010               	movlw	16
  7160  006C  022C               	subwf	Fuzzy@a_241^(0+128),w
  7161  006D                     u499_25:	
  7162  006D  1803               	btfsc	3,0
  7163  006E  290D               	goto	i1l3799
  7164  006F                     i1l3789:	
  7165                           
  7166                           ;main.c: 223: rulepequeno = trapmf(x, 2, 5, 5, 10);
  7167  006F  1683               	bsf	3,5	;RP0=1, select bank1
  7168  0070  1303               	bcf	3,6	;RP1=0, select bank1
  7169  0071  083F               	movf	Fuzzy@x^(0+128),w
  7170  0072  1283               	bcf	3,5	;RP0=0, select bank0
  7171  0073  1303               	bcf	3,6	;RP1=0, select bank0
  7172  0074  00C0               	movwf	trapmf@x
  7173  0075  1683               	bsf	3,5	;RP0=1, select bank1
  7174  0076  1303               	bcf	3,6	;RP1=0, select bank1
  7175  0077  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7176  0078  1283               	bcf	3,5	;RP0=0, select bank0
  7177  0079  1303               	bcf	3,6	;RP1=0, select bank0
  7178  007A  00C1               	movwf	trapmf@x+1
  7179  007B  1683               	bsf	3,5	;RP0=1, select bank1
  7180  007C  1303               	bcf	3,6	;RP1=0, select bank1
  7181  007D  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7182  007E  1283               	bcf	3,5	;RP0=0, select bank0
  7183  007F  1303               	bcf	3,6	;RP1=0, select bank0
  7184  0080  00C2               	movwf	trapmf@x+2
  7185  0081  3000               	movlw	0
  7186  0082  00C3               	movwf	trapmf@a
  7187  0083  3000               	movlw	0
  7188  0084  00C4               	movwf	trapmf@a+1
  7189  0085  3040               	movlw	64
  7190  0086  00C5               	movwf	trapmf@a+2
  7191  0087  3000               	movlw	0
  7192  0088  00C6               	movwf	trapmf@b
  7193  0089  30A0               	movlw	160
  7194  008A  00C7               	movwf	trapmf@b+1
  7195  008B  3040               	movlw	64
  7196  008C  00C8               	movwf	trapmf@b+2
  7197  008D  3000               	movlw	0
  7198  008E  00C9               	movwf	trapmf@c
  7199  008F  30A0               	movlw	160
  7200  0090  00CA               	movwf	trapmf@c+1
  7201  0091  3040               	movlw	64
  7202  0092  00CB               	movwf	trapmf@c+2
  7203  0093  3000               	movlw	0
  7204  0094  00CC               	movwf	trapmf@d
  7205  0095  3020               	movlw	32
  7206  0096  00CD               	movwf	trapmf@d+1
  7207  0097  3041               	movlw	65
  7208  0098  00CE               	movwf	trapmf@d+2
  7209  0099  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7210  009E  1283               	bcf	3,5	;RP0=0, select bank0
  7211  009F  1303               	bcf	3,6	;RP1=0, select bank0
  7212  00A0  0840               	movf	?_trapmf,w
  7213  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  7214  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  7215  00A3  00CB               	movwf	_rulepequeno^(0+128)
  7216  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  7217  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  7218  00A6  0841               	movf	?_trapmf+1,w
  7219  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  7220  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  7221  00A9  00CC               	movwf	(_rulepequeno+1)^(0+128)
  7222  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  7223  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  7224  00AC  0842               	movf	?_trapmf+2,w
  7225  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  7226  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  7227  00AF  00CD               	movwf	(_rulepequeno+2)^(0+128)
  7228                           
  7229                           ;main.c: 224: if (rulepequeno >= rule) {
  7230  00B0  084B               	movf	_rulepequeno^(0+128),w
  7231  00B1  00F0               	movwf	___ftge@ff1
  7232  00B2  084C               	movf	(_rulepequeno+1)^(0+128),w
  7233  00B3  00F1               	movwf	___ftge@ff1+1
  7234  00B4  084D               	movf	(_rulepequeno+2)^(0+128),w
  7235  00B5  00F2               	movwf	___ftge@ff1+2
  7236  00B6  083C               	movf	Fuzzy@rule^(0+128),w
  7237  00B7  00F3               	movwf	___ftge@ff2
  7238  00B8  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7239  00B9  00F4               	movwf	___ftge@ff2+1
  7240  00BA  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7241  00BB  00F5               	movwf	___ftge@ff2+2
  7242  00BC  160A  118A  2593  120A  118A  	fcall	___ftge
  7243  00C1  1C03               	btfss	3,0
  7244  00C2  28CB               	goto	i1l3793
  7245                           
  7246                           ;main.c: 225: rulepequeno = rule;
  7247  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  7248  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  7249  00C5  083C               	movf	Fuzzy@rule^(0+128),w
  7250  00C6  00CB               	movwf	_rulepequeno^(0+128)
  7251  00C7  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7252  00C8  00CC               	movwf	(_rulepequeno+1)^(0+128)
  7253  00C9  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7254  00CA  00CD               	movwf	(_rulepequeno+2)^(0+128)
  7255  00CB                     i1l3793:	
  7256                           
  7257                           ;main.c: 226: }
  7258                           ;main.c: 228: x += 1;
  7259  00CB  3000               	movlw	0
  7260  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  7261  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  7262  00CE  00A3               	movwf	___ftadd@f1
  7263  00CF  3080               	movlw	128
  7264  00D0  00A4               	movwf	___ftadd@f1+1
  7265  00D1  303F               	movlw	63
  7266  00D2  00A5               	movwf	___ftadd@f1+2
  7267  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  7268  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  7269  00D5  083F               	movf	Fuzzy@x^(0+128),w
  7270  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  7271  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  7272  00D8  00A6               	movwf	___ftadd@f2
  7273  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  7274  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  7275  00DB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7276  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  7277  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  7278  00DE  00A7               	movwf	___ftadd@f2+1
  7279  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  7280  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  7281  00E1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7282  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  7283  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  7284  00E4  00A8               	movwf	___ftadd@f2+2
  7285  00E5  120A  118A  26E4  120A  118A  	fcall	___ftadd
  7286  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  7287  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  7288  00EC  0823               	movf	?___ftadd,w
  7289  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  7290  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  7291  00EF  00BF               	movwf	Fuzzy@x^(0+128)
  7292  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  7293  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  7294  00F2  0824               	movf	?___ftadd+1,w
  7295  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  7296  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  7297  00F5  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7298  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  7299  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  7300  00F8  0825               	movf	?___ftadd+2,w
  7301  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  7302  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  7303  00FB  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7304  00FC  3001               	movlw	1
  7305  00FD  07AC               	addwf	Fuzzy@a_241^(0+128),f
  7306  00FE  1803               	skipnc
  7307  00FF  0AAD               	incf	(Fuzzy@a_241+1)^(0+128),f
  7308  0100  3000               	movlw	0
  7309  0101  07AD               	addwf	(Fuzzy@a_241+1)^(0+128),f
  7310  0102  082D               	movf	(Fuzzy@a_241+1)^(0+128),w
  7311  0103  3A80               	xorlw	128
  7312  0104  00FF               	movwf	127
  7313  0105  3080               	movlw	128
  7314  0106  027F               	subwf	127,w
  7315  0107  1D03               	skipz
  7316  0108  290B               	goto	u501_25
  7317  0109  3010               	movlw	16
  7318  010A  022C               	subwf	Fuzzy@a_241^(0+128),w
  7319  010B                     u501_25:	
  7320  010B  1C03               	skipc
  7321  010C  286F               	goto	i1l3789
  7322  010D                     i1l3799:	
  7323                           
  7324                           ;main.c: 229: }
  7325                           ;main.c: 230: }
  7326                           ;main.c: 234: if (deltaV >= 100 && deltaV <= 1001 && delta >= 201)
  7327  010D  3000               	movlw	0
  7328  010E  1283               	bcf	3,5	;RP0=0, select bank0
  7329  010F  1303               	bcf	3,6	;RP1=0, select bank0
  7330  0110  0269               	subwf	_deltaV+1,w
  7331  0111  3064               	movlw	100
  7332  0112  1903               	skipnz
  7333  0113  0268               	subwf	_deltaV,w
  7334  0114  1C03               	skipc
  7335  0115  2A66               	goto	i1l3825
  7336  0116  3003               	movlw	3
  7337  0117  0269               	subwf	_deltaV+1,w
  7338  0118  30EA               	movlw	234
  7339  0119  1903               	skipnz
  7340  011A  0268               	subwf	_deltaV,w
  7341  011B  1803               	skipnc
  7342  011C  2A66               	goto	i1l3825
  7343  011D  1683               	bsf	3,5	;RP0=1, select bank1
  7344  011E  1303               	bcf	3,6	;RP1=0, select bank1
  7345  011F  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7346  0120  3A80               	xorlw	128
  7347  0121  00FF               	movwf	127
  7348  0122  3080               	movlw	128
  7349  0123  027F               	subwf	127,w
  7350  0124  1D03               	skipz
  7351  0125  2928               	goto	u504_25
  7352  0126  30C9               	movlw	201
  7353  0127  0232               	subwf	Fuzzy@delta^(0+128),w
  7354  0128                     u504_25:	
  7355  0128  1C03               	skipc
  7356  0129  2A66               	goto	i1l3825
  7357                           
  7358                           ;main.c: 235: {
  7359                           ;main.c: 237: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7360                           ;main.c: 238: trapmf(delta, 200, 500, 2000, 2001);
  7361  012A  3020               	movlw	32
  7362  012B  1283               	bcf	3,5	;RP0=0, select bank0
  7363  012C  1303               	bcf	3,6	;RP1=0, select bank0
  7364  012D  00CC               	movwf	trapmf@d
  7365  012E  30FA               	movlw	250
  7366  012F  00CD               	movwf	trapmf@d+1
  7367  0130  3044               	movlw	68
  7368  0131  00CE               	movwf	trapmf@d+2
  7369  0132  3000               	movlw	0
  7370  0133  00C9               	movwf	trapmf@c
  7371  0134  30FA               	movlw	250
  7372  0135  00CA               	movwf	trapmf@c+1
  7373  0136  3044               	movlw	68
  7374  0137  00CB               	movwf	trapmf@c+2
  7375  0138  3000               	movlw	0
  7376  0139  00C6               	movwf	trapmf@b
  7377  013A  30FA               	movlw	250
  7378  013B  00C7               	movwf	trapmf@b+1
  7379  013C  3043               	movlw	67
  7380  013D  00C8               	movwf	trapmf@b+2
  7381  013E  3000               	movlw	0
  7382  013F  00C3               	movwf	trapmf@a
  7383  0140  3048               	movlw	72
  7384  0141  00C4               	movwf	trapmf@a+1
  7385  0142  3043               	movlw	67
  7386  0143  00C5               	movwf	trapmf@a+2
  7387  0144  1683               	bsf	3,5	;RP0=1, select bank1
  7388  0145  1303               	bcf	3,6	;RP1=0, select bank1
  7389  0146  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7390  0147  01F9               	clrf	___awtoft@c+1
  7391  0148  07F9               	addwf	___awtoft@c+1,f
  7392  0149  0832               	movf	Fuzzy@delta^(0+128),w
  7393  014A  01F8               	clrf	___awtoft@c
  7394  014B  07F8               	addwf	___awtoft@c,f
  7395  014C  160A  118A  2404  120A  118A  	fcall	___awtoft
  7396  0151  0878               	movf	?___awtoft,w
  7397  0152  1283               	bcf	3,5	;RP0=0, select bank0
  7398  0153  1303               	bcf	3,6	;RP1=0, select bank0
  7399  0154  00C0               	movwf	trapmf@x
  7400  0155  0879               	movf	?___awtoft+1,w
  7401  0156  00C1               	movwf	trapmf@x+1
  7402  0157  087A               	movf	?___awtoft+2,w
  7403  0158  00C2               	movwf	trapmf@x+2
  7404  0159  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7405  015E  1283               	bcf	3,5	;RP0=0, select bank0
  7406  015F  1303               	bcf	3,6	;RP1=0, select bank0
  7407  0160  0840               	movf	?_trapmf,w
  7408  0161  00D2               	movwf	___ftmul@f1
  7409  0162  0841               	movf	?_trapmf+1,w
  7410  0163  00D3               	movwf	___ftmul@f1+1
  7411  0164  0842               	movf	?_trapmf+2,w
  7412  0165  00D4               	movwf	___ftmul@f1+2
  7413  0166  30C0               	movlw	192
  7414  0167  00CC               	movwf	trapmf@d
  7415  0168  30C1               	movlw	193
  7416  0169  00CD               	movwf	trapmf@d+1
  7417  016A  3044               	movlw	68
  7418  016B  00CE               	movwf	trapmf@d+2
  7419  016C  3000               	movlw	0
  7420  016D  00C9               	movwf	trapmf@c
  7421  016E  3048               	movlw	72
  7422  016F  00CA               	movwf	trapmf@c+1
  7423  0170  3044               	movlw	68
  7424  0171  00CB               	movwf	trapmf@c+2
  7425  0172  3000               	movlw	0
  7426  0173  00C6               	movwf	trapmf@b
  7427  0174  3048               	movlw	72
  7428  0175  00C7               	movwf	trapmf@b+1
  7429  0176  3044               	movlw	68
  7430  0177  00C8               	movwf	trapmf@b+2
  7431  0178  3000               	movlw	0
  7432  0179  00C3               	movwf	trapmf@a
  7433  017A  3048               	movlw	72
  7434  017B  00C4               	movwf	trapmf@a+1
  7435  017C  3042               	movlw	66
  7436  017D  00C5               	movwf	trapmf@a+2
  7437  017E  0869               	movf	_deltaV+1,w
  7438  017F  01F9               	clrf	___lwtoft@c+1
  7439  0180  07F9               	addwf	___lwtoft@c+1,f
  7440  0181  0868               	movf	_deltaV,w
  7441  0182  01F8               	clrf	___lwtoft@c
  7442  0183  07F8               	addwf	___lwtoft@c,f
  7443  0184  160A  118A  2317  120A  118A  	fcall	___lwtoft
  7444  0189  0878               	movf	?___lwtoft,w
  7445  018A  1283               	bcf	3,5	;RP0=0, select bank0
  7446  018B  1303               	bcf	3,6	;RP1=0, select bank0
  7447  018C  00C0               	movwf	trapmf@x
  7448  018D  0879               	movf	?___lwtoft+1,w
  7449  018E  00C1               	movwf	trapmf@x+1
  7450  018F  087A               	movf	?___lwtoft+2,w
  7451  0190  00C2               	movwf	trapmf@x+2
  7452  0191  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7453  0196  1283               	bcf	3,5	;RP0=0, select bank0
  7454  0197  1303               	bcf	3,6	;RP1=0, select bank0
  7455  0198  0840               	movf	?_trapmf,w
  7456  0199  00D5               	movwf	___ftmul@f2
  7457  019A  0841               	movf	?_trapmf+1,w
  7458  019B  00D6               	movwf	___ftmul@f2+1
  7459  019C  0842               	movf	?_trapmf+2,w
  7460  019D  00D7               	movwf	___ftmul@f2+2
  7461  019E  120A  158A  21CB  120A  118A  	fcall	___ftmul
  7462  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7463  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  7464  01A5  0852               	movf	?___ftmul,w
  7465  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  7466  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  7467  01A8  00BC               	movwf	Fuzzy@rule^(0+128)
  7468  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7469  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7470  01AB  0853               	movf	?___ftmul+1,w
  7471  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  7472  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  7473  01AE  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7474  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  7475  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  7476  01B1  0854               	movf	?___ftmul+2,w
  7477  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  7478  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  7479  01B4  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7480                           
  7481                           ;main.c: 240: x = 0;
  7482  01B5  3000               	movlw	0
  7483  01B6  00BF               	movwf	Fuzzy@x^(0+128)
  7484  01B7  3000               	movlw	0
  7485  01B8  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7486  01B9  3000               	movlw	0
  7487  01BA  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7488                           
  7489                           ;main.c: 241: for (int a = 0; a <= 15; a++) {
  7490  01BB  01AE               	clrf	Fuzzy@a_242^(0+128)
  7491  01BC  01AF               	clrf	(Fuzzy@a_242+1)^(0+128)
  7492  01BD  082F               	movf	(Fuzzy@a_242+1)^(0+128),w
  7493  01BE  3A80               	xorlw	128
  7494  01BF  00FF               	movwf	127
  7495  01C0  3080               	movlw	128
  7496  01C1  027F               	subwf	127,w
  7497  01C2  1D03               	skipz
  7498  01C3  29C6               	goto	u505_25
  7499  01C4  3010               	movlw	16
  7500  01C5  022E               	subwf	Fuzzy@a_242^(0+128),w
  7501  01C6                     u505_25:	
  7502  01C6  1803               	btfsc	3,0
  7503  01C7  2A66               	goto	i1l3825
  7504  01C8                     i1l3815:	
  7505                           
  7506                           ;main.c: 242: rulemedio = trapmf(x, 2, 5, 5, 10);
  7507  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  7508  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  7509  01CA  083F               	movf	Fuzzy@x^(0+128),w
  7510  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  7511  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  7512  01CD  00C0               	movwf	trapmf@x
  7513  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  7514  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  7515  01D0  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7516  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  7517  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  7518  01D3  00C1               	movwf	trapmf@x+1
  7519  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  7520  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  7521  01D6  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7522  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  7523  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  7524  01D9  00C2               	movwf	trapmf@x+2
  7525  01DA  3000               	movlw	0
  7526  01DB  00C3               	movwf	trapmf@a
  7527  01DC  3000               	movlw	0
  7528  01DD  00C4               	movwf	trapmf@a+1
  7529  01DE  3040               	movlw	64
  7530  01DF  00C5               	movwf	trapmf@a+2
  7531  01E0  3000               	movlw	0
  7532  01E1  00C6               	movwf	trapmf@b
  7533  01E2  30A0               	movlw	160
  7534  01E3  00C7               	movwf	trapmf@b+1
  7535  01E4  3040               	movlw	64
  7536  01E5  00C8               	movwf	trapmf@b+2
  7537  01E6  3000               	movlw	0
  7538  01E7  00C9               	movwf	trapmf@c
  7539  01E8  30A0               	movlw	160
  7540  01E9  00CA               	movwf	trapmf@c+1
  7541  01EA  3040               	movlw	64
  7542  01EB  00CB               	movwf	trapmf@c+2
  7543  01EC  3000               	movlw	0
  7544  01ED  00CC               	movwf	trapmf@d
  7545  01EE  3020               	movlw	32
  7546  01EF  00CD               	movwf	trapmf@d+1
  7547  01F0  3041               	movlw	65
  7548  01F1  00CE               	movwf	trapmf@d+2
  7549  01F2  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7550  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  7551  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  7552  01F9  0840               	movf	?_trapmf,w
  7553  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  7554  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  7555  01FC  00C8               	movwf	_rulemedio^(0+128)
  7556  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  7557  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  7558  01FF  0841               	movf	?_trapmf+1,w
  7559  0200  1683               	bsf	3,5	;RP0=1, select bank1
  7560  0201  1303               	bcf	3,6	;RP1=0, select bank1
  7561  0202  00C9               	movwf	(_rulemedio+1)^(0+128)
  7562  0203  1283               	bcf	3,5	;RP0=0, select bank0
  7563  0204  1303               	bcf	3,6	;RP1=0, select bank0
  7564  0205  0842               	movf	?_trapmf+2,w
  7565  0206  1683               	bsf	3,5	;RP0=1, select bank1
  7566  0207  1303               	bcf	3,6	;RP1=0, select bank1
  7567  0208  00CA               	movwf	(_rulemedio+2)^(0+128)
  7568                           
  7569                           ;main.c: 244: if (rulemedio >= rule) {
  7570  0209  0848               	movf	_rulemedio^(0+128),w
  7571  020A  00F0               	movwf	___ftge@ff1
  7572  020B  0849               	movf	(_rulemedio+1)^(0+128),w
  7573  020C  00F1               	movwf	___ftge@ff1+1
  7574  020D  084A               	movf	(_rulemedio+2)^(0+128),w
  7575  020E  00F2               	movwf	___ftge@ff1+2
  7576  020F  083C               	movf	Fuzzy@rule^(0+128),w
  7577  0210  00F3               	movwf	___ftge@ff2
  7578  0211  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7579  0212  00F4               	movwf	___ftge@ff2+1
  7580  0213  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7581  0214  00F5               	movwf	___ftge@ff2+2
  7582  0215  160A  118A  2593  120A  118A  	fcall	___ftge
  7583  021A  1C03               	btfss	3,0
  7584  021B  2A24               	goto	i1l3819
  7585                           
  7586                           ;main.c: 245: rulemedio = rule;
  7587  021C  1683               	bsf	3,5	;RP0=1, select bank1
  7588  021D  1303               	bcf	3,6	;RP1=0, select bank1
  7589  021E  083C               	movf	Fuzzy@rule^(0+128),w
  7590  021F  00C8               	movwf	_rulemedio^(0+128)
  7591  0220  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7592  0221  00C9               	movwf	(_rulemedio+1)^(0+128)
  7593  0222  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7594  0223  00CA               	movwf	(_rulemedio+2)^(0+128)
  7595  0224                     i1l3819:	
  7596                           
  7597                           ;main.c: 246: }
  7598                           ;main.c: 248: x += 1;
  7599  0224  3000               	movlw	0
  7600  0225  1283               	bcf	3,5	;RP0=0, select bank0
  7601  0226  1303               	bcf	3,6	;RP1=0, select bank0
  7602  0227  00A3               	movwf	___ftadd@f1
  7603  0228  3080               	movlw	128
  7604  0229  00A4               	movwf	___ftadd@f1+1
  7605  022A  303F               	movlw	63
  7606  022B  00A5               	movwf	___ftadd@f1+2
  7607  022C  1683               	bsf	3,5	;RP0=1, select bank1
  7608  022D  1303               	bcf	3,6	;RP1=0, select bank1
  7609  022E  083F               	movf	Fuzzy@x^(0+128),w
  7610  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7611  0230  1303               	bcf	3,6	;RP1=0, select bank0
  7612  0231  00A6               	movwf	___ftadd@f2
  7613  0232  1683               	bsf	3,5	;RP0=1, select bank1
  7614  0233  1303               	bcf	3,6	;RP1=0, select bank1
  7615  0234  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7616  0235  1283               	bcf	3,5	;RP0=0, select bank0
  7617  0236  1303               	bcf	3,6	;RP1=0, select bank0
  7618  0237  00A7               	movwf	___ftadd@f2+1
  7619  0238  1683               	bsf	3,5	;RP0=1, select bank1
  7620  0239  1303               	bcf	3,6	;RP1=0, select bank1
  7621  023A  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7622  023B  1283               	bcf	3,5	;RP0=0, select bank0
  7623  023C  1303               	bcf	3,6	;RP1=0, select bank0
  7624  023D  00A8               	movwf	___ftadd@f2+2
  7625  023E  120A  118A  26E4  120A  118A  	fcall	___ftadd
  7626  0243  1283               	bcf	3,5	;RP0=0, select bank0
  7627  0244  1303               	bcf	3,6	;RP1=0, select bank0
  7628  0245  0823               	movf	?___ftadd,w
  7629  0246  1683               	bsf	3,5	;RP0=1, select bank1
  7630  0247  1303               	bcf	3,6	;RP1=0, select bank1
  7631  0248  00BF               	movwf	Fuzzy@x^(0+128)
  7632  0249  1283               	bcf	3,5	;RP0=0, select bank0
  7633  024A  1303               	bcf	3,6	;RP1=0, select bank0
  7634  024B  0824               	movf	?___ftadd+1,w
  7635  024C  1683               	bsf	3,5	;RP0=1, select bank1
  7636  024D  1303               	bcf	3,6	;RP1=0, select bank1
  7637  024E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7638  024F  1283               	bcf	3,5	;RP0=0, select bank0
  7639  0250  1303               	bcf	3,6	;RP1=0, select bank0
  7640  0251  0825               	movf	?___ftadd+2,w
  7641  0252  1683               	bsf	3,5	;RP0=1, select bank1
  7642  0253  1303               	bcf	3,6	;RP1=0, select bank1
  7643  0254  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7644  0255  3001               	movlw	1
  7645  0256  07AE               	addwf	Fuzzy@a_242^(0+128),f
  7646  0257  1803               	skipnc
  7647  0258  0AAF               	incf	(Fuzzy@a_242+1)^(0+128),f
  7648  0259  3000               	movlw	0
  7649  025A  07AF               	addwf	(Fuzzy@a_242+1)^(0+128),f
  7650  025B  082F               	movf	(Fuzzy@a_242+1)^(0+128),w
  7651  025C  3A80               	xorlw	128
  7652  025D  00FF               	movwf	127
  7653  025E  3080               	movlw	128
  7654  025F  027F               	subwf	127,w
  7655  0260  1D03               	skipz
  7656  0261  2A64               	goto	u507_25
  7657  0262  3010               	movlw	16
  7658  0263  022E               	subwf	Fuzzy@a_242^(0+128),w
  7659  0264                     u507_25:	
  7660  0264  1C03               	skipc
  7661  0265  29C8               	goto	i1l3815
  7662  0266                     i1l3825:	
  7663                           
  7664                           ;main.c: 249: }
  7665                           ;main.c: 250: }
  7666                           ;main.c: 253: if (deltaV >= 1001)
  7667  0266  3003               	movlw	3
  7668  0267  1283               	bcf	3,5	;RP0=0, select bank0
  7669  0268  1303               	bcf	3,6	;RP1=0, select bank0
  7670  0269  0269               	subwf	_deltaV+1,w
  7671  026A  30E9               	movlw	233
  7672  026B  1903               	skipnz
  7673  026C  0268               	subwf	_deltaV,w
  7674  026D  1C03               	skipc
  7675  026E  2B62               	goto	i1l3847
  7676                           
  7677                           ;main.c: 254: {
  7678                           ;main.c: 256: rule = trapmf(deltaV, 1001, 1500, 2000, 2001);
  7679  026F  0869               	movf	_deltaV+1,w
  7680  0270  01F9               	clrf	___lwtoft@c+1
  7681  0271  07F9               	addwf	___lwtoft@c+1,f
  7682  0272  0868               	movf	_deltaV,w
  7683  0273  01F8               	clrf	___lwtoft@c
  7684  0274  07F8               	addwf	___lwtoft@c,f
  7685  0275  160A  118A  2317  120A  118A  	fcall	___lwtoft
  7686  027A  0878               	movf	?___lwtoft,w
  7687  027B  1283               	bcf	3,5	;RP0=0, select bank0
  7688  027C  1303               	bcf	3,6	;RP1=0, select bank0
  7689  027D  00C0               	movwf	trapmf@x
  7690  027E  0879               	movf	?___lwtoft+1,w
  7691  027F  00C1               	movwf	trapmf@x+1
  7692  0280  087A               	movf	?___lwtoft+2,w
  7693  0281  00C2               	movwf	trapmf@x+2
  7694  0282  3040               	movlw	64
  7695  0283  00C3               	movwf	trapmf@a
  7696  0284  307A               	movlw	122
  7697  0285  00C4               	movwf	trapmf@a+1
  7698  0286  3044               	movlw	68
  7699  0287  00C5               	movwf	trapmf@a+2
  7700  0288  3080               	movlw	128
  7701  0289  00C6               	movwf	trapmf@b
  7702  028A  30BB               	movlw	187
  7703  028B  00C7               	movwf	trapmf@b+1
  7704  028C  3044               	movlw	68
  7705  028D  00C8               	movwf	trapmf@b+2
  7706  028E  3000               	movlw	0
  7707  028F  00C9               	movwf	trapmf@c
  7708  0290  30FA               	movlw	250
  7709  0291  00CA               	movwf	trapmf@c+1
  7710  0292  3044               	movlw	68
  7711  0293  00CB               	movwf	trapmf@c+2
  7712  0294  3020               	movlw	32
  7713  0295  00CC               	movwf	trapmf@d
  7714  0296  30FA               	movlw	250
  7715  0297  00CD               	movwf	trapmf@d+1
  7716  0298  3044               	movlw	68
  7717  0299  00CE               	movwf	trapmf@d+2
  7718  029A  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7719  029F  1283               	bcf	3,5	;RP0=0, select bank0
  7720  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  7721  02A1  0840               	movf	?_trapmf,w
  7722  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  7723  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  7724  02A4  00BC               	movwf	Fuzzy@rule^(0+128)
  7725  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  7726  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  7727  02A7  0841               	movf	?_trapmf+1,w
  7728  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  7729  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  7730  02AA  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7731  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  7732  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  7733  02AD  0842               	movf	?_trapmf+2,w
  7734  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  7735  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  7736  02B0  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7737                           
  7738                           ;main.c: 258: x = 0;
  7739  02B1  3000               	movlw	0
  7740  02B2  00BF               	movwf	Fuzzy@x^(0+128)
  7741  02B3  3000               	movlw	0
  7742  02B4  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7743  02B5  3000               	movlw	0
  7744  02B6  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7745                           
  7746                           ;main.c: 259: for (int a = 0; a <= 15; a++) {
  7747  02B7  01B0               	clrf	Fuzzy@a_243^(0+128)
  7748  02B8  01B1               	clrf	(Fuzzy@a_243+1)^(0+128)
  7749  02B9  0831               	movf	(Fuzzy@a_243+1)^(0+128),w
  7750  02BA  3A80               	xorlw	128
  7751  02BB  00FF               	movwf	127
  7752  02BC  3080               	movlw	128
  7753  02BD  027F               	subwf	127,w
  7754  02BE  1D03               	skipz
  7755  02BF  2AC2               	goto	u509_25
  7756  02C0  3010               	movlw	16
  7757  02C1  0230               	subwf	Fuzzy@a_243^(0+128),w
  7758  02C2                     u509_25:	
  7759  02C2  1803               	btfsc	3,0
  7760  02C3  2B62               	goto	i1l3847
  7761  02C4                     i1l3837:	
  7762                           
  7763                           ;main.c: 260: rulegrande = trapmf(x, 5, 10, 15, 16);
  7764  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  7765  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  7766  02C6  083F               	movf	Fuzzy@x^(0+128),w
  7767  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  7768  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  7769  02C9  00C0               	movwf	trapmf@x
  7770  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  7771  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  7772  02CC  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7773  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  7774  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  7775  02CF  00C1               	movwf	trapmf@x+1
  7776  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  7777  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  7778  02D2  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7779  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  7780  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  7781  02D5  00C2               	movwf	trapmf@x+2
  7782  02D6  3000               	movlw	0
  7783  02D7  00C3               	movwf	trapmf@a
  7784  02D8  30A0               	movlw	160
  7785  02D9  00C4               	movwf	trapmf@a+1
  7786  02DA  3040               	movlw	64
  7787  02DB  00C5               	movwf	trapmf@a+2
  7788  02DC  3000               	movlw	0
  7789  02DD  00C6               	movwf	trapmf@b
  7790  02DE  3020               	movlw	32
  7791  02DF  00C7               	movwf	trapmf@b+1
  7792  02E0  3041               	movlw	65
  7793  02E1  00C8               	movwf	trapmf@b+2
  7794  02E2  3000               	movlw	0
  7795  02E3  00C9               	movwf	trapmf@c
  7796  02E4  3070               	movlw	112
  7797  02E5  00CA               	movwf	trapmf@c+1
  7798  02E6  3041               	movlw	65
  7799  02E7  00CB               	movwf	trapmf@c+2
  7800  02E8  3000               	movlw	0
  7801  02E9  00CC               	movwf	trapmf@d
  7802  02EA  3080               	movlw	128
  7803  02EB  00CD               	movwf	trapmf@d+1
  7804  02EC  3041               	movlw	65
  7805  02ED  00CE               	movwf	trapmf@d+2
  7806  02EE  120A  158A  24A2  120A  118A  	fcall	_trapmf
  7807  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  7808  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  7809  02F5  0840               	movf	?_trapmf,w
  7810  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  7811  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  7812  02F8  00C5               	movwf	_rulegrande^(0+128)
  7813  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  7814  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  7815  02FB  0841               	movf	?_trapmf+1,w
  7816  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  7817  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  7818  02FE  00C6               	movwf	(_rulegrande+1)^(0+128)
  7819  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  7820  0300  1303               	bcf	3,6	;RP1=0, select bank0
  7821  0301  0842               	movf	?_trapmf+2,w
  7822  0302  1683               	bsf	3,5	;RP0=1, select bank1
  7823  0303  1303               	bcf	3,6	;RP1=0, select bank1
  7824  0304  00C7               	movwf	(_rulegrande+2)^(0+128)
  7825                           
  7826                           ;main.c: 262: if (rulegrande >= rule) {
  7827  0305  0845               	movf	_rulegrande^(0+128),w
  7828  0306  00F0               	movwf	___ftge@ff1
  7829  0307  0846               	movf	(_rulegrande+1)^(0+128),w
  7830  0308  00F1               	movwf	___ftge@ff1+1
  7831  0309  0847               	movf	(_rulegrande+2)^(0+128),w
  7832  030A  00F2               	movwf	___ftge@ff1+2
  7833  030B  083C               	movf	Fuzzy@rule^(0+128),w
  7834  030C  00F3               	movwf	___ftge@ff2
  7835  030D  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7836  030E  00F4               	movwf	___ftge@ff2+1
  7837  030F  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7838  0310  00F5               	movwf	___ftge@ff2+2
  7839  0311  160A  118A  2593  120A  118A  	fcall	___ftge
  7840  0316  1C03               	btfss	3,0
  7841  0317  2B20               	goto	i1l3841
  7842                           
  7843                           ;main.c: 263: rulegrande = rule;
  7844  0318  1683               	bsf	3,5	;RP0=1, select bank1
  7845  0319  1303               	bcf	3,6	;RP1=0, select bank1
  7846  031A  083C               	movf	Fuzzy@rule^(0+128),w
  7847  031B  00C5               	movwf	_rulegrande^(0+128)
  7848  031C  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7849  031D  00C6               	movwf	(_rulegrande+1)^(0+128)
  7850  031E  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7851  031F  00C7               	movwf	(_rulegrande+2)^(0+128)
  7852  0320                     i1l3841:	
  7853                           
  7854                           ;main.c: 264: }
  7855                           ;main.c: 266: x += 1;
  7856  0320  3000               	movlw	0
  7857  0321  1283               	bcf	3,5	;RP0=0, select bank0
  7858  0322  1303               	bcf	3,6	;RP1=0, select bank0
  7859  0323  00A3               	movwf	___ftadd@f1
  7860  0324  3080               	movlw	128
  7861  0325  00A4               	movwf	___ftadd@f1+1
  7862  0326  303F               	movlw	63
  7863  0327  00A5               	movwf	___ftadd@f1+2
  7864  0328  1683               	bsf	3,5	;RP0=1, select bank1
  7865  0329  1303               	bcf	3,6	;RP1=0, select bank1
  7866  032A  083F               	movf	Fuzzy@x^(0+128),w
  7867  032B  1283               	bcf	3,5	;RP0=0, select bank0
  7868  032C  1303               	bcf	3,6	;RP1=0, select bank0
  7869  032D  00A6               	movwf	___ftadd@f2
  7870  032E  1683               	bsf	3,5	;RP0=1, select bank1
  7871  032F  1303               	bcf	3,6	;RP1=0, select bank1
  7872  0330  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7873  0331  1283               	bcf	3,5	;RP0=0, select bank0
  7874  0332  1303               	bcf	3,6	;RP1=0, select bank0
  7875  0333  00A7               	movwf	___ftadd@f2+1
  7876  0334  1683               	bsf	3,5	;RP0=1, select bank1
  7877  0335  1303               	bcf	3,6	;RP1=0, select bank1
  7878  0336  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7879  0337  1283               	bcf	3,5	;RP0=0, select bank0
  7880  0338  1303               	bcf	3,6	;RP1=0, select bank0
  7881  0339  00A8               	movwf	___ftadd@f2+2
  7882  033A  120A  118A  26E4  120A  118A  	fcall	___ftadd
  7883  033F  1283               	bcf	3,5	;RP0=0, select bank0
  7884  0340  1303               	bcf	3,6	;RP1=0, select bank0
  7885  0341  0823               	movf	?___ftadd,w
  7886  0342  1683               	bsf	3,5	;RP0=1, select bank1
  7887  0343  1303               	bcf	3,6	;RP1=0, select bank1
  7888  0344  00BF               	movwf	Fuzzy@x^(0+128)
  7889  0345  1283               	bcf	3,5	;RP0=0, select bank0
  7890  0346  1303               	bcf	3,6	;RP1=0, select bank0
  7891  0347  0824               	movf	?___ftadd+1,w
  7892  0348  1683               	bsf	3,5	;RP0=1, select bank1
  7893  0349  1303               	bcf	3,6	;RP1=0, select bank1
  7894  034A  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7895  034B  1283               	bcf	3,5	;RP0=0, select bank0
  7896  034C  1303               	bcf	3,6	;RP1=0, select bank0
  7897  034D  0825               	movf	?___ftadd+2,w
  7898  034E  1683               	bsf	3,5	;RP0=1, select bank1
  7899  034F  1303               	bcf	3,6	;RP1=0, select bank1
  7900  0350  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7901  0351  3001               	movlw	1
  7902  0352  07B0               	addwf	Fuzzy@a_243^(0+128),f
  7903  0353  1803               	skipnc
  7904  0354  0AB1               	incf	(Fuzzy@a_243+1)^(0+128),f
  7905  0355  3000               	movlw	0
  7906  0356  07B1               	addwf	(Fuzzy@a_243+1)^(0+128),f
  7907  0357  0831               	movf	(Fuzzy@a_243+1)^(0+128),w
  7908  0358  3A80               	xorlw	128
  7909  0359  00FF               	movwf	127
  7910  035A  3080               	movlw	128
  7911  035B  027F               	subwf	127,w
  7912  035C  1D03               	skipz
  7913  035D  2B60               	goto	u511_25
  7914  035E  3010               	movlw	16
  7915  035F  0230               	subwf	Fuzzy@a_243^(0+128),w
  7916  0360                     u511_25:	
  7917  0360  1C03               	skipc
  7918  0361  2AC4               	goto	i1l3837
  7919  0362                     i1l3847:	
  7920                           
  7921                           ;main.c: 267: }
  7922                           ;main.c: 268: }
  7923                           ;main.c: 272: x = 0;
  7924  0362  3000               	movlw	0
  7925  0363  1683               	bsf	3,5	;RP0=1, select bank1
  7926  0364  1303               	bcf	3,6	;RP1=0, select bank1
  7927  0365  00BF               	movwf	Fuzzy@x^(0+128)
  7928  0366  3000               	movlw	0
  7929  0367  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7930  0368  3000               	movlw	0
  7931  0369  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7932                           
  7933                           ;main.c: 273: float total_area = 0;
  7934  036A  3000               	movlw	0
  7935  036B  00B7               	movwf	Fuzzy@total_area^(0+128)
  7936  036C  3000               	movlw	0
  7937  036D  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  7938  036E  3000               	movlw	0
  7939  036F  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  7940                           
  7941                           ;main.c: 274: float soma = 0;
  7942  0370  3000               	movlw	0
  7943  0371  00B4               	movwf	Fuzzy@soma^(0+128)
  7944  0372  3000               	movlw	0
  7945  0373  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  7946  0374  3000               	movlw	0
  7947  0375  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  7948                           
  7949                           ;main.c: 275: for (int a = 0; a <= 15; a++)
  7950  0376  01BA               	clrf	Fuzzy@a_246^(0+128)
  7951  0377  01BB               	clrf	(Fuzzy@a_246+1)^(0+128)
  7952  0378  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  7953  0379  3A80               	xorlw	128
  7954  037A  00FF               	movwf	127
  7955  037B  3080               	movlw	128
  7956  037C  027F               	subwf	127,w
  7957  037D  1D03               	skipz
  7958  037E  2B81               	goto	u512_25
  7959  037F  3010               	movlw	16
  7960  0380  023A               	subwf	Fuzzy@a_246^(0+128),w
  7961  0381                     u512_25:	
  7962  0381  1803               	btfsc	3,0
  7963  0382  2DC1               	goto	i1l3875
  7964  0383                     i1l172:	
  7965                           
  7966                           ;main.c: 276: {
  7967                           ;main.c: 277: if (a >= 0 && a <= 5) {
  7968  0383  1683               	bsf	3,5	;RP0=1, select bank1
  7969  0384  1303               	bcf	3,6	;RP1=0, select bank1
  7970  0385  1BBB               	btfsc	(Fuzzy@a_246+1)^(0+128),7
  7971  0386  2C25               	goto	i1l3859
  7972  0387  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  7973  0388  3A80               	xorlw	128
  7974  0389  00FF               	movwf	127
  7975  038A  3080               	movlw	128
  7976  038B  027F               	subwf	127,w
  7977  038C  1D03               	skipz
  7978  038D  2B90               	goto	u514_25
  7979  038E  3006               	movlw	6
  7980  038F  023A               	subwf	Fuzzy@a_246^(0+128),w
  7981  0390                     u514_25:	
  7982  0390  1803               	skipnc
  7983  0391  2C25               	goto	i1l3859
  7984                           
  7985                           ;main.c: 278: total_area += rulepequeno;
  7986  0392  1683               	bsf	3,5	;RP0=1, select bank1
  7987  0393  1303               	bcf	3,6	;RP1=0, select bank1
  7988  0394  084B               	movf	_rulepequeno^(0+128),w
  7989  0395  1283               	bcf	3,5	;RP0=0, select bank0
  7990  0396  1303               	bcf	3,6	;RP1=0, select bank0
  7991  0397  00A3               	movwf	___ftadd@f1
  7992  0398  1683               	bsf	3,5	;RP0=1, select bank1
  7993  0399  1303               	bcf	3,6	;RP1=0, select bank1
  7994  039A  084C               	movf	(_rulepequeno+1)^(0+128),w
  7995  039B  1283               	bcf	3,5	;RP0=0, select bank0
  7996  039C  1303               	bcf	3,6	;RP1=0, select bank0
  7997  039D  00A4               	movwf	___ftadd@f1+1
  7998  039E  1683               	bsf	3,5	;RP0=1, select bank1
  7999  039F  1303               	bcf	3,6	;RP1=0, select bank1
  8000  03A0  084D               	movf	(_rulepequeno+2)^(0+128),w
  8001  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  8002  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  8003  03A3  00A5               	movwf	___ftadd@f1+2
  8004  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  8005  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  8006  03A6  0837               	movf	Fuzzy@total_area^(0+128),w
  8007  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8008  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8009  03A9  00A6               	movwf	___ftadd@f2
  8010  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  8011  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  8012  03AC  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8013  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  8014  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  8015  03AF  00A7               	movwf	___ftadd@f2+1
  8016  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  8017  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  8018  03B2  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8019  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  8020  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  8021  03B5  00A8               	movwf	___ftadd@f2+2
  8022  03B6  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8023  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  8024  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  8025  03BD  0823               	movf	?___ftadd,w
  8026  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  8027  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  8028  03C0  00B7               	movwf	Fuzzy@total_area^(0+128)
  8029  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  8030  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  8031  03C3  0824               	movf	?___ftadd+1,w
  8032  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  8033  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  8034  03C6  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8035  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  8036  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  8037  03C9  0825               	movf	?___ftadd+2,w
  8038  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  8039  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  8040  03CC  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8041                           
  8042                           ;main.c: 279: soma += (x * rulepequeno);
  8043  03CD  083F               	movf	Fuzzy@x^(0+128),w
  8044  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  8045  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  8046  03D0  00D5               	movwf	___ftmul@f2
  8047  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  8048  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  8049  03D3  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8050  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  8051  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  8052  03D6  00D6               	movwf	___ftmul@f2+1
  8053  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  8054  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  8055  03D9  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8056  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  8057  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  8058  03DC  00D7               	movwf	___ftmul@f2+2
  8059  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  8060  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  8061  03DF  084B               	movf	_rulepequeno^(0+128),w
  8062  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  8063  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  8064  03E2  00D2               	movwf	___ftmul@f1
  8065  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  8066  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  8067  03E5  084C               	movf	(_rulepequeno+1)^(0+128),w
  8068  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  8069  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  8070  03E8  00D3               	movwf	___ftmul@f1+1
  8071  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  8072  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  8073  03EB  084D               	movf	(_rulepequeno+2)^(0+128),w
  8074  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  8075  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  8076  03EE  00D4               	movwf	___ftmul@f1+2
  8077  03EF  120A  158A  21CB  120A  118A  	fcall	___ftmul
  8078  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  8079  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  8080  03F6  0852               	movf	?___ftmul,w
  8081  03F7  00A3               	movwf	___ftadd@f1
  8082  03F8  0853               	movf	?___ftmul+1,w
  8083  03F9  00A4               	movwf	___ftadd@f1+1
  8084  03FA  0854               	movf	?___ftmul+2,w
  8085  03FB  00A5               	movwf	___ftadd@f1+2
  8086  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  8087  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  8088  03FE  0834               	movf	Fuzzy@soma^(0+128),w
  8089  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  8090  0400  1303               	bcf	3,6	;RP1=0, select bank0
  8091  0401  00A6               	movwf	___ftadd@f2
  8092  0402  1683               	bsf	3,5	;RP0=1, select bank1
  8093  0403  1303               	bcf	3,6	;RP1=0, select bank1
  8094  0404  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8095  0405  1283               	bcf	3,5	;RP0=0, select bank0
  8096  0406  1303               	bcf	3,6	;RP1=0, select bank0
  8097  0407  00A7               	movwf	___ftadd@f2+1
  8098  0408  1683               	bsf	3,5	;RP0=1, select bank1
  8099  0409  1303               	bcf	3,6	;RP1=0, select bank1
  8100  040A  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8101  040B  1283               	bcf	3,5	;RP0=0, select bank0
  8102  040C  1303               	bcf	3,6	;RP1=0, select bank0
  8103  040D  00A8               	movwf	___ftadd@f2+2
  8104  040E  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8105  0413  1283               	bcf	3,5	;RP0=0, select bank0
  8106  0414  1303               	bcf	3,6	;RP1=0, select bank0
  8107  0415  0823               	movf	?___ftadd,w
  8108  0416  1683               	bsf	3,5	;RP0=1, select bank1
  8109  0417  1303               	bcf	3,6	;RP1=0, select bank1
  8110  0418  00B4               	movwf	Fuzzy@soma^(0+128)
  8111  0419  1283               	bcf	3,5	;RP0=0, select bank0
  8112  041A  1303               	bcf	3,6	;RP1=0, select bank0
  8113  041B  0824               	movf	?___ftadd+1,w
  8114  041C  1683               	bsf	3,5	;RP0=1, select bank1
  8115  041D  1303               	bcf	3,6	;RP1=0, select bank1
  8116  041E  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8117  041F  1283               	bcf	3,5	;RP0=0, select bank0
  8118  0420  1303               	bcf	3,6	;RP1=0, select bank0
  8119  0421  0825               	movf	?___ftadd+2,w
  8120  0422  1683               	bsf	3,5	;RP0=1, select bank1
  8121  0423  1303               	bcf	3,6	;RP1=0, select bank1
  8122  0424  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8123  0425                     i1l3859:	
  8124                           
  8125                           ;main.c: 280: }
  8126                           ;main.c: 282: if (a >= 5 && a <= 10) {
  8127  0425  1683               	bsf	3,5	;RP0=1, select bank1
  8128  0426  1303               	bcf	3,6	;RP1=0, select bank1
  8129  0427  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  8130  0428  3A80               	xorlw	128
  8131  0429  00FF               	movwf	127
  8132  042A  3080               	movlw	128
  8133  042B  027F               	subwf	127,w
  8134  042C  1D03               	skipz
  8135  042D  2C30               	goto	u515_25
  8136  042E  3005               	movlw	5
  8137  042F  023A               	subwf	Fuzzy@a_246^(0+128),w
  8138  0430                     u515_25:	
  8139  0430  1C03               	skipc
  8140  0431  2CD2               	goto	i1l3865
  8141  0432  1683               	bsf	3,5	;RP0=1, select bank1
  8142  0433  1303               	bcf	3,6	;RP1=0, select bank1
  8143  0434  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  8144  0435  3A80               	xorlw	128
  8145  0436  00FF               	movwf	127
  8146  0437  3080               	movlw	128
  8147  0438  027F               	subwf	127,w
  8148  0439  1D03               	skipz
  8149  043A  2C3D               	goto	u516_25
  8150  043B  300B               	movlw	11
  8151  043C  023A               	subwf	Fuzzy@a_246^(0+128),w
  8152  043D                     u516_25:	
  8153  043D  1803               	skipnc
  8154  043E  2CD2               	goto	i1l3865
  8155                           
  8156                           ;main.c: 283: total_area += rulemedio;
  8157  043F  1683               	bsf	3,5	;RP0=1, select bank1
  8158  0440  1303               	bcf	3,6	;RP1=0, select bank1
  8159  0441  0848               	movf	_rulemedio^(0+128),w
  8160  0442  1283               	bcf	3,5	;RP0=0, select bank0
  8161  0443  1303               	bcf	3,6	;RP1=0, select bank0
  8162  0444  00A3               	movwf	___ftadd@f1
  8163  0445  1683               	bsf	3,5	;RP0=1, select bank1
  8164  0446  1303               	bcf	3,6	;RP1=0, select bank1
  8165  0447  0849               	movf	(_rulemedio+1)^(0+128),w
  8166  0448  1283               	bcf	3,5	;RP0=0, select bank0
  8167  0449  1303               	bcf	3,6	;RP1=0, select bank0
  8168  044A  00A4               	movwf	___ftadd@f1+1
  8169  044B  1683               	bsf	3,5	;RP0=1, select bank1
  8170  044C  1303               	bcf	3,6	;RP1=0, select bank1
  8171  044D  084A               	movf	(_rulemedio+2)^(0+128),w
  8172  044E  1283               	bcf	3,5	;RP0=0, select bank0
  8173  044F  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0450  00A5               	movwf	___ftadd@f1+2
  8175  0451  1683               	bsf	3,5	;RP0=1, select bank1
  8176  0452  1303               	bcf	3,6	;RP1=0, select bank1
  8177  0453  0837               	movf	Fuzzy@total_area^(0+128),w
  8178  0454  1283               	bcf	3,5	;RP0=0, select bank0
  8179  0455  1303               	bcf	3,6	;RP1=0, select bank0
  8180  0456  00A6               	movwf	___ftadd@f2
  8181  0457  1683               	bsf	3,5	;RP0=1, select bank1
  8182  0458  1303               	bcf	3,6	;RP1=0, select bank1
  8183  0459  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8184  045A  1283               	bcf	3,5	;RP0=0, select bank0
  8185  045B  1303               	bcf	3,6	;RP1=0, select bank0
  8186  045C  00A7               	movwf	___ftadd@f2+1
  8187  045D  1683               	bsf	3,5	;RP0=1, select bank1
  8188  045E  1303               	bcf	3,6	;RP1=0, select bank1
  8189  045F  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8190  0460  1283               	bcf	3,5	;RP0=0, select bank0
  8191  0461  1303               	bcf	3,6	;RP1=0, select bank0
  8192  0462  00A8               	movwf	___ftadd@f2+2
  8193  0463  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8194  0468  1283               	bcf	3,5	;RP0=0, select bank0
  8195  0469  1303               	bcf	3,6	;RP1=0, select bank0
  8196  046A  0823               	movf	?___ftadd,w
  8197  046B  1683               	bsf	3,5	;RP0=1, select bank1
  8198  046C  1303               	bcf	3,6	;RP1=0, select bank1
  8199  046D  00B7               	movwf	Fuzzy@total_area^(0+128)
  8200  046E  1283               	bcf	3,5	;RP0=0, select bank0
  8201  046F  1303               	bcf	3,6	;RP1=0, select bank0
  8202  0470  0824               	movf	?___ftadd+1,w
  8203  0471  1683               	bsf	3,5	;RP0=1, select bank1
  8204  0472  1303               	bcf	3,6	;RP1=0, select bank1
  8205  0473  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8206  0474  1283               	bcf	3,5	;RP0=0, select bank0
  8207  0475  1303               	bcf	3,6	;RP1=0, select bank0
  8208  0476  0825               	movf	?___ftadd+2,w
  8209  0477  1683               	bsf	3,5	;RP0=1, select bank1
  8210  0478  1303               	bcf	3,6	;RP1=0, select bank1
  8211  0479  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8212                           
  8213                           ;main.c: 284: soma += (x * rulemedio);
  8214  047A  083F               	movf	Fuzzy@x^(0+128),w
  8215  047B  1283               	bcf	3,5	;RP0=0, select bank0
  8216  047C  1303               	bcf	3,6	;RP1=0, select bank0
  8217  047D  00D5               	movwf	___ftmul@f2
  8218  047E  1683               	bsf	3,5	;RP0=1, select bank1
  8219  047F  1303               	bcf	3,6	;RP1=0, select bank1
  8220  0480  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8221  0481  1283               	bcf	3,5	;RP0=0, select bank0
  8222  0482  1303               	bcf	3,6	;RP1=0, select bank0
  8223  0483  00D6               	movwf	___ftmul@f2+1
  8224  0484  1683               	bsf	3,5	;RP0=1, select bank1
  8225  0485  1303               	bcf	3,6	;RP1=0, select bank1
  8226  0486  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8227  0487  1283               	bcf	3,5	;RP0=0, select bank0
  8228  0488  1303               	bcf	3,6	;RP1=0, select bank0
  8229  0489  00D7               	movwf	___ftmul@f2+2
  8230  048A  1683               	bsf	3,5	;RP0=1, select bank1
  8231  048B  1303               	bcf	3,6	;RP1=0, select bank1
  8232  048C  0848               	movf	_rulemedio^(0+128),w
  8233  048D  1283               	bcf	3,5	;RP0=0, select bank0
  8234  048E  1303               	bcf	3,6	;RP1=0, select bank0
  8235  048F  00D2               	movwf	___ftmul@f1
  8236  0490  1683               	bsf	3,5	;RP0=1, select bank1
  8237  0491  1303               	bcf	3,6	;RP1=0, select bank1
  8238  0492  0849               	movf	(_rulemedio+1)^(0+128),w
  8239  0493  1283               	bcf	3,5	;RP0=0, select bank0
  8240  0494  1303               	bcf	3,6	;RP1=0, select bank0
  8241  0495  00D3               	movwf	___ftmul@f1+1
  8242  0496  1683               	bsf	3,5	;RP0=1, select bank1
  8243  0497  1303               	bcf	3,6	;RP1=0, select bank1
  8244  0498  084A               	movf	(_rulemedio+2)^(0+128),w
  8245  0499  1283               	bcf	3,5	;RP0=0, select bank0
  8246  049A  1303               	bcf	3,6	;RP1=0, select bank0
  8247  049B  00D4               	movwf	___ftmul@f1+2
  8248  049C  120A  158A  21CB  120A  118A  	fcall	___ftmul
  8249  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  8250  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  8251  04A3  0852               	movf	?___ftmul,w
  8252  04A4  00A3               	movwf	___ftadd@f1
  8253  04A5  0853               	movf	?___ftmul+1,w
  8254  04A6  00A4               	movwf	___ftadd@f1+1
  8255  04A7  0854               	movf	?___ftmul+2,w
  8256  04A8  00A5               	movwf	___ftadd@f1+2
  8257  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  8258  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  8259  04AB  0834               	movf	Fuzzy@soma^(0+128),w
  8260  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  8261  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  8262  04AE  00A6               	movwf	___ftadd@f2
  8263  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  8264  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  8265  04B1  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8266  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  8267  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  8268  04B4  00A7               	movwf	___ftadd@f2+1
  8269  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  8270  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  8271  04B7  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8272  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  8273  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  8274  04BA  00A8               	movwf	___ftadd@f2+2
  8275  04BB  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8276  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  8277  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  8278  04C2  0823               	movf	?___ftadd,w
  8279  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  8280  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  8281  04C5  00B4               	movwf	Fuzzy@soma^(0+128)
  8282  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  8283  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  8284  04C8  0824               	movf	?___ftadd+1,w
  8285  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  8286  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  8287  04CB  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8288  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  8289  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  8290  04CE  0825               	movf	?___ftadd+2,w
  8291  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  8292  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  8293  04D1  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8294  04D2                     i1l3865:	
  8295                           
  8296                           ;main.c: 285: }
  8297                           ;main.c: 287: if (a >= 10 && a <= 15) {
  8298  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  8299  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  8300  04D4  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  8301  04D5  3A80               	xorlw	128
  8302  04D6  00FF               	movwf	127
  8303  04D7  3080               	movlw	128
  8304  04D8  027F               	subwf	127,w
  8305  04D9  1D03               	skipz
  8306  04DA  2CDD               	goto	u517_25
  8307  04DB  300A               	movlw	10
  8308  04DC  023A               	subwf	Fuzzy@a_246^(0+128),w
  8309  04DD                     u517_25:	
  8310  04DD  1C03               	skipc
  8311  04DE  2D7F               	goto	i1l176
  8312  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  8313  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  8314  04E1  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  8315  04E2  3A80               	xorlw	128
  8316  04E3  00FF               	movwf	127
  8317  04E4  3080               	movlw	128
  8318  04E5  027F               	subwf	127,w
  8319  04E6  1D03               	skipz
  8320  04E7  2CEA               	goto	u518_25
  8321  04E8  3010               	movlw	16
  8322  04E9  023A               	subwf	Fuzzy@a_246^(0+128),w
  8323  04EA                     u518_25:	
  8324  04EA  1803               	skipnc
  8325  04EB  2D7F               	goto	i1l176
  8326                           
  8327                           ;main.c: 288: total_area += rulegrande;
  8328  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  8329  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  8330  04EE  0845               	movf	_rulegrande^(0+128),w
  8331  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  8332  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  8333  04F1  00A3               	movwf	___ftadd@f1
  8334  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  8335  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  8336  04F4  0846               	movf	(_rulegrande+1)^(0+128),w
  8337  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  8338  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  8339  04F7  00A4               	movwf	___ftadd@f1+1
  8340  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  8341  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  8342  04FA  0847               	movf	(_rulegrande+2)^(0+128),w
  8343  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  8344  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  8345  04FD  00A5               	movwf	___ftadd@f1+2
  8346  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  8347  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  8348  0500  0837               	movf	Fuzzy@total_area^(0+128),w
  8349  0501  1283               	bcf	3,5	;RP0=0, select bank0
  8350  0502  1303               	bcf	3,6	;RP1=0, select bank0
  8351  0503  00A6               	movwf	___ftadd@f2
  8352  0504  1683               	bsf	3,5	;RP0=1, select bank1
  8353  0505  1303               	bcf	3,6	;RP1=0, select bank1
  8354  0506  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8355  0507  1283               	bcf	3,5	;RP0=0, select bank0
  8356  0508  1303               	bcf	3,6	;RP1=0, select bank0
  8357  0509  00A7               	movwf	___ftadd@f2+1
  8358  050A  1683               	bsf	3,5	;RP0=1, select bank1
  8359  050B  1303               	bcf	3,6	;RP1=0, select bank1
  8360  050C  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8361  050D  1283               	bcf	3,5	;RP0=0, select bank0
  8362  050E  1303               	bcf	3,6	;RP1=0, select bank0
  8363  050F  00A8               	movwf	___ftadd@f2+2
  8364  0510  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8365  0515  1283               	bcf	3,5	;RP0=0, select bank0
  8366  0516  1303               	bcf	3,6	;RP1=0, select bank0
  8367  0517  0823               	movf	?___ftadd,w
  8368  0518  1683               	bsf	3,5	;RP0=1, select bank1
  8369  0519  1303               	bcf	3,6	;RP1=0, select bank1
  8370  051A  00B7               	movwf	Fuzzy@total_area^(0+128)
  8371  051B  1283               	bcf	3,5	;RP0=0, select bank0
  8372  051C  1303               	bcf	3,6	;RP1=0, select bank0
  8373  051D  0824               	movf	?___ftadd+1,w
  8374  051E  1683               	bsf	3,5	;RP0=1, select bank1
  8375  051F  1303               	bcf	3,6	;RP1=0, select bank1
  8376  0520  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8377  0521  1283               	bcf	3,5	;RP0=0, select bank0
  8378  0522  1303               	bcf	3,6	;RP1=0, select bank0
  8379  0523  0825               	movf	?___ftadd+2,w
  8380  0524  1683               	bsf	3,5	;RP0=1, select bank1
  8381  0525  1303               	bcf	3,6	;RP1=0, select bank1
  8382  0526  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8383                           
  8384                           ;main.c: 289: soma += (x * rulegrande);
  8385  0527  083F               	movf	Fuzzy@x^(0+128),w
  8386  0528  1283               	bcf	3,5	;RP0=0, select bank0
  8387  0529  1303               	bcf	3,6	;RP1=0, select bank0
  8388  052A  00D5               	movwf	___ftmul@f2
  8389  052B  1683               	bsf	3,5	;RP0=1, select bank1
  8390  052C  1303               	bcf	3,6	;RP1=0, select bank1
  8391  052D  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8392  052E  1283               	bcf	3,5	;RP0=0, select bank0
  8393  052F  1303               	bcf	3,6	;RP1=0, select bank0
  8394  0530  00D6               	movwf	___ftmul@f2+1
  8395  0531  1683               	bsf	3,5	;RP0=1, select bank1
  8396  0532  1303               	bcf	3,6	;RP1=0, select bank1
  8397  0533  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8398  0534  1283               	bcf	3,5	;RP0=0, select bank0
  8399  0535  1303               	bcf	3,6	;RP1=0, select bank0
  8400  0536  00D7               	movwf	___ftmul@f2+2
  8401  0537  1683               	bsf	3,5	;RP0=1, select bank1
  8402  0538  1303               	bcf	3,6	;RP1=0, select bank1
  8403  0539  0845               	movf	_rulegrande^(0+128),w
  8404  053A  1283               	bcf	3,5	;RP0=0, select bank0
  8405  053B  1303               	bcf	3,6	;RP1=0, select bank0
  8406  053C  00D2               	movwf	___ftmul@f1
  8407  053D  1683               	bsf	3,5	;RP0=1, select bank1
  8408  053E  1303               	bcf	3,6	;RP1=0, select bank1
  8409  053F  0846               	movf	(_rulegrande+1)^(0+128),w
  8410  0540  1283               	bcf	3,5	;RP0=0, select bank0
  8411  0541  1303               	bcf	3,6	;RP1=0, select bank0
  8412  0542  00D3               	movwf	___ftmul@f1+1
  8413  0543  1683               	bsf	3,5	;RP0=1, select bank1
  8414  0544  1303               	bcf	3,6	;RP1=0, select bank1
  8415  0545  0847               	movf	(_rulegrande+2)^(0+128),w
  8416  0546  1283               	bcf	3,5	;RP0=0, select bank0
  8417  0547  1303               	bcf	3,6	;RP1=0, select bank0
  8418  0548  00D4               	movwf	___ftmul@f1+2
  8419  0549  120A  158A  21CB  120A  118A  	fcall	___ftmul
  8420  054E  1283               	bcf	3,5	;RP0=0, select bank0
  8421  054F  1303               	bcf	3,6	;RP1=0, select bank0
  8422  0550  0852               	movf	?___ftmul,w
  8423  0551  00A3               	movwf	___ftadd@f1
  8424  0552  0853               	movf	?___ftmul+1,w
  8425  0553  00A4               	movwf	___ftadd@f1+1
  8426  0554  0854               	movf	?___ftmul+2,w
  8427  0555  00A5               	movwf	___ftadd@f1+2
  8428  0556  1683               	bsf	3,5	;RP0=1, select bank1
  8429  0557  1303               	bcf	3,6	;RP1=0, select bank1
  8430  0558  0834               	movf	Fuzzy@soma^(0+128),w
  8431  0559  1283               	bcf	3,5	;RP0=0, select bank0
  8432  055A  1303               	bcf	3,6	;RP1=0, select bank0
  8433  055B  00A6               	movwf	___ftadd@f2
  8434  055C  1683               	bsf	3,5	;RP0=1, select bank1
  8435  055D  1303               	bcf	3,6	;RP1=0, select bank1
  8436  055E  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8437  055F  1283               	bcf	3,5	;RP0=0, select bank0
  8438  0560  1303               	bcf	3,6	;RP1=0, select bank0
  8439  0561  00A7               	movwf	___ftadd@f2+1
  8440  0562  1683               	bsf	3,5	;RP0=1, select bank1
  8441  0563  1303               	bcf	3,6	;RP1=0, select bank1
  8442  0564  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8443  0565  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0566  1303               	bcf	3,6	;RP1=0, select bank0
  8445  0567  00A8               	movwf	___ftadd@f2+2
  8446  0568  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8447  056D  1283               	bcf	3,5	;RP0=0, select bank0
  8448  056E  1303               	bcf	3,6	;RP1=0, select bank0
  8449  056F  0823               	movf	?___ftadd,w
  8450  0570  1683               	bsf	3,5	;RP0=1, select bank1
  8451  0571  1303               	bcf	3,6	;RP1=0, select bank1
  8452  0572  00B4               	movwf	Fuzzy@soma^(0+128)
  8453  0573  1283               	bcf	3,5	;RP0=0, select bank0
  8454  0574  1303               	bcf	3,6	;RP1=0, select bank0
  8455  0575  0824               	movf	?___ftadd+1,w
  8456  0576  1683               	bsf	3,5	;RP0=1, select bank1
  8457  0577  1303               	bcf	3,6	;RP1=0, select bank1
  8458  0578  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8459  0579  1283               	bcf	3,5	;RP0=0, select bank0
  8460  057A  1303               	bcf	3,6	;RP1=0, select bank0
  8461  057B  0825               	movf	?___ftadd+2,w
  8462  057C  1683               	bsf	3,5	;RP0=1, select bank1
  8463  057D  1303               	bcf	3,6	;RP1=0, select bank1
  8464  057E  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8465  057F                     i1l176:	
  8466                           
  8467                           ;main.c: 290: }
  8468                           ;main.c: 291: x += 1;
  8469  057F  3000               	movlw	0
  8470  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8471  0581  1303               	bcf	3,6	;RP1=0, select bank0
  8472  0582  00A3               	movwf	___ftadd@f1
  8473  0583  3080               	movlw	128
  8474  0584  00A4               	movwf	___ftadd@f1+1
  8475  0585  303F               	movlw	63
  8476  0586  00A5               	movwf	___ftadd@f1+2
  8477  0587  1683               	bsf	3,5	;RP0=1, select bank1
  8478  0588  1303               	bcf	3,6	;RP1=0, select bank1
  8479  0589  083F               	movf	Fuzzy@x^(0+128),w
  8480  058A  1283               	bcf	3,5	;RP0=0, select bank0
  8481  058B  1303               	bcf	3,6	;RP1=0, select bank0
  8482  058C  00A6               	movwf	___ftadd@f2
  8483  058D  1683               	bsf	3,5	;RP0=1, select bank1
  8484  058E  1303               	bcf	3,6	;RP1=0, select bank1
  8485  058F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8486  0590  1283               	bcf	3,5	;RP0=0, select bank0
  8487  0591  1303               	bcf	3,6	;RP1=0, select bank0
  8488  0592  00A7               	movwf	___ftadd@f2+1
  8489  0593  1683               	bsf	3,5	;RP0=1, select bank1
  8490  0594  1303               	bcf	3,6	;RP1=0, select bank1
  8491  0595  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8492  0596  1283               	bcf	3,5	;RP0=0, select bank0
  8493  0597  1303               	bcf	3,6	;RP1=0, select bank0
  8494  0598  00A8               	movwf	___ftadd@f2+2
  8495  0599  120A  118A  26E4  120A  118A  	fcall	___ftadd
  8496  059E  1283               	bcf	3,5	;RP0=0, select bank0
  8497  059F  1303               	bcf	3,6	;RP1=0, select bank0
  8498  05A0  0823               	movf	?___ftadd,w
  8499  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  8500  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  8501  05A3  00BF               	movwf	Fuzzy@x^(0+128)
  8502  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  8503  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  8504  05A6  0824               	movf	?___ftadd+1,w
  8505  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  8506  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  8507  05A9  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8508  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  8509  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  8510  05AC  0825               	movf	?___ftadd+2,w
  8511  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  8512  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  8513  05AF  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8514  05B0  3001               	movlw	1
  8515  05B1  07BA               	addwf	Fuzzy@a_246^(0+128),f
  8516  05B2  1803               	skipnc
  8517  05B3  0ABB               	incf	(Fuzzy@a_246+1)^(0+128),f
  8518  05B4  3000               	movlw	0
  8519  05B5  07BB               	addwf	(Fuzzy@a_246+1)^(0+128),f
  8520  05B6  083B               	movf	(Fuzzy@a_246+1)^(0+128),w
  8521  05B7  3A80               	xorlw	128
  8522  05B8  00FF               	movwf	127
  8523  05B9  3080               	movlw	128
  8524  05BA  027F               	subwf	127,w
  8525  05BB  1D03               	skipz
  8526  05BC  2DBF               	goto	u519_25
  8527  05BD  3010               	movlw	16
  8528  05BE  023A               	subwf	Fuzzy@a_246^(0+128),w
  8529  05BF                     u519_25:	
  8530  05BF  1C03               	skipc
  8531  05C0  2B83               	goto	i1l172
  8532  05C1                     i1l3875:	
  8533                           
  8534                           ;main.c: 292: }
  8535                           ;main.c: 295: float reajuste = 0;
  8536  05C1  3000               	movlw	0
  8537  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  8538  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  8539  05C4  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8540  05C5  3000               	movlw	0
  8541  05C6  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8542  05C7  3000               	movlw	0
  8543  05C8  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8544                           
  8545                           ;main.c: 296: if (total_area != 0)
  8546  05C9  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8547  05CA  0438               	iorwf	(Fuzzy@total_area+1)^(0+128),w
  8548  05CB  0437               	iorwf	Fuzzy@total_area^(0+128),w
  8549  05CC  1903               	skipnz
  8550  05CD  2E07               	goto	i1l3879
  8551                           
  8552                           ;main.c: 297: {
  8553                           ;main.c: 298: reajuste = soma / total_area;
  8554  05CE  0837               	movf	Fuzzy@total_area^(0+128),w
  8555  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  8556  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  8557  05D1  00B0               	movwf	___ftdiv@f2
  8558  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  8559  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  8560  05D4  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8561  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  8562  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  8563  05D7  00B1               	movwf	___ftdiv@f2+1
  8564  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  8565  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  8566  05DA  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8567  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  8568  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  8569  05DD  00B2               	movwf	___ftdiv@f2+2
  8570  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  8571  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  8572  05E0  0834               	movf	Fuzzy@soma^(0+128),w
  8573  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  8574  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  8575  05E3  00B3               	movwf	___ftdiv@f1
  8576  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  8577  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  8578  05E6  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8579  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  8580  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  8581  05E9  00B4               	movwf	___ftdiv@f1+1
  8582  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  8583  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  8584  05EC  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8585  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  8586  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  8587  05EF  00B5               	movwf	___ftdiv@f1+2
  8588  05F0  120A  158A  2113  120A  118A  	fcall	___ftdiv
  8589  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  8590  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  8591  05F7  0830               	movf	?___ftdiv,w
  8592  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  8593  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  8594  05FA  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8595  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  8596  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  8597  05FD  0831               	movf	?___ftdiv+1,w
  8598  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  8599  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  8600  0600  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8601  0601  1283               	bcf	3,5	;RP0=0, select bank0
  8602  0602  1303               	bcf	3,6	;RP1=0, select bank0
  8603  0603  0832               	movf	?___ftdiv+2,w
  8604  0604  1683               	bsf	3,5	;RP0=1, select bank1
  8605  0605  1303               	bcf	3,6	;RP1=0, select bank1
  8606  0606  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8607  0607                     i1l3879:	
  8608                           
  8609                           ;main.c: 299: }
  8610                           ;main.c: 302: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, deltaV)) * (setpointUI > 
      +                          rpm ? 1 : -1), 1023), 0);
  8611  0607  1283               	bcf	3,5	;RP0=0, select bank0
  8612  0608  1303               	bcf	3,6	;RP1=0, select bank0
  8613  0609  086D               	movf	_setpointUI+1,w
  8614  060A  026B               	subwf	_rpm+1,w
  8615  060B  1D03               	skipz
  8616  060C  2E0F               	goto	u521_25
  8617  060D  086C               	movf	_setpointUI,w
  8618  060E  026A               	subwf	_rpm,w
  8619  060F                     u521_25:	
  8620  060F  1C03               	skipc
  8621  0610  2E17               	goto	i1l3883
  8622  0611  30FF               	movlw	255
  8623  0612  1683               	bsf	3,5	;RP0=1, select bank1
  8624  0613  1303               	bcf	3,6	;RP1=0, select bank1
  8625  0614  00A8               	movwf	_Fuzzy$248^(0+128)
  8626  0615  30FF               	movlw	255
  8627  0616  2E1C               	goto	L2
  8628  0617                     i1l3883:	
  8629  0617  3001               	movlw	1
  8630  0618  1683               	bsf	3,5	;RP0=1, select bank1
  8631  0619  1303               	bcf	3,6	;RP1=0, select bank1
  8632  061A  00A8               	movwf	_Fuzzy$248^(0+128)
  8633  061B  3000               	movlw	0
  8634  061C                     L2:	
  8635  061C  00A9               	movwf	(_Fuzzy$248^(0+128)+1)
  8636  061D  0829               	movf	(_Fuzzy$248+1)^(0+128),w
  8637  061E  1283               	bcf	3,5	;RP0=0, select bank0
  8638  061F  1303               	bcf	3,6	;RP1=0, select bank0
  8639  0620  01BD               	clrf	___wmul@multiplicand+1
  8640  0621  07BD               	addwf	___wmul@multiplicand+1,f
  8641  0622  1683               	bsf	3,5	;RP0=1, select bank1
  8642  0623  1303               	bcf	3,6	;RP1=0, select bank1
  8643  0624  0828               	movf	_Fuzzy$248^(0+128),w
  8644  0625  1283               	bcf	3,5	;RP0=0, select bank0
  8645  0626  1303               	bcf	3,6	;RP1=0, select bank0
  8646  0627  01BC               	clrf	___wmul@multiplicand
  8647  0628  07BC               	addwf	___wmul@multiplicand,f
  8648  0629  0869               	movf	_deltaV+1,w
  8649  062A  01F9               	clrf	___lwtoft@c+1
  8650  062B  07F9               	addwf	___lwtoft@c+1,f
  8651  062C  0868               	movf	_deltaV,w
  8652  062D  01F8               	clrf	___lwtoft@c
  8653  062E  07F8               	addwf	___lwtoft@c,f
  8654  062F  160A  118A  2317  120A  118A  	fcall	___lwtoft
  8655  0634  0878               	movf	?___lwtoft,w
  8656  0635  1283               	bcf	3,5	;RP0=0, select bank0
  8657  0636  1303               	bcf	3,6	;RP1=0, select bank0
  8658  0637  00A3               	movwf	minimo@b
  8659  0638  0879               	movf	?___lwtoft+1,w
  8660  0639  00A4               	movwf	minimo@b+1
  8661  063A  087A               	movf	?___lwtoft+2,w
  8662  063B  00A5               	movwf	minimo@b+2
  8663  063C  1683               	bsf	3,5	;RP0=1, select bank1
  8664  063D  1303               	bcf	3,6	;RP1=0, select bank1
  8665  063E  0825               	movf	Fuzzy@reajuste^(0+128),w
  8666  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8667  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8668  0641  00A0               	movwf	minimo@a
  8669  0642  1683               	bsf	3,5	;RP0=1, select bank1
  8670  0643  1303               	bcf	3,6	;RP1=0, select bank1
  8671  0644  0826               	movf	(Fuzzy@reajuste+1)^(0+128),w
  8672  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8673  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8674  0647  00A1               	movwf	minimo@a+1
  8675  0648  1683               	bsf	3,5	;RP0=1, select bank1
  8676  0649  1303               	bcf	3,6	;RP1=0, select bank1
  8677  064A  0827               	movf	(Fuzzy@reajuste+2)^(0+128),w
  8678  064B  1283               	bcf	3,5	;RP0=0, select bank0
  8679  064C  1303               	bcf	3,6	;RP1=0, select bank0
  8680  064D  00A2               	movwf	minimo@a+2
  8681  064E  160A  118A  23C6  120A  118A  	fcall	_minimo
  8682  0653  1283               	bcf	3,5	;RP0=0, select bank0
  8683  0654  1303               	bcf	3,6	;RP1=0, select bank0
  8684  0655  0820               	movf	?_minimo,w
  8685  0656  00AC               	movwf	___fttol@f1
  8686  0657  0821               	movf	?_minimo+1,w
  8687  0658  00AD               	movwf	___fttol@f1+1
  8688  0659  0822               	movf	?_minimo+2,w
  8689  065A  00AE               	movwf	___fttol@f1+2
  8690  065B  160A  118A  26E3  120A  118A  	fcall	___fttol
  8691  0660  1283               	bcf	3,5	;RP0=0, select bank0
  8692  0661  1303               	bcf	3,6	;RP1=0, select bank0
  8693  0662  082D               	movf	?___fttol+1,w
  8694  0663  01BB               	clrf	___wmul@multiplier+1
  8695  0664  07BB               	addwf	___wmul@multiplier+1,f
  8696  0665  082C               	movf	?___fttol,w
  8697  0666  01BA               	clrf	___wmul@multiplier
  8698  0667  07BA               	addwf	___wmul@multiplier,f
  8699  0668  160A  118A  248B  120A  118A  	fcall	___wmul
  8700  066D  1683               	bsf	3,5	;RP0=1, select bank1
  8701  066E  1303               	bcf	3,6	;RP1=0, select bank1
  8702  066F  0862               	movf	_pwm^(0+128),w
  8703  0670  1283               	bcf	3,5	;RP0=0, select bank0
  8704  0671  1303               	bcf	3,6	;RP1=0, select bank0
  8705  0672  073A               	addwf	?___wmul,w
  8706  0673  1683               	bsf	3,5	;RP0=1, select bank1
  8707  0674  1303               	bcf	3,6	;RP1=0, select bank1
  8708  0675  00A3               	movwf	_Fuzzy$1689^(0+128)
  8709  0676  0863               	movf	(_pwm+1)^(0+128),w
  8710  0677  1803               	skipnc
  8711  0678  0A63               	incf	(_pwm+1)^(0+128),w
  8712  0679  1283               	bcf	3,5	;RP0=0, select bank0
  8713  067A  1303               	bcf	3,6	;RP1=0, select bank0
  8714  067B  073B               	addwf	?___wmul+1,w
  8715  067C  1683               	bsf	3,5	;RP0=1, select bank1
  8716  067D  1303               	bcf	3,6	;RP1=0, select bank1
  8717  067E  00A4               	movwf	(_Fuzzy$1689+1)^(0+128)
  8718  067F  3000               	movlw	0
  8719  0680  1283               	bcf	3,5	;RP0=0, select bank0
  8720  0681  1303               	bcf	3,6	;RP1=0, select bank0
  8721  0682  00A9               	movwf	maximo@b
  8722  0683  3000               	movlw	0
  8723  0684  00AA               	movwf	maximo@b+1
  8724  0685  3000               	movlw	0
  8725  0686  00AB               	movwf	maximo@b+2
  8726  0687  30C0               	movlw	192
  8727  0688  00A3               	movwf	minimo@b
  8728  0689  307F               	movlw	127
  8729  068A  00A4               	movwf	minimo@b+1
  8730  068B  3044               	movlw	68
  8731  068C  00A5               	movwf	minimo@b+2
  8732  068D  1683               	bsf	3,5	;RP0=1, select bank1
  8733  068E  1303               	bcf	3,6	;RP1=0, select bank1
  8734  068F  0824               	movf	(_Fuzzy$1689+1)^(0+128),w
  8735  0690  01F9               	clrf	___lwtoft@c+1
  8736  0691  07F9               	addwf	___lwtoft@c+1,f
  8737  0692  0823               	movf	_Fuzzy$1689^(0+128),w
  8738  0693  01F8               	clrf	___lwtoft@c
  8739  0694  07F8               	addwf	___lwtoft@c,f
  8740  0695  160A  118A  2317  120A  118A  	fcall	___lwtoft
  8741  069A  0878               	movf	?___lwtoft,w
  8742  069B  1283               	bcf	3,5	;RP0=0, select bank0
  8743  069C  1303               	bcf	3,6	;RP1=0, select bank0
  8744  069D  00A0               	movwf	minimo@a
  8745  069E  0879               	movf	?___lwtoft+1,w
  8746  069F  00A1               	movwf	minimo@a+1
  8747  06A0  087A               	movf	?___lwtoft+2,w
  8748  06A1  00A2               	movwf	minimo@a+2
  8749  06A2  160A  118A  23C6  120A  118A  	fcall	_minimo
  8750  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  8751  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  8752  06A9  0820               	movf	?_minimo,w
  8753  06AA  00A6               	movwf	maximo@a
  8754  06AB  0821               	movf	?_minimo+1,w
  8755  06AC  00A7               	movwf	maximo@a+1
  8756  06AD  0822               	movf	?_minimo+2,w
  8757  06AE  00A8               	movwf	maximo@a+2
  8758  06AF  160A  118A  23A8  120A  118A  	fcall	_maximo
  8759  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  8760  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  8761  06B6  0826               	movf	?_maximo,w
  8762  06B7  00AC               	movwf	___fttol@f1
  8763  06B8  0827               	movf	?_maximo+1,w
  8764  06B9  00AD               	movwf	___fttol@f1+1
  8765  06BA  0828               	movf	?_maximo+2,w
  8766  06BB  00AE               	movwf	___fttol@f1+2
  8767  06BC  160A  118A  26E3  120A  118A  	fcall	___fttol
  8768  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  8769  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  8770  06C3  082D               	movf	?___fttol+1,w
  8771  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  8772  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  8773  06C6  01E3               	clrf	(_pwm+1)^(0+128)
  8774  06C7  07E3               	addwf	(_pwm+1)^(0+128),f
  8775  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  8776  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  8777  06CA  082C               	movf	?___fttol,w
  8778  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  8779  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  8780  06CD  01E2               	clrf	_pwm^(0+128)
  8781  06CE  07E2               	addwf	_pwm^(0+128),f
  8782                           
  8783                           ;main.c: 304: if(pwm > 0 && pwm < 1024)
  8784  06CF  0863               	movf	(_pwm+1)^(0+128),w
  8785  06D0  0462               	iorwf	_pwm^(0+128),w
  8786  06D1  1903               	skipnz
  8787  06D2  0008               	return
  8788  06D3  3004               	movlw	4
  8789  06D4  0263               	subwf	(_pwm+1)^(0+128),w
  8790  06D5  3000               	movlw	0
  8791  06D6  1903               	skipnz
  8792  06D7  0262               	subwf	_pwm^(0+128),w
  8793  06D8  1803               	skipnc
  8794  06D9  0008               	return
  8795                           
  8796                           ;main.c: 305: {
  8797                           ;main.c: 306: PWM_DutyCycle2(pwm);
  8798  06DA  0863               	movf	(_pwm+1)^(0+128),w
  8799  06DB  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8800  06DC  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8801  06DD  0862               	movf	_pwm^(0+128),w
  8802  06DE  01F0               	clrf	i1PWM_DutyCycle2@valor
  8803  06DF  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8804  06E0  160A  118A  2371   	fcall	i1_PWM_DutyCycle2
  8805  06E3  0008               	return
  8806  06E4                     __end_of_Fuzzy:	


Data Sizes:
    Strings     77
    Constant    0
    Data        4
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     34      68
    BANK3            96     26      55
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _send->___wmul
    _Fuzzy->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _maximo->_minimo
    ___wmul->___fttol
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1890
                                             23 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     223
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     327
                                              2 BANK3      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     401
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   54445
                                             68 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     657
                                             32 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               36    36      0   52626
                                             66 BANK0      2     2      0
                                              0 BANK1     34    34      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   19869
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7603
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _minimo                                               6     0      6    3552
                                              0 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _maximo                                               6     0      6    3296
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2952
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     476
                                             26 BANK0      6     2      4
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2493
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             12 BANK0     14    10      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
       _abs (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _abs (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _abs
     _maximo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
     _trapmf
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      37       9       57.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D9      12        0.0%
ABS                  0      0      D9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 21:59:41 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00DE                           _y 00E0  
                         pc 0002                 ?_LCD_Cursor 01AD     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 003C          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00D8  
              ___ftadd@sign 002D                         l611 1783                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0B75                         _abs 1309  
                       _rpm 006A                         fsr0 0004                         _pwm 00E2  
                       _sum 00CE  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 01B1                 _rulepequeno 00CB  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
              ___ftdiv@sign 003F                        ?_abs 0070          LCD_WriteString@Str 01AF  
                      l3213 14D9                        l3061 1794                        l3071 17B4  
                      l3083 17E9                        l3069 17A4                        l3087 17F7  
                      l3079 17DC                        l3271 0B2D                        l3199 13F2  
                      STR_1 1049                        STR_2 1038                        STR_3 1057  
                      STR_4 1010                        u3615 17A8                        u3635 17B6  
                      u3725 143A                        u3645 17CB                        u3655 17DD  
                      u5507 080C                        u5517 081C                        u3685 145B  
                      u5607 14CA                        u5527 082A                        u3695 1553  
                      u5617 14D6                        u5537 0836                        u5627 133C  
                      u5547 0842                        u5557 0850                        u5477 0B26  
                      u5567 085E                        u5487 0B6E                        u5577 086A  
                      u5497 1353                        _OERR 00C1                        u5587 13FE  
                      u5597 14BC                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 0A9E                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 086D  
                      btemp 007E            __end_of_ADC_Init 07FF                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 1342                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 12E4                       ??_ISR 0064  
              ___fttol@exp1 0039                       ??_abs 0072                ___fttol@lval 0035  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 086D             __end_of___aldiv 1800  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 07ED  
                     ?_send 0070               __CFG_WDTE$OFF 0000             __end_of___ftdiv 09CB  
           __end_of___ftneg 12FE             __end_of___ftmul 0A9E                       _T1CON 0010  
           __end_of___fttol 1771             __end_of___lwdiv 1548                       i1l122 0DEF  
                     i1l232 12DD                       i1l172 0383                       i1l176 057F  
                     i1l188 0C95                       i1l552 1497                       i1l723 163F  
                     i1l717 1626                       i1l746 078C                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 1658               ___awtoft@sign 007D               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 148B                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 01AD              ?_LCD_WriteData 0070                 ?_USART_Init 01BC  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 0B75  
              __end_of_send 0913                      ??_main 01C4               ___fttol@sign1 0034  
                    ??_send 0040                ?_TIMER0_Init 0070           __end_of_LCD_Clear 14D9  
                Fuzzy@a_241 00AC                  Fuzzy@a_242 00AE                  Fuzzy@a_243 00B0  
                Fuzzy@a_246 00BA                  Fuzzy@delta 00B2                      ?_Fuzzy 0070  
                _Fuzzy$1688 00A0                  _Fuzzy$1689 00A3                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _CCPR2L 001B                      _EECON2 018D            __end_of___awtoft 1425  
          __end_of___ftpack 1658                      i1l2221 15E1                      i1l2205 09A5  
                    i1l2073 15FF                      i1l2217 15BA                      i1l2083 162B  
                    i1l2075 160B                      i1l2085 1635                      i1l2077 1610  
                    i1l2069 15F8                      i1l2421 0A70                      i1l2405 0A38  
                    i1l2319 148F                      i1l2183 0941                      i1l2417 0A60  
                    i1l2409 0A48                      i1l2177 092B                      i1l2521 0908  
                    i1l2513 08EC                      i1l2437 16FD                      i1l2197 0986  
                    i1l2471 1768                      i1l2463 174C                      i1l2455 172F  
                    i1l2377 140E                      i1l2393 09F9                      i1l2465 1757  
                    i1l2457 173F                      i1l2387 09E3                      i1l2467 175A  
                    i1l2299 138D                      i1l3701 07B0                      i1l3711 07D3  
                    i1l2841 1512                      i1l3651 070D                      i1l2691 136E  
                    i1l2683 1362                      i1l2843 1520                      i1l3661 0723  
                    i1l3733 0D4D                      i1l2853 1541                      i1l3655 0714  
                    i1l3727 0D1B                      i1l3815 01C8                      i1l3681 075E  
                    i1l3673 073D                      i1l3841 0320                      i1l3825 0266  
                    i1l2849 1536                      i1l3691 077C                      i1l3683 0763  
                    i1l3739 0DD2                      i1l3819 0224                      i1l3763 0E89  
                    i1l3931 0B9D                      i1l3693 0788                      i1l3685 0767  
                    i1l3837 02C4                      i1l3773 0F27                      i1l3679 0752  
                    i1l3847 0362                      i1l3767 0EE5                      i1l3951 0BE3  
                    i1l3943 0BC7                      i1l3935 0BAB                      i1l3927 0B8F  
                    i1l3697 079E                      i1l3865 04D2                      i1l3793 00CB  
                    i1l3883 0617                      i1l3859 0425                      i1l3875 05C1  
                    i1l3971 0C2D                      i1l3963 0C0D                      i1l3955 0BF1  
                    i1l3947 0BD5                      i1l3939 0BB9                      i1l3789 006F  
                    i1l3973 0C30                      i1l3879 0607                      i1l3799 010D  
                    i1l3959 0BFF                      i1l3985 0C4D                      i1l3997 0C90  
                    i1l3999 0C91                      u231_21 15AD                      u231_22 15AE  
                    u231_23 15B3                      u231_24 15B4                      u224_25 0953  
                    u233_21 15D4                      u233_22 15D5                      u233_23 15DA  
                    u233_24 15DB                      u225_25 0965                      u250_25 149F  
                    u226_25 0987                      u227_25 0998                      u331_25 1521  
                    u228_25 09A6                      u332_25 152D                      u501_25 010B  
                    u333_25 1537                      u190_25 161F                      u270_25 0A51  
                    u511_25 0360                      u192_25 162E                      u512_25 0381  
                    u504_25 0128                      u265_25 0A05                      u281_25 1730  
                    u249_25 1498                      u521_25 060F                      u505_25 01C6  
                    u329_25 1515            __end_of___lwtoft 132B                      u274_25 0A71  
                    u266_25 0A17                      u514_25 0390                      u195_25 1646  
                    u275_25 0A79                      u515_25 0430                      u507_25 0264  
                    u188_25 1604                      u284_25 174E                      u516_25 043D  
                    u269_25 0A49                      u517_25 04DD                      u509_25 02C2  
       __size_of_TIMER0_Set 0008                      u278_25 1704                      u518_25 04EA  
                    u287_25 1382                      u519_25 05BF                      u472_25 0753  
                    u475_25 0768                      u469_25 073E                      u493_25 0E87  
                    u478_25 077D                      u495_25 0F25                      u498_25 0F42  
                    u499_25 006D                      _SSPADD 0093                      _SSPBUF 0013  
                    Fuzzy@a 00AA                      Fuzzy@x 00BF            LCD_WriteCmd@Byte 01AE  
                    ___ftge 1593                   ??___aldiv 01B5                      ___wmul 148B  
                 ??___ftadd 0029              _PWM_DutyCycle1 1425              _PWM_DutyCycle2 1446  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _deltaV 0068                   ??___ftmul 0058                   ??___fttol 0030  
                 ??___lwdiv 0074                      _antigo 019D                      _buffer 0190  
                    _fitemp 00C2                      _maximo 13A8                      _minimo 13C6  
     USART_ReceiveChar@byte 0074                      _trapmf 0CA2                      _pulsos 00DA  
                    _status 00DC       ___ftmul@f3_as_product 005D                   ?_ADC_Init 0070  
                    saved_w 007E         __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070  
   __end_of__initialization 0047                   ?_LCD_Init 0070                  ___ftadd@f1 0023  
                ___ftadd@f2 0026             ??_LCD_WriteData 01AD                  ___ftge@ff1 0070  
                ___ftge@ff2 0073                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
    __end_of_PWM_DutyCycle1 1446      __end_of_PWM_DutyCycle2 1467                  ___ftmul@f1 0052  
                ___ftmul@f2 0055                  ___fttol@f1 002C              __pcstackCOMMON 0070  
             __end_of_Fuzzy 06E4                __pidataBANK0 12D4                __pidataBANK1 12D2  
             LCD_Cursor@Col 01AD               LCD_Cursor@Row 01AF                ??_LCD_Cursor 01AE  
           _LCD_WriteString 14D9                  ___lwtoft@c 0078                   ?_PWM_Init 0070  
            _OPTION_REGbits 0081                  ??_ADC_Init 01AD        __end_of_LCD_WriteCmd 1342  
                   ??_Fuzzy 0062   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
                __pbssBANK0 0068                  __pbssBANK1 00C2                  __pbssBANK3 0190  
        __end_of_LCD_Cursor 1404                  ??_LCD_Init 01AF             ?_PWM_DutyCycle1 01AD  
           ?_PWM_DutyCycle2 01AD                  __pmaintext 0A9E                     ?___ftge 0070  
                   ?___wmul 003A                  __pintentry 0004                ??_TIMER0_Set 01AD  
                   _CCP1CON 0017                     _CCP2CON 001D                     ?_maximo 0026  
                   ?_minimo 0020                   ?___awtoft 0078                   ?___ftpack 0070  
             Fuzzy@reajuste 00A5                     ?_trapmf 0040                  ??_PWM_Init 01AD  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 12EC     __end_of_LCD_WriteString 150A  
                 _ADCResult 00D4                ??_USART_Init 01C0           LCD_WriteData@Byte 01AE  
                   ___aldiv 1771             __size_of___ftge 005D                     ___ftadd 06E4  
                   ___ftdiv 0913                     ___ftneg 12F4             __size_of___wmul 0025  
                   ___ftmul 09CB                     ___fttol 16E3                     ___lwdiv 150A  
                ??___awtoft 007B                  ??___ftpack 0075             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 1548                     __ptext2 1771  
                   __ptext3 12E4                     __ptext4 12FE                     __ptext5 1467  
                   __ptext6 1446                     __ptext7 1425                     __ptext8 14D9  
                   __ptext9 1342                  _pas_cooler 006E                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 012D                   _T1CONbits 0010  
                 _T2CONbits 0012                __size_of_abs 000E            ___aldiv@dividend 01B1  
                 _LCD_Clear 14B0          __end_of_USART_Init 1593                     clrloop0 12ED  
      end_of_initialization 0047                     maximo@a 0026                     maximo@b 0029  
                   minimo@a 0020                     minimo@b 0023                   _RCSTAbits 0018  
          ___aldiv@quotient 01B8                     psplit$0 270037                     psplit$1 370038  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040             Fuzzy@total_area 00B7  
      __end_ofi1_TIMER0_Set 12DC       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 006C                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 1371           __size_of_ADC_Init 0012                  _rulegrande 00C5  
       PWM_DutyCycle1@valor 01AD                  _total_area 00D1         PWM_DutyCycle2@valor 01AD  
               _CCP1CONbits 0017                 ___ftdiv@exp 003E                 _CCP2CONbits 001D  
                 _TXSTAbits 0098            ?_LCD_WriteString 01AF           __size_of_LCD_Init 006D  
              _LCD_WriteCmd 132B                 ___ftmul@exp 005C              __end_of___ftge 15F0  
            __end_of___wmul 14B0              __end_of_maximo 13C6              __end_of_minimo 13E4  
            __end_of_trapmf 0DF8    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 0CA2                 __end_of_abs 1317  
          ??_PWM_DutyCycle1 01AF            ??_PWM_DutyCycle2 01AF                   Fuzzy@soma 00B4  
                 Fuzzy@rule 00BC                   _Fuzzy$248 00A8       __end_of_LCD_WriteData 1359  
         _USART_ReceiveChar 1359                    ??___ftge 0076          ?_USART_ReceiveChar 0070  
                  ??___wmul 007E                 __pdataBANK0 006E                 __pdataBANK1 00E2  
              send@checksum 0041                    ??_maximo 007E                    ??_minimo 007E  
                  ??_trapmf 007E              send@velocidade 0042         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01AD                 ??_LCD_Clear 01AF         __end_of__stringdata 105D  
 __end_of_USART_ReceiveChar 1371       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01AD                    ?___aldiv 01AD                    ?___ftadd 0023  
                  ?___ftdiv 0030                    ?___ftneg 0020                    ?___ftmul 0052  
                  ?___fttol 002C                    ?___lwdiv 0070                   __pstrings 1000  
                 _ativa_fan 01A0               ??_TIMER0_Init 01AD          USART_Init@BaudRate 01BC  
                  _ADC_Init 07ED              __size_of_Fuzzy F08C            ___lwdiv@quotient 0075  
                pnum$text22 0027           ??_USART_WriteChar 0070                i1_TIMER0_Set 12D6  
           ___aldiv@divisor 01AD           interrupt_function 0004             ___aldiv@counter 01B6  
                  _LCD_Init 0800              ___wmul@product 003E                   clear_ram0 12EC  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 138C                 _display_rpm 01A3  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 1010                    _PWM_Init 1467           ___wmul@multiplier 003A  
                 _rulemedio 00C8         __end_of_TIMER0_Init 1309  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D3  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 1404  
                  ___ftpack 15F0          __end_of__stringtab 1010                    ___lwtoft 1317  
                 send@index 0044             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 138C                    __ptext10 0800                    __ptext11 13E4  
                  __ptext20 138C                    __ptext12 14B0                    __ptext21 12DC  
                  __ptext13 132B                    __ptext30 1593                    __ptext22 1658  
                  __ptext14 07ED                    __ptext31 1309                    __ptext23 1371  
                  __ptext15 0B75                    __ptext32 148B                    __ptext24 0CA2  
                  __ptext16 12D6                    __ptext33 1317                    __ptext25 12F4  
                  __ptext17 086D                    __ptext34 16E3                    __ptext26 0913  
                  __ptext18 150A                    __ptext35 09CB                    __ptext27 06E4  
                  __ptext19 1359                    __ptext36 1404                    __ptext28 13C6  
                  __ptext37 15F0                    __ptext29 13A8                    _antigoUI 00D6  
        ?_USART_WriteString 0070               __size_of_main 00D7               __size_of_send 00A6  
       USART_WriteChar@byte 0070         ??_USART_WriteString 0071                  _LCD_Cursor 13E4  
  __size_of_LCD_WriteString 0031          pnum$text22_split_1 0037          pnum$text22_split_2 0038  
               _TIMER0_Init 12FE                  _INTCONbits 000B   __end_of_USART_WriteString 13A8  
                  intlevel1 0000                   stringcode 100A        USART_WriteString@str 0072  
                _TIMER0_Set 12E4                    trapmf@ua 004F             _USART_WriteChar 12DC  
                  stringdir 100A                    stringtab 1000                ___aldiv@sign 01B7  
    __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070  
                _SSPCONbits 0014                  _USART_Init 1548  
