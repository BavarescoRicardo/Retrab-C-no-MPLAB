

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 16:28:35 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0000                     	;# 
   361  0001                     	;# 
   362  0002                     	;# 
   363  0003                     	;# 
   364  0004                     	;# 
   365  0005                     	;# 
   366  0006                     	;# 
   367  0007                     	;# 
   368  0008                     	;# 
   369  0009                     	;# 
   370  000A                     	;# 
   371  000B                     	;# 
   372  000C                     	;# 
   373  000D                     	;# 
   374  000E                     	;# 
   375  000E                     	;# 
   376  000F                     	;# 
   377  0010                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0014                     	;# 
   382  0015                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0017                     	;# 
   386  0018                     	;# 
   387  0019                     	;# 
   388  001A                     	;# 
   389  001B                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001D                     	;# 
   393  001E                     	;# 
   394  001F                     	;# 
   395  0081                     	;# 
   396  0085                     	;# 
   397  0086                     	;# 
   398  0087                     	;# 
   399  0088                     	;# 
   400  0089                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0094                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0088                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  010F                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600                           
   601                           	psect	idataBANK1
   602  07F9                     __pidataBANK1:	
   603                           
   604                           ;initializer for _setpoint
   605  07F9  3400               	retlw	0
   606  07FA  34A0               	retlw	160
   607  07FB  3441               	retlw	65
   608                           
   609                           ;initializer for _pas_cooler
   610  07FC  3407               	retlw	7
   611  07FD  3400               	retlw	0
   612                           
   613                           ;initializer for _setpointUI
   614  07FE  34C8               	retlw	200
   615  07FF  3400               	retlw	0
   616                           
   617                           	psect	strings
   618  0800                     __pstrings:	
   619  0800                     stringtab:	
   620  0800                     __stringtab:	
   621                           
   622                           ;	String table - string pointers are 1 byte each
   623  0800  1BFF               	btfsc	btemp+1,7
   624  0801  280A               	ljmp	stringcode
   625  0802  1383               	bcf	3,7
   626  0803  187F               	btfsc	btemp+1,0
   627  0804  1783               	bsf	3,7
   628  0805  0800               	movf	0,w
   629  0806  0A84               	incf	4,f
   630  0807  1903               	skipnz
   631  0808  0AFF               	incf	btemp+1,f
   632  0809  0008               	return
   633  080A                     stringcode:	
   634  080A                     stringdir:	
   635  080A  3008               	movlw	high stringdir
   636  080B  008A               	movwf	10
   637  080C  0804               	movf	4,w
   638  080D  0A84               	incf	4,f
   639  080E  0782               	addwf	2,f
   640  080F                     __stringbase:	
   641  080F  3400               	retlw	0
   642  0810                     __end_of__stringtab:	
   643  0810                     _dpowers:	
   644  0810  3401               	retlw	1
   645  0811  3400               	retlw	0
   646  0812  340A               	retlw	10
   647  0813  3400               	retlw	0
   648  0814  3464               	retlw	100
   649  0815  3400               	retlw	0
   650  0816  34E8               	retlw	232
   651  0817  3403               	retlw	3
   652  0818  3410               	retlw	16
   653  0819  3427               	retlw	39
   654  081A                     __end_of_dpowers:	
   655  000E                     _TMR1	set	14
   656  001F                     _ADCON0bits	set	31
   657  001E                     _ADRESH	set	30
   658  0017                     _CCP1CON	set	23
   659  0017                     _CCP1CONbits	set	23
   660  001D                     _CCP2CON	set	29
   661  001D                     _CCP2CONbits	set	29
   662  0015                     _CCPR1L	set	21
   663  001B                     _CCPR2L	set	27
   664  000B                     _INTCONbits	set	11
   665  000C                     _PIR1bits	set	12
   666  000D                     _PIR2bits	set	13
   667  0005                     _PORTA	set	5
   668  0006                     _PORTB	set	6
   669  0006                     _PORTBbits	set	6
   670  0007                     _PORTC	set	7
   671  0008                     _PORTD	set	8
   672  0009                     _PORTE	set	9
   673  0009                     _PORTEbits	set	9
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  0013                     _SSPBUF	set	19
   677  0014                     _SSPCONbits	set	20
   678  0010                     _T1CON	set	16
   679  0010                     _T1CONbits	set	16
   680  0012                     _T2CONbits	set	18
   681  0001                     _TMR0	set	1
   682  000F                     _TMR1H	set	15
   683  000E                     _TMR1L	set	14
   684  0019                     _TXREG	set	25
   685  00C1                     _OERR	set	193
   686  009F                     _ADCON1bits	set	159
   687  009E                     _ADRESL	set	158
   688  0081                     _OPTION_REGbits	set	129
   689  008C                     _PIE1bits	set	140
   690  008D                     _PIE2bits	set	141
   691  0092                     _PR2	set	146
   692  0099                     _SPBRG	set	153
   693  0093                     _SSPADD	set	147
   694  0091                     _SSPCON2	set	145
   695  0091                     _SSPCON2bits	set	145
   696  0094                     _SSPSTATbits	set	148
   697  0085                     _TRISA	set	133
   698  0086                     _TRISB	set	134
   699  0087                     _TRISC	set	135
   700  0088                     _TRISD	set	136
   701  0089                     _TRISE	set	137
   702  0098                     _TXSTAbits	set	152
   703  010D                     _EEADR	set	269
   704  010C                     _EEDATA	set	268
   705  018C                     _EECON1bits	set	396
   706  018D                     _EECON2	set	397
   707  081A                     __stringdata:	
   708  081A                     STR_19:	
   709  081A  340A               	retlw	10
   710  081B  340D               	retlw	13
   711  081C  3420               	retlw	32	;' '
   712  081D  342D               	retlw	45	;'-'
   713  081E  342D               	retlw	45	;'-'
   714  081F  342D               	retlw	45	;'-'
   715  0820  342D               	retlw	45	;'-'
   716  0821  342D               	retlw	45	;'-'
   717  0822  342D               	retlw	45	;'-'
   718  0823  342D               	retlw	45	;'-'
   719  0824  3420               	retlw	32	;' '
   720  0825  3445               	retlw	69	;'E'
   721  0826  3453               	retlw	83	;'S'
   722  0827  3454               	retlw	84	;'T'
   723  0828  344F               	retlw	79	;'O'
   724  0829  3455               	retlw	85	;'U'
   725  082A  3452               	retlw	82	;'R'
   726  082B  344F               	retlw	79	;'O'
   727  082C  3420               	retlw	32	;' '
   728  082D  3444               	retlw	68	;'D'
   729  082E  3445               	retlw	69	;'E'
   730  082F  3420               	retlw	32	;' '
   731  0830  3450               	retlw	80	;'P'
   732  0831  3449               	retlw	73	;'I'
   733  0832  344C               	retlw	76	;'L'
   734  0833  3448               	retlw	72	;'H'
   735  0834  3441               	retlw	65	;'A'
   736  0835  3420               	retlw	32	;' '
   737  0836  342D               	retlw	45	;'-'
   738  0837  342D               	retlw	45	;'-'
   739  0838  342D               	retlw	45	;'-'
   740  0839  342D               	retlw	45	;'-'
   741  083A  342D               	retlw	45	;'-'
   742  083B  342D               	retlw	45	;'-'
   743  083C  342D               	retlw	45	;'-'
   744  083D  3420               	retlw	32	;' '
   745  083E  340A               	retlw	10
   746  083F  340D               	retlw	13
   747  0840  3420               	retlw	32	;' '
   748  0841  3400               	retlw	0
   749  0842                     STR_11:	
   750  0842  3449               	retlw	73	;'I'
   751  0843  346E               	retlw	110	;'n'
   752  0844  3469               	retlw	105	;'i'
   753  0845  3463               	retlw	99	;'c'
   754  0846  3469               	retlw	105	;'i'
   755  0847  3461               	retlw	97	;'a'
   756  0848  346C               	retlw	108	;'l'
   757  0849  3469               	retlw	105	;'i'
   758  084A  347A               	retlw	122	;'z'
   759  084B  3461               	retlw	97	;'a'
   760  084C  346E               	retlw	110	;'n'
   761  084D  3464               	retlw	100	;'d'
   762  084E  346F               	retlw	111	;'o'
   763  084F  3420               	retlw	32	;' '
   764  0850  346F               	retlw	111	;'o'
   765  0851  3420               	retlw	32	;' '
   766  0852  3450               	retlw	80	;'P'
   767  0853  3449               	retlw	73	;'I'
   768  0854  3443               	retlw	67	;'C'
   769  0855  3431               	retlw	49	;'1'
   770  0856  3436               	retlw	54	;'6'
   771  0857  3446               	retlw	70	;'F'
   772  0858  3438               	retlw	56	;'8'
   773  0859  3437               	retlw	55	;'7'
   774  085A  3437               	retlw	55	;'7'
   775  085B  3441               	retlw	65	;'A'
   776  085C  340A               	retlw	10
   777  085D  340D               	retlw	13
   778  085E  3400               	retlw	0
   779  085F                     STR_12:	
   780  085F  3455               	retlw	85	;'U'
   781  0860  3453               	retlw	83	;'S'
   782  0861  3441               	retlw	65	;'A'
   783  0862  3452               	retlw	82	;'R'
   784  0863  3454               	retlw	84	;'T'
   785  0864  343A               	retlw	58	;':'
   786  0865  3420               	retlw	32	;' '
   787  0866  3431               	retlw	49	;'1'
   788  0867  3431               	retlw	49	;'1'
   789  0868  3435               	retlw	53	;'5'
   790  0869  342E               	retlw	46	;'.'
   791  086A  3432               	retlw	50	;'2'
   792  086B  3430               	retlw	48	;'0'
   793  086C  3430               	retlw	48	;'0'
   794  086D  3462               	retlw	98	;'b'
   795  086E  3470               	retlw	112	;'p'
   796  086F  3473               	retlw	115	;'s'
   797  0870  340A               	retlw	10
   798  0871  340D               	retlw	13
   799  0872  3400               	retlw	0
   800  0873                     STR_13:	
   801  0873  3449               	retlw	73	;'I'
   802  0874  346E               	retlw	110	;'n'
   803  0875  3469               	retlw	105	;'i'
   804  0876  3463               	retlw	99	;'c'
   805  0877  3469               	retlw	105	;'i'
   806  0878  3461               	retlw	97	;'a'
   807  0879  346C               	retlw	108	;'l'
   808  087A  3469               	retlw	105	;'i'
   809  087B  347A               	retlw	122	;'z'
   810  087C  3461               	retlw	97	;'a'
   811  087D  346E               	retlw	110	;'n'
   812  087E  3464               	retlw	100	;'d'
   813  087F  346F               	retlw	111	;'o'
   814  0880  342E               	retlw	46	;'.'
   815  0881  342E               	retlw	46	;'.'
   816  0882  342E               	retlw	46	;'.'
   817  0883  3400               	retlw	0
   818  0884                     STR_10:	
   819  0884  340A               	retlw	10
   820  0885  340D               	retlw	13
   821  0886  3470               	retlw	112	;'p'
   822  0887  3477               	retlw	119	;'w'
   823  0888  346D               	retlw	109	;'m'
   824  0889  3420               	retlw	32	;' '
   825  088A  343D               	retlw	61	;'='
   826  088B  3420               	retlw	32	;' '
   827  088C  3431               	retlw	49	;'1'
   828  088D  3430               	retlw	48	;'0'
   829  088E  3432               	retlw	50	;'2'
   830  088F  3433               	retlw	51	;'3'
   831  0890  340A               	retlw	10
   832  0891  340D               	retlw	13
   833  0892  3400               	retlw	0
   834  0893                     STR_8:	
   835  0893  340A               	retlw	10
   836  0894  340D               	retlw	13
   837  0895  3470               	retlw	112	;'p'
   838  0896  3477               	retlw	119	;'w'
   839  0897  346D               	retlw	109	;'m'
   840  0898  3420               	retlw	32	;' '
   841  0899  343D               	retlw	61	;'='
   842  089A  3420               	retlw	32	;' '
   843  089B  3438               	retlw	56	;'8'
   844  089C  3439               	retlw	57	;'9'
   845  089D  3436               	retlw	54	;'6'
   846  089E  340A               	retlw	10
   847  089F  340D               	retlw	13
   848  08A0  3400               	retlw	0
   849  08A1                     STR_7:	
   850  08A1  340A               	retlw	10
   851  08A2  340D               	retlw	13
   852  08A3  3470               	retlw	112	;'p'
   853  08A4  3477               	retlw	119	;'w'
   854  08A5  346D               	retlw	109	;'m'
   855  08A6  3420               	retlw	32	;' '
   856  08A7  343D               	retlw	61	;'='
   857  08A8  3420               	retlw	32	;' '
   858  08A9  3437               	retlw	55	;'7'
   859  08AA  3436               	retlw	54	;'6'
   860  08AB  3438               	retlw	56	;'8'
   861  08AC  340A               	retlw	10
   862  08AD  340D               	retlw	13
   863  08AE  3400               	retlw	0
   864  08AF                     STR_1:	
   865  08AF  340A               	retlw	10
   866  08B0  340D               	retlw	13
   867  08B1  3464               	retlw	100	;'d'
   868  08B2  3465               	retlw	101	;'e'
   869  08B3  3473               	retlw	115	;'s'
   870  08B4  346C               	retlw	108	;'l'
   871  08B5  3469               	retlw	105	;'i'
   872  08B6  3467               	retlw	103	;'g'
   873  08B7  3461               	retlw	97	;'a'
   874  08B8  3464               	retlw	100	;'d'
   875  08B9  346F               	retlw	111	;'o'
   876  08BA  340A               	retlw	10
   877  08BB  340D               	retlw	13
   878  08BC  3400               	retlw	0
   879  08BD                     STR_2:	
   880  08BD  340A               	retlw	10
   881  08BE  340D               	retlw	13
   882  08BF  3470               	retlw	112	;'p'
   883  08C0  3477               	retlw	119	;'w'
   884  08C1  346D               	retlw	109	;'m'
   885  08C2  3420               	retlw	32	;' '
   886  08C3  343D               	retlw	61	;'='
   887  08C4  3420               	retlw	32	;' '
   888  08C5  340A               	retlw	10
   889  08C6  340D               	retlw	13
   890  08C7  3400               	retlw	0
   891  08C8                     STR_18:	
   892  08C8  3444               	retlw	68	;'D'
   893  08C9  3465               	retlw	101	;'e'
   894  08CA  346C               	retlw	108	;'l'
   895  08CB  3474               	retlw	116	;'t'
   896  08CC  3461               	retlw	97	;'a'
   897  08CD  343A               	retlw	58	;':'
   898  08CE  3420               	retlw	32	;' '
   899  08CF  3400               	retlw	0
   900  08D0                     STR_17:	
   901  08D0  3452               	retlw	82	;'R'
   902  08D1  3450               	retlw	80	;'P'
   903  08D2  344D               	retlw	77	;'M'
   904  08D3  343A               	retlw	58	;':'
   905  08D4  3420               	retlw	32	;' '
   906  08D5  3400               	retlw	0
   907  08D6                     STR_14:	
   908  08D6  3425               	retlw	37	;'%'
   909  08D7  3430               	retlw	48	;'0'
   910  08D8  3434               	retlw	52	;'4'
   911  08D9  3464               	retlw	100	;'d'
   912  08DA  3400               	retlw	0
   913  08DB                     __end_of__stringdata:	
   914                           
   915                           ; #config settings
   916  0000                     
   917                           	psect	cinit
   918  0015                     start_initialization:	
   919  0015                     __initialization:	
   920                           
   921                           ; Clear objects allocated to BANK0
   922  0015  1383               	bcf	3,7	;select IRP bank0
   923  0016  305F               	movlw	low __pbssBANK0
   924  0017  0084               	movwf	4
   925  0018  306F               	movlw	low (__pbssBANK0+16)
   926  0019  160A  118A  22B0  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to BANK1
   929  001E  30A0               	movlw	low __pbssBANK1
   930  001F  0084               	movwf	4
   931  0020  30C5               	movlw	low (__pbssBANK1+37)
   932  0021  160A  118A  22B0  120A  118A  	fcall	clear_ram0
   933                           
   934                           ; Clear objects allocated to BANK3
   935  0026  1783               	bsf	3,7	;select IRP bank2
   936  0027  3090               	movlw	low __pbssBANK3
   937  0028  0084               	movwf	4
   938  0029  30A7               	movlw	low (__pbssBANK3+23)
   939  002A  160A  118A  22B0  120A  118A  	fcall	clear_ram0
   940                           
   941                           ; Initialize objects allocated to BANK1
   942  002F  1383               	bcf	3,7	;select IRP bank0
   943  0030  30EE               	movlw	low (__pdataBANK1+7)
   944  0031  00FD               	movwf	btemp+-1
   945  0032  3007               	movlw	high __pidataBANK1
   946  0033  00FE               	movwf	btemp
   947  0034  30F9               	movlw	low __pidataBANK1
   948  0035  00FF               	movwf	btemp+1
   949  0036  30E7               	movlw	low __pdataBANK1
   950  0037  0084               	movwf	4
   951  0038  160A  118A  22E4   	fcall	init_ram0
   952  003B                     end_of_initialization:	
   953                           ;End of C runtime variable initialization code
   954                           
   955  003B                     __end_of__initialization:	
   956  003B  0183               	clrf	3
   957  003C  120A  158A  2D1D   	ljmp	_main	;jump to C main() function
   958                           
   959                           	psect	bssBANK0
   960  005F                     __pbssBANK0:	
   961  005F                     _fitemp:	
   962  005F                     	ds	3
   963  0062                     _temp:	
   964  0062                     	ds	3
   965  0065                     _x:	
   966  0065                     	ds	3
   967  0068                     _y:	
   968  0068                     	ds	3
   969  006B                     _deltaV:	
   970  006B                     	ds	2
   971  006D                     _pwm:	
   972  006D                     	ds	2
   973                           
   974                           	psect	bssBANK1
   975  00A0                     __pbssBANK1:	
   976  00A0                     _ativa_fan:	
   977  00A0                     	ds	3
   978  00A3                     _fop_rule1:	
   979  00A3                     	ds	3
   980  00A6                     _fop_rule2:	
   981  00A6                     	ds	3
   982  00A9                     _fop_rule3:	
   983  00A9                     	ds	3
   984  00AC                     _sum:	
   985  00AC                     	ds	3
   986  00AF                     _tf:	
   987  00AF                     	ds	3
   988  00B2                     _total_area:	
   989  00B2                     	ds	3
   990  00B5                     _ADCResult:	
   991  00B5                     	ds	2
   992  00B7                     _contador_rb6:	
   993  00B7                     	ds	2
   994  00B9                     _contagens_tm0:	
   995  00B9                     	ds	2
   996  00BB                     _pulsos:	
   997  00BB                     	ds	2
   998  00BD                     _rpm:	
   999  00BD                     	ds	2
  1000  00BF                     _status:	
  1001  00BF                     	ds	2
  1002  00C1                     _temp_lida:	
  1003  00C1                     	ds	2
  1004  00C3                     _tempo_rb6:	
  1005  00C3                     	ds	2
  1006                           
  1007                           	psect	dataBANK1
  1008  00E7                     __pdataBANK1:	
  1009  00E7                     _setpoint:	
  1010  00E7                     	ds	3
  1011  00EA                     _pas_cooler:	
  1012  00EA                     	ds	2
  1013  00EC                     _setpointUI:	
  1014  00EC                     	ds	2
  1015                           
  1016                           	psect	bssBANK3
  1017  0190                     __pbssBANK3:	
  1018  0190                     _derro:	
  1019  0190                     	ds	3
  1020  0193                     _display_pwm:	
  1021  0193                     	ds	10
  1022  019D                     _display_rpm:	
  1023  019D                     	ds	10
  1024                           
  1025                           	psect	clrtext
  1026  12B0                     clear_ram0:	
  1027                           ;	Called with FSR containing the base address, and
  1028                           ;	W with the last address+1
  1029                           
  1030  12B0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1031  12B1                     clrloop0:	
  1032  12B1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1033  12B2  0A84               	incf	4,f	;increment pointer
  1034  12B3  0604               	xorwf	4,w	;XOR with final address
  1035  12B4  1903               	btfsc	3,2	;have we reached the end yet?
  1036  12B5  3400               	retlw	0	;all done for this memory range, return
  1037  12B6  0604               	xorwf	4,w	;XOR again to restore value
  1038  12B7  2AB1               	goto	clrloop0	;do the next byte
  1039                           
  1040                           	psect	inittext
  1041  12E0                     init_fetch0:	
  1042                           ;	Called with low address in FSR and high address in W
  1043                           
  1044  12E0  087E               	movf	126,w
  1045  12E1  008A               	movwf	10
  1046  12E2  087F               	movf	127,w
  1047  12E3  0082               	movwf	2
  1048  12E4                     init_ram0:	
  1049                           ;Called with:
  1050                           ;	high address of idata address in btemp 
  1051                           ;	low address of idata address in btemp+1 
  1052                           ;	low address of data in FSR
  1053                           ;	high address + 1 of data in btemp-1
  1054                           
  1055  12E4  22E0  160A  118A   	fcall	init_fetch0
  1056  12E7  0080               	movwf	0
  1057  12E8  0A84               	incf	4,f
  1058  12E9  0804               	movf	4,w
  1059  12EA  067D               	xorwf	125,w
  1060  12EB  1903               	btfsc	3,2
  1061  12EC  3400               	retlw	0
  1062  12ED  0AFF               	incf	127,f
  1063  12EE  1903               	btfsc	3,2
  1064  12EF  0AFE               	incf	126,f
  1065  12F0  2AE4               	goto	init_ram0
  1066                           
  1067                           	psect	cstackBANK1
  1068  00C5                     __pcstackBANK1:	
  1069  00C5                     ?_PWM_DutyCycle2:	
  1070  00C5                     ??_TIMER0_Set:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  00C5                     ??_TIMER0_Init:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  00C5                     ??_ADC_Init:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  00C5                     ??_PWM_Init:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  00C5                     ?_LCD_Cursor:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  00C5                     ?_PWM_DutyCycle1:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  00C5                     ??_isdigit:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  00C5                     ??_USART_WriteChar:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  00C5                     ??_LCD_WriteCmd:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  00C5                     ??_LCD_WriteData:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  00C5                     ?___wmul:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  00C5                     ?___lwdiv:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106  00C5                     ?___aldiv:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109  00C5                     USART_WriteChar@byte:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112  00C5                     TIMER0_Set@contagens:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  00C5                     LCD_Cursor@Col:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  00C5                     _isdigit$1448:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  00C5                     PWM_DutyCycle1@valor:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  00C5                     PWM_DutyCycle2@valor:	
  1125                           ; 2 bytes @ 0x0
  1126                           
  1127  00C5                     ___wmul@multiplier:	
  1128                           ; 2 bytes @ 0x0
  1129                           
  1130  00C5                     ___lwdiv@divisor:	
  1131                           ; 2 bytes @ 0x0
  1132                           
  1133  00C5                     ___aldiv@divisor:	
  1134                           ; 2 bytes @ 0x0
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x0
  1138  00C5                     	ds	1
  1139  00C6                     ?_USART_WriteString:	
  1140  00C6                     ??_LCD_Cursor:	
  1141                           ; 0 bytes @ 0x1
  1142                           
  1143  00C6                     LCD_WriteCmd@Byte:	
  1144                           ; 0 bytes @ 0x1
  1145                           
  1146  00C6                     LCD_WriteData@Byte:	
  1147                           ; 1 bytes @ 0x1
  1148                           
  1149  00C6                     isdigit@c:	
  1150                           ; 1 bytes @ 0x1
  1151                           
  1152  00C6                     USART_WriteString@str:	
  1153                           ; 1 bytes @ 0x1
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x1
  1157  00C6                     	ds	1
  1158  00C7                     ??_PWM_DutyCycle2:	
  1159  00C7                     ??_LCD_Init:	
  1160                           ; 0 bytes @ 0x2
  1161                           
  1162  00C7                     ?_LCD_WriteString:	
  1163                           ; 0 bytes @ 0x2
  1164                           
  1165  00C7                     ??_PWM_DutyCycle1:	
  1166                           ; 0 bytes @ 0x2
  1167                           
  1168  00C7                     ??_LCD_Clear:	
  1169                           ; 0 bytes @ 0x2
  1170                           
  1171  00C7                     LCD_Cursor@Row:	
  1172                           ; 0 bytes @ 0x2
  1173                           
  1174  00C7                     LCD_WriteString@Str:	
  1175                           ; 1 bytes @ 0x2
  1176                           
  1177  00C7                     ___wmul@multiplicand:	
  1178                           ; 2 bytes @ 0x2
  1179                           
  1180  00C7                     ___lwdiv@dividend:	
  1181                           ; 2 bytes @ 0x2
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x2
  1185  00C7                     	ds	1
  1186  00C8                     ??_USART_WriteString:	
  1187                           
  1188                           ; 0 bytes @ 0x3
  1189  00C8                     	ds	1
  1190  00C9                     ??_LCD_WriteString:	
  1191  00C9                     ??___wmul:	
  1192                           ; 0 bytes @ 0x4
  1193                           
  1194  00C9                     ??___lwdiv:	
  1195                           ; 0 bytes @ 0x4
  1196                           
  1197  00C9                     ___wmul@product:	
  1198                           ; 0 bytes @ 0x4
  1199                           
  1200  00C9                     ___aldiv@dividend:	
  1201                           ; 2 bytes @ 0x4
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x4
  1205  00C9                     	ds	1
  1206  00CA                     ___lwdiv@quotient:	
  1207                           
  1208                           ; 2 bytes @ 0x5
  1209  00CA                     	ds	2
  1210  00CC                     ___lwdiv@counter:	
  1211                           
  1212                           ; 1 bytes @ 0x7
  1213  00CC                     	ds	1
  1214  00CD                     ??___aldiv:	
  1215  00CD                     ?___lwmod:	
  1216                           ; 0 bytes @ 0x8
  1217                           
  1218  00CD                     ___lwmod@divisor:	
  1219                           ; 2 bytes @ 0x8
  1220                           
  1221                           
  1222                           ; 2 bytes @ 0x8
  1223  00CD                     	ds	1
  1224  00CE                     ___aldiv@counter:	
  1225                           
  1226                           ; 1 bytes @ 0x9
  1227  00CE                     	ds	1
  1228  00CF                     ___aldiv@sign:	
  1229  00CF                     ___lwmod@dividend:	
  1230                           ; 1 bytes @ 0xA
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0xA
  1234  00CF                     	ds	1
  1235  00D0                     ___aldiv@quotient:	
  1236                           
  1237                           ; 4 bytes @ 0xB
  1238  00D0                     	ds	1
  1239  00D1                     ??___lwmod:	
  1240                           
  1241                           ; 0 bytes @ 0xC
  1242  00D1                     	ds	1
  1243  00D2                     ___lwmod@counter:	
  1244                           
  1245                           ; 1 bytes @ 0xD
  1246  00D2                     	ds	1
  1247  00D3                     ?_sprintf:	
  1248  00D3                     sprintf@f:	
  1249                           ; 2 bytes @ 0xE
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0xE
  1253  00D3                     	ds	1
  1254  00D4                     ?_USART_Init:	
  1255  00D4                     USART_Init@BaudRate:	
  1256                           ; 0 bytes @ 0xF
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0xF
  1260  00D4                     	ds	2
  1261  00D6                     ??_sprintf:	
  1262                           
  1263                           ; 0 bytes @ 0x11
  1264  00D6                     	ds	2
  1265  00D8                     ??_USART_Init:	
  1266                           
  1267                           ; 0 bytes @ 0x13
  1268  00D8                     	ds	1
  1269  00D9                     sprintf@ap:	
  1270                           
  1271                           ; 1 bytes @ 0x14
  1272  00D9                     	ds	1
  1273  00DA                     sprintf@prec:	
  1274                           
  1275                           ; 1 bytes @ 0x15
  1276  00DA                     	ds	1
  1277  00DB                     sprintf@_val:	
  1278                           
  1279                           ; 4 bytes @ 0x16
  1280  00DB                     	ds	4
  1281  00DF                     sprintf@flag:	
  1282                           
  1283                           ; 1 bytes @ 0x1A
  1284  00DF                     	ds	1
  1285  00E0                     sprintf@width:	
  1286                           
  1287                           ; 2 bytes @ 0x1B
  1288  00E0                     	ds	2
  1289  00E2                     sprintf@sp:	
  1290                           
  1291                           ; 1 bytes @ 0x1D
  1292  00E2                     	ds	1
  1293  00E3                     sprintf@c:	
  1294                           
  1295                           ; 1 bytes @ 0x1E
  1296  00E3                     	ds	1
  1297  00E4                     ??_main:	
  1298                           
  1299                           ; 0 bytes @ 0x1F
  1300  00E4                     	ds	3
  1301                           
  1302                           	psect	cstackCOMMON
  1303  0070                     __pcstackCOMMON:	
  1304  0070                     ?_TIMER0_Set:	
  1305  0070                     ?_TIMER0_Init:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0070                     ?_ADC_Init:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_PWM_Init:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?_LCD_Init:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_LCD_Clear:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_isdigit:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ?_Fuzzy:	
  1324                           ; 1 bit 
  1325                           
  1326  0070                     ?_ISR:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_main:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?_USART_WriteChar:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ?_LCD_WriteCmd:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?_LCD_WriteData:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?___ftge:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?i1_USART_WriteChar:	
  1345                           ; 1 bit 
  1346                           
  1347  0070                     ??i1_USART_WriteChar:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0070                     ?i1_TIMER0_Set:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0070                     ??i1_TIMER0_Set:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?i1_PWM_DutyCycle2:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ?_USART_ReceiveChar:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?i1___lwdiv:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?___ftpack:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ?___ftneg:	
  1369                           ; 3 bytes @ 0x0
  1370                           
  1371  0070                     ?___fttol:	
  1372                           ; 3 bytes @ 0x0
  1373                           
  1374  0070                     i1USART_WriteChar@byte:	
  1375                           ; 4 bytes @ 0x0
  1376                           
  1377  0070                     i1TIMER0_Set@contagens:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     i1PWM_DutyCycle2@valor:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     i1___lwdiv@divisor:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386  0070                     ___ftpack@arg:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0070                     ___ftge@ff1:	
  1390                           ; 3 bytes @ 0x0
  1391                           
  1392  0070                     ___ftneg@f1:	
  1393                           ; 3 bytes @ 0x0
  1394                           
  1395  0070                     ___fttol@f1:	
  1396                           ; 3 bytes @ 0x0
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x0
  1400  0070                     	ds	1
  1401  0071                     ?i1_USART_WriteString:	
  1402  0071                     i1USART_WriteString@str:	
  1403                           ; 0 bytes @ 0x1
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x1
  1407  0071                     	ds	1
  1408  0072                     ??i1_PWM_DutyCycle2:	
  1409  0072                     i1___lwdiv@dividend:	
  1410                           ; 0 bytes @ 0x2
  1411                           
  1412                           
  1413                           ; 2 bytes @ 0x2
  1414  0072                     	ds	1
  1415  0073                     ??_USART_ReceiveChar:	
  1416  0073                     ??___ftneg:	
  1417                           ; 0 bytes @ 0x3
  1418                           
  1419  0073                     ??i1_USART_WriteString:	
  1420                           ; 0 bytes @ 0x3
  1421                           
  1422  0073                     ___ftpack@exp:	
  1423                           ; 0 bytes @ 0x3
  1424                           
  1425  0073                     ___ftge@ff2:	
  1426                           ; 1 bytes @ 0x3
  1427                           
  1428                           
  1429                           ; 3 bytes @ 0x3
  1430  0073                     	ds	1
  1431  0074                     ??___fttol:	
  1432  0074                     ??i1___lwdiv:	
  1433                           ; 0 bytes @ 0x4
  1434                           
  1435  0074                     USART_ReceiveChar@byte:	
  1436                           ; 0 bytes @ 0x4
  1437                           
  1438  0074                     ___ftpack@sign:	
  1439                           ; 1 bytes @ 0x4
  1440                           
  1441                           
  1442                           ; 1 bytes @ 0x4
  1443  0074                     	ds	1
  1444  0075                     ??___ftpack:	
  1445  0075                     i1___lwdiv@quotient:	
  1446                           ; 0 bytes @ 0x5
  1447                           
  1448                           
  1449                           ; 2 bytes @ 0x5
  1450  0075                     	ds	1
  1451  0076                     ??___ftge:	
  1452                           
  1453                           ; 0 bytes @ 0x6
  1454  0076                     	ds	1
  1455  0077                     i1___lwdiv@counter:	
  1456                           
  1457                           ; 1 bytes @ 0x7
  1458  0077                     	ds	1
  1459  0078                     ?i1___wmul:	
  1460  0078                     ?___ftadd:	
  1461                           ; 2 bytes @ 0x8
  1462                           
  1463  0078                     ?___ftmul:	
  1464                           ; 3 bytes @ 0x8
  1465                           
  1466  0078                     ?___lwtoft:	
  1467                           ; 3 bytes @ 0x8
  1468                           
  1469  0078                     ___fttol@sign1:	
  1470                           ; 3 bytes @ 0x8
  1471                           
  1472  0078                     ___lwtoft@c:	
  1473                           ; 1 bytes @ 0x8
  1474                           
  1475  0078                     i1___wmul@multiplier:	
  1476                           ; 2 bytes @ 0x8
  1477                           
  1478  0078                     ___ftadd@f1:	
  1479                           ; 2 bytes @ 0x8
  1480                           
  1481  0078                     ___ftmul@f1:	
  1482                           ; 3 bytes @ 0x8
  1483                           
  1484                           
  1485                           ; 3 bytes @ 0x8
  1486  0078                     	ds	1
  1487  0079                     ___fttol@lval:	
  1488                           
  1489                           ; 4 bytes @ 0x9
  1490  0079                     	ds	1
  1491  007A                     i1___wmul@multiplicand:	
  1492                           
  1493                           ; 2 bytes @ 0xA
  1494  007A                     	ds	1
  1495  007B                     ??___lwtoft:	
  1496  007B                     ___ftadd@f2:	
  1497                           ; 0 bytes @ 0xB
  1498                           
  1499  007B                     ___ftmul@f2:	
  1500                           ; 3 bytes @ 0xB
  1501                           
  1502                           
  1503                           ; 3 bytes @ 0xB
  1504  007B                     	ds	1
  1505  007C                     ??_max_val:	
  1506  007C                     ??i1___wmul:	
  1507                           ; 0 bytes @ 0xC
  1508                           
  1509  007C                     i1___wmul@product:	
  1510                           ; 0 bytes @ 0xC
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0xC
  1514  007C                     	ds	1
  1515  007D                     ___fttol@exp1:	
  1516                           
  1517                           ; 1 bytes @ 0xD
  1518  007D                     	ds	1
  1519  007E                     ??_trimf:	
  1520  007E                     ??_trapmf:	
  1521                           ; 0 bytes @ 0xE
  1522                           
  1523  007E                     ??_Fuzzy:	
  1524                           ; 0 bytes @ 0xE
  1525                           
  1526                           
  1527                           	psect	cstackBANK0
  1528  0020                     __pcstackBANK0:	
  1529                           ; 0 bytes @ 0xE
  1530                           
  1531  0020                     ??___ftadd:	
  1532  0020                     ??___ftmul:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0020                     ?_max_val:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0020                     max_val@a:	
  1539                           ; 3 bytes @ 0x0
  1540                           
  1541                           
  1542                           ; 3 bytes @ 0x0
  1543  0020                     	ds	3
  1544  0023                     max_val@b:	
  1545                           
  1546                           ; 3 bytes @ 0x3
  1547  0023                     	ds	1
  1548  0024                     ___ftadd@sign:	
  1549  0024                     ___ftmul@exp:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552                           
  1553                           ; 1 bytes @ 0x4
  1554  0024                     	ds	1
  1555  0025                     ___ftadd@exp2:	
  1556  0025                     ___ftmul@f3_as_product:	
  1557                           ; 1 bytes @ 0x5
  1558                           
  1559                           
  1560                           ; 3 bytes @ 0x5
  1561  0025                     	ds	1
  1562  0026                     ___ftadd@exp1:	
  1563                           
  1564                           ; 1 bytes @ 0x6
  1565  0026                     	ds	1
  1566  0027                     ?___ftdiv:	
  1567  0027                     ___ftdiv@f2:	
  1568                           ; 3 bytes @ 0x7
  1569                           
  1570                           
  1571                           ; 3 bytes @ 0x7
  1572  0027                     	ds	1
  1573  0028                     ___ftmul@cntr:	
  1574                           
  1575                           ; 1 bytes @ 0x8
  1576  0028                     	ds	1
  1577  0029                     ___ftmul@sign:	
  1578                           
  1579                           ; 1 bytes @ 0x9
  1580  0029                     	ds	1
  1581  002A                     ___ftdiv@f1:	
  1582                           
  1583                           ; 3 bytes @ 0xA
  1584  002A                     	ds	3
  1585  002D                     ??___ftdiv:	
  1586                           
  1587                           ; 0 bytes @ 0xD
  1588  002D                     	ds	4
  1589  0031                     ___ftdiv@cntr:	
  1590                           
  1591                           ; 1 bytes @ 0x11
  1592  0031                     	ds	1
  1593  0032                     ___ftdiv@f3:	
  1594                           
  1595                           ; 3 bytes @ 0x12
  1596  0032                     	ds	3
  1597  0035                     ___ftdiv@exp:	
  1598                           
  1599                           ; 1 bytes @ 0x15
  1600  0035                     	ds	1
  1601  0036                     ___ftdiv@sign:	
  1602                           
  1603                           ; 1 bytes @ 0x16
  1604  0036                     	ds	1
  1605  0037                     ?_trimf:	
  1606  0037                     ?_trapmf:	
  1607                           ; 3 bytes @ 0x17
  1608                           
  1609  0037                     trimf@x:	
  1610                           ; 3 bytes @ 0x17
  1611                           
  1612  0037                     trapmf@x:	
  1613                           ; 3 bytes @ 0x17
  1614                           
  1615                           
  1616                           ; 3 bytes @ 0x17
  1617  0037                     	ds	3
  1618  003A                     trimf@a:	
  1619  003A                     trapmf@a:	
  1620                           ; 3 bytes @ 0x1A
  1621                           
  1622                           
  1623                           ; 3 bytes @ 0x1A
  1624  003A                     	ds	3
  1625  003D                     trimf@b:	
  1626  003D                     trapmf@b:	
  1627                           ; 3 bytes @ 0x1D
  1628                           
  1629                           
  1630                           ; 3 bytes @ 0x1D
  1631  003D                     	ds	3
  1632  0040                     trimf@c:	
  1633  0040                     trapmf@c:	
  1634                           ; 3 bytes @ 0x20
  1635                           
  1636                           
  1637                           ; 3 bytes @ 0x20
  1638  0040                     	ds	3
  1639  0043                     trimf@ua:	
  1640  0043                     trapmf@d:	
  1641                           ; 3 bytes @ 0x23
  1642                           
  1643                           
  1644                           ; 3 bytes @ 0x23
  1645  0043                     	ds	3
  1646  0046                     trapmf@ua:	
  1647                           
  1648                           ; 3 bytes @ 0x26
  1649  0046                     	ds	3
  1650  0049                     Fuzzy@tip:	
  1651                           
  1652                           ; 3 bytes @ 0x29
  1653  0049                     	ds	3
  1654  004C                     Fuzzy@a:	
  1655                           
  1656                           ; 2 bytes @ 0x2C
  1657  004C                     	ds	2
  1658  004E                     Fuzzy@a_233:	
  1659                           
  1660                           ; 2 bytes @ 0x2E
  1661  004E                     	ds	2
  1662  0050                     Fuzzy@a_234:	
  1663                           
  1664                           ; 2 bytes @ 0x30
  1665  0050                     	ds	2
  1666  0052                     Fuzzy@mantem:	
  1667                           
  1668                           ; 3 bytes @ 0x32
  1669  0052                     	ds	3
  1670  0055                     Fuzzy@reduz:	
  1671                           
  1672                           ; 3 bytes @ 0x35
  1673  0055                     	ds	3
  1674  0058                     Fuzzy@aumenta:	
  1675                           
  1676                           ; 3 bytes @ 0x38
  1677  0058                     	ds	3
  1678  005B                     ??_ISR:	
  1679                           
  1680                           ; 0 bytes @ 0x3B
  1681  005B                     	ds	4
  1682                           
  1683                           	psect	maintext
  1684  0D1D                     __pmaintext:	
  1685 ;;
  1686 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1687 ;;
  1688 ;; *************** function _main *****************
  1689 ;; Defined at:
  1690 ;;		line 457 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 17F/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1704 ;;      Params:         0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0
  1706 ;;      Temps:          0       0       3       0       0
  1707 ;;      Totals:         0       0       3       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels required when called:    7
  1710 ;; This function calls:
  1711 ;;		_ADC_Init
  1712 ;;		_LCD_Clear
  1713 ;;		_LCD_Cursor
  1714 ;;		_LCD_Init
  1715 ;;		_LCD_WriteString
  1716 ;;		_PWM_DutyCycle1
  1717 ;;		_PWM_DutyCycle2
  1718 ;;		_PWM_Init
  1719 ;;		_TIMER0_Init
  1720 ;;		_TIMER0_Set
  1721 ;;		_USART_Init
  1722 ;;		_USART_WriteString
  1723 ;;		_sprintf
  1724 ;; This function is called by:
  1725 ;;		Startup code after reset
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _main
  1731  0D1D                     _main:	
  1732                           
  1733                           ;main.c: 459: TRISA = 0b00000001;
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1737  0D1D  3001               	movlw	1
  1738  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0D20  0085               	movwf	5	;volatile
  1741                           
  1742                           ;main.c: 460: PORTA = 0b00000001;
  1743  0D21  3001               	movlw	1
  1744  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0D24  0085               	movwf	5	;volatile
  1747                           
  1748                           ;main.c: 461: TRISB = 0b00000000;
  1749  0D25  1683               	bsf	3,5	;RP0=1, select bank1
  1750  0D26  1303               	bcf	3,6	;RP1=0, select bank1
  1751  0D27  0186               	clrf	6	;volatile
  1752                           
  1753                           ;main.c: 462: PORTB = 0b00000000;
  1754  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0D2A  0186               	clrf	6	;volatile
  1757                           
  1758                           ;main.c: 463: TRISC = 0b10000001;
  1759  0D2B  3081               	movlw	129
  1760  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0D2E  0087               	movwf	7	;volatile
  1763                           
  1764                           ;main.c: 464: PORTC = 0b11000000;
  1765  0D2F  30C0               	movlw	192
  1766  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0D32  0087               	movwf	7	;volatile
  1769                           
  1770                           ;main.c: 465: TRISD = 0b00000000;
  1771  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0D34  1303               	bcf	3,6	;RP1=0, select bank1
  1773  0D35  0188               	clrf	8	;volatile
  1774                           
  1775                           ;main.c: 466: PORTD = 0b00000000;
  1776  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0D38  0188               	clrf	8	;volatile
  1779                           
  1780                           ;main.c: 467: TRISE = 0b00000000;
  1781  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0D3B  0189               	clrf	9	;volatile
  1784                           
  1785                           ;main.c: 468: PORTE = 0b00000000;
  1786  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0D3E  0189               	clrf	9	;volatile
  1789                           
  1790                           ;main.c: 471: T1CON = 0x03;
  1791  0D3F  3003               	movlw	3
  1792  0D40  0090               	movwf	16	;volatile
  1793                           
  1794                           ;main.c: 472: TMR1L = 0x00;
  1795  0D41  018E               	clrf	14	;volatile
  1796                           
  1797                           ;main.c: 473: TMR1H = 0x00;
  1798  0D42  018F               	clrf	15	;volatile
  1799                           
  1800                           ;main.c: 476: USART_Init(115200);
  1801  0D43  3000               	movlw	0
  1802  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0D45  1303               	bcf	3,6	;RP1=0, select bank1
  1804  0D46  00D7               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1805  0D47  3001               	movlw	1
  1806  0D48  00D6               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1807  0D49  30C2               	movlw	194
  1808  0D4A  00D5               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1809  0D4B  3000               	movlw	0
  1810  0D4C  00D4               	movwf	USART_Init@BaudRate^(0+128)
  1811  0D4D  160A  118A  25C9  120A  158A  	fcall	_USART_Init
  1812                           
  1813                           ;main.c: 477: TIMER0_Init();
  1814  0D52  160A  118A  22B8  120A  158A  	fcall	_TIMER0_Init
  1815                           
  1816                           ;main.c: 478: ADC_Init();
  1817  0D57  160A  118A  22F1  120A  158A  	fcall	_ADC_Init
  1818                           
  1819                           ;main.c: 479: PWM_Init();
  1820  0D5C  160A  118A  2441  120A  158A  	fcall	_PWM_Init
  1821                           
  1822                           ;main.c: 480: LCD_Init();
  1823  0D61  160A  118A  267A  120A  158A  	fcall	_LCD_Init
  1824                           
  1825                           ;main.c: 483: INTCONbits.PEIE = 1;
  1826  0D66  170B               	bsf	11,6	;volatile
  1827                           
  1828                           ;main.c: 484: INTCONbits.GIE = 1;
  1829  0D67  178B               	bsf	11,7	;volatile
  1830                           
  1831                           ;main.c: 487: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1832  0D68  3033               	movlw	low (STR_11-__stringbase)
  1833  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0D6B  00C6               	movwf	USART_WriteString@str^(0+128)
  1836  0D6C  3080               	movlw	128
  1837  0D6D  00C7               	movwf	(USART_WriteString@str+1)^(0+128)
  1838  0D6E  160A  118A  24E4  120A  158A  	fcall	_USART_WriteString
  1839                           
  1840                           ;main.c: 488: USART_WriteString("USART: 115.200bps\n\r");
  1841  0D73  3050               	movlw	low (STR_12-__stringbase)
  1842  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0D75  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0D76  00C6               	movwf	USART_WriteString@str^(0+128)
  1845  0D77  3080               	movlw	128
  1846  0D78  00C7               	movwf	(USART_WriteString@str+1)^(0+128)
  1847  0D79  160A  118A  24E4  120A  158A  	fcall	_USART_WriteString
  1848                           
  1849                           ;main.c: 491: LCD_Init();
  1850  0D7E  160A  118A  267A  120A  158A  	fcall	_LCD_Init
  1851                           
  1852                           ;main.c: 492: LCD_Cursor(0,0);
  1853  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  1855  0D85  01C5               	clrf	LCD_Cursor@Col^(0+128)
  1856  0D86  3000               	movlw	0
  1857  0D87  160A  118A  2399  120A  158A  	fcall	_LCD_Cursor
  1858                           
  1859                           ;main.c: 493: LCD_WriteString("Inicializando...");
  1860  0D8C  3064               	movlw	low (STR_13-__stringbase)
  1861  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  1862  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  1863  0D8F  00C7               	movwf	LCD_WriteString@Str^(0+128)
  1864  0D90  3080               	movlw	128
  1865  0D91  00C8               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1866  0D92  160A  118A  24B3  120A  158A  	fcall	_LCD_WriteString
  1867                           
  1868                           ;main.c: 496: PWM_DutyCycle1(0);
  1869  0D97  3000               	movlw	0
  1870  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1872  0D9A  00C5               	movwf	PWM_DutyCycle1@valor^(0+128)
  1873  0D9B  3000               	movlw	0
  1874  0D9C  00C6               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1875  0D9D  160A  118A  23B9  120A  158A  	fcall	_PWM_DutyCycle1
  1876                           
  1877                           ;main.c: 497: PWM_DutyCycle2(0);
  1878  0DA2  3000               	movlw	0
  1879  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0DA4  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0DA5  00C5               	movwf	PWM_DutyCycle2@valor^(0+128)
  1882  0DA6  3000               	movlw	0
  1883  0DA7  00C6               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1884  0DA8  160A  118A  23DA  120A  158A  	fcall	_PWM_DutyCycle2
  1885                           
  1886                           ;main.c: 500: TIMER0_Set(238);
  1887  0DAD  30EE               	movlw	238
  1888  0DAE  160A  118A  22A8  120A  158A  	fcall	_TIMER0_Set
  1889                           
  1890                           ;main.c: 503: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1891  0DB3  3018               	movlw	24
  1892  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0DB6  00E6               	movwf	(??_main^(0+128)+2)
  1895  0DB7  3061               	movlw	97
  1896  0DB8  00E5               	movwf	(??_main^(0+128)+1)
  1897  0DB9  306E               	movlw	110
  1898  0DBA  00E4               	movwf	??_main^(0+128)
  1899  0DBB                     u4047:	
  1900  0DBB  0BE4               	decfsz	??_main^(0+128),f
  1901  0DBC  2DBB               	goto	u4047
  1902  0DBD  0BE5               	decfsz	(??_main^(0+128)+1),f
  1903  0DBE  2DBB               	goto	u4047
  1904  0DBF  0BE6               	decfsz	(??_main^(0+128)+2),f
  1905  0DC0  2DBB               	goto	u4047
  1906  0DC1  0000               	nop
  1907  0DC2                     l198:	
  1908                           ;main.c: 506: while(1)
  1909                           
  1910                           
  1911                           ;main.c: 507: {
  1912                           ;main.c: 511: sprintf(display_rpm,"%04d", rpm);
  1913  0DC2  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1914  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0DC4  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0DC5  00E4               	movwf	??_main^(0+128)
  1917  0DC6  0864               	movf	??_main^(0+128),w
  1918  0DC7  00D3               	movwf	sprintf@f^(0+128)
  1919  0DC8  083E               	movf	(_rpm+1)^(0+128),w
  1920  0DC9  01D5               	clrf	((?_sprintf+1)^(0+128)+1)
  1921  0DCA  07D5               	addwf	((?_sprintf+1)^(0+128)+1),f
  1922  0DCB  083D               	movf	_rpm^(0+128),w
  1923  0DCC  01D4               	clrf	(?_sprintf^(0+128)+1)
  1924  0DCD  07D4               	addwf	(?_sprintf^(0+128)+1),f
  1925  0DCE  309D               	movlw	_display_rpm& (0+255)
  1926  0DCF  120A  118A  2524  120A  158A  	fcall	_sprintf
  1927                           
  1928                           ;main.c: 512: sprintf(display_pwm,"%04d", deltaV);
  1929  0DD4  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1930  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0DD7  00E4               	movwf	??_main^(0+128)
  1933  0DD8  0864               	movf	??_main^(0+128),w
  1934  0DD9  00D3               	movwf	sprintf@f^(0+128)
  1935  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0DDC  086C               	movf	_deltaV+1,w
  1938  0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  1940  0DDF  01D5               	clrf	((?_sprintf+1)^(0+128)+1)
  1941  0DE0  07D5               	addwf	((?_sprintf+1)^(0+128)+1),f
  1942  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0DE3  086B               	movf	_deltaV,w
  1945  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0DE6  01D4               	clrf	(?_sprintf^(0+128)+1)
  1948  0DE7  07D4               	addwf	(?_sprintf^(0+128)+1),f
  1949  0DE8  3093               	movlw	_display_pwm& (0+255)
  1950  0DE9  120A  118A  2524  120A  158A  	fcall	_sprintf
  1951                           
  1952                           ;main.c: 516: USART_WriteString(display_rpm);
  1953  0DEE  309D               	movlw	_display_rpm& (0+255)
  1954  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  1956  0DF1  00C6               	movwf	USART_WriteString@str^(0+128)
  1957  0DF2  3001               	movlw	1
  1958  0DF3  00C7               	movwf	(USART_WriteString@str+1)^(0+128)
  1959  0DF4  160A  118A  24E4  120A  158A  	fcall	_USART_WriteString
  1960                           
  1961                           ;main.c: 517: USART_WriteString("\n\r");
  1962  0DF9  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1963  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0DFC  00C6               	movwf	USART_WriteString@str^(0+128)
  1966  0DFD  3080               	movlw	128
  1967  0DFE  00C7               	movwf	(USART_WriteString@str+1)^(0+128)
  1968  0DFF  160A  118A  24E4  120A  158A  	fcall	_USART_WriteString
  1969                           
  1970                           ;main.c: 520: LCD_Clear();
  1971  0E04  160A  118A  248A  120A  158A  	fcall	_LCD_Clear
  1972                           
  1973                           ;main.c: 521: LCD_Cursor(0,0);
  1974  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0E0B  01C5               	clrf	LCD_Cursor@Col^(0+128)
  1977  0E0C  3000               	movlw	0
  1978  0E0D  160A  118A  2399  120A  158A  	fcall	_LCD_Cursor
  1979                           
  1980                           ;main.c: 522: LCD_WriteString("RPM: ");
  1981  0E12  30C1               	movlw	low (STR_17-__stringbase)
  1982  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  1984  0E15  00C7               	movwf	LCD_WriteString@Str^(0+128)
  1985  0E16  3080               	movlw	128
  1986  0E17  00C8               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1987  0E18  160A  118A  24B3  120A  158A  	fcall	_LCD_WriteString
  1988                           
  1989                           ;main.c: 523: LCD_Cursor(0,6);
  1990  0E1D  3006               	movlw	6
  1991  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0E20  00E4               	movwf	??_main^(0+128)
  1994  0E21  0864               	movf	??_main^(0+128),w
  1995  0E22  00C5               	movwf	LCD_Cursor@Col^(0+128)
  1996  0E23  3000               	movlw	0
  1997  0E24  160A  118A  2399  120A  158A  	fcall	_LCD_Cursor
  1998                           
  1999                           ;main.c: 524: LCD_WriteString(display_rpm);
  2000  0E29  309D               	movlw	_display_rpm& (0+255)
  2001  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0E2C  00C7               	movwf	LCD_WriteString@Str^(0+128)
  2004  0E2D  3001               	movlw	1
  2005  0E2E  00C8               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2006  0E2F  160A  118A  24B3  120A  158A  	fcall	_LCD_WriteString
  2007                           
  2008                           ;main.c: 525: LCD_Cursor(1,0);
  2009  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0E35  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0E36  01C5               	clrf	LCD_Cursor@Col^(0+128)
  2012  0E37  3001               	movlw	1
  2013  0E38  160A  118A  2399  120A  158A  	fcall	_LCD_Cursor
  2014                           
  2015                           ;main.c: 526: LCD_WriteString("Delta: ");
  2016  0E3D  30B9               	movlw	low (STR_18-__stringbase)
  2017  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0E40  00C7               	movwf	LCD_WriteString@Str^(0+128)
  2020  0E41  3080               	movlw	128
  2021  0E42  00C8               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2022  0E43  160A  118A  24B3  120A  158A  	fcall	_LCD_WriteString
  2023                           
  2024                           ;main.c: 527: LCD_Cursor(1,6);
  2025  0E48  3006               	movlw	6
  2026  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0E4B  00E4               	movwf	??_main^(0+128)
  2029  0E4C  0864               	movf	??_main^(0+128),w
  2030  0E4D  00C5               	movwf	LCD_Cursor@Col^(0+128)
  2031  0E4E  3001               	movlw	1
  2032  0E4F  160A  118A  2399  120A  158A  	fcall	_LCD_Cursor
  2033                           
  2034                           ;main.c: 528: LCD_WriteString(display_pwm);
  2035  0E54  3093               	movlw	_display_pwm& (0+255)
  2036  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0E57  00C7               	movwf	LCD_WriteString@Str^(0+128)
  2039  0E58  3001               	movlw	1
  2040  0E59  00C8               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2041  0E5A  160A  118A  24B3  120A  158A  	fcall	_LCD_WriteString
  2042                           
  2043                           ;main.c: 530: _delay((unsigned long)((200)*(18432000/4000.0)));
  2044  0E5F  3005               	movlw	5
  2045  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  2046  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  2047  0E62  00E6               	movwf	(??_main^(0+128)+2)
  2048  0E63  30AD               	movlw	173
  2049  0E64  00E5               	movwf	(??_main^(0+128)+1)
  2050  0E65  30E0               	movlw	224
  2051  0E66  00E4               	movwf	??_main^(0+128)
  2052  0E67                     u4057:	
  2053  0E67  0BE4               	decfsz	??_main^(0+128),f
  2054  0E68  2E67               	goto	u4057
  2055  0E69  0BE5               	decfsz	(??_main^(0+128)+1),f
  2056  0E6A  2E67               	goto	u4057
  2057  0E6B  0BE6               	decfsz	(??_main^(0+128)+2),f
  2058  0E6C  2E67               	goto	u4057
  2059  0E6D  2DC2               	goto	l198
  2060  0E6E                     __end_of_main:	
  2061                           
  2062                           	psect	text1
  2063  0524                     __ptext1:	
  2064 ;; *************** function _sprintf *****************
  2065 ;; Defined at:
  2066 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  sp              1    wreg     PTR unsigned char 
  2069 ;;		 -> display_pwm(10), display_rpm(10), 
  2070 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2071 ;;		 -> STR_15(5), STR_14(5), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2074 ;;		 -> display_pwm(10), display_rpm(10), 
  2075 ;;  _val            4   22[BANK1 ] struct .
  2076 ;;  width           2   27[BANK1 ] int 
  2077 ;;  c               1   30[BANK1 ] char 
  2078 ;;  flag            1   26[BANK1 ] unsigned char 
  2079 ;;  prec            1   21[BANK1 ] char 
  2080 ;;  ap              1   20[BANK1 ] PTR void [1]
  2081 ;;		 -> ?_sprintf(2), 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2   14[BANK1 ] int 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       3       0       0
  2092 ;;      Locals:         0       0      11       0       0
  2093 ;;      Temps:          0       0       3       0       0
  2094 ;;      Totals:         0       0      17       0       0
  2095 ;;Total ram usage:       17 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    6
  2098 ;; This function calls:
  2099 ;;		___lwdiv
  2100 ;;		___lwmod
  2101 ;;		___wmul
  2102 ;;		_isdigit
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function _sprintf
  2110  0524                     _sprintf:	
  2111                           
  2112                           ;incstack = 0
  2113                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2114                           ;sprintf@sp stored from wreg
  2115  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0525  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0526  00E2               	movwf	sprintf@sp^(0+128)
  2118                           
  2119                           ;doprnt.c: 494: va_list ap;
  2120                           ;doprnt.c: 499: signed char c;
  2121                           ;doprnt.c: 501: int width;
  2122                           ;doprnt.c: 506: signed char prec;
  2123                           ;doprnt.c: 508: unsigned char flag;
  2124                           ;doprnt.c: 527: union {
  2125                           ;doprnt.c: 528: unsigned int _val;
  2126                           ;doprnt.c: 529: struct {
  2127                           ;doprnt.c: 530: const char * _cp;
  2128                           ;doprnt.c: 531: unsigned _len;
  2129                           ;doprnt.c: 532: } _str;
  2130                           ;doprnt.c: 533: } _val;
  2131                           ;doprnt.c: 542: *ap = __va_start();
  2132  0527  30D4               	movlw	(?_sprintf+1)& (0+255)
  2133  0528  00D6               	movwf	??_sprintf^(0+128)
  2134  0529  0856               	movf	??_sprintf^(0+128),w
  2135  052A  00D9               	movwf	sprintf@ap^(0+128)
  2136  052B                     l3082:	
  2137                           ;doprnt.c: 545: while(c = *f++) {
  2138                           
  2139  052B  3001               	movlw	1
  2140  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2141  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2142  052E  07D3               	addwf	sprintf@f^(0+128),f
  2143  052F  30FF               	movlw	-1
  2144  0530  0753               	addwf	sprintf@f^(0+128),w
  2145  0531  0084               	movwf	4
  2146  0532  120A  158A  200A  120A  118A  	fcall	stringdir
  2147  0537  00D6               	movwf	??_sprintf^(0+128)
  2148  0538  0856               	movf	??_sprintf^(0+128),w
  2149  0539  00E3               	movwf	sprintf@c^(0+128)
  2150  053A  08E3               	movf	sprintf@c^(0+128),f
  2151  053B  1903               	btfsc	3,2
  2152  053C  2ED4               	goto	l3084
  2153                           
  2154                           ;doprnt.c: 547: if(c != '%')
  2155  053D  0863               	movf	sprintf@c^(0+128),w
  2156  053E  3A25               	xorlw	37
  2157  053F  1903               	skipnz
  2158  0540  2D4D               	goto	l2986
  2159                           
  2160                           ;doprnt.c: 549: {
  2161                           ;doprnt.c: 550: ((*sp++ = (c)));
  2162  0541  0863               	movf	sprintf@c^(0+128),w
  2163  0542  00D6               	movwf	??_sprintf^(0+128)
  2164  0543  0862               	movf	sprintf@sp^(0+128),w
  2165  0544  0084               	movwf	4
  2166  0545  0856               	movf	??_sprintf^(0+128),w
  2167  0546  1783               	bsf	3,7	;select IRP bank2
  2168  0547  0080               	movwf	0
  2169  0548  3001               	movlw	1
  2170  0549  00D6               	movwf	??_sprintf^(0+128)
  2171  054A  0856               	movf	??_sprintf^(0+128),w
  2172  054B  07E2               	addwf	sprintf@sp^(0+128),f
  2173                           
  2174                           ;doprnt.c: 551: continue;
  2175  054C  2D2B               	goto	l3082
  2176  054D                     l2986:	
  2177                           
  2178                           ;doprnt.c: 552: }
  2179                           ;doprnt.c: 555: width = 0;
  2180  054D  01E0               	clrf	sprintf@width^(0+128)
  2181  054E  01E1               	clrf	(sprintf@width+1)^(0+128)
  2182                           
  2183                           ;doprnt.c: 557: flag = 0;
  2184  054F  01DF               	clrf	sprintf@flag^(0+128)
  2185                           
  2186                           ;doprnt.c: 560: switch(*f) {
  2187                           
  2188                           ;doprnt.c: 559: for(;;) {
  2189  0550  2D56               	goto	l2992
  2190  0551                     l475:	
  2191                           ;doprnt.c: 588: case '0':
  2192                           
  2193                           
  2194                           ;doprnt.c: 589: flag |= 0x04;
  2195  0551  155F               	bsf	sprintf@flag^(0+128),2
  2196                           
  2197                           ;doprnt.c: 590: f++;
  2198  0552  3001               	movlw	1
  2199  0553  00D6               	movwf	??_sprintf^(0+128)
  2200  0554  0856               	movf	??_sprintf^(0+128),w
  2201  0555  07D3               	addwf	sprintf@f^(0+128),f
  2202  0556                     l2992:	
  2203                           ;doprnt.c: 593: }
  2204                           
  2205                           ;doprnt.c: 591: continue;
  2206                           
  2207  0556  0853               	movf	sprintf@f^(0+128),w
  2208  0557  0084               	movwf	4
  2209  0558  120A  158A  200A  120A  118A  	fcall	stringdir
  2210                           
  2211                           ; Switch size 1, requested type "space"
  2212                           ; Number of cases is 1, Range of values is 48 to 48
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ; direct_byte           14    11 (fixed)
  2217                           ; jumptable            263     9 (fixed)
  2218                           ;	Chosen strategy is simple_byte
  2219  055D  3A30               	xorlw	48	; case 48
  2220  055E  1903               	skipnz
  2221  055F  2D51               	goto	l475
  2222  0560  2D61               	goto	l2994
  2223  0561                     l2994:	
  2224                           ;doprnt.c: 595: }
  2225                           
  2226                           ;doprnt.c: 594: break;
  2227                           
  2228                           
  2229                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2230  0561  0853               	movf	sprintf@f^(0+128),w
  2231  0562  0084               	movwf	4
  2232  0563  120A  158A  200A  120A  118A  	fcall	stringdir
  2233  0568  160A  118A  22D0  120A  118A  	fcall	_isdigit
  2234  056D  1C03               	btfss	3,0
  2235  056E  2DB1               	goto	l3008
  2236                           
  2237                           ;doprnt.c: 607: width = 0;
  2238  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0570  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0571  01E0               	clrf	sprintf@width^(0+128)
  2241  0572  01E1               	clrf	(sprintf@width+1)^(0+128)
  2242  0573                     l2998:	
  2243                           ;doprnt.c: 608: do {
  2244                           
  2245                           
  2246                           ;doprnt.c: 609: width *= 10;
  2247  0573  300A               	movlw	10
  2248  0574  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0575  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0576  00C5               	movwf	___wmul@multiplier^(0+128)
  2251  0577  3000               	movlw	0
  2252  0578  00C6               	movwf	(___wmul@multiplier^(0+128)+1)
  2253  0579  0861               	movf	(sprintf@width+1)^(0+128),w
  2254  057A  01C8               	clrf	(___wmul@multiplicand+1)^(0+128)
  2255  057B  07C8               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2256  057C  0860               	movf	sprintf@width^(0+128),w
  2257  057D  01C7               	clrf	___wmul@multiplicand^(0+128)
  2258  057E  07C7               	addwf	___wmul@multiplicand^(0+128),f
  2259  057F  160A  118A  2465  120A  118A  	fcall	___wmul
  2260  0584  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0585  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0586  0846               	movf	(?___wmul+1)^(0+128),w
  2263  0587  01E1               	clrf	(sprintf@width+1)^(0+128)
  2264  0588  07E1               	addwf	(sprintf@width+1)^(0+128),f
  2265  0589  0845               	movf	?___wmul^(0+128),w
  2266  058A  01E0               	clrf	sprintf@width^(0+128)
  2267  058B  07E0               	addwf	sprintf@width^(0+128),f
  2268                           
  2269                           ;doprnt.c: 610: width += *f++ - '0';
  2270  058C  0853               	movf	sprintf@f^(0+128),w
  2271  058D  0084               	movwf	4
  2272  058E  120A  158A  200A  120A  118A  	fcall	stringdir
  2273  0593  3ED0               	addlw	208
  2274  0594  00D6               	movwf	??_sprintf^(0+128)
  2275  0595  30FF               	movlw	255
  2276  0596  1803               	skipnc
  2277  0597  3000               	movlw	0
  2278  0598  00D7               	movwf	(??_sprintf^(0+128)+1)
  2279  0599  0856               	movf	??_sprintf^(0+128),w
  2280  059A  07E0               	addwf	sprintf@width^(0+128),f
  2281  059B  1803               	skipnc
  2282  059C  0AE1               	incf	(sprintf@width+1)^(0+128),f
  2283  059D  0857               	movf	(??_sprintf+1)^(0+128),w
  2284  059E  07E1               	addwf	(sprintf@width+1)^(0+128),f
  2285  059F  3001               	movlw	1
  2286  05A0  00D6               	movwf	??_sprintf^(0+128)
  2287  05A1  0856               	movf	??_sprintf^(0+128),w
  2288  05A2  07D3               	addwf	sprintf@f^(0+128),f
  2289                           
  2290                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2291  05A3  0853               	movf	sprintf@f^(0+128),w
  2292  05A4  0084               	movwf	4
  2293  05A5  120A  158A  200A  120A  118A  	fcall	stringdir
  2294  05AA  160A  118A  22D0  120A  118A  	fcall	_isdigit
  2295  05AF  1803               	btfsc	3,0
  2296  05B0  2D73               	goto	l2998
  2297  05B1                     l3008:	
  2298                           ;doprnt.c: 831: }
  2299                           
  2300                           ;doprnt.c: 822: continue;
  2301                           
  2302                           ;doprnt.c: 811: default:
  2303                           
  2304                           ;doprnt.c: 707: case 'i':
  2305                           ;doprnt.c: 708: break;
  2306                           
  2307                           ;doprnt.c: 706: case 'd':
  2308                           
  2309                           ;doprnt.c: 647: goto alldone;
  2310                           
  2311                           ;doprnt.c: 646: case 0:
  2312                           
  2313                           ;doprnt.c: 617: }
  2314                           ;doprnt.c: 644: switch(c = *f++) {
  2315                           
  2316  05B1  3001               	movlw	1
  2317  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  2318  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  2319  05B4  07D3               	addwf	sprintf@f^(0+128),f
  2320  05B5  30FF               	movlw	-1
  2321  05B6  0753               	addwf	sprintf@f^(0+128),w
  2322  05B7  0084               	movwf	4
  2323  05B8  120A  158A  200A  120A  118A  	fcall	stringdir
  2324  05BD  00E3               	movwf	sprintf@c^(0+128)
  2325                           
  2326                           ; Switch size 1, requested type "space"
  2327                           ; Number of cases is 3, Range of values is 0 to 105
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte           10     6 (average)
  2331                           ; jumptable            260     6 (fixed)
  2332                           ;	Chosen strategy is simple_byte
  2333  05BE  3A00               	xorlw	0	; case 0
  2334  05BF  1903               	skipnz
  2335  05C0  2ED4               	goto	l3084
  2336  05C1  3A64               	xorlw	100	; case 100
  2337  05C2  1903               	skipnz
  2338  05C3  2DC8               	goto	l3010
  2339  05C4  3A0D               	xorlw	13	; case 105
  2340  05C5  1903               	skipnz
  2341  05C6  2DC8               	goto	l3010
  2342  05C7  2D2B               	goto	l3082
  2343  05C8                     l3010:	
  2344                           
  2345                           ;doprnt.c: 1262: {
  2346                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2347  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  2348  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  2349  05CA  0859               	movf	sprintf@ap^(0+128),w
  2350  05CB  0084               	movwf	4
  2351  05CC  1383               	bcf	3,7	;select IRP bank0
  2352  05CD  0800               	movf	0,w
  2353  05CE  00DB               	movwf	sprintf@_val^(0+128)
  2354  05CF  0A84               	incf	4,f
  2355  05D0  0800               	movf	0,w
  2356  05D1  00DC               	movwf	(sprintf@_val+1)^(0+128)
  2357  05D2  3002               	movlw	2
  2358  05D3  00D6               	movwf	??_sprintf^(0+128)
  2359  05D4  0856               	movf	??_sprintf^(0+128),w
  2360  05D5  07D9               	addwf	sprintf@ap^(0+128),f
  2361                           
  2362                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2363  05D6  1FDC               	btfss	(sprintf@_val+1)^(0+128),7
  2364  05D7  2DE1               	goto	l3020
  2365                           
  2366                           ;doprnt.c: 1271: flag |= 0x03;
  2367  05D8  3003               	movlw	3
  2368  05D9  00D6               	movwf	??_sprintf^(0+128)
  2369  05DA  0856               	movf	??_sprintf^(0+128),w
  2370  05DB  04DF               	iorwf	sprintf@flag^(0+128),f
  2371                           
  2372                           ;doprnt.c: 1272: _val._val = -_val._val;
  2373  05DC  09DB               	comf	sprintf@_val^(0+128),f
  2374  05DD  09DC               	comf	(sprintf@_val+1)^(0+128),f
  2375  05DE  0ADB               	incf	sprintf@_val^(0+128),f
  2376  05DF  1903               	skipnz
  2377  05E0  0ADC               	incf	(sprintf@_val+1)^(0+128),f
  2378  05E1                     l3020:	
  2379                           
  2380                           ;doprnt.c: 1273: }
  2381                           ;doprnt.c: 1275: }
  2382                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2383  05E1  01E3               	clrf	sprintf@c^(0+128)
  2384  05E2  0AE3               	incf	sprintf@c^(0+128),f
  2385  05E3  0863               	movf	sprintf@c^(0+128),w
  2386  05E4  3A05               	xorlw	5
  2387  05E5  1903               	btfsc	3,2
  2388  05E6  2E08               	goto	l3032
  2389  05E7                     l3024:	
  2390                           
  2391                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2392  05E7  0863               	movf	sprintf@c^(0+128),w
  2393  05E8  00D6               	movwf	??_sprintf^(0+128)
  2394  05E9  0756               	addwf	??_sprintf^(0+128),w
  2395  05EA  3E01               	addlw	low (_dpowers-__stringbase)
  2396  05EB  0084               	movwf	4
  2397  05EC  120A  158A  200A  120A  118A  	fcall	stringdir
  2398  05F1  00D7               	movwf	(??_sprintf+1)^(0+128)
  2399  05F2  120A  158A  200A  120A  118A  	fcall	stringdir
  2400  05F7  00D8               	movwf	((??_sprintf+1)^(0+128)+1)
  2401  05F8  0858               	movf	(??_sprintf+2)^(0+128),w
  2402  05F9  025C               	subwf	(sprintf@_val+1)^(0+128),w
  2403  05FA  1D03               	skipz
  2404  05FB  2DFE               	goto	u3625
  2405  05FC  0857               	movf	(??_sprintf+1)^(0+128),w
  2406  05FD  025B               	subwf	sprintf@_val^(0+128),w
  2407  05FE                     u3625:	
  2408  05FE  1C03               	btfss	3,0
  2409  05FF  2E08               	goto	l3032
  2410                           
  2411                           ;doprnt.c: 1316: break;
  2412  0600  3001               	movlw	1
  2413  0601  00D6               	movwf	??_sprintf^(0+128)
  2414  0602  0856               	movf	??_sprintf^(0+128),w
  2415  0603  07E3               	addwf	sprintf@c^(0+128),f
  2416  0604  0863               	movf	sprintf@c^(0+128),w
  2417  0605  3A05               	xorlw	5
  2418  0606  1D03               	skipz
  2419  0607  2DE7               	goto	l3024
  2420  0608                     l3032:	
  2421                           
  2422                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2423  0608  0861               	movf	(sprintf@width+1)^(0+128),w
  2424  0609  0460               	iorwf	sprintf@width^(0+128),w
  2425  060A  1903               	skipnz
  2426  060B  2E16               	goto	l493
  2427  060C  085F               	movf	sprintf@flag^(0+128),w
  2428  060D  3903               	andlw	3
  2429  060E  1903               	btfsc	3,2
  2430  060F  2E16               	goto	l493
  2431                           
  2432                           ;doprnt.c: 1355: width--;
  2433  0610  30FF               	movlw	255
  2434  0611  07E0               	addwf	sprintf@width^(0+128),f
  2435  0612  1803               	skipnc
  2436  0613  0AE1               	incf	(sprintf@width+1)^(0+128),f
  2437  0614  30FF               	movlw	255
  2438  0615  07E1               	addwf	(sprintf@width+1)^(0+128),f
  2439  0616                     l493:	
  2440                           
  2441                           ;doprnt.c: 1390: if(width > c)
  2442  0616  0863               	movf	sprintf@c^(0+128),w
  2443  0617  00D6               	movwf	??_sprintf^(0+128)
  2444  0618  01D7               	clrf	(??_sprintf^(0+128)+1)
  2445  0619  1BD6               	btfsc	??_sprintf^(0+128),7
  2446  061A  03D7               	decf	(??_sprintf^(0+128)+1),f
  2447  061B  0857               	movf	(??_sprintf+1)^(0+128),w
  2448  061C  3A80               	xorlw	128
  2449  061D  00D8               	movwf	(??_sprintf+2)^(0+128)
  2450  061E  0861               	movf	(sprintf@width+1)^(0+128),w
  2451  061F  3A80               	xorlw	128
  2452  0620  0258               	subwf	(??_sprintf+2)^(0+128),w
  2453  0621  1D03               	skipz
  2454  0622  2E25               	goto	u3665
  2455  0623  0860               	movf	sprintf@width^(0+128),w
  2456  0624  0256               	subwf	??_sprintf^(0+128),w
  2457  0625                     u3665:	
  2458  0625  1803               	skipnc
  2459  0626  2E35               	goto	l3040
  2460                           
  2461                           ;doprnt.c: 1391: width -= c;
  2462  0627  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0628  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0629  0863               	movf	sprintf@c^(0+128),w
  2465  062A  00D6               	movwf	??_sprintf^(0+128)
  2466  062B  01D7               	clrf	(??_sprintf^(0+128)+1)
  2467  062C  1BD6               	btfsc	??_sprintf^(0+128),7
  2468  062D  03D7               	decf	(??_sprintf^(0+128)+1),f
  2469  062E  0856               	movf	??_sprintf^(0+128),w
  2470  062F  02E0               	subwf	sprintf@width^(0+128),f
  2471  0630  0857               	movf	(??_sprintf+1)^(0+128),w
  2472  0631  1C03               	skipc
  2473  0632  03E1               	decf	(sprintf@width+1)^(0+128),f
  2474  0633  02E1               	subwf	(sprintf@width+1)^(0+128),f
  2475  0634  2E39               	goto	l3042
  2476  0635                     l3040:	
  2477                           
  2478                           ;doprnt.c: 1392: else
  2479                           ;doprnt.c: 1393: width = 0;
  2480  0635  1683               	bsf	3,5	;RP0=1, select bank1
  2481  0636  1303               	bcf	3,6	;RP1=0, select bank1
  2482  0637  01E0               	clrf	sprintf@width^(0+128)
  2483  0638  01E1               	clrf	(sprintf@width+1)^(0+128)
  2484  0639                     l3042:	
  2485                           
  2486                           ;doprnt.c: 1396: if(flag & 0x04) {
  2487  0639  1D5F               	btfss	sprintf@flag^(0+128),2
  2488  063A  2E60               	goto	l3058
  2489                           
  2490                           ;doprnt.c: 1401: if(flag & 0x03)
  2491  063B  085F               	movf	sprintf@flag^(0+128),w
  2492  063C  3903               	andlw	3
  2493  063D  1903               	btfsc	3,2
  2494  063E  2E4A               	goto	l3050
  2495                           
  2496                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2497  063F  302D               	movlw	45
  2498  0640  00D6               	movwf	??_sprintf^(0+128)
  2499  0641  0862               	movf	sprintf@sp^(0+128),w
  2500  0642  0084               	movwf	4
  2501  0643  0856               	movf	??_sprintf^(0+128),w
  2502  0644  1783               	bsf	3,7	;select IRP bank2
  2503  0645  0080               	movwf	0
  2504  0646  3001               	movlw	1
  2505  0647  00D6               	movwf	??_sprintf^(0+128)
  2506  0648  0856               	movf	??_sprintf^(0+128),w
  2507  0649  07E2               	addwf	sprintf@sp^(0+128),f
  2508  064A                     l3050:	
  2509                           
  2510                           ;doprnt.c: 1424: if(width)
  2511  064A  0861               	movf	(sprintf@width+1)^(0+128),w
  2512  064B  0460               	iorwf	sprintf@width^(0+128),w
  2513  064C  1903               	skipnz
  2514  064D  2E88               	goto	l3072
  2515                           
  2516                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2517                           
  2518                           ;doprnt.c: 1425: do
  2519  064E  3030               	movlw	48
  2520  064F  00D6               	movwf	??_sprintf^(0+128)
  2521  0650  0862               	movf	sprintf@sp^(0+128),w
  2522  0651  0084               	movwf	4
  2523  0652  0856               	movf	??_sprintf^(0+128),w
  2524  0653  1783               	bsf	3,7	;select IRP bank2
  2525  0654  0080               	movwf	0
  2526  0655  3001               	movlw	1
  2527  0656  00D6               	movwf	??_sprintf^(0+128)
  2528  0657  0856               	movf	??_sprintf^(0+128),w
  2529  0658  07E2               	addwf	sprintf@sp^(0+128),f
  2530                           
  2531                           ;doprnt.c: 1427: while(--width);
  2532  0659  30FF               	movlw	255
  2533  065A  07E0               	addwf	sprintf@width^(0+128),f
  2534  065B  1803               	skipnc
  2535  065C  0AE1               	incf	(sprintf@width+1)^(0+128),f
  2536  065D  30FF               	movlw	255
  2537  065E  07E1               	addwf	(sprintf@width+1)^(0+128),f
  2538  065F  2E4A               	goto	l3050
  2539  0660                     l3058:	
  2540                           ;doprnt.c: 1429: } else
  2541                           
  2542                           
  2543                           ;doprnt.c: 1431: {
  2544                           ;doprnt.c: 1433: if(width
  2545                           ;doprnt.c: 1437: )
  2546  0660  0861               	movf	(sprintf@width+1)^(0+128),w
  2547  0661  0460               	iorwf	sprintf@width^(0+128),w
  2548  0662  1903               	skipnz
  2549  0663  2E79               	goto	l3066
  2550  0664                     l3060:	
  2551                           ;doprnt.c: 1438: do
  2552                           
  2553                           
  2554                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2555  0664  3020               	movlw	32
  2556  0665  00D6               	movwf	??_sprintf^(0+128)
  2557  0666  0862               	movf	sprintf@sp^(0+128),w
  2558  0667  0084               	movwf	4
  2559  0668  0856               	movf	??_sprintf^(0+128),w
  2560  0669  1783               	bsf	3,7	;select IRP bank2
  2561  066A  0080               	movwf	0
  2562  066B  3001               	movlw	1
  2563  066C  00D6               	movwf	??_sprintf^(0+128)
  2564  066D  0856               	movf	??_sprintf^(0+128),w
  2565  066E  07E2               	addwf	sprintf@sp^(0+128),f
  2566                           
  2567                           ;doprnt.c: 1440: while(--width);
  2568  066F  30FF               	movlw	255
  2569  0670  07E0               	addwf	sprintf@width^(0+128),f
  2570  0671  1803               	skipnc
  2571  0672  0AE1               	incf	(sprintf@width+1)^(0+128),f
  2572  0673  30FF               	movlw	255
  2573  0674  07E1               	addwf	(sprintf@width+1)^(0+128),f
  2574  0675  0861               	movf	(sprintf@width+1)^(0+128),w
  2575  0676  0460               	iorwf	sprintf@width^(0+128),w
  2576  0677  1D03               	skipz
  2577  0678  2E64               	goto	l3060
  2578  0679                     l3066:	
  2579                           
  2580                           ;doprnt.c: 1447: if(flag & 0x03)
  2581  0679  085F               	movf	sprintf@flag^(0+128),w
  2582  067A  3903               	andlw	3
  2583  067B  1903               	btfsc	3,2
  2584  067C  2E88               	goto	l3072
  2585                           
  2586                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2587  067D  302D               	movlw	45
  2588  067E  00D6               	movwf	??_sprintf^(0+128)
  2589  067F  0862               	movf	sprintf@sp^(0+128),w
  2590  0680  0084               	movwf	4
  2591  0681  0856               	movf	??_sprintf^(0+128),w
  2592  0682  1783               	bsf	3,7	;select IRP bank2
  2593  0683  0080               	movwf	0
  2594  0684  3001               	movlw	1
  2595  0685  00D6               	movwf	??_sprintf^(0+128)
  2596  0686  0856               	movf	??_sprintf^(0+128),w
  2597  0687  07E2               	addwf	sprintf@sp^(0+128),f
  2598  0688                     l3072:	
  2599                           
  2600                           ;doprnt.c: 1478: }
  2601                           ;doprnt.c: 1481: prec = c;
  2602  0688  0863               	movf	sprintf@c^(0+128),w
  2603  0689  00D6               	movwf	??_sprintf^(0+128)
  2604  068A  0856               	movf	??_sprintf^(0+128),w
  2605  068B  00DA               	movwf	sprintf@prec^(0+128)
  2606  068C                     l3080:	
  2607                           ;doprnt.c: 1483: while(prec--) {
  2608                           
  2609  068C  30FF               	movlw	-1
  2610  068D  00D6               	movwf	??_sprintf^(0+128)
  2611  068E  0856               	movf	??_sprintf^(0+128),w
  2612  068F  07DA               	addwf	sprintf@prec^(0+128),f
  2613  0690  085A               	movf	sprintf@prec^(0+128),w
  2614  0691  3AFF               	xorlw	-1
  2615  0692  1903               	btfsc	3,2
  2616  0693  2D2B               	goto	l3082
  2617                           
  2618                           ;doprnt.c: 1487: {
  2619                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2620  0694  300A               	movlw	10
  2621  0695  00CD               	movwf	___lwmod@divisor^(0+128)
  2622  0696  3000               	movlw	0
  2623  0697  00CE               	movwf	(___lwmod@divisor^(0+128)+1)
  2624  0698  085A               	movf	sprintf@prec^(0+128),w
  2625  0699  00D6               	movwf	??_sprintf^(0+128)
  2626  069A  0756               	addwf	??_sprintf^(0+128),w
  2627  069B  3E01               	addlw	low (_dpowers-__stringbase)
  2628  069C  0084               	movwf	4
  2629  069D  120A  158A  200A  120A  118A  	fcall	stringdir
  2630  06A2  00C5               	movwf	___lwdiv@divisor^(0+128)
  2631  06A3  120A  158A  200A  120A  118A  	fcall	stringdir
  2632  06A8  00C6               	movwf	(___lwdiv@divisor+1)^(0+128)
  2633  06A9  085C               	movf	(sprintf@_val+1)^(0+128),w
  2634  06AA  01C8               	clrf	(___lwdiv@dividend+1)^(0+128)
  2635  06AB  07C8               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2636  06AC  085B               	movf	sprintf@_val^(0+128),w
  2637  06AD  01C7               	clrf	___lwdiv@dividend^(0+128)
  2638  06AE  07C7               	addwf	___lwdiv@dividend^(0+128),f
  2639  06AF  160A  118A  2589  120A  118A  	fcall	___lwdiv
  2640  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2641  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2642  06B6  0846               	movf	(?___lwdiv+1)^(0+128),w
  2643  06B7  01D0               	clrf	(___lwmod@dividend+1)^(0+128)
  2644  06B8  07D0               	addwf	(___lwmod@dividend+1)^(0+128),f
  2645  06B9  0845               	movf	?___lwdiv^(0+128),w
  2646  06BA  01CF               	clrf	___lwmod@dividend^(0+128)
  2647  06BB  07CF               	addwf	___lwmod@dividend^(0+128),f
  2648  06BC  160A  118A  2515  120A  118A  	fcall	___lwmod
  2649  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  2650  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  2651  06C3  084D               	movf	?___lwmod^(0+128),w
  2652  06C4  3E30               	addlw	48
  2653  06C5  00D7               	movwf	(??_sprintf+1)^(0+128)
  2654  06C6  0857               	movf	(??_sprintf+1)^(0+128),w
  2655  06C7  00E3               	movwf	sprintf@c^(0+128)
  2656                           
  2657                           ;doprnt.c: 1532: }
  2658                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2659  06C8  0863               	movf	sprintf@c^(0+128),w
  2660  06C9  00D6               	movwf	??_sprintf^(0+128)
  2661  06CA  0862               	movf	sprintf@sp^(0+128),w
  2662  06CB  0084               	movwf	4
  2663  06CC  0856               	movf	??_sprintf^(0+128),w
  2664  06CD  1783               	bsf	3,7	;select IRP bank2
  2665  06CE  0080               	movwf	0
  2666  06CF  3001               	movlw	1
  2667  06D0  00D6               	movwf	??_sprintf^(0+128)
  2668  06D1  0856               	movf	??_sprintf^(0+128),w
  2669  06D2  07E2               	addwf	sprintf@sp^(0+128),f
  2670  06D3  2E8C               	goto	l3080
  2671  06D4                     l3084:	
  2672                           ;doprnt.c: 1534: }
  2673                           ;doprnt.c: 1542: }
  2674                           ;doprnt.c: 1544: alldone:
  2675                           
  2676                           
  2677                           ;doprnt.c: 1547: *sp = 0;
  2678  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  2679  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  2680  06D6  0862               	movf	sprintf@sp^(0+128),w
  2681  06D7  0084               	movwf	4
  2682  06D8  1783               	bsf	3,7	;select IRP bank2
  2683  06D9  0180               	clrf	0
  2684  06DA  0008               	return
  2685  06DB                     __end_of_sprintf:	
  2686                           ;doprnt.c: 1549: return 0;
  2687                           ;	Return value of _sprintf is never used
  2688                           
  2689                           
  2690                           	psect	text2
  2691  12D0                     __ptext2:	
  2692 ;; *************** function _isdigit *****************
  2693 ;; Defined at:
  2694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  c               1    wreg     unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  c               1    1[BANK1 ] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       2       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       2       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    5
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_sprintf
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _isdigit
  2724  12D0                     _isdigit:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2728                           ;isdigit@c stored from wreg
  2729  12D0  1683               	bsf	3,5	;RP0=1, select bank1
  2730  12D1  1303               	bcf	3,6	;RP1=0, select bank1
  2731  12D2  00C6               	movwf	isdigit@c^(0+128)
  2732  12D3  01C5               	clrf	_isdigit$1448^(0+128)
  2733  12D4  303A               	movlw	58
  2734  12D5  0246               	subwf	isdigit@c^(0+128),w
  2735  12D6  1803               	skipnc
  2736  12D7  2ADE               	goto	l2494
  2737  12D8  3030               	movlw	48
  2738  12D9  0246               	subwf	isdigit@c^(0+128),w
  2739  12DA  1C03               	skipc
  2740  12DB  2ADE               	goto	l2494
  2741  12DC  01C5               	clrf	_isdigit$1448^(0+128)
  2742  12DD  0AC5               	incf	_isdigit$1448^(0+128),f
  2743  12DE                     l2494:	
  2744  12DE  0C45               	rrf	_isdigit$1448^(0+128),w
  2745  12DF  0008               	return
  2746  12E0                     __end_of_isdigit:	
  2747                           
  2748                           	psect	text3
  2749  1465                     __ptext3:	
  2750 ;; *************** function ___wmul *****************
  2751 ;; Defined at:
  2752 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2755 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  product         2    4[BANK1 ] unsigned int 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    0[BANK1 ] unsigned int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       0       4       0       0
  2768 ;;      Locals:         0       0       2       0       0
  2769 ;;      Temps:          0       0       0       0       0
  2770 ;;      Totals:         0       0       6       0       0
  2771 ;;Total ram usage:        6 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    5
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_sprintf
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function ___wmul
  2783  1465                     ___wmul:	
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2787  1465  1683               	bsf	3,5	;RP0=1, select bank1
  2788  1466  1303               	bcf	3,6	;RP1=0, select bank1
  2789  1467  01C9               	clrf	___wmul@product^(0+128)
  2790  1468  01CA               	clrf	(___wmul@product+1)^(0+128)
  2791  1469                     l2500:	
  2792  1469  1C45               	btfss	___wmul@multiplier^(0+128),0
  2793  146A  2C71               	goto	l594
  2794  146B  0847               	movf	___wmul@multiplicand^(0+128),w
  2795  146C  07C9               	addwf	___wmul@product^(0+128),f
  2796  146D  1803               	skipnc
  2797  146E  0ACA               	incf	(___wmul@product+1)^(0+128),f
  2798  146F  0848               	movf	(___wmul@multiplicand+1)^(0+128),w
  2799  1470  07CA               	addwf	(___wmul@product+1)^(0+128),f
  2800  1471                     l594:	
  2801  1471  3001               	movlw	1
  2802  1472                     u2785:	
  2803  1472  1003               	clrc
  2804  1473  0DC7               	rlf	___wmul@multiplicand^(0+128),f
  2805  1474  0DC8               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2806  1475  3EFF               	addlw	-1
  2807  1476  1D03               	skipz
  2808  1477  2C72               	goto	u2785
  2809  1478  3001               	movlw	1
  2810  1479                     u2795:	
  2811  1479  1003               	clrc
  2812  147A  0CC6               	rrf	(___wmul@multiplier+1)^(0+128),f
  2813  147B  0CC5               	rrf	___wmul@multiplier^(0+128),f
  2814  147C  3EFF               	addlw	-1
  2815  147D  1D03               	skipz
  2816  147E  2C79               	goto	u2795
  2817  147F  0846               	movf	(___wmul@multiplier+1)^(0+128),w
  2818  1480  0445               	iorwf	___wmul@multiplier^(0+128),w
  2819  1481  1D03               	skipz
  2820  1482  2C69               	goto	l2500
  2821  1483  084A               	movf	(___wmul@product+1)^(0+128),w
  2822  1484  01C6               	clrf	(?___wmul+1)^(0+128)
  2823  1485  07C6               	addwf	(?___wmul+1)^(0+128),f
  2824  1486  0849               	movf	___wmul@product^(0+128),w
  2825  1487  01C5               	clrf	?___wmul^(0+128)
  2826  1488  07C5               	addwf	?___wmul^(0+128),f
  2827  1489  0008               	return
  2828  148A                     __end_of___wmul:	
  2829                           
  2830                           	psect	text4
  2831  1515                     __ptext4:	
  2832 ;; *************** function ___lwmod *****************
  2833 ;; Defined at:
  2834 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  divisor         2    8[BANK1 ] unsigned int 
  2837 ;;  dividend        2   10[BANK1 ] unsigned int 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  counter         1   13[BANK1 ] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  2    8[BANK1 ] unsigned int 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         0       0       4       0       0
  2850 ;;      Locals:         0       0       1       0       0
  2851 ;;      Temps:          0       0       1       0       0
  2852 ;;      Totals:         0       0       6       0       0
  2853 ;;Total ram usage:        6 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    5
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_sprintf
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function ___lwmod
  2865  1515                     ___lwmod:	
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2869  1515  1683               	bsf	3,5	;RP0=1, select bank1
  2870  1516  1303               	bcf	3,6	;RP1=0, select bank1
  2871  1517  084E               	movf	(___lwmod@divisor+1)^(0+128),w
  2872  1518  044D               	iorwf	___lwmod@divisor^(0+128),w
  2873  1519  1903               	skipnz
  2874  151A  2D44               	goto	l2688
  2875  151B  01D2               	clrf	___lwmod@counter^(0+128)
  2876  151C  0AD2               	incf	___lwmod@counter^(0+128),f
  2877  151D                     l2678:	
  2878  151D  1BCE               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2879  151E  2D2B               	goto	l2680
  2880  151F  3001               	movlw	1
  2881  1520                     u3235:	
  2882  1520  1003               	clrc
  2883  1521  0DCD               	rlf	___lwmod@divisor^(0+128),f
  2884  1522  0DCE               	rlf	(___lwmod@divisor+1)^(0+128),f
  2885  1523  3EFF               	addlw	-1
  2886  1524  1D03               	skipz
  2887  1525  2D20               	goto	u3235
  2888  1526  3001               	movlw	1
  2889  1527  00D1               	movwf	??___lwmod^(0+128)
  2890  1528  0851               	movf	??___lwmod^(0+128),w
  2891  1529  07D2               	addwf	___lwmod@counter^(0+128),f
  2892  152A  2D1D               	goto	l2678
  2893  152B                     l2680:	
  2894  152B  084E               	movf	(___lwmod@divisor+1)^(0+128),w
  2895  152C  0250               	subwf	(___lwmod@dividend+1)^(0+128),w
  2896  152D  1D03               	skipz
  2897  152E  2D31               	goto	u3255
  2898  152F  084D               	movf	___lwmod@divisor^(0+128),w
  2899  1530  024F               	subwf	___lwmod@dividend^(0+128),w
  2900  1531                     u3255:	
  2901  1531  1C03               	skipc
  2902  1532  2D39               	goto	l2684
  2903  1533  084D               	movf	___lwmod@divisor^(0+128),w
  2904  1534  02CF               	subwf	___lwmod@dividend^(0+128),f
  2905  1535  084E               	movf	(___lwmod@divisor+1)^(0+128),w
  2906  1536  1C03               	skipc
  2907  1537  03D0               	decf	(___lwmod@dividend+1)^(0+128),f
  2908  1538  02D0               	subwf	(___lwmod@dividend+1)^(0+128),f
  2909  1539                     l2684:	
  2910  1539  3001               	movlw	1
  2911  153A                     u3265:	
  2912  153A  1003               	clrc
  2913  153B  0CCE               	rrf	(___lwmod@divisor+1)^(0+128),f
  2914  153C  0CCD               	rrf	___lwmod@divisor^(0+128),f
  2915  153D  3EFF               	addlw	-1
  2916  153E  1D03               	skipz
  2917  153F  2D3A               	goto	u3265
  2918  1540  3001               	movlw	1
  2919  1541  02D2               	subwf	___lwmod@counter^(0+128),f
  2920  1542  1D03               	btfss	3,2
  2921  1543  2D2B               	goto	l2680
  2922  1544                     l2688:	
  2923  1544  0850               	movf	(___lwmod@dividend+1)^(0+128),w
  2924  1545  01CE               	clrf	(?___lwmod+1)^(0+128)
  2925  1546  07CE               	addwf	(?___lwmod+1)^(0+128),f
  2926  1547  084F               	movf	___lwmod@dividend^(0+128),w
  2927  1548  01CD               	clrf	?___lwmod^(0+128)
  2928  1549  07CD               	addwf	?___lwmod^(0+128),f
  2929  154A  0008               	return
  2930  154B                     __end_of___lwmod:	
  2931                           
  2932                           	psect	text5
  2933  1589                     __ptext5:	
  2934 ;; *************** function ___lwdiv *****************
  2935 ;; Defined at:
  2936 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  divisor         2    0[BANK1 ] unsigned int 
  2939 ;;  dividend        2    2[BANK1 ] unsigned int 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  quotient        2    5[BANK1 ] unsigned int 
  2942 ;;  counter         1    7[BANK1 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    0[BANK1 ] unsigned int 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       4       0       0
  2953 ;;      Locals:         0       0       3       0       0
  2954 ;;      Temps:          0       0       1       0       0
  2955 ;;      Totals:         0       0       8       0       0
  2956 ;;Total ram usage:        8 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    5
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_sprintf
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function ___lwdiv
  2968  1589                     ___lwdiv:	
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2972  1589  1683               	bsf	3,5	;RP0=1, select bank1
  2973  158A  1303               	bcf	3,6	;RP1=0, select bank1
  2974  158B  01CA               	clrf	___lwdiv@quotient^(0+128)
  2975  158C  01CB               	clrf	(___lwdiv@quotient+1)^(0+128)
  2976  158D  0846               	movf	(___lwdiv@divisor+1)^(0+128),w
  2977  158E  0445               	iorwf	___lwdiv@divisor^(0+128),w
  2978  158F  1903               	skipnz
  2979  1590  2DC2               	goto	l2666
  2980  1591  01CC               	clrf	___lwdiv@counter^(0+128)
  2981  1592  0ACC               	incf	___lwdiv@counter^(0+128),f
  2982  1593                     l2654:	
  2983  1593  1BC6               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2984  1594  2DA1               	goto	l2656
  2985  1595  3001               	movlw	1
  2986  1596                     u3165:	
  2987  1596  1003               	clrc
  2988  1597  0DC5               	rlf	___lwdiv@divisor^(0+128),f
  2989  1598  0DC6               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2990  1599  3EFF               	addlw	-1
  2991  159A  1D03               	skipz
  2992  159B  2D96               	goto	u3165
  2993  159C  3001               	movlw	1
  2994  159D  00C9               	movwf	??___lwdiv^(0+128)
  2995  159E  0849               	movf	??___lwdiv^(0+128),w
  2996  159F  07CC               	addwf	___lwdiv@counter^(0+128),f
  2997  15A0  2D93               	goto	l2654
  2998  15A1                     l2656:	
  2999  15A1  3001               	movlw	1
  3000  15A2                     u3185:	
  3001  15A2  1003               	clrc
  3002  15A3  0DCA               	rlf	___lwdiv@quotient^(0+128),f
  3003  15A4  0DCB               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3004  15A5  3EFF               	addlw	-1
  3005  15A6  1D03               	skipz
  3006  15A7  2DA2               	goto	u3185
  3007  15A8  0846               	movf	(___lwdiv@divisor+1)^(0+128),w
  3008  15A9  0248               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3009  15AA  1D03               	skipz
  3010  15AB  2DAE               	goto	u3195
  3011  15AC  0845               	movf	___lwdiv@divisor^(0+128),w
  3012  15AD  0247               	subwf	___lwdiv@dividend^(0+128),w
  3013  15AE                     u3195:	
  3014  15AE  1C03               	skipc
  3015  15AF  2DB7               	goto	l2662
  3016  15B0  0845               	movf	___lwdiv@divisor^(0+128),w
  3017  15B1  02C7               	subwf	___lwdiv@dividend^(0+128),f
  3018  15B2  0846               	movf	(___lwdiv@divisor+1)^(0+128),w
  3019  15B3  1C03               	skipc
  3020  15B4  03C8               	decf	(___lwdiv@dividend+1)^(0+128),f
  3021  15B5  02C8               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3022  15B6  144A               	bsf	___lwdiv@quotient^(0+128),0
  3023  15B7                     l2662:	
  3024  15B7  3001               	movlw	1
  3025  15B8                     u3205:	
  3026  15B8  1003               	clrc
  3027  15B9  0CC6               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3028  15BA  0CC5               	rrf	___lwdiv@divisor^(0+128),f
  3029  15BB  3EFF               	addlw	-1
  3030  15BC  1D03               	skipz
  3031  15BD  2DB8               	goto	u3205
  3032  15BE  3001               	movlw	1
  3033  15BF  02CC               	subwf	___lwdiv@counter^(0+128),f
  3034  15C0  1D03               	btfss	3,2
  3035  15C1  2DA1               	goto	l2656
  3036  15C2                     l2666:	
  3037  15C2  084B               	movf	(___lwdiv@quotient+1)^(0+128),w
  3038  15C3  01C6               	clrf	(?___lwdiv+1)^(0+128)
  3039  15C4  07C6               	addwf	(?___lwdiv+1)^(0+128),f
  3040  15C5  084A               	movf	___lwdiv@quotient^(0+128),w
  3041  15C6  01C5               	clrf	?___lwdiv^(0+128)
  3042  15C7  07C5               	addwf	?___lwdiv^(0+128),f
  3043  15C8  0008               	return
  3044  15C9                     __end_of___lwdiv:	
  3045                           
  3046                           	psect	text6
  3047  14E4                     __ptext6:	
  3048 ;; *************** function _USART_WriteString *****************
  3049 ;; Defined at:
  3050 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3053 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3054 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3055 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3056 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       0       2       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0
  3071 ;;      Totals:         0       0       2       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    6
  3075 ;; This function calls:
  3076 ;;		_USART_WriteChar
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _USART_WriteString
  3084  14E4                     _USART_WriteString:	
  3085  14E4                     l2852:	
  3086                           ;usart.c: 54: while(*str != '\0')
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3090                           
  3091  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  3092  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  3093  14E6  0847               	movf	(USART_WriteString@str+1)^(0+128),w
  3094  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  3095  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  3096  14E9  00FF               	movwf	127
  3097  14EA  1683               	bsf	3,5	;RP0=1, select bank1
  3098  14EB  1303               	bcf	3,6	;RP1=0, select bank1
  3099  14EC  0846               	movf	USART_WriteString@str^(0+128),w
  3100  14ED  0084               	movwf	4
  3101  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  3102  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  3103  14F0  120A  158A  2000  160A  118A  	fcall	stringtab
  3104  14F5  3800               	iorlw	0
  3105  14F6  1903               	btfsc	3,2
  3106  14F7  0008               	return
  3107                           
  3108                           ;usart.c: 55: {
  3109                           ;usart.c: 56: USART_WriteChar(*str);
  3110  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  3111  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  3112  14FA  0847               	movf	(USART_WriteString@str+1)^(0+128),w
  3113  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  3114  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  3115  14FD  00FF               	movwf	127
  3116  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  3117  14FF  1303               	bcf	3,6	;RP1=0, select bank1
  3118  1500  0846               	movf	USART_WriteString@str^(0+128),w
  3119  1501  0084               	movwf	4
  3120  1502  1283               	bcf	3,5	;RP0=0, select bank0
  3121  1503  1303               	bcf	3,6	;RP1=0, select bank0
  3122  1504  120A  158A  2000  160A  118A  	fcall	stringtab
  3123  1509  160A  118A  22C3  160A  118A  	fcall	_USART_WriteChar
  3124                           
  3125                           ;usart.c: 57: str++;
  3126  150E  3001               	movlw	1
  3127  150F  1683               	bsf	3,5	;RP0=1, select bank1
  3128  1510  1303               	bcf	3,6	;RP1=0, select bank1
  3129  1511  07C6               	addwf	USART_WriteString@str^(0+128),f
  3130  1512  1803               	skipnc
  3131  1513  0AC7               	incf	(USART_WriteString@str+1)^(0+128),f
  3132  1514  2CE4               	goto	l2852
  3133  1515                     __end_of_USART_WriteString:	
  3134                           
  3135                           	psect	text7
  3136  12C3                     __ptext7:	
  3137 ;; *************** function _USART_WriteChar *****************
  3138 ;; Defined at:
  3139 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  byte            1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  byte            1    0[BANK1 ] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       1       0       0
  3155 ;;      Temps:          0       0       0       0       0
  3156 ;;      Totals:         0       0       1       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    5
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_USART_WriteString
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _USART_WriteChar
  3169  12C3                     _USART_WriteChar:	
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _USART_WriteChar: [wreg]
  3173                           ;USART_WriteChar@byte stored from wreg
  3174  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  3175  12C4  1303               	bcf	3,6	;RP1=0, select bank1
  3176  12C5  00C5               	movwf	USART_WriteChar@byte^(0+128)
  3177  12C6                     l223:	
  3178                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3179                           
  3180  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  3181  12C7  1E0C               	btfss	12,4	;volatile
  3182  12C8  2AC6               	goto	l223
  3183                           
  3184                           ;usart.c: 47: TXREG = byte;
  3185  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  3186  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  3187  12CB  0845               	movf	USART_WriteChar@byte^(0+128),w
  3188  12CC  1283               	bcf	3,5	;RP0=0, select bank0
  3189  12CD  1303               	bcf	3,6	;RP1=0, select bank0
  3190  12CE  0099               	movwf	25	;volatile
  3191  12CF  0008               	return
  3192  12D0                     __end_of_USART_WriteChar:	
  3193                           
  3194                           	psect	text8
  3195  15C9                     __ptext8:	
  3196 ;; *************** function _USART_Init *****************
  3197 ;; Defined at:
  3198 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  BaudRate        4   15[BANK1 ] long 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       0       4       0       0
  3213 ;;      Locals:         0       0       0       0       0
  3214 ;;      Temps:          0       0       4       0       0
  3215 ;;      Totals:         0       0       8       0       0
  3216 ;;Total ram usage:        8 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    6
  3219 ;; This function calls:
  3220 ;;		___aldiv
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _USART_Init
  3228  15C9                     _USART_Init:	
  3229                           
  3230                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3234  15C9  1683               	bsf	3,5	;RP0=1, select bank1
  3235  15CA  1303               	bcf	3,6	;RP1=0, select bank1
  3236  15CB  0854               	movf	USART_Init@BaudRate^(0+128),w
  3237  15CC  00D8               	movwf	??_USART_Init^(0+128)
  3238  15CD  0855               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3239  15CE  00D9               	movwf	(??_USART_Init^(0+128)+1)
  3240  15CF  0856               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3241  15D0  00DA               	movwf	(??_USART_Init^(0+128)+2)
  3242  15D1  0857               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3243  15D2  00DB               	movwf	(??_USART_Init^(0+128)+3)
  3244  15D3  3004               	movlw	4
  3245  15D4                     u3535:	
  3246  15D4  1003               	clrc
  3247  15D5  0DD8               	rlf	??_USART_Init^(0+128),f
  3248  15D6  0DD9               	rlf	(??_USART_Init^(0+128)+1),f
  3249  15D7  0DDA               	rlf	(??_USART_Init^(0+128)+2),f
  3250  15D8  0DDB               	rlf	(??_USART_Init^(0+128)+3),f
  3251  15D9  3EFF               	addlw	-1
  3252  15DA  1D03               	skipz
  3253  15DB  2DD4               	goto	u3535
  3254  15DC  085B               	movf	(??_USART_Init+3)^(0+128),w
  3255  15DD  00C8               	movwf	(___aldiv@divisor+3)^(0+128)
  3256  15DE  085A               	movf	(??_USART_Init+2)^(0+128),w
  3257  15DF  00C7               	movwf	(___aldiv@divisor+2)^(0+128)
  3258  15E0  0859               	movf	(??_USART_Init+1)^(0+128),w
  3259  15E1  00C6               	movwf	(___aldiv@divisor+1)^(0+128)
  3260  15E2  0858               	movf	??_USART_Init^(0+128),w
  3261  15E3  00C5               	movwf	___aldiv@divisor^(0+128)
  3262  15E4  3001               	movlw	1
  3263  15E5  00CC               	movwf	(___aldiv@dividend+3)^(0+128)
  3264  15E6  3019               	movlw	25
  3265  15E7  00CB               	movwf	(___aldiv@dividend+2)^(0+128)
  3266  15E8  3040               	movlw	64
  3267  15E9  00CA               	movwf	(___aldiv@dividend+1)^(0+128)
  3268  15EA  3000               	movlw	0
  3269  15EB  00C9               	movwf	___aldiv@dividend^(0+128)
  3270  15EC  160A  118A  2771   	fcall	___aldiv
  3271  15EF  1683               	bsf	3,5	;RP0=1, select bank1
  3272  15F0  1303               	bcf	3,6	;RP1=0, select bank1
  3273  15F1  0845               	movf	?___aldiv^(0+128),w
  3274  15F2  3EFF               	addlw	255
  3275  15F3  0099               	movwf	25	;volatile
  3276                           
  3277                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3278  15F4  1398               	bcf	24,7	;volatile
  3279                           
  3280                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3281  15F5  1318               	bcf	24,6	;volatile
  3282                           
  3283                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3284  15F6  1698               	bsf	24,5	;volatile
  3285                           
  3286                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3287  15F7  1218               	bcf	24,4	;volatile
  3288                           
  3289                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3290  15F8  1518               	bsf	24,2	;volatile
  3291                           
  3292                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3293  15F9  1498               	bsf	24,1	;volatile
  3294                           
  3295                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3296  15FA  1018               	bcf	24,0	;volatile
  3297                           
  3298                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3299  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  3300  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  3301  15FD  1798               	bsf	24,7	;volatile
  3302                           
  3303                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3304  15FE  1318               	bcf	24,6	;volatile
  3305                           
  3306                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3307  15FF  1298               	bcf	24,5	;volatile
  3308                           
  3309                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3310  1600  1618               	bsf	24,4	;volatile
  3311                           
  3312                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3313  1601  1198               	bcf	24,3	;volatile
  3314                           
  3315                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3316  1602  1118               	bcf	24,2	;volatile
  3317                           
  3318                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3319  1603  1098               	bcf	24,1	;volatile
  3320                           
  3321                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3322  1604  1018               	bcf	24,0	;volatile
  3323                           
  3324                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3325  1605  1683               	bsf	3,5	;RP0=1, select bank1
  3326  1606  1303               	bcf	3,6	;RP1=0, select bank1
  3327  1607  120C               	bcf	12,4	;volatile
  3328                           
  3329                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3330  1608  1283               	bcf	3,5	;RP0=0, select bank0
  3331  1609  1303               	bcf	3,6	;RP1=0, select bank0
  3332  160A  120C               	bcf	12,4	;volatile
  3333                           
  3334                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3335  160B  1683               	bsf	3,5	;RP0=1, select bank1
  3336  160C  1303               	bcf	3,6	;RP1=0, select bank1
  3337  160D  168C               	bsf	12,5	;volatile
  3338                           
  3339                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3340  160E  1283               	bcf	3,5	;RP0=0, select bank0
  3341  160F  1303               	bcf	3,6	;RP1=0, select bank0
  3342  1610  128C               	bcf	12,5	;volatile
  3343  1611  0008               	return
  3344  1612                     __end_of_USART_Init:	
  3345                           
  3346                           	psect	text9
  3347  1771                     __ptext9:	
  3348 ;; *************** function ___aldiv *****************
  3349 ;; Defined at:
  3350 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  divisor         4    0[BANK1 ] long 
  3353 ;;  dividend        4    4[BANK1 ] long 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  quotient        4   11[BANK1 ] long 
  3356 ;;  sign            1   10[BANK1 ] unsigned char 
  3357 ;;  counter         1    9[BANK1 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  4    0[BANK1 ] long 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       8       0       0
  3368 ;;      Locals:         0       0       6       0       0
  3369 ;;      Temps:          0       0       1       0       0
  3370 ;;      Totals:         0       0      15       0       0
  3371 ;;Total ram usage:       15 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    5
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_USART_Init
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function ___aldiv
  3383  1771                     ___aldiv:	
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3387  1771  1683               	bsf	3,5	;RP0=1, select bank1
  3388  1772  1303               	bcf	3,6	;RP1=0, select bank1
  3389  1773  01CF               	clrf	___aldiv@sign^(0+128)
  3390  1774  1FC8               	btfss	(___aldiv@divisor+3)^(0+128),7
  3391  1775  2F83               	goto	l649
  3392  1776  09C5               	comf	___aldiv@divisor^(0+128),f
  3393  1777  09C6               	comf	(___aldiv@divisor+1)^(0+128),f
  3394  1778  09C7               	comf	(___aldiv@divisor+2)^(0+128),f
  3395  1779  09C8               	comf	(___aldiv@divisor+3)^(0+128),f
  3396  177A  0AC5               	incf	___aldiv@divisor^(0+128),f
  3397  177B  1903               	skipnz
  3398  177C  0AC6               	incf	(___aldiv@divisor+1)^(0+128),f
  3399  177D  1903               	skipnz
  3400  177E  0AC7               	incf	(___aldiv@divisor+2)^(0+128),f
  3401  177F  1903               	skipnz
  3402  1780  0AC8               	incf	(___aldiv@divisor+3)^(0+128),f
  3403  1781  01CF               	clrf	___aldiv@sign^(0+128)
  3404  1782  0ACF               	incf	___aldiv@sign^(0+128),f
  3405  1783                     l649:	
  3406  1783  1FCC               	btfss	(___aldiv@dividend+3)^(0+128),7
  3407  1784  2F94               	goto	l2520
  3408  1785  09C9               	comf	___aldiv@dividend^(0+128),f
  3409  1786  09CA               	comf	(___aldiv@dividend+1)^(0+128),f
  3410  1787  09CB               	comf	(___aldiv@dividend+2)^(0+128),f
  3411  1788  09CC               	comf	(___aldiv@dividend+3)^(0+128),f
  3412  1789  0AC9               	incf	___aldiv@dividend^(0+128),f
  3413  178A  1903               	skipnz
  3414  178B  0ACA               	incf	(___aldiv@dividend+1)^(0+128),f
  3415  178C  1903               	skipnz
  3416  178D  0ACB               	incf	(___aldiv@dividend+2)^(0+128),f
  3417  178E  1903               	skipnz
  3418  178F  0ACC               	incf	(___aldiv@dividend+3)^(0+128),f
  3419  1790  3001               	movlw	1
  3420  1791  00CD               	movwf	??___aldiv^(0+128)
  3421  1792  084D               	movf	??___aldiv^(0+128),w
  3422  1793  06CF               	xorwf	___aldiv@sign^(0+128),f
  3423  1794                     l2520:	
  3424  1794  3000               	movlw	0
  3425  1795  00D3               	movwf	(___aldiv@quotient+3)^(0+128)
  3426  1796  3000               	movlw	0
  3427  1797  00D2               	movwf	(___aldiv@quotient+2)^(0+128)
  3428  1798  3000               	movlw	0
  3429  1799  00D1               	movwf	(___aldiv@quotient+1)^(0+128)
  3430  179A  3000               	movlw	0
  3431  179B  00D0               	movwf	___aldiv@quotient^(0+128)
  3432  179C  0848               	movf	(___aldiv@divisor+3)^(0+128),w
  3433  179D  0447               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3434  179E  0446               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3435  179F  0445               	iorwf	___aldiv@divisor^(0+128),w
  3436  17A0  1903               	skipnz
  3437  17A1  2FE9               	goto	l2542
  3438  17A2  01CE               	clrf	___aldiv@counter^(0+128)
  3439  17A3  0ACE               	incf	___aldiv@counter^(0+128),f
  3440  17A4                     l2528:	
  3441  17A4  1BC8               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3442  17A5  2FB4               	goto	l2530
  3443  17A6  3001               	movlw	1
  3444  17A7  00CD               	movwf	??___aldiv^(0+128)
  3445  17A8                     u2845:	
  3446  17A8  1003               	clrc
  3447  17A9  0DC5               	rlf	___aldiv@divisor^(0+128),f
  3448  17AA  0DC6               	rlf	(___aldiv@divisor+1)^(0+128),f
  3449  17AB  0DC7               	rlf	(___aldiv@divisor+2)^(0+128),f
  3450  17AC  0DC8               	rlf	(___aldiv@divisor+3)^(0+128),f
  3451  17AD  0BCD               	decfsz	??___aldiv^(0+128),f
  3452  17AE  2FA8               	goto	u2845
  3453  17AF  3001               	movlw	1
  3454  17B0  00CD               	movwf	??___aldiv^(0+128)
  3455  17B1  084D               	movf	??___aldiv^(0+128),w
  3456  17B2  07CE               	addwf	___aldiv@counter^(0+128),f
  3457  17B3  2FA4               	goto	l2528
  3458  17B4                     l2530:	
  3459  17B4  3001               	movlw	1
  3460  17B5  00CD               	movwf	??___aldiv^(0+128)
  3461  17B6                     u2865:	
  3462  17B6  1003               	clrc
  3463  17B7  0DD0               	rlf	___aldiv@quotient^(0+128),f
  3464  17B8  0DD1               	rlf	(___aldiv@quotient+1)^(0+128),f
  3465  17B9  0DD2               	rlf	(___aldiv@quotient+2)^(0+128),f
  3466  17BA  0DD3               	rlf	(___aldiv@quotient+3)^(0+128),f
  3467  17BB  0BCD               	decfsz	??___aldiv^(0+128),f
  3468  17BC  2FB6               	goto	u2865
  3469  17BD  0848               	movf	(___aldiv@divisor+3)^(0+128),w
  3470  17BE  024C               	subwf	(___aldiv@dividend+3)^(0+128),w
  3471  17BF  1D03               	skipz
  3472  17C0  2FCB               	goto	u2875
  3473  17C1  0847               	movf	(___aldiv@divisor+2)^(0+128),w
  3474  17C2  024B               	subwf	(___aldiv@dividend+2)^(0+128),w
  3475  17C3  1D03               	skipz
  3476  17C4  2FCB               	goto	u2875
  3477  17C5  0846               	movf	(___aldiv@divisor+1)^(0+128),w
  3478  17C6  024A               	subwf	(___aldiv@dividend+1)^(0+128),w
  3479  17C7  1D03               	skipz
  3480  17C8  2FCB               	goto	u2875
  3481  17C9  0845               	movf	___aldiv@divisor^(0+128),w
  3482  17CA  0249               	subwf	___aldiv@dividend^(0+128),w
  3483  17CB                     u2875:	
  3484  17CB  1C03               	skipc
  3485  17CC  2FDC               	goto	l2538
  3486  17CD  0845               	movf	___aldiv@divisor^(0+128),w
  3487  17CE  02C9               	subwf	___aldiv@dividend^(0+128),f
  3488  17CF  0846               	movf	(___aldiv@divisor+1)^(0+128),w
  3489  17D0  1C03               	skipc
  3490  17D1  0F46               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3491  17D2  02CA               	subwf	(___aldiv@dividend+1)^(0+128),f
  3492  17D3  0847               	movf	(___aldiv@divisor+2)^(0+128),w
  3493  17D4  1C03               	skipc
  3494  17D5  0F47               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3495  17D6  02CB               	subwf	(___aldiv@dividend+2)^(0+128),f
  3496  17D7  0848               	movf	(___aldiv@divisor+3)^(0+128),w
  3497  17D8  1C03               	skipc
  3498  17D9  0F48               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3499  17DA  02CC               	subwf	(___aldiv@dividend+3)^(0+128),f
  3500  17DB  1450               	bsf	___aldiv@quotient^(0+128),0
  3501  17DC                     l2538:	
  3502  17DC  3001               	movlw	1
  3503  17DD                     u2885:	
  3504  17DD  1003               	clrc
  3505  17DE  0CC8               	rrf	(___aldiv@divisor+3)^(0+128),f
  3506  17DF  0CC7               	rrf	(___aldiv@divisor+2)^(0+128),f
  3507  17E0  0CC6               	rrf	(___aldiv@divisor+1)^(0+128),f
  3508  17E1  0CC5               	rrf	___aldiv@divisor^(0+128),f
  3509  17E2  3EFF               	addlw	-1
  3510  17E3  1D03               	skipz
  3511  17E4  2FDD               	goto	u2885
  3512  17E5  3001               	movlw	1
  3513  17E6  02CE               	subwf	___aldiv@counter^(0+128),f
  3514  17E7  1D03               	btfss	3,2
  3515  17E8  2FB4               	goto	l2530
  3516  17E9                     l2542:	
  3517  17E9  084F               	movf	___aldiv@sign^(0+128),w
  3518  17EA  1903               	btfsc	3,2
  3519  17EB  2FF7               	goto	l2546
  3520  17EC  09D0               	comf	___aldiv@quotient^(0+128),f
  3521  17ED  09D1               	comf	(___aldiv@quotient+1)^(0+128),f
  3522  17EE  09D2               	comf	(___aldiv@quotient+2)^(0+128),f
  3523  17EF  09D3               	comf	(___aldiv@quotient+3)^(0+128),f
  3524  17F0  0AD0               	incf	___aldiv@quotient^(0+128),f
  3525  17F1  1903               	skipnz
  3526  17F2  0AD1               	incf	(___aldiv@quotient+1)^(0+128),f
  3527  17F3  1903               	skipnz
  3528  17F4  0AD2               	incf	(___aldiv@quotient+2)^(0+128),f
  3529  17F5  1903               	skipnz
  3530  17F6  0AD3               	incf	(___aldiv@quotient+3)^(0+128),f
  3531  17F7                     l2546:	
  3532  17F7  0853               	movf	(___aldiv@quotient+3)^(0+128),w
  3533  17F8  00C8               	movwf	(?___aldiv+3)^(0+128)
  3534  17F9  0852               	movf	(___aldiv@quotient+2)^(0+128),w
  3535  17FA  00C7               	movwf	(?___aldiv+2)^(0+128)
  3536  17FB  0851               	movf	(___aldiv@quotient+1)^(0+128),w
  3537  17FC  00C6               	movwf	(?___aldiv+1)^(0+128)
  3538  17FD  0850               	movf	___aldiv@quotient^(0+128),w
  3539  17FE  00C5               	movwf	?___aldiv^(0+128)
  3540  17FF  0008               	return
  3541  1800                     __end_of___aldiv:	
  3542                           
  3543                           	psect	text10
  3544  12A8                     __ptext10:	
  3545 ;; *************** function _TIMER0_Set *****************
  3546 ;; Defined at:
  3547 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  contagens       1    wreg     unsigned char 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  contagens       1    0[BANK1 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;		None               void
  3554 ;; Registers used:
  3555 ;;		wreg
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         0       0       1       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         0       0       1       0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    5
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _TIMER0_Set
  3577  12A8                     _TIMER0_Set:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _TIMER0_Set: [wreg]
  3581                           ;TIMER0_Set@contagens stored from wreg
  3582  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  3583  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  3584  12AA  00C5               	movwf	TIMER0_Set@contagens^(0+128)
  3585                           
  3586                           ;timers.c: 22: TMR0 = contagens;
  3587  12AB  0845               	movf	TIMER0_Set@contagens^(0+128),w
  3588  12AC  1283               	bcf	3,5	;RP0=0, select bank0
  3589  12AD  1303               	bcf	3,6	;RP1=0, select bank0
  3590  12AE  0081               	movwf	1	;volatile
  3591  12AF  0008               	return
  3592  12B0                     __end_of_TIMER0_Set:	
  3593                           
  3594                           	psect	text11
  3595  12B8                     __ptext11:	
  3596 ;; *************** function _TIMER0_Init *****************
  3597 ;; Defined at:
  3598 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		None
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    5
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function _TIMER0_Init
  3628  12B8                     _TIMER0_Init:	
  3629                           
  3630                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _TIMER0_Init: []
  3634  12B8  1683               	bsf	3,5	;RP0=1, select bank1
  3635  12B9  1303               	bcf	3,6	;RP1=0, select bank1
  3636  12BA  1281               	bcf	1,5	;volatile
  3637                           
  3638                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3639  12BB  1201               	bcf	1,4	;volatile
  3640                           
  3641                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3642  12BC  1181               	bcf	1,3	;volatile
  3643                           
  3644                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3645  12BD  1501               	bsf	1,2	;volatile
  3646                           
  3647                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3648  12BE  1481               	bsf	1,1	;volatile
  3649                           
  3650                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3651  12BF  1401               	bsf	1,0	;volatile
  3652                           
  3653                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3654  12C0  110B               	bcf	11,2	;volatile
  3655                           
  3656                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3657  12C1  168B               	bsf	11,5	;volatile
  3658  12C2  0008               	return
  3659  12C3                     __end_of_TIMER0_Init:	
  3660                           
  3661                           	psect	text12
  3662  1441                     __ptext12:	
  3663 ;; *************** function _PWM_Init *****************
  3664 ;; Defined at:
  3665 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0
  3682 ;;      Totals:         0       0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    5
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _PWM_Init
  3695  1441                     _PWM_Init:	
  3696                           
  3697                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _PWM_Init: [wreg]
  3701  1441  1283               	bcf	3,5	;RP0=0, select bank0
  3702  1442  1303               	bcf	3,6	;RP1=0, select bank0
  3703  1443  1492               	bsf	18,1	;volatile
  3704                           
  3705                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3706  1444  1012               	bcf	18,0	;volatile
  3707                           
  3708                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3709  1445  1312               	bcf	18,6	;volatile
  3710                           
  3711                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3712  1446  1292               	bcf	18,5	;volatile
  3713                           
  3714                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3715  1447  1212               	bcf	18,4	;volatile
  3716                           
  3717                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3718  1448  1192               	bcf	18,3	;volatile
  3719                           
  3720                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3721  1449  1512               	bsf	18,2	;volatile
  3722                           
  3723                           ;pwm.c: 27: PR2 = 255;
  3724  144A  30FF               	movlw	255
  3725  144B  1683               	bsf	3,5	;RP0=1, select bank1
  3726  144C  1303               	bcf	3,6	;RP1=0, select bank1
  3727  144D  0092               	movwf	18	;volatile
  3728                           
  3729                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3730  144E  1283               	bcf	3,5	;RP0=0, select bank0
  3731  144F  1303               	bcf	3,6	;RP1=0, select bank0
  3732  1450  1597               	bsf	23,3	;volatile
  3733                           
  3734                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3735  1451  1517               	bsf	23,2	;volatile
  3736                           
  3737                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3738  1452  1497               	bsf	23,1	;volatile
  3739                           
  3740                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3741  1453  1417               	bsf	23,0	;volatile
  3742                           
  3743                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3744  1454  1683               	bsf	3,5	;RP0=1, select bank1
  3745  1455  1303               	bcf	3,6	;RP1=0, select bank1
  3746  1456  150C               	bsf	12,2	;volatile
  3747                           
  3748                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3749  1457  1283               	bcf	3,5	;RP0=0, select bank0
  3750  1458  1303               	bcf	3,6	;RP1=0, select bank0
  3751  1459  110C               	bcf	12,2	;volatile
  3752                           
  3753                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3754  145A  159D               	bsf	29,3	;volatile
  3755                           
  3756                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3757  145B  151D               	bsf	29,2	;volatile
  3758                           
  3759                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3760  145C  149D               	bsf	29,1	;volatile
  3761                           
  3762                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3763  145D  141D               	bsf	29,0	;volatile
  3764                           
  3765                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3766  145E  1683               	bsf	3,5	;RP0=1, select bank1
  3767  145F  1303               	bcf	3,6	;RP1=0, select bank1
  3768  1460  140D               	bsf	13,0	;volatile
  3769                           
  3770                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3771  1461  1283               	bcf	3,5	;RP0=0, select bank0
  3772  1462  1303               	bcf	3,6	;RP1=0, select bank0
  3773  1463  100D               	bcf	13,0	;volatile
  3774  1464  0008               	return
  3775  1465                     __end_of_PWM_Init:	
  3776                           
  3777                           	psect	text13
  3778  13DA                     __ptext13:	
  3779 ;; *************** function _PWM_DutyCycle2 *****************
  3780 ;; Defined at:
  3781 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  valor           2    0[BANK1 ] int 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;		None               void
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       2       0       0
  3796 ;;      Locals:         0       0       0       0       0
  3797 ;;      Temps:          0       0       2       0       0
  3798 ;;      Totals:         0       0       4       0       0
  3799 ;;Total ram usage:        4 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    5
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _PWM_DutyCycle2
  3811  13DA                     _PWM_DutyCycle2:	
  3812                           
  3813                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3817  13DA  1683               	bsf	3,5	;RP0=1, select bank1
  3818  13DB  1303               	bcf	3,6	;RP1=0, select bank1
  3819  13DC  0846               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3820  13DD  00C8               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3821  13DE  0845               	movf	PWM_DutyCycle2@valor^(0+128),w
  3822  13DF  00C7               	movwf	??_PWM_DutyCycle2^(0+128)
  3823  13E0  0D48               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3824  13E1  0CC8               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3825  13E2  0CC7               	rrf	??_PWM_DutyCycle2^(0+128),f
  3826  13E3  0D48               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3827  13E4  0CC8               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3828  13E5  0CC7               	rrf	??_PWM_DutyCycle2^(0+128),f
  3829  13E6  0847               	movf	??_PWM_DutyCycle2^(0+128),w
  3830  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  3831  13E8  1303               	bcf	3,6	;RP1=0, select bank0
  3832  13E9  009B               	movwf	27	;volatile
  3833                           
  3834                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3835  13EA  1683               	bsf	3,5	;RP0=1, select bank1
  3836  13EB  1303               	bcf	3,6	;RP1=0, select bank1
  3837  13EC  0845               	movf	PWM_DutyCycle2@valor^(0+128),w
  3838  13ED  00C7               	movwf	??_PWM_DutyCycle2^(0+128)
  3839  13EE  3003               	movlw	3
  3840  13EF                     u3505:	
  3841  13EF  1003               	clrc
  3842  13F0  0DC7               	rlf	??_PWM_DutyCycle2^(0+128),f
  3843  13F1  3EFF               	addlw	-1
  3844  13F2  1D03               	skipz
  3845  13F3  2BEF               	goto	u3505
  3846  13F4  1003               	clrc
  3847  13F5  0D47               	rlf	??_PWM_DutyCycle2^(0+128),w
  3848  13F6  380C               	iorlw	12
  3849  13F7  1283               	bcf	3,5	;RP0=0, select bank0
  3850  13F8  1303               	bcf	3,6	;RP1=0, select bank0
  3851  13F9  009D               	movwf	29	;volatile
  3852  13FA  0008               	return
  3853  13FB                     __end_of_PWM_DutyCycle2:	
  3854                           
  3855                           	psect	text14
  3856  13B9                     __ptext14:	
  3857 ;; *************** function _PWM_DutyCycle1 *****************
  3858 ;; Defined at:
  3859 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  valor           2    0[BANK1 ] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3873 ;;      Params:         0       0       2       0       0
  3874 ;;      Locals:         0       0       0       0       0
  3875 ;;      Temps:          0       0       2       0       0
  3876 ;;      Totals:         0       0       4       0       0
  3877 ;;Total ram usage:        4 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    5
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _PWM_DutyCycle1
  3889  13B9                     _PWM_DutyCycle1:	
  3890                           
  3891                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3895  13B9  1683               	bsf	3,5	;RP0=1, select bank1
  3896  13BA  1303               	bcf	3,6	;RP1=0, select bank1
  3897  13BB  0846               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3898  13BC  00C8               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3899  13BD  0845               	movf	PWM_DutyCycle1@valor^(0+128),w
  3900  13BE  00C7               	movwf	??_PWM_DutyCycle1^(0+128)
  3901  13BF  0D48               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3902  13C0  0CC8               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3903  13C1  0CC7               	rrf	??_PWM_DutyCycle1^(0+128),f
  3904  13C2  0D48               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3905  13C3  0CC8               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3906  13C4  0CC7               	rrf	??_PWM_DutyCycle1^(0+128),f
  3907  13C5  0847               	movf	??_PWM_DutyCycle1^(0+128),w
  3908  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  3909  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  3910  13C8  0095               	movwf	21	;volatile
  3911                           
  3912                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3913  13C9  1683               	bsf	3,5	;RP0=1, select bank1
  3914  13CA  1303               	bcf	3,6	;RP1=0, select bank1
  3915  13CB  0845               	movf	PWM_DutyCycle1@valor^(0+128),w
  3916  13CC  00C7               	movwf	??_PWM_DutyCycle1^(0+128)
  3917  13CD  3003               	movlw	3
  3918  13CE                     u3565:	
  3919  13CE  1003               	clrc
  3920  13CF  0DC7               	rlf	??_PWM_DutyCycle1^(0+128),f
  3921  13D0  3EFF               	addlw	-1
  3922  13D1  1D03               	skipz
  3923  13D2  2BCE               	goto	u3565
  3924  13D3  1003               	clrc
  3925  13D4  0D47               	rlf	??_PWM_DutyCycle1^(0+128),w
  3926  13D5  380C               	iorlw	12
  3927  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  3928  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  3929  13D8  0097               	movwf	23	;volatile
  3930  13D9  0008               	return
  3931  13DA                     __end_of_PWM_DutyCycle1:	
  3932                           
  3933                           	psect	text15
  3934  14B3                     __ptext15:	
  3935 ;; *************** function _LCD_WriteString *****************
  3936 ;; Defined at:
  3937 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3940 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3941 ;;		 -> STR_13(17), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;		None               void
  3946 ;; Registers used:
  3947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       0       2       0       0
  3954 ;;      Locals:         0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0
  3956 ;;      Totals:         0       0       2       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    6
  3960 ;; This function calls:
  3961 ;;		_LCD_WriteData
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           
  3968                           ;psect for function _LCD_WriteString
  3969  14B3                     _LCD_WriteString:	
  3970  14B3                     l2972:	
  3971                           ;lcd.c: 63: while(*Str != '\0')
  3972                           
  3973                           ;incstack = 0
  3974                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3975                           
  3976  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  3977  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  3978  14B5  0848               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3979  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  3980  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  3981  14B8  00FF               	movwf	127
  3982  14B9  1683               	bsf	3,5	;RP0=1, select bank1
  3983  14BA  1303               	bcf	3,6	;RP1=0, select bank1
  3984  14BB  0847               	movf	LCD_WriteString@Str^(0+128),w
  3985  14BC  0084               	movwf	4
  3986  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  3987  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  3988  14BF  120A  158A  2000  160A  118A  	fcall	stringtab
  3989  14C4  3800               	iorlw	0
  3990  14C5  1903               	btfsc	3,2
  3991  14C6  0008               	return
  3992                           
  3993                           ;lcd.c: 64: {
  3994                           ;lcd.c: 65: LCD_WriteData(*Str);
  3995  14C7  1683               	bsf	3,5	;RP0=1, select bank1
  3996  14C8  1303               	bcf	3,6	;RP1=0, select bank1
  3997  14C9  0848               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3998  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  3999  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  4000  14CC  00FF               	movwf	127
  4001  14CD  1683               	bsf	3,5	;RP0=1, select bank1
  4002  14CE  1303               	bcf	3,6	;RP1=0, select bank1
  4003  14CF  0847               	movf	LCD_WriteString@Str^(0+128),w
  4004  14D0  0084               	movwf	4
  4005  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  4006  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  4007  14D3  120A  158A  2000  160A  118A  	fcall	stringtab
  4008  14D8  160A  118A  232E  160A  118A  	fcall	_LCD_WriteData
  4009                           
  4010                           ;lcd.c: 66: Str++;
  4011  14DD  3001               	movlw	1
  4012  14DE  1683               	bsf	3,5	;RP0=1, select bank1
  4013  14DF  1303               	bcf	3,6	;RP1=0, select bank1
  4014  14E0  07C7               	addwf	LCD_WriteString@Str^(0+128),f
  4015  14E1  1803               	skipnc
  4016  14E2  0AC8               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4017  14E3  2CB3               	goto	l2972
  4018  14E4                     __end_of_LCD_WriteString:	
  4019                           
  4020                           	psect	text16
  4021  132E                     __ptext16:	
  4022 ;; *************** function _LCD_WriteData *****************
  4023 ;; Defined at:
  4024 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  Byte            1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  Byte            1    1[BANK1 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4038 ;;      Params:         0       0       0       0       0
  4039 ;;      Locals:         0       0       1       0       0
  4040 ;;      Temps:          0       0       1       0       0
  4041 ;;      Totals:         0       0       2       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    5
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_LCD_WriteString
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _LCD_WriteData
  4054  132E                     _LCD_WriteData:	
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _LCD_WriteData: [wreg]
  4058                           ;LCD_WriteData@Byte stored from wreg
  4059  132E  1683               	bsf	3,5	;RP0=1, select bank1
  4060  132F  1303               	bcf	3,6	;RP1=0, select bank1
  4061  1330  00C6               	movwf	LCD_WriteData@Byte^(0+128)
  4062                           
  4063                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4064  1331  1283               	bcf	3,5	;RP0=0, select bank0
  4065  1332  1303               	bcf	3,6	;RP1=0, select bank0
  4066  1333  1409               	bsf	9,0	;volatile
  4067                           
  4068                           ;lcd.c: 51: PORTD = Byte;
  4069  1334  1683               	bsf	3,5	;RP0=1, select bank1
  4070  1335  1303               	bcf	3,6	;RP1=0, select bank1
  4071  1336  0846               	movf	LCD_WriteData@Byte^(0+128),w
  4072  1337  1283               	bcf	3,5	;RP0=0, select bank0
  4073  1338  1303               	bcf	3,6	;RP1=0, select bank0
  4074  1339  0088               	movwf	8	;volatile
  4075                           
  4076                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4077  133A  1489               	bsf	9,1	;volatile
  4078                           
  4079                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4080  133B  303D               	movlw	61
  4081  133C  1683               	bsf	3,5	;RP0=1, select bank1
  4082  133D  1303               	bcf	3,6	;RP1=0, select bank1
  4083  133E  00C5               	movwf	??_LCD_WriteData^(0+128)
  4084  133F                     u4067:	
  4085  133F  0BC5               	decfsz	??_LCD_WriteData^(0+128),f
  4086  1340  2B3F               	goto	u4067
  4087                           
  4088                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4089  1341  1283               	bcf	3,5	;RP0=0, select bank0
  4090  1342  1303               	bcf	3,6	;RP1=0, select bank0
  4091  1343  1089               	bcf	9,1	;volatile
  4092  1344  0008               	return
  4093  1345                     __end_of_LCD_WriteData:	
  4094                           
  4095                           	psect	text17
  4096  167A                     __ptext17:	
  4097 ;; *************** function _LCD_Init *****************
  4098 ;; Defined at:
  4099 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0
  4115 ;;      Temps:          0       0       2       0       0
  4116 ;;      Totals:         0       0       2       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    6
  4120 ;; This function calls:
  4121 ;;		_LCD_WriteCmd
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function _LCD_Init
  4129  167A                     _LCD_Init:	
  4130                           
  4131                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4135  167A  1683               	bsf	3,5	;RP0=1, select bank1
  4136  167B  1303               	bcf	3,6	;RP1=0, select bank1
  4137  167C  119F               	bcf	31,3	;volatile
  4138                           
  4139                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4140  167D  151F               	bsf	31,2	;volatile
  4141                           
  4142                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4143  167E  109F               	bcf	31,1	;volatile
  4144                           
  4145                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4146  167F  101F               	bcf	31,0	;volatile
  4147                           
  4148                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4149  1680  305A               	movlw	90
  4150  1681  00C8               	movwf	(??_LCD_Init^(0+128)+1)
  4151  1682  30C3               	movlw	195
  4152  1683  00C7               	movwf	??_LCD_Init^(0+128)
  4153  1684                     u4077:	
  4154  1684  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4155  1685  2E84               	goto	u4077
  4156  1686  0BC8               	decfsz	(??_LCD_Init^(0+128)+1),f
  4157  1687  2E84               	goto	u4077
  4158                           
  4159                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4160  1688  3030               	movlw	48
  4161  1689  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4162                           
  4163                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4164  168E  3018               	movlw	24
  4165  168F  1683               	bsf	3,5	;RP0=1, select bank1
  4166  1690  1303               	bcf	3,6	;RP1=0, select bank1
  4167  1691  00C8               	movwf	(??_LCD_Init^(0+128)+1)
  4168  1692  30EF               	movlw	239
  4169  1693  00C7               	movwf	??_LCD_Init^(0+128)
  4170  1694                     u4087:	
  4171  1694  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4172  1695  2E94               	goto	u4087
  4173  1696  0BC8               	decfsz	(??_LCD_Init^(0+128)+1),f
  4174  1697  2E94               	goto	u4087
  4175                           
  4176                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4177  1698  3030               	movlw	48
  4178  1699  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4179                           
  4180                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4181  169E  3099               	movlw	153
  4182  169F  1683               	bsf	3,5	;RP0=1, select bank1
  4183  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  4184  16A1  00C7               	movwf	??_LCD_Init^(0+128)
  4185  16A2                     u4097:	
  4186  16A2  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4187  16A3  2EA2               	goto	u4097
  4188                           
  4189                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4190  16A4  3030               	movlw	48
  4191  16A5  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4192                           
  4193                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4194  16AA  303D               	movlw	61
  4195  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  4196  16AC  1303               	bcf	3,6	;RP1=0, select bank1
  4197  16AD  00C7               	movwf	??_LCD_Init^(0+128)
  4198  16AE                     u4107:	
  4199  16AE  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4200  16AF  2EAE               	goto	u4107
  4201                           
  4202                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4203  16B0  3038               	movlw	56
  4204  16B1  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4205                           
  4206                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4207  16B6  303D               	movlw	61
  4208  16B7  1683               	bsf	3,5	;RP0=1, select bank1
  4209  16B8  1303               	bcf	3,6	;RP1=0, select bank1
  4210  16B9  00C7               	movwf	??_LCD_Init^(0+128)
  4211  16BA                     u4117:	
  4212  16BA  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4213  16BB  2EBA               	goto	u4117
  4214                           
  4215                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4216  16BC  3001               	movlw	1
  4217  16BD  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4218                           
  4219                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4220  16C2  300C               	movlw	12
  4221  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  4222  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  4223  16C5  00C8               	movwf	(??_LCD_Init^(0+128)+1)
  4224  16C6  30F7               	movlw	247
  4225  16C7  00C7               	movwf	??_LCD_Init^(0+128)
  4226  16C8                     u4127:	
  4227  16C8  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4228  16C9  2EC8               	goto	u4127
  4229  16CA  0BC8               	decfsz	(??_LCD_Init^(0+128)+1),f
  4230  16CB  2EC8               	goto	u4127
  4231                           
  4232                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4233  16CC  300C               	movlw	12
  4234  16CD  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4235                           
  4236                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4237  16D2  303D               	movlw	61
  4238  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  4239  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  4240  16D5  00C7               	movwf	??_LCD_Init^(0+128)
  4241  16D6                     u4137:	
  4242  16D6  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4243  16D7  2ED6               	goto	u4137
  4244                           
  4245                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4246  16D8  3006               	movlw	6
  4247  16D9  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4248                           
  4249                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4250  16DE  303D               	movlw	61
  4251  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  4252  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  4253  16E1  00C7               	movwf	??_LCD_Init^(0+128)
  4254  16E2                     u4147:	
  4255  16E2  0BC7               	decfsz	??_LCD_Init^(0+128),f
  4256  16E3  2EE2               	goto	u4147
  4257  16E4  0008               	return
  4258  16E5                     __end_of_LCD_Init:	
  4259                           
  4260                           	psect	text18
  4261  1399                     __ptext18:	
  4262 ;; *************** function _LCD_Cursor *****************
  4263 ;; Defined at:
  4264 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  Row             1    wreg     unsigned char 
  4267 ;;  Col             1    0[BANK1 ] unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  Row             1    2[BANK1 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;		None               void
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       0       1       0       0
  4280 ;;      Locals:         0       0       1       0       0
  4281 ;;      Temps:          0       0       1       0       0
  4282 ;;      Totals:         0       0       3       0       0
  4283 ;;Total ram usage:        3 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    5
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _LCD_Cursor
  4295  1399                     _LCD_Cursor:	
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4299                           ;LCD_Cursor@Row stored from wreg
  4300  1399  1683               	bsf	3,5	;RP0=1, select bank1
  4301  139A  1303               	bcf	3,6	;RP1=0, select bank1
  4302  139B  00C7               	movwf	LCD_Cursor@Row^(0+128)
  4303                           
  4304                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4305  139C  1283               	bcf	3,5	;RP0=0, select bank0
  4306  139D  1303               	bcf	3,6	;RP1=0, select bank0
  4307  139E  1009               	bcf	9,0	;volatile
  4308                           
  4309                           ;lcd.c: 14: if (Row == 0)
  4310  139F  1683               	bsf	3,5	;RP0=1, select bank1
  4311  13A0  1303               	bcf	3,6	;RP1=0, select bank1
  4312  13A1  08C7               	movf	LCD_Cursor@Row^(0+128),f
  4313  13A2  1D03               	skipz
  4314  13A3  2BA7               	goto	l2958
  4315                           
  4316                           ;lcd.c: 15: {
  4317                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4318  13A4  0845               	movf	LCD_Cursor@Col^(0+128),w
  4319  13A5  3E80               	addlw	128
  4320  13A6  2BAB               	goto	L2
  4321  13A7                     l2958:	
  4322                           ;lcd.c: 17: }
  4323                           
  4324                           
  4325                           ;lcd.c: 18: else
  4326                           ;lcd.c: 19: {
  4327                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4328  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  4329  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  4330  13A9  0845               	movf	LCD_Cursor@Col^(0+128),w
  4331  13AA  3EC0               	addlw	192
  4332  13AB                     L2:	
  4333  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  4334  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  4335  13AD  0088               	movwf	8	;volatile
  4336                           
  4337                           ;lcd.c: 21: }
  4338                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4339  13AE  1489               	bsf	9,1	;volatile
  4340                           
  4341                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4342  13AF  303D               	movlw	61
  4343  13B0  1683               	bsf	3,5	;RP0=1, select bank1
  4344  13B1  1303               	bcf	3,6	;RP1=0, select bank1
  4345  13B2  00C6               	movwf	??_LCD_Cursor^(0+128)
  4346  13B3                     u4157:	
  4347  13B3  0BC6               	decfsz	??_LCD_Cursor^(0+128),f
  4348  13B4  2BB3               	goto	u4157
  4349                           
  4350                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4351  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  4352  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  4353  13B7  1089               	bcf	9,1	;volatile
  4354  13B8  0008               	return
  4355  13B9                     __end_of_LCD_Cursor:	
  4356                           
  4357                           	psect	text19
  4358  148A                     __ptext19:	
  4359 ;; *************** function _LCD_Clear *****************
  4360 ;; Defined at:
  4361 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4375 ;;      Params:         0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0
  4377 ;;      Temps:          0       0       2       0       0
  4378 ;;      Totals:         0       0       2       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    6
  4382 ;; This function calls:
  4383 ;;		_LCD_WriteCmd
  4384 ;; This function is called by:
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _LCD_Clear
  4391  148A                     _LCD_Clear:	
  4392                           
  4393                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4397  148A  3001               	movlw	1
  4398  148B  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4399                           
  4400                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4401  1490  300C               	movlw	12
  4402  1491  1683               	bsf	3,5	;RP0=1, select bank1
  4403  1492  1303               	bcf	3,6	;RP1=0, select bank1
  4404  1493  00C8               	movwf	(??_LCD_Clear^(0+128)+1)
  4405  1494  30F7               	movlw	247
  4406  1495  00C7               	movwf	??_LCD_Clear^(0+128)
  4407  1496                     u4167:	
  4408  1496  0BC7               	decfsz	??_LCD_Clear^(0+128),f
  4409  1497  2C96               	goto	u4167
  4410  1498  0BC8               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4411  1499  2C96               	goto	u4167
  4412                           
  4413                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4414  149A  300C               	movlw	12
  4415  149B  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4416                           
  4417                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4418  14A0  303D               	movlw	61
  4419  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  4420  14A2  1303               	bcf	3,6	;RP1=0, select bank1
  4421  14A3  00C7               	movwf	??_LCD_Clear^(0+128)
  4422  14A4                     u4177:	
  4423  14A4  0BC7               	decfsz	??_LCD_Clear^(0+128),f
  4424  14A5  2CA4               	goto	u4177
  4425                           
  4426                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4427  14A6  3006               	movlw	6
  4428  14A7  160A  118A  2317  160A  118A  	fcall	_LCD_WriteCmd
  4429                           
  4430                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4431  14AC  303D               	movlw	61
  4432  14AD  1683               	bsf	3,5	;RP0=1, select bank1
  4433  14AE  1303               	bcf	3,6	;RP1=0, select bank1
  4434  14AF  00C7               	movwf	??_LCD_Clear^(0+128)
  4435  14B0                     u4187:	
  4436  14B0  0BC7               	decfsz	??_LCD_Clear^(0+128),f
  4437  14B1  2CB0               	goto	u4187
  4438  14B2  0008               	return
  4439  14B3                     __end_of_LCD_Clear:	
  4440                           
  4441                           	psect	text20
  4442  1317                     __ptext20:	
  4443 ;; *************** function _LCD_WriteCmd *****************
  4444 ;; Defined at:
  4445 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  Byte            1    wreg     unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  Byte            1    1[BANK1 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;		None               void
  4452 ;; Registers used:
  4453 ;;		wreg
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         0       0       0       0       0
  4460 ;;      Locals:         0       0       1       0       0
  4461 ;;      Temps:          0       0       1       0       0
  4462 ;;      Totals:         0       0       2       0       0
  4463 ;;Total ram usage:        2 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    5
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_LCD_Clear
  4470 ;;		_LCD_Init
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _LCD_WriteCmd
  4476  1317                     _LCD_WriteCmd:	
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _LCD_WriteCmd: [wreg]
  4480                           ;LCD_WriteCmd@Byte stored from wreg
  4481  1317  1683               	bsf	3,5	;RP0=1, select bank1
  4482  1318  1303               	bcf	3,6	;RP1=0, select bank1
  4483  1319  00C6               	movwf	LCD_WriteCmd@Byte^(0+128)
  4484                           
  4485                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4486  131A  1283               	bcf	3,5	;RP0=0, select bank0
  4487  131B  1303               	bcf	3,6	;RP1=0, select bank0
  4488  131C  1009               	bcf	9,0	;volatile
  4489                           
  4490                           ;lcd.c: 36: PORTD = Byte;
  4491  131D  1683               	bsf	3,5	;RP0=1, select bank1
  4492  131E  1303               	bcf	3,6	;RP1=0, select bank1
  4493  131F  0846               	movf	LCD_WriteCmd@Byte^(0+128),w
  4494  1320  1283               	bcf	3,5	;RP0=0, select bank0
  4495  1321  1303               	bcf	3,6	;RP1=0, select bank0
  4496  1322  0088               	movwf	8	;volatile
  4497                           
  4498                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4499  1323  1489               	bsf	9,1	;volatile
  4500                           
  4501                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4502  1324  303D               	movlw	61
  4503  1325  1683               	bsf	3,5	;RP0=1, select bank1
  4504  1326  1303               	bcf	3,6	;RP1=0, select bank1
  4505  1327  00C5               	movwf	??_LCD_WriteCmd^(0+128)
  4506  1328                     u4197:	
  4507  1328  0BC5               	decfsz	??_LCD_WriteCmd^(0+128),f
  4508  1329  2B28               	goto	u4197
  4509                           
  4510                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4511  132A  1283               	bcf	3,5	;RP0=0, select bank0
  4512  132B  1303               	bcf	3,6	;RP1=0, select bank0
  4513  132C  1089               	bcf	9,1	;volatile
  4514  132D  0008               	return
  4515  132E                     __end_of_LCD_WriteCmd:	
  4516                           
  4517                           	psect	text21
  4518  12F1                     __ptext21:	
  4519 ;; *************** function _ADC_Init *****************
  4520 ;; Defined at:
  4521 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		None
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       0       0       0       0
  4536 ;;      Locals:         0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0
  4538 ;;      Totals:         0       0       0       0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    5
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _ADC_Init
  4551  12F1                     _ADC_Init:	
  4552                           
  4553                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4554                           
  4555                           ;incstack = 0
  4556                           ; Regs used in _ADC_Init: []
  4557  12F1  1683               	bsf	3,5	;RP0=1, select bank1
  4558  12F2  1303               	bcf	3,6	;RP1=0, select bank1
  4559  12F3  179F               	bsf	31,7	;volatile
  4560                           
  4561                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4562  12F4  159F               	bsf	31,3	;volatile
  4563                           
  4564                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4565  12F5  151F               	bsf	31,2	;volatile
  4566                           
  4567                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4568  12F6  149F               	bsf	31,1	;volatile
  4569                           
  4570                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4571  12F7  101F               	bcf	31,0	;volatile
  4572                           
  4573                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4574  12F8  1283               	bcf	3,5	;RP0=0, select bank0
  4575  12F9  1303               	bcf	3,6	;RP1=0, select bank0
  4576  12FA  179F               	bsf	31,7	;volatile
  4577                           
  4578                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4579  12FB  131F               	bcf	31,6	;volatile
  4580                           
  4581                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4582  12FC  1683               	bsf	3,5	;RP0=1, select bank1
  4583  12FD  1303               	bcf	3,6	;RP1=0, select bank1
  4584  12FE  130C               	bcf	12,6	;volatile
  4585                           
  4586                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4587  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  4588  1300  1303               	bcf	3,6	;RP1=0, select bank0
  4589  1301  130C               	bcf	12,6	;volatile
  4590  1302  0008               	return
  4591  1303                     __end_of_ADC_Init:	
  4592                           
  4593                           	psect	text22
  4594  0E6E                     __ptext22:	
  4595 ;; *************** function _ISR *****************
  4596 ;; Defined at:
  4597 ;;		line 300 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;		None               void
  4604 ;; Registers used:
  4605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4611 ;;      Params:         0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0
  4613 ;;      Temps:          0       4       0       0       0
  4614 ;;      Totals:         0       4       0       0       0
  4615 ;;Total ram usage:        4 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    4
  4618 ;; This function calls:
  4619 ;;		_Fuzzy
  4620 ;;		_USART_ReceiveChar
  4621 ;;		___lwtoft
  4622 ;;		i1_PWM_DutyCycle2
  4623 ;;		i1_TIMER0_Set
  4624 ;;		i1_USART_WriteString
  4625 ;;		i1___lwdiv
  4626 ;;		i1___wmul
  4627 ;; This function is called by:
  4628 ;;		Interrupt level 1
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _ISR
  4634  0E6E                     _ISR:	
  4635                           
  4636                           ;main.c: 303: if (PIR1bits.RCIF)
  4637  0E6E  1E8C               	btfss	12,5	;volatile
  4638  0E6F  2F92               	goto	i1l3222
  4639                           
  4640                           ;main.c: 304: {
  4641                           ;main.c: 305: if (USART_ReceiveChar() == '0')
  4642  0E70  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4643  0E75  3A30               	xorlw	48
  4644  0E76  1D03               	skipz
  4645  0E77  2E91               	goto	i1l3156
  4646                           
  4647                           ;main.c: 306: {
  4648                           ;main.c: 307: USART_WriteString("\n\rdesligado\n\r");
  4649  0E78  30A0               	movlw	low (STR_1-__stringbase)
  4650  0E79  00F1               	movwf	i1USART_WriteString@str
  4651  0E7A  3080               	movlw	128
  4652  0E7B  00F2               	movwf	i1USART_WriteString@str+1
  4653  0E7C  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4654                           
  4655                           ;main.c: 308: pwm = 0;
  4656  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0E83  01ED               	clrf	_pwm
  4659  0E84  01EE               	clrf	_pwm+1
  4660                           
  4661                           ;main.c: 309: PWM_DutyCycle2(pwm);
  4662  0E85  086E               	movf	_pwm+1,w
  4663  0E86  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4664  0E87  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4665  0E88  086D               	movf	_pwm,w
  4666  0E89  01F0               	clrf	i1PWM_DutyCycle2@valor
  4667  0E8A  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4668  0E8B  160A  118A  2345  120A  158A  	fcall	i1_PWM_DutyCycle2
  4669                           
  4670                           ;main.c: 310: return;
  4671  0E90  2FF3               	goto	i1l178
  4672  0E91                     i1l3156:	
  4673                           
  4674                           ;main.c: 311: }
  4675                           ;main.c: 313: if (USART_ReceiveChar() == '1')
  4676  0E91  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4677  0E96  3A31               	xorlw	49
  4678  0E97  1D03               	skipz
  4679  0E98  2EA8               	goto	i1l3162
  4680                           
  4681                           ;main.c: 314: {
  4682                           ;main.c: 315: USART_WriteString("\n\rpwm = \n\r");
  4683  0E99  30AE               	movlw	low (STR_2-__stringbase)
  4684  0E9A  00F1               	movwf	i1USART_WriteString@str
  4685  0E9B  3080               	movlw	128
  4686  0E9C  00F2               	movwf	i1USART_WriteString@str+1
  4687  0E9D  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4688                           
  4689                           ;main.c: 316: setpointUI = 720;
  4690  0EA2  30D0               	movlw	208
  4691  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  4692  0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  4693  0EA5  00EC               	movwf	_setpointUI^(0+128)
  4694  0EA6  3002               	movlw	2
  4695  0EA7  00ED               	movwf	(_setpointUI^(0+128)+1)
  4696  0EA8                     i1l3162:	
  4697                           
  4698                           ;main.c: 318: }
  4699                           ;main.c: 320: if (USART_ReceiveChar() == '2')
  4700  0EA8  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4701  0EAD  3A32               	xorlw	50
  4702  0EAE  1D03               	skipz
  4703  0EAF  2EBF               	goto	i1l3168
  4704                           
  4705                           ;main.c: 321: {
  4706                           ;main.c: 322: USART_WriteString("\n\rpwm = \n\r");
  4707  0EB0  30AE               	movlw	low (STR_2-__stringbase)
  4708  0EB1  00F1               	movwf	i1USART_WriteString@str
  4709  0EB2  3080               	movlw	128
  4710  0EB3  00F2               	movwf	i1USART_WriteString@str+1
  4711  0EB4  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4712                           
  4713                           ;main.c: 323: setpointUI = 1450;
  4714  0EB9  30AA               	movlw	170
  4715  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  4716  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  4717  0EBC  00EC               	movwf	_setpointUI^(0+128)
  4718  0EBD  3005               	movlw	5
  4719  0EBE  00ED               	movwf	(_setpointUI^(0+128)+1)
  4720  0EBF                     i1l3168:	
  4721                           
  4722                           ;main.c: 325: }
  4723                           ;main.c: 327: if (USART_ReceiveChar() == '3')
  4724  0EBF  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4725  0EC4  3A33               	xorlw	51
  4726  0EC5  1D03               	skipz
  4727  0EC6  2ED6               	goto	i1l3174
  4728                           
  4729                           ;main.c: 328: {
  4730                           ;main.c: 329: USART_WriteString("\n\rpwm = \n\r");
  4731  0EC7  30AE               	movlw	low (STR_2-__stringbase)
  4732  0EC8  00F1               	movwf	i1USART_WriteString@str
  4733  0EC9  3080               	movlw	128
  4734  0ECA  00F2               	movwf	i1USART_WriteString@str+1
  4735  0ECB  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4736                           
  4737                           ;main.c: 330: setpointUI = 2828;
  4738  0ED0  300C               	movlw	12
  4739  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  4740  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  4741  0ED3  00EC               	movwf	_setpointUI^(0+128)
  4742  0ED4  300B               	movlw	11
  4743  0ED5  00ED               	movwf	(_setpointUI^(0+128)+1)
  4744  0ED6                     i1l3174:	
  4745                           
  4746                           ;main.c: 332: }
  4747                           ;main.c: 334: if (USART_ReceiveChar() == '4')
  4748  0ED6  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4749  0EDB  3A34               	xorlw	52
  4750  0EDC  1D03               	skipz
  4751  0EDD  2F00               	goto	i1l3186
  4752                           
  4753                           ;main.c: 335: {
  4754                           ;main.c: 336: USART_WriteString("\n\rpwm = \n\r");
  4755  0EDE  30AE               	movlw	low (STR_2-__stringbase)
  4756  0EDF  00F1               	movwf	i1USART_WriteString@str
  4757  0EE0  3080               	movlw	128
  4758  0EE1  00F2               	movwf	i1USART_WriteString@str+1
  4759  0EE2  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4760                           
  4761                           ;main.c: 337: pwm = 3256;
  4762  0EE7  30B8               	movlw	184
  4763  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0EEA  00ED               	movwf	_pwm
  4766  0EEB  300C               	movlw	12
  4767  0EEC  00EE               	movwf	_pwm+1
  4768                           
  4769                           ;main.c: 338: PWM_DutyCycle2(pwm);
  4770  0EED  086E               	movf	_pwm+1,w
  4771  0EEE  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4772  0EEF  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4773  0EF0  086D               	movf	_pwm,w
  4774  0EF1  01F0               	clrf	i1PWM_DutyCycle2@valor
  4775  0EF2  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4776  0EF3  160A  118A  2345  120A  158A  	fcall	i1_PWM_DutyCycle2
  4777                           
  4778                           ;main.c: 339: if(PORTBbits.RB1 == 0)
  4779  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0EFA  1886               	btfsc	6,1	;volatile
  4782  0EFB  2EFE               	goto	i1l183
  4783                           
  4784                           ;main.c: 340: {
  4785                           ;main.c: 341: PORTBbits.RB1 = 1;
  4786  0EFC  1486               	bsf	6,1	;volatile
  4787                           
  4788                           ;main.c: 342: }else{
  4789  0EFD  2FF3               	goto	i1l178
  4790  0EFE                     i1l183:	
  4791                           
  4792                           ;main.c: 343: PORTBbits.RB1 = 0;
  4793  0EFE  1086               	bcf	6,1	;volatile
  4794                           
  4795                           ;main.c: 344: }
  4796                           ;main.c: 345: return;
  4797  0EFF  2FF3               	goto	i1l178
  4798  0F00                     i1l3186:	
  4799                           
  4800                           ;main.c: 346: }
  4801                           ;main.c: 348: if (USART_ReceiveChar() == '5')
  4802  0F00  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4803  0F05  3A35               	xorlw	53
  4804  0F06  1D03               	skipz
  4805  0F07  2F17               	goto	i1l3192
  4806                           
  4807                           ;main.c: 349: {
  4808                           ;main.c: 350: USART_WriteString("\n\rpwm = \n\r");
  4809  0F08  30AE               	movlw	low (STR_2-__stringbase)
  4810  0F09  00F1               	movwf	i1USART_WriteString@str
  4811  0F0A  3080               	movlw	128
  4812  0F0B  00F2               	movwf	i1USART_WriteString@str+1
  4813  0F0C  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4814                           
  4815                           ;main.c: 351: setpointUI = 4510;
  4816  0F11  309E               	movlw	158
  4817  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  4818  0F13  1303               	bcf	3,6	;RP1=0, select bank1
  4819  0F14  00EC               	movwf	_setpointUI^(0+128)
  4820  0F15  3011               	movlw	17
  4821  0F16  00ED               	movwf	(_setpointUI^(0+128)+1)
  4822  0F17                     i1l3192:	
  4823                           
  4824                           ;main.c: 353: }
  4825                           ;main.c: 355: if (USART_ReceiveChar() == '6')
  4826  0F17  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4827  0F1C  3A36               	xorlw	54
  4828  0F1D  1D03               	skipz
  4829  0F1E  2F2E               	goto	i1l3198
  4830                           
  4831                           ;main.c: 356: {
  4832                           ;main.c: 357: USART_WriteString("\n\rpwm = 768\n\r");
  4833  0F1F  3092               	movlw	low (STR_7-__stringbase)
  4834  0F20  00F1               	movwf	i1USART_WriteString@str
  4835  0F21  3080               	movlw	128
  4836  0F22  00F2               	movwf	i1USART_WriteString@str+1
  4837  0F23  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4838                           
  4839                           ;main.c: 358: setpointUI = 5760;
  4840  0F28  3080               	movlw	128
  4841  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  4842  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  4843  0F2B  00EC               	movwf	_setpointUI^(0+128)
  4844  0F2C  3016               	movlw	22
  4845  0F2D  00ED               	movwf	(_setpointUI^(0+128)+1)
  4846  0F2E                     i1l3198:	
  4847                           
  4848                           ;main.c: 360: }
  4849                           ;main.c: 362: if (USART_ReceiveChar() == '7')
  4850  0F2E  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4851  0F33  3A37               	xorlw	55
  4852  0F34  1D03               	skipz
  4853  0F35  2F45               	goto	i1l3204
  4854                           
  4855                           ;main.c: 363: {
  4856                           ;main.c: 364: USART_WriteString("\n\rpwm = 896\n\r");
  4857  0F36  3084               	movlw	low (STR_8-__stringbase)
  4858  0F37  00F1               	movwf	i1USART_WriteString@str
  4859  0F38  3080               	movlw	128
  4860  0F39  00F2               	movwf	i1USART_WriteString@str+1
  4861  0F3A  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4862                           
  4863                           ;main.c: 365: setpointUI = 6890;
  4864  0F3F  30EA               	movlw	234
  4865  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  4867  0F42  00EC               	movwf	_setpointUI^(0+128)
  4868  0F43  301A               	movlw	26
  4869  0F44  00ED               	movwf	(_setpointUI^(0+128)+1)
  4870  0F45                     i1l3204:	
  4871                           
  4872                           ;main.c: 367: }
  4873                           ;main.c: 369: if (USART_ReceiveChar() == '8')
  4874  0F45  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4875  0F4A  3A38               	xorlw	56
  4876  0F4B  1D03               	skipz
  4877  0F4C  2F5C               	goto	i1l3210
  4878                           
  4879                           ;main.c: 370: {
  4880                           ;main.c: 371: USART_WriteString("\n\rpwm = \n\r");
  4881  0F4D  30AE               	movlw	low (STR_2-__stringbase)
  4882  0F4E  00F1               	movwf	i1USART_WriteString@str
  4883  0F4F  3080               	movlw	128
  4884  0F50  00F2               	movwf	i1USART_WriteString@str+1
  4885  0F51  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4886                           
  4887                           ;main.c: 372: setpointUI = 8100;
  4888  0F56  30A4               	movlw	164
  4889  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  4890  0F58  1303               	bcf	3,6	;RP1=0, select bank1
  4891  0F59  00EC               	movwf	_setpointUI^(0+128)
  4892  0F5A  301F               	movlw	31
  4893  0F5B  00ED               	movwf	(_setpointUI^(0+128)+1)
  4894  0F5C                     i1l3210:	
  4895                           
  4896                           ;main.c: 374: }
  4897                           ;main.c: 376: if (USART_ReceiveChar() == '9')
  4898  0F5C  160A  118A  2360  120A  158A  	fcall	_USART_ReceiveChar
  4899  0F61  3A39               	xorlw	57
  4900  0F62  1D03               	skipz
  4901  0F63  2F73               	goto	i1l3216
  4902                           
  4903                           ;main.c: 377: {
  4904                           ;main.c: 378: USART_WriteString("\n\rpwm = 1023\n\r");
  4905  0F64  3075               	movlw	low (STR_10-__stringbase)
  4906  0F65  00F1               	movwf	i1USART_WriteString@str
  4907  0F66  3080               	movlw	128
  4908  0F67  00F2               	movwf	i1USART_WriteString@str+1
  4909  0F68  160A  118A  23FB  120A  158A  	fcall	i1_USART_WriteString
  4910                           
  4911                           ;main.c: 379: setpointUI = 9000;
  4912  0F6D  3028               	movlw	40
  4913  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  4914  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0F70  00EC               	movwf	_setpointUI^(0+128)
  4916  0F71  3023               	movlw	35
  4917  0F72  00ED               	movwf	(_setpointUI^(0+128)+1)
  4918  0F73                     i1l3216:	
  4919                           
  4920                           ;main.c: 381: }
  4921                           ;main.c: 385: Fuzzy();
  4922  0F73  120A  118A  203F  120A  158A  	fcall	_Fuzzy
  4923                           
  4924                           ;main.c: 386: tf = (setpointUI - 100);
  4925  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4926  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  4927  0F7A  086C               	movf	_setpointUI^(0+128),w
  4928  0F7B  3E9C               	addlw	156
  4929  0F7C  00F8               	movwf	___lwtoft@c
  4930  0F7D  086D               	movf	(_setpointUI+1)^(0+128),w
  4931  0F7E  1803               	skipnc
  4932  0F7F  3E01               	addlw	1
  4933  0F80  3EFF               	addlw	255
  4934  0F81  00F9               	movwf	___lwtoft@c+1
  4935  0F82  160A  118A  2303  120A  158A  	fcall	___lwtoft
  4936  0F87  0878               	movf	?___lwtoft,w
  4937  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  4938  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  4939  0F8A  00AF               	movwf	_tf^(0+128)
  4940  0F8B  0879               	movf	?___lwtoft+1,w
  4941  0F8C  00B0               	movwf	(_tf+1)^(0+128)
  4942  0F8D  087A               	movf	?___lwtoft+2,w
  4943  0F8E  00B1               	movwf	(_tf+2)^(0+128)
  4944                           
  4945                           ;main.c: 388: PIR1bits.RCIF = 0;
  4946  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4947  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4948  0F91  128C               	bcf	12,5	;volatile
  4949  0F92                     i1l3222:	
  4950                           
  4951                           ;main.c: 389: }
  4952                           ;main.c: 392: if (PIR1bits.ADIF)
  4953  0F92  1B0C               	btfsc	12,6	;volatile
  4954                           
  4955                           ;main.c: 393: {
  4956                           ;main.c: 397: PIR1bits.ADIF = 0;
  4957  0F93  130C               	bcf	12,6	;volatile
  4958                           
  4959                           ;main.c: 398: }
  4960                           ;main.c: 402: if (INTCONbits.T0IF)
  4961  0F94  1D0B               	btfss	11,2	;volatile
  4962  0F95  2FEF               	goto	i1l3248
  4963                           
  4964                           ;main.c: 403: {
  4965                           ;main.c: 405: TIMER0_Set(238);
  4966  0F96  30EE               	movlw	238
  4967  0F97  160A  118A  2292  120A  158A  	fcall	i1_TIMER0_Set
  4968                           
  4969                           ;main.c: 408: if (contagens_tm0 < 499)
  4970  0F9C  3001               	movlw	1
  4971  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  4972  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  4973  0F9F  023A               	subwf	(_contagens_tm0+1)^(0+128),w
  4974  0FA0  30F3               	movlw	243
  4975  0FA1  1903               	skipnz
  4976  0FA2  0239               	subwf	_contagens_tm0^(0+128),w
  4977  0FA3  1803               	skipnc
  4978  0FA4  2FAF               	goto	i1l3234
  4979                           
  4980                           ;main.c: 409: {
  4981                           ;main.c: 411: contagens_tm0++;
  4982  0FA5  3001               	movlw	1
  4983  0FA6  07B9               	addwf	_contagens_tm0^(0+128),f
  4984  0FA7  1803               	skipnc
  4985  0FA8  0ABA               	incf	(_contagens_tm0+1)^(0+128),f
  4986  0FA9  3000               	movlw	0
  4987  0FAA  07BA               	addwf	(_contagens_tm0+1)^(0+128),f
  4988                           
  4989                           ;main.c: 414: PORTBbits.RB6 = 1;
  4990  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0FAD  1706               	bsf	6,6	;volatile
  4993                           
  4994                           ;main.c: 415: }
  4995  0FAE  2FEE               	goto	i1l3246
  4996  0FAF                     i1l3234:	
  4997                           
  4998                           ;main.c: 416: else
  4999                           ;main.c: 417: {
  5000                           ;main.c: 419: contagens_tm0 = 0;
  5001  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  5002  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  5003  0FB1  01B9               	clrf	_contagens_tm0^(0+128)
  5004  0FB2  01BA               	clrf	(_contagens_tm0+1)^(0+128)
  5005                           
  5006                           ;main.c: 422: pulsos = (TMR1H << 8) + TMR1L;
  5007  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0FB5  080F               	movf	15,w	;volatile
  5010  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
  5011  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
  5012  0FB8  01BC               	clrf	(_pulsos+1)^(0+128)
  5013  0FB9  07BC               	addwf	(_pulsos+1)^(0+128),f
  5014  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0FBC  080E               	movf	14,w	;volatile
  5017  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0FBF  01BB               	clrf	_pulsos^(0+128)
  5020  0FC0  07BB               	addwf	_pulsos^(0+128),f
  5021                           
  5022                           ;main.c: 423: rpm = ((pulsos / pas_cooler) * 120);
  5023  0FC1  086B               	movf	(_pas_cooler+1)^(0+128),w
  5024  0FC2  01F1               	clrf	i1___lwdiv@divisor+1
  5025  0FC3  07F1               	addwf	i1___lwdiv@divisor+1,f
  5026  0FC4  086A               	movf	_pas_cooler^(0+128),w
  5027  0FC5  01F0               	clrf	i1___lwdiv@divisor
  5028  0FC6  07F0               	addwf	i1___lwdiv@divisor,f
  5029  0FC7  083C               	movf	(_pulsos+1)^(0+128),w
  5030  0FC8  01F3               	clrf	i1___lwdiv@dividend+1
  5031  0FC9  07F3               	addwf	i1___lwdiv@dividend+1,f
  5032  0FCA  083B               	movf	_pulsos^(0+128),w
  5033  0FCB  01F2               	clrf	i1___lwdiv@dividend
  5034  0FCC  07F2               	addwf	i1___lwdiv@dividend,f
  5035  0FCD  160A  118A  254B  120A  158A  	fcall	i1___lwdiv
  5036  0FD2  0871               	movf	?i1___lwdiv+1,w
  5037  0FD3  01F9               	clrf	i1___wmul@multiplier+1
  5038  0FD4  07F9               	addwf	i1___wmul@multiplier+1,f
  5039  0FD5  0870               	movf	?i1___lwdiv,w
  5040  0FD6  01F8               	clrf	i1___wmul@multiplier
  5041  0FD7  07F8               	addwf	i1___wmul@multiplier,f
  5042  0FD8  3078               	movlw	120
  5043  0FD9  00FA               	movwf	i1___wmul@multiplicand
  5044  0FDA  3000               	movlw	0
  5045  0FDB  00FB               	movwf	i1___wmul@multiplicand+1
  5046  0FDC  160A  118A  241E  120A  158A  	fcall	i1___wmul
  5047  0FE1  0879               	movf	?i1___wmul+1,w
  5048  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5049  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  5050  0FE4  01BE               	clrf	(_rpm+1)^(0+128)
  5051  0FE5  07BE               	addwf	(_rpm+1)^(0+128),f
  5052  0FE6  0878               	movf	?i1___wmul,w
  5053  0FE7  01BD               	clrf	_rpm^(0+128)
  5054  0FE8  07BD               	addwf	_rpm^(0+128),f
  5055                           
  5056                           ;main.c: 426: TMR1L = 0x00;
  5057  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0FEB  018E               	clrf	14	;volatile
  5060                           
  5061                           ;main.c: 427: TMR1H = 0x00;
  5062  0FEC  018F               	clrf	15	;volatile
  5063                           
  5064                           ;main.c: 430: PORTBbits.RB6 = 0;
  5065  0FED  1306               	bcf	6,6	;volatile
  5066  0FEE                     i1l3246:	
  5067                           
  5068                           ;main.c: 431: }
  5069                           ;main.c: 434: INTCONbits.T0IF = 0;
  5070  0FEE  110B               	bcf	11,2	;volatile
  5071  0FEF                     i1l3248:	
  5072                           
  5073                           ;main.c: 435: }
  5074                           ;main.c: 438: if (PIR1bits.TMR1IF)
  5075  0FEF  180C               	btfsc	12,0	;volatile
  5076                           
  5077                           ;main.c: 439: {
  5078                           ;main.c: 443: PIR1bits.TMR1IF = 0;
  5079  0FF0  100C               	bcf	12,0	;volatile
  5080                           
  5081                           ;main.c: 444: }
  5082                           ;main.c: 447: if (PIR1bits.SSPIF)
  5083  0FF1  198C               	btfsc	12,3	;volatile
  5084                           
  5085                           ;main.c: 448: {
  5086                           ;main.c: 452: PIR1bits.SSPIF = 0;
  5087  0FF2  118C               	bcf	12,3	;volatile
  5088  0FF3                     i1l178:	
  5089  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0FF5  085E               	movf	??_ISR+3,w
  5092  0FF6  00FF               	movwf	127
  5093  0FF7  085D               	movf	??_ISR+2,w
  5094  0FF8  008A               	movwf	10
  5095  0FF9  085C               	movf	??_ISR+1,w
  5096  0FFA  0084               	movwf	4
  5097  0FFB  0E5B               	swapf	??_ISR^0,w
  5098  0FFC  0083               	movwf	3
  5099  0FFD  0EFE               	swapf	126,f
  5100  0FFE  0E7E               	swapf	126,w
  5101  0FFF  0009               	retfie
  5102  1000                     __end_of_ISR:	
  5103                           
  5104                           	psect	intentry
  5105  0004                     __pintentry:	
  5106                           ;incstack = 0
  5107                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5108                           
  5109  0004                     interrupt_function:	
  5110  007E                     saved_w	set	btemp
  5111  0004  00FE               	movwf	btemp
  5112  0005  0E03               	swapf	3,w
  5113  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5114  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5115  0008  00DB               	movwf	??_ISR
  5116  0009  0804               	movf	4,w
  5117  000A  00DC               	movwf	??_ISR+1
  5118  000B  080A               	movf	10,w
  5119  000C  00DD               	movwf	??_ISR+2
  5120  000D  087F               	movf	btemp+1,w
  5121  000E  00DE               	movwf	??_ISR+3
  5122  000F  120A  158A  2E6E   	ljmp	_ISR
  5123                           
  5124                           	psect	text23
  5125  141E                     __ptext23:	
  5126 ;; *************** function i1___wmul *****************
  5127 ;; Defined at:
  5128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  multiplier      2    8[COMMON] unsigned int 
  5131 ;;  multiplicand    2   10[COMMON] unsigned int 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  __wmul          2   12[COMMON] unsigned int 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  2    8[COMMON] unsigned int 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5143 ;;      Params:         4       0       0       0       0
  5144 ;;      Locals:         2       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0
  5146 ;;      Totals:         6       0       0       0       0
  5147 ;;Total ram usage:        6 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_ISR
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function i1___wmul
  5158  141E                     i1___wmul:	
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5162  141E  01FC               	clrf	i1___wmul@product
  5163  141F  01FD               	clrf	i1___wmul@product+1
  5164  1420                     i1l3102:	
  5165  1420  1C78               	btfss	i1___wmul@multiplier,0
  5166  1421  2C28               	goto	i1l594
  5167  1422  087A               	movf	i1___wmul@multiplicand,w
  5168  1423  07FC               	addwf	i1___wmul@product,f
  5169  1424  1803               	skipnc
  5170  1425  0AFD               	incf	i1___wmul@product+1,f
  5171  1426  087B               	movf	i1___wmul@multiplicand+1,w
  5172  1427  07FD               	addwf	i1___wmul@product+1,f
  5173  1428                     i1l594:	
  5174  1428  3001               	movlw	1
  5175  1429                     u377_25:	
  5176  1429  1003               	clrc
  5177  142A  0DFA               	rlf	i1___wmul@multiplicand,f
  5178  142B  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5179  142C  3EFF               	addlw	-1
  5180  142D  1D03               	skipz
  5181  142E  2C29               	goto	u377_25
  5182  142F  3001               	movlw	1
  5183  1430                     u378_25:	
  5184  1430  1003               	clrc
  5185  1431  0CF9               	rrf	i1___wmul@multiplier+1,f
  5186  1432  0CF8               	rrf	i1___wmul@multiplier,f
  5187  1433  3EFF               	addlw	-1
  5188  1434  1D03               	skipz
  5189  1435  2C30               	goto	u378_25
  5190  1436  0879               	movf	i1___wmul@multiplier+1,w
  5191  1437  0478               	iorwf	i1___wmul@multiplier,w
  5192  1438  1D03               	skipz
  5193  1439  2C20               	goto	i1l3102
  5194  143A  087D               	movf	i1___wmul@product+1,w
  5195  143B  01F9               	clrf	?i1___wmul+1
  5196  143C  07F9               	addwf	?i1___wmul+1,f
  5197  143D  087C               	movf	i1___wmul@product,w
  5198  143E  01F8               	clrf	?i1___wmul
  5199  143F  07F8               	addwf	?i1___wmul,f
  5200  1440  0008               	return
  5201  1441                     __end_ofi1___wmul:	
  5202                           
  5203                           	psect	text24
  5204  154B                     __ptext24:	
  5205 ;; *************** function i1___lwdiv *****************
  5206 ;; Defined at:
  5207 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  divisor         2    0[COMMON] unsigned int 
  5210 ;;  dividend        2    2[COMMON] unsigned int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5213 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  2    0[COMMON] unsigned int 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         4       0       0       0       0
  5224 ;;      Locals:         3       0       0       0       0
  5225 ;;      Temps:          1       0       0       0       0
  5226 ;;      Totals:         8       0       0       0       0
  5227 ;;Total ram usage:        8 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_ISR
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function i1___lwdiv
  5238  154B                     i1___lwdiv:	
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5242  154B  01F5               	clrf	i1___lwdiv@quotient
  5243  154C  01F6               	clrf	i1___lwdiv@quotient+1
  5244  154D  0871               	movf	i1___lwdiv@divisor+1,w
  5245  154E  0470               	iorwf	i1___lwdiv@divisor,w
  5246  154F  1903               	skipnz
  5247  1550  2D82               	goto	i1l3134
  5248  1551  01F7               	clrf	i1___lwdiv@counter
  5249  1552  0AF7               	incf	i1___lwdiv@counter,f
  5250  1553                     i1l3122:	
  5251  1553  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5252  1554  2D61               	goto	i1l3124
  5253  1555  3001               	movlw	1
  5254  1556                     u381_25:	
  5255  1556  1003               	clrc
  5256  1557  0DF0               	rlf	i1___lwdiv@divisor,f
  5257  1558  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5258  1559  3EFF               	addlw	-1
  5259  155A  1D03               	skipz
  5260  155B  2D56               	goto	u381_25
  5261  155C  3001               	movlw	1
  5262  155D  00F4               	movwf	??i1___lwdiv
  5263  155E  0874               	movf	??i1___lwdiv,w
  5264  155F  07F7               	addwf	i1___lwdiv@counter,f
  5265  1560  2D53               	goto	i1l3122
  5266  1561                     i1l3124:	
  5267  1561  3001               	movlw	1
  5268  1562                     u383_25:	
  5269  1562  1003               	clrc
  5270  1563  0DF5               	rlf	i1___lwdiv@quotient,f
  5271  1564  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5272  1565  3EFF               	addlw	-1
  5273  1566  1D03               	skipz
  5274  1567  2D62               	goto	u383_25
  5275  1568  0871               	movf	i1___lwdiv@divisor+1,w
  5276  1569  0273               	subwf	i1___lwdiv@dividend+1,w
  5277  156A  1D03               	skipz
  5278  156B  2D6E               	goto	u384_25
  5279  156C  0870               	movf	i1___lwdiv@divisor,w
  5280  156D  0272               	subwf	i1___lwdiv@dividend,w
  5281  156E                     u384_25:	
  5282  156E  1C03               	skipc
  5283  156F  2D77               	goto	i1l3130
  5284  1570  0870               	movf	i1___lwdiv@divisor,w
  5285  1571  02F2               	subwf	i1___lwdiv@dividend,f
  5286  1572  0871               	movf	i1___lwdiv@divisor+1,w
  5287  1573  1C03               	skipc
  5288  1574  03F3               	decf	i1___lwdiv@dividend+1,f
  5289  1575  02F3               	subwf	i1___lwdiv@dividend+1,f
  5290  1576  1475               	bsf	i1___lwdiv@quotient,0
  5291  1577                     i1l3130:	
  5292  1577  3001               	movlw	1
  5293  1578                     u385_25:	
  5294  1578  1003               	clrc
  5295  1579  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5296  157A  0CF0               	rrf	i1___lwdiv@divisor,f
  5297  157B  3EFF               	addlw	-1
  5298  157C  1D03               	skipz
  5299  157D  2D78               	goto	u385_25
  5300  157E  3001               	movlw	1
  5301  157F  02F7               	subwf	i1___lwdiv@counter,f
  5302  1580  1D03               	btfss	3,2
  5303  1581  2D61               	goto	i1l3124
  5304  1582                     i1l3134:	
  5305  1582  0876               	movf	i1___lwdiv@quotient+1,w
  5306  1583  01F1               	clrf	?i1___lwdiv+1
  5307  1584  07F1               	addwf	?i1___lwdiv+1,f
  5308  1585  0875               	movf	i1___lwdiv@quotient,w
  5309  1586  01F0               	clrf	?i1___lwdiv
  5310  1587  07F0               	addwf	?i1___lwdiv,f
  5311  1588  0008               	return
  5312  1589                     __end_ofi1___lwdiv:	
  5313                           
  5314                           	psect	text25
  5315  1292                     __ptext25:	
  5316 ;; *************** function i1_TIMER0_Set *****************
  5317 ;; Defined at:
  5318 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  contagens       1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  contagens       1    0[COMMON] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5332 ;;      Params:         0       0       0       0       0
  5333 ;;      Locals:         1       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0
  5335 ;;      Totals:         1       0       0       0       0
  5336 ;;Total ram usage:        1 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_ISR
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function i1_TIMER0_Set
  5347  1292                     i1_TIMER0_Set:	
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in i1_TIMER0_Set: [wreg]
  5351                           ;i1TIMER0_Set@contagens stored from wreg
  5352  1292  00F0               	movwf	i1TIMER0_Set@contagens
  5353                           
  5354                           ;timers.c: 22: TMR0 = contagens;
  5355  1293  0870               	movf	i1TIMER0_Set@contagens,w
  5356  1294  1283               	bcf	3,5	;RP0=0, select bank0
  5357  1295  1303               	bcf	3,6	;RP1=0, select bank0
  5358  1296  0081               	movwf	1	;volatile
  5359  1297  0008               	return
  5360  1298                     __end_ofi1_TIMER0_Set:	
  5361                           
  5362                           	psect	text26
  5363  1360                     __ptext26:	
  5364 ;; *************** function _USART_ReceiveChar *****************
  5365 ;; Defined at:
  5366 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  byte            1    4[COMMON] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      unsigned char 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5380 ;;      Params:         0       0       0       0       0
  5381 ;;      Locals:         1       0       0       0       0
  5382 ;;      Temps:          1       0       0       0       0
  5383 ;;      Totals:         2       0       0       0       0
  5384 ;;Total ram usage:        2 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    2
  5387 ;; This function calls:
  5388 ;;		i1_USART_WriteString
  5389 ;; This function is called by:
  5390 ;;		_ISR
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function _USART_ReceiveChar
  5396  1360                     _USART_ReceiveChar:	
  5397                           
  5398                           ;usart.c: 65: unsigned char byte;
  5399                           ;usart.c: 67: if (!OERR)
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5403  1360  1283               	bcf	3,5	;RP0=0, select bank0
  5404  1361  1303               	bcf	3,6	;RP1=0, select bank0
  5405  1362  1898               	btfsc	24,1	;volatile
  5406  1363  2B69               	goto	i1l2832
  5407                           
  5408                           ;usart.c: 68: {
  5409                           ;usart.c: 69: byte = RCREG;
  5410  1364  081A               	movf	26,w	;volatile
  5411  1365  00F3               	movwf	??_USART_ReceiveChar
  5412  1366  0873               	movf	??_USART_ReceiveChar,w
  5413  1367  00F4               	movwf	USART_ReceiveChar@byte
  5414  1368  2B78               	goto	i1l2840
  5415  1369                     i1l2832:	
  5416                           ;usart.c: 71: }
  5417                           
  5418                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5419                           
  5420                           
  5421                           ;usart.c: 72: else
  5422                           ;usart.c: 73: {
  5423                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5424  1369  300B               	movlw	low (STR_19-__stringbase)
  5425  136A  00F1               	movwf	i1USART_WriteString@str
  5426  136B  3080               	movlw	128
  5427  136C  00F2               	movwf	i1USART_WriteString@str+1
  5428  136D  160A  118A  23FB   	fcall	i1_USART_WriteString
  5429                           
  5430                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5431  1370  1283               	bcf	3,5	;RP0=0, select bank0
  5432  1371  1303               	bcf	3,6	;RP1=0, select bank0
  5433  1372  1218               	bcf	24,4	;volatile
  5434                           
  5435                           ;usart.c: 77: byte = RCREG;
  5436  1373  081A               	movf	26,w	;volatile
  5437  1374  00F3               	movwf	??_USART_ReceiveChar
  5438  1375  0873               	movf	??_USART_ReceiveChar,w
  5439  1376  00F4               	movwf	USART_ReceiveChar@byte
  5440                           
  5441                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5442  1377  1618               	bsf	24,4	;volatile
  5443  1378                     i1l2840:	
  5444                           
  5445                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5446  1378  128C               	bcf	12,5	;volatile
  5447                           
  5448                           ;usart.c: 80: }
  5449                           ;usart.c: 82: return(byte);
  5450  1379  0874               	movf	USART_ReceiveChar@byte,w
  5451  137A  0008               	return
  5452  137B                     __end_of_USART_ReceiveChar:	
  5453                           
  5454                           	psect	text27
  5455  13FB                     __ptext27:	
  5456 ;; *************** function i1_USART_WriteString *****************
  5457 ;; Defined at:
  5458 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  str             2    1[COMMON] PTR const unsigned char 
  5461 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5462 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5463 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5464 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;		None               void
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5476 ;;      Params:         2       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0
  5479 ;;      Totals:         2       0       0       0       0
  5480 ;;Total ram usage:        2 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    1
  5483 ;; This function calls:
  5484 ;;		i1_USART_WriteChar
  5485 ;; This function is called by:
  5486 ;;		_ISR
  5487 ;;		_USART_ReceiveChar
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function i1_USART_WriteString
  5493  13FB                     i1_USART_WriteString:	
  5494  13FB                     i1l2702:	
  5495                           ;usart.c: 54: while(*str != '\0')
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5499                           
  5500  13FB  0872               	movf	i1USART_WriteString@str+1,w
  5501  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  5502  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  5503  13FE  00FF               	movwf	127
  5504  13FF  0871               	movf	i1USART_WriteString@str,w
  5505  1400  0084               	movwf	4
  5506  1401  120A  158A  2000  160A  118A  	fcall	stringtab
  5507  1406  3800               	iorlw	0
  5508  1407  1903               	btfsc	3,2
  5509  1408  0008               	return
  5510                           
  5511                           ;usart.c: 55: {
  5512                           ;usart.c: 56: USART_WriteChar(*str);
  5513  1409  0872               	movf	i1USART_WriteString@str+1,w
  5514  140A  1283               	bcf	3,5	;RP0=0, select bank0
  5515  140B  1303               	bcf	3,6	;RP1=0, select bank0
  5516  140C  00FF               	movwf	127
  5517  140D  0871               	movf	i1USART_WriteString@str,w
  5518  140E  0084               	movwf	4
  5519  140F  120A  158A  2000  160A  118A  	fcall	stringtab
  5520  1414  160A  118A  22A0  160A  118A  	fcall	i1_USART_WriteChar
  5521                           
  5522                           ;usart.c: 57: str++;
  5523  1419  3001               	movlw	1
  5524  141A  07F1               	addwf	i1USART_WriteString@str,f
  5525  141B  1803               	skipnc
  5526  141C  0AF2               	incf	i1USART_WriteString@str+1,f
  5527  141D  2BFB               	goto	i1l2702
  5528  141E                     __end_ofi1_USART_WriteString:	
  5529                           
  5530                           	psect	text28
  5531  12A0                     __ptext28:	
  5532 ;; *************** function i1_USART_WriteChar *****************
  5533 ;; Defined at:
  5534 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  byte            1    wreg     unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  byte            1    0[COMMON] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;		None               void
  5541 ;; Registers used:
  5542 ;;		wreg
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         1       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         1       0       0       0       0
  5552 ;;Total ram usage:        1 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		i1_USART_WriteString
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function i1_USART_WriteChar
  5563  12A0                     i1_USART_WriteChar:	
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in i1_USART_WriteChar: [wreg]
  5567                           ;i1USART_WriteChar@byte stored from wreg
  5568  12A0  00F0               	movwf	i1USART_WriteChar@byte
  5569  12A1                     i1l223:	
  5570                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5571                           
  5572  12A1  1283               	bcf	3,5	;RP0=0, select bank0
  5573  12A2  1303               	bcf	3,6	;RP1=0, select bank0
  5574  12A3  1E0C               	btfss	12,4	;volatile
  5575  12A4  2AA1               	goto	i1l223
  5576                           
  5577                           ;usart.c: 47: TXREG = byte;
  5578  12A5  0870               	movf	i1USART_WriteChar@byte,w
  5579  12A6  0099               	movwf	25	;volatile
  5580  12A7  0008               	return
  5581  12A8                     __end_ofi1_USART_WriteChar:	
  5582                           
  5583                           	psect	text29
  5584  003F                     __ptext29:	
  5585 ;; *************** function _Fuzzy *****************
  5586 ;; Defined at:
  5587 ;;		line 130 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  a               2   48[BANK0 ] int 
  5592 ;;  a               2   46[BANK0 ] int 
  5593 ;;  a               2   44[BANK0 ] int 
  5594 ;;  aumenta         3   56[BANK0 ] float 
  5595 ;;  reduz           3   53[BANK0 ] float 
  5596 ;;  mantem          3   50[BANK0 ] float 
  5597 ;;  tip             3   41[BANK0 ] float 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       0       0       0       0
  5608 ;;      Locals:         0      18       0       0       0
  5609 ;;      Temps:          0       0       0       0       0
  5610 ;;      Totals:         0      18       0       0       0
  5611 ;;Total ram usage:       18 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    3
  5614 ;; This function calls:
  5615 ;;		___ftadd
  5616 ;;		___ftdiv
  5617 ;;		___ftge
  5618 ;;		___ftmul
  5619 ;;		___ftneg
  5620 ;;		___fttol
  5621 ;;		___lwtoft
  5622 ;;		_max_val
  5623 ;;		_trapmf
  5624 ;;		_trimf
  5625 ;;		i1_PWM_DutyCycle2
  5626 ;; This function is called by:
  5627 ;;		_ISR
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           
  5632                           ;psect for function _Fuzzy
  5633  003F                     _Fuzzy:	
  5634                           
  5635                           ;main.c: 141: setpoint = (float)setpointUI;
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5639  003F  1683               	bsf	3,5	;RP0=1, select bank1
  5640  0040  1303               	bcf	3,6	;RP1=0, select bank1
  5641  0041  086D               	movf	(_setpointUI+1)^(0+128),w
  5642  0042  01F9               	clrf	___lwtoft@c+1
  5643  0043  07F9               	addwf	___lwtoft@c+1,f
  5644  0044  086C               	movf	_setpointUI^(0+128),w
  5645  0045  01F8               	clrf	___lwtoft@c
  5646  0046  07F8               	addwf	___lwtoft@c,f
  5647  0047  160A  118A  2303  120A  118A  	fcall	___lwtoft
  5648  004C  0878               	movf	?___lwtoft,w
  5649  004D  1683               	bsf	3,5	;RP0=1, select bank1
  5650  004E  1303               	bcf	3,6	;RP1=0, select bank1
  5651  004F  00E7               	movwf	_setpoint^(0+128)
  5652  0050  0879               	movf	?___lwtoft+1,w
  5653  0051  00E8               	movwf	(_setpoint+1)^(0+128)
  5654  0052  087A               	movf	?___lwtoft+2,w
  5655  0053  00E9               	movwf	(_setpoint+2)^(0+128)
  5656                           
  5657                           ;main.c: 143: float mantem = 0;
  5658  0054  3000               	movlw	0
  5659  0055  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0056  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0057  00D2               	movwf	Fuzzy@mantem
  5662  0058  3000               	movlw	0
  5663  0059  00D3               	movwf	Fuzzy@mantem+1
  5664  005A  3000               	movlw	0
  5665  005B  00D4               	movwf	Fuzzy@mantem+2
  5666                           
  5667                           ;main.c: 144: float reduz = 0;
  5668  005C  3000               	movlw	0
  5669  005D  00D5               	movwf	Fuzzy@reduz
  5670  005E  3000               	movlw	0
  5671  005F  00D6               	movwf	Fuzzy@reduz+1
  5672  0060  3000               	movlw	0
  5673  0061  00D7               	movwf	Fuzzy@reduz+2
  5674                           
  5675                           ;main.c: 145: float aumenta = 0;
  5676  0062  3000               	movlw	0
  5677  0063  00D8               	movwf	Fuzzy@aumenta
  5678  0064  3000               	movlw	0
  5679  0065  00D9               	movwf	Fuzzy@aumenta+1
  5680  0066  3000               	movlw	0
  5681  0067  00DA               	movwf	Fuzzy@aumenta+2
  5682                           
  5683                           ;main.c: 146: float tip;
  5684                           ;main.c: 147: fitemp =0;
  5685  0068  3000               	movlw	0
  5686  0069  00DF               	movwf	_fitemp
  5687  006A  3000               	movlw	0
  5688  006B  00E0               	movwf	_fitemp+1
  5689  006C  3000               	movlw	0
  5690  006D  00E1               	movwf	_fitemp+2
  5691                           
  5692                           ;main.c: 150: temp = (setpoint - tf);
  5693  006E  1683               	bsf	3,5	;RP0=1, select bank1
  5694  006F  1303               	bcf	3,6	;RP1=0, select bank1
  5695  0070  0867               	movf	_setpoint^(0+128),w
  5696  0071  00F8               	movwf	___ftadd@f1
  5697  0072  0868               	movf	(_setpoint+1)^(0+128),w
  5698  0073  00F9               	movwf	___ftadd@f1+1
  5699  0074  0869               	movf	(_setpoint+2)^(0+128),w
  5700  0075  00FA               	movwf	___ftadd@f1+2
  5701  0076  082F               	movf	_tf^(0+128),w
  5702  0077  00F0               	movwf	___ftneg@f1
  5703  0078  0830               	movf	(_tf+1)^(0+128),w
  5704  0079  00F1               	movwf	___ftneg@f1+1
  5705  007A  0831               	movf	(_tf+2)^(0+128),w
  5706  007B  00F2               	movwf	___ftneg@f1+2
  5707  007C  160A  118A  2298  120A  118A  	fcall	___ftneg
  5708  0081  0870               	movf	?___ftneg,w
  5709  0082  00FB               	movwf	___ftadd@f2
  5710  0083  0871               	movf	?___ftneg+1,w
  5711  0084  00FC               	movwf	___ftadd@f2+1
  5712  0085  0872               	movf	?___ftneg+2,w
  5713  0086  00FD               	movwf	___ftadd@f2+2
  5714  0087  120A  158A  22C6  120A  118A  	fcall	___ftadd
  5715  008C  0878               	movf	?___ftadd,w
  5716  008D  1283               	bcf	3,5	;RP0=0, select bank0
  5717  008E  1303               	bcf	3,6	;RP1=0, select bank0
  5718  008F  00E2               	movwf	_temp
  5719  0090  0879               	movf	?___ftadd+1,w
  5720  0091  00E3               	movwf	_temp+1
  5721  0092  087A               	movf	?___ftadd+2,w
  5722  0093  00E4               	movwf	_temp+2
  5723                           
  5724                           ;main.c: 151: temp = (temp/10);
  5725  0094  3000               	movlw	0
  5726  0095  00A7               	movwf	___ftdiv@f2
  5727  0096  3020               	movlw	32
  5728  0097  00A8               	movwf	___ftdiv@f2+1
  5729  0098  3041               	movlw	65
  5730  0099  00A9               	movwf	___ftdiv@f2+2
  5731  009A  0862               	movf	_temp,w
  5732  009B  00AA               	movwf	___ftdiv@f1
  5733  009C  0863               	movf	_temp+1,w
  5734  009D  00AB               	movwf	___ftdiv@f1+1
  5735  009E  0864               	movf	_temp+2,w
  5736  009F  00AC               	movwf	___ftdiv@f1+2
  5737  00A0  120A  158A  213D  120A  118A  	fcall	___ftdiv
  5738  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5739  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  5740  00A7  0827               	movf	?___ftdiv,w
  5741  00A8  00E2               	movwf	_temp
  5742  00A9  0828               	movf	?___ftdiv+1,w
  5743  00AA  00E3               	movwf	_temp+1
  5744  00AB  0829               	movf	?___ftdiv+2,w
  5745  00AC  00E4               	movwf	_temp+2
  5746                           
  5747                           ;main.c: 153: deltaV = temp;
  5748  00AD  0862               	movf	_temp,w
  5749  00AE  00F0               	movwf	___fttol@f1
  5750  00AF  0863               	movf	_temp+1,w
  5751  00B0  00F1               	movwf	___fttol@f1+1
  5752  00B1  0864               	movf	_temp+2,w
  5753  00B2  00F2               	movwf	___fttol@f1+2
  5754  00B3  160A  118A  26E5  120A  118A  	fcall	___fttol
  5755  00B8  0871               	movf	?___fttol+1,w
  5756  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  5757  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  5758  00BB  01EC               	clrf	_deltaV+1
  5759  00BC  07EC               	addwf	_deltaV+1,f
  5760  00BD  0870               	movf	?___fttol,w
  5761  00BE  01EB               	clrf	_deltaV
  5762  00BF  07EB               	addwf	_deltaV,f
  5763                           
  5764                           ;main.c: 155: if (temp >90) temp = 90;
  5765  00C0  3000               	movlw	0
  5766  00C1  00F0               	movwf	___ftge@ff1
  5767  00C2  30B4               	movlw	180
  5768  00C3  00F1               	movwf	___ftge@ff1+1
  5769  00C4  3042               	movlw	66
  5770  00C5  00F2               	movwf	___ftge@ff1+2
  5771  00C6  0862               	movf	_temp,w
  5772  00C7  00F3               	movwf	___ftge@ff2
  5773  00C8  0863               	movf	_temp+1,w
  5774  00C9  00F4               	movwf	___ftge@ff2+1
  5775  00CA  0864               	movf	_temp+2,w
  5776  00CB  00F5               	movwf	___ftge@ff2+2
  5777  00CC  120A  158A  20E0  120A  118A  	fcall	___ftge
  5778  00D1  1803               	btfsc	3,0
  5779  00D2  28DB               	goto	i1l2720
  5780  00D3  3000               	movlw	0
  5781  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  5782  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  5783  00D6  00E2               	movwf	_temp
  5784  00D7  30B4               	movlw	180
  5785  00D8  00E3               	movwf	_temp+1
  5786  00D9  3042               	movlw	66
  5787  00DA  00E4               	movwf	_temp+2
  5788  00DB                     i1l2720:	
  5789                           
  5790                           ;main.c: 156: if (temp <0) temp = 0;
  5791  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  5792  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  5793  00DD  0862               	movf	_temp,w
  5794  00DE  00F0               	movwf	___ftge@ff1
  5795  00DF  0863               	movf	_temp+1,w
  5796  00E0  00F1               	movwf	___ftge@ff1+1
  5797  00E1  0864               	movf	_temp+2,w
  5798  00E2  00F2               	movwf	___ftge@ff1+2
  5799  00E3  3000               	movlw	0
  5800  00E4  00F3               	movwf	___ftge@ff2
  5801  00E5  3000               	movlw	0
  5802  00E6  00F4               	movwf	___ftge@ff2+1
  5803  00E7  3000               	movlw	0
  5804  00E8  00F5               	movwf	___ftge@ff2+2
  5805  00E9  120A  158A  20E0  120A  118A  	fcall	___ftge
  5806  00EE  1803               	btfsc	3,0
  5807  00EF  28F8               	goto	i1l2724
  5808  00F0  3000               	movlw	0
  5809  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  5810  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  5811  00F3  00E2               	movwf	_temp
  5812  00F4  3000               	movlw	0
  5813  00F5  00E3               	movwf	_temp+1
  5814  00F6  3000               	movlw	0
  5815  00F7  00E4               	movwf	_temp+2
  5816  00F8                     i1l2724:	
  5817                           
  5818                           ;main.c: 159: if (temp < 25)
  5819  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  5820  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  5821  00FA  0862               	movf	_temp,w
  5822  00FB  00F0               	movwf	___ftge@ff1
  5823  00FC  0863               	movf	_temp+1,w
  5824  00FD  00F1               	movwf	___ftge@ff1+1
  5825  00FE  0864               	movf	_temp+2,w
  5826  00FF  00F2               	movwf	___ftge@ff1+2
  5827  0100  3000               	movlw	0
  5828  0101  00F3               	movwf	___ftge@ff2
  5829  0102  30C8               	movlw	200
  5830  0103  00F4               	movwf	___ftge@ff2+1
  5831  0104  3041               	movlw	65
  5832  0105  00F5               	movwf	___ftge@ff2+2
  5833  0106  120A  158A  20E0  120A  118A  	fcall	___ftge
  5834  010B  1803               	btfsc	3,0
  5835  010C  2A0C               	goto	i1l2748
  5836                           
  5837                           ;main.c: 160: {
  5838                           ;main.c: 164: fitemp = trapmf(temp, 0,0,13,32);
  5839  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5840  010E  1303               	bcf	3,6	;RP1=0, select bank0
  5841  010F  0862               	movf	_temp,w
  5842  0110  00B7               	movwf	trapmf@x
  5843  0111  0863               	movf	_temp+1,w
  5844  0112  00B8               	movwf	trapmf@x+1
  5845  0113  0864               	movf	_temp+2,w
  5846  0114  00B9               	movwf	trapmf@x+2
  5847  0115  3000               	movlw	0
  5848  0116  00BA               	movwf	trapmf@a
  5849  0117  3000               	movlw	0
  5850  0118  00BB               	movwf	trapmf@a+1
  5851  0119  3000               	movlw	0
  5852  011A  00BC               	movwf	trapmf@a+2
  5853  011B  3000               	movlw	0
  5854  011C  00BD               	movwf	trapmf@b
  5855  011D  3000               	movlw	0
  5856  011E  00BE               	movwf	trapmf@b+1
  5857  011F  3000               	movlw	0
  5858  0120  00BF               	movwf	trapmf@b+2
  5859  0121  3000               	movlw	0
  5860  0122  00C0               	movwf	trapmf@c
  5861  0123  3050               	movlw	80
  5862  0124  00C1               	movwf	trapmf@c+1
  5863  0125  3041               	movlw	65
  5864  0126  00C2               	movwf	trapmf@c+2
  5865  0127  3000               	movlw	0
  5866  0128  00C3               	movwf	trapmf@d
  5867  0129  3000               	movlw	0
  5868  012A  00C4               	movwf	trapmf@d+1
  5869  012B  3042               	movlw	66
  5870  012C  00C5               	movwf	trapmf@d+2
  5871  012D  120A  158A  23CD  120A  118A  	fcall	_trapmf
  5872  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5873  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5874  0134  0837               	movf	?_trapmf,w
  5875  0135  00DF               	movwf	_fitemp
  5876  0136  0838               	movf	?_trapmf+1,w
  5877  0137  00E0               	movwf	_fitemp+1
  5878  0138  0839               	movf	?_trapmf+2,w
  5879  0139  00E1               	movwf	_fitemp+2
  5880                           
  5881                           ;main.c: 167: fop_rule1 = max_val(fitemp,0.1);
  5882  013A  085F               	movf	_fitemp,w
  5883  013B  00A0               	movwf	max_val@a
  5884  013C  0860               	movf	_fitemp+1,w
  5885  013D  00A1               	movwf	max_val@a+1
  5886  013E  0861               	movf	_fitemp+2,w
  5887  013F  00A2               	movwf	max_val@a+2
  5888  0140  30CD               	movlw	205
  5889  0141  00A3               	movwf	max_val@b
  5890  0142  30CC               	movlw	204
  5891  0143  00A4               	movwf	max_val@b+1
  5892  0144  303D               	movlw	61
  5893  0145  00A5               	movwf	max_val@b+2
  5894  0146  160A  118A  237B  120A  118A  	fcall	_max_val
  5895  014B  1283               	bcf	3,5	;RP0=0, select bank0
  5896  014C  1303               	bcf	3,6	;RP1=0, select bank0
  5897  014D  0820               	movf	?_max_val,w
  5898  014E  1683               	bsf	3,5	;RP0=1, select bank1
  5899  014F  1303               	bcf	3,6	;RP1=0, select bank1
  5900  0150  00A3               	movwf	_fop_rule1^(0+128)
  5901  0151  1283               	bcf	3,5	;RP0=0, select bank0
  5902  0152  1303               	bcf	3,6	;RP1=0, select bank0
  5903  0153  0821               	movf	?_max_val+1,w
  5904  0154  1683               	bsf	3,5	;RP0=1, select bank1
  5905  0155  1303               	bcf	3,6	;RP1=0, select bank1
  5906  0156  00A4               	movwf	(_fop_rule1+1)^(0+128)
  5907  0157  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0158  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0159  0822               	movf	?_max_val+2,w
  5910  015A  1683               	bsf	3,5	;RP0=1, select bank1
  5911  015B  1303               	bcf	3,6	;RP1=0, select bank1
  5912  015C  00A5               	movwf	(_fop_rule1+2)^(0+128)
  5913                           
  5914                           ;main.c: 170: x=0;
  5915  015D  3000               	movlw	0
  5916  015E  1283               	bcf	3,5	;RP0=0, select bank0
  5917  015F  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0160  00E5               	movwf	_x
  5919  0161  3000               	movlw	0
  5920  0162  00E6               	movwf	_x+1
  5921  0163  3000               	movlw	0
  5922  0164  00E7               	movwf	_x+2
  5923                           
  5924                           ;main.c: 171: y=0;
  5925  0165  3000               	movlw	0
  5926  0166  00E8               	movwf	_y
  5927  0167  3000               	movlw	0
  5928  0168  00E9               	movwf	_y+1
  5929  0169  3000               	movlw	0
  5930  016A  00EA               	movwf	_y+2
  5931                           
  5932                           ;main.c: 172: for (int a=0; a<=90; a++)
  5933  016B  01CC               	clrf	Fuzzy@a
  5934  016C  01CD               	clrf	Fuzzy@a+1
  5935  016D  084D               	movf	Fuzzy@a+1,w
  5936  016E  3A80               	xorlw	128
  5937  016F  00FF               	movwf	127
  5938  0170  3080               	movlw	128
  5939  0171  027F               	subwf	127,w
  5940  0172  1D03               	skipz
  5941  0173  2976               	goto	u333_25
  5942  0174  305B               	movlw	91
  5943  0175  024C               	subwf	Fuzzy@a,w
  5944  0176                     u333_25:	
  5945  0176  1803               	btfsc	3,0
  5946  0177  2A0C               	goto	i1l2748
  5947  0178                     i1l2738:	
  5948                           
  5949                           ;main.c: 173: {
  5950                           ;main.c: 174: y = trapmf(x,0,0,13,32);
  5951  0178  1283               	bcf	3,5	;RP0=0, select bank0
  5952  0179  1303               	bcf	3,6	;RP1=0, select bank0
  5953  017A  0865               	movf	_x,w
  5954  017B  00B7               	movwf	trapmf@x
  5955  017C  0866               	movf	_x+1,w
  5956  017D  00B8               	movwf	trapmf@x+1
  5957  017E  0867               	movf	_x+2,w
  5958  017F  00B9               	movwf	trapmf@x+2
  5959  0180  3000               	movlw	0
  5960  0181  00BA               	movwf	trapmf@a
  5961  0182  3000               	movlw	0
  5962  0183  00BB               	movwf	trapmf@a+1
  5963  0184  3000               	movlw	0
  5964  0185  00BC               	movwf	trapmf@a+2
  5965  0186  3000               	movlw	0
  5966  0187  00BD               	movwf	trapmf@b
  5967  0188  3000               	movlw	0
  5968  0189  00BE               	movwf	trapmf@b+1
  5969  018A  3000               	movlw	0
  5970  018B  00BF               	movwf	trapmf@b+2
  5971  018C  3000               	movlw	0
  5972  018D  00C0               	movwf	trapmf@c
  5973  018E  3050               	movlw	80
  5974  018F  00C1               	movwf	trapmf@c+1
  5975  0190  3041               	movlw	65
  5976  0191  00C2               	movwf	trapmf@c+2
  5977  0192  3000               	movlw	0
  5978  0193  00C3               	movwf	trapmf@d
  5979  0194  3000               	movlw	0
  5980  0195  00C4               	movwf	trapmf@d+1
  5981  0196  3042               	movlw	66
  5982  0197  00C5               	movwf	trapmf@d+2
  5983  0198  120A  158A  23CD  120A  118A  	fcall	_trapmf
  5984  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5985  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5986  019F  0837               	movf	?_trapmf,w
  5987  01A0  00E8               	movwf	_y
  5988  01A1  0838               	movf	?_trapmf+1,w
  5989  01A2  00E9               	movwf	_y+1
  5990  01A3  0839               	movf	?_trapmf+2,w
  5991  01A4  00EA               	movwf	_y+2
  5992                           
  5993                           ;main.c: 176: if (y > fop_rule1)
  5994  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  5995  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  5996  01A7  0823               	movf	_fop_rule1^(0+128),w
  5997  01A8  00F0               	movwf	___ftge@ff1
  5998  01A9  0824               	movf	(_fop_rule1+1)^(0+128),w
  5999  01AA  00F1               	movwf	___ftge@ff1+1
  6000  01AB  0825               	movf	(_fop_rule1+2)^(0+128),w
  6001  01AC  00F2               	movwf	___ftge@ff1+2
  6002  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  6003  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  6004  01AF  0868               	movf	_y,w
  6005  01B0  00F3               	movwf	___ftge@ff2
  6006  01B1  0869               	movf	_y+1,w
  6007  01B2  00F4               	movwf	___ftge@ff2+1
  6008  01B3  086A               	movf	_y+2,w
  6009  01B4  00F5               	movwf	___ftge@ff2+2
  6010  01B5  120A  158A  20E0  120A  118A  	fcall	___ftge
  6011  01BA  1803               	btfsc	3,0
  6012  01BB  29C7               	goto	i1l2742
  6013                           
  6014                           ;main.c: 177: {
  6015                           ;main.c: 178: mantem += fop_rule1;
  6016  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  6017  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  6018  01BE  0823               	movf	_fop_rule1^(0+128),w
  6019  01BF  00F8               	movwf	___ftadd@f1
  6020  01C0  0824               	movf	(_fop_rule1+1)^(0+128),w
  6021  01C1  00F9               	movwf	___ftadd@f1+1
  6022  01C2  0825               	movf	(_fop_rule1+2)^(0+128),w
  6023  01C3  00FA               	movwf	___ftadd@f1+2
  6024  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  6025  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  6026  01C6  29CF               	goto	L3
  6027  01C7                     i1l2742:	
  6028                           ;main.c: 179: }
  6029                           
  6030                           
  6031                           ;main.c: 180: else
  6032                           ;main.c: 181: {
  6033                           ;main.c: 182: mantem += y;
  6034  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  6035  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  6036  01C9  0868               	movf	_y,w
  6037  01CA  00F8               	movwf	___ftadd@f1
  6038  01CB  0869               	movf	_y+1,w
  6039  01CC  00F9               	movwf	___ftadd@f1+1
  6040  01CD  086A               	movf	_y+2,w
  6041  01CE  00FA               	movwf	___ftadd@f1+2
  6042  01CF                     L3:	
  6043  01CF  0852               	movf	Fuzzy@mantem,w
  6044  01D0  00FB               	movwf	___ftadd@f2
  6045  01D1  0853               	movf	Fuzzy@mantem+1,w
  6046  01D2  00FC               	movwf	___ftadd@f2+1
  6047  01D3  0854               	movf	Fuzzy@mantem+2,w
  6048  01D4  00FD               	movwf	___ftadd@f2+2
  6049  01D5  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6050  01DA  0878               	movf	?___ftadd,w
  6051  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6052  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6053  01DD  00D2               	movwf	Fuzzy@mantem
  6054  01DE  0879               	movf	?___ftadd+1,w
  6055  01DF  00D3               	movwf	Fuzzy@mantem+1
  6056  01E0  087A               	movf	?___ftadd+2,w
  6057  01E1  00D4               	movwf	Fuzzy@mantem+2
  6058                           
  6059                           ;main.c: 183: }
  6060                           ;main.c: 185: x=x+1;
  6061  01E2  3000               	movlw	0
  6062  01E3  00F8               	movwf	___ftadd@f1
  6063  01E4  3080               	movlw	128
  6064  01E5  00F9               	movwf	___ftadd@f1+1
  6065  01E6  303F               	movlw	63
  6066  01E7  00FA               	movwf	___ftadd@f1+2
  6067  01E8  0865               	movf	_x,w
  6068  01E9  00FB               	movwf	___ftadd@f2
  6069  01EA  0866               	movf	_x+1,w
  6070  01EB  00FC               	movwf	___ftadd@f2+1
  6071  01EC  0867               	movf	_x+2,w
  6072  01ED  00FD               	movwf	___ftadd@f2+2
  6073  01EE  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6074  01F3  0878               	movf	?___ftadd,w
  6075  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6076  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6077  01F6  00E5               	movwf	_x
  6078  01F7  0879               	movf	?___ftadd+1,w
  6079  01F8  00E6               	movwf	_x+1
  6080  01F9  087A               	movf	?___ftadd+2,w
  6081  01FA  00E7               	movwf	_x+2
  6082  01FB  3001               	movlw	1
  6083  01FC  07CC               	addwf	Fuzzy@a,f
  6084  01FD  1803               	skipnc
  6085  01FE  0ACD               	incf	Fuzzy@a+1,f
  6086  01FF  3000               	movlw	0
  6087  0200  07CD               	addwf	Fuzzy@a+1,f
  6088  0201  084D               	movf	Fuzzy@a+1,w
  6089  0202  3A80               	xorlw	128
  6090  0203  00FF               	movwf	127
  6091  0204  3080               	movlw	128
  6092  0205  027F               	subwf	127,w
  6093  0206  1D03               	skipz
  6094  0207  2A0A               	goto	u335_25
  6095  0208  305B               	movlw	91
  6096  0209  024C               	subwf	Fuzzy@a,w
  6097  020A                     u335_25:	
  6098  020A  1C03               	skipc
  6099  020B  2978               	goto	i1l2738
  6100  020C                     i1l2748:	
  6101                           
  6102                           ;main.c: 186: }
  6103                           ;main.c: 188: }
  6104                           ;main.c: 194: if ((temp > 20) && (temp < 70))
  6105  020C  3000               	movlw	0
  6106  020D  00F0               	movwf	___ftge@ff1
  6107  020E  30A0               	movlw	160
  6108  020F  00F1               	movwf	___ftge@ff1+1
  6109  0210  3041               	movlw	65
  6110  0211  00F2               	movwf	___ftge@ff1+2
  6111  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6112  0213  1303               	bcf	3,6	;RP1=0, select bank0
  6113  0214  0862               	movf	_temp,w
  6114  0215  00F3               	movwf	___ftge@ff2
  6115  0216  0863               	movf	_temp+1,w
  6116  0217  00F4               	movwf	___ftge@ff2+1
  6117  0218  0864               	movf	_temp+2,w
  6118  0219  00F5               	movwf	___ftge@ff2+2
  6119  021A  120A  158A  20E0  120A  118A  	fcall	___ftge
  6120  021F  1803               	btfsc	3,0
  6121  0220  2B27               	goto	i1l2774
  6122  0221  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0222  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0223  0862               	movf	_temp,w
  6125  0224  00F0               	movwf	___ftge@ff1
  6126  0225  0863               	movf	_temp+1,w
  6127  0226  00F1               	movwf	___ftge@ff1+1
  6128  0227  0864               	movf	_temp+2,w
  6129  0228  00F2               	movwf	___ftge@ff1+2
  6130  0229  3000               	movlw	0
  6131  022A  00F3               	movwf	___ftge@ff2
  6132  022B  308C               	movlw	140
  6133  022C  00F4               	movwf	___ftge@ff2+1
  6134  022D  3042               	movlw	66
  6135  022E  00F5               	movwf	___ftge@ff2+2
  6136  022F  120A  158A  20E0  120A  118A  	fcall	___ftge
  6137  0234  1803               	btfsc	3,0
  6138  0235  2B27               	goto	i1l2774
  6139                           
  6140                           ;main.c: 195: {
  6141                           ;main.c: 198: fitemp = trimf(temp, 9, 45, 81);
  6142  0236  1283               	bcf	3,5	;RP0=0, select bank0
  6143  0237  1303               	bcf	3,6	;RP1=0, select bank0
  6144  0238  0862               	movf	_temp,w
  6145  0239  00B7               	movwf	trimf@x
  6146  023A  0863               	movf	_temp+1,w
  6147  023B  00B8               	movwf	trimf@x+1
  6148  023C  0864               	movf	_temp+2,w
  6149  023D  00B9               	movwf	trimf@x+2
  6150  023E  3000               	movlw	0
  6151  023F  00BA               	movwf	trimf@a
  6152  0240  3010               	movlw	16
  6153  0241  00BB               	movwf	trimf@a+1
  6154  0242  3041               	movlw	65
  6155  0243  00BC               	movwf	trimf@a+2
  6156  0244  3000               	movlw	0
  6157  0245  00BD               	movwf	trimf@b
  6158  0246  3034               	movlw	52
  6159  0247  00BE               	movwf	trimf@b+1
  6160  0248  3042               	movlw	66
  6161  0249  00BF               	movwf	trimf@b+2
  6162  024A  3000               	movlw	0
  6163  024B  00C0               	movwf	trimf@c
  6164  024C  30A2               	movlw	162
  6165  024D  00C1               	movwf	trimf@c+1
  6166  024E  3042               	movlw	66
  6167  024F  00C2               	movwf	trimf@c+2
  6168  0250  120A  118A  26DB  120A  118A  	fcall	_trimf
  6169  0255  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0256  1303               	bcf	3,6	;RP1=0, select bank0
  6171  0257  0837               	movf	?_trimf,w
  6172  0258  00DF               	movwf	_fitemp
  6173  0259  0838               	movf	?_trimf+1,w
  6174  025A  00E0               	movwf	_fitemp+1
  6175  025B  0839               	movf	?_trimf+2,w
  6176  025C  00E1               	movwf	_fitemp+2
  6177                           
  6178                           ;main.c: 201: fop_rule2 = max_val(fitemp,0.1);
  6179  025D  085F               	movf	_fitemp,w
  6180  025E  00A0               	movwf	max_val@a
  6181  025F  0860               	movf	_fitemp+1,w
  6182  0260  00A1               	movwf	max_val@a+1
  6183  0261  0861               	movf	_fitemp+2,w
  6184  0262  00A2               	movwf	max_val@a+2
  6185  0263  30CD               	movlw	205
  6186  0264  00A3               	movwf	max_val@b
  6187  0265  30CC               	movlw	204
  6188  0266  00A4               	movwf	max_val@b+1
  6189  0267  303D               	movlw	61
  6190  0268  00A5               	movwf	max_val@b+2
  6191  0269  160A  118A  237B  120A  118A  	fcall	_max_val
  6192  026E  1283               	bcf	3,5	;RP0=0, select bank0
  6193  026F  1303               	bcf	3,6	;RP1=0, select bank0
  6194  0270  0820               	movf	?_max_val,w
  6195  0271  1683               	bsf	3,5	;RP0=1, select bank1
  6196  0272  1303               	bcf	3,6	;RP1=0, select bank1
  6197  0273  00A6               	movwf	_fop_rule2^(0+128)
  6198  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0275  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0276  0821               	movf	?_max_val+1,w
  6201  0277  1683               	bsf	3,5	;RP0=1, select bank1
  6202  0278  1303               	bcf	3,6	;RP1=0, select bank1
  6203  0279  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6204  027A  1283               	bcf	3,5	;RP0=0, select bank0
  6205  027B  1303               	bcf	3,6	;RP1=0, select bank0
  6206  027C  0822               	movf	?_max_val+2,w
  6207  027D  1683               	bsf	3,5	;RP0=1, select bank1
  6208  027E  1303               	bcf	3,6	;RP1=0, select bank1
  6209  027F  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6210                           
  6211                           ;main.c: 204: x=0;
  6212  0280  3000               	movlw	0
  6213  0281  1283               	bcf	3,5	;RP0=0, select bank0
  6214  0282  1303               	bcf	3,6	;RP1=0, select bank0
  6215  0283  00E5               	movwf	_x
  6216  0284  3000               	movlw	0
  6217  0285  00E6               	movwf	_x+1
  6218  0286  3000               	movlw	0
  6219  0287  00E7               	movwf	_x+2
  6220                           
  6221                           ;main.c: 205: y=0;
  6222  0288  3000               	movlw	0
  6223  0289  00E8               	movwf	_y
  6224  028A  3000               	movlw	0
  6225  028B  00E9               	movwf	_y+1
  6226  028C  3000               	movlw	0
  6227  028D  00EA               	movwf	_y+2
  6228                           
  6229                           ;main.c: 206: for (int a=0; a<=90; a++)
  6230  028E  01CE               	clrf	Fuzzy@a_233
  6231  028F  01CF               	clrf	Fuzzy@a_233+1
  6232  0290  084F               	movf	Fuzzy@a_233+1,w
  6233  0291  3A80               	xorlw	128
  6234  0292  00FF               	movwf	127
  6235  0293  3080               	movlw	128
  6236  0294  027F               	subwf	127,w
  6237  0295  1D03               	skipz
  6238  0296  2A99               	goto	u338_25
  6239  0297  305B               	movlw	91
  6240  0298  024E               	subwf	Fuzzy@a_233,w
  6241  0299                     u338_25:	
  6242  0299  1803               	btfsc	3,0
  6243  029A  2B27               	goto	i1l2774
  6244  029B                     i1l2764:	
  6245                           
  6246                           ;main.c: 207: {
  6247                           ;main.c: 208: y = trimf(x, 9, 45, 81);
  6248  029B  1283               	bcf	3,5	;RP0=0, select bank0
  6249  029C  1303               	bcf	3,6	;RP1=0, select bank0
  6250  029D  0865               	movf	_x,w
  6251  029E  00B7               	movwf	trimf@x
  6252  029F  0866               	movf	_x+1,w
  6253  02A0  00B8               	movwf	trimf@x+1
  6254  02A1  0867               	movf	_x+2,w
  6255  02A2  00B9               	movwf	trimf@x+2
  6256  02A3  3000               	movlw	0
  6257  02A4  00BA               	movwf	trimf@a
  6258  02A5  3010               	movlw	16
  6259  02A6  00BB               	movwf	trimf@a+1
  6260  02A7  3041               	movlw	65
  6261  02A8  00BC               	movwf	trimf@a+2
  6262  02A9  3000               	movlw	0
  6263  02AA  00BD               	movwf	trimf@b
  6264  02AB  3034               	movlw	52
  6265  02AC  00BE               	movwf	trimf@b+1
  6266  02AD  3042               	movlw	66
  6267  02AE  00BF               	movwf	trimf@b+2
  6268  02AF  3000               	movlw	0
  6269  02B0  00C0               	movwf	trimf@c
  6270  02B1  30A2               	movlw	162
  6271  02B2  00C1               	movwf	trimf@c+1
  6272  02B3  3042               	movlw	66
  6273  02B4  00C2               	movwf	trimf@c+2
  6274  02B5  120A  118A  26DB  120A  118A  	fcall	_trimf
  6275  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6276  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  6277  02BC  0837               	movf	?_trimf,w
  6278  02BD  00E8               	movwf	_y
  6279  02BE  0838               	movf	?_trimf+1,w
  6280  02BF  00E9               	movwf	_y+1
  6281  02C0  0839               	movf	?_trimf+2,w
  6282  02C1  00EA               	movwf	_y+2
  6283                           
  6284                           ;main.c: 210: if (y >= fop_rule2)
  6285  02C2  0868               	movf	_y,w
  6286  02C3  00F0               	movwf	___ftge@ff1
  6287  02C4  0869               	movf	_y+1,w
  6288  02C5  00F1               	movwf	___ftge@ff1+1
  6289  02C6  086A               	movf	_y+2,w
  6290  02C7  00F2               	movwf	___ftge@ff1+2
  6291  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  6292  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  6293  02CA  0826               	movf	_fop_rule2^(0+128),w
  6294  02CB  00F3               	movwf	___ftge@ff2
  6295  02CC  0827               	movf	(_fop_rule2+1)^(0+128),w
  6296  02CD  00F4               	movwf	___ftge@ff2+1
  6297  02CE  0828               	movf	(_fop_rule2+2)^(0+128),w
  6298  02CF  00F5               	movwf	___ftge@ff2+2
  6299  02D0  120A  158A  20E0  120A  118A  	fcall	___ftge
  6300  02D5  1C03               	btfss	3,0
  6301  02D6  2AE2               	goto	i1l2768
  6302                           
  6303                           ;main.c: 211: {
  6304                           ;main.c: 212: reduz += fop_rule2;
  6305  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  6306  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  6307  02D9  0826               	movf	_fop_rule2^(0+128),w
  6308  02DA  00F8               	movwf	___ftadd@f1
  6309  02DB  0827               	movf	(_fop_rule2+1)^(0+128),w
  6310  02DC  00F9               	movwf	___ftadd@f1+1
  6311  02DD  0828               	movf	(_fop_rule2+2)^(0+128),w
  6312  02DE  00FA               	movwf	___ftadd@f1+2
  6313  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6314  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  6315  02E1  2AEA               	goto	L4
  6316  02E2                     i1l2768:	
  6317                           ;main.c: 213: }
  6318                           
  6319                           
  6320                           ;main.c: 214: else
  6321                           ;main.c: 215: {
  6322                           ;main.c: 216: reduz += y;
  6323  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6324  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  6325  02E4  0868               	movf	_y,w
  6326  02E5  00F8               	movwf	___ftadd@f1
  6327  02E6  0869               	movf	_y+1,w
  6328  02E7  00F9               	movwf	___ftadd@f1+1
  6329  02E8  086A               	movf	_y+2,w
  6330  02E9  00FA               	movwf	___ftadd@f1+2
  6331  02EA                     L4:	
  6332  02EA  0855               	movf	Fuzzy@reduz,w
  6333  02EB  00FB               	movwf	___ftadd@f2
  6334  02EC  0856               	movf	Fuzzy@reduz+1,w
  6335  02ED  00FC               	movwf	___ftadd@f2+1
  6336  02EE  0857               	movf	Fuzzy@reduz+2,w
  6337  02EF  00FD               	movwf	___ftadd@f2+2
  6338  02F0  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6339  02F5  0878               	movf	?___ftadd,w
  6340  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6341  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6342  02F8  00D5               	movwf	Fuzzy@reduz
  6343  02F9  0879               	movf	?___ftadd+1,w
  6344  02FA  00D6               	movwf	Fuzzy@reduz+1
  6345  02FB  087A               	movf	?___ftadd+2,w
  6346  02FC  00D7               	movwf	Fuzzy@reduz+2
  6347                           
  6348                           ;main.c: 217: }
  6349                           ;main.c: 219: x=x+1;
  6350  02FD  3000               	movlw	0
  6351  02FE  00F8               	movwf	___ftadd@f1
  6352  02FF  3080               	movlw	128
  6353  0300  00F9               	movwf	___ftadd@f1+1
  6354  0301  303F               	movlw	63
  6355  0302  00FA               	movwf	___ftadd@f1+2
  6356  0303  0865               	movf	_x,w
  6357  0304  00FB               	movwf	___ftadd@f2
  6358  0305  0866               	movf	_x+1,w
  6359  0306  00FC               	movwf	___ftadd@f2+1
  6360  0307  0867               	movf	_x+2,w
  6361  0308  00FD               	movwf	___ftadd@f2+2
  6362  0309  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6363  030E  0878               	movf	?___ftadd,w
  6364  030F  1283               	bcf	3,5	;RP0=0, select bank0
  6365  0310  1303               	bcf	3,6	;RP1=0, select bank0
  6366  0311  00E5               	movwf	_x
  6367  0312  0879               	movf	?___ftadd+1,w
  6368  0313  00E6               	movwf	_x+1
  6369  0314  087A               	movf	?___ftadd+2,w
  6370  0315  00E7               	movwf	_x+2
  6371  0316  3001               	movlw	1
  6372  0317  07CE               	addwf	Fuzzy@a_233,f
  6373  0318  1803               	skipnc
  6374  0319  0ACF               	incf	Fuzzy@a_233+1,f
  6375  031A  3000               	movlw	0
  6376  031B  07CF               	addwf	Fuzzy@a_233+1,f
  6377  031C  084F               	movf	Fuzzy@a_233+1,w
  6378  031D  3A80               	xorlw	128
  6379  031E  00FF               	movwf	127
  6380  031F  3080               	movlw	128
  6381  0320  027F               	subwf	127,w
  6382  0321  1D03               	skipz
  6383  0322  2B25               	goto	u340_25
  6384  0323  305B               	movlw	91
  6385  0324  024E               	subwf	Fuzzy@a_233,w
  6386  0325                     u340_25:	
  6387  0325  1C03               	skipc
  6388  0326  2A9B               	goto	i1l2764
  6389  0327                     i1l2774:	
  6390                           
  6391                           ;main.c: 220: }
  6392                           ;main.c: 222: }
  6393                           ;main.c: 228: if (temp > 70 )
  6394  0327  3000               	movlw	0
  6395  0328  00F0               	movwf	___ftge@ff1
  6396  0329  308C               	movlw	140
  6397  032A  00F1               	movwf	___ftge@ff1+1
  6398  032B  3042               	movlw	66
  6399  032C  00F2               	movwf	___ftge@ff1+2
  6400  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6401  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6402  032F  0862               	movf	_temp,w
  6403  0330  00F3               	movwf	___ftge@ff2
  6404  0331  0863               	movf	_temp+1,w
  6405  0332  00F4               	movwf	___ftge@ff2+1
  6406  0333  0864               	movf	_temp+2,w
  6407  0334  00F5               	movwf	___ftge@ff2+2
  6408  0335  120A  158A  20E0  120A  118A  	fcall	___ftge
  6409  033A  1803               	btfsc	3,0
  6410  033B  2C39               	goto	i1l2798
  6411                           
  6412                           ;main.c: 229: {
  6413                           ;main.c: 232: fitemp = trapmf(temp, 62, 79, 90, 90);
  6414  033C  1283               	bcf	3,5	;RP0=0, select bank0
  6415  033D  1303               	bcf	3,6	;RP1=0, select bank0
  6416  033E  0862               	movf	_temp,w
  6417  033F  00B7               	movwf	trapmf@x
  6418  0340  0863               	movf	_temp+1,w
  6419  0341  00B8               	movwf	trapmf@x+1
  6420  0342  0864               	movf	_temp+2,w
  6421  0343  00B9               	movwf	trapmf@x+2
  6422  0344  3000               	movlw	0
  6423  0345  00BA               	movwf	trapmf@a
  6424  0346  3078               	movlw	120
  6425  0347  00BB               	movwf	trapmf@a+1
  6426  0348  3042               	movlw	66
  6427  0349  00BC               	movwf	trapmf@a+2
  6428  034A  3000               	movlw	0
  6429  034B  00BD               	movwf	trapmf@b
  6430  034C  309E               	movlw	158
  6431  034D  00BE               	movwf	trapmf@b+1
  6432  034E  3042               	movlw	66
  6433  034F  00BF               	movwf	trapmf@b+2
  6434  0350  3000               	movlw	0
  6435  0351  00C0               	movwf	trapmf@c
  6436  0352  30B4               	movlw	180
  6437  0353  00C1               	movwf	trapmf@c+1
  6438  0354  3042               	movlw	66
  6439  0355  00C2               	movwf	trapmf@c+2
  6440  0356  3000               	movlw	0
  6441  0357  00C3               	movwf	trapmf@d
  6442  0358  30B4               	movlw	180
  6443  0359  00C4               	movwf	trapmf@d+1
  6444  035A  3042               	movlw	66
  6445  035B  00C5               	movwf	trapmf@d+2
  6446  035C  120A  158A  23CD  120A  118A  	fcall	_trapmf
  6447  0361  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0362  1303               	bcf	3,6	;RP1=0, select bank0
  6449  0363  0837               	movf	?_trapmf,w
  6450  0364  00DF               	movwf	_fitemp
  6451  0365  0838               	movf	?_trapmf+1,w
  6452  0366  00E0               	movwf	_fitemp+1
  6453  0367  0839               	movf	?_trapmf+2,w
  6454  0368  00E1               	movwf	_fitemp+2
  6455                           
  6456                           ;main.c: 236: fop_rule3 = max_val(fitemp,0.1);
  6457  0369  085F               	movf	_fitemp,w
  6458  036A  00A0               	movwf	max_val@a
  6459  036B  0860               	movf	_fitemp+1,w
  6460  036C  00A1               	movwf	max_val@a+1
  6461  036D  0861               	movf	_fitemp+2,w
  6462  036E  00A2               	movwf	max_val@a+2
  6463  036F  30CD               	movlw	205
  6464  0370  00A3               	movwf	max_val@b
  6465  0371  30CC               	movlw	204
  6466  0372  00A4               	movwf	max_val@b+1
  6467  0373  303D               	movlw	61
  6468  0374  00A5               	movwf	max_val@b+2
  6469  0375  160A  118A  237B  120A  118A  	fcall	_max_val
  6470  037A  1283               	bcf	3,5	;RP0=0, select bank0
  6471  037B  1303               	bcf	3,6	;RP1=0, select bank0
  6472  037C  0820               	movf	?_max_val,w
  6473  037D  1683               	bsf	3,5	;RP0=1, select bank1
  6474  037E  1303               	bcf	3,6	;RP1=0, select bank1
  6475  037F  00A9               	movwf	_fop_rule3^(0+128)
  6476  0380  1283               	bcf	3,5	;RP0=0, select bank0
  6477  0381  1303               	bcf	3,6	;RP1=0, select bank0
  6478  0382  0821               	movf	?_max_val+1,w
  6479  0383  1683               	bsf	3,5	;RP0=1, select bank1
  6480  0384  1303               	bcf	3,6	;RP1=0, select bank1
  6481  0385  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6482  0386  1283               	bcf	3,5	;RP0=0, select bank0
  6483  0387  1303               	bcf	3,6	;RP1=0, select bank0
  6484  0388  0822               	movf	?_max_val+2,w
  6485  0389  1683               	bsf	3,5	;RP0=1, select bank1
  6486  038A  1303               	bcf	3,6	;RP1=0, select bank1
  6487  038B  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6488                           
  6489                           ;main.c: 239: x=0;
  6490  038C  3000               	movlw	0
  6491  038D  1283               	bcf	3,5	;RP0=0, select bank0
  6492  038E  1303               	bcf	3,6	;RP1=0, select bank0
  6493  038F  00E5               	movwf	_x
  6494  0390  3000               	movlw	0
  6495  0391  00E6               	movwf	_x+1
  6496  0392  3000               	movlw	0
  6497  0393  00E7               	movwf	_x+2
  6498                           
  6499                           ;main.c: 240: y=0;
  6500  0394  3000               	movlw	0
  6501  0395  00E8               	movwf	_y
  6502  0396  3000               	movlw	0
  6503  0397  00E9               	movwf	_y+1
  6504  0398  3000               	movlw	0
  6505  0399  00EA               	movwf	_y+2
  6506                           
  6507                           ;main.c: 241: for (int a=0; a<=90; a++)
  6508  039A  01D0               	clrf	Fuzzy@a_234
  6509  039B  01D1               	clrf	Fuzzy@a_234+1
  6510  039C  0851               	movf	Fuzzy@a_234+1,w
  6511  039D  3A80               	xorlw	128
  6512  039E  00FF               	movwf	127
  6513  039F  3080               	movlw	128
  6514  03A0  027F               	subwf	127,w
  6515  03A1  1D03               	skipz
  6516  03A2  2BA5               	goto	u342_25
  6517  03A3  305B               	movlw	91
  6518  03A4  0250               	subwf	Fuzzy@a_234,w
  6519  03A5                     u342_25:	
  6520  03A5  1803               	btfsc	3,0
  6521  03A6  2C39               	goto	i1l2798
  6522  03A7                     i1l2788:	
  6523                           
  6524                           ;main.c: 242: {
  6525                           ;main.c: 243: y = trapmf(x, 62, 79, 90, 90);
  6526  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  6527  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  6528  03A9  0865               	movf	_x,w
  6529  03AA  00B7               	movwf	trapmf@x
  6530  03AB  0866               	movf	_x+1,w
  6531  03AC  00B8               	movwf	trapmf@x+1
  6532  03AD  0867               	movf	_x+2,w
  6533  03AE  00B9               	movwf	trapmf@x+2
  6534  03AF  3000               	movlw	0
  6535  03B0  00BA               	movwf	trapmf@a
  6536  03B1  3078               	movlw	120
  6537  03B2  00BB               	movwf	trapmf@a+1
  6538  03B3  3042               	movlw	66
  6539  03B4  00BC               	movwf	trapmf@a+2
  6540  03B5  3000               	movlw	0
  6541  03B6  00BD               	movwf	trapmf@b
  6542  03B7  309E               	movlw	158
  6543  03B8  00BE               	movwf	trapmf@b+1
  6544  03B9  3042               	movlw	66
  6545  03BA  00BF               	movwf	trapmf@b+2
  6546  03BB  3000               	movlw	0
  6547  03BC  00C0               	movwf	trapmf@c
  6548  03BD  30B4               	movlw	180
  6549  03BE  00C1               	movwf	trapmf@c+1
  6550  03BF  3042               	movlw	66
  6551  03C0  00C2               	movwf	trapmf@c+2
  6552  03C1  3000               	movlw	0
  6553  03C2  00C3               	movwf	trapmf@d
  6554  03C3  30B4               	movlw	180
  6555  03C4  00C4               	movwf	trapmf@d+1
  6556  03C5  3042               	movlw	66
  6557  03C6  00C5               	movwf	trapmf@d+2
  6558  03C7  120A  158A  23CD  120A  118A  	fcall	_trapmf
  6559  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  6560  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  6561  03CE  0837               	movf	?_trapmf,w
  6562  03CF  00E8               	movwf	_y
  6563  03D0  0838               	movf	?_trapmf+1,w
  6564  03D1  00E9               	movwf	_y+1
  6565  03D2  0839               	movf	?_trapmf+2,w
  6566  03D3  00EA               	movwf	_y+2
  6567                           
  6568                           ;main.c: 245: if (y >= fop_rule3)
  6569  03D4  0868               	movf	_y,w
  6570  03D5  00F0               	movwf	___ftge@ff1
  6571  03D6  0869               	movf	_y+1,w
  6572  03D7  00F1               	movwf	___ftge@ff1+1
  6573  03D8  086A               	movf	_y+2,w
  6574  03D9  00F2               	movwf	___ftge@ff1+2
  6575  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  6576  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  6577  03DC  0829               	movf	_fop_rule3^(0+128),w
  6578  03DD  00F3               	movwf	___ftge@ff2
  6579  03DE  082A               	movf	(_fop_rule3+1)^(0+128),w
  6580  03DF  00F4               	movwf	___ftge@ff2+1
  6581  03E0  082B               	movf	(_fop_rule3+2)^(0+128),w
  6582  03E1  00F5               	movwf	___ftge@ff2+2
  6583  03E2  120A  158A  20E0  120A  118A  	fcall	___ftge
  6584  03E7  1C03               	btfss	3,0
  6585  03E8  2BF4               	goto	i1l2792
  6586                           
  6587                           ;main.c: 246: {
  6588                           ;main.c: 247: aumenta += fop_rule3;
  6589  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  6590  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  6591  03EB  0829               	movf	_fop_rule3^(0+128),w
  6592  03EC  00F8               	movwf	___ftadd@f1
  6593  03ED  082A               	movf	(_fop_rule3+1)^(0+128),w
  6594  03EE  00F9               	movwf	___ftadd@f1+1
  6595  03EF  082B               	movf	(_fop_rule3+2)^(0+128),w
  6596  03F0  00FA               	movwf	___ftadd@f1+2
  6597  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6598  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6599  03F3  2BFC               	goto	L5
  6600  03F4                     i1l2792:	
  6601                           ;main.c: 248: }
  6602                           
  6603                           
  6604                           ;main.c: 249: else
  6605                           ;main.c: 250: {
  6606                           ;main.c: 251: aumenta += y;
  6607  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  6608  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  6609  03F6  0868               	movf	_y,w
  6610  03F7  00F8               	movwf	___ftadd@f1
  6611  03F8  0869               	movf	_y+1,w
  6612  03F9  00F9               	movwf	___ftadd@f1+1
  6613  03FA  086A               	movf	_y+2,w
  6614  03FB  00FA               	movwf	___ftadd@f1+2
  6615  03FC                     L5:	
  6616  03FC  0858               	movf	Fuzzy@aumenta,w
  6617  03FD  00FB               	movwf	___ftadd@f2
  6618  03FE  0859               	movf	Fuzzy@aumenta+1,w
  6619  03FF  00FC               	movwf	___ftadd@f2+1
  6620  0400  085A               	movf	Fuzzy@aumenta+2,w
  6621  0401  00FD               	movwf	___ftadd@f2+2
  6622  0402  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6623  0407  0878               	movf	?___ftadd,w
  6624  0408  1283               	bcf	3,5	;RP0=0, select bank0
  6625  0409  1303               	bcf	3,6	;RP1=0, select bank0
  6626  040A  00D8               	movwf	Fuzzy@aumenta
  6627  040B  0879               	movf	?___ftadd+1,w
  6628  040C  00D9               	movwf	Fuzzy@aumenta+1
  6629  040D  087A               	movf	?___ftadd+2,w
  6630  040E  00DA               	movwf	Fuzzy@aumenta+2
  6631                           
  6632                           ;main.c: 252: }
  6633                           ;main.c: 254: x=x+1;
  6634  040F  3000               	movlw	0
  6635  0410  00F8               	movwf	___ftadd@f1
  6636  0411  3080               	movlw	128
  6637  0412  00F9               	movwf	___ftadd@f1+1
  6638  0413  303F               	movlw	63
  6639  0414  00FA               	movwf	___ftadd@f1+2
  6640  0415  0865               	movf	_x,w
  6641  0416  00FB               	movwf	___ftadd@f2
  6642  0417  0866               	movf	_x+1,w
  6643  0418  00FC               	movwf	___ftadd@f2+1
  6644  0419  0867               	movf	_x+2,w
  6645  041A  00FD               	movwf	___ftadd@f2+2
  6646  041B  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6647  0420  0878               	movf	?___ftadd,w
  6648  0421  1283               	bcf	3,5	;RP0=0, select bank0
  6649  0422  1303               	bcf	3,6	;RP1=0, select bank0
  6650  0423  00E5               	movwf	_x
  6651  0424  0879               	movf	?___ftadd+1,w
  6652  0425  00E6               	movwf	_x+1
  6653  0426  087A               	movf	?___ftadd+2,w
  6654  0427  00E7               	movwf	_x+2
  6655  0428  3001               	movlw	1
  6656  0429  07D0               	addwf	Fuzzy@a_234,f
  6657  042A  1803               	skipnc
  6658  042B  0AD1               	incf	Fuzzy@a_234+1,f
  6659  042C  3000               	movlw	0
  6660  042D  07D1               	addwf	Fuzzy@a_234+1,f
  6661  042E  0851               	movf	Fuzzy@a_234+1,w
  6662  042F  3A80               	xorlw	128
  6663  0430  00FF               	movwf	127
  6664  0431  3080               	movlw	128
  6665  0432  027F               	subwf	127,w
  6666  0433  1D03               	skipz
  6667  0434  2C37               	goto	u344_25
  6668  0435  305B               	movlw	91
  6669  0436  0250               	subwf	Fuzzy@a_234,w
  6670  0437                     u344_25:	
  6671  0437  1C03               	skipc
  6672  0438  2BA7               	goto	i1l2788
  6673  0439                     i1l2798:	
  6674                           
  6675                           ;main.c: 255: }
  6676                           ;main.c: 257: }
  6677                           ;main.c: 260: if (temp < 25)
  6678  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6679  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6680  043B  0862               	movf	_temp,w
  6681  043C  00F0               	movwf	___ftge@ff1
  6682  043D  0863               	movf	_temp+1,w
  6683  043E  00F1               	movwf	___ftge@ff1+1
  6684  043F  0864               	movf	_temp+2,w
  6685  0440  00F2               	movwf	___ftge@ff1+2
  6686  0441  3000               	movlw	0
  6687  0442  00F3               	movwf	___ftge@ff2
  6688  0443  30C8               	movlw	200
  6689  0444  00F4               	movwf	___ftge@ff2+1
  6690  0445  3041               	movlw	65
  6691  0446  00F5               	movwf	___ftge@ff2+2
  6692  0447  120A  158A  20E0  120A  118A  	fcall	___ftge
  6693  044C  1803               	btfsc	3,0
  6694  044D  2C56               	goto	i1l2802
  6695                           
  6696                           ;main.c: 261: {
  6697                           ;main.c: 262: tip = mantem;
  6698  044E  1283               	bcf	3,5	;RP0=0, select bank0
  6699  044F  1303               	bcf	3,6	;RP1=0, select bank0
  6700  0450  0852               	movf	Fuzzy@mantem,w
  6701  0451  00C9               	movwf	Fuzzy@tip
  6702  0452  0853               	movf	Fuzzy@mantem+1,w
  6703  0453  00CA               	movwf	Fuzzy@tip+1
  6704  0454  0854               	movf	Fuzzy@mantem+2,w
  6705  0455  2C8F               	goto	L7
  6706  0456                     i1l2802:	
  6707                           ;main.c: 263: }else
  6708                           
  6709                           
  6710                           ;main.c: 264: if (temp >= 25 && temp < 75)
  6711  0456  1283               	bcf	3,5	;RP0=0, select bank0
  6712  0457  1303               	bcf	3,6	;RP1=0, select bank0
  6713  0458  0862               	movf	_temp,w
  6714  0459  00F0               	movwf	___ftge@ff1
  6715  045A  0863               	movf	_temp+1,w
  6716  045B  00F1               	movwf	___ftge@ff1+1
  6717  045C  0864               	movf	_temp+2,w
  6718  045D  00F2               	movwf	___ftge@ff1+2
  6719  045E  3000               	movlw	0
  6720  045F  00F3               	movwf	___ftge@ff2
  6721  0460  30C8               	movlw	200
  6722  0461  00F4               	movwf	___ftge@ff2+1
  6723  0462  3041               	movlw	65
  6724  0463  00F5               	movwf	___ftge@ff2+2
  6725  0464  120A  158A  20E0  120A  118A  	fcall	___ftge
  6726  0469  1C03               	btfss	3,0
  6727  046A  2C88               	goto	i1l2808
  6728  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6729  046C  1303               	bcf	3,6	;RP1=0, select bank0
  6730  046D  0862               	movf	_temp,w
  6731  046E  00F0               	movwf	___ftge@ff1
  6732  046F  0863               	movf	_temp+1,w
  6733  0470  00F1               	movwf	___ftge@ff1+1
  6734  0471  0864               	movf	_temp+2,w
  6735  0472  00F2               	movwf	___ftge@ff1+2
  6736  0473  3000               	movlw	0
  6737  0474  00F3               	movwf	___ftge@ff2
  6738  0475  3096               	movlw	150
  6739  0476  00F4               	movwf	___ftge@ff2+1
  6740  0477  3042               	movlw	66
  6741  0478  00F5               	movwf	___ftge@ff2+2
  6742  0479  120A  158A  20E0  120A  118A  	fcall	___ftge
  6743  047E  1803               	btfsc	3,0
  6744  047F  2C88               	goto	i1l2808
  6745                           
  6746                           ;main.c: 265: {
  6747                           ;main.c: 266: tip = reduz;
  6748  0480  1283               	bcf	3,5	;RP0=0, select bank0
  6749  0481  1303               	bcf	3,6	;RP1=0, select bank0
  6750  0482  0855               	movf	Fuzzy@reduz,w
  6751  0483  00C9               	movwf	Fuzzy@tip
  6752  0484  0856               	movf	Fuzzy@reduz+1,w
  6753  0485  00CA               	movwf	Fuzzy@tip+1
  6754  0486  0857               	movf	Fuzzy@reduz+2,w
  6755  0487  2C8F               	goto	L7
  6756  0488                     i1l2808:	
  6757                           ;main.c: 267: }else
  6758                           
  6759                           
  6760                           ;main.c: 268: {
  6761                           ;main.c: 269: tip = aumenta;
  6762  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6763  0489  1303               	bcf	3,6	;RP1=0, select bank0
  6764  048A  0858               	movf	Fuzzy@aumenta,w
  6765  048B  00C9               	movwf	Fuzzy@tip
  6766  048C  0859               	movf	Fuzzy@aumenta+1,w
  6767  048D  00CA               	movwf	Fuzzy@tip+1
  6768  048E  085A               	movf	Fuzzy@aumenta+2,w
  6769  048F                     L7:	
  6770  048F  00CB               	movwf	Fuzzy@tip+2
  6771                           
  6772                           ;main.c: 270: }
  6773                           ;main.c: 273: total_area = 90;
  6774  0490  3000               	movlw	0
  6775  0491  1683               	bsf	3,5	;RP0=1, select bank1
  6776  0492  1303               	bcf	3,6	;RP1=0, select bank1
  6777  0493  00B2               	movwf	_total_area^(0+128)
  6778  0494  30B4               	movlw	180
  6779  0495  00B3               	movwf	(_total_area+1)^(0+128)
  6780  0496  3042               	movlw	66
  6781  0497  00B4               	movwf	(_total_area+2)^(0+128)
  6782                           
  6783                           ;main.c: 274: sum = 0;
  6784  0498  3000               	movlw	0
  6785  0499  00AC               	movwf	_sum^(0+128)
  6786  049A  3000               	movlw	0
  6787  049B  00AD               	movwf	(_sum+1)^(0+128)
  6788  049C  3000               	movlw	0
  6789  049D  00AE               	movwf	(_sum+2)^(0+128)
  6790                           
  6791                           ;main.c: 275: sum = sum + tip;
  6792  049E  1283               	bcf	3,5	;RP0=0, select bank0
  6793  049F  1303               	bcf	3,6	;RP1=0, select bank0
  6794  04A0  0849               	movf	Fuzzy@tip,w
  6795  04A1  00F8               	movwf	___ftadd@f1
  6796  04A2  084A               	movf	Fuzzy@tip+1,w
  6797  04A3  00F9               	movwf	___ftadd@f1+1
  6798  04A4  084B               	movf	Fuzzy@tip+2,w
  6799  04A5  00FA               	movwf	___ftadd@f1+2
  6800  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  6801  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  6802  04A8  082C               	movf	_sum^(0+128),w
  6803  04A9  00FB               	movwf	___ftadd@f2
  6804  04AA  082D               	movf	(_sum+1)^(0+128),w
  6805  04AB  00FC               	movwf	___ftadd@f2+1
  6806  04AC  082E               	movf	(_sum+2)^(0+128),w
  6807  04AD  00FD               	movwf	___ftadd@f2+2
  6808  04AE  120A  158A  22C6  120A  118A  	fcall	___ftadd
  6809  04B3  0878               	movf	?___ftadd,w
  6810  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  6811  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  6812  04B6  00AC               	movwf	_sum^(0+128)
  6813  04B7  0879               	movf	?___ftadd+1,w
  6814  04B8  00AD               	movwf	(_sum+1)^(0+128)
  6815  04B9  087A               	movf	?___ftadd+2,w
  6816  04BA  00AE               	movwf	(_sum+2)^(0+128)
  6817                           
  6818                           ;main.c: 278: ativa_fan = sum/total_area;
  6819  04BB  0832               	movf	_total_area^(0+128),w
  6820  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6821  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6822  04BE  00A7               	movwf	___ftdiv@f2
  6823  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6824  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  6825  04C1  0833               	movf	(_total_area+1)^(0+128),w
  6826  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  6827  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  6828  04C4  00A8               	movwf	___ftdiv@f2+1
  6829  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  6830  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  6831  04C7  0834               	movf	(_total_area+2)^(0+128),w
  6832  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  6833  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  6834  04CA  00A9               	movwf	___ftdiv@f2+2
  6835  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  6836  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  6837  04CD  082C               	movf	_sum^(0+128),w
  6838  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  6839  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  6840  04D0  00AA               	movwf	___ftdiv@f1
  6841  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  6842  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  6843  04D3  082D               	movf	(_sum+1)^(0+128),w
  6844  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  6845  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  6846  04D6  00AB               	movwf	___ftdiv@f1+1
  6847  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  6848  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  6849  04D9  082E               	movf	(_sum+2)^(0+128),w
  6850  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  6851  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  6852  04DC  00AC               	movwf	___ftdiv@f1+2
  6853  04DD  120A  158A  213D  120A  118A  	fcall	___ftdiv
  6854  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  6855  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  6856  04E4  0827               	movf	?___ftdiv,w
  6857  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  6858  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  6859  04E7  00A0               	movwf	_ativa_fan^(0+128)
  6860  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  6861  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  6862  04EA  0828               	movf	?___ftdiv+1,w
  6863  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  6864  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  6865  04ED  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6866  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6867  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6868  04F0  0829               	movf	?___ftdiv+2,w
  6869  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  6870  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  6871  04F3  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6872                           
  6873                           ;main.c: 281: ativa_fan = ativa_fan*1000;
  6874  04F4  3000               	movlw	0
  6875  04F5  00F8               	movwf	___ftmul@f1
  6876  04F6  307A               	movlw	122
  6877  04F7  00F9               	movwf	___ftmul@f1+1
  6878  04F8  3044               	movlw	68
  6879  04F9  00FA               	movwf	___ftmul@f1+2
  6880  04FA  0820               	movf	_ativa_fan^(0+128),w
  6881  04FB  00FB               	movwf	___ftmul@f2
  6882  04FC  0821               	movf	(_ativa_fan+1)^(0+128),w
  6883  04FD  00FC               	movwf	___ftmul@f2+1
  6884  04FE  0822               	movf	(_ativa_fan+2)^(0+128),w
  6885  04FF  00FD               	movwf	___ftmul@f2+2
  6886  0500  120A  158A  21F5  120A  118A  	fcall	___ftmul
  6887  0505  0878               	movf	?___ftmul,w
  6888  0506  1683               	bsf	3,5	;RP0=1, select bank1
  6889  0507  1303               	bcf	3,6	;RP1=0, select bank1
  6890  0508  00A0               	movwf	_ativa_fan^(0+128)
  6891  0509  0879               	movf	?___ftmul+1,w
  6892  050A  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6893  050B  087A               	movf	?___ftmul+2,w
  6894  050C  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6895                           
  6896                           ;main.c: 283: if (deltaV >0 && deltaV < 1020)
  6897  050D  1283               	bcf	3,5	;RP0=0, select bank0
  6898  050E  1303               	bcf	3,6	;RP1=0, select bank0
  6899  050F  086C               	movf	_deltaV+1,w
  6900  0510  046B               	iorwf	_deltaV,w
  6901  0511  1903               	skipnz
  6902  0512  0008               	return
  6903  0513  3003               	movlw	3
  6904  0514  026C               	subwf	_deltaV+1,w
  6905  0515  30FC               	movlw	252
  6906  0516  1903               	skipnz
  6907  0517  026B               	subwf	_deltaV,w
  6908  0518  1803               	skipnc
  6909  0519  0008               	return
  6910                           
  6911                           ;main.c: 284: {
  6912                           ;main.c: 285: PWM_DutyCycle2(deltaV);
  6913  051A  086C               	movf	_deltaV+1,w
  6914  051B  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  6915  051C  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  6916  051D  086B               	movf	_deltaV,w
  6917  051E  01F0               	clrf	i1PWM_DutyCycle2@valor
  6918  051F  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  6919  0520  160A  118A  2345   	fcall	i1_PWM_DutyCycle2
  6920  0523  0008               	return
  6921  0524                     __end_of_Fuzzy:	
  6922                           
  6923                           	psect	text30
  6924  1345                     __ptext30:	
  6925 ;; *************** function i1_PWM_DutyCycle2 *****************
  6926 ;; Defined at:
  6927 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  valor           2    0[COMMON] int 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6941 ;;      Params:         2       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0
  6943 ;;      Temps:          2       0       0       0       0
  6944 ;;      Totals:         4       0       0       0       0
  6945 ;;Total ram usage:        4 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_Fuzzy
  6951 ;;		_ISR
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function i1_PWM_DutyCycle2
  6957  1345                     i1_PWM_DutyCycle2:	
  6958                           
  6959                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6963  1345  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  6964  1346  00F3               	movwf	??i1_PWM_DutyCycle2+1
  6965  1347  0870               	movf	i1PWM_DutyCycle2@valor,w
  6966  1348  00F2               	movwf	??i1_PWM_DutyCycle2
  6967  1349  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  6968  134A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  6969  134B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  6970  134C  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  6971  134D  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  6972  134E  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  6973  134F  0872               	movf	??i1_PWM_DutyCycle2,w
  6974  1350  1283               	bcf	3,5	;RP0=0, select bank0
  6975  1351  1303               	bcf	3,6	;RP1=0, select bank0
  6976  1352  009B               	movwf	27	;volatile
  6977                           
  6978                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6979  1353  0870               	movf	i1PWM_DutyCycle2@valor,w
  6980  1354  00F2               	movwf	??i1_PWM_DutyCycle2
  6981  1355  3003               	movlw	3
  6982  1356                     u329_25:	
  6983  1356  1003               	clrc
  6984  1357  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  6985  1358  3EFF               	addlw	-1
  6986  1359  1D03               	skipz
  6987  135A  2B56               	goto	u329_25
  6988  135B  1003               	clrc
  6989  135C  0D72               	rlf	??i1_PWM_DutyCycle2,w
  6990  135D  380C               	iorlw	12
  6991  135E  009D               	movwf	29	;volatile
  6992  135F  0008               	return
  6993  1360                     __end_ofi1_PWM_DutyCycle2:	
  6994                           
  6995                           	psect	text31
  6996  06DB                     __ptext31:	
  6997 ;; *************** function _trimf *****************
  6998 ;; Defined at:
  6999 ;;		line 69 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  x               3   23[BANK0 ] float 
  7002 ;;  a               3   26[BANK0 ] float 
  7003 ;;  b               3   29[BANK0 ] float 
  7004 ;;  c               3   32[BANK0 ] float 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  ua              3   35[BANK0 ] float 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  3   23[BANK0 ] float 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, pclath, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7016 ;;      Params:         0      12       0       0       0
  7017 ;;      Locals:         0       3       0       0       0
  7018 ;;      Temps:          0       0       0       0       0
  7019 ;;      Totals:         0      15       0       0       0
  7020 ;;Total ram usage:       15 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:    2
  7023 ;; This function calls:
  7024 ;;		___ftadd
  7025 ;;		___ftdiv
  7026 ;;		___ftge
  7027 ;;		___ftneg
  7028 ;; This function is called by:
  7029 ;;		_Fuzzy
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _trimf
  7035  06DB                     _trimf:	
  7036                           
  7037                           ;main.c: 71: float ua = 0;
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7041  06DB  3000               	movlw	0
  7042  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  7043  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  7044  06DE  00C3               	movwf	trimf@ua
  7045  06DF  3000               	movlw	0
  7046  06E0  00C4               	movwf	trimf@ua+1
  7047  06E1  3000               	movlw	0
  7048  06E2  00C5               	movwf	trimf@ua+2
  7049                           
  7050                           ;main.c: 73: if (x <= a)
  7051  06E3  083A               	movf	trimf@a,w
  7052  06E4  00F0               	movwf	___ftge@ff1
  7053  06E5  083B               	movf	trimf@a+1,w
  7054  06E6  00F1               	movwf	___ftge@ff1+1
  7055  06E7  083C               	movf	trimf@a+2,w
  7056  06E8  00F2               	movwf	___ftge@ff1+2
  7057  06E9  0837               	movf	trimf@x,w
  7058  06EA  00F3               	movwf	___ftge@ff2
  7059  06EB  0838               	movf	trimf@x+1,w
  7060  06EC  00F4               	movwf	___ftge@ff2+1
  7061  06ED  0839               	movf	trimf@x+2,w
  7062  06EE  00F5               	movwf	___ftge@ff2+2
  7063  06EF  120A  158A  20E0  120A  118A  	fcall	___ftge
  7064  06F4  1803               	btfsc	3,0
  7065  06F5  2FE8               	goto	L12
  7066                           
  7067                           ;main.c: 75: else if ((a < x) && (x <= b))
  7068                           
  7069                           ;main.c: 74: ua = 0;
  7070  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  7071  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  7072  06F8  083A               	movf	trimf@a,w
  7073  06F9  00F0               	movwf	___ftge@ff1
  7074  06FA  083B               	movf	trimf@a+1,w
  7075  06FB  00F1               	movwf	___ftge@ff1+1
  7076  06FC  083C               	movf	trimf@a+2,w
  7077  06FD  00F2               	movwf	___ftge@ff1+2
  7078  06FE  0837               	movf	trimf@x,w
  7079  06FF  00F3               	movwf	___ftge@ff2
  7080  0700  0838               	movf	trimf@x+1,w
  7081  0701  00F4               	movwf	___ftge@ff2+1
  7082  0702  0839               	movf	trimf@x+2,w
  7083  0703  00F5               	movwf	___ftge@ff2+2
  7084  0704  120A  158A  20E0  120A  118A  	fcall	___ftge
  7085  0709  1803               	btfsc	3,0
  7086  070A  2F52               	goto	i1l2414
  7087  070B  1283               	bcf	3,5	;RP0=0, select bank0
  7088  070C  1303               	bcf	3,6	;RP1=0, select bank0
  7089  070D  083D               	movf	trimf@b,w
  7090  070E  00F0               	movwf	___ftge@ff1
  7091  070F  083E               	movf	trimf@b+1,w
  7092  0710  00F1               	movwf	___ftge@ff1+1
  7093  0711  083F               	movf	trimf@b+2,w
  7094  0712  00F2               	movwf	___ftge@ff1+2
  7095  0713  0837               	movf	trimf@x,w
  7096  0714  00F3               	movwf	___ftge@ff2
  7097  0715  0838               	movf	trimf@x+1,w
  7098  0716  00F4               	movwf	___ftge@ff2+1
  7099  0717  0839               	movf	trimf@x+2,w
  7100  0718  00F5               	movwf	___ftge@ff2+2
  7101  0719  120A  158A  20E0  120A  118A  	fcall	___ftge
  7102  071E  1C03               	btfss	3,0
  7103  071F  2F52               	goto	i1l2414
  7104                           
  7105                           ;main.c: 76: ua = ((x - a) / (b - a));
  7106  0720  1283               	bcf	3,5	;RP0=0, select bank0
  7107  0721  1303               	bcf	3,6	;RP1=0, select bank0
  7108  0722  083D               	movf	trimf@b,w
  7109  0723  00F8               	movwf	___ftadd@f1
  7110  0724  083E               	movf	trimf@b+1,w
  7111  0725  00F9               	movwf	___ftadd@f1+1
  7112  0726  083F               	movf	trimf@b+2,w
  7113  0727  00FA               	movwf	___ftadd@f1+2
  7114  0728  083A               	movf	trimf@a,w
  7115  0729  00F0               	movwf	___ftneg@f1
  7116  072A  083B               	movf	trimf@a+1,w
  7117  072B  00F1               	movwf	___ftneg@f1+1
  7118  072C  083C               	movf	trimf@a+2,w
  7119  072D  00F2               	movwf	___ftneg@f1+2
  7120  072E  160A  118A  2298  120A  118A  	fcall	___ftneg
  7121  0733  0870               	movf	?___ftneg,w
  7122  0734  00FB               	movwf	___ftadd@f2
  7123  0735  0871               	movf	?___ftneg+1,w
  7124  0736  00FC               	movwf	___ftadd@f2+1
  7125  0737  0872               	movf	?___ftneg+2,w
  7126  0738  00FD               	movwf	___ftadd@f2+2
  7127  0739  120A  158A  22C6  120A  118A  	fcall	___ftadd
  7128  073E  0878               	movf	?___ftadd,w
  7129  073F  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0740  1303               	bcf	3,6	;RP1=0, select bank0
  7131  0741  00A7               	movwf	___ftdiv@f2
  7132  0742  0879               	movf	?___ftadd+1,w
  7133  0743  00A8               	movwf	___ftdiv@f2+1
  7134  0744  087A               	movf	?___ftadd+2,w
  7135  0745  00A9               	movwf	___ftdiv@f2+2
  7136  0746  0837               	movf	trimf@x,w
  7137  0747  00F8               	movwf	___ftadd@f1
  7138  0748  0838               	movf	trimf@x+1,w
  7139  0749  00F9               	movwf	___ftadd@f1+1
  7140  074A  0839               	movf	trimf@x+2,w
  7141  074B  00FA               	movwf	___ftadd@f1+2
  7142  074C  083A               	movf	trimf@a,w
  7143  074D  00F0               	movwf	___ftneg@f1
  7144  074E  083B               	movf	trimf@a+1,w
  7145  074F  00F1               	movwf	___ftneg@f1+1
  7146  0750  083C               	movf	trimf@a+2,w
  7147  0751  2FAD               	goto	L13
  7148  0752                     i1l2414:	
  7149                           
  7150                           ;main.c: 77: else if ((b < x) && (x <= c))
  7151  0752  1283               	bcf	3,5	;RP0=0, select bank0
  7152  0753  1303               	bcf	3,6	;RP1=0, select bank0
  7153  0754  083D               	movf	trimf@b,w
  7154  0755  00F0               	movwf	___ftge@ff1
  7155  0756  083E               	movf	trimf@b+1,w
  7156  0757  00F1               	movwf	___ftge@ff1+1
  7157  0758  083F               	movf	trimf@b+2,w
  7158  0759  00F2               	movwf	___ftge@ff1+2
  7159  075A  0837               	movf	trimf@x,w
  7160  075B  00F3               	movwf	___ftge@ff2
  7161  075C  0838               	movf	trimf@x+1,w
  7162  075D  00F4               	movwf	___ftge@ff2+1
  7163  075E  0839               	movf	trimf@x+2,w
  7164  075F  00F5               	movwf	___ftge@ff2+2
  7165  0760  120A  158A  20E0  120A  118A  	fcall	___ftge
  7166  0765  1803               	btfsc	3,0
  7167  0766  2FD3               	goto	i1l2420
  7168  0767  1283               	bcf	3,5	;RP0=0, select bank0
  7169  0768  1303               	bcf	3,6	;RP1=0, select bank0
  7170  0769  0840               	movf	trimf@c,w
  7171  076A  00F0               	movwf	___ftge@ff1
  7172  076B  0841               	movf	trimf@c+1,w
  7173  076C  00F1               	movwf	___ftge@ff1+1
  7174  076D  0842               	movf	trimf@c+2,w
  7175  076E  00F2               	movwf	___ftge@ff1+2
  7176  076F  0837               	movf	trimf@x,w
  7177  0770  00F3               	movwf	___ftge@ff2
  7178  0771  0838               	movf	trimf@x+1,w
  7179  0772  00F4               	movwf	___ftge@ff2+1
  7180  0773  0839               	movf	trimf@x+2,w
  7181  0774  00F5               	movwf	___ftge@ff2+2
  7182  0775  120A  158A  20E0  120A  118A  	fcall	___ftge
  7183  077A  1C03               	btfss	3,0
  7184  077B  2FD3               	goto	i1l2420
  7185                           
  7186                           ;main.c: 78: ua = ((x - c) / (b - c));
  7187  077C  1283               	bcf	3,5	;RP0=0, select bank0
  7188  077D  1303               	bcf	3,6	;RP1=0, select bank0
  7189  077E  083D               	movf	trimf@b,w
  7190  077F  00F8               	movwf	___ftadd@f1
  7191  0780  083E               	movf	trimf@b+1,w
  7192  0781  00F9               	movwf	___ftadd@f1+1
  7193  0782  083F               	movf	trimf@b+2,w
  7194  0783  00FA               	movwf	___ftadd@f1+2
  7195  0784  0840               	movf	trimf@c,w
  7196  0785  00F0               	movwf	___ftneg@f1
  7197  0786  0841               	movf	trimf@c+1,w
  7198  0787  00F1               	movwf	___ftneg@f1+1
  7199  0788  0842               	movf	trimf@c+2,w
  7200  0789  00F2               	movwf	___ftneg@f1+2
  7201  078A  160A  118A  2298  120A  118A  	fcall	___ftneg
  7202  078F  0870               	movf	?___ftneg,w
  7203  0790  00FB               	movwf	___ftadd@f2
  7204  0791  0871               	movf	?___ftneg+1,w
  7205  0792  00FC               	movwf	___ftadd@f2+1
  7206  0793  0872               	movf	?___ftneg+2,w
  7207  0794  00FD               	movwf	___ftadd@f2+2
  7208  0795  120A  158A  22C6  120A  118A  	fcall	___ftadd
  7209  079A  0878               	movf	?___ftadd,w
  7210  079B  1283               	bcf	3,5	;RP0=0, select bank0
  7211  079C  1303               	bcf	3,6	;RP1=0, select bank0
  7212  079D  00A7               	movwf	___ftdiv@f2
  7213  079E  0879               	movf	?___ftadd+1,w
  7214  079F  00A8               	movwf	___ftdiv@f2+1
  7215  07A0  087A               	movf	?___ftadd+2,w
  7216  07A1  00A9               	movwf	___ftdiv@f2+2
  7217  07A2  0837               	movf	trimf@x,w
  7218  07A3  00F8               	movwf	___ftadd@f1
  7219  07A4  0838               	movf	trimf@x+1,w
  7220  07A5  00F9               	movwf	___ftadd@f1+1
  7221  07A6  0839               	movf	trimf@x+2,w
  7222  07A7  00FA               	movwf	___ftadd@f1+2
  7223  07A8  0840               	movf	trimf@c,w
  7224  07A9  00F0               	movwf	___ftneg@f1
  7225  07AA  0841               	movf	trimf@c+1,w
  7226  07AB  00F1               	movwf	___ftneg@f1+1
  7227  07AC  0842               	movf	trimf@c+2,w
  7228  07AD                     L13:	
  7229  07AD  00F2               	movwf	___ftneg@f1+2
  7230  07AE  160A  118A  2298  120A  118A  	fcall	___ftneg
  7231  07B3  0870               	movf	?___ftneg,w
  7232  07B4  00FB               	movwf	___ftadd@f2
  7233  07B5  0871               	movf	?___ftneg+1,w
  7234  07B6  00FC               	movwf	___ftadd@f2+1
  7235  07B7  0872               	movf	?___ftneg+2,w
  7236  07B8  00FD               	movwf	___ftadd@f2+2
  7237  07B9  120A  158A  22C6  120A  118A  	fcall	___ftadd
  7238  07BE  0878               	movf	?___ftadd,w
  7239  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  7240  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  7241  07C1  00AA               	movwf	___ftdiv@f1
  7242  07C2  0879               	movf	?___ftadd+1,w
  7243  07C3  00AB               	movwf	___ftdiv@f1+1
  7244  07C4  087A               	movf	?___ftadd+2,w
  7245  07C5  00AC               	movwf	___ftdiv@f1+2
  7246  07C6  120A  158A  213D  120A  118A  	fcall	___ftdiv
  7247  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  7248  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  7249  07CD  0827               	movf	?___ftdiv,w
  7250  07CE  00C3               	movwf	trimf@ua
  7251  07CF  0828               	movf	?___ftdiv+1,w
  7252  07D0  00C4               	movwf	trimf@ua+1
  7253  07D1  0829               	movf	?___ftdiv+2,w
  7254  07D2  2FEF               	goto	L10
  7255  07D3                     i1l2420:	
  7256                           
  7257                           ;main.c: 79: else if (x > c)
  7258  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  7259  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  7260  07D5  0840               	movf	trimf@c,w
  7261  07D6  00F0               	movwf	___ftge@ff1
  7262  07D7  0841               	movf	trimf@c+1,w
  7263  07D8  00F1               	movwf	___ftge@ff1+1
  7264  07D9  0842               	movf	trimf@c+2,w
  7265  07DA  00F2               	movwf	___ftge@ff1+2
  7266  07DB  0837               	movf	trimf@x,w
  7267  07DC  00F3               	movwf	___ftge@ff2
  7268  07DD  0838               	movf	trimf@x+1,w
  7269  07DE  00F4               	movwf	___ftge@ff2+1
  7270  07DF  0839               	movf	trimf@x+2,w
  7271  07E0  00F5               	movwf	___ftge@ff2+2
  7272  07E1  120A  158A  20E0  120A  118A  	fcall	___ftge
  7273  07E6  1803               	btfsc	3,0
  7274  07E7  2FF0               	goto	i1l120
  7275  07E8                     L12:	
  7276                           
  7277                           ;main.c: 80: ua = 0;
  7278  07E8  3000               	movlw	0
  7279  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  7280  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  7281  07EB  00C3               	movwf	trimf@ua
  7282  07EC  3000               	movlw	0
  7283  07ED  00C4               	movwf	trimf@ua+1
  7284  07EE  3000               	movlw	0
  7285  07EF                     L10:	
  7286  07EF  00C5               	movwf	trimf@ua+2
  7287  07F0                     i1l120:	
  7288                           
  7289                           ;main.c: 82: return(ua);
  7290  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  7291  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  7292  07F2  0843               	movf	trimf@ua,w
  7293  07F3  00B7               	movwf	?_trimf
  7294  07F4  0844               	movf	trimf@ua+1,w
  7295  07F5  00B8               	movwf	?_trimf+1
  7296  07F6  0845               	movf	trimf@ua+2,w
  7297  07F7  00B9               	movwf	?_trimf+2
  7298  07F8  0008               	return
  7299  07F9                     __end_of_trimf:	
  7300                           
  7301                           	psect	text32
  7302  0BCD                     __ptext32:	
  7303 ;; *************** function _trapmf *****************
  7304 ;; Defined at:
  7305 ;;		line 88 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  x               3   23[BANK0 ] float 
  7308 ;;  a               3   26[BANK0 ] float 
  7309 ;;  b               3   29[BANK0 ] float 
  7310 ;;  c               3   32[BANK0 ] float 
  7311 ;;  d               3   35[BANK0 ] float 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  ua              3   38[BANK0 ] float 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  3   23[BANK0 ] float 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0, pclath, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7323 ;;      Params:         0      15       0       0       0
  7324 ;;      Locals:         0       3       0       0       0
  7325 ;;      Temps:          0       0       0       0       0
  7326 ;;      Totals:         0      18       0       0       0
  7327 ;;Total ram usage:       18 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:    2
  7330 ;; This function calls:
  7331 ;;		___ftadd
  7332 ;;		___ftdiv
  7333 ;;		___ftge
  7334 ;;		___ftneg
  7335 ;; This function is called by:
  7336 ;;		_Fuzzy
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _trapmf
  7342  0BCD                     _trapmf:	
  7343                           
  7344                           ;main.c: 90: float ua = 0;
  7345                           
  7346                           ;incstack = 0
  7347                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7348  0BCD  3000               	movlw	0
  7349  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  7350  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  7351  0BD0  00C6               	movwf	trapmf@ua
  7352  0BD1  3000               	movlw	0
  7353  0BD2  00C7               	movwf	trapmf@ua+1
  7354  0BD3  3000               	movlw	0
  7355  0BD4  00C8               	movwf	trapmf@ua+2
  7356                           
  7357                           ;main.c: 92: if (x <= a)
  7358  0BD5  083A               	movf	trapmf@a,w
  7359  0BD6  00F0               	movwf	___ftge@ff1
  7360  0BD7  083B               	movf	trapmf@a+1,w
  7361  0BD8  00F1               	movwf	___ftge@ff1+1
  7362  0BD9  083C               	movf	trapmf@a+2,w
  7363  0BDA  00F2               	movwf	___ftge@ff1+2
  7364  0BDB  0837               	movf	trapmf@x,w
  7365  0BDC  00F3               	movwf	___ftge@ff2
  7366  0BDD  0838               	movf	trapmf@x+1,w
  7367  0BDE  00F4               	movwf	___ftge@ff2+1
  7368  0BDF  0839               	movf	trapmf@x+2,w
  7369  0BE0  00F5               	movwf	___ftge@ff2+2
  7370  0BE1  120A  158A  20E0  120A  158A  	fcall	___ftge
  7371  0BE6  1803               	btfsc	3,0
  7372  0BE7  2D0C               	goto	L18
  7373                           
  7374                           ;main.c: 94: else if ((a < x) && (x <= b))
  7375                           
  7376                           ;main.c: 93: ua = 0;
  7377  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  7378  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  7379  0BEA  083A               	movf	trapmf@a,w
  7380  0BEB  00F0               	movwf	___ftge@ff1
  7381  0BEC  083B               	movf	trapmf@a+1,w
  7382  0BED  00F1               	movwf	___ftge@ff1+1
  7383  0BEE  083C               	movf	trapmf@a+2,w
  7384  0BEF  00F2               	movwf	___ftge@ff1+2
  7385  0BF0  0837               	movf	trapmf@x,w
  7386  0BF1  00F3               	movwf	___ftge@ff2
  7387  0BF2  0838               	movf	trapmf@x+1,w
  7388  0BF3  00F4               	movwf	___ftge@ff2+1
  7389  0BF4  0839               	movf	trapmf@x+2,w
  7390  0BF5  00F5               	movwf	___ftge@ff2+2
  7391  0BF6  120A  158A  20E0  120A  158A  	fcall	___ftge
  7392  0BFB  1803               	btfsc	3,0
  7393  0BFC  2C44               	goto	i1l2438
  7394  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  7395  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  7396  0BFF  083D               	movf	trapmf@b,w
  7397  0C00  00F0               	movwf	___ftge@ff1
  7398  0C01  083E               	movf	trapmf@b+1,w
  7399  0C02  00F1               	movwf	___ftge@ff1+1
  7400  0C03  083F               	movf	trapmf@b+2,w
  7401  0C04  00F2               	movwf	___ftge@ff1+2
  7402  0C05  0837               	movf	trapmf@x,w
  7403  0C06  00F3               	movwf	___ftge@ff2
  7404  0C07  0838               	movf	trapmf@x+1,w
  7405  0C08  00F4               	movwf	___ftge@ff2+1
  7406  0C09  0839               	movf	trapmf@x+2,w
  7407  0C0A  00F5               	movwf	___ftge@ff2+2
  7408  0C0B  120A  158A  20E0  120A  158A  	fcall	___ftge
  7409  0C10  1C03               	btfss	3,0
  7410  0C11  2C44               	goto	i1l2438
  7411                           
  7412                           ;main.c: 95: ua = ((x - a) / (b - a));
  7413  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  7414  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  7415  0C14  083D               	movf	trapmf@b,w
  7416  0C15  00F8               	movwf	___ftadd@f1
  7417  0C16  083E               	movf	trapmf@b+1,w
  7418  0C17  00F9               	movwf	___ftadd@f1+1
  7419  0C18  083F               	movf	trapmf@b+2,w
  7420  0C19  00FA               	movwf	___ftadd@f1+2
  7421  0C1A  083A               	movf	trapmf@a,w
  7422  0C1B  00F0               	movwf	___ftneg@f1
  7423  0C1C  083B               	movf	trapmf@a+1,w
  7424  0C1D  00F1               	movwf	___ftneg@f1+1
  7425  0C1E  083C               	movf	trapmf@a+2,w
  7426  0C1F  00F2               	movwf	___ftneg@f1+2
  7427  0C20  160A  118A  2298  120A  158A  	fcall	___ftneg
  7428  0C25  0870               	movf	?___ftneg,w
  7429  0C26  00FB               	movwf	___ftadd@f2
  7430  0C27  0871               	movf	?___ftneg+1,w
  7431  0C28  00FC               	movwf	___ftadd@f2+1
  7432  0C29  0872               	movf	?___ftneg+2,w
  7433  0C2A  00FD               	movwf	___ftadd@f2+2
  7434  0C2B  120A  158A  22C6  120A  158A  	fcall	___ftadd
  7435  0C30  0878               	movf	?___ftadd,w
  7436  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0C33  00A7               	movwf	___ftdiv@f2
  7439  0C34  0879               	movf	?___ftadd+1,w
  7440  0C35  00A8               	movwf	___ftdiv@f2+1
  7441  0C36  087A               	movf	?___ftadd+2,w
  7442  0C37  00A9               	movwf	___ftdiv@f2+2
  7443  0C38  0837               	movf	trapmf@x,w
  7444  0C39  00F8               	movwf	___ftadd@f1
  7445  0C3A  0838               	movf	trapmf@x+1,w
  7446  0C3B  00F9               	movwf	___ftadd@f1+1
  7447  0C3C  0839               	movf	trapmf@x+2,w
  7448  0C3D  00FA               	movwf	___ftadd@f1+2
  7449  0C3E  083A               	movf	trapmf@a,w
  7450  0C3F  00F0               	movwf	___ftneg@f1
  7451  0C40  083B               	movf	trapmf@a+1,w
  7452  0C41  00F1               	movwf	___ftneg@f1+1
  7453  0C42  083C               	movf	trapmf@a+2,w
  7454  0C43  2CD1               	goto	L20
  7455  0C44                     i1l2438:	
  7456                           
  7457                           ;main.c: 96: else if ((b <= x) && (x <= c))
  7458  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0C46  0837               	movf	trapmf@x,w
  7461  0C47  00F0               	movwf	___ftge@ff1
  7462  0C48  0838               	movf	trapmf@x+1,w
  7463  0C49  00F1               	movwf	___ftge@ff1+1
  7464  0C4A  0839               	movf	trapmf@x+2,w
  7465  0C4B  00F2               	movwf	___ftge@ff1+2
  7466  0C4C  083D               	movf	trapmf@b,w
  7467  0C4D  00F3               	movwf	___ftge@ff2
  7468  0C4E  083E               	movf	trapmf@b+1,w
  7469  0C4F  00F4               	movwf	___ftge@ff2+1
  7470  0C50  083F               	movf	trapmf@b+2,w
  7471  0C51  00F5               	movwf	___ftge@ff2+2
  7472  0C52  120A  158A  20E0  120A  158A  	fcall	___ftge
  7473  0C57  1C03               	btfss	3,0
  7474  0C58  2C76               	goto	i1l2444
  7475  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  7476  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  7477  0C5B  0840               	movf	trapmf@c,w
  7478  0C5C  00F0               	movwf	___ftge@ff1
  7479  0C5D  0841               	movf	trapmf@c+1,w
  7480  0C5E  00F1               	movwf	___ftge@ff1+1
  7481  0C5F  0842               	movf	trapmf@c+2,w
  7482  0C60  00F2               	movwf	___ftge@ff1+2
  7483  0C61  0837               	movf	trapmf@x,w
  7484  0C62  00F3               	movwf	___ftge@ff2
  7485  0C63  0838               	movf	trapmf@x+1,w
  7486  0C64  00F4               	movwf	___ftge@ff2+1
  7487  0C65  0839               	movf	trapmf@x+2,w
  7488  0C66  00F5               	movwf	___ftge@ff2+2
  7489  0C67  120A  158A  20E0  120A  158A  	fcall	___ftge
  7490  0C6C  1C03               	btfss	3,0
  7491  0C6D  2C76               	goto	i1l2444
  7492                           
  7493                           ;main.c: 97: ua = 1;
  7494  0C6E  3000               	movlw	0
  7495  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  7496  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  7497  0C71  00C6               	movwf	trapmf@ua
  7498  0C72  3080               	movlw	128
  7499  0C73  00C7               	movwf	trapmf@ua+1
  7500  0C74  303F               	movlw	63
  7501  0C75  2D13               	goto	L17
  7502  0C76                     i1l2444:	
  7503                           
  7504                           ;main.c: 98: else if ((c < x) && (x <= d))
  7505  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  7506  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  7507  0C78  0840               	movf	trapmf@c,w
  7508  0C79  00F0               	movwf	___ftge@ff1
  7509  0C7A  0841               	movf	trapmf@c+1,w
  7510  0C7B  00F1               	movwf	___ftge@ff1+1
  7511  0C7C  0842               	movf	trapmf@c+2,w
  7512  0C7D  00F2               	movwf	___ftge@ff1+2
  7513  0C7E  0837               	movf	trapmf@x,w
  7514  0C7F  00F3               	movwf	___ftge@ff2
  7515  0C80  0838               	movf	trapmf@x+1,w
  7516  0C81  00F4               	movwf	___ftge@ff2+1
  7517  0C82  0839               	movf	trapmf@x+2,w
  7518  0C83  00F5               	movwf	___ftge@ff2+2
  7519  0C84  120A  158A  20E0  120A  158A  	fcall	___ftge
  7520  0C89  1803               	btfsc	3,0
  7521  0C8A  2CF7               	goto	i1l2450
  7522  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  7523  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  7524  0C8D  0843               	movf	trapmf@d,w
  7525  0C8E  00F0               	movwf	___ftge@ff1
  7526  0C8F  0844               	movf	trapmf@d+1,w
  7527  0C90  00F1               	movwf	___ftge@ff1+1
  7528  0C91  0845               	movf	trapmf@d+2,w
  7529  0C92  00F2               	movwf	___ftge@ff1+2
  7530  0C93  0837               	movf	trapmf@x,w
  7531  0C94  00F3               	movwf	___ftge@ff2
  7532  0C95  0838               	movf	trapmf@x+1,w
  7533  0C96  00F4               	movwf	___ftge@ff2+1
  7534  0C97  0839               	movf	trapmf@x+2,w
  7535  0C98  00F5               	movwf	___ftge@ff2+2
  7536  0C99  120A  158A  20E0  120A  158A  	fcall	___ftge
  7537  0C9E  1C03               	btfss	3,0
  7538  0C9F  2CF7               	goto	i1l2450
  7539                           
  7540                           ;main.c: 99: ua = ((d - x) / (d - c));
  7541  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7542  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7543  0CA2  0843               	movf	trapmf@d,w
  7544  0CA3  00F8               	movwf	___ftadd@f1
  7545  0CA4  0844               	movf	trapmf@d+1,w
  7546  0CA5  00F9               	movwf	___ftadd@f1+1
  7547  0CA6  0845               	movf	trapmf@d+2,w
  7548  0CA7  00FA               	movwf	___ftadd@f1+2
  7549  0CA8  0840               	movf	trapmf@c,w
  7550  0CA9  00F0               	movwf	___ftneg@f1
  7551  0CAA  0841               	movf	trapmf@c+1,w
  7552  0CAB  00F1               	movwf	___ftneg@f1+1
  7553  0CAC  0842               	movf	trapmf@c+2,w
  7554  0CAD  00F2               	movwf	___ftneg@f1+2
  7555  0CAE  160A  118A  2298  120A  158A  	fcall	___ftneg
  7556  0CB3  0870               	movf	?___ftneg,w
  7557  0CB4  00FB               	movwf	___ftadd@f2
  7558  0CB5  0871               	movf	?___ftneg+1,w
  7559  0CB6  00FC               	movwf	___ftadd@f2+1
  7560  0CB7  0872               	movf	?___ftneg+2,w
  7561  0CB8  00FD               	movwf	___ftadd@f2+2
  7562  0CB9  120A  158A  22C6  120A  158A  	fcall	___ftadd
  7563  0CBE  0878               	movf	?___ftadd,w
  7564  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  7565  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  7566  0CC1  00A7               	movwf	___ftdiv@f2
  7567  0CC2  0879               	movf	?___ftadd+1,w
  7568  0CC3  00A8               	movwf	___ftdiv@f2+1
  7569  0CC4  087A               	movf	?___ftadd+2,w
  7570  0CC5  00A9               	movwf	___ftdiv@f2+2
  7571  0CC6  0843               	movf	trapmf@d,w
  7572  0CC7  00F8               	movwf	___ftadd@f1
  7573  0CC8  0844               	movf	trapmf@d+1,w
  7574  0CC9  00F9               	movwf	___ftadd@f1+1
  7575  0CCA  0845               	movf	trapmf@d+2,w
  7576  0CCB  00FA               	movwf	___ftadd@f1+2
  7577  0CCC  0837               	movf	trapmf@x,w
  7578  0CCD  00F0               	movwf	___ftneg@f1
  7579  0CCE  0838               	movf	trapmf@x+1,w
  7580  0CCF  00F1               	movwf	___ftneg@f1+1
  7581  0CD0  0839               	movf	trapmf@x+2,w
  7582  0CD1                     L20:	
  7583  0CD1  00F2               	movwf	___ftneg@f1+2
  7584  0CD2  160A  118A  2298  120A  158A  	fcall	___ftneg
  7585  0CD7  0870               	movf	?___ftneg,w
  7586  0CD8  00FB               	movwf	___ftadd@f2
  7587  0CD9  0871               	movf	?___ftneg+1,w
  7588  0CDA  00FC               	movwf	___ftadd@f2+1
  7589  0CDB  0872               	movf	?___ftneg+2,w
  7590  0CDC  00FD               	movwf	___ftadd@f2+2
  7591  0CDD  120A  158A  22C6  120A  158A  	fcall	___ftadd
  7592  0CE2  0878               	movf	?___ftadd,w
  7593  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  7594  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  7595  0CE5  00AA               	movwf	___ftdiv@f1
  7596  0CE6  0879               	movf	?___ftadd+1,w
  7597  0CE7  00AB               	movwf	___ftdiv@f1+1
  7598  0CE8  087A               	movf	?___ftadd+2,w
  7599  0CE9  00AC               	movwf	___ftdiv@f1+2
  7600  0CEA  120A  158A  213D  120A  158A  	fcall	___ftdiv
  7601  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  7602  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  7603  0CF1  0827               	movf	?___ftdiv,w
  7604  0CF2  00C6               	movwf	trapmf@ua
  7605  0CF3  0828               	movf	?___ftdiv+1,w
  7606  0CF4  00C7               	movwf	trapmf@ua+1
  7607  0CF5  0829               	movf	?___ftdiv+2,w
  7608  0CF6  2D13               	goto	L17
  7609  0CF7                     i1l2450:	
  7610                           
  7611                           ;main.c: 100: else if (x > d)
  7612  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  7613  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  7614  0CF9  0843               	movf	trapmf@d,w
  7615  0CFA  00F0               	movwf	___ftge@ff1
  7616  0CFB  0844               	movf	trapmf@d+1,w
  7617  0CFC  00F1               	movwf	___ftge@ff1+1
  7618  0CFD  0845               	movf	trapmf@d+2,w
  7619  0CFE  00F2               	movwf	___ftge@ff1+2
  7620  0CFF  0837               	movf	trapmf@x,w
  7621  0D00  00F3               	movwf	___ftge@ff2
  7622  0D01  0838               	movf	trapmf@x+1,w
  7623  0D02  00F4               	movwf	___ftge@ff2+1
  7624  0D03  0839               	movf	trapmf@x+2,w
  7625  0D04  00F5               	movwf	___ftge@ff2+2
  7626  0D05  120A  158A  20E0  120A  158A  	fcall	___ftge
  7627  0D0A  1803               	btfsc	3,0
  7628  0D0B  2D14               	goto	i1l130
  7629  0D0C                     L18:	
  7630                           
  7631                           ;main.c: 101: ua = 0;
  7632  0D0C  3000               	movlw	0
  7633  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  7634  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  7635  0D0F  00C6               	movwf	trapmf@ua
  7636  0D10  3000               	movlw	0
  7637  0D11  00C7               	movwf	trapmf@ua+1
  7638  0D12  3000               	movlw	0
  7639  0D13                     L17:	
  7640  0D13  00C8               	movwf	trapmf@ua+2
  7641  0D14                     i1l130:	
  7642                           
  7643                           ;main.c: 103: return(ua);
  7644  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  7645  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  7646  0D16  0846               	movf	trapmf@ua,w
  7647  0D17  00B7               	movwf	?_trapmf
  7648  0D18  0847               	movf	trapmf@ua+1,w
  7649  0D19  00B8               	movwf	?_trapmf+1
  7650  0D1A  0848               	movf	trapmf@ua+2,w
  7651  0D1B  00B9               	movwf	?_trapmf+2
  7652  0D1C  0008               	return
  7653  0D1D                     __end_of_trapmf:	
  7654                           
  7655                           	psect	text33
  7656  1298                     __ptext33:	
  7657 ;; *************** function ___ftneg *****************
  7658 ;; Defined at:
  7659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  f1              3    0[COMMON] float 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  3    0[COMMON] float 
  7666 ;; Registers used:
  7667 ;;		wreg
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7673 ;;      Params:         3       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0
  7676 ;;      Totals:         3       0       0       0       0
  7677 ;;Total ram usage:        3 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_trimf
  7683 ;;		_trapmf
  7684 ;;		_Fuzzy
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function ___ftneg
  7690  1298                     ___ftneg:	
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in ___ftneg: [wreg]
  7694  1298  0872               	movf	___ftneg@f1+2,w
  7695  1299  0471               	iorwf	___ftneg@f1+1,w
  7696  129A  0470               	iorwf	___ftneg@f1,w
  7697  129B  1903               	skipnz
  7698  129C  0008               	return
  7699  129D  3080               	movlw	128
  7700  129E  06F2               	xorwf	___ftneg@f1+2,f
  7701  129F  0008               	return
  7702  12A0                     __end_of___ftneg:	
  7703                           
  7704                           	psect	text34
  7705  093D                     __ptext34:	
  7706 ;; *************** function ___ftdiv *****************
  7707 ;; Defined at:
  7708 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  f2              3    7[BANK0 ] float 
  7711 ;;  f1              3   10[BANK0 ] float 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  f3              3   18[BANK0 ] float 
  7714 ;;  sign            1   22[BANK0 ] unsigned char 
  7715 ;;  exp             1   21[BANK0 ] unsigned char 
  7716 ;;  cntr            1   17[BANK0 ] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  3    7[BANK0 ] float 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7726 ;;      Params:         0       6       0       0       0
  7727 ;;      Locals:         0       6       0       0       0
  7728 ;;      Temps:          0       4       0       0       0
  7729 ;;      Totals:         0      16       0       0       0
  7730 ;;Total ram usage:       16 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:    1
  7733 ;; This function calls:
  7734 ;;		___ftpack
  7735 ;; This function is called by:
  7736 ;;		_trimf
  7737 ;;		_trapmf
  7738 ;;		_Fuzzy
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function ___ftdiv
  7744  093D                     ___ftdiv:	
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7748  093D  1283               	bcf	3,5	;RP0=0, select bank0
  7749  093E  1303               	bcf	3,6	;RP1=0, select bank0
  7750  093F  082A               	movf	___ftdiv@f1,w
  7751  0940  00AD               	movwf	??___ftdiv
  7752  0941  082B               	movf	___ftdiv@f1+1,w
  7753  0942  00AE               	movwf	??___ftdiv+1
  7754  0943  082C               	movf	___ftdiv@f1+2,w
  7755  0944  00AF               	movwf	??___ftdiv+2
  7756  0945  1003               	clrc
  7757  0946  0D2E               	rlf	??___ftdiv+1,w
  7758  0947  0D2F               	rlf	??___ftdiv+2,w
  7759  0948  00B0               	movwf	??___ftdiv+3
  7760  0949  0830               	movf	??___ftdiv+3,w
  7761  094A  00B5               	movwf	___ftdiv@exp
  7762  094B  08B5               	movf	___ftdiv@exp,f
  7763  094C  1D03               	skipz
  7764  094D  2955               	goto	i1l2334
  7765  094E  3000               	movlw	0
  7766  094F  00A7               	movwf	?___ftdiv
  7767  0950  3000               	movlw	0
  7768  0951  00A8               	movwf	?___ftdiv+1
  7769  0952  3000               	movlw	0
  7770  0953  00A9               	movwf	?___ftdiv+2
  7771  0954  0008               	return
  7772  0955                     i1l2334:	
  7773  0955  0827               	movf	___ftdiv@f2,w
  7774  0956  00AD               	movwf	??___ftdiv
  7775  0957  0828               	movf	___ftdiv@f2+1,w
  7776  0958  00AE               	movwf	??___ftdiv+1
  7777  0959  0829               	movf	___ftdiv@f2+2,w
  7778  095A  00AF               	movwf	??___ftdiv+2
  7779  095B  1003               	clrc
  7780  095C  0D2E               	rlf	??___ftdiv+1,w
  7781  095D  0D2F               	rlf	??___ftdiv+2,w
  7782  095E  00B0               	movwf	??___ftdiv+3
  7783  095F  0830               	movf	??___ftdiv+3,w
  7784  0960  00B6               	movwf	___ftdiv@sign
  7785  0961  08B6               	movf	___ftdiv@sign,f
  7786  0962  1D03               	skipz
  7787  0963  296B               	goto	i1l2340
  7788  0964  3000               	movlw	0
  7789  0965  00A7               	movwf	?___ftdiv
  7790  0966  3000               	movlw	0
  7791  0967  00A8               	movwf	?___ftdiv+1
  7792  0968  3000               	movlw	0
  7793  0969  00A9               	movwf	?___ftdiv+2
  7794  096A  0008               	return
  7795  096B                     i1l2340:	
  7796  096B  3000               	movlw	0
  7797  096C  00B2               	movwf	___ftdiv@f3
  7798  096D  3000               	movlw	0
  7799  096E  00B3               	movwf	___ftdiv@f3+1
  7800  096F  3000               	movlw	0
  7801  0970  00B4               	movwf	___ftdiv@f3+2
  7802  0971  3089               	movlw	137
  7803  0972  0736               	addwf	___ftdiv@sign,w
  7804  0973  00AD               	movwf	??___ftdiv
  7805  0974  082D               	movf	??___ftdiv,w
  7806  0975  02B5               	subwf	___ftdiv@exp,f
  7807  0976  082A               	movf	___ftdiv@f1,w
  7808  0977  00AD               	movwf	??___ftdiv
  7809  0978  082B               	movf	___ftdiv@f1+1,w
  7810  0979  00AE               	movwf	??___ftdiv+1
  7811  097A  082C               	movf	___ftdiv@f1+2,w
  7812  097B  00AF               	movwf	??___ftdiv+2
  7813  097C  3010               	movlw	16
  7814  097D                     u246_25:	
  7815  097D  1003               	clrc
  7816  097E  0CAF               	rrf	??___ftdiv+2,f
  7817  097F  0CAE               	rrf	??___ftdiv+1,f
  7818  0980  0CAD               	rrf	??___ftdiv,f
  7819  0981  3EFF               	addlw	-1
  7820  0982  1D03               	skipz
  7821  0983  297D               	goto	u246_25
  7822  0984  082D               	movf	??___ftdiv,w
  7823  0985  00B0               	movwf	??___ftdiv+3
  7824  0986  0830               	movf	??___ftdiv+3,w
  7825  0987  00B6               	movwf	___ftdiv@sign
  7826  0988  0827               	movf	___ftdiv@f2,w
  7827  0989  00AD               	movwf	??___ftdiv
  7828  098A  0828               	movf	___ftdiv@f2+1,w
  7829  098B  00AE               	movwf	??___ftdiv+1
  7830  098C  0829               	movf	___ftdiv@f2+2,w
  7831  098D  00AF               	movwf	??___ftdiv+2
  7832  098E  3010               	movlw	16
  7833  098F                     u247_25:	
  7834  098F  1003               	clrc
  7835  0990  0CAF               	rrf	??___ftdiv+2,f
  7836  0991  0CAE               	rrf	??___ftdiv+1,f
  7837  0992  0CAD               	rrf	??___ftdiv,f
  7838  0993  3EFF               	addlw	-1
  7839  0994  1D03               	skipz
  7840  0995  298F               	goto	u247_25
  7841  0996  082D               	movf	??___ftdiv,w
  7842  0997  00B0               	movwf	??___ftdiv+3
  7843  0998  0830               	movf	??___ftdiv+3,w
  7844  0999  06B6               	xorwf	___ftdiv@sign,f
  7845  099A  3080               	movlw	128
  7846  099B  00AD               	movwf	??___ftdiv
  7847  099C  082D               	movf	??___ftdiv,w
  7848  099D  05B6               	andwf	___ftdiv@sign,f
  7849  099E  17AB               	bsf	___ftdiv@f1+1,7
  7850  099F  30FF               	movlw	255
  7851  09A0  05AA               	andwf	___ftdiv@f1,f
  7852  09A1  30FF               	movlw	255
  7853  09A2  05AB               	andwf	___ftdiv@f1+1,f
  7854  09A3  3000               	movlw	0
  7855  09A4  05AC               	andwf	___ftdiv@f1+2,f
  7856  09A5  17A8               	bsf	___ftdiv@f2+1,7
  7857  09A6  30FF               	movlw	255
  7858  09A7  05A7               	andwf	___ftdiv@f2,f
  7859  09A8  30FF               	movlw	255
  7860  09A9  05A8               	andwf	___ftdiv@f2+1,f
  7861  09AA  3000               	movlw	0
  7862  09AB  05A9               	andwf	___ftdiv@f2+2,f
  7863  09AC  3018               	movlw	24
  7864  09AD  00AD               	movwf	??___ftdiv
  7865  09AE  082D               	movf	??___ftdiv,w
  7866  09AF  00B1               	movwf	___ftdiv@cntr
  7867  09B0                     i1l2354:	
  7868  09B0  3001               	movlw	1
  7869  09B1                     u248_25:	
  7870  09B1  1003               	clrc
  7871  09B2  0DB2               	rlf	___ftdiv@f3,f
  7872  09B3  0DB3               	rlf	___ftdiv@f3+1,f
  7873  09B4  0DB4               	rlf	___ftdiv@f3+2,f
  7874  09B5  3EFF               	addlw	-1
  7875  09B6  1D03               	skipz
  7876  09B7  29B1               	goto	u248_25
  7877  09B8  0829               	movf	___ftdiv@f2+2,w
  7878  09B9  022C               	subwf	___ftdiv@f1+2,w
  7879  09BA  1D03               	skipz
  7880  09BB  29C2               	goto	u249_25
  7881  09BC  0828               	movf	___ftdiv@f2+1,w
  7882  09BD  022B               	subwf	___ftdiv@f1+1,w
  7883  09BE  1D03               	skipz
  7884  09BF  29C2               	goto	u249_25
  7885  09C0  0827               	movf	___ftdiv@f2,w
  7886  09C1  022A               	subwf	___ftdiv@f1,w
  7887  09C2                     u249_25:	
  7888  09C2  1C03               	skipc
  7889  09C3  29CF               	goto	i1l2362
  7890  09C4  0827               	movf	___ftdiv@f2,w
  7891  09C5  02AA               	subwf	___ftdiv@f1,f
  7892  09C6  0828               	movf	___ftdiv@f2+1,w
  7893  09C7  1C03               	skipc
  7894  09C8  0F28               	incfsz	___ftdiv@f2+1,w
  7895  09C9  02AB               	subwf	___ftdiv@f1+1,f
  7896  09CA  0829               	movf	___ftdiv@f2+2,w
  7897  09CB  1C03               	skipc
  7898  09CC  0A29               	incf	___ftdiv@f2+2,w
  7899  09CD  02AC               	subwf	___ftdiv@f1+2,f
  7900  09CE  1432               	bsf	___ftdiv@f3,0
  7901  09CF                     i1l2362:	
  7902  09CF  3001               	movlw	1
  7903  09D0                     u250_25:	
  7904  09D0  1003               	clrc
  7905  09D1  0DAA               	rlf	___ftdiv@f1,f
  7906  09D2  0DAB               	rlf	___ftdiv@f1+1,f
  7907  09D3  0DAC               	rlf	___ftdiv@f1+2,f
  7908  09D4  3EFF               	addlw	-1
  7909  09D5  1D03               	skipz
  7910  09D6  29D0               	goto	u250_25
  7911  09D7  3001               	movlw	1
  7912  09D8  02B1               	subwf	___ftdiv@cntr,f
  7913  09D9  1D03               	btfss	3,2
  7914  09DA  29B0               	goto	i1l2354
  7915  09DB  0832               	movf	___ftdiv@f3,w
  7916  09DC  00F0               	movwf	___ftpack@arg
  7917  09DD  0833               	movf	___ftdiv@f3+1,w
  7918  09DE  00F1               	movwf	___ftpack@arg+1
  7919  09DF  0834               	movf	___ftdiv@f3+2,w
  7920  09E0  00F2               	movwf	___ftpack@arg+2
  7921  09E1  0835               	movf	___ftdiv@exp,w
  7922  09E2  00AD               	movwf	??___ftdiv
  7923  09E3  082D               	movf	??___ftdiv,w
  7924  09E4  00F3               	movwf	___ftpack@exp
  7925  09E5  0836               	movf	___ftdiv@sign,w
  7926  09E6  00AE               	movwf	??___ftdiv+1
  7927  09E7  082E               	movf	??___ftdiv+1,w
  7928  09E8  00F4               	movwf	___ftpack@sign
  7929  09E9  160A  118A  2612   	fcall	___ftpack
  7930  09EC  0870               	movf	?___ftpack,w
  7931  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  7932  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  7933  09EF  00A7               	movwf	?___ftdiv
  7934  09F0  0871               	movf	?___ftpack+1,w
  7935  09F1  00A8               	movwf	?___ftdiv+1
  7936  09F2  0872               	movf	?___ftpack+2,w
  7937  09F3  00A9               	movwf	?___ftdiv+2
  7938  09F4  0008               	return
  7939  09F5                     __end_of___ftdiv:	
  7940                           
  7941                           	psect	text35
  7942  0AC6                     __ptext35:	
  7943 ;; *************** function ___ftadd *****************
  7944 ;; Defined at:
  7945 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  f1              3    8[COMMON] float 
  7948 ;;  f2              3   11[COMMON] float 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  exp1            1    6[BANK0 ] unsigned char 
  7951 ;;  exp2            1    5[BANK0 ] unsigned char 
  7952 ;;  sign            1    4[BANK0 ] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  3    8[COMMON] float 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0, pclath, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7962 ;;      Params:         6       0       0       0       0
  7963 ;;      Locals:         0       3       0       0       0
  7964 ;;      Temps:          0       4       0       0       0
  7965 ;;      Totals:         6       7       0       0       0
  7966 ;;Total ram usage:       13 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    1
  7969 ;; This function calls:
  7970 ;;		___ftpack
  7971 ;; This function is called by:
  7972 ;;		_trimf
  7973 ;;		_trapmf
  7974 ;;		_Fuzzy
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           
  7979                           ;psect for function ___ftadd
  7980  0AC6                     ___ftadd:	
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7984  0AC6  0878               	movf	___ftadd@f1,w
  7985  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  7986  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  7987  0AC9  00A0               	movwf	??___ftadd
  7988  0ACA  0879               	movf	___ftadd@f1+1,w
  7989  0ACB  00A1               	movwf	??___ftadd+1
  7990  0ACC  087A               	movf	___ftadd@f1+2,w
  7991  0ACD  00A2               	movwf	??___ftadd+2
  7992  0ACE  1003               	clrc
  7993  0ACF  0D21               	rlf	??___ftadd+1,w
  7994  0AD0  0D22               	rlf	??___ftadd+2,w
  7995  0AD1  00A3               	movwf	??___ftadd+3
  7996  0AD2  0823               	movf	??___ftadd+3,w
  7997  0AD3  00A6               	movwf	___ftadd@exp1
  7998  0AD4  087B               	movf	___ftadd@f2,w
  7999  0AD5  00A0               	movwf	??___ftadd
  8000  0AD6  087C               	movf	___ftadd@f2+1,w
  8001  0AD7  00A1               	movwf	??___ftadd+1
  8002  0AD8  087D               	movf	___ftadd@f2+2,w
  8003  0AD9  00A2               	movwf	??___ftadd+2
  8004  0ADA  1003               	clrc
  8005  0ADB  0D21               	rlf	??___ftadd+1,w
  8006  0ADC  0D22               	rlf	??___ftadd+2,w
  8007  0ADD  00A3               	movwf	??___ftadd+3
  8008  0ADE  0823               	movf	??___ftadd+3,w
  8009  0ADF  00A5               	movwf	___ftadd@exp2
  8010  0AE0  0826               	movf	___ftadd@exp1,w
  8011  0AE1  1903               	btfsc	3,2
  8012  0AE2  2AEF               	goto	i1l2264
  8013  0AE3  0825               	movf	___ftadd@exp2,w
  8014  0AE4  0226               	subwf	___ftadd@exp1,w
  8015  0AE5  1803               	skipnc
  8016  0AE6  2AF6               	goto	i1l2268
  8017  0AE7  0326               	decf	___ftadd@exp1,w
  8018  0AE8  3AFF               	xorlw	255
  8019  0AE9  0725               	addwf	___ftadd@exp2,w
  8020  0AEA  00A0               	movwf	??___ftadd
  8021  0AEB  3019               	movlw	25
  8022  0AEC  0220               	subwf	??___ftadd,w
  8023  0AED  1C03               	skipc
  8024  0AEE  2AF6               	goto	i1l2268
  8025  0AEF                     i1l2264:	
  8026  0AEF  087B               	movf	___ftadd@f2,w
  8027  0AF0  00F8               	movwf	?___ftadd
  8028  0AF1  087C               	movf	___ftadd@f2+1,w
  8029  0AF2  00F9               	movwf	?___ftadd+1
  8030  0AF3  087D               	movf	___ftadd@f2+2,w
  8031  0AF4  00FA               	movwf	?___ftadd+2
  8032  0AF5  0008               	return
  8033  0AF6                     i1l2268:	
  8034  0AF6  0825               	movf	___ftadd@exp2,w
  8035  0AF7  1903               	btfsc	3,2
  8036  0AF8  0008               	return
  8037  0AF9  0826               	movf	___ftadd@exp1,w
  8038  0AFA  0225               	subwf	___ftadd@exp2,w
  8039  0AFB  1803               	skipnc
  8040  0AFC  2B05               	goto	i1l2274
  8041  0AFD  0325               	decf	___ftadd@exp2,w
  8042  0AFE  3AFF               	xorlw	255
  8043  0AFF  0726               	addwf	___ftadd@exp1,w
  8044  0B00  00A0               	movwf	??___ftadd
  8045  0B01  3019               	movlw	25
  8046  0B02  0220               	subwf	??___ftadd,w
  8047  0B03  1803               	btfsc	3,0
  8048  0B04  0008               	return
  8049  0B05                     i1l2274:	
  8050  0B05  3006               	movlw	6
  8051  0B06  00A0               	movwf	??___ftadd
  8052  0B07  0820               	movf	??___ftadd,w
  8053  0B08  00A4               	movwf	___ftadd@sign
  8054  0B09  1BFA               	btfsc	___ftadd@f1+2,7
  8055  0B0A  17A4               	bsf	___ftadd@sign,7
  8056  0B0B  1BFD               	btfsc	___ftadd@f2+2,7
  8057  0B0C  1724               	bsf	___ftadd@sign,6
  8058  0B0D  17F9               	bsf	___ftadd@f1+1,7
  8059  0B0E  30FF               	movlw	255
  8060  0B0F  05F8               	andwf	___ftadd@f1,f
  8061  0B10  30FF               	movlw	255
  8062  0B11  05F9               	andwf	___ftadd@f1+1,f
  8063  0B12  3000               	movlw	0
  8064  0B13  05FA               	andwf	___ftadd@f1+2,f
  8065  0B14  17FC               	bsf	___ftadd@f2+1,7
  8066  0B15  30FF               	movlw	255
  8067  0B16  05FB               	andwf	___ftadd@f2,f
  8068  0B17  30FF               	movlw	255
  8069  0B18  05FC               	andwf	___ftadd@f2+1,f
  8070  0B19  3000               	movlw	0
  8071  0B1A  05FD               	andwf	___ftadd@f2+2,f
  8072  0B1B  0825               	movf	___ftadd@exp2,w
  8073  0B1C  0226               	subwf	___ftadd@exp1,w
  8074  0B1D  1803               	skipnc
  8075  0B1E  2B45               	goto	i1l2296
  8076  0B1F                     i1l2286:	
  8077  0B1F  3001               	movlw	1
  8078  0B20                     u229_25:	
  8079  0B20  1003               	clrc
  8080  0B21  0DFB               	rlf	___ftadd@f2,f
  8081  0B22  0DFC               	rlf	___ftadd@f2+1,f
  8082  0B23  0DFD               	rlf	___ftadd@f2+2,f
  8083  0B24  3EFF               	addlw	-1
  8084  0B25  1D03               	skipz
  8085  0B26  2B20               	goto	u229_25
  8086  0B27  3001               	movlw	1
  8087  0B28  02A5               	subwf	___ftadd@exp2,f
  8088  0B29  0825               	movf	___ftadd@exp2,w
  8089  0B2A  0626               	xorwf	___ftadd@exp1,w
  8090  0B2B  1903               	skipnz
  8091  0B2C  2B40               	goto	i1l2294
  8092  0B2D  3001               	movlw	1
  8093  0B2E  02A4               	subwf	___ftadd@sign,f
  8094  0B2F  0824               	movf	___ftadd@sign,w
  8095  0B30  3907               	andlw	7
  8096  0B31  1903               	btfsc	3,2
  8097  0B32  2B40               	goto	i1l2294
  8098  0B33  2B1F               	goto	i1l2286
  8099  0B34                     i1l2292:	
  8100  0B34  3001               	movlw	1
  8101  0B35                     u232_25:	
  8102  0B35  1003               	clrc
  8103  0B36  0CFA               	rrf	___ftadd@f1+2,f
  8104  0B37  0CF9               	rrf	___ftadd@f1+1,f
  8105  0B38  0CF8               	rrf	___ftadd@f1,f
  8106  0B39  3EFF               	addlw	-1
  8107  0B3A  1D03               	skipz
  8108  0B3B  2B35               	goto	u232_25
  8109  0B3C  3001               	movlw	1
  8110  0B3D  00A0               	movwf	??___ftadd
  8111  0B3E  0820               	movf	??___ftadd,w
  8112  0B3F  07A6               	addwf	___ftadd@exp1,f
  8113  0B40                     i1l2294:	
  8114  0B40  0826               	movf	___ftadd@exp1,w
  8115  0B41  0625               	xorwf	___ftadd@exp2,w
  8116  0B42  1903               	btfsc	3,2
  8117  0B43  2B6E               	goto	i1l784
  8118  0B44  2B34               	goto	i1l2292
  8119  0B45                     i1l2296:	
  8120  0B45  0826               	movf	___ftadd@exp1,w
  8121  0B46  0225               	subwf	___ftadd@exp2,w
  8122  0B47  1803               	skipnc
  8123  0B48  2B6E               	goto	i1l784
  8124  0B49                     i1l2298:	
  8125  0B49  3001               	movlw	1
  8126  0B4A                     u235_25:	
  8127  0B4A  1003               	clrc
  8128  0B4B  0DF8               	rlf	___ftadd@f1,f
  8129  0B4C  0DF9               	rlf	___ftadd@f1+1,f
  8130  0B4D  0DFA               	rlf	___ftadd@f1+2,f
  8131  0B4E  3EFF               	addlw	-1
  8132  0B4F  1D03               	skipz
  8133  0B50  2B4A               	goto	u235_25
  8134  0B51  3001               	movlw	1
  8135  0B52  02A6               	subwf	___ftadd@exp1,f
  8136  0B53  0825               	movf	___ftadd@exp2,w
  8137  0B54  0626               	xorwf	___ftadd@exp1,w
  8138  0B55  1903               	skipnz
  8139  0B56  2B6A               	goto	i1l2306
  8140  0B57  3001               	movlw	1
  8141  0B58  02A4               	subwf	___ftadd@sign,f
  8142  0B59  0824               	movf	___ftadd@sign,w
  8143  0B5A  3907               	andlw	7
  8144  0B5B  1903               	btfsc	3,2
  8145  0B5C  2B6A               	goto	i1l2306
  8146  0B5D  2B49               	goto	i1l2298
  8147  0B5E                     i1l2304:	
  8148  0B5E  3001               	movlw	1
  8149  0B5F                     u238_25:	
  8150  0B5F  1003               	clrc
  8151  0B60  0CFD               	rrf	___ftadd@f2+2,f
  8152  0B61  0CFC               	rrf	___ftadd@f2+1,f
  8153  0B62  0CFB               	rrf	___ftadd@f2,f
  8154  0B63  3EFF               	addlw	-1
  8155  0B64  1D03               	skipz
  8156  0B65  2B5F               	goto	u238_25
  8157  0B66  3001               	movlw	1
  8158  0B67  00A0               	movwf	??___ftadd
  8159  0B68  0820               	movf	??___ftadd,w
  8160  0B69  07A5               	addwf	___ftadd@exp2,f
  8161  0B6A                     i1l2306:	
  8162  0B6A  0826               	movf	___ftadd@exp1,w
  8163  0B6B  0625               	xorwf	___ftadd@exp2,w
  8164  0B6C  1D03               	skipz
  8165  0B6D  2B5E               	goto	i1l2304
  8166  0B6E                     i1l784:	
  8167  0B6E  1FA4               	btfss	___ftadd@sign,7
  8168  0B6F  2B80               	goto	i1l2310
  8169  0B70  30FF               	movlw	255
  8170  0B71  06F8               	xorwf	___ftadd@f1,f
  8171  0B72  30FF               	movlw	255
  8172  0B73  06F9               	xorwf	___ftadd@f1+1,f
  8173  0B74  30FF               	movlw	255
  8174  0B75  06FA               	xorwf	___ftadd@f1+2,f
  8175  0B76  3001               	movlw	1
  8176  0B77  07F8               	addwf	___ftadd@f1,f
  8177  0B78  3000               	movlw	0
  8178  0B79  1803               	skipnc
  8179  0B7A  3001               	movlw	1
  8180  0B7B  07F9               	addwf	___ftadd@f1+1,f
  8181  0B7C  3000               	movlw	0
  8182  0B7D  1803               	skipnc
  8183  0B7E  3001               	movlw	1
  8184  0B7F  07FA               	addwf	___ftadd@f1+2,f
  8185  0B80                     i1l2310:	
  8186  0B80  1F24               	btfss	___ftadd@sign,6
  8187  0B81  2B92               	goto	i1l2314
  8188  0B82  30FF               	movlw	255
  8189  0B83  06FB               	xorwf	___ftadd@f2,f
  8190  0B84  30FF               	movlw	255
  8191  0B85  06FC               	xorwf	___ftadd@f2+1,f
  8192  0B86  30FF               	movlw	255
  8193  0B87  06FD               	xorwf	___ftadd@f2+2,f
  8194  0B88  3001               	movlw	1
  8195  0B89  07FB               	addwf	___ftadd@f2,f
  8196  0B8A  3000               	movlw	0
  8197  0B8B  1803               	skipnc
  8198  0B8C  3001               	movlw	1
  8199  0B8D  07FC               	addwf	___ftadd@f2+1,f
  8200  0B8E  3000               	movlw	0
  8201  0B8F  1803               	skipnc
  8202  0B90  3001               	movlw	1
  8203  0B91  07FD               	addwf	___ftadd@f2+2,f
  8204  0B92                     i1l2314:	
  8205  0B92  01A4               	clrf	___ftadd@sign
  8206  0B93  0878               	movf	___ftadd@f1,w
  8207  0B94  07FB               	addwf	___ftadd@f2,f
  8208  0B95  0879               	movf	___ftadd@f1+1,w
  8209  0B96  1103               	clrz
  8210  0B97  1803               	skipnc
  8211  0B98  0A79               	incf	___ftadd@f1+1,w
  8212  0B99  1D03               	btfss	3,2
  8213  0B9A  07FC               	addwf	___ftadd@f2+1,f
  8214  0B9B  087A               	movf	___ftadd@f1+2,w
  8215  0B9C  1103               	clrz
  8216  0B9D  1803               	skipnc
  8217  0B9E  0A7A               	incf	___ftadd@f1+2,w
  8218  0B9F  1D03               	btfss	3,2
  8219  0BA0  07FD               	addwf	___ftadd@f2+2,f
  8220  0BA1  1FFD               	btfss	___ftadd@f2+2,7
  8221  0BA2  2BB5               	goto	i1l2324
  8222  0BA3  30FF               	movlw	255
  8223  0BA4  06FB               	xorwf	___ftadd@f2,f
  8224  0BA5  30FF               	movlw	255
  8225  0BA6  06FC               	xorwf	___ftadd@f2+1,f
  8226  0BA7  30FF               	movlw	255
  8227  0BA8  06FD               	xorwf	___ftadd@f2+2,f
  8228  0BA9  3001               	movlw	1
  8229  0BAA  07FB               	addwf	___ftadd@f2,f
  8230  0BAB  3000               	movlw	0
  8231  0BAC  1803               	skipnc
  8232  0BAD  3001               	movlw	1
  8233  0BAE  07FC               	addwf	___ftadd@f2+1,f
  8234  0BAF  3000               	movlw	0
  8235  0BB0  1803               	skipnc
  8236  0BB1  3001               	movlw	1
  8237  0BB2  07FD               	addwf	___ftadd@f2+2,f
  8238  0BB3  01A4               	clrf	___ftadd@sign
  8239  0BB4  0AA4               	incf	___ftadd@sign,f
  8240  0BB5                     i1l2324:	
  8241  0BB5  087B               	movf	___ftadd@f2,w
  8242  0BB6  00F0               	movwf	___ftpack@arg
  8243  0BB7  087C               	movf	___ftadd@f2+1,w
  8244  0BB8  00F1               	movwf	___ftpack@arg+1
  8245  0BB9  087D               	movf	___ftadd@f2+2,w
  8246  0BBA  00F2               	movwf	___ftpack@arg+2
  8247  0BBB  0826               	movf	___ftadd@exp1,w
  8248  0BBC  00A0               	movwf	??___ftadd
  8249  0BBD  0820               	movf	??___ftadd,w
  8250  0BBE  00F3               	movwf	___ftpack@exp
  8251  0BBF  0824               	movf	___ftadd@sign,w
  8252  0BC0  00A1               	movwf	??___ftadd+1
  8253  0BC1  0821               	movf	??___ftadd+1,w
  8254  0BC2  00F4               	movwf	___ftpack@sign
  8255  0BC3  160A  118A  2612   	fcall	___ftpack
  8256  0BC6  0870               	movf	?___ftpack,w
  8257  0BC7  00F8               	movwf	?___ftadd
  8258  0BC8  0871               	movf	?___ftpack+1,w
  8259  0BC9  00F9               	movwf	?___ftadd+1
  8260  0BCA  0872               	movf	?___ftpack+2,w
  8261  0BCB  00FA               	movwf	?___ftadd+2
  8262  0BCC  0008               	return
  8263  0BCD                     __end_of___ftadd:	
  8264                           
  8265                           	psect	text36
  8266  137B                     __ptext36:	
  8267 ;; *************** function _max_val *****************
  8268 ;; Defined at:
  8269 ;;		line 118 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  a               3    0[BANK0 ] float 
  8272 ;;  b               3    3[BANK0 ] float 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  3    0[BANK0 ] float 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0, pclath, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8284 ;;      Params:         0       6       0       0       0
  8285 ;;      Locals:         0       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0
  8287 ;;      Totals:         0       6       0       0       0
  8288 ;;Total ram usage:        6 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    1
  8291 ;; This function calls:
  8292 ;;		___ftge
  8293 ;; This function is called by:
  8294 ;;		_Fuzzy
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           
  8299                           ;psect for function _max_val
  8300  137B                     _max_val:	
  8301                           
  8302                           ;main.c: 120: if (a > b)
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8306  137B  1283               	bcf	3,5	;RP0=0, select bank0
  8307  137C  1303               	bcf	3,6	;RP1=0, select bank0
  8308  137D  0823               	movf	max_val@b,w
  8309  137E  00F0               	movwf	___ftge@ff1
  8310  137F  0824               	movf	max_val@b+1,w
  8311  1380  00F1               	movwf	___ftge@ff1+1
  8312  1381  0825               	movf	max_val@b+2,w
  8313  1382  00F2               	movwf	___ftge@ff1+2
  8314  1383  0820               	movf	max_val@a,w
  8315  1384  00F3               	movwf	___ftge@ff2
  8316  1385  0821               	movf	max_val@a+1,w
  8317  1386  00F4               	movwf	___ftge@ff2+1
  8318  1387  0822               	movf	max_val@a+2,w
  8319  1388  00F5               	movwf	___ftge@ff2+2
  8320  1389  120A  158A  20E0  160A  118A  	fcall	___ftge
  8321  138E  1C03               	btfss	3,0
  8322  138F  0008               	return
  8323                           
  8324                           ;main.c: 122: else
  8325                           ;main.c: 123: return b;
  8326                           
  8327                           ;main.c: 121: return a;
  8328  1390  1283               	bcf	3,5	;RP0=0, select bank0
  8329  1391  1303               	bcf	3,6	;RP1=0, select bank0
  8330  1392  0823               	movf	max_val@b,w
  8331  1393  00A0               	movwf	?_max_val
  8332  1394  0824               	movf	max_val@b+1,w
  8333  1395  00A1               	movwf	?_max_val+1
  8334  1396  0825               	movf	max_val@b+2,w
  8335  1397  00A2               	movwf	?_max_val+2
  8336  1398  0008               	return
  8337  1399                     __end_of_max_val:	
  8338                           
  8339                           	psect	text37
  8340  08E0                     __ptext37:	
  8341 ;; *************** function ___ftge *****************
  8342 ;; Defined at:
  8343 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  ff1             3    0[COMMON] float 
  8346 ;;  ff2             3    3[COMMON] float 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;		None               void
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8358 ;;      Params:         6       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0
  8360 ;;      Temps:          6       0       0       0       0
  8361 ;;      Totals:        12       0       0       0       0
  8362 ;;Total ram usage:       12 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_trimf
  8368 ;;		_trapmf
  8369 ;;		_max_val
  8370 ;;		_Fuzzy
  8371 ;;		_min_val
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function ___ftge
  8377  08E0                     ___ftge:	
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8381  08E0  1FF2               	btfss	___ftge@ff1+2,7
  8382  08E1  2907               	goto	i1l2374
  8383  08E2  3000               	movlw	0
  8384  08E3  00F6               	movwf	??___ftge
  8385  08E4  3000               	movlw	0
  8386  08E5  00F7               	movwf	??___ftge+1
  8387  08E6  3080               	movlw	128
  8388  08E7  00F8               	movwf	??___ftge+2
  8389  08E8  0970               	comf	___ftge@ff1,w
  8390  08E9  00F9               	movwf	??___ftge+3
  8391  08EA  0971               	comf	___ftge@ff1+1,w
  8392  08EB  00FA               	movwf	??___ftge+4
  8393  08EC  0972               	comf	___ftge@ff1+2,w
  8394  08ED  00FB               	movwf	??___ftge+5
  8395  08EE  0AF9               	incf	??___ftge+3,f
  8396  08EF  1903               	skipnz
  8397  08F0  0AFA               	incf	??___ftge+4,f
  8398  08F1  1903               	skipnz
  8399  08F2  0AFB               	incf	??___ftge+5,f
  8400  08F3  0879               	movf	??___ftge+3,w
  8401  08F4  07F6               	addwf	??___ftge,f
  8402  08F5  087A               	movf	??___ftge+4,w
  8403  08F6  1803               	skipnc
  8404  08F7  0F7A               	incfsz	??___ftge+4,w
  8405  08F8  28FA               	goto	u253_21
  8406  08F9  28FB               	goto	u253_22
  8407  08FA                     u253_21:	
  8408  08FA  07F7               	addwf	??___ftge+1,f
  8409  08FB                     u253_22:	
  8410  08FB  087B               	movf	??___ftge+5,w
  8411  08FC  1803               	skipnc
  8412  08FD  0F7B               	incfsz	??___ftge+5,w
  8413  08FE  2900               	goto	u253_23
  8414  08FF  2901               	goto	u253_24
  8415  0900                     u253_23:	
  8416  0900  07F8               	addwf	??___ftge+2,f
  8417  0901                     u253_24:	
  8418  0901  0876               	movf	??___ftge,w
  8419  0902  00F0               	movwf	___ftge@ff1
  8420  0903  0877               	movf	??___ftge+1,w
  8421  0904  00F1               	movwf	___ftge@ff1+1
  8422  0905  0878               	movf	??___ftge+2,w
  8423  0906  00F2               	movwf	___ftge@ff1+2
  8424  0907                     i1l2374:	
  8425  0907  1FF5               	btfss	___ftge@ff2+2,7
  8426  0908  292E               	goto	i1l2378
  8427  0909  3000               	movlw	0
  8428  090A  00F6               	movwf	??___ftge
  8429  090B  3000               	movlw	0
  8430  090C  00F7               	movwf	??___ftge+1
  8431  090D  3080               	movlw	128
  8432  090E  00F8               	movwf	??___ftge+2
  8433  090F  0973               	comf	___ftge@ff2,w
  8434  0910  00F9               	movwf	??___ftge+3
  8435  0911  0974               	comf	___ftge@ff2+1,w
  8436  0912  00FA               	movwf	??___ftge+4
  8437  0913  0975               	comf	___ftge@ff2+2,w
  8438  0914  00FB               	movwf	??___ftge+5
  8439  0915  0AF9               	incf	??___ftge+3,f
  8440  0916  1903               	skipnz
  8441  0917  0AFA               	incf	??___ftge+4,f
  8442  0918  1903               	skipnz
  8443  0919  0AFB               	incf	??___ftge+5,f
  8444  091A  0879               	movf	??___ftge+3,w
  8445  091B  07F6               	addwf	??___ftge,f
  8446  091C  087A               	movf	??___ftge+4,w
  8447  091D  1803               	skipnc
  8448  091E  0F7A               	incfsz	??___ftge+4,w
  8449  091F  2921               	goto	u255_21
  8450  0920  2922               	goto	u255_22
  8451  0921                     u255_21:	
  8452  0921  07F7               	addwf	??___ftge+1,f
  8453  0922                     u255_22:	
  8454  0922  087B               	movf	??___ftge+5,w
  8455  0923  1803               	skipnc
  8456  0924  0F7B               	incfsz	??___ftge+5,w
  8457  0925  2927               	goto	u255_23
  8458  0926  2928               	goto	u255_24
  8459  0927                     u255_23:	
  8460  0927  07F8               	addwf	??___ftge+2,f
  8461  0928                     u255_24:	
  8462  0928  0876               	movf	??___ftge,w
  8463  0929  00F3               	movwf	___ftge@ff2
  8464  092A  0877               	movf	??___ftge+1,w
  8465  092B  00F4               	movwf	___ftge@ff2+1
  8466  092C  0878               	movf	??___ftge+2,w
  8467  092D  00F5               	movwf	___ftge@ff2+2
  8468  092E                     i1l2378:	
  8469  092E  3080               	movlw	128
  8470  092F  06F2               	xorwf	___ftge@ff1+2,f
  8471  0930  3080               	movlw	128
  8472  0931  06F5               	xorwf	___ftge@ff2+2,f
  8473  0932  0875               	movf	___ftge@ff2+2,w
  8474  0933  0272               	subwf	___ftge@ff1+2,w
  8475  0934  1D03               	skipz
  8476  0935  0008               	return
  8477  0936  0874               	movf	___ftge@ff2+1,w
  8478  0937  0271               	subwf	___ftge@ff1+1,w
  8479  0938  1D03               	skipz
  8480  0939  0008               	return
  8481  093A  0873               	movf	___ftge@ff2,w
  8482  093B  0270               	subwf	___ftge@ff1,w
  8483  093C  0008               	return
  8484  093D                     __end_of___ftge:	
  8485                           
  8486                           	psect	text38
  8487  1303                     __ptext38:	
  8488 ;; *************** function ___lwtoft *****************
  8489 ;; Defined at:
  8490 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  c               2    8[COMMON] unsigned int 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  3    8[COMMON] float 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0, pclath, cstack
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8504 ;;      Params:         3       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0
  8506 ;;      Temps:          1       0       0       0       0
  8507 ;;      Totals:         4       0       0       0       0
  8508 ;;Total ram usage:        4 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    1
  8511 ;; This function calls:
  8512 ;;		___ftpack
  8513 ;; This function is called by:
  8514 ;;		_Fuzzy
  8515 ;;		_ISR
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           
  8520                           ;psect for function ___lwtoft
  8521  1303                     ___lwtoft:	
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8525  1303  0878               	movf	___lwtoft@c,w
  8526  1304  00F0               	movwf	___ftpack@arg
  8527  1305  0879               	movf	___lwtoft@c+1,w
  8528  1306  00F1               	movwf	___ftpack@arg+1
  8529  1307  01F2               	clrf	___ftpack@arg+2
  8530  1308  308E               	movlw	142
  8531  1309  00FB               	movwf	??___lwtoft
  8532  130A  087B               	movf	??___lwtoft,w
  8533  130B  00F3               	movwf	___ftpack@exp
  8534  130C  01F4               	clrf	___ftpack@sign
  8535  130D  160A  118A  2612   	fcall	___ftpack
  8536  1310  0870               	movf	?___ftpack,w
  8537  1311  00F8               	movwf	?___lwtoft
  8538  1312  0871               	movf	?___ftpack+1,w
  8539  1313  00F9               	movwf	?___lwtoft+1
  8540  1314  0872               	movf	?___ftpack+2,w
  8541  1315  00FA               	movwf	?___lwtoft+2
  8542  1316  0008               	return
  8543  1317                     __end_of___lwtoft:	
  8544                           
  8545                           	psect	text39
  8546  16E5                     __ptext39:	
  8547 ;; *************** function ___fttol *****************
  8548 ;; Defined at:
  8549 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  f1              3    0[COMMON] float 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  lval            4    9[COMMON] unsigned long 
  8554 ;;  exp1            1   13[COMMON] unsigned char 
  8555 ;;  sign1           1    8[COMMON] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  4    0[COMMON] long 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8565 ;;      Params:         4       0       0       0       0
  8566 ;;      Locals:         6       0       0       0       0
  8567 ;;      Temps:          4       0       0       0       0
  8568 ;;      Totals:        14       0       0       0       0
  8569 ;;Total ram usage:       14 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_Fuzzy
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           
  8579                           ;psect for function ___fttol
  8580  16E5                     ___fttol:	
  8581                           
  8582                           ;incstack = 0
  8583                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8584  16E5  0870               	movf	___fttol@f1,w
  8585  16E6  00F4               	movwf	??___fttol
  8586  16E7  0871               	movf	___fttol@f1+1,w
  8587  16E8  00F5               	movwf	??___fttol+1
  8588  16E9  0872               	movf	___fttol@f1+2,w
  8589  16EA  00F6               	movwf	??___fttol+2
  8590  16EB  1003               	clrc
  8591  16EC  0D75               	rlf	??___fttol+1,w
  8592  16ED  0D76               	rlf	??___fttol+2,w
  8593  16EE  00F7               	movwf	??___fttol+3
  8594  16EF  0877               	movf	??___fttol+3,w
  8595  16F0  00FD               	movwf	___fttol@exp1
  8596  16F1  08FD               	movf	___fttol@exp1,f
  8597  16F2  1D03               	skipz
  8598  16F3  2EFD               	goto	i1l2606
  8599  16F4  3000               	movlw	0
  8600  16F5  00F3               	movwf	?___fttol+3
  8601  16F6  3000               	movlw	0
  8602  16F7  00F2               	movwf	?___fttol+2
  8603  16F8  3000               	movlw	0
  8604  16F9  00F1               	movwf	?___fttol+1
  8605  16FA  3000               	movlw	0
  8606  16FB  00F0               	movwf	?___fttol
  8607  16FC  0008               	return
  8608  16FD                     i1l2606:	
  8609  16FD  0870               	movf	___fttol@f1,w
  8610  16FE  00F4               	movwf	??___fttol
  8611  16FF  0871               	movf	___fttol@f1+1,w
  8612  1700  00F5               	movwf	??___fttol+1
  8613  1701  0872               	movf	___fttol@f1+2,w
  8614  1702  00F6               	movwf	??___fttol+2
  8615  1703  3017               	movlw	23
  8616  1704                     u306_25:	
  8617  1704  1003               	clrc
  8618  1705  0CF6               	rrf	??___fttol+2,f
  8619  1706  0CF5               	rrf	??___fttol+1,f
  8620  1707  0CF4               	rrf	??___fttol,f
  8621  1708  3EFF               	addlw	-1
  8622  1709  1D03               	skipz
  8623  170A  2F04               	goto	u306_25
  8624  170B  0874               	movf	??___fttol,w
  8625  170C  00F7               	movwf	??___fttol+3
  8626  170D  0877               	movf	??___fttol+3,w
  8627  170E  00F8               	movwf	___fttol@sign1
  8628  170F  17F1               	bsf	___fttol@f1+1,7
  8629  1710  30FF               	movlw	255
  8630  1711  05F0               	andwf	___fttol@f1,f
  8631  1712  30FF               	movlw	255
  8632  1713  05F1               	andwf	___fttol@f1+1,f
  8633  1714  3000               	movlw	0
  8634  1715  05F2               	andwf	___fttol@f1+2,f
  8635  1716  0870               	movf	___fttol@f1,w
  8636  1717  00F9               	movwf	___fttol@lval
  8637  1718  0871               	movf	___fttol@f1+1,w
  8638  1719  00FA               	movwf	___fttol@lval+1
  8639  171A  0872               	movf	___fttol@f1+2,w
  8640  171B  00FB               	movwf	___fttol@lval+2
  8641  171C  01FC               	clrf	___fttol@lval+3
  8642  171D  308E               	movlw	142
  8643  171E  02FD               	subwf	___fttol@exp1,f
  8644  171F  1FFD               	btfss	___fttol@exp1,7
  8645  1720  2F3F               	goto	i1l2626
  8646  1721  087D               	movf	___fttol@exp1,w
  8647  1722  3A80               	xorlw	128
  8648  1723  3E8F               	addlw	143
  8649  1724  1803               	skipnc
  8650  1725  2F2F               	goto	i1l2624
  8651  1726  3000               	movlw	0
  8652  1727  00F3               	movwf	?___fttol+3
  8653  1728  3000               	movlw	0
  8654  1729  00F2               	movwf	?___fttol+2
  8655  172A  3000               	movlw	0
  8656  172B  00F1               	movwf	?___fttol+1
  8657  172C  3000               	movlw	0
  8658  172D  00F0               	movwf	?___fttol
  8659  172E  0008               	return
  8660  172F                     i1l2624:	
  8661  172F  3001               	movlw	1
  8662  1730                     u309_25:	
  8663  1730  1003               	clrc
  8664  1731  0CFC               	rrf	___fttol@lval+3,f
  8665  1732  0CFB               	rrf	___fttol@lval+2,f
  8666  1733  0CFA               	rrf	___fttol@lval+1,f
  8667  1734  0CF9               	rrf	___fttol@lval,f
  8668  1735  3EFF               	addlw	-1
  8669  1736  1D03               	skipz
  8670  1737  2F30               	goto	u309_25
  8671  1738  3001               	movlw	1
  8672  1739  00F4               	movwf	??___fttol
  8673  173A  0874               	movf	??___fttol,w
  8674  173B  07FD               	addwf	___fttol@exp1,f
  8675  173C  1903               	btfsc	3,2
  8676  173D  2F5A               	goto	i1l2636
  8677  173E  2F2F               	goto	i1l2624
  8678  173F                     i1l2626:	
  8679  173F  3018               	movlw	24
  8680  1740  027D               	subwf	___fttol@exp1,w
  8681  1741  1C03               	skipc
  8682  1742  2F57               	goto	i1l2634
  8683  1743  3000               	movlw	0
  8684  1744  00F3               	movwf	?___fttol+3
  8685  1745  3000               	movlw	0
  8686  1746  00F2               	movwf	?___fttol+2
  8687  1747  3000               	movlw	0
  8688  1748  00F1               	movwf	?___fttol+1
  8689  1749  3000               	movlw	0
  8690  174A  00F0               	movwf	?___fttol
  8691  174B  0008               	return
  8692  174C                     i1l2632:	
  8693  174C  3001               	movlw	1
  8694  174D  00F4               	movwf	??___fttol
  8695  174E                     u312_25:	
  8696  174E  1003               	clrc
  8697  174F  0DF9               	rlf	___fttol@lval,f
  8698  1750  0DFA               	rlf	___fttol@lval+1,f
  8699  1751  0DFB               	rlf	___fttol@lval+2,f
  8700  1752  0DFC               	rlf	___fttol@lval+3,f
  8701  1753  0BF4               	decfsz	??___fttol,f
  8702  1754  2F4E               	goto	u312_25
  8703  1755  3001               	movlw	1
  8704  1756  02FD               	subwf	___fttol@exp1,f
  8705  1757                     i1l2634:	
  8706  1757  08FD               	movf	___fttol@exp1,f
  8707  1758  1D03               	skipz
  8708  1759  2F4C               	goto	i1l2632
  8709  175A                     i1l2636:	
  8710  175A  0878               	movf	___fttol@sign1,w
  8711  175B  1903               	btfsc	3,2
  8712  175C  2F68               	goto	i1l2640
  8713  175D  09F9               	comf	___fttol@lval,f
  8714  175E  09FA               	comf	___fttol@lval+1,f
  8715  175F  09FB               	comf	___fttol@lval+2,f
  8716  1760  09FC               	comf	___fttol@lval+3,f
  8717  1761  0AF9               	incf	___fttol@lval,f
  8718  1762  1903               	skipnz
  8719  1763  0AFA               	incf	___fttol@lval+1,f
  8720  1764  1903               	skipnz
  8721  1765  0AFB               	incf	___fttol@lval+2,f
  8722  1766  1903               	skipnz
  8723  1767  0AFC               	incf	___fttol@lval+3,f
  8724  1768                     i1l2640:	
  8725  1768  087C               	movf	___fttol@lval+3,w
  8726  1769  00F3               	movwf	?___fttol+3
  8727  176A  087B               	movf	___fttol@lval+2,w
  8728  176B  00F2               	movwf	?___fttol+2
  8729  176C  087A               	movf	___fttol@lval+1,w
  8730  176D  00F1               	movwf	?___fttol+1
  8731  176E  0879               	movf	___fttol@lval,w
  8732  176F  00F0               	movwf	?___fttol
  8733  1770  0008               	return
  8734  1771                     __end_of___fttol:	
  8735                           
  8736                           	psect	text40
  8737  09F5                     __ptext40:	
  8738 ;; *************** function ___ftmul *****************
  8739 ;; Defined at:
  8740 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  f1              3    8[COMMON] float 
  8743 ;;  f2              3   11[COMMON] float 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  8746 ;;  sign            1    9[BANK0 ] unsigned char 
  8747 ;;  cntr            1    8[BANK0 ] unsigned char 
  8748 ;;  exp             1    4[BANK0 ] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  3    8[COMMON] float 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, pclath, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8758 ;;      Params:         6       0       0       0       0
  8759 ;;      Locals:         0       6       0       0       0
  8760 ;;      Temps:          0       4       0       0       0
  8761 ;;      Totals:         6      10       0       0       0
  8762 ;;Total ram usage:       16 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:    1
  8765 ;; This function calls:
  8766 ;;		___ftpack
  8767 ;; This function is called by:
  8768 ;;		_Fuzzy
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function ___ftmul
  8774  09F5                     ___ftmul:	
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8778  09F5  0878               	movf	___ftmul@f1,w
  8779  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  8780  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  8781  09F8  00A0               	movwf	??___ftmul
  8782  09F9  0879               	movf	___ftmul@f1+1,w
  8783  09FA  00A1               	movwf	??___ftmul+1
  8784  09FB  087A               	movf	___ftmul@f1+2,w
  8785  09FC  00A2               	movwf	??___ftmul+2
  8786  09FD  1003               	clrc
  8787  09FE  0D21               	rlf	??___ftmul+1,w
  8788  09FF  0D22               	rlf	??___ftmul+2,w
  8789  0A00  00A3               	movwf	??___ftmul+3
  8790  0A01  0823               	movf	??___ftmul+3,w
  8791  0A02  00A4               	movwf	___ftmul@exp
  8792  0A03  08A4               	movf	___ftmul@exp,f
  8793  0A04  1D03               	skipz
  8794  0A05  2A0D               	goto	i1l2556
  8795  0A06  3000               	movlw	0
  8796  0A07  00F8               	movwf	?___ftmul
  8797  0A08  3000               	movlw	0
  8798  0A09  00F9               	movwf	?___ftmul+1
  8799  0A0A  3000               	movlw	0
  8800  0A0B  00FA               	movwf	?___ftmul+2
  8801  0A0C  0008               	return
  8802  0A0D                     i1l2556:	
  8803  0A0D  087B               	movf	___ftmul@f2,w
  8804  0A0E  00A0               	movwf	??___ftmul
  8805  0A0F  087C               	movf	___ftmul@f2+1,w
  8806  0A10  00A1               	movwf	??___ftmul+1
  8807  0A11  087D               	movf	___ftmul@f2+2,w
  8808  0A12  00A2               	movwf	??___ftmul+2
  8809  0A13  1003               	clrc
  8810  0A14  0D21               	rlf	??___ftmul+1,w
  8811  0A15  0D22               	rlf	??___ftmul+2,w
  8812  0A16  00A3               	movwf	??___ftmul+3
  8813  0A17  0823               	movf	??___ftmul+3,w
  8814  0A18  00A9               	movwf	___ftmul@sign
  8815  0A19  08A9               	movf	___ftmul@sign,f
  8816  0A1A  1D03               	skipz
  8817  0A1B  2A23               	goto	i1l2562
  8818  0A1C  3000               	movlw	0
  8819  0A1D  00F8               	movwf	?___ftmul
  8820  0A1E  3000               	movlw	0
  8821  0A1F  00F9               	movwf	?___ftmul+1
  8822  0A20  3000               	movlw	0
  8823  0A21  00FA               	movwf	?___ftmul+2
  8824  0A22  0008               	return
  8825  0A23                     i1l2562:	
  8826  0A23  0829               	movf	___ftmul@sign,w
  8827  0A24  3E7B               	addlw	123
  8828  0A25  00A0               	movwf	??___ftmul
  8829  0A26  0820               	movf	??___ftmul,w
  8830  0A27  07A4               	addwf	___ftmul@exp,f
  8831  0A28  0878               	movf	___ftmul@f1,w
  8832  0A29  00A0               	movwf	??___ftmul
  8833  0A2A  0879               	movf	___ftmul@f1+1,w
  8834  0A2B  00A1               	movwf	??___ftmul+1
  8835  0A2C  087A               	movf	___ftmul@f1+2,w
  8836  0A2D  00A2               	movwf	??___ftmul+2
  8837  0A2E  3010               	movlw	16
  8838  0A2F                     u293_25:	
  8839  0A2F  1003               	clrc
  8840  0A30  0CA2               	rrf	??___ftmul+2,f
  8841  0A31  0CA1               	rrf	??___ftmul+1,f
  8842  0A32  0CA0               	rrf	??___ftmul,f
  8843  0A33  3EFF               	addlw	-1
  8844  0A34  1D03               	skipz
  8845  0A35  2A2F               	goto	u293_25
  8846  0A36  0820               	movf	??___ftmul,w
  8847  0A37  00A3               	movwf	??___ftmul+3
  8848  0A38  0823               	movf	??___ftmul+3,w
  8849  0A39  00A9               	movwf	___ftmul@sign
  8850  0A3A  087B               	movf	___ftmul@f2,w
  8851  0A3B  00A0               	movwf	??___ftmul
  8852  0A3C  087C               	movf	___ftmul@f2+1,w
  8853  0A3D  00A1               	movwf	??___ftmul+1
  8854  0A3E  087D               	movf	___ftmul@f2+2,w
  8855  0A3F  00A2               	movwf	??___ftmul+2
  8856  0A40  3010               	movlw	16
  8857  0A41                     u294_25:	
  8858  0A41  1003               	clrc
  8859  0A42  0CA2               	rrf	??___ftmul+2,f
  8860  0A43  0CA1               	rrf	??___ftmul+1,f
  8861  0A44  0CA0               	rrf	??___ftmul,f
  8862  0A45  3EFF               	addlw	-1
  8863  0A46  1D03               	skipz
  8864  0A47  2A41               	goto	u294_25
  8865  0A48  0820               	movf	??___ftmul,w
  8866  0A49  00A3               	movwf	??___ftmul+3
  8867  0A4A  0823               	movf	??___ftmul+3,w
  8868  0A4B  06A9               	xorwf	___ftmul@sign,f
  8869  0A4C  3080               	movlw	128
  8870  0A4D  00A0               	movwf	??___ftmul
  8871  0A4E  0820               	movf	??___ftmul,w
  8872  0A4F  05A9               	andwf	___ftmul@sign,f
  8873  0A50  17F9               	bsf	___ftmul@f1+1,7
  8874  0A51  17FC               	bsf	___ftmul@f2+1,7
  8875  0A52  30FF               	movlw	255
  8876  0A53  05FB               	andwf	___ftmul@f2,f
  8877  0A54  30FF               	movlw	255
  8878  0A55  05FC               	andwf	___ftmul@f2+1,f
  8879  0A56  3000               	movlw	0
  8880  0A57  05FD               	andwf	___ftmul@f2+2,f
  8881  0A58  3000               	movlw	0
  8882  0A59  00A5               	movwf	___ftmul@f3_as_product
  8883  0A5A  3000               	movlw	0
  8884  0A5B  00A6               	movwf	___ftmul@f3_as_product+1
  8885  0A5C  3000               	movlw	0
  8886  0A5D  00A7               	movwf	___ftmul@f3_as_product+2
  8887  0A5E  3007               	movlw	7
  8888  0A5F  00A0               	movwf	??___ftmul
  8889  0A60  0820               	movf	??___ftmul,w
  8890  0A61  00A8               	movwf	___ftmul@cntr
  8891  0A62                     i1l2574:	
  8892  0A62  1C78               	btfss	___ftmul@f1,0
  8893  0A63  2A72               	goto	i1l2578
  8894  0A64  087B               	movf	___ftmul@f2,w
  8895  0A65  07A5               	addwf	___ftmul@f3_as_product,f
  8896  0A66  087C               	movf	___ftmul@f2+1,w
  8897  0A67  1103               	clrz
  8898  0A68  1803               	skipnc
  8899  0A69  0A7C               	incf	___ftmul@f2+1,w
  8900  0A6A  1D03               	btfss	3,2
  8901  0A6B  07A6               	addwf	___ftmul@f3_as_product+1,f
  8902  0A6C  087D               	movf	___ftmul@f2+2,w
  8903  0A6D  1103               	clrz
  8904  0A6E  1803               	skipnc
  8905  0A6F  0A7D               	incf	___ftmul@f2+2,w
  8906  0A70  1D03               	btfss	3,2
  8907  0A71  07A7               	addwf	___ftmul@f3_as_product+2,f
  8908  0A72                     i1l2578:	
  8909  0A72  3001               	movlw	1
  8910  0A73                     u297_25:	
  8911  0A73  1003               	clrc
  8912  0A74  0CFA               	rrf	___ftmul@f1+2,f
  8913  0A75  0CF9               	rrf	___ftmul@f1+1,f
  8914  0A76  0CF8               	rrf	___ftmul@f1,f
  8915  0A77  3EFF               	addlw	-1
  8916  0A78  1D03               	skipz
  8917  0A79  2A73               	goto	u297_25
  8918  0A7A  3001               	movlw	1
  8919  0A7B                     u298_25:	
  8920  0A7B  1003               	clrc
  8921  0A7C  0DFB               	rlf	___ftmul@f2,f
  8922  0A7D  0DFC               	rlf	___ftmul@f2+1,f
  8923  0A7E  0DFD               	rlf	___ftmul@f2+2,f
  8924  0A7F  3EFF               	addlw	-1
  8925  0A80  1D03               	skipz
  8926  0A81  2A7B               	goto	u298_25
  8927  0A82  3001               	movlw	1
  8928  0A83  02A8               	subwf	___ftmul@cntr,f
  8929  0A84  1D03               	btfss	3,2
  8930  0A85  2A62               	goto	i1l2574
  8931  0A86  3009               	movlw	9
  8932  0A87  00A0               	movwf	??___ftmul
  8933  0A88  0820               	movf	??___ftmul,w
  8934  0A89  00A8               	movwf	___ftmul@cntr
  8935  0A8A                     i1l2586:	
  8936  0A8A  1C78               	btfss	___ftmul@f1,0
  8937  0A8B  2A9A               	goto	i1l2590
  8938  0A8C  087B               	movf	___ftmul@f2,w
  8939  0A8D  07A5               	addwf	___ftmul@f3_as_product,f
  8940  0A8E  087C               	movf	___ftmul@f2+1,w
  8941  0A8F  1103               	clrz
  8942  0A90  1803               	skipnc
  8943  0A91  0A7C               	incf	___ftmul@f2+1,w
  8944  0A92  1D03               	btfss	3,2
  8945  0A93  07A6               	addwf	___ftmul@f3_as_product+1,f
  8946  0A94  087D               	movf	___ftmul@f2+2,w
  8947  0A95  1103               	clrz
  8948  0A96  1803               	skipnc
  8949  0A97  0A7D               	incf	___ftmul@f2+2,w
  8950  0A98  1D03               	btfss	3,2
  8951  0A99  07A7               	addwf	___ftmul@f3_as_product+2,f
  8952  0A9A                     i1l2590:	
  8953  0A9A  3001               	movlw	1
  8954  0A9B                     u302_25:	
  8955  0A9B  1003               	clrc
  8956  0A9C  0CFA               	rrf	___ftmul@f1+2,f
  8957  0A9D  0CF9               	rrf	___ftmul@f1+1,f
  8958  0A9E  0CF8               	rrf	___ftmul@f1,f
  8959  0A9F  3EFF               	addlw	-1
  8960  0AA0  1D03               	skipz
  8961  0AA1  2A9B               	goto	u302_25
  8962  0AA2  3001               	movlw	1
  8963  0AA3                     u303_25:	
  8964  0AA3  1003               	clrc
  8965  0AA4  0CA7               	rrf	___ftmul@f3_as_product+2,f
  8966  0AA5  0CA6               	rrf	___ftmul@f3_as_product+1,f
  8967  0AA6  0CA5               	rrf	___ftmul@f3_as_product,f
  8968  0AA7  3EFF               	addlw	-1
  8969  0AA8  1D03               	skipz
  8970  0AA9  2AA3               	goto	u303_25
  8971  0AAA  3001               	movlw	1
  8972  0AAB  02A8               	subwf	___ftmul@cntr,f
  8973  0AAC  1D03               	btfss	3,2
  8974  0AAD  2A8A               	goto	i1l2586
  8975  0AAE  0825               	movf	___ftmul@f3_as_product,w
  8976  0AAF  00F0               	movwf	___ftpack@arg
  8977  0AB0  0826               	movf	___ftmul@f3_as_product+1,w
  8978  0AB1  00F1               	movwf	___ftpack@arg+1
  8979  0AB2  0827               	movf	___ftmul@f3_as_product+2,w
  8980  0AB3  00F2               	movwf	___ftpack@arg+2
  8981  0AB4  0824               	movf	___ftmul@exp,w
  8982  0AB5  00A0               	movwf	??___ftmul
  8983  0AB6  0820               	movf	??___ftmul,w
  8984  0AB7  00F3               	movwf	___ftpack@exp
  8985  0AB8  0829               	movf	___ftmul@sign,w
  8986  0AB9  00A1               	movwf	??___ftmul+1
  8987  0ABA  0821               	movf	??___ftmul+1,w
  8988  0ABB  00F4               	movwf	___ftpack@sign
  8989  0ABC  160A  118A  2612   	fcall	___ftpack
  8990  0ABF  0870               	movf	?___ftpack,w
  8991  0AC0  00F8               	movwf	?___ftmul
  8992  0AC1  0871               	movf	?___ftpack+1,w
  8993  0AC2  00F9               	movwf	?___ftmul+1
  8994  0AC3  0872               	movf	?___ftpack+2,w
  8995  0AC4  00FA               	movwf	?___ftmul+2
  8996  0AC5  0008               	return
  8997  0AC6                     __end_of___ftmul:	
  8998                           
  8999                           	psect	text41
  9000  1612                     __ptext41:	
  9001 ;; *************** function ___ftpack *****************
  9002 ;; Defined at:
  9003 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  arg             3    0[COMMON] unsigned um
  9006 ;;  exp             1    3[COMMON] unsigned char 
  9007 ;;  sign            1    4[COMMON] unsigned char 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  3    0[COMMON] float 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9019 ;;      Params:         5       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0
  9021 ;;      Temps:          3       0       0       0       0
  9022 ;;      Totals:         8       0       0       0       0
  9023 ;;Total ram usage:        8 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		___ftadd
  9029 ;;		___ftdiv
  9030 ;;		___ftmul
  9031 ;;		___lwtoft
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           
  9036                           ;psect for function ___ftpack
  9037  1612                     ___ftpack:	
  9038                           
  9039                           ;incstack = 0
  9040                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9041  1612  0873               	movf	___ftpack@exp,w
  9042  1613  1903               	btfsc	3,2
  9043  1614  2E1A               	goto	i1l2230
  9044  1615  0872               	movf	___ftpack@arg+2,w
  9045  1616  0471               	iorwf	___ftpack@arg+1,w
  9046  1617  0470               	iorwf	___ftpack@arg,w
  9047  1618  1D03               	skipz
  9048  1619  2E2D               	goto	i1l2236
  9049  161A                     i1l2230:	
  9050  161A  3000               	movlw	0
  9051  161B  00F0               	movwf	?___ftpack
  9052  161C  3000               	movlw	0
  9053  161D  00F1               	movwf	?___ftpack+1
  9054  161E  3000               	movlw	0
  9055  161F  00F2               	movwf	?___ftpack+2
  9056  1620  0008               	return
  9057  1621                     i1l2234:	
  9058  1621  3001               	movlw	1
  9059  1622  00F5               	movwf	??___ftpack
  9060  1623  0875               	movf	??___ftpack,w
  9061  1624  07F3               	addwf	___ftpack@exp,f
  9062  1625  3001               	movlw	1
  9063  1626                     u211_25:	
  9064  1626  1003               	clrc
  9065  1627  0CF2               	rrf	___ftpack@arg+2,f
  9066  1628  0CF1               	rrf	___ftpack@arg+1,f
  9067  1629  0CF0               	rrf	___ftpack@arg,f
  9068  162A  3EFF               	addlw	-1
  9069  162B  1D03               	skipz
  9070  162C  2E26               	goto	u211_25
  9071  162D                     i1l2236:	
  9072  162D  30FE               	movlw	254
  9073  162E  0572               	andwf	___ftpack@arg+2,w
  9074  162F  1903               	btfsc	3,2
  9075  1630  2E48               	goto	i1l755
  9076  1631  2E21               	goto	i1l2234
  9077  1632                     i1l2238:	
  9078  1632  3001               	movlw	1
  9079  1633  00F5               	movwf	??___ftpack
  9080  1634  0875               	movf	??___ftpack,w
  9081  1635  07F3               	addwf	___ftpack@exp,f
  9082  1636  3001               	movlw	1
  9083  1637  07F0               	addwf	___ftpack@arg,f
  9084  1638  3000               	movlw	0
  9085  1639  1803               	skipnc
  9086  163A  3001               	movlw	1
  9087  163B  07F1               	addwf	___ftpack@arg+1,f
  9088  163C  3000               	movlw	0
  9089  163D  1803               	skipnc
  9090  163E  3001               	movlw	1
  9091  163F  07F2               	addwf	___ftpack@arg+2,f
  9092  1640  3001               	movlw	1
  9093  1641                     u213_25:	
  9094  1641  1003               	clrc
  9095  1642  0CF2               	rrf	___ftpack@arg+2,f
  9096  1643  0CF1               	rrf	___ftpack@arg+1,f
  9097  1644  0CF0               	rrf	___ftpack@arg,f
  9098  1645  3EFF               	addlw	-1
  9099  1646  1D03               	skipz
  9100  1647  2E41               	goto	u213_25
  9101  1648                     i1l755:	
  9102  1648  30FF               	movlw	255
  9103  1649  0572               	andwf	___ftpack@arg+2,w
  9104  164A  1903               	btfsc	3,2
  9105  164B  2E57               	goto	i1l2246
  9106  164C  2E32               	goto	i1l2238
  9107  164D                     i1l2244:	
  9108  164D  3001               	movlw	1
  9109  164E  02F3               	subwf	___ftpack@exp,f
  9110  164F  3001               	movlw	1
  9111  1650                     u215_25:	
  9112  1650  1003               	clrc
  9113  1651  0DF0               	rlf	___ftpack@arg,f
  9114  1652  0DF1               	rlf	___ftpack@arg+1,f
  9115  1653  0DF2               	rlf	___ftpack@arg+2,f
  9116  1654  3EFF               	addlw	-1
  9117  1655  1D03               	skipz
  9118  1656  2E50               	goto	u215_25
  9119  1657                     i1l2246:	
  9120  1657  1FF1               	btfss	___ftpack@arg+1,7
  9121  1658  2E4D               	goto	i1l2244
  9122  1659  1873               	btfsc	___ftpack@exp,0
  9123  165A  2E61               	goto	i1l761
  9124  165B  30FF               	movlw	255
  9125  165C  05F0               	andwf	___ftpack@arg,f
  9126  165D  307F               	movlw	127
  9127  165E  05F1               	andwf	___ftpack@arg+1,f
  9128  165F  30FF               	movlw	255
  9129  1660  05F2               	andwf	___ftpack@arg+2,f
  9130  1661                     i1l761:	
  9131  1661  1003               	clrc
  9132  1662  0CF3               	rrf	___ftpack@exp,f
  9133  1663  0873               	movf	___ftpack@exp,w
  9134  1664  00F5               	movwf	??___ftpack
  9135  1665  01F6               	clrf	??___ftpack+1
  9136  1666  01F7               	clrf	??___ftpack+2
  9137  1667  3010               	movlw	16
  9138  1668                     u218_25:	
  9139  1668  1003               	clrc
  9140  1669  0DF5               	rlf	??___ftpack,f
  9141  166A  0DF6               	rlf	??___ftpack+1,f
  9142  166B  0DF7               	rlf	??___ftpack+2,f
  9143  166C  3EFF               	addlw	-1
  9144  166D  1D03               	skipz
  9145  166E  2E68               	goto	u218_25
  9146  166F  0875               	movf	??___ftpack,w
  9147  1670  04F0               	iorwf	___ftpack@arg,f
  9148  1671  0876               	movf	??___ftpack+1,w
  9149  1672  04F1               	iorwf	___ftpack@arg+1,f
  9150  1673  0877               	movf	??___ftpack+2,w
  9151  1674  04F2               	iorwf	___ftpack@arg+2,f
  9152  1675  0874               	movf	___ftpack@sign,w
  9153  1676  1903               	btfsc	3,2
  9154  1677  0008               	return
  9155  1678  17F2               	bsf	___ftpack@arg+2,7
  9156  1679  0008               	return
  9157  167A                     __end_of___ftpack:	
  9158  007E                     btemp	set	126	;btemp
  9159  007E                     wtemp	set	126
  9160  007E                     wtemp0	set	126
  9161  0080                     wtemp1	set	128
  9162  0082                     wtemp2	set	130
  9163  0084                     wtemp3	set	132
  9164  0086                     wtemp4	set	134
  9165  0088                     wtemp5	set	136
  9166  007F                     wtemp6	set	127
  9167  007E                     ttemp	set	126
  9168  007E                     ttemp0	set	126
  9169  0081                     ttemp1	set	129
  9170  0084                     ttemp2	set	132
  9171  0087                     ttemp3	set	135
  9172  007F                     ttemp4	set	127
  9173  007E                     ltemp	set	126
  9174  007E                     ltemp0	set	126
  9175  0082                     ltemp1	set	130
  9176  0086                     ltemp2	set	134
  9177  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        7
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      79
    BANK1            80     34      78
    BANK3            96      0      23
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1252$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftadd
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    _trimf->___ftadd
    _trapmf->___ftadd
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2129
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   54522
                                             59 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               18    18      0   51092
                                             41 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13838
                                             23 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14695
                                             23 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5422
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C2      12        0.0%
ABS                  0      0      C2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 16:28:35 2022

           ?i1_PWM_DutyCycle2 0070                             _x 0065                             _y 0068  
                           pc 0002                   ?_LCD_Cursor 00C5       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00AF                            fsr 0004           ___wmul@multiplicand 00C7  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0026  
                ___ftadd@exp2 0025                 _contagens_tm0 00B9                  ___ftadd@sign 0024  
                         l223 12C6                           l198 0DC2                           l475 0551  
                         l493 0616                           l649 1783                           l594 1471  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E6E  
                         _rpm 00BD                           fsr0 0004                           _pwm 006D  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00C9                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0031                  ___ftdiv@sign 0036  
                        l3010 05C8                          l3020 05E1            LCD_WriteString@Str 00C7  
                        l3040 0635                          l3032 0608                          l3024 05E7  
                        l3008 05B1                          l3050 064A                          l3042 0639  
                        l2500 1469                          l3060 0664                          l2520 1794  
                        l3080 068C                          l3072 0688                          l2530 17B4  
                        l3066 0679                          l3058 0660                          l3082 052B  
                        l3084 06D4                          l2542 17E9                          l2528 17A4  
                        l2546 17F7                          l2538 17DC                          l2662 15B7  
                        l2654 1593                          l2494 12DE                          l2656 15A1  
                        l2680 152B                          l2666 15C2                          l2852 14E4  
                        l2684 1539                          l2678 151D                          l2688 1544  
                        l2972 14B3                          l2958 13A7                          l2992 0556  
                        l2994 0561                          l2986 054D                          l2998 0573  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3205 15B8                          u4107 16AE                          u3235 1520  
                        u4117 16BA                          u3165 1596                          u4127 16C8  
                        u3255 1531                          u4047 0DBB                          u4137 16D6  
                        u3505 13EF                          u3185 15A2                          u3265 153A  
                        u4057 0E67                          u4147 16E2                          u4067 133F  
                        u3195 15AE                          u4157 13B3                          u4077 1684  
                        u4167 1496                          u4087 1694                          u3535 15D4  
                        u4177 14A4                          u4097 16A2                          u3625 05FE  
                        u4187 14B0                          u4197 1328                          u3565 13CE  
                        u2845 17A8                          u2865 17B6                          u2785 1472  
                        u3665 0625                          u2875 17CB                          u2795 1479  
                        u2885 17DD                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0D1D                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 0062  
                        btemp 007E              __end_of_ADC_Init 1303                          ltemp 007E  
                        start 0012                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 132E                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 12D0                         ??_ISR 005B  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 16E5               __end_of___aldiv 1800                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 0BCD                         STR_10 0884  
                       STR_11 0842                         STR_12 085F                         STR_13 0873  
                       STR_14 08D6                         STR_15 08D6                         STR_16 08C5  
                       STR_17 08D0                 __CFG_WDTE$OFF 0000                         STR_18 08C8  
                       STR_19 081A               __end_of___ftdiv 09F5               __end_of___ftneg 12A0  
             __end_of___ftmul 0AC6                         _T1CON 0010               __end_of___fttol 1771  
             __end_of___lwdiv 15C9                         i1l120 07F0                         i1l130 0D14  
                       i1l223 12A1                         i1l183 0EFE               __end_of___lwmod 154B  
                       i1l178 0FF3                         i1l761 1661                         i1l594 1428  
                       i1l755 1648                         i1l784 0B6E                         _RCREG 001A  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                 __CFG_PWRTE$ON 0000  
                       _Fuzzy 003F                         _derro 0190               __end_of_dpowers 081A  
             __end_of_max_val 1399               __end_of_isdigit 12E0                 ___ftpack@sign 0074  
                       _trimf 06DB                __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020  
                       pclath 000A              __end_of_PWM_Init 1465              __end_ofi1___wmul 1441  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003           i1___wmul@multiplier 0078                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
             __end_of_sprintf 06DB            __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00C5  
              ?_LCD_WriteData 0070                   ?_USART_Init 00D4         i1TIMER0_Set@contagens 0070  
             __initialization 0015                  __end_of_main 0E6E                        ??_main 00E4  
               ___fttol@sign1 0078                  ?_TIMER0_Init 0070             __end_of_LCD_Clear 14B3  
                  Fuzzy@a_233 004E                    Fuzzy@a_234 0050                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0055                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 167A                        ?_trimf 0037  
                      i1l2230 161A                        i1l2310 0B80                        i1l3102 1420  
                      i1l2304 0B5E                        i1l2234 1621                        i1l2314 0B92  
                      i1l2306 0B6A                        i1l3130 1577                        i1l3122 1553  
                      i1l3210 0F5C                        i1l2244 164D                        i1l2236 162D  
                      i1l2324 0BB5                        i1l2340 096B                        i1l2420 07D3  
                      i1l3124 1561                        i1l3204 0F45                        i1l2246 1657  
                      i1l2238 1632                        i1l2334 0955                        i1l2414 0752  
                      i1l3134 1582                        i1l3222 0F92                        i1l2264 0AEF  
                      i1l3216 0F73                        i1l2274 0B05                        i1l2362 09CF  
                      i1l2354 09B0                        i1l2450 0CF7                        i1l3234 0FAF  
                      i1l3162 0EA8                        i1l2292 0B34                        i1l2268 0AF6  
                      i1l2444 0C76                        i1l3156 0E91                        i1l2606 16FD  
                      i1l2374 0907                        i1l2294 0B40                        i1l2286 0B1F  
                      i1l2438 0C44                        i1l2702 13FB                        i1l3246 0FEE  
                      i1l3174 0ED6                        i1l2640 1768                        i1l2632 174C  
                      i1l2624 172F                        i1l2296 0B45                        i1l2720 00DB  
                      i1l3248 0FEF                        i1l3192 0F17                        i1l3168 0EBF  
                      i1l2562 0A23                        i1l2634 1757                        i1l2626 173F  
                      i1l2378 092E                        i1l2298 0B49                        i1l2802 0456  
                      i1l3186 0F00                        i1l2556 0A0D                        i1l2636 175A  
                      i1l2724 00F8                        i1l2590 0A9A                        i1l2574 0A62  
                      i1l2742 01C7                        i1l3198 0F2E                        i1l2808 0488  
                      i1l2840 1378                        i1l2832 1369                        i1l2586 0A8A  
                      i1l2578 0A72                        i1l2738 0178                        i1l2764 029B  
                      i1l2748 020C                        u211_25 1626                        i1l2774 0327  
                      i1l2792 03F4                        i1l2768 02E2                        i1l2788 03A7  
                      i1l2798 0439                        u213_25 1641                        u302_25 0A9B  
                      u215_25 1650                        u303_25 0AA3                        u312_25 174E  
                      u232_25 0B35                        u218_25 1668                        u306_25 1704  
                      u250_25 09D0                        u235_25 0B4A                        u340_25 0325  
                      u253_21 08FA                        u253_22 08FB                        u253_23 0900  
                      u253_24 0901                        u309_25 1730                        u229_25 0B20  
                      u333_25 0176                        u238_25 0B5F                        u246_25 097D  
                      u342_25 03A5                        u255_21 0921                        u255_22 0922  
                      u255_23 0927                        u255_24 0928                        u247_25 098F  
                      u335_25 020A                        u248_25 09B1                        u344_25 0437  
                      u249_25 09C2                        u329_25 1356              __end_of___lwtoft 1317  
                      u338_25 0299                        u293_25 0A2F                        u381_25 1556  
         __size_of_TIMER0_Set 0008                        u294_25 0A41                        u383_25 1562  
                      u384_25 156E                        u297_25 0A73                        u385_25 1578  
                      u377_25 1429                        u298_25 0A7B                        u378_25 1430  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 004C  
            LCD_WriteCmd@Byte 00C6           i1_USART_WriteString 13FB                        ___ftge 08E0  
                   ??___aldiv 00CD                        ___wmul 1465                     ??___ftadd 0020  
              _PWM_DutyCycle1 13B9                _PWM_DutyCycle2 13DA              ?_USART_WriteChar 0070  
                   ??___ftdiv 002D                     ??___ftneg 0073                        _deltaV 006B  
                   ??___ftmul 0020                     ??___fttol 0074                     ??___lwdiv 00C9  
                   ??___lwmod 00D1                        _fitemp 005F         USART_ReceiveChar@byte 0074  
                      _trapmf 0BCD                        _pulsos 00BB                        _status 00BF  
       ___ftmul@f3_as_product 0025                     ??_max_val 007C             __end_ofi1___lwdiv 1589  
                   ??_isdigit 00C5                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 003A  
                      trimf@b 003D                        trimf@c 0040                        trimf@x 0037  
                   ??_sprintf 00D6                 ?i1_TIMER0_Set 0070       __end_of__initialization 003B  
                   ?_LCD_Init 0070                    ___ftadd@f1 0078                    ___ftadd@f2 007B  
             ??_LCD_WriteData 00C5                    ___ftge@ff1 0070                    ___ftge@ff2 0073  
                  ___ftdiv@f1 002A                    ___ftdiv@f2 0027                    ___ftdiv@f3 0032  
                  ___ftneg@f1 0070        __end_of_PWM_DutyCycle1 13DA        __end_of_PWM_DutyCycle2 13FB  
                  ___ftmul@f1 0078                    ___ftmul@f2 007B                    ___fttol@f1 0070  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 0524                  __pidataBANK1 07F9  
               LCD_Cursor@Col 00C5                 LCD_Cursor@Row 00C7                  ??_LCD_Cursor 00C6  
             _LCD_WriteString 14B3                 __end_of_trimf 07F9                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00C5          __end_of_LCD_WriteCmd 132E         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 00E0                       ??_trimf 007E                    __pbssBANK0 005F  
                  __pbssBANK1 00A0                    __pbssBANK3 0190            __end_of_LCD_Cursor 13B9  
                  ??_LCD_Init 00C7         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00C5  
             ?_PWM_DutyCycle2 00C5                    __pmaintext 0D1D                   Fuzzy@mantem 0052  
                     ?___ftge 0070                       ?___wmul 00C5                    __pintentry 0004  
                ??_TIMER0_Set 00C5                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0037                    ??_PWM_Init 00C5  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
                     _SSPCON2 0091                    __stringtab 0800            __end_of_TIMER0_Set 12B0  
     __end_of_LCD_WriteString 14E4                     _ADCResult 00B5                  ??_USART_Init 00D8  
           LCD_WriteData@Byte 00C6                       ___aldiv 1771               __size_of___ftge 005D  
                     ___ftadd 0AC6                       ___ftdiv 093D                       ___ftneg 1298  
             __size_of___wmul 0025                       ___ftmul 09F5                       ___fttol 16E5  
                     ___lwdiv 1589                       ___lwmod 1515                    ??___ftpack 0075  
                     __ptext1 0524                       __ptext2 12D0                       __ptext3 1465  
                     __ptext4 1515                       __ptext5 1589                       __ptext6 14E4  
                     __ptext7 12C3                       __ptext8 15C9                       __ptext9 1771  
                  _pas_cooler 00EA                    ??___lwtoft 007B               __size_of_trapmf 0150  
                __size_of_ISR 0192                     _T1CONbits 0010                       _dpowers 0810  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 137B  
                     _isdigit 12D0             i1___lwdiv@counter 0077              ___aldiv@dividend 00C9  
                   _LCD_Clear 148A            __end_of_USART_Init 1612                       _sprintf 0524  
                     clrloop0 12B1          end_of_initialization 003B                     _RCSTAbits 0018  
            ___aldiv@quotient 00D0                       trapmf@a 003A                       trapmf@b 003D  
                     trapmf@c 0040                       trapmf@d 0043                       trapmf@x 0037  
                     trimf@ua 0043          __end_ofi1_TIMER0_Set 1298         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  _setpointUI 00EC                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1345  
           __size_of_ADC_Init 0012                     i1___lwdiv 154B                  _contador_rb6 00B7  
         PWM_DutyCycle1@valor 00C5                    _total_area 00B2           PWM_DutyCycle2@valor 00C5  
                 _CCP1CONbits 0017                   ___ftdiv@exp 0035                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00C7             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 1317                   ___ftmul@exp 0024                __end_of___ftge 093D  
              __end_of___wmul 148A             i1_USART_WriteChar 12A0            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0D1D      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0015             __size_ofi1___wmul 0023                   __end_of_ISR 1000  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00C7  
            ??_PWM_DutyCycle2 00C7         __end_of_LCD_WriteData 1345             _USART_ReceiveChar 1360  
                    ??___ftge 0076            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 12A8  
                    ??___wmul 00C9                    init_fetch0 12E0                   __pdataBANK1 00E7  
 __end_ofi1_USART_WriteString 141E                      ??_trapmf 007E           ??_USART_ReceiveChar 0073  
           __size_of___ftpack 0068                     ___latbits 0002             __size_of___lwtoft 0014  
               __pcstackBANK0 0020                 __pcstackBANK1 00C5                   ??_LCD_Clear 00C7  
         __end_of__stringdata 08DB                  _isdigit$1448 00C5                   sprintf@_val 00DB  
                 sprintf@flag 00DF                   sprintf@prec 00DA     __end_of_USART_ReceiveChar 137B  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00C7           TIMER0_Set@contagens 00C5  
                Fuzzy@aumenta 0058                      ?___aldiv 00C5                      ?___ftadd 0078  
                    ?___ftdiv 0027                      ?___ftneg 0070                      ?___ftmul 0078  
                    ?___fttol 0070                      ?___lwdiv 00C5                      ?___lwmod 00CD  
                   __pstrings 0800                     _ativa_fan 00A0                 ??_TIMER0_Init 00C5  
          USART_Init@BaudRate 00D4                      ?_max_val 0020                      ?_isdigit 0070  
                    _ADC_Init 12F1                     _fop_rule1 00A3                     _fop_rule2 00A6  
                   _fop_rule3 00A9                __size_of_Fuzzy 04E5              ___lwdiv@quotient 00CA  
                 ??i1___lwdiv 0074                      ?_sprintf 00D3                __size_of_trimf 011E  
           ??_USART_WriteChar 00C5                  i1_TIMER0_Set 1292               ___aldiv@divisor 00C5  
           interrupt_function 0004               ___aldiv@counter 00CE                      _LCD_Init 167A  
              ___wmul@product 00C9                     clear_ram0 12B0                      _PIE1bits 008C  
                    _PIE2bits 008D                      _PIR1bits 000C                      _PIR2bits 000D  
                   _temp_lida 00C1      __end_ofi1_PWM_DutyCycle2 1360                     _tempo_rb6 00C3  
  __size_ofi1_USART_WriteChar 0008                   _display_rpm 019D                   _display_pwm 0193  
                  _ADCON0bits 001F                   __stringbase 080F                    _ADCON1bits 009F  
                 __stringdata 081A                      _PWM_Init 1441             ___wmul@multiplier 00C5  
                    i1___wmul 141E           __end_of_TIMER0_Init 12C3    __size_of_USART_ReceiveChar 001B  
                  _EECON1bits 018C                      Fuzzy@tip 0049              __size_of___aldiv 008F  
            __size_of___ftadd 0107              __size_of___ftdiv 00B8              __size_of___ftneg 0008  
            __size_of___ftmul 00D1              __size_of___fttol 008C              __size_of___lwdiv 0040  
            __size_of___lwmod 0036                      ___ftpack 1612            __end_of__stringtab 0810  
                    ___lwtoft 1303              __size_of_max_val 001E              __size_of_isdigit 0010  
             ___lwdiv@divisor 00C5               ___lwdiv@counter 00CC             _USART_WriteString 14E4  
                    __ptext10 12A8                      __ptext11 12B8                      __ptext20 1317  
                    __ptext12 1441                      __ptext21 12F1                      __ptext13 13DA  
                    __ptext30 1345                      __ptext22 0E6E                      __ptext14 13B9  
                    __ptext31 06DB                      __ptext23 141E                      __ptext15 14B3  
                    __ptext40 09F5                      __ptext32 0BCD                      __ptext24 154B  
                    __ptext16 132E                      __ptext41 1612                      __ptext33 1298  
                    __ptext25 1292                      __ptext17 167A                      __ptext34 093D  
                    __ptext26 1360                      __ptext18 1399                      __ptext35 0AC6  
                    __ptext27 13FB                      __ptext19 148A                      __ptext36 137B  
                    __ptext28 12A0                      __ptext37 08E0                      __ptext29 003F  
                    __ptext38 1303                      __ptext39 16E5            ?_USART_WriteString 00C6  
            __size_of_sprintf 01B7            i1___lwdiv@dividend 0072                 __size_of_main 0151  
         USART_WriteChar@byte 00C5           ??_USART_WriteString 00C8        i1USART_WriteString@str 0071  
                    _setpoint 00E7                    _LCD_Cursor 1399      __size_of_LCD_WriteString 0031  
          i1___lwdiv@quotient 0075                   _TIMER0_Init 12B8                    _INTCONbits 000B  
   __end_of_USART_WriteString 1515                      max_val@a 0020                      max_val@b 0023  
                    init_ram0 12E4                      isdigit@c 00C6                      intlevel1 0000  
                   sprintf@ap 00D9                     sprintf@sp 00E2              ___lwmod@dividend 00CF  
                   stringcode 080A          USART_WriteString@str 00C6                    _TIMER0_Set 12A8  
                    trapmf@ua 0046               _USART_WriteChar 12C3                      sprintf@c 00E3  
                    sprintf@f 00D3               ___lwmod@divisor 00CD               ___lwmod@counter 00D2  
                    stringdir 080A                      stringtab 0800                  ___aldiv@sign 00CF  
      __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091  
       i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014                    _USART_Init 15C9  
