

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 17:39:12 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    58                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    59                           	psect	text22_split_3,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  12BB                     __pidataBANK0:	
   604                           
   605                           ;initializer for _cruzeiroSet
   606  12BB  344E               	retlw	78
   607                           
   608                           ;initializer for _lendo
   609  12BC  344E               	retlw	78
   610                           
   611                           	psect	idataBANK1
   612  12BD                     __pidataBANK1:	
   613                           
   614                           ;initializer for _pas_cooler
   615  12BD  3407               	retlw	7
   616  12BE  3400               	retlw	0
   617                           
   618                           ;initializer for _pwm
   619  12BF  3401               	retlw	1
   620  12C0  3400               	retlw	0
   621  000E                     _TMR1	set	14
   622  001F                     _ADCON0bits	set	31
   623  001E                     _ADRESH	set	30
   624  0017                     _CCP1CON	set	23
   625  0017                     _CCP1CONbits	set	23
   626  001D                     _CCP2CON	set	29
   627  001D                     _CCP2CONbits	set	29
   628  0015                     _CCPR1L	set	21
   629  001B                     _CCPR2L	set	27
   630  000B                     _INTCONbits	set	11
   631  000C                     _PIR1bits	set	12
   632  000D                     _PIR2bits	set	13
   633  0005                     _PORTA	set	5
   634  0006                     _PORTB	set	6
   635  0006                     _PORTBbits	set	6
   636  0007                     _PORTC	set	7
   637  0008                     _PORTD	set	8
   638  0009                     _PORTE	set	9
   639  0009                     _PORTEbits	set	9
   640  001A                     _RCREG	set	26
   641  0018                     _RCSTAbits	set	24
   642  0013                     _SSPBUF	set	19
   643  0014                     _SSPCONbits	set	20
   644  0010                     _T1CON	set	16
   645  0010                     _T1CONbits	set	16
   646  0012                     _T2CONbits	set	18
   647  0001                     _TMR0	set	1
   648  000F                     _TMR1H	set	15
   649  000E                     _TMR1L	set	14
   650  0019                     _TXREG	set	25
   651  00C1                     _OERR	set	193
   652  009F                     _ADCON1bits	set	159
   653  009E                     _ADRESL	set	158
   654  0081                     _OPTION_REGbits	set	129
   655  008C                     _PIE1bits	set	140
   656  008D                     _PIE2bits	set	141
   657  0092                     _PR2	set	146
   658  0099                     _SPBRG	set	153
   659  0093                     _SSPADD	set	147
   660  0091                     _SSPCON2	set	145
   661  0091                     _SSPCON2bits	set	145
   662  0094                     _SSPSTATbits	set	148
   663  0085                     _TRISA	set	133
   664  0086                     _TRISB	set	134
   665  0087                     _TRISC	set	135
   666  0088                     _TRISD	set	136
   667  0089                     _TRISE	set	137
   668  0098                     _TXSTAbits	set	152
   669  010D                     _EEADR	set	269
   670  010C                     _EEDATA	set	268
   671  018C                     _EECON1bits	set	396
   672  018D                     _EECON2	set	397
   673                           
   674                           	psect	strings
   675  1000                     __pstrings:	
   676  1000                     stringtab:	
   677  1000                     __stringtab:	
   678  1000                     stringcode:	
   679                           ;	String table - string pointers are 1 byte each
   680                           
   681  1000                     stringdir:	
   682  1000  3010               	movlw	high stringdir
   683  1001  008A               	movwf	10
   684  1002  0804               	movf	4,w
   685  1003  0A84               	incf	4,f
   686  1004  0782               	addwf	2,f
   687  1005                     __stringbase:	
   688  1005  3400               	retlw	0
   689  1006                     __end_of__stringtab:	
   690  1006                     __stringdata:	
   691  1006                     STR_4:	
   692  1006  340A               	retlw	10
   693  1007  340D               	retlw	13
   694  1008  3420               	retlw	32	;' '
   695  1009  342D               	retlw	45	;'-'
   696  100A  342D               	retlw	45	;'-'
   697  100B  342D               	retlw	45	;'-'
   698  100C  342D               	retlw	45	;'-'
   699  100D  342D               	retlw	45	;'-'
   700  100E  342D               	retlw	45	;'-'
   701  100F  342D               	retlw	45	;'-'
   702  1010  3420               	retlw	32	;' '
   703  1011  3445               	retlw	69	;'E'
   704  1012  3453               	retlw	83	;'S'
   705  1013  3454               	retlw	84	;'T'
   706  1014  344F               	retlw	79	;'O'
   707  1015  3455               	retlw	85	;'U'
   708  1016  3452               	retlw	82	;'R'
   709  1017  344F               	retlw	79	;'O'
   710  1018  3420               	retlw	32	;' '
   711  1019  3444               	retlw	68	;'D'
   712  101A  3445               	retlw	69	;'E'
   713  101B  3420               	retlw	32	;' '
   714  101C  3450               	retlw	80	;'P'
   715  101D  3449               	retlw	73	;'I'
   716  101E  344C               	retlw	76	;'L'
   717  101F  3448               	retlw	72	;'H'
   718  1020  3441               	retlw	65	;'A'
   719  1021  3420               	retlw	32	;' '
   720  1022  342D               	retlw	45	;'-'
   721  1023  342D               	retlw	45	;'-'
   722  1024  342D               	retlw	45	;'-'
   723  1025  342D               	retlw	45	;'-'
   724  1026  342D               	retlw	45	;'-'
   725  1027  342D               	retlw	45	;'-'
   726  1028  342D               	retlw	45	;'-'
   727  1029  3420               	retlw	32	;' '
   728  102A  340A               	retlw	10
   729  102B  340D               	retlw	13
   730  102C  3420               	retlw	32	;' '
   731  102D  3400               	retlw	0
   732  102E                     STR_2:	
   733  102E  3449               	retlw	73	;'I'
   734  102F  346E               	retlw	110	;'n'
   735  1030  3469               	retlw	105	;'i'
   736  1031  3463               	retlw	99	;'c'
   737  1032  3469               	retlw	105	;'i'
   738  1033  3461               	retlw	97	;'a'
   739  1034  346C               	retlw	108	;'l'
   740  1035  3469               	retlw	105	;'i'
   741  1036  347A               	retlw	122	;'z'
   742  1037  3461               	retlw	97	;'a'
   743  1038  346E               	retlw	110	;'n'
   744  1039  3464               	retlw	100	;'d'
   745  103A  346F               	retlw	111	;'o'
   746  103B  342E               	retlw	46	;'.'
   747  103C  342E               	retlw	46	;'.'
   748  103D  342E               	retlw	46	;'.'
   749  103E  3400               	retlw	0
   750  103F                     STR_1:	
   751  103F  340A               	retlw	10
   752  1040  340D               	retlw	13
   753  1041  3466               	retlw	102	;'f'
   754  1042  3472               	retlw	114	;'r'
   755  1043  3465               	retlw	101	;'e'
   756  1044  3469               	retlw	105	;'i'
   757  1045  346F               	retlw	111	;'o'
   758  1046  340A               	retlw	10
   759  1047  340D               	retlw	13
   760  1048  3400               	retlw	0
   761  1049                     STR_3:	
   762  1049  346B               	retlw	107	;'k'
   763  104A  346D               	retlw	109	;'m'
   764  104B  3448               	retlw	72	;'H'
   765  104C  343A               	retlw	58	;':'
   766  104D  3420               	retlw	32	;' '
   767  104E  3400               	retlw	0
   768  104F                     __end_of__stringdata:	
   769                           
   770                           ; #config settings
   771  0000                     
   772                           	psect	cinit
   773  0015                     start_initialization:	
   774  0015                     __initialization:	
   775                           
   776                           ; Clear objects allocated to BANK0
   777  0015  01EB               	clrf	__pbssBANK0& (0+127)
   778  0016  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK1
   781  0017  1383               	bcf	3,7	;select IRP bank0
   782  0018  30C2               	movlw	low __pbssBANK1
   783  0019  0084               	movwf	4
   784  001A  30DF               	movlw	low (__pbssBANK1+29)
   785  001B  160A  118A  22D7  120A  118A  	fcall	clear_ram0
   786                           
   787                           ; Clear objects allocated to BANK3
   788  0020  1783               	bsf	3,7	;select IRP bank2
   789  0021  3090               	movlw	low __pbssBANK3
   790  0022  0084               	movwf	4
   791  0023  30B5               	movlw	low (__pbssBANK3+37)
   792  0024  160A  118A  22D7  120A  118A  	fcall	clear_ram0
   793                           
   794                           ; Initialize objects allocated to BANK1
   795  0029  1683               	bsf	3,5	;RP0=1, select bank1
   796  002A  1303               	bcf	3,6	;RP1=0, select bank1
   797  002B  160A  118A  22BD  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   798  0030  00DF               	movwf	__pdataBANK1& (0+127)
   799  0031  160A  118A  22BE  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   800  0036  00E0               	movwf	(__pdataBANK1+1)& (0+127)
   801  0037  160A  118A  22BF  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   802  003C  00E1               	movwf	(__pdataBANK1+2)& (0+127)
   803  003D  160A  118A  22C0  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   804  0042  00E2               	movwf	(__pdataBANK1+3)& (0+127)
   805                           
   806                           ; Initialize objects allocated to BANK0
   807  0043  1283               	bcf	3,5	;RP0=0, select bank0
   808  0044  1303               	bcf	3,6	;RP1=0, select bank0
   809  0045  160A  118A  22BB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   810  004A  00ED               	movwf	__pdataBANK0& (0+127)
   811  004B  160A  118A  22BC   	fcall	__pidataBANK0+1	;fetch initializer
   812  004E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   813  004F                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  004F                     __end_of__initialization:	
   817  004F  0183               	clrf	3
   818  0050  120A  158A  29E3   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  006B                     __pbssBANK0:	
   822  006B                     _indicebuffer:	
   823  006B                     	ds	2
   824                           
   825                           	psect	dataBANK0
   826  006D                     __pdataBANK0:	
   827  006D                     _cruzeiroSet:	
   828  006D                     	ds	1
   829  006E                     _lendo:	
   830  006E                     	ds	1
   831                           
   832                           	psect	bssBANK1
   833  00C2                     __pbssBANK1:	
   834  00C2                     _rulegrande:	
   835  00C2                     	ds	3
   836  00C5                     _rulemedio:	
   837  00C5                     	ds	3
   838  00C8                     _rulepequeno:	
   839  00C8                     	ds	3
   840  00CB                     _ADCResult:	
   841  00CB                     	ds	2
   842  00CD                     _antigoUI:	
   843  00CD                     	ds	2
   844  00CF                     _contagens_tm0:	
   845  00CF                     	ds	2
   846  00D1                     _cruzeiroVel:	
   847  00D1                     	ds	2
   848  00D3                     _deltaV:	
   849  00D3                     	ds	2
   850  00D5                     _pulsos:	
   851  00D5                     	ds	2
   852  00D7                     _rpm:	
   853  00D7                     	ds	2
   854  00D9                     _setpointUI:	
   855  00D9                     	ds	2
   856  00DB                     _status:	
   857  00DB                     	ds	2
   858  00DD                     _x:	
   859  00DD                     	ds	2
   860                           
   861                           	psect	dataBANK1
   862  00DF                     __pdataBANK1:	
   863  00DF                     _pas_cooler:	
   864  00DF                     	ds	2
   865  00E1                     _pwm:	
   866  00E1                     	ds	2
   867                           
   868                           	psect	bssBANK3
   869  0190                     __pbssBANK3:	
   870  0190                     _buffer:	
   871  0190                     	ds	13
   872  019D                     _bufferRecebido:	
   873  019D                     	ds	7
   874  01A4                     _antigo:	
   875  01A4                     	ds	3
   876  01A7                     _ativa_fan:	
   877  01A7                     	ds	3
   878  01AA                     _fitemp:	
   879  01AA                     	ds	3
   880  01AD                     _sum:	
   881  01AD                     	ds	3
   882  01B0                     _total_area:	
   883  01B0                     	ds	3
   884  01B3                     _y:	
   885  01B3                     	ds	2
   886                           
   887                           	psect	clrtext
   888  12D7                     clear_ram0:	
   889                           ;	Called with FSR containing the base address, and
   890                           ;	W with the last address+1
   891                           
   892  12D7  0064               	clrwdt	;clear the watchdog before getting into this loop
   893  12D8                     clrloop0:	
   894  12D8  0180               	clrf	0	;clear RAM location pointed to by FSR
   895  12D9  0A84               	incf	4,f	;increment pointer
   896  12DA  0604               	xorwf	4,w	;XOR with final address
   897  12DB  1903               	btfsc	3,2	;have we reached the end yet?
   898  12DC  3400               	retlw	0	;all done for this memory range, return
   899  12DD  0604               	xorwf	4,w	;XOR again to restore value
   900  12DE  2AD8               	goto	clrloop0	;do the next byte
   901                           
   902                           	psect	cstackBANK3
   903  01B5                     __pcstackBANK3:	
   904  01B5                     ?_PWM_DutyCycle2:	
   905  01B5                     ??_TIMER0_Set:	
   906                           ; 0 bytes @ 0x0
   907                           
   908  01B5                     ??_TIMER0_Init:	
   909                           ; 0 bytes @ 0x0
   910                           
   911  01B5                     ??_ADC_Init:	
   912                           ; 0 bytes @ 0x0
   913                           
   914  01B5                     ??_PWM_Init:	
   915                           ; 0 bytes @ 0x0
   916                           
   917  01B5                     ?_LCD_Cursor:	
   918                           ; 0 bytes @ 0x0
   919                           
   920  01B5                     ?_PWM_DutyCycle1:	
   921                           ; 0 bytes @ 0x0
   922                           
   923  01B5                     ??_LCD_WriteCmd:	
   924                           ; 0 bytes @ 0x0
   925                           
   926  01B5                     ??_LCD_WriteData:	
   927                           ; 0 bytes @ 0x0
   928                           
   929  01B5                     ?___aldiv:	
   930                           ; 0 bytes @ 0x0
   931                           
   932  01B5                     TIMER0_Set@contagens:	
   933                           ; 4 bytes @ 0x0
   934                           
   935  01B5                     LCD_Cursor@Col:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  01B5                     PWM_DutyCycle1@valor:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  01B5                     PWM_DutyCycle2@valor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  01B5                     ___aldiv@divisor:	
   945                           ; 2 bytes @ 0x0
   946                           
   947                           
   948                           ; 4 bytes @ 0x0
   949  01B5                     	ds	1
   950  01B6                     ??_LCD_Cursor:	
   951  01B6                     LCD_WriteCmd@Byte:	
   952                           ; 0 bytes @ 0x1
   953                           
   954  01B6                     LCD_WriteData@Byte:	
   955                           ; 1 bytes @ 0x1
   956                           
   957                           
   958                           ; 1 bytes @ 0x1
   959  01B6                     	ds	1
   960  01B7                     ??_PWM_DutyCycle2:	
   961  01B7                     ??_LCD_Init:	
   962                           ; 0 bytes @ 0x2
   963                           
   964  01B7                     ??_LCD_WriteString:	
   965                           ; 0 bytes @ 0x2
   966                           
   967  01B7                     ??_PWM_DutyCycle1:	
   968                           ; 0 bytes @ 0x2
   969                           
   970  01B7                     ??_LCD_Clear:	
   971                           ; 0 bytes @ 0x2
   972                           
   973  01B7                     LCD_Cursor@Row:	
   974                           ; 0 bytes @ 0x2
   975                           
   976                           
   977                           ; 1 bytes @ 0x2
   978  01B7                     	ds	1
   979  01B8                     LCD_WriteString@Str:	
   980                           
   981                           ; 1 bytes @ 0x3
   982  01B8                     	ds	1
   983  01B9                     ___aldiv@dividend:	
   984                           
   985                           ; 4 bytes @ 0x4
   986  01B9                     	ds	4
   987  01BD                     ??___aldiv:	
   988                           
   989                           ; 0 bytes @ 0x8
   990  01BD                     	ds	1
   991  01BE                     ___aldiv@counter:	
   992                           
   993                           ; 1 bytes @ 0x9
   994  01BE                     	ds	1
   995  01BF                     ___aldiv@sign:	
   996                           
   997                           ; 1 bytes @ 0xA
   998  01BF                     	ds	1
   999  01C0                     ___aldiv@quotient:	
  1000                           
  1001                           ; 4 bytes @ 0xB
  1002  01C0                     	ds	4
  1003  01C4                     ?_USART_Init:	
  1004  01C4                     USART_Init@BaudRate:	
  1005                           ; 0 bytes @ 0xF
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0xF
  1009  01C4                     	ds	4
  1010  01C8                     ??_USART_Init:	
  1011                           
  1012                           ; 0 bytes @ 0x13
  1013  01C8                     	ds	4
  1014  01CC                     ??_main:	
  1015                           
  1016                           ; 0 bytes @ 0x17
  1017  01CC                     	ds	3
  1018                           
  1019                           	psect	cstackBANK1
  1020  00A0                     __pcstackBANK1:	
  1021  00A0                     _Fuzzy$1692:	
  1022                           
  1023                           ; 3 bytes @ 0x0
  1024  00A0                     	ds	3
  1025  00A3                     _Fuzzy$1693:	
  1026                           
  1027                           ; 2 bytes @ 0x3
  1028  00A3                     	ds	2
  1029  00A5                     Fuzzy@reajuste:	
  1030                           
  1031                           ; 3 bytes @ 0x5
  1032  00A5                     	ds	3
  1033  00A8                     _Fuzzy$251:	
  1034                           
  1035                           ; 2 bytes @ 0x8
  1036  00A8                     	ds	2
  1037  00AA                     Fuzzy@a:	
  1038                           
  1039                           ; 2 bytes @ 0xA
  1040  00AA                     	ds	2
  1041  00AC                     Fuzzy@a_244:	
  1042                           
  1043                           ; 2 bytes @ 0xC
  1044  00AC                     	ds	2
  1045  00AE                     Fuzzy@a_245:	
  1046                           
  1047                           ; 2 bytes @ 0xE
  1048  00AE                     	ds	2
  1049  00B0                     Fuzzy@a_246:	
  1050                           
  1051                           ; 2 bytes @ 0x10
  1052  00B0                     	ds	2
  1053  00B2                     Fuzzy@delta:	
  1054                           
  1055                           ; 2 bytes @ 0x12
  1056  00B2                     	ds	2
  1057  00B4                     Fuzzy@soma:	
  1058                           
  1059                           ; 3 bytes @ 0x14
  1060  00B4                     	ds	3
  1061  00B7                     Fuzzy@total_area:	
  1062                           
  1063                           ; 3 bytes @ 0x17
  1064  00B7                     	ds	3
  1065  00BA                     Fuzzy@a_249:	
  1066                           
  1067                           ; 2 bytes @ 0x1A
  1068  00BA                     	ds	2
  1069  00BC                     Fuzzy@rule:	
  1070                           
  1071                           ; 3 bytes @ 0x1C
  1072  00BC                     	ds	3
  1073  00BF                     Fuzzy@x:	
  1074                           
  1075                           ; 3 bytes @ 0x1F
  1076  00BF                     	ds	3
  1077                           
  1078                           	psect	cstackCOMMON
  1079  0070                     __pcstackCOMMON:	
  1080  0070                     ?_USART_WriteChar:	
  1081  0070                     ??_USART_WriteChar:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_USART_WriteString:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_TIMER0_Set:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_TIMER0_Init:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_ADC_Init:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_PWM_Init:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_LCD_Init:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?_LCD_WriteString:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_LCD_Clear:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_enviabuffer:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_Fuzzy:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_ISR:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_main:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_LCD_WriteCmd:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_LCD_WriteData:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?___ftge:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?i1_TIMER0_Set:	
  1130                           ; 1 bit 
  1131                           
  1132  0070                     ??i1_TIMER0_Set:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?i1_PWM_DutyCycle2:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_USART_ReceiveChar:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ?_abs:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?___lwdiv:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147  0070                     ?___ftpack:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150  0070                     USART_WriteChar@byte:	
  1151                           ; 3 bytes @ 0x0
  1152                           
  1153  0070                     i1TIMER0_Set@contagens:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     abs@a:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ___lwdiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162  0070                     i1PWM_DutyCycle2@valor:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165  0070                     ___ftpack@arg:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0070                     ___ftge@ff1:	
  1169                           ; 3 bytes @ 0x0
  1170                           
  1171                           
  1172                           ; 3 bytes @ 0x0
  1173  0070                     	ds	1
  1174  0071                     ??_USART_WriteString:	
  1175  0071                     ??_enviabuffer:	
  1176                           ; 0 bytes @ 0x1
  1177                           
  1178                           
  1179                           ; 0 bytes @ 0x1
  1180  0071                     	ds	1
  1181  0072                     ??_abs:	
  1182  0072                     ??i1_PWM_DutyCycle2:	
  1183                           ; 0 bytes @ 0x2
  1184                           
  1185  0072                     enviabuffer@checksum:	
  1186                           ; 0 bytes @ 0x2
  1187                           
  1188  0072                     USART_WriteString@str:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0072                     ___lwdiv@dividend:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196  0072                     	ds	1
  1197  0073                     ??_USART_ReceiveChar:	
  1198  0073                     enviabuffer@index:	
  1199                           ; 0 bytes @ 0x3
  1200                           
  1201  0073                     ___ftpack@exp:	
  1202                           ; 1 bytes @ 0x3
  1203                           
  1204  0073                     ___ftge@ff2:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207                           
  1208                           ; 3 bytes @ 0x3
  1209  0073                     	ds	1
  1210  0074                     ??___lwdiv:	
  1211  0074                     USART_ReceiveChar@byte:	
  1212                           ; 0 bytes @ 0x4
  1213                           
  1214  0074                     ___ftpack@sign:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x4
  1219  0074                     	ds	1
  1220  0075                     ??___ftpack:	
  1221  0075                     ___lwdiv@quotient:	
  1222                           ; 0 bytes @ 0x5
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x5
  1226  0075                     	ds	1
  1227  0076                     ??___ftge:	
  1228                           
  1229                           ; 0 bytes @ 0x6
  1230  0076                     	ds	1
  1231  0077                     ___lwdiv@counter:	
  1232                           
  1233                           ; 1 bytes @ 0x7
  1234  0077                     	ds	1
  1235  0078                     ?___awtoft:	
  1236  0078                     ?___lwtoft:	
  1237                           ; 3 bytes @ 0x8
  1238                           
  1239  0078                     ___awtoft@c:	
  1240                           ; 3 bytes @ 0x8
  1241                           
  1242  0078                     ___lwtoft@c:	
  1243                           ; 2 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247  0078                     	ds	3
  1248  007B                     ??___awtoft:	
  1249  007B                     ??___lwtoft:	
  1250                           ; 0 bytes @ 0xB
  1251                           
  1252                           
  1253                           ; 0 bytes @ 0xB
  1254  007B                     	ds	2
  1255  007D                     ___awtoft@sign:	
  1256                           
  1257                           ; 1 bytes @ 0xD
  1258  007D                     	ds	1
  1259  007E                     ??_trapmf:	
  1260  007E                     ??_maximo:	
  1261                           ; 0 bytes @ 0xE
  1262                           
  1263  007E                     ??_minimo:	
  1264                           ; 0 bytes @ 0xE
  1265                           
  1266  007E                     ??___wmul:	
  1267                           ; 0 bytes @ 0xE
  1268                           
  1269  007E                     ??___ftneg:	
  1270                           ; 0 bytes @ 0xE
  1271                           
  1272                           
  1273                           	psect	cstackBANK0
  1274  0020                     __pcstackBANK0:	
  1275                           ; 0 bytes @ 0xE
  1276                           
  1277  0020                     ?_minimo:	
  1278  0020                     ?___ftneg:	
  1279                           ; 3 bytes @ 0x0
  1280                           
  1281  0020                     minimo@a:	
  1282                           ; 3 bytes @ 0x0
  1283                           
  1284  0020                     ___ftneg@f1:	
  1285                           ; 3 bytes @ 0x0
  1286                           
  1287                           
  1288                           ; 3 bytes @ 0x0
  1289  0020                     	ds	3
  1290  0023                     ?___ftadd:	
  1291  0023                     minimo@b:	
  1292                           ; 3 bytes @ 0x3
  1293                           
  1294  0023                     ___ftadd@f1:	
  1295                           ; 3 bytes @ 0x3
  1296                           
  1297                           
  1298                           ; 3 bytes @ 0x3
  1299  0023                     	ds	3
  1300  0026                     ?_maximo:	
  1301  0026                     maximo@a:	
  1302                           ; 3 bytes @ 0x6
  1303                           
  1304  0026                     ___ftadd@f2:	
  1305                           ; 3 bytes @ 0x6
  1306                           
  1307                           
  1308                           ; 3 bytes @ 0x6
  1309  0026                     	ds	3
  1310  0029                     ??___ftadd:	
  1311  0029                     maximo@b:	
  1312                           ; 0 bytes @ 0x9
  1313                           
  1314                           
  1315                           ; 3 bytes @ 0x9
  1316  0029                     	ds	3
  1317  002C                     ?___fttol:	
  1318  002C                     ___fttol@f1:	
  1319                           ; 4 bytes @ 0xC
  1320                           
  1321                           
  1322                           ; 3 bytes @ 0xC
  1323  002C                     	ds	1
  1324  002D                     ___ftadd@sign:	
  1325                           
  1326                           ; 1 bytes @ 0xD
  1327  002D                     	ds	1
  1328  002E                     ___ftadd@exp2:	
  1329                           
  1330                           ; 1 bytes @ 0xE
  1331  002E                     	ds	1
  1332  002F                     ___ftadd@exp1:	
  1333                           
  1334                           ; 1 bytes @ 0xF
  1335  002F                     	ds	1
  1336  0030                     ??___fttol:	
  1337  0030                     ?___ftdiv:	
  1338                           ; 0 bytes @ 0x10
  1339                           
  1340  0030                     ___ftdiv@f2:	
  1341                           ; 3 bytes @ 0x10
  1342                           
  1343                           
  1344                           ; 3 bytes @ 0x10
  1345  0030                     	ds	3
  1346  0033                     ___ftdiv@f1:	
  1347                           
  1348                           ; 3 bytes @ 0x13
  1349  0033                     	ds	1
  1350  0034                     ___fttol@sign1:	
  1351                           
  1352                           ; 1 bytes @ 0x14
  1353  0034                     	ds	1
  1354  0035                     ___fttol@lval:	
  1355                           
  1356                           ; 4 bytes @ 0x15
  1357  0035                     	ds	1
  1358  0036                     ??___ftdiv:	
  1359                           
  1360                           ; 0 bytes @ 0x16
  1361  0036                     	ds	3
  1362  0039                     ___fttol@exp1:	
  1363                           
  1364                           ; 1 bytes @ 0x19
  1365  0039                     	ds	1
  1366  003A                     ?___wmul:	
  1367  003A                     ___ftdiv@cntr:	
  1368                           ; 2 bytes @ 0x1A
  1369                           
  1370  003A                     ___wmul@multiplier:	
  1371                           ; 1 bytes @ 0x1A
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0x1A
  1375  003A                     	ds	1
  1376  003B                     ___ftdiv@f3:	
  1377                           
  1378                           ; 3 bytes @ 0x1B
  1379  003B                     	ds	1
  1380  003C                     ___wmul@multiplicand:	
  1381                           
  1382                           ; 2 bytes @ 0x1C
  1383  003C                     	ds	2
  1384  003E                     ___ftdiv@exp:	
  1385  003E                     ___wmul@product:	
  1386                           ; 1 bytes @ 0x1E
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x1E
  1390  003E                     	ds	1
  1391  003F                     ___ftdiv@sign:	
  1392                           
  1393                           ; 1 bytes @ 0x1F
  1394  003F                     	ds	1
  1395  0040                     ?_trapmf:	
  1396  0040                     trapmf@x:	
  1397                           ; 3 bytes @ 0x20
  1398                           
  1399                           
  1400                           ; 3 bytes @ 0x20
  1401  0040                     	ds	3
  1402  0043                     trapmf@a:	
  1403                           
  1404                           ; 3 bytes @ 0x23
  1405  0043                     	ds	3
  1406  0046                     trapmf@b:	
  1407                           
  1408                           ; 3 bytes @ 0x26
  1409  0046                     	ds	3
  1410  0049                     trapmf@c:	
  1411                           
  1412                           ; 3 bytes @ 0x29
  1413  0049                     	ds	3
  1414  004C                     trapmf@d:	
  1415                           
  1416                           ; 3 bytes @ 0x2C
  1417  004C                     	ds	3
  1418  004F                     trapmf@ua:	
  1419                           
  1420                           ; 3 bytes @ 0x2F
  1421  004F                     	ds	3
  1422  0052                     ?___ftmul:	
  1423  0052                     ___ftmul@f1:	
  1424                           ; 3 bytes @ 0x32
  1425                           
  1426                           
  1427                           ; 3 bytes @ 0x32
  1428  0052                     	ds	3
  1429  0055                     ___ftmul@f2:	
  1430                           
  1431                           ; 3 bytes @ 0x35
  1432  0055                     	ds	3
  1433  0058                     ??___ftmul:	
  1434                           
  1435                           ; 0 bytes @ 0x38
  1436  0058                     	ds	4
  1437  005C                     ___ftmul@exp:	
  1438                           
  1439                           ; 1 bytes @ 0x3C
  1440  005C                     	ds	1
  1441  005D                     ___ftmul@f3_as_product:	
  1442                           
  1443                           ; 3 bytes @ 0x3D
  1444  005D                     	ds	3
  1445  0060                     ___ftmul@cntr:	
  1446                           
  1447                           ; 1 bytes @ 0x40
  1448  0060                     	ds	1
  1449  0061                     ___ftmul@sign:	
  1450                           
  1451                           ; 1 bytes @ 0x41
  1452  0061                     	ds	1
  1453  0062                     ??_Fuzzy:	
  1454                           
  1455                           ; 0 bytes @ 0x42
  1456  0062                     	ds	2
  1457  0064                     ??_ISR:	
  1458                           
  1459                           ; 0 bytes @ 0x44
  1460  0064                     	ds	6
  1461  006A                     ISR@byte:	
  1462                           
  1463                           ; 1 bytes @ 0x4A
  1464  006A                     	ds	1
  1465                           
  1466                           	psect	maintext
  1467  09E3                     __pmaintext:	
  1468 ;;
  1469 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1470 ;;
  1471 ;; *************** function _main *****************
  1472 ;; Defined at:
  1473 ;;		line 466 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 17F/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       3       0
  1490 ;;      Totals:         0       0       0       3       0
  1491 ;;Total ram usage:        3 bytes
  1492 ;; Hardware stack levels required when called:    7
  1493 ;; This function calls:
  1494 ;;		_ADC_Init
  1495 ;;		_LCD_Clear
  1496 ;;		_LCD_Cursor
  1497 ;;		_LCD_Init
  1498 ;;		_LCD_WriteString
  1499 ;;		_PWM_DutyCycle1
  1500 ;;		_PWM_DutyCycle2
  1501 ;;		_PWM_Init
  1502 ;;		_TIMER0_Init
  1503 ;;		_TIMER0_Set
  1504 ;;		_USART_Init
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _main
  1512  09E3                     _main:	
  1513                           
  1514                           ;main.c: 468: TRISA = 0b00000001;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1518  09E3  3001               	movlw	1
  1519  09E4  1683               	bsf	3,5	;RP0=1, select bank1
  1520  09E5  1303               	bcf	3,6	;RP1=0, select bank1
  1521  09E6  0085               	movwf	5	;volatile
  1522                           
  1523                           ;main.c: 469: PORTA = 0b00000001;
  1524  09E7  3001               	movlw	1
  1525  09E8  1283               	bcf	3,5	;RP0=0, select bank0
  1526  09E9  1303               	bcf	3,6	;RP1=0, select bank0
  1527  09EA  0085               	movwf	5	;volatile
  1528                           
  1529                           ;main.c: 470: TRISB = 0b00000000;
  1530  09EB  1683               	bsf	3,5	;RP0=1, select bank1
  1531  09EC  1303               	bcf	3,6	;RP1=0, select bank1
  1532  09ED  0186               	clrf	6	;volatile
  1533                           
  1534                           ;main.c: 471: PORTB = 0b00000000;
  1535  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  1536  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  1537  09F0  0186               	clrf	6	;volatile
  1538                           
  1539                           ;main.c: 472: TRISC = 0b10000001;
  1540  09F1  3081               	movlw	129
  1541  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  1542  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  1543  09F4  0087               	movwf	7	;volatile
  1544                           
  1545                           ;main.c: 473: PORTC = 0b11000000;
  1546  09F5  30C0               	movlw	192
  1547  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  1548  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  1549  09F8  0087               	movwf	7	;volatile
  1550                           
  1551                           ;main.c: 474: TRISD = 0b00000000;
  1552  09F9  1683               	bsf	3,5	;RP0=1, select bank1
  1553  09FA  1303               	bcf	3,6	;RP1=0, select bank1
  1554  09FB  0188               	clrf	8	;volatile
  1555                           
  1556                           ;main.c: 475: PORTD = 0b00000000;
  1557  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  1558  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  1559  09FE  0188               	clrf	8	;volatile
  1560                           
  1561                           ;main.c: 476: TRISE = 0b00000000;
  1562  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0A00  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0A01  0189               	clrf	9	;volatile
  1565                           
  1566                           ;main.c: 477: PORTE = 0b00000000;
  1567  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0A04  0189               	clrf	9	;volatile
  1570                           
  1571                           ;main.c: 480: T1CON = 0x03;
  1572  0A05  3003               	movlw	3
  1573  0A06  0090               	movwf	16	;volatile
  1574                           
  1575                           ;main.c: 481: TMR1L = 0x00;
  1576  0A07  018E               	clrf	14	;volatile
  1577                           
  1578                           ;main.c: 482: TMR1H = 0x00;
  1579  0A08  018F               	clrf	15	;volatile
  1580                           
  1581                           ;main.c: 485: USART_Init(115200);
  1582  0A09  3000               	movlw	0
  1583  0A0A  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0A0B  1703               	bsf	3,6	;RP1=1, select bank3
  1585  0A0C  00C7               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1586  0A0D  3001               	movlw	1
  1587  0A0E  00C6               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1588  0A0F  30C2               	movlw	194
  1589  0A10  00C5               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1590  0A11  3000               	movlw	0
  1591  0A12  00C4               	movwf	USART_Init@BaudRate^(0+384)
  1592  0A13  160A  118A  24FA  120A  158A  	fcall	_USART_Init
  1593                           
  1594                           ;main.c: 486: TIMER0_Init();
  1595  0A18  160A  118A  22E9  120A  158A  	fcall	_TIMER0_Init
  1596                           
  1597                           ;main.c: 487: ADC_Init();
  1598  0A1D  160A  118A  2302  120A  158A  	fcall	_ADC_Init
  1599                           
  1600                           ;main.c: 488: PWM_Init();
  1601  0A22  160A  118A  244A  120A  158A  	fcall	_PWM_Init
  1602                           
  1603                           ;main.c: 489: LCD_Init();
  1604  0A27  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1605                           
  1606                           ;main.c: 492: INTCONbits.PEIE = 1;
  1607  0A2C  170B               	bsf	11,6	;volatile
  1608                           
  1609                           ;main.c: 493: INTCONbits.GIE = 1;
  1610  0A2D  178B               	bsf	11,7	;volatile
  1611                           
  1612                           ;main.c: 500: LCD_Init();
  1613  0A2E  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1614                           
  1615                           ;main.c: 501: LCD_Cursor(0,0);
  1616  0A33  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0A34  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0A35  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1619  0A36  3000               	movlw	0
  1620  0A37  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1621                           
  1622                           ;main.c: 502: LCD_WriteString("Inicializando...");
  1623  0A3C  3029               	movlw	(STR_2-__stringbase)& (0+255)
  1624  0A3D  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1625                           
  1626                           ;main.c: 505: PWM_DutyCycle1(0);
  1627  0A42  3000               	movlw	0
  1628  0A43  1683               	bsf	3,5	;RP0=1, select bank3
  1629  0A44  1703               	bsf	3,6	;RP1=1, select bank3
  1630  0A45  00B5               	movwf	PWM_DutyCycle1@valor^(0+384)
  1631  0A46  3000               	movlw	0
  1632  0A47  00B6               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1633  0A48  160A  118A  2408  120A  158A  	fcall	_PWM_DutyCycle1
  1634                           
  1635                           ;main.c: 506: PWM_DutyCycle2(0);
  1636  0A4D  3000               	movlw	0
  1637  0A4E  1683               	bsf	3,5	;RP0=1, select bank3
  1638  0A4F  1703               	bsf	3,6	;RP1=1, select bank3
  1639  0A50  00B5               	movwf	PWM_DutyCycle2@valor^(0+384)
  1640  0A51  3000               	movlw	0
  1641  0A52  00B6               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1642  0A53  160A  118A  2429  120A  158A  	fcall	_PWM_DutyCycle2
  1643                           
  1644                           ;main.c: 509: TIMER0_Set(238);
  1645  0A58  30EE               	movlw	238
  1646  0A59  160A  118A  22CF  120A  158A  	fcall	_TIMER0_Set
  1647                           
  1648                           ;main.c: 512: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1649  0A5E  3018               	movlw	24
  1650  0A5F  1683               	bsf	3,5	;RP0=1, select bank3
  1651  0A60  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0A61  00CE               	movwf	(??_main^(0+384)+2)
  1653  0A62  3061               	movlw	97
  1654  0A63  00CD               	movwf	(??_main^(0+384)+1)
  1655  0A64  306E               	movlw	110
  1656  0A65  00CC               	movwf	??_main^(0+384)
  1657  0A66                     u5837:	
  1658  0A66  0BCC               	decfsz	??_main^(0+384),f
  1659  0A67  2A66               	goto	u5837
  1660  0A68  0BCD               	decfsz	(??_main^(0+384)+1),f
  1661  0A69  2A66               	goto	u5837
  1662  0A6A  0BCE               	decfsz	(??_main^(0+384)+2),f
  1663  0A6B  2A66               	goto	u5837
  1664  0A6C  0000               	nop
  1665  0A6D                     l3331:	
  1666                           ;main.c: 515: while(1)
  1667                           
  1668                           
  1669                           ;main.c: 516: {
  1670                           ;main.c: 522: LCD_Clear();
  1671  0A6D  160A  118A  2493  120A  158A  	fcall	_LCD_Clear
  1672                           
  1673                           ;main.c: 523: LCD_Cursor(0,0);
  1674  0A72  1683               	bsf	3,5	;RP0=1, select bank3
  1675  0A73  1703               	bsf	3,6	;RP1=1, select bank3
  1676  0A74  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1677  0A75  3000               	movlw	0
  1678  0A76  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1679                           
  1680                           ;main.c: 524: LCD_WriteString("kmH: ");
  1681  0A7B  3044               	movlw	(STR_3-__stringbase)& (0+255)
  1682  0A7C  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1683                           
  1684                           ;main.c: 527: LCD_Cursor(1,0);
  1685  0A81  1683               	bsf	3,5	;RP0=1, select bank3
  1686  0A82  1703               	bsf	3,6	;RP1=1, select bank3
  1687  0A83  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1688  0A84  3001               	movlw	1
  1689  0A85  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1690                           
  1691                           ;main.c: 532: _delay((unsigned long)((200)*(18432000/4000.0)));
  1692  0A8A  3005               	movlw	5
  1693  0A8B  1683               	bsf	3,5	;RP0=1, select bank3
  1694  0A8C  1703               	bsf	3,6	;RP1=1, select bank3
  1695  0A8D  00CE               	movwf	(??_main^(0+384)+2)
  1696  0A8E  30AD               	movlw	173
  1697  0A8F  00CD               	movwf	(??_main^(0+384)+1)
  1698  0A90  30E0               	movlw	224
  1699  0A91  00CC               	movwf	??_main^(0+384)
  1700  0A92                     u5847:	
  1701  0A92  0BCC               	decfsz	??_main^(0+384),f
  1702  0A93  2A92               	goto	u5847
  1703  0A94  0BCD               	decfsz	(??_main^(0+384)+1),f
  1704  0A95  2A92               	goto	u5847
  1705  0A96  0BCE               	decfsz	(??_main^(0+384)+2),f
  1706  0A97  2A92               	goto	u5847
  1707  0A98  2A6D               	goto	l3331
  1708  0A99                     __end_of_main:	
  1709                           
  1710                           	psect	text1
  1711  14FA                     __ptext1:	
  1712 ;; *************** function _USART_Init *****************
  1713 ;; Defined at:
  1714 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  BaudRate        4   15[BANK3 ] long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       4       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       0       0       4       0
  1731 ;;      Totals:         0       0       0       8       0
  1732 ;;Total ram usage:        8 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    6
  1735 ;; This function calls:
  1736 ;;		___aldiv
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _USART_Init
  1744  14FA                     _USART_Init:	
  1745                           
  1746                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1750  14FA  1683               	bsf	3,5	;RP0=1, select bank3
  1751  14FB  1703               	bsf	3,6	;RP1=1, select bank3
  1752  14FC  0844               	movf	USART_Init@BaudRate^(0+384),w
  1753  14FD  00C8               	movwf	??_USART_Init^(0+384)
  1754  14FE  0845               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1755  14FF  00C9               	movwf	(??_USART_Init^(0+384)+1)
  1756  1500  0846               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1757  1501  00CA               	movwf	(??_USART_Init^(0+384)+2)
  1758  1502  0847               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1759  1503  00CB               	movwf	(??_USART_Init^(0+384)+3)
  1760  1504  3004               	movlw	4
  1761  1505                     u3875:	
  1762  1505  1003               	clrc
  1763  1506  0DC8               	rlf	??_USART_Init^(0+384),f
  1764  1507  0DC9               	rlf	(??_USART_Init^(0+384)+1),f
  1765  1508  0DCA               	rlf	(??_USART_Init^(0+384)+2),f
  1766  1509  0DCB               	rlf	(??_USART_Init^(0+384)+3),f
  1767  150A  3EFF               	addlw	-1
  1768  150B  1D03               	skipz
  1769  150C  2D05               	goto	u3875
  1770  150D  084B               	movf	(??_USART_Init+3)^(0+384),w
  1771  150E  00B8               	movwf	(___aldiv@divisor+3)^(0+384)
  1772  150F  084A               	movf	(??_USART_Init+2)^(0+384),w
  1773  1510  00B7               	movwf	(___aldiv@divisor+2)^(0+384)
  1774  1511  0849               	movf	(??_USART_Init+1)^(0+384),w
  1775  1512  00B6               	movwf	(___aldiv@divisor+1)^(0+384)
  1776  1513  0848               	movf	??_USART_Init^(0+384),w
  1777  1514  00B5               	movwf	___aldiv@divisor^(0+384)
  1778  1515  3001               	movlw	1
  1779  1516  00BC               	movwf	(___aldiv@dividend+3)^(0+384)
  1780  1517  3019               	movlw	25
  1781  1518  00BB               	movwf	(___aldiv@dividend+2)^(0+384)
  1782  1519  3040               	movlw	64
  1783  151A  00BA               	movwf	(___aldiv@dividend+1)^(0+384)
  1784  151B  3000               	movlw	0
  1785  151C  00B9               	movwf	___aldiv@dividend^(0+384)
  1786  151D  120A  158A  201D   	fcall	___aldiv
  1787  1520  1683               	bsf	3,5	;RP0=1, select bank3
  1788  1521  1703               	bsf	3,6	;RP1=1, select bank3
  1789  1522  0835               	movf	?___aldiv^(0+384),w
  1790  1523  3EFF               	addlw	255
  1791  1524  1683               	bsf	3,5	;RP0=1, select bank1
  1792  1525  1303               	bcf	3,6	;RP1=0, select bank1
  1793  1526  0099               	movwf	25	;volatile
  1794                           
  1795                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1796  1527  1398               	bcf	24,7	;volatile
  1797                           
  1798                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1799  1528  1318               	bcf	24,6	;volatile
  1800                           
  1801                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1802  1529  1698               	bsf	24,5	;volatile
  1803                           
  1804                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1805  152A  1218               	bcf	24,4	;volatile
  1806                           
  1807                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1808  152B  1518               	bsf	24,2	;volatile
  1809                           
  1810                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1811  152C  1498               	bsf	24,1	;volatile
  1812                           
  1813                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1814  152D  1018               	bcf	24,0	;volatile
  1815                           
  1816                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1817  152E  1283               	bcf	3,5	;RP0=0, select bank0
  1818  152F  1303               	bcf	3,6	;RP1=0, select bank0
  1819  1530  1798               	bsf	24,7	;volatile
  1820                           
  1821                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1822  1531  1318               	bcf	24,6	;volatile
  1823                           
  1824                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1825  1532  1298               	bcf	24,5	;volatile
  1826                           
  1827                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1828  1533  1618               	bsf	24,4	;volatile
  1829                           
  1830                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1831  1534  1198               	bcf	24,3	;volatile
  1832                           
  1833                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1834  1535  1118               	bcf	24,2	;volatile
  1835                           
  1836                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1837  1536  1098               	bcf	24,1	;volatile
  1838                           
  1839                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1840  1537  1018               	bcf	24,0	;volatile
  1841                           
  1842                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1843  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1844  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1845  153A  120C               	bcf	12,4	;volatile
  1846                           
  1847                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1848  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1849  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1850  153D  120C               	bcf	12,4	;volatile
  1851                           
  1852                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1853  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1854  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1855  1540  168C               	bsf	12,5	;volatile
  1856                           
  1857                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1858  1541  1283               	bcf	3,5	;RP0=0, select bank0
  1859  1542  1303               	bcf	3,6	;RP1=0, select bank0
  1860  1543  128C               	bcf	12,5	;volatile
  1861  1544  0008               	return
  1862  1545                     __end_of_USART_Init:	
  1863                           
  1864                           	psect	text2
  1865  081D                     __ptext2:	
  1866 ;; *************** function ___aldiv *****************
  1867 ;; Defined at:
  1868 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  divisor         4    0[BANK3 ] long 
  1871 ;;  dividend        4    4[BANK3 ] long 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  quotient        4   11[BANK3 ] long 
  1874 ;;  sign            1   10[BANK3 ] unsigned char 
  1875 ;;  counter         1    9[BANK3 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  4    0[BANK3 ] long 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       8       0
  1886 ;;      Locals:         0       0       0       6       0
  1887 ;;      Temps:          0       0       0       1       0
  1888 ;;      Totals:         0       0       0      15       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_USART_Init
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___aldiv
  1901  081D                     ___aldiv:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1905  081D  1683               	bsf	3,5	;RP0=1, select bank3
  1906  081E  1703               	bsf	3,6	;RP1=1, select bank3
  1907  081F  01BF               	clrf	___aldiv@sign^(0+384)
  1908  0820  1FB8               	btfss	(___aldiv@divisor+3)^(0+384),7
  1909  0821  282F               	goto	l623
  1910  0822  09B5               	comf	___aldiv@divisor^(0+384),f
  1911  0823  09B6               	comf	(___aldiv@divisor+1)^(0+384),f
  1912  0824  09B7               	comf	(___aldiv@divisor+2)^(0+384),f
  1913  0825  09B8               	comf	(___aldiv@divisor+3)^(0+384),f
  1914  0826  0AB5               	incf	___aldiv@divisor^(0+384),f
  1915  0827  1903               	skipnz
  1916  0828  0AB6               	incf	(___aldiv@divisor+1)^(0+384),f
  1917  0829  1903               	skipnz
  1918  082A  0AB7               	incf	(___aldiv@divisor+2)^(0+384),f
  1919  082B  1903               	skipnz
  1920  082C  0AB8               	incf	(___aldiv@divisor+3)^(0+384),f
  1921  082D  01BF               	clrf	___aldiv@sign^(0+384)
  1922  082E  0ABF               	incf	___aldiv@sign^(0+384),f
  1923  082F                     l623:	
  1924  082F  1FBC               	btfss	(___aldiv@dividend+3)^(0+384),7
  1925  0830  2840               	goto	l3121
  1926  0831  09B9               	comf	___aldiv@dividend^(0+384),f
  1927  0832  09BA               	comf	(___aldiv@dividend+1)^(0+384),f
  1928  0833  09BB               	comf	(___aldiv@dividend+2)^(0+384),f
  1929  0834  09BC               	comf	(___aldiv@dividend+3)^(0+384),f
  1930  0835  0AB9               	incf	___aldiv@dividend^(0+384),f
  1931  0836  1903               	skipnz
  1932  0837  0ABA               	incf	(___aldiv@dividend+1)^(0+384),f
  1933  0838  1903               	skipnz
  1934  0839  0ABB               	incf	(___aldiv@dividend+2)^(0+384),f
  1935  083A  1903               	skipnz
  1936  083B  0ABC               	incf	(___aldiv@dividend+3)^(0+384),f
  1937  083C  3001               	movlw	1
  1938  083D  00BD               	movwf	??___aldiv^(0+384)
  1939  083E  083D               	movf	??___aldiv^(0+384),w
  1940  083F  06BF               	xorwf	___aldiv@sign^(0+384),f
  1941  0840                     l3121:	
  1942  0840  3000               	movlw	0
  1943  0841  00C3               	movwf	(___aldiv@quotient+3)^(0+384)
  1944  0842  3000               	movlw	0
  1945  0843  00C2               	movwf	(___aldiv@quotient+2)^(0+384)
  1946  0844  3000               	movlw	0
  1947  0845  00C1               	movwf	(___aldiv@quotient+1)^(0+384)
  1948  0846  3000               	movlw	0
  1949  0847  00C0               	movwf	___aldiv@quotient^(0+384)
  1950  0848  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1951  0849  0437               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1952  084A  0436               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1953  084B  0435               	iorwf	___aldiv@divisor^(0+384),w
  1954  084C  1903               	skipnz
  1955  084D  2895               	goto	l3143
  1956  084E  01BE               	clrf	___aldiv@counter^(0+384)
  1957  084F  0ABE               	incf	___aldiv@counter^(0+384),f
  1958  0850                     l3129:	
  1959  0850  1BB8               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1960  0851  2860               	goto	l3131
  1961  0852  3001               	movlw	1
  1962  0853  00BD               	movwf	??___aldiv^(0+384)
  1963  0854                     u3795:	
  1964  0854  1003               	clrc
  1965  0855  0DB5               	rlf	___aldiv@divisor^(0+384),f
  1966  0856  0DB6               	rlf	(___aldiv@divisor+1)^(0+384),f
  1967  0857  0DB7               	rlf	(___aldiv@divisor+2)^(0+384),f
  1968  0858  0DB8               	rlf	(___aldiv@divisor+3)^(0+384),f
  1969  0859  0BBD               	decfsz	??___aldiv^(0+384),f
  1970  085A  2854               	goto	u3795
  1971  085B  3001               	movlw	1
  1972  085C  00BD               	movwf	??___aldiv^(0+384)
  1973  085D  083D               	movf	??___aldiv^(0+384),w
  1974  085E  07BE               	addwf	___aldiv@counter^(0+384),f
  1975  085F  2850               	goto	l3129
  1976  0860                     l3131:	
  1977  0860  3001               	movlw	1
  1978  0861  00BD               	movwf	??___aldiv^(0+384)
  1979  0862                     u3815:	
  1980  0862  1003               	clrc
  1981  0863  0DC0               	rlf	___aldiv@quotient^(0+384),f
  1982  0864  0DC1               	rlf	(___aldiv@quotient+1)^(0+384),f
  1983  0865  0DC2               	rlf	(___aldiv@quotient+2)^(0+384),f
  1984  0866  0DC3               	rlf	(___aldiv@quotient+3)^(0+384),f
  1985  0867  0BBD               	decfsz	??___aldiv^(0+384),f
  1986  0868  2862               	goto	u3815
  1987  0869  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1988  086A  023C               	subwf	(___aldiv@dividend+3)^(0+384),w
  1989  086B  1D03               	skipz
  1990  086C  2877               	goto	u3825
  1991  086D  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  1992  086E  023B               	subwf	(___aldiv@dividend+2)^(0+384),w
  1993  086F  1D03               	skipz
  1994  0870  2877               	goto	u3825
  1995  0871  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  1996  0872  023A               	subwf	(___aldiv@dividend+1)^(0+384),w
  1997  0873  1D03               	skipz
  1998  0874  2877               	goto	u3825
  1999  0875  0835               	movf	___aldiv@divisor^(0+384),w
  2000  0876  0239               	subwf	___aldiv@dividend^(0+384),w
  2001  0877                     u3825:	
  2002  0877  1C03               	skipc
  2003  0878  2888               	goto	l3139
  2004  0879  0835               	movf	___aldiv@divisor^(0+384),w
  2005  087A  02B9               	subwf	___aldiv@dividend^(0+384),f
  2006  087B  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  2007  087C  1C03               	skipc
  2008  087D  0F36               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2009  087E  02BA               	subwf	(___aldiv@dividend+1)^(0+384),f
  2010  087F  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  2011  0880  1C03               	skipc
  2012  0881  0F37               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2013  0882  02BB               	subwf	(___aldiv@dividend+2)^(0+384),f
  2014  0883  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  2015  0884  1C03               	skipc
  2016  0885  0F38               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2017  0886  02BC               	subwf	(___aldiv@dividend+3)^(0+384),f
  2018  0887  1440               	bsf	___aldiv@quotient^(0+384),0
  2019  0888                     l3139:	
  2020  0888  3001               	movlw	1
  2021  0889                     u3835:	
  2022  0889  1003               	clrc
  2023  088A  0CB8               	rrf	(___aldiv@divisor+3)^(0+384),f
  2024  088B  0CB7               	rrf	(___aldiv@divisor+2)^(0+384),f
  2025  088C  0CB6               	rrf	(___aldiv@divisor+1)^(0+384),f
  2026  088D  0CB5               	rrf	___aldiv@divisor^(0+384),f
  2027  088E  3EFF               	addlw	-1
  2028  088F  1D03               	skipz
  2029  0890  2889               	goto	u3835
  2030  0891  3001               	movlw	1
  2031  0892  02BE               	subwf	___aldiv@counter^(0+384),f
  2032  0893  1D03               	btfss	3,2
  2033  0894  2860               	goto	l3131
  2034  0895                     l3143:	
  2035  0895  083F               	movf	___aldiv@sign^(0+384),w
  2036  0896  1903               	btfsc	3,2
  2037  0897  28A3               	goto	l3147
  2038  0898  09C0               	comf	___aldiv@quotient^(0+384),f
  2039  0899  09C1               	comf	(___aldiv@quotient+1)^(0+384),f
  2040  089A  09C2               	comf	(___aldiv@quotient+2)^(0+384),f
  2041  089B  09C3               	comf	(___aldiv@quotient+3)^(0+384),f
  2042  089C  0AC0               	incf	___aldiv@quotient^(0+384),f
  2043  089D  1903               	skipnz
  2044  089E  0AC1               	incf	(___aldiv@quotient+1)^(0+384),f
  2045  089F  1903               	skipnz
  2046  08A0  0AC2               	incf	(___aldiv@quotient+2)^(0+384),f
  2047  08A1  1903               	skipnz
  2048  08A2  0AC3               	incf	(___aldiv@quotient+3)^(0+384),f
  2049  08A3                     l3147:	
  2050  08A3  0843               	movf	(___aldiv@quotient+3)^(0+384),w
  2051  08A4  00B8               	movwf	(?___aldiv+3)^(0+384)
  2052  08A5  0842               	movf	(___aldiv@quotient+2)^(0+384),w
  2053  08A6  00B7               	movwf	(?___aldiv+2)^(0+384)
  2054  08A7  0841               	movf	(___aldiv@quotient+1)^(0+384),w
  2055  08A8  00B6               	movwf	(?___aldiv+1)^(0+384)
  2056  08A9  0840               	movf	___aldiv@quotient^(0+384),w
  2057  08AA  00B5               	movwf	?___aldiv^(0+384)
  2058  08AB  0008               	return
  2059  08AC                     __end_of___aldiv:	
  2060                           
  2061                           	psect	text3
  2062  12CF                     __ptext3:	
  2063 ;; *************** function _TIMER0_Set *****************
  2064 ;; Defined at:
  2065 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  contagens       1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  contagens       1    0[BANK3 ] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;		None               void
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       1       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         0       0       0       1       0
  2083 ;;Total ram usage:        1 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _TIMER0_Set
  2095  12CF                     _TIMER0_Set:	
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _TIMER0_Set: [wreg]
  2099                           ;TIMER0_Set@contagens stored from wreg
  2100  12CF  1683               	bsf	3,5	;RP0=1, select bank3
  2101  12D0  1703               	bsf	3,6	;RP1=1, select bank3
  2102  12D1  00B5               	movwf	TIMER0_Set@contagens^(0+384)
  2103                           
  2104                           ;timers.c: 22: TMR0 = contagens;
  2105  12D2  0835               	movf	TIMER0_Set@contagens^(0+384),w
  2106  12D3  1283               	bcf	3,5	;RP0=0, select bank0
  2107  12D4  1303               	bcf	3,6	;RP1=0, select bank0
  2108  12D5  0081               	movwf	1	;volatile
  2109  12D6  0008               	return
  2110  12D7                     __end_of_TIMER0_Set:	
  2111                           
  2112                           	psect	text4
  2113  12E9                     __ptext4:	
  2114 ;; *************** function _TIMER0_Init *****************
  2115 ;; Defined at:
  2116 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		None
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    5
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _TIMER0_Init
  2146  12E9                     _TIMER0_Init:	
  2147                           
  2148                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _TIMER0_Init: []
  2152  12E9  1683               	bsf	3,5	;RP0=1, select bank1
  2153  12EA  1303               	bcf	3,6	;RP1=0, select bank1
  2154  12EB  1281               	bcf	1,5	;volatile
  2155                           
  2156                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2157  12EC  1201               	bcf	1,4	;volatile
  2158                           
  2159                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2160  12ED  1181               	bcf	1,3	;volatile
  2161                           
  2162                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2163  12EE  1501               	bsf	1,2	;volatile
  2164                           
  2165                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2166  12EF  1481               	bsf	1,1	;volatile
  2167                           
  2168                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2169  12F0  1401               	bsf	1,0	;volatile
  2170                           
  2171                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2172  12F1  110B               	bcf	11,2	;volatile
  2173                           
  2174                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2175  12F2  168B               	bsf	11,5	;volatile
  2176  12F3  0008               	return
  2177  12F4                     __end_of_TIMER0_Init:	
  2178                           
  2179                           	psect	text5
  2180  144A                     __ptext5:	
  2181 ;; *************** function _PWM_Init *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    5
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _PWM_Init
  2213  144A                     _PWM_Init:	
  2214                           
  2215                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _PWM_Init: [wreg]
  2219  144A  1283               	bcf	3,5	;RP0=0, select bank0
  2220  144B  1303               	bcf	3,6	;RP1=0, select bank0
  2221  144C  1492               	bsf	18,1	;volatile
  2222                           
  2223                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2224  144D  1012               	bcf	18,0	;volatile
  2225                           
  2226                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2227  144E  1312               	bcf	18,6	;volatile
  2228                           
  2229                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2230  144F  1292               	bcf	18,5	;volatile
  2231                           
  2232                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2233  1450  1212               	bcf	18,4	;volatile
  2234                           
  2235                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2236  1451  1192               	bcf	18,3	;volatile
  2237                           
  2238                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2239  1452  1512               	bsf	18,2	;volatile
  2240                           
  2241                           ;pwm.c: 27: PR2 = 255;
  2242  1453  30FF               	movlw	255
  2243  1454  1683               	bsf	3,5	;RP0=1, select bank1
  2244  1455  1303               	bcf	3,6	;RP1=0, select bank1
  2245  1456  0092               	movwf	18	;volatile
  2246                           
  2247                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2248  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2249  1458  1303               	bcf	3,6	;RP1=0, select bank0
  2250  1459  1597               	bsf	23,3	;volatile
  2251                           
  2252                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2253  145A  1517               	bsf	23,2	;volatile
  2254                           
  2255                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2256  145B  1497               	bsf	23,1	;volatile
  2257                           
  2258                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2259  145C  1417               	bsf	23,0	;volatile
  2260                           
  2261                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2262  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2263  145E  1303               	bcf	3,6	;RP1=0, select bank1
  2264  145F  150C               	bsf	12,2	;volatile
  2265                           
  2266                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2267  1460  1283               	bcf	3,5	;RP0=0, select bank0
  2268  1461  1303               	bcf	3,6	;RP1=0, select bank0
  2269  1462  110C               	bcf	12,2	;volatile
  2270                           
  2271                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2272  1463  159D               	bsf	29,3	;volatile
  2273                           
  2274                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2275  1464  151D               	bsf	29,2	;volatile
  2276                           
  2277                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2278  1465  149D               	bsf	29,1	;volatile
  2279                           
  2280                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2281  1466  141D               	bsf	29,0	;volatile
  2282                           
  2283                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2284  1467  1683               	bsf	3,5	;RP0=1, select bank1
  2285  1468  1303               	bcf	3,6	;RP1=0, select bank1
  2286  1469  140D               	bsf	13,0	;volatile
  2287                           
  2288                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2289  146A  1283               	bcf	3,5	;RP0=0, select bank0
  2290  146B  1303               	bcf	3,6	;RP1=0, select bank0
  2291  146C  100D               	bcf	13,0	;volatile
  2292  146D  0008               	return
  2293  146E                     __end_of_PWM_Init:	
  2294                           
  2295                           	psect	text6
  2296  1429                     __ptext6:	
  2297 ;; *************** function _PWM_DutyCycle2 *****************
  2298 ;; Defined at:
  2299 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  valor           2    0[BANK3 ] int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       0       0       2       0
  2314 ;;      Locals:         0       0       0       0       0
  2315 ;;      Temps:          0       0       0       2       0
  2316 ;;      Totals:         0       0       0       4       0
  2317 ;;Total ram usage:        4 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    5
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _PWM_DutyCycle2
  2329  1429                     _PWM_DutyCycle2:	
  2330                           
  2331                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2335  1429  1683               	bsf	3,5	;RP0=1, select bank3
  2336  142A  1703               	bsf	3,6	;RP1=1, select bank3
  2337  142B  0836               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2338  142C  00B8               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2339  142D  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2340  142E  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2341  142F  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2342  1430  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2343  1431  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2344  1432  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2345  1433  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2346  1434  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2347  1435  0837               	movf	??_PWM_DutyCycle2^(0+384),w
  2348  1436  1283               	bcf	3,5	;RP0=0, select bank0
  2349  1437  1303               	bcf	3,6	;RP1=0, select bank0
  2350  1438  009B               	movwf	27	;volatile
  2351                           
  2352                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2353  1439  1683               	bsf	3,5	;RP0=1, select bank3
  2354  143A  1703               	bsf	3,6	;RP1=1, select bank3
  2355  143B  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2356  143C  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2357  143D  3003               	movlw	3
  2358  143E                     u3865:	
  2359  143E  1003               	clrc
  2360  143F  0DB7               	rlf	??_PWM_DutyCycle2^(0+384),f
  2361  1440  3EFF               	addlw	-1
  2362  1441  1D03               	skipz
  2363  1442  2C3E               	goto	u3865
  2364  1443  1003               	clrc
  2365  1444  0D37               	rlf	??_PWM_DutyCycle2^(0+384),w
  2366  1445  380C               	iorlw	12
  2367  1446  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1447  1303               	bcf	3,6	;RP1=0, select bank0
  2369  1448  009D               	movwf	29	;volatile
  2370  1449  0008               	return
  2371  144A                     __end_of_PWM_DutyCycle2:	
  2372                           
  2373                           	psect	text7
  2374  1408                     __ptext7:	
  2375 ;; *************** function _PWM_DutyCycle1 *****************
  2376 ;; Defined at:
  2377 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  valor           2    0[BANK3 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       2       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       2       0
  2394 ;;      Totals:         0       0       0       4       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _PWM_DutyCycle1
  2407  1408                     _PWM_DutyCycle1:	
  2408                           
  2409                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2413  1408  1683               	bsf	3,5	;RP0=1, select bank3
  2414  1409  1703               	bsf	3,6	;RP1=1, select bank3
  2415  140A  0836               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2416  140B  00B8               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2417  140C  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2418  140D  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2419  140E  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2420  140F  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2421  1410  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2422  1411  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2423  1412  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2424  1413  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2425  1414  0837               	movf	??_PWM_DutyCycle1^(0+384),w
  2426  1415  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1416  1303               	bcf	3,6	;RP1=0, select bank0
  2428  1417  0095               	movwf	21	;volatile
  2429                           
  2430                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2431  1418  1683               	bsf	3,5	;RP0=1, select bank3
  2432  1419  1703               	bsf	3,6	;RP1=1, select bank3
  2433  141A  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2434  141B  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2435  141C  3003               	movlw	3
  2436  141D                     u3905:	
  2437  141D  1003               	clrc
  2438  141E  0DB7               	rlf	??_PWM_DutyCycle1^(0+384),f
  2439  141F  3EFF               	addlw	-1
  2440  1420  1D03               	skipz
  2441  1421  2C1D               	goto	u3905
  2442  1422  1003               	clrc
  2443  1423  0D37               	rlf	??_PWM_DutyCycle1^(0+384),w
  2444  1424  380C               	iorlw	12
  2445  1425  1283               	bcf	3,5	;RP0=0, select bank0
  2446  1426  1303               	bcf	3,6	;RP1=0, select bank0
  2447  1427  0097               	movwf	23	;volatile
  2448  1428  0008               	return
  2449  1429                     __end_of_PWM_DutyCycle1:	
  2450                           
  2451                           	psect	text8
  2452  13C7                     __ptext8:	
  2453 ;; *************** function _LCD_WriteString *****************
  2454 ;; Defined at:
  2455 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  Str             1    wreg     PTR const unsigned char 
  2458 ;;		 -> STR_3(6), STR_2(17), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  Str             1    3[BANK3 ] PTR const unsigned char 
  2461 ;;		 -> STR_3(6), STR_2(17), 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       1       0
  2473 ;;      Temps:          0       0       0       1       0
  2474 ;;      Totals:         0       0       0       2       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    6
  2478 ;; This function calls:
  2479 ;;		_LCD_WriteData
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _LCD_WriteString
  2487  13C7                     _LCD_WriteString:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2491                           ;LCD_WriteString@Str stored from wreg
  2492  13C7  1683               	bsf	3,5	;RP0=1, select bank3
  2493  13C8  1703               	bsf	3,6	;RP1=1, select bank3
  2494  13C9  00B8               	movwf	LCD_WriteString@Str^(0+384)
  2495  13CA                     l3273:	
  2496                           ;lcd.c: 63: while(*Str != '\0')
  2497                           
  2498  13CA  0838               	movf	LCD_WriteString@Str^(0+384),w
  2499  13CB  0084               	movwf	4
  2500  13CC  160A  118A  2000  160A  118A  	fcall	stringdir
  2501  13D1  3800               	iorlw	0
  2502  13D2  1903               	btfsc	3,2
  2503  13D3  0008               	return
  2504                           
  2505                           ;lcd.c: 64: {
  2506                           ;lcd.c: 65: LCD_WriteData(*Str);
  2507  13D4  0838               	movf	LCD_WriteString@Str^(0+384),w
  2508  13D5  0084               	movwf	4
  2509  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  2510  13DB  160A  118A  233F  160A  118A  	fcall	_LCD_WriteData
  2511                           
  2512                           ;lcd.c: 66: Str++;
  2513  13E0  3001               	movlw	1
  2514  13E1  1683               	bsf	3,5	;RP0=1, select bank3
  2515  13E2  1703               	bsf	3,6	;RP1=1, select bank3
  2516  13E3  00B7               	movwf	??_LCD_WriteString^(0+384)
  2517  13E4  0837               	movf	??_LCD_WriteString^(0+384),w
  2518  13E5  07B8               	addwf	LCD_WriteString@Str^(0+384),f
  2519  13E6  2BCA               	goto	l3273
  2520  13E7                     __end_of_LCD_WriteString:	
  2521                           
  2522                           	psect	text9
  2523  133F                     __ptext9:	
  2524 ;; *************** function _LCD_WriteData *****************
  2525 ;; Defined at:
  2526 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  Byte            1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  Byte            1    1[BANK3 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       1       0
  2542 ;;      Temps:          0       0       0       1       0
  2543 ;;      Totals:         0       0       0       2       0
  2544 ;;Total ram usage:        2 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    5
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_LCD_WriteString
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _LCD_WriteData
  2556  133F                     _LCD_WriteData:	
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _LCD_WriteData: [wreg]
  2560                           ;LCD_WriteData@Byte stored from wreg
  2561  133F  1683               	bsf	3,5	;RP0=1, select bank3
  2562  1340  1703               	bsf	3,6	;RP1=1, select bank3
  2563  1341  00B6               	movwf	LCD_WriteData@Byte^(0+384)
  2564                           
  2565                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2566  1342  1283               	bcf	3,5	;RP0=0, select bank0
  2567  1343  1303               	bcf	3,6	;RP1=0, select bank0
  2568  1344  1409               	bsf	9,0	;volatile
  2569                           
  2570                           ;lcd.c: 51: PORTD = Byte;
  2571  1345  1683               	bsf	3,5	;RP0=1, select bank3
  2572  1346  1703               	bsf	3,6	;RP1=1, select bank3
  2573  1347  0836               	movf	LCD_WriteData@Byte^(0+384),w
  2574  1348  1283               	bcf	3,5	;RP0=0, select bank0
  2575  1349  1303               	bcf	3,6	;RP1=0, select bank0
  2576  134A  0088               	movwf	8	;volatile
  2577                           
  2578                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2579  134B  1489               	bsf	9,1	;volatile
  2580                           
  2581                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2582  134C  303D               	movlw	61
  2583  134D  1683               	bsf	3,5	;RP0=1, select bank3
  2584  134E  1703               	bsf	3,6	;RP1=1, select bank3
  2585  134F  00B5               	movwf	??_LCD_WriteData^(0+384)
  2586  1350                     u5857:	
  2587  1350  0BB5               	decfsz	??_LCD_WriteData^(0+384),f
  2588  1351  2B50               	goto	u5857
  2589                           
  2590                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2591  1352  1283               	bcf	3,5	;RP0=0, select bank0
  2592  1353  1303               	bcf	3,6	;RP1=0, select bank0
  2593  1354  1089               	bcf	9,1	;volatile
  2594  1355  0008               	return
  2595  1356                     __end_of_LCD_WriteData:	
  2596                           
  2597                           	psect	text10
  2598  160A                     __ptext10:	
  2599 ;; *************** function _LCD_Init *****************
  2600 ;; Defined at:
  2601 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          0       0       0       2       0
  2618 ;;      Totals:         0       0       0       2       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    6
  2622 ;; This function calls:
  2623 ;;		_LCD_WriteCmd
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _LCD_Init
  2631  160A                     _LCD_Init:	
  2632                           
  2633                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2637  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2638  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2639  160C  119F               	bcf	31,3	;volatile
  2640                           
  2641                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2642  160D  151F               	bsf	31,2	;volatile
  2643                           
  2644                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2645  160E  109F               	bcf	31,1	;volatile
  2646                           
  2647                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2648  160F  101F               	bcf	31,0	;volatile
  2649                           
  2650                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2651  1610  305A               	movlw	90
  2652  1611  1683               	bsf	3,5	;RP0=1, select bank3
  2653  1612  1703               	bsf	3,6	;RP1=1, select bank3
  2654  1613  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2655  1614  30C3               	movlw	195
  2656  1615  00B7               	movwf	??_LCD_Init^(0+384)
  2657  1616                     u5867:	
  2658  1616  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2659  1617  2E16               	goto	u5867
  2660  1618  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2661  1619  2E16               	goto	u5867
  2662                           
  2663                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2664  161A  3030               	movlw	48
  2665  161B  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2666                           
  2667                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2668  1620  3018               	movlw	24
  2669  1621  1683               	bsf	3,5	;RP0=1, select bank3
  2670  1622  1703               	bsf	3,6	;RP1=1, select bank3
  2671  1623  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2672  1624  30EF               	movlw	239
  2673  1625  00B7               	movwf	??_LCD_Init^(0+384)
  2674  1626                     u5877:	
  2675  1626  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2676  1627  2E26               	goto	u5877
  2677  1628  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2678  1629  2E26               	goto	u5877
  2679                           
  2680                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2681  162A  3030               	movlw	48
  2682  162B  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2683                           
  2684                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2685  1630  3099               	movlw	153
  2686  1631  1683               	bsf	3,5	;RP0=1, select bank3
  2687  1632  1703               	bsf	3,6	;RP1=1, select bank3
  2688  1633  00B7               	movwf	??_LCD_Init^(0+384)
  2689  1634                     u5887:	
  2690  1634  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2691  1635  2E34               	goto	u5887
  2692                           
  2693                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2694  1636  3030               	movlw	48
  2695  1637  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2696                           
  2697                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2698  163C  303D               	movlw	61
  2699  163D  1683               	bsf	3,5	;RP0=1, select bank3
  2700  163E  1703               	bsf	3,6	;RP1=1, select bank3
  2701  163F  00B7               	movwf	??_LCD_Init^(0+384)
  2702  1640                     u5897:	
  2703  1640  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2704  1641  2E40               	goto	u5897
  2705                           
  2706                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2707  1642  3038               	movlw	56
  2708  1643  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2709                           
  2710                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2711  1648  303D               	movlw	61
  2712  1649  1683               	bsf	3,5	;RP0=1, select bank3
  2713  164A  1703               	bsf	3,6	;RP1=1, select bank3
  2714  164B  00B7               	movwf	??_LCD_Init^(0+384)
  2715  164C                     u5907:	
  2716  164C  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2717  164D  2E4C               	goto	u5907
  2718                           
  2719                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2720  164E  3001               	movlw	1
  2721  164F  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2722                           
  2723                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2724  1654  300C               	movlw	12
  2725  1655  1683               	bsf	3,5	;RP0=1, select bank3
  2726  1656  1703               	bsf	3,6	;RP1=1, select bank3
  2727  1657  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2728  1658  30F7               	movlw	247
  2729  1659  00B7               	movwf	??_LCD_Init^(0+384)
  2730  165A                     u5917:	
  2731  165A  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2732  165B  2E5A               	goto	u5917
  2733  165C  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2734  165D  2E5A               	goto	u5917
  2735                           
  2736                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2737  165E  300C               	movlw	12
  2738  165F  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2739                           
  2740                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2741  1664  303D               	movlw	61
  2742  1665  1683               	bsf	3,5	;RP0=1, select bank3
  2743  1666  1703               	bsf	3,6	;RP1=1, select bank3
  2744  1667  00B7               	movwf	??_LCD_Init^(0+384)
  2745  1668                     u5927:	
  2746  1668  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2747  1669  2E68               	goto	u5927
  2748                           
  2749                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2750  166A  3006               	movlw	6
  2751  166B  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2752                           
  2753                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2754  1670  303D               	movlw	61
  2755  1671  1683               	bsf	3,5	;RP0=1, select bank3
  2756  1672  1703               	bsf	3,6	;RP1=1, select bank3
  2757  1673  00B7               	movwf	??_LCD_Init^(0+384)
  2758  1674                     u5937:	
  2759  1674  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2760  1675  2E74               	goto	u5937
  2761  1676  0008               	return
  2762  1677                     __end_of_LCD_Init:	
  2763                           
  2764                           	psect	text11
  2765  13A7                     __ptext11:	
  2766 ;; *************** function _LCD_Cursor *****************
  2767 ;; Defined at:
  2768 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  Row             1    wreg     unsigned char 
  2771 ;;  Col             1    0[BANK3 ] unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  Row             1    2[BANK3 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       1       0
  2784 ;;      Locals:         0       0       0       1       0
  2785 ;;      Temps:          0       0       0       1       0
  2786 ;;      Totals:         0       0       0       3       0
  2787 ;;Total ram usage:        3 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    5
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _LCD_Cursor
  2799  13A7                     _LCD_Cursor:	
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2803                           ;LCD_Cursor@Row stored from wreg
  2804  13A7  1683               	bsf	3,5	;RP0=1, select bank3
  2805  13A8  1703               	bsf	3,6	;RP1=1, select bank3
  2806  13A9  00B7               	movwf	LCD_Cursor@Row^(0+384)
  2807                           
  2808                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2809  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  2810  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  2811  13AC  1009               	bcf	9,0	;volatile
  2812                           
  2813                           ;lcd.c: 14: if (Row == 0)
  2814  13AD  1683               	bsf	3,5	;RP0=1, select bank3
  2815  13AE  1703               	bsf	3,6	;RP1=1, select bank3
  2816  13AF  08B7               	movf	LCD_Cursor@Row^(0+384),f
  2817  13B0  1D03               	skipz
  2818  13B1  2BB5               	goto	l3259
  2819                           
  2820                           ;lcd.c: 15: {
  2821                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2822  13B2  0835               	movf	LCD_Cursor@Col^(0+384),w
  2823  13B3  3E80               	addlw	128
  2824  13B4  2BB9               	goto	L1
  2825  13B5                     l3259:	
  2826                           ;lcd.c: 17: }
  2827                           
  2828                           
  2829                           ;lcd.c: 18: else
  2830                           ;lcd.c: 19: {
  2831                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2832  13B5  1683               	bsf	3,5	;RP0=1, select bank3
  2833  13B6  1703               	bsf	3,6	;RP1=1, select bank3
  2834  13B7  0835               	movf	LCD_Cursor@Col^(0+384),w
  2835  13B8  3EC0               	addlw	192
  2836  13B9                     L1:	
  2837  13B9  1283               	bcf	3,5	;RP0=0, select bank0
  2838  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  2839  13BB  0088               	movwf	8	;volatile
  2840                           
  2841                           ;lcd.c: 21: }
  2842                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2843  13BC  1489               	bsf	9,1	;volatile
  2844                           
  2845                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2846  13BD  303D               	movlw	61
  2847  13BE  1683               	bsf	3,5	;RP0=1, select bank3
  2848  13BF  1703               	bsf	3,6	;RP1=1, select bank3
  2849  13C0  00B6               	movwf	??_LCD_Cursor^(0+384)
  2850  13C1                     u5947:	
  2851  13C1  0BB6               	decfsz	??_LCD_Cursor^(0+384),f
  2852  13C2  2BC1               	goto	u5947
  2853                           
  2854                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2855  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  2856  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  2857  13C5  1089               	bcf	9,1	;volatile
  2858  13C6  0008               	return
  2859  13C7                     __end_of_LCD_Cursor:	
  2860                           
  2861                           	psect	text12
  2862  1493                     __ptext12:	
  2863 ;; *************** function _LCD_Clear *****************
  2864 ;; Defined at:
  2865 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       2       0
  2882 ;;      Totals:         0       0       0       2       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    6
  2886 ;; This function calls:
  2887 ;;		_LCD_WriteCmd
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _LCD_Clear
  2895  1493                     _LCD_Clear:	
  2896                           
  2897                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2901  1493  3001               	movlw	1
  2902  1494  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2903                           
  2904                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2905  1499  300C               	movlw	12
  2906  149A  1683               	bsf	3,5	;RP0=1, select bank3
  2907  149B  1703               	bsf	3,6	;RP1=1, select bank3
  2908  149C  00B8               	movwf	(??_LCD_Clear^(0+384)+1)
  2909  149D  30F7               	movlw	247
  2910  149E  00B7               	movwf	??_LCD_Clear^(0+384)
  2911  149F                     u5957:	
  2912  149F  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2913  14A0  2C9F               	goto	u5957
  2914  14A1  0BB8               	decfsz	(??_LCD_Clear^(0+384)+1),f
  2915  14A2  2C9F               	goto	u5957
  2916                           
  2917                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2918  14A3  300C               	movlw	12
  2919  14A4  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2920                           
  2921                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2922  14A9  303D               	movlw	61
  2923  14AA  1683               	bsf	3,5	;RP0=1, select bank3
  2924  14AB  1703               	bsf	3,6	;RP1=1, select bank3
  2925  14AC  00B7               	movwf	??_LCD_Clear^(0+384)
  2926  14AD                     u5967:	
  2927  14AD  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2928  14AE  2CAD               	goto	u5967
  2929                           
  2930                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2931  14AF  3006               	movlw	6
  2932  14B0  160A  118A  2328  160A  118A  	fcall	_LCD_WriteCmd
  2933                           
  2934                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2935  14B5  303D               	movlw	61
  2936  14B6  1683               	bsf	3,5	;RP0=1, select bank3
  2937  14B7  1703               	bsf	3,6	;RP1=1, select bank3
  2938  14B8  00B7               	movwf	??_LCD_Clear^(0+384)
  2939  14B9                     u5977:	
  2940  14B9  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2941  14BA  2CB9               	goto	u5977
  2942  14BB  0008               	return
  2943  14BC                     __end_of_LCD_Clear:	
  2944                           
  2945                           	psect	text13
  2946  1328                     __ptext13:	
  2947 ;; *************** function _LCD_WriteCmd *****************
  2948 ;; Defined at:
  2949 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  Byte            1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  Byte            1    1[BANK3 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       1       0
  2965 ;;      Temps:          0       0       0       1       0
  2966 ;;      Totals:         0       0       0       2       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_LCD_Clear
  2974 ;;		_LCD_Init
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _LCD_WriteCmd
  2980  1328                     _LCD_WriteCmd:	
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _LCD_WriteCmd: [wreg]
  2984                           ;LCD_WriteCmd@Byte stored from wreg
  2985  1328  1683               	bsf	3,5	;RP0=1, select bank3
  2986  1329  1703               	bsf	3,6	;RP1=1, select bank3
  2987  132A  00B6               	movwf	LCD_WriteCmd@Byte^(0+384)
  2988                           
  2989                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  2990  132B  1283               	bcf	3,5	;RP0=0, select bank0
  2991  132C  1303               	bcf	3,6	;RP1=0, select bank0
  2992  132D  1009               	bcf	9,0	;volatile
  2993                           
  2994                           ;lcd.c: 36: PORTD = Byte;
  2995  132E  1683               	bsf	3,5	;RP0=1, select bank3
  2996  132F  1703               	bsf	3,6	;RP1=1, select bank3
  2997  1330  0836               	movf	LCD_WriteCmd@Byte^(0+384),w
  2998  1331  1283               	bcf	3,5	;RP0=0, select bank0
  2999  1332  1303               	bcf	3,6	;RP1=0, select bank0
  3000  1333  0088               	movwf	8	;volatile
  3001                           
  3002                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3003  1334  1489               	bsf	9,1	;volatile
  3004                           
  3005                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3006  1335  303D               	movlw	61
  3007  1336  1683               	bsf	3,5	;RP0=1, select bank3
  3008  1337  1703               	bsf	3,6	;RP1=1, select bank3
  3009  1338  00B5               	movwf	??_LCD_WriteCmd^(0+384)
  3010  1339                     u5987:	
  3011  1339  0BB5               	decfsz	??_LCD_WriteCmd^(0+384),f
  3012  133A  2B39               	goto	u5987
  3013                           
  3014                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3015  133B  1283               	bcf	3,5	;RP0=0, select bank0
  3016  133C  1303               	bcf	3,6	;RP1=0, select bank0
  3017  133D  1089               	bcf	9,1	;volatile
  3018  133E  0008               	return
  3019  133F                     __end_of_LCD_WriteCmd:	
  3020                           
  3021                           	psect	text14
  3022  1302                     __ptext14:	
  3023 ;; *************** function _ADC_Init *****************
  3024 ;; Defined at:
  3025 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		None
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _ADC_Init
  3055  1302                     _ADC_Init:	
  3056                           
  3057                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _ADC_Init: []
  3061  1302  1683               	bsf	3,5	;RP0=1, select bank1
  3062  1303  1303               	bcf	3,6	;RP1=0, select bank1
  3063  1304  179F               	bsf	31,7	;volatile
  3064                           
  3065                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3066  1305  159F               	bsf	31,3	;volatile
  3067                           
  3068                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3069  1306  151F               	bsf	31,2	;volatile
  3070                           
  3071                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3072  1307  149F               	bsf	31,1	;volatile
  3073                           
  3074                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3075  1308  101F               	bcf	31,0	;volatile
  3076                           
  3077                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3078  1309  1283               	bcf	3,5	;RP0=0, select bank0
  3079  130A  1303               	bcf	3,6	;RP1=0, select bank0
  3080  130B  179F               	bsf	31,7	;volatile
  3081                           
  3082                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3083  130C  131F               	bcf	31,6	;volatile
  3084                           
  3085                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3086  130D  1683               	bsf	3,5	;RP0=1, select bank1
  3087  130E  1303               	bcf	3,6	;RP1=0, select bank1
  3088  130F  130C               	bcf	12,6	;volatile
  3089                           
  3090                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3091  1310  1283               	bcf	3,5	;RP0=0, select bank0
  3092  1311  1303               	bcf	3,6	;RP1=0, select bank0
  3093  1312  130C               	bcf	12,6	;volatile
  3094  1313  0008               	return
  3095  1314                     __end_of_ADC_Init:	
  3096                           
  3097                           	psect	text15
  3098  0E83                     __ptext15:	
  3099 ;; *************** function _ISR *****************
  3100 ;; Defined at:
  3101 ;;		line 312 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  byte            1   74[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         0       1       0       0       0
  3117 ;;      Temps:          0       6       0       0       0
  3118 ;;      Totals:         0       7       0       0       0
  3119 ;;Total ram usage:        7 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    4
  3122 ;; This function calls:
  3123 ;;		_Fuzzy
  3124 ;;		_USART_ReceiveChar
  3125 ;;		_USART_WriteString
  3126 ;;		___lwdiv
  3127 ;;		___wmul
  3128 ;;		_enviabuffer
  3129 ;;		i1_PWM_DutyCycle2
  3130 ;;		i1_TIMER0_Set
  3131 ;; This function is called by:
  3132 ;;		Interrupt level 1
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _ISR
  3138  0E83                     _ISR:	
  3139                           
  3140                           ;main.c: 315: if (PIR1bits.RCIF)
  3141  0E83  1E8C               	btfss	12,5	;volatile
  3142  0E84  2F8C               	goto	i1l4103
  3143                           
  3144                           ;main.c: 316: {
  3145                           ;main.c: 318: unsigned char byte = USART_ReceiveChar();
  3146  0E85  160A  118A  2356  120A  158A  	fcall	_USART_ReceiveChar
  3147  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0E8C  00E4               	movwf	??_ISR
  3150  0E8D  0864               	movf	??_ISR,w
  3151  0E8E  00EA               	movwf	ISR@byte
  3152                           
  3153                           ;main.c: 319: if (byte == '#')
  3154  0E8F  086A               	movf	ISR@byte,w
  3155  0E90  3A23               	xorlw	35
  3156  0E91  1D03               	skipz
  3157  0E92  2E9B               	goto	i1l4025
  3158                           
  3159                           ;main.c: 320: {
  3160                           ;main.c: 321: indicebuffer = 0;
  3161  0E93  01EB               	clrf	_indicebuffer
  3162  0E94  01EC               	clrf	_indicebuffer+1
  3163                           
  3164                           ;main.c: 322: lendo = 'S';
  3165  0E95  3053               	movlw	83
  3166  0E96  00E4               	movwf	??_ISR
  3167  0E97  0864               	movf	??_ISR,w
  3168  0E98  00EE               	movwf	_lendo
  3169                           
  3170                           ;main.c: 323: PORTBbits.RB0 = 1;
  3171  0E99  1406               	bsf	6,0	;volatile
  3172  0E9A  2EA5               	goto	i1l4029
  3173  0E9B                     i1l4025:	
  3174                           ;main.c: 325: } else if(lendo == 'S'){
  3175                           
  3176                           ;main.c: 324: bufferRecebido[indicebuffer] = byte;
  3177                           
  3178  0E9B  086E               	movf	_lendo,w
  3179  0E9C  3A53               	xorlw	83
  3180  0E9D  1D03               	skipz
  3181  0E9E  2EAD               	goto	i1l4031
  3182                           
  3183                           ;main.c: 326: indicebuffer++;
  3184  0E9F  3001               	movlw	1
  3185  0EA0  07EB               	addwf	_indicebuffer,f
  3186  0EA1  1803               	skipnc
  3187  0EA2  0AEC               	incf	_indicebuffer+1,f
  3188  0EA3  3000               	movlw	0
  3189  0EA4  07EC               	addwf	_indicebuffer+1,f
  3190  0EA5                     i1l4029:	
  3191                           
  3192                           ;main.c: 327: bufferRecebido[indicebuffer] = byte;
  3193  0EA5  086A               	movf	ISR@byte,w
  3194  0EA6  00E4               	movwf	??_ISR
  3195  0EA7  086B               	movf	_indicebuffer,w
  3196  0EA8  3E9D               	addlw	_bufferRecebido& (0+255)
  3197  0EA9  0084               	movwf	4
  3198  0EAA  0864               	movf	??_ISR,w
  3199  0EAB  1783               	bsf	3,7	;select IRP bank3
  3200  0EAC  0080               	movwf	0
  3201  0EAD                     i1l4031:	
  3202                           
  3203                           ;main.c: 328: }
  3204                           ;main.c: 330: if (indicebuffer >= 6 && lendo == 'S') {
  3205  0EAD  3000               	movlw	0
  3206  0EAE  026C               	subwf	_indicebuffer+1,w
  3207  0EAF  3006               	movlw	6
  3208  0EB0  1903               	skipnz
  3209  0EB1  026B               	subwf	_indicebuffer,w
  3210  0EB2  1C03               	skipc
  3211  0EB3  2EED               	goto	i1l4049
  3212  0EB4  086E               	movf	_lendo,w
  3213  0EB5  3A53               	xorlw	83
  3214  0EB6  1D03               	skipz
  3215  0EB7  2EED               	goto	i1l4049
  3216                           
  3217                           ;main.c: 331: indicebuffer = 0;
  3218  0EB8  01EB               	clrf	_indicebuffer
  3219  0EB9  01EC               	clrf	_indicebuffer+1
  3220                           
  3221                           ;main.c: 333: if (bufferRecebido[0] == '#' && bufferRecebido[1] == '$' && bufferRecebido
      +                          [2] == ':') {
  3222  0EBA  1683               	bsf	3,5	;RP0=1, select bank3
  3223  0EBB  1703               	bsf	3,6	;RP1=1, select bank3
  3224  0EBC  081D               	movf	_bufferRecebido^(0+384),w
  3225  0EBD  3A23               	xorlw	35
  3226  0EBE  1D03               	skipz
  3227  0EBF  2EED               	goto	i1l4049
  3228  0EC0  081E               	movf	(_bufferRecebido^(0+384)+1),w
  3229  0EC1  3A24               	xorlw	36
  3230  0EC2  1D03               	skipz
  3231  0EC3  2EED               	goto	i1l4049
  3232  0EC4  081F               	movf	(_bufferRecebido^(0+384)+2),w
  3233  0EC5  3A3A               	xorlw	58
  3234  0EC6  1D03               	skipz
  3235  0EC7  2EED               	goto	i1l4049
  3236                           
  3237                           ;main.c: 335: antigoUI = 0;
  3238  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0ECA  01CD               	clrf	_antigoUI^(0+128)
  3241  0ECB  01CE               	clrf	(_antigoUI+1)^(0+128)
  3242                           
  3243                           ;main.c: 336: deltaV = 0;
  3244  0ECC  01D3               	clrf	_deltaV^(0+128)
  3245  0ECD  01D4               	clrf	(_deltaV+1)^(0+128)
  3246                           
  3247                           ;main.c: 337: PORTBbits.RB2 = 1;
  3248  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0ED0  1506               	bsf	6,2	;volatile
  3251                           
  3252                           ;main.c: 339: setpointUI = (bufferRecebido[3] << 8) + (bufferRecebido[4]);
  3253  0ED1  1683               	bsf	3,5	;RP0=1, select bank3
  3254  0ED2  1703               	bsf	3,6	;RP1=1, select bank3
  3255  0ED3  0820               	movf	(_bufferRecebido^(0+384)+3),w
  3256  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0ED6  00E4               	movwf	??_ISR
  3259  0ED7  01E5               	clrf	??_ISR+1
  3260  0ED8  0864               	movf	??_ISR,w
  3261  0ED9  00E5               	movwf	??_ISR+1
  3262  0EDA  01E4               	clrf	??_ISR
  3263  0EDB  1683               	bsf	3,5	;RP0=1, select bank3
  3264  0EDC  1703               	bsf	3,6	;RP1=1, select bank3
  3265  0EDD  0821               	movf	(_bufferRecebido^(0+384)+4),w
  3266  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0EE0  0764               	addwf	??_ISR,w
  3269  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  3271  0EE3  00D9               	movwf	_setpointUI^(0+128)
  3272  0EE4  3000               	movlw	0
  3273  0EE5  1803               	skipnc
  3274  0EE6  3001               	movlw	1
  3275  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0EE9  0765               	addwf	??_ISR+1,w
  3278  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3279  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3280  0EEC  00DA               	movwf	(_setpointUI+1)^(0+128)
  3281  0EED                     i1l4049:	
  3282                           
  3283                           ;main.c: 349: }
  3284                           ;main.c: 350: }
  3285                           ;main.c: 353: if (USART_ReceiveChar() == '0' && lendo == 'N')
  3286  0EED  160A  118A  2356  120A  158A  	fcall	_USART_ReceiveChar
  3287  0EF2  3A30               	xorlw	48
  3288  0EF3  1D03               	skipz
  3289  0EF4  2F11               	goto	i1l4061
  3290  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0EF7  086E               	movf	_lendo,w
  3293  0EF8  3A4E               	xorlw	78
  3294  0EF9  1D03               	skipz
  3295  0EFA  2F11               	goto	i1l4061
  3296                           
  3297                           ;main.c: 354: {
  3298                           ;main.c: 355: USART_WriteString("\n\rfreio\n\r");
  3299  0EFB  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3300  0EFC  120A  158A  2001  120A  158A  	fcall	_USART_WriteString
  3301                           
  3302                           ;main.c: 357: PWM_DutyCycle2(0);
  3303  0F01  3000               	movlw	0
  3304  0F02  00F0               	movwf	i1PWM_DutyCycle2@valor
  3305  0F03  3000               	movlw	0
  3306  0F04  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3307  0F05  160A  118A  236E  120A  158A  	fcall	i1_PWM_DutyCycle2
  3308                           
  3309                           ;main.c: 358: cruzeiroSet = 'N';
  3310  0F0A  304E               	movlw	78
  3311  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0F0D  00E4               	movwf	??_ISR
  3314  0F0E  0864               	movf	??_ISR,w
  3315  0F0F  00ED               	movwf	_cruzeiroSet
  3316                           
  3317                           ;main.c: 359: return;
  3318  0F10  2FF5               	goto	i1l201
  3319  0F11                     i1l4061:	
  3320                           
  3321                           ;main.c: 360: }
  3322                           ;main.c: 364: if((USART_ReceiveChar() == 'S' || cruzeiroSet == 'S') && (lendo == 'N'))
  3323  0F11  160A  118A  2356  120A  158A  	fcall	_USART_ReceiveChar
  3324  0F16  3A53               	xorlw	83
  3325  0F17  1903               	skipnz
  3326  0F18  2F1F               	goto	i1l4065
  3327  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0F1B  086D               	movf	_cruzeiroSet,w
  3330  0F1C  3A53               	xorlw	83
  3331  0F1D  1D03               	skipz
  3332  0F1E  2F25               	goto	i1l4071
  3333  0F1F                     i1l4065:	
  3334  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0F21  086E               	movf	_lendo,w
  3337  0F22  3A4E               	xorlw	78
  3338  0F23  1903               	btfsc	3,2
  3339  0F24  2F58               	goto	i1l4087
  3340  0F25                     i1l4071:	
  3341                           ;main.c: 369: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'S' && lendo == 'N')
  3342                           
  3343                           ;main.c: 368: cruzeiroSet = 'S';
  3344                           
  3345                           ;main.c: 367: cruzeiroVel = setpointUI;
  3346                           
  3347                           ;main.c: 365: {
  3348                           ;main.c: 366: setpointUI = antigoUI;
  3349                           
  3350  0F25  160A  118A  2356  120A  158A  	fcall	_USART_ReceiveChar
  3351  0F2A  3A52               	xorlw	82
  3352  0F2B  1D03               	skipz
  3353  0F2C  2F46               	goto	i1l4081
  3354  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0F2F  086D               	movf	_cruzeiroSet,w
  3357  0F30  3A53               	xorlw	83
  3358  0F31  1D03               	skipz
  3359  0F32  2F46               	goto	i1l4081
  3360  0F33  086E               	movf	_lendo,w
  3361  0F34  3A4E               	xorlw	78
  3362  0F35  1D03               	skipz
  3363  0F36  2F46               	goto	i1l4081
  3364                           
  3365                           ;main.c: 370: {
  3366                           ;main.c: 371: setpointUI += 150;
  3367  0F37  3096               	movlw	150
  3368  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  3369  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  3370  0F3A  07D9               	addwf	_setpointUI^(0+128),f
  3371  0F3B  1803               	skipnc
  3372  0F3C  0ADA               	incf	(_setpointUI+1)^(0+128),f
  3373  0F3D  3000               	movlw	0
  3374  0F3E  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3375                           
  3376                           ;main.c: 372: cruzeiroVel = setpointUI;
  3377  0F3F  085A               	movf	(_setpointUI+1)^(0+128),w
  3378  0F40  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3379  0F41  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3380  0F42  0859               	movf	_setpointUI^(0+128),w
  3381  0F43  01D1               	clrf	_cruzeiroVel^(0+128)
  3382  0F44  07D1               	addwf	_cruzeiroVel^(0+128),f
  3383                           
  3384                           ;main.c: 373: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'N' && lendo == 'N')
  3385  0F45  2F6C               	goto	i1l4091
  3386  0F46                     i1l4081:	
  3387  0F46  160A  118A  2356  120A  158A  	fcall	_USART_ReceiveChar
  3388  0F4B  3A52               	xorlw	82
  3389  0F4C  1D03               	skipz
  3390  0F4D  2F6C               	goto	i1l4091
  3391  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3393  0F50  086D               	movf	_cruzeiroSet,w
  3394  0F51  3A4E               	xorlw	78
  3395  0F52  1D03               	skipz
  3396  0F53  2F6C               	goto	i1l4091
  3397  0F54  086E               	movf	_lendo,w
  3398  0F55  3A4E               	xorlw	78
  3399  0F56  1D03               	skipz
  3400  0F57  2F6C               	goto	i1l4091
  3401  0F58                     i1l4087:	
  3402                           
  3403                           ;main.c: 374: {
  3404                           ;main.c: 375: setpointUI = antigoUI;
  3405  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  3406  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  3407  0F5A  084E               	movf	(_antigoUI+1)^(0+128),w
  3408  0F5B  01DA               	clrf	(_setpointUI+1)^(0+128)
  3409  0F5C  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3410  0F5D  084D               	movf	_antigoUI^(0+128),w
  3411  0F5E  01D9               	clrf	_setpointUI^(0+128)
  3412  0F5F  07D9               	addwf	_setpointUI^(0+128),f
  3413                           
  3414                           ;main.c: 376: cruzeiroVel = setpointUI;
  3415  0F60  085A               	movf	(_setpointUI+1)^(0+128),w
  3416  0F61  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3417  0F62  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3418  0F63  0859               	movf	_setpointUI^(0+128),w
  3419  0F64  01D1               	clrf	_cruzeiroVel^(0+128)
  3420  0F65  07D1               	addwf	_cruzeiroVel^(0+128),f
  3421                           
  3422                           ;main.c: 377: cruzeiroSet = 'S';
  3423  0F66  3053               	movlw	83
  3424  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0F69  00E4               	movwf	??_ISR
  3427  0F6A  0864               	movf	??_ISR,w
  3428  0F6B  00ED               	movwf	_cruzeiroSet
  3429  0F6C                     i1l4091:	
  3430                           
  3431                           ;main.c: 378: }
  3432                           ;main.c: 381: if (lendo == 'N')
  3433  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0F6E  086E               	movf	_lendo,w
  3436  0F6F  3A4E               	xorlw	78
  3437  0F70  1D03               	skipz
  3438  0F71  2F7F               	goto	i1l4097
  3439                           
  3440                           ;main.c: 382: {
  3441                           ;main.c: 383: Fuzzy();
  3442  0F72  120A  158A  20AC  120A  158A  	fcall	_Fuzzy
  3443                           
  3444                           ;main.c: 384: antigoUI = setpointUI;
  3445  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  3447  0F79  085A               	movf	(_setpointUI+1)^(0+128),w
  3448  0F7A  01CE               	clrf	(_antigoUI+1)^(0+128)
  3449  0F7B  07CE               	addwf	(_antigoUI+1)^(0+128),f
  3450  0F7C  0859               	movf	_setpointUI^(0+128),w
  3451  0F7D  01CD               	clrf	_antigoUI^(0+128)
  3452  0F7E  07CD               	addwf	_antigoUI^(0+128),f
  3453  0F7F                     i1l4097:	
  3454                           
  3455                           ;main.c: 385: }
  3456                           ;main.c: 388: if(lendo == 'N')
  3457  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0F80  086E               	movf	_lendo,w
  3459  0F81  3A4E               	xorlw	78
  3460  0F82  1D03               	skipz
  3461  0F83  2F89               	goto	i1l4101
  3462                           
  3463                           ;main.c: 389: {
  3464                           ;main.c: 390: enviabuffer();
  3465  0F84  160A  118A  2677  120A  158A  	fcall	_enviabuffer
  3466  0F89                     i1l4101:	
  3467                           
  3468                           ;main.c: 391: }
  3469                           ;main.c: 393: PIR1bits.RCIF = 0;
  3470  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0F8B  128C               	bcf	12,5	;volatile
  3473  0F8C                     i1l4103:	
  3474                           
  3475                           ;main.c: 394: }
  3476                           ;main.c: 397: if (PIR1bits.ADIF)
  3477  0F8C  1B0C               	btfsc	12,6	;volatile
  3478                           
  3479                           ;main.c: 398: {
  3480                           ;main.c: 402: PIR1bits.ADIF = 0;
  3481  0F8D  130C               	bcf	12,6	;volatile
  3482                           
  3483                           ;main.c: 403: }
  3484                           ;main.c: 407: if (INTCONbits.T0IF)
  3485  0F8E  1D0B               	btfss	11,2	;volatile
  3486  0F8F  2FF1               	goto	i1l4129
  3487                           
  3488                           ;main.c: 408: {
  3489                           ;main.c: 410: TIMER0_Set(238);
  3490  0F90  30EE               	movlw	238
  3491  0F91  160A  118A  22C1  120A  158A  	fcall	i1_TIMER0_Set
  3492                           
  3493                           ;main.c: 413: if (contagens_tm0 < 499)
  3494  0F96  3001               	movlw	1
  3495  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  3496  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  3497  0F99  0250               	subwf	(_contagens_tm0+1)^(0+128),w
  3498  0F9A  30F3               	movlw	243
  3499  0F9B  1903               	skipnz
  3500  0F9C  024F               	subwf	_contagens_tm0^(0+128),w
  3501  0F9D  1803               	skipnc
  3502  0F9E  2FA9               	goto	i1l4115
  3503                           
  3504                           ;main.c: 414: {
  3505                           ;main.c: 416: contagens_tm0++;
  3506  0F9F  3001               	movlw	1
  3507  0FA0  07CF               	addwf	_contagens_tm0^(0+128),f
  3508  0FA1  1803               	skipnc
  3509  0FA2  0AD0               	incf	(_contagens_tm0+1)^(0+128),f
  3510  0FA3  3000               	movlw	0
  3511  0FA4  07D0               	addwf	(_contagens_tm0+1)^(0+128),f
  3512                           
  3513                           ;main.c: 419: PORTBbits.RB6 = 1;
  3514  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0FA7  1706               	bsf	6,6	;volatile
  3517                           
  3518                           ;main.c: 420: }
  3519  0FA8  2FF0               	goto	i1l4127
  3520  0FA9                     i1l4115:	
  3521                           
  3522                           ;main.c: 421: else
  3523                           ;main.c: 422: {
  3524                           ;main.c: 424: contagens_tm0 = 0;
  3525  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0FAB  01CF               	clrf	_contagens_tm0^(0+128)
  3528  0FAC  01D0               	clrf	(_contagens_tm0+1)^(0+128)
  3529                           
  3530                           ;main.c: 427: pulsos = (TMR1H << 8) + TMR1L;
  3531  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0FAF  080F               	movf	15,w	;volatile
  3534  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3536  0FB2  01D6               	clrf	(_pulsos+1)^(0+128)
  3537  0FB3  07D6               	addwf	(_pulsos+1)^(0+128),f
  3538  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0FB6  080E               	movf	14,w	;volatile
  3541  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  3543  0FB9  01D5               	clrf	_pulsos^(0+128)
  3544  0FBA  07D5               	addwf	_pulsos^(0+128),f
  3545                           
  3546                           ;main.c: 428: rpm = ((pulsos / pas_cooler) * 120);
  3547  0FBB  0860               	movf	(_pas_cooler+1)^(0+128),w
  3548  0FBC  01F1               	clrf	___lwdiv@divisor+1
  3549  0FBD  07F1               	addwf	___lwdiv@divisor+1,f
  3550  0FBE  085F               	movf	_pas_cooler^(0+128),w
  3551  0FBF  01F0               	clrf	___lwdiv@divisor
  3552  0FC0  07F0               	addwf	___lwdiv@divisor,f
  3553  0FC1  0856               	movf	(_pulsos+1)^(0+128),w
  3554  0FC2  01F3               	clrf	___lwdiv@dividend+1
  3555  0FC3  07F3               	addwf	___lwdiv@dividend+1,f
  3556  0FC4  0855               	movf	_pulsos^(0+128),w
  3557  0FC5  01F2               	clrf	___lwdiv@dividend
  3558  0FC6  07F2               	addwf	___lwdiv@dividend,f
  3559  0FC7  160A  118A  24BC  120A  158A  	fcall	___lwdiv
  3560  0FCC  0871               	movf	?___lwdiv+1,w
  3561  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3563  0FCF  01BB               	clrf	___wmul@multiplier+1
  3564  0FD0  07BB               	addwf	___wmul@multiplier+1,f
  3565  0FD1  0870               	movf	?___lwdiv,w
  3566  0FD2  01BA               	clrf	___wmul@multiplier
  3567  0FD3  07BA               	addwf	___wmul@multiplier,f
  3568  0FD4  3078               	movlw	120
  3569  0FD5  00BC               	movwf	___wmul@multiplicand
  3570  0FD6  3000               	movlw	0
  3571  0FD7  00BD               	movwf	___wmul@multiplicand+1
  3572  0FD8  160A  118A  246E  120A  158A  	fcall	___wmul
  3573  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0FDF  083B               	movf	?___wmul+1,w
  3576  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0FE2  01D8               	clrf	(_rpm+1)^(0+128)
  3579  0FE3  07D8               	addwf	(_rpm+1)^(0+128),f
  3580  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0FE6  083A               	movf	?___wmul,w
  3583  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3584  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3585  0FE9  01D7               	clrf	_rpm^(0+128)
  3586  0FEA  07D7               	addwf	_rpm^(0+128),f
  3587                           
  3588                           ;main.c: 435: TMR1L = 0x00;
  3589  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0FED  018E               	clrf	14	;volatile
  3592                           
  3593                           ;main.c: 436: TMR1H = 0x00;
  3594  0FEE  018F               	clrf	15	;volatile
  3595                           
  3596                           ;main.c: 439: PORTBbits.RB6 = 0;
  3597  0FEF  1306               	bcf	6,6	;volatile
  3598  0FF0                     i1l4127:	
  3599                           
  3600                           ;main.c: 440: }
  3601                           ;main.c: 443: INTCONbits.T0IF = 0;
  3602  0FF0  110B               	bcf	11,2	;volatile
  3603  0FF1                     i1l4129:	
  3604                           
  3605                           ;main.c: 444: }
  3606                           ;main.c: 447: if (PIR1bits.TMR1IF)
  3607  0FF1  180C               	btfsc	12,0	;volatile
  3608                           
  3609                           ;main.c: 448: {
  3610                           ;main.c: 452: PIR1bits.TMR1IF = 0;
  3611  0FF2  100C               	bcf	12,0	;volatile
  3612                           
  3613                           ;main.c: 453: }
  3614                           ;main.c: 456: if (PIR1bits.SSPIF)
  3615  0FF3  198C               	btfsc	12,3	;volatile
  3616                           
  3617                           ;main.c: 457: {
  3618                           ;main.c: 461: PIR1bits.SSPIF = 0;
  3619  0FF4  118C               	bcf	12,3	;volatile
  3620  0FF5                     i1l201:	
  3621  0FF5  0869               	movf	??_ISR+5,w
  3622  0FF6  00FF               	movwf	127
  3623  0FF7  0868               	movf	??_ISR+4,w
  3624  0FF8  008A               	movwf	10
  3625  0FF9  0867               	movf	??_ISR+3,w
  3626  0FFA  0084               	movwf	4
  3627  0FFB  0E66               	swapf	(??_ISR+2)^0,w
  3628  0FFC  0083               	movwf	3
  3629  0FFD  0EFE               	swapf	126,f
  3630  0FFE  0E7E               	swapf	126,w
  3631  0FFF  0009               	retfie
  3632  1000                     __end_of_ISR:	
  3633                           
  3634                           	psect	intentry
  3635  0004                     __pintentry:	
  3636                           ;incstack = 0
  3637                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3638                           
  3639  0004                     interrupt_function:	
  3640  007E                     saved_w	set	btemp
  3641  0004  00FE               	movwf	btemp
  3642  0005  0E03               	swapf	3,w
  3643  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0008  00E6               	movwf	??_ISR+2
  3646  0009  0804               	movf	4,w
  3647  000A  00E7               	movwf	??_ISR+3
  3648  000B  080A               	movf	10,w
  3649  000C  00E8               	movwf	??_ISR+4
  3650  000D  087F               	movf	btemp+1,w
  3651  000E  00E9               	movwf	??_ISR+5
  3652  000F  120A  158A  2E83   	ljmp	_ISR
  3653                           
  3654                           	psect	text16
  3655  12C1                     __ptext16:	
  3656 ;; *************** function i1_TIMER0_Set *****************
  3657 ;; Defined at:
  3658 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  contagens       1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  contagens       1    0[COMMON] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3672 ;;      Params:         0       0       0       0       0
  3673 ;;      Locals:         1       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         1       0       0       0       0
  3676 ;;Total ram usage:        1 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_ISR
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function i1_TIMER0_Set
  3687  12C1                     i1_TIMER0_Set:	
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in i1_TIMER0_Set: [wreg]
  3691                           ;i1TIMER0_Set@contagens stored from wreg
  3692  12C1  00F0               	movwf	i1TIMER0_Set@contagens
  3693                           
  3694                           ;timers.c: 22: TMR0 = contagens;
  3695  12C2  0870               	movf	i1TIMER0_Set@contagens,w
  3696  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  3697  12C4  1303               	bcf	3,6	;RP1=0, select bank0
  3698  12C5  0081               	movwf	1	;volatile
  3699  12C6  0008               	return
  3700  12C7                     __end_ofi1_TIMER0_Set:	
  3701                           
  3702                           	psect	text17
  3703  1677                     __ptext17:	
  3704 ;; *************** function _enviabuffer *****************
  3705 ;; Defined at:
  3706 ;;		line 122 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  index           1    3[COMMON] unsigned char 
  3711 ;;  checksum        1    2[COMMON] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;		None               void
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         2       0       0       0       0
  3723 ;;      Temps:          1       0       0       0       0
  3724 ;;      Totals:         3       0       0       0       0
  3725 ;;Total ram usage:        3 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    1
  3728 ;; This function calls:
  3729 ;;		_USART_WriteChar
  3730 ;; This function is called by:
  3731 ;;		_ISR
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _enviabuffer
  3737  1677                     _enviabuffer:	
  3738                           
  3739                           ;main.c: 125: buffer[0] = '#';
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _enviabuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3743  1677  3023               	movlw	35
  3744  1678  00F1               	movwf	??_enviabuffer
  3745  1679  0871               	movf	??_enviabuffer,w
  3746  167A  1683               	bsf	3,5	;RP0=1, select bank3
  3747  167B  1703               	bsf	3,6	;RP1=1, select bank3
  3748  167C  0090               	movwf	_buffer^(0+384)
  3749                           
  3750                           ;main.c: 126: buffer[1] = '$';
  3751  167D  3024               	movlw	36
  3752  167E  00F1               	movwf	??_enviabuffer
  3753  167F  0871               	movf	??_enviabuffer,w
  3754  1680  0091               	movwf	(_buffer^(0+384)+1)
  3755                           
  3756                           ;main.c: 127: buffer[2] = ':';
  3757  1681  303A               	movlw	58
  3758  1682  00F1               	movwf	??_enviabuffer
  3759  1683  0871               	movf	??_enviabuffer,w
  3760  1684  0092               	movwf	(_buffer^(0+384)+2)
  3761                           
  3762                           ;main.c: 131: buffer[3] = (rpm >> 8) & 0xFF;
  3763  1685  1683               	bsf	3,5	;RP0=1, select bank1
  3764  1686  1303               	bcf	3,6	;RP1=0, select bank1
  3765  1687  0858               	movf	(_rpm+1)^(0+128),w
  3766  1688  00F1               	movwf	??_enviabuffer
  3767  1689  0871               	movf	??_enviabuffer,w
  3768  168A  1683               	bsf	3,5	;RP0=1, select bank3
  3769  168B  1703               	bsf	3,6	;RP1=1, select bank3
  3770  168C  0093               	movwf	(_buffer^(0+384)+3)
  3771                           
  3772                           ;main.c: 132: buffer[4] = rpm & 0xFF;
  3773  168D  1683               	bsf	3,5	;RP0=1, select bank1
  3774  168E  1303               	bcf	3,6	;RP1=0, select bank1
  3775  168F  0857               	movf	_rpm^(0+128),w
  3776  1690  00F1               	movwf	??_enviabuffer
  3777  1691  0871               	movf	??_enviabuffer,w
  3778  1692  1683               	bsf	3,5	;RP0=1, select bank3
  3779  1693  1703               	bsf	3,6	;RP1=1, select bank3
  3780  1694  0094               	movwf	(_buffer^(0+384)+4)
  3781                           
  3782                           ;main.c: 133: buffer[5] = 'V';
  3783  1695  3056               	movlw	86
  3784  1696  00F1               	movwf	??_enviabuffer
  3785  1697  0871               	movf	??_enviabuffer,w
  3786  1698  0095               	movwf	(_buffer^(0+384)+5)
  3787                           
  3788                           ;main.c: 136: buffer[6] = (setpointUI >> 8) & 0xFF;
  3789  1699  1683               	bsf	3,5	;RP0=1, select bank1
  3790  169A  1303               	bcf	3,6	;RP1=0, select bank1
  3791  169B  085A               	movf	(_setpointUI+1)^(0+128),w
  3792  169C  00F1               	movwf	??_enviabuffer
  3793  169D  0871               	movf	??_enviabuffer,w
  3794  169E  1683               	bsf	3,5	;RP0=1, select bank3
  3795  169F  1703               	bsf	3,6	;RP1=1, select bank3
  3796  16A0  0096               	movwf	(_buffer^(0+384)+6)
  3797                           
  3798                           ;main.c: 137: buffer[7] = setpointUI & 0xFF;
  3799  16A1  1683               	bsf	3,5	;RP0=1, select bank1
  3800  16A2  1303               	bcf	3,6	;RP1=0, select bank1
  3801  16A3  0859               	movf	_setpointUI^(0+128),w
  3802  16A4  00F1               	movwf	??_enviabuffer
  3803  16A5  0871               	movf	??_enviabuffer,w
  3804  16A6  1683               	bsf	3,5	;RP0=1, select bank3
  3805  16A7  1703               	bsf	3,6	;RP1=1, select bank3
  3806  16A8  0097               	movwf	(_buffer^(0+384)+7)
  3807                           
  3808                           ;main.c: 138: buffer[8] = 'S';
  3809  16A9  3053               	movlw	83
  3810  16AA  00F1               	movwf	??_enviabuffer
  3811  16AB  0871               	movf	??_enviabuffer,w
  3812  16AC  0098               	movwf	(_buffer^(0+384)+8)
  3813                           
  3814                           ;main.c: 141: buffer[9] = (deltaV >> 8) & 0xFF;
  3815  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  3816  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  3817  16AF  0854               	movf	(_deltaV+1)^(0+128),w
  3818  16B0  00F1               	movwf	??_enviabuffer
  3819  16B1  0871               	movf	??_enviabuffer,w
  3820  16B2  1683               	bsf	3,5	;RP0=1, select bank3
  3821  16B3  1703               	bsf	3,6	;RP1=1, select bank3
  3822  16B4  0099               	movwf	(_buffer^(0+384)+9)
  3823                           
  3824                           ;main.c: 142: buffer[10] = deltaV & 0xFF;
  3825  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  3826  16B6  1303               	bcf	3,6	;RP1=0, select bank1
  3827  16B7  0853               	movf	_deltaV^(0+128),w
  3828  16B8  00F1               	movwf	??_enviabuffer
  3829  16B9  0871               	movf	??_enviabuffer,w
  3830  16BA  1683               	bsf	3,5	;RP0=1, select bank3
  3831  16BB  1703               	bsf	3,6	;RP1=1, select bank3
  3832  16BC  009A               	movwf	(_buffer^(0+384)+10)
  3833                           
  3834                           ;main.c: 143: buffer[11] = 'S';
  3835  16BD  3053               	movlw	83
  3836  16BE  00F1               	movwf	??_enviabuffer
  3837  16BF  0871               	movf	??_enviabuffer,w
  3838  16C0  009B               	movwf	(_buffer^(0+384)+11)
  3839                           
  3840                           ;main.c: 145: unsigned char checksum = 0x00;
  3841  16C1  01F2               	clrf	enviabuffer@checksum
  3842                           
  3843                           ;main.c: 146: for (unsigned char index = 0; index < 12; index++)
  3844  16C2  01F3               	clrf	enviabuffer@index
  3845  16C3  300C               	movlw	12
  3846  16C4  0273               	subwf	enviabuffer@index,w
  3847  16C5  1803               	btfsc	3,0
  3848  16C6  2EE1               	goto	i1l2547
  3849  16C7                     i1l2539:	
  3850                           
  3851                           ;main.c: 147: {
  3852                           ;main.c: 148: USART_WriteChar(buffer[index]);
  3853  16C7  0873               	movf	enviabuffer@index,w
  3854  16C8  3E90               	addlw	_buffer& (0+255)
  3855  16C9  0084               	movwf	4
  3856  16CA  1783               	bsf	3,7	;select IRP bank3
  3857  16CB  0800               	movf	0,w
  3858  16CC  160A  118A  22C7  160A  118A  	fcall	_USART_WriteChar
  3859                           
  3860                           ;main.c: 149: checksum ^= buffer[index];
  3861  16D1  0873               	movf	enviabuffer@index,w
  3862  16D2  3E90               	addlw	_buffer& (0+255)
  3863  16D3  0084               	movwf	4
  3864  16D4  1783               	bsf	3,7	;select IRP bank3
  3865  16D5  0800               	movf	0,w
  3866  16D6  00F1               	movwf	??_enviabuffer
  3867  16D7  0871               	movf	??_enviabuffer,w
  3868  16D8  06F2               	xorwf	enviabuffer@checksum,f
  3869  16D9  3001               	movlw	1
  3870  16DA  00F1               	movwf	??_enviabuffer
  3871  16DB  0871               	movf	??_enviabuffer,w
  3872  16DC  07F3               	addwf	enviabuffer@index,f
  3873  16DD  300C               	movlw	12
  3874  16DE  0273               	subwf	enviabuffer@index,w
  3875  16DF  1C03               	skipc
  3876  16E0  2EC7               	goto	i1l2539
  3877  16E1                     i1l2547:	
  3878                           
  3879                           ;main.c: 150: }
  3880                           ;main.c: 151: buffer[12] = checksum;
  3881  16E1  0872               	movf	enviabuffer@checksum,w
  3882  16E2  00F1               	movwf	??_enviabuffer
  3883  16E3  0871               	movf	??_enviabuffer,w
  3884  16E4  1683               	bsf	3,5	;RP0=1, select bank3
  3885  16E5  1703               	bsf	3,6	;RP1=1, select bank3
  3886  16E6  009C               	movwf	(_buffer^(0+384)+12)
  3887                           
  3888                           ;main.c: 152: USART_WriteChar(buffer[12]);
  3889  16E7  081C               	movf	(_buffer^(0+384)+12),w
  3890  16E8  160A  118A  22C7   	fcall	_USART_WriteChar
  3891  16EB  0008               	return
  3892  16EC                     __end_of_enviabuffer:	
  3893                           
  3894                           	psect	text18
  3895  14BC                     __ptext18:	
  3896 ;; *************** function ___lwdiv *****************
  3897 ;; Defined at:
  3898 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  divisor         2    0[COMMON] unsigned int 
  3901 ;;  dividend        2    2[COMMON] unsigned int 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  quotient        2    5[COMMON] unsigned int 
  3904 ;;  counter         1    7[COMMON] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2    0[COMMON] unsigned int 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         4       0       0       0       0
  3915 ;;      Locals:         3       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0
  3917 ;;      Totals:         8       0       0       0       0
  3918 ;;Total ram usage:        8 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_ISR
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           
  3928                           ;psect for function ___lwdiv
  3929  14BC                     ___lwdiv:	
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3933  14BC  01F5               	clrf	___lwdiv@quotient
  3934  14BD  01F6               	clrf	___lwdiv@quotient+1
  3935  14BE  0871               	movf	___lwdiv@divisor+1,w
  3936  14BF  0470               	iorwf	___lwdiv@divisor,w
  3937  14C0  1903               	skipnz
  3938  14C1  2CF3               	goto	i1l2879
  3939  14C2  01F7               	clrf	___lwdiv@counter
  3940  14C3  0AF7               	incf	___lwdiv@counter,f
  3941  14C4                     i1l2867:	
  3942  14C4  1BF1               	btfsc	___lwdiv@divisor+1,7
  3943  14C5  2CD2               	goto	i1l2869
  3944  14C6  3001               	movlw	1
  3945  14C7                     u338_25:	
  3946  14C7  1003               	clrc
  3947  14C8  0DF0               	rlf	___lwdiv@divisor,f
  3948  14C9  0DF1               	rlf	___lwdiv@divisor+1,f
  3949  14CA  3EFF               	addlw	-1
  3950  14CB  1D03               	skipz
  3951  14CC  2CC7               	goto	u338_25
  3952  14CD  3001               	movlw	1
  3953  14CE  00F4               	movwf	??___lwdiv
  3954  14CF  0874               	movf	??___lwdiv,w
  3955  14D0  07F7               	addwf	___lwdiv@counter,f
  3956  14D1  2CC4               	goto	i1l2867
  3957  14D2                     i1l2869:	
  3958  14D2  3001               	movlw	1
  3959  14D3                     u340_25:	
  3960  14D3  1003               	clrc
  3961  14D4  0DF5               	rlf	___lwdiv@quotient,f
  3962  14D5  0DF6               	rlf	___lwdiv@quotient+1,f
  3963  14D6  3EFF               	addlw	-1
  3964  14D7  1D03               	skipz
  3965  14D8  2CD3               	goto	u340_25
  3966  14D9  0871               	movf	___lwdiv@divisor+1,w
  3967  14DA  0273               	subwf	___lwdiv@dividend+1,w
  3968  14DB  1D03               	skipz
  3969  14DC  2CDF               	goto	u341_25
  3970  14DD  0870               	movf	___lwdiv@divisor,w
  3971  14DE  0272               	subwf	___lwdiv@dividend,w
  3972  14DF                     u341_25:	
  3973  14DF  1C03               	skipc
  3974  14E0  2CE8               	goto	i1l2875
  3975  14E1  0870               	movf	___lwdiv@divisor,w
  3976  14E2  02F2               	subwf	___lwdiv@dividend,f
  3977  14E3  0871               	movf	___lwdiv@divisor+1,w
  3978  14E4  1C03               	skipc
  3979  14E5  03F3               	decf	___lwdiv@dividend+1,f
  3980  14E6  02F3               	subwf	___lwdiv@dividend+1,f
  3981  14E7  1475               	bsf	___lwdiv@quotient,0
  3982  14E8                     i1l2875:	
  3983  14E8  3001               	movlw	1
  3984  14E9                     u342_25:	
  3985  14E9  1003               	clrc
  3986  14EA  0CF1               	rrf	___lwdiv@divisor+1,f
  3987  14EB  0CF0               	rrf	___lwdiv@divisor,f
  3988  14EC  3EFF               	addlw	-1
  3989  14ED  1D03               	skipz
  3990  14EE  2CE9               	goto	u342_25
  3991  14EF  3001               	movlw	1
  3992  14F0  02F7               	subwf	___lwdiv@counter,f
  3993  14F1  1D03               	btfss	3,2
  3994  14F2  2CD2               	goto	i1l2869
  3995  14F3                     i1l2879:	
  3996  14F3  0876               	movf	___lwdiv@quotient+1,w
  3997  14F4  01F1               	clrf	?___lwdiv+1
  3998  14F5  07F1               	addwf	?___lwdiv+1,f
  3999  14F6  0875               	movf	___lwdiv@quotient,w
  4000  14F7  01F0               	clrf	?___lwdiv
  4001  14F8  07F0               	addwf	?___lwdiv,f
  4002  14F9  0008               	return
  4003  14FA                     __end_of___lwdiv:	
  4004                           
  4005                           	psect	text19
  4006  1356                     __ptext19:	
  4007 ;; *************** function _USART_ReceiveChar *****************
  4008 ;; Defined at:
  4009 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  byte            1    4[COMMON] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      unsigned char 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         0       0       0       0       0
  4024 ;;      Locals:         1       0       0       0       0
  4025 ;;      Temps:          1       0       0       0       0
  4026 ;;      Totals:         2       0       0       0       0
  4027 ;;Total ram usage:        2 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    2
  4030 ;; This function calls:
  4031 ;;		_USART_WriteString
  4032 ;; This function is called by:
  4033 ;;		_ISR
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _USART_ReceiveChar
  4039  1356                     _USART_ReceiveChar:	
  4040                           
  4041                           ;usart.c: 65: unsigned char byte;
  4042                           ;usart.c: 67: if (!OERR)
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4046  1356  1283               	bcf	3,5	;RP0=0, select bank0
  4047  1357  1303               	bcf	3,6	;RP1=0, select bank0
  4048  1358  1898               	btfsc	24,1	;volatile
  4049  1359  2B5F               	goto	i1l2709
  4050                           
  4051                           ;usart.c: 68: {
  4052                           ;usart.c: 69: byte = RCREG;
  4053  135A  081A               	movf	26,w	;volatile
  4054  135B  00F3               	movwf	??_USART_ReceiveChar
  4055  135C  0873               	movf	??_USART_ReceiveChar,w
  4056  135D  00F4               	movwf	USART_ReceiveChar@byte
  4057  135E  2B6B               	goto	i1l2717
  4058  135F                     i1l2709:	
  4059                           ;usart.c: 71: }
  4060                           
  4061                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4062                           
  4063                           
  4064                           ;usart.c: 72: else
  4065                           ;usart.c: 73: {
  4066                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4067  135F  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4068  1360  120A  158A  2001   	fcall	_USART_WriteString
  4069                           
  4070                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4071  1363  1283               	bcf	3,5	;RP0=0, select bank0
  4072  1364  1303               	bcf	3,6	;RP1=0, select bank0
  4073  1365  1218               	bcf	24,4	;volatile
  4074                           
  4075                           ;usart.c: 77: byte = RCREG;
  4076  1366  081A               	movf	26,w	;volatile
  4077  1367  00F3               	movwf	??_USART_ReceiveChar
  4078  1368  0873               	movf	??_USART_ReceiveChar,w
  4079  1369  00F4               	movwf	USART_ReceiveChar@byte
  4080                           
  4081                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4082  136A  1618               	bsf	24,4	;volatile
  4083  136B                     i1l2717:	
  4084                           
  4085                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4086  136B  128C               	bcf	12,5	;volatile
  4087                           
  4088                           ;usart.c: 80: }
  4089                           ;usart.c: 82: return(byte);
  4090  136C  0874               	movf	USART_ReceiveChar@byte,w
  4091  136D  0008               	return
  4092  136E                     __end_of_USART_ReceiveChar:	
  4093                           
  4094                           	psect	text20
  4095  0801                     __ptext20:	
  4096 ;; *************** function _USART_WriteString *****************
  4097 ;; Defined at:
  4098 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  str             1    wreg     PTR const unsigned char 
  4101 ;;		 -> STR_4(40), STR_1(10), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  str             1    2[COMMON] PTR const unsigned char 
  4104 ;;		 -> STR_4(40), STR_1(10), 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4114 ;;      Params:         0       0       0       0       0
  4115 ;;      Locals:         1       0       0       0       0
  4116 ;;      Temps:          1       0       0       0       0
  4117 ;;      Totals:         2       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    1
  4121 ;; This function calls:
  4122 ;;		_USART_WriteChar
  4123 ;; This function is called by:
  4124 ;;		_ISR
  4125 ;;		_USART_ReceiveChar
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _USART_WriteString
  4131  0801                     _USART_WriteString:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4135                           ;USART_WriteString@str stored from wreg
  4136  0801  00F2               	movwf	USART_WriteString@str
  4137  0802                     i1l2335:	
  4138                           ;usart.c: 54: while(*str != '\0')
  4139                           
  4140  0802  0872               	movf	USART_WriteString@str,w
  4141  0803  0084               	movwf	4
  4142  0804  160A  118A  2000  120A  158A  	fcall	stringdir
  4143  0809  3800               	iorlw	0
  4144  080A  1903               	btfsc	3,2
  4145  080B  0008               	return
  4146                           
  4147                           ;usart.c: 55: {
  4148                           ;usart.c: 56: USART_WriteChar(*str);
  4149  080C  0872               	movf	USART_WriteString@str,w
  4150  080D  0084               	movwf	4
  4151  080E  160A  118A  2000  120A  158A  	fcall	stringdir
  4152  0813  160A  118A  22C7  120A  158A  	fcall	_USART_WriteChar
  4153                           
  4154                           ;usart.c: 57: str++;
  4155  0818  3001               	movlw	1
  4156  0819  00F1               	movwf	??_USART_WriteString
  4157  081A  0871               	movf	??_USART_WriteString,w
  4158  081B  07F2               	addwf	USART_WriteString@str,f
  4159  081C  2802               	goto	i1l2335
  4160  081D                     __end_of_USART_WriteString:	
  4161                           
  4162                           	psect	text21
  4163  12C7                     __ptext21:	
  4164 ;; *************** function _USART_WriteChar *****************
  4165 ;; Defined at:
  4166 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  byte            1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  byte            1    0[COMMON] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;		None               void
  4173 ;; Registers used:
  4174 ;;		wreg
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         0       0       0       0       0
  4181 ;;      Locals:         1       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0
  4183 ;;      Totals:         1       0       0       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_enviabuffer
  4190 ;;		_USART_WriteString
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _USART_WriteChar
  4196  12C7                     _USART_WriteChar:	
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _USART_WriteChar: [wreg]
  4200                           ;USART_WriteChar@byte stored from wreg
  4201  12C7  00F0               	movwf	USART_WriteChar@byte
  4202  12C8                     i1l244:	
  4203                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4204                           
  4205  12C8  1283               	bcf	3,5	;RP0=0, select bank0
  4206  12C9  1303               	bcf	3,6	;RP1=0, select bank0
  4207  12CA  1E0C               	btfss	12,4	;volatile
  4208  12CB  2AC8               	goto	i1l244
  4209                           
  4210                           ;usart.c: 47: TXREG = byte;
  4211  12CC  0870               	movf	USART_WriteChar@byte,w
  4212  12CD  0099               	movwf	25	;volatile
  4213  12CE  0008               	return
  4214  12CF                     __end_of_USART_WriteChar:	
  4215                           
  4216                           	psect	text22
  4217  08AC                     __ptext22:	
  4218 ;; *************** function _Fuzzy *****************
  4219 ;; Defined at:
  4220 ;;		line 177 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  a               2   16[BANK1 ] int 
  4225 ;;  a               2   14[BANK1 ] int 
  4226 ;;  a               2   12[BANK1 ] int 
  4227 ;;  a               2   10[BANK1 ] int 
  4228 ;;  a               2   26[BANK1 ] int 
  4229 ;;  x               3   31[BANK1 ] float 
  4230 ;;  rule            3   28[BANK1 ] float 
  4231 ;;  total_area      3   23[BANK1 ] float 
  4232 ;;  soma            3   20[BANK1 ] float 
  4233 ;;  reajuste        3    5[BANK1 ] float 
  4234 ;;  delta           2   18[BANK1 ] int 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;		None               void
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       0       0       0       0
  4245 ;;      Locals:         0       0      34       0       0
  4246 ;;      Temps:          0       2       0       0       0
  4247 ;;      Totals:         0       2      34       0       0
  4248 ;;Total ram usage:       36 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		___awtoft
  4253 ;;		___ftadd
  4254 ;;		___ftdiv
  4255 ;;		___ftge
  4256 ;;		___ftmul
  4257 ;;		___ftneg
  4258 ;;		___fttol
  4259 ;;		___lwtoft
  4260 ;;		___wmul
  4261 ;;		_abs
  4262 ;;		_maximo
  4263 ;;		_minimo
  4264 ;;		_trapmf
  4265 ;;		i1_PWM_DutyCycle2
  4266 ;; This function is called by:
  4267 ;;		_ISR
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Fuzzy
  4273  08AC                     _Fuzzy:	
  4274                           
  4275                           ;main.c: 187: deltaV = minimo(abs(setpointUI - rpm), 2000);
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4279  08AC  3000               	movlw	0
  4280  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  4281  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  4282  08AF  00A3               	movwf	minimo@b
  4283  08B0  30FA               	movlw	250
  4284  08B1  00A4               	movwf	minimo@b+1
  4285  08B2  3044               	movlw	68
  4286  08B3  00A5               	movwf	minimo@b+2
  4287  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  4288  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  4289  08B6  0957               	comf	_rpm^(0+128),w
  4290  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  4291  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  4292  08B9  00E2               	movwf	??_Fuzzy
  4293  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  4294  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  4295  08BC  0958               	comf	(_rpm+1)^(0+128),w
  4296  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  4297  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  4298  08BF  00E3               	movwf	??_Fuzzy+1
  4299  08C0  0AE2               	incf	??_Fuzzy,f
  4300  08C1  1903               	skipnz
  4301  08C2  0AE3               	incf	??_Fuzzy+1,f
  4302  08C3  1683               	bsf	3,5	;RP0=1, select bank1
  4303  08C4  1303               	bcf	3,6	;RP1=0, select bank1
  4304  08C5  0859               	movf	_setpointUI^(0+128),w
  4305  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  4306  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  4307  08C8  0762               	addwf	??_Fuzzy,w
  4308  08C9  00F0               	movwf	abs@a
  4309  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  4310  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  4311  08CC  085A               	movf	(_setpointUI+1)^(0+128),w
  4312  08CD  1803               	skipnc
  4313  08CE  0A5A               	incf	(_setpointUI+1)^(0+128),w
  4314  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  4315  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  4316  08D1  0763               	addwf	??_Fuzzy+1,w
  4317  08D2  00F1               	movwf	abs@a+1
  4318  08D3  160A  118A  22F4  120A  158A  	fcall	_abs
  4319  08D8  0871               	movf	?_abs+1,w
  4320  08D9  01F9               	clrf	___awtoft@c+1
  4321  08DA  07F9               	addwf	___awtoft@c+1,f
  4322  08DB  0870               	movf	?_abs,w
  4323  08DC  01F8               	clrf	___awtoft@c
  4324  08DD  07F8               	addwf	___awtoft@c,f
  4325  08DE  160A  118A  23E7  120A  158A  	fcall	___awtoft
  4326  08E3  0878               	movf	?___awtoft,w
  4327  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  4328  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  4329  08E6  00A0               	movwf	minimo@a
  4330  08E7  0879               	movf	?___awtoft+1,w
  4331  08E8  00A1               	movwf	minimo@a+1
  4332  08E9  087A               	movf	?___awtoft+2,w
  4333  08EA  00A2               	movwf	minimo@a+2
  4334  08EB  120A  118A  27E2  120A  158A  	fcall	_minimo
  4335  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  4336  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  4337  08F2  0820               	movf	?_minimo,w
  4338  08F3  00AC               	movwf	___fttol@f1
  4339  08F4  0821               	movf	?_minimo+1,w
  4340  08F5  00AD               	movwf	___fttol@f1+1
  4341  08F6  0822               	movf	?_minimo+2,w
  4342  08F7  00AE               	movwf	___fttol@f1+2
  4343  08F8  160A  118A  2772  120A  158A  	fcall	___fttol
  4344  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  4345  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  4346  08FF  082D               	movf	?___fttol+1,w
  4347  0900  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0901  1303               	bcf	3,6	;RP1=0, select bank1
  4349  0902  01D4               	clrf	(_deltaV+1)^(0+128)
  4350  0903  07D4               	addwf	(_deltaV+1)^(0+128),f
  4351  0904  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0905  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0906  082C               	movf	?___fttol,w
  4354  0907  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0908  1303               	bcf	3,6	;RP1=0, select bank1
  4356  0909  01D3               	clrf	_deltaV^(0+128)
  4357  090A  07D3               	addwf	_deltaV^(0+128),f
  4358                           
  4359                           ;main.c: 188: int delta = maximo(minimo(abs(deltaV - antigoUI), 1000), 1);
  4360  090B  3000               	movlw	0
  4361  090C  1283               	bcf	3,5	;RP0=0, select bank0
  4362  090D  1303               	bcf	3,6	;RP1=0, select bank0
  4363  090E  00A9               	movwf	maximo@b
  4364  090F  3080               	movlw	128
  4365  0910  00AA               	movwf	maximo@b+1
  4366  0911  303F               	movlw	63
  4367  0912  00AB               	movwf	maximo@b+2
  4368  0913  3000               	movlw	0
  4369  0914  00A3               	movwf	minimo@b
  4370  0915  307A               	movlw	122
  4371  0916  00A4               	movwf	minimo@b+1
  4372  0917  3044               	movlw	68
  4373  0918  00A5               	movwf	minimo@b+2
  4374  0919  1683               	bsf	3,5	;RP0=1, select bank1
  4375  091A  1303               	bcf	3,6	;RP1=0, select bank1
  4376  091B  094D               	comf	_antigoUI^(0+128),w
  4377  091C  1283               	bcf	3,5	;RP0=0, select bank0
  4378  091D  1303               	bcf	3,6	;RP1=0, select bank0
  4379  091E  00E2               	movwf	??_Fuzzy
  4380  091F  1683               	bsf	3,5	;RP0=1, select bank1
  4381  0920  1303               	bcf	3,6	;RP1=0, select bank1
  4382  0921  094E               	comf	(_antigoUI+1)^(0+128),w
  4383  0922  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0923  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0924  00E3               	movwf	??_Fuzzy+1
  4386  0925  0AE2               	incf	??_Fuzzy,f
  4387  0926  1903               	skipnz
  4388  0927  0AE3               	incf	??_Fuzzy+1,f
  4389  0928  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0929  1303               	bcf	3,6	;RP1=0, select bank1
  4391  092A  0853               	movf	_deltaV^(0+128),w
  4392  092B  1283               	bcf	3,5	;RP0=0, select bank0
  4393  092C  1303               	bcf	3,6	;RP1=0, select bank0
  4394  092D  0762               	addwf	??_Fuzzy,w
  4395  092E  00F0               	movwf	abs@a
  4396  092F  1683               	bsf	3,5	;RP0=1, select bank1
  4397  0930  1303               	bcf	3,6	;RP1=0, select bank1
  4398  0931  0854               	movf	(_deltaV+1)^(0+128),w
  4399  0932  1803               	skipnc
  4400  0933  0A54               	incf	(_deltaV+1)^(0+128),w
  4401  0934  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0935  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0936  0763               	addwf	??_Fuzzy+1,w
  4404  0937  00F1               	movwf	abs@a+1
  4405  0938  160A  118A  22F4   	fcall	_abs
  4406  093B  0871               	movf	?_abs+1,w
  4407  093C  160A  118A  2EEC   	ljmp	L11
  4408                           
  4409                           	psect	text23
  4410  136E                     __ptext23:	
  4411 ;; *************** function i1_PWM_DutyCycle2 *****************
  4412 ;; Defined at:
  4413 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  valor           2    0[COMMON] int 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         2       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0
  4429 ;;      Temps:          2       0       0       0       0
  4430 ;;      Totals:         4       0       0       0       0
  4431 ;;Total ram usage:        4 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_Fuzzy
  4437 ;;		_ISR
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           
  4442                           ;psect for function i1_PWM_DutyCycle2
  4443  136E                     i1_PWM_DutyCycle2:	
  4444                           
  4445                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4449  136E  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4450  136F  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4451  1370  0870               	movf	i1PWM_DutyCycle2@valor,w
  4452  1371  00F2               	movwf	??i1_PWM_DutyCycle2
  4453  1372  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4454  1373  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4455  1374  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4456  1375  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4457  1376  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4458  1377  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4459  1378  0872               	movf	??i1_PWM_DutyCycle2,w
  4460  1379  1283               	bcf	3,5	;RP0=0, select bank0
  4461  137A  1303               	bcf	3,6	;RP1=0, select bank0
  4462  137B  009B               	movwf	27	;volatile
  4463                           
  4464                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4465  137C  0870               	movf	i1PWM_DutyCycle2@valor,w
  4466  137D  00F2               	movwf	??i1_PWM_DutyCycle2
  4467  137E  3003               	movlw	3
  4468  137F                     u296_25:	
  4469  137F  1003               	clrc
  4470  1380  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4471  1381  3EFF               	addlw	-1
  4472  1382  1D03               	skipz
  4473  1383  2B7F               	goto	u296_25
  4474  1384  1003               	clrc
  4475  1385  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4476  1386  380C               	iorlw	12
  4477  1387  009D               	movwf	29	;volatile
  4478  1388  0008               	return
  4479  1389                     __end_ofi1_PWM_DutyCycle2:	
  4480                           
  4481                           	psect	text24
  4482  0D2D                     __ptext24:	
  4483 ;; *************** function _trapmf *****************
  4484 ;; Defined at:
  4485 ;;		line 88 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  x               3   32[BANK0 ] float 
  4488 ;;  a               3   35[BANK0 ] float 
  4489 ;;  b               3   38[BANK0 ] float 
  4490 ;;  c               3   41[BANK0 ] float 
  4491 ;;  d               3   44[BANK0 ] float 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  ua              3   47[BANK0 ] float 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  3   32[BANK0 ] float 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0      15       0       0       0
  4504 ;;      Locals:         0       3       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         0      18       0       0       0
  4507 ;;Total ram usage:       18 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    2
  4510 ;; This function calls:
  4511 ;;		___ftadd
  4512 ;;		___ftdiv
  4513 ;;		___ftge
  4514 ;;		___ftneg
  4515 ;; This function is called by:
  4516 ;;		_Fuzzy
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _trapmf
  4522  0D2D                     _trapmf:	
  4523                           
  4524                           ;main.c: 90: float ua = 0;
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4528  0D2D  3000               	movlw	0
  4529  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0D30  00CF               	movwf	trapmf@ua
  4532  0D31  3000               	movlw	0
  4533  0D32  00D0               	movwf	trapmf@ua+1
  4534  0D33  3000               	movlw	0
  4535  0D34  00D1               	movwf	trapmf@ua+2
  4536                           
  4537                           ;main.c: 92: if (x <= a)
  4538  0D35  0843               	movf	trapmf@a,w
  4539  0D36  00F0               	movwf	___ftge@ff1
  4540  0D37  0844               	movf	trapmf@a+1,w
  4541  0D38  00F1               	movwf	___ftge@ff1+1
  4542  0D39  0845               	movf	trapmf@a+2,w
  4543  0D3A  00F2               	movwf	___ftge@ff1+2
  4544  0D3B  0840               	movf	trapmf@x,w
  4545  0D3C  00F3               	movwf	___ftge@ff2
  4546  0D3D  0841               	movf	trapmf@x+1,w
  4547  0D3E  00F4               	movwf	___ftge@ff2+1
  4548  0D3F  0842               	movf	trapmf@x+2,w
  4549  0D40  00F5               	movwf	___ftge@ff2+2
  4550  0D41  160A  118A  2545  120A  158A  	fcall	___ftge
  4551  0D46  1803               	btfsc	3,0
  4552  0D47  2E72               	goto	L7
  4553                           
  4554                           ;main.c: 94: else if ((a < x) && (x <= b))
  4555                           
  4556                           ;main.c: 93: ua = 0;
  4557  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0D4A  0843               	movf	trapmf@a,w
  4560  0D4B  00F0               	movwf	___ftge@ff1
  4561  0D4C  0844               	movf	trapmf@a+1,w
  4562  0D4D  00F1               	movwf	___ftge@ff1+1
  4563  0D4E  0845               	movf	trapmf@a+2,w
  4564  0D4F  00F2               	movwf	___ftge@ff1+2
  4565  0D50  0840               	movf	trapmf@x,w
  4566  0D51  00F3               	movwf	___ftge@ff2
  4567  0D52  0841               	movf	trapmf@x+1,w
  4568  0D53  00F4               	movwf	___ftge@ff2+1
  4569  0D54  0842               	movf	trapmf@x+2,w
  4570  0D55  00F5               	movwf	___ftge@ff2+2
  4571  0D56  160A  118A  2545  120A  158A  	fcall	___ftge
  4572  0D5B  1803               	btfsc	3,0
  4573  0D5C  2DA6               	goto	i1l3821
  4574  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0D5F  0846               	movf	trapmf@b,w
  4577  0D60  00F0               	movwf	___ftge@ff1
  4578  0D61  0847               	movf	trapmf@b+1,w
  4579  0D62  00F1               	movwf	___ftge@ff1+1
  4580  0D63  0848               	movf	trapmf@b+2,w
  4581  0D64  00F2               	movwf	___ftge@ff1+2
  4582  0D65  0840               	movf	trapmf@x,w
  4583  0D66  00F3               	movwf	___ftge@ff2
  4584  0D67  0841               	movf	trapmf@x+1,w
  4585  0D68  00F4               	movwf	___ftge@ff2+1
  4586  0D69  0842               	movf	trapmf@x+2,w
  4587  0D6A  00F5               	movwf	___ftge@ff2+2
  4588  0D6B  160A  118A  2545  120A  158A  	fcall	___ftge
  4589  0D70  1C03               	btfss	3,0
  4590  0D71  2DA6               	goto	i1l3821
  4591                           
  4592                           ;main.c: 95: ua = ((x - a) / (b - a));
  4593  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0D74  0846               	movf	trapmf@b,w
  4596  0D75  00A3               	movwf	___ftadd@f1
  4597  0D76  0847               	movf	trapmf@b+1,w
  4598  0D77  00A4               	movwf	___ftadd@f1+1
  4599  0D78  0848               	movf	trapmf@b+2,w
  4600  0D79  00A5               	movwf	___ftadd@f1+2
  4601  0D7A  0843               	movf	trapmf@a,w
  4602  0D7B  00A0               	movwf	___ftneg@f1
  4603  0D7C  0844               	movf	trapmf@a+1,w
  4604  0D7D  00A1               	movwf	___ftneg@f1+1
  4605  0D7E  0845               	movf	trapmf@a+2,w
  4606  0D7F  00A2               	movwf	___ftneg@f1+2
  4607  0D80  160A  118A  22DF  120A  158A  	fcall	___ftneg
  4608  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0D87  0820               	movf	?___ftneg,w
  4611  0D88  00A6               	movwf	___ftadd@f2
  4612  0D89  0821               	movf	?___ftneg+1,w
  4613  0D8A  00A7               	movwf	___ftadd@f2+1
  4614  0D8B  0822               	movf	?___ftneg+2,w
  4615  0D8C  00A8               	movwf	___ftadd@f2+2
  4616  0D8D  120A  158A  2424  120A  158A  	fcall	___ftadd
  4617  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4619  0D94  0823               	movf	?___ftadd,w
  4620  0D95  00B0               	movwf	___ftdiv@f2
  4621  0D96  0824               	movf	?___ftadd+1,w
  4622  0D97  00B1               	movwf	___ftdiv@f2+1
  4623  0D98  0825               	movf	?___ftadd+2,w
  4624  0D99  00B2               	movwf	___ftdiv@f2+2
  4625  0D9A  0840               	movf	trapmf@x,w
  4626  0D9B  00A3               	movwf	___ftadd@f1
  4627  0D9C  0841               	movf	trapmf@x+1,w
  4628  0D9D  00A4               	movwf	___ftadd@f1+1
  4629  0D9E  0842               	movf	trapmf@x+2,w
  4630  0D9F  00A5               	movwf	___ftadd@f1+2
  4631  0DA0  0843               	movf	trapmf@a,w
  4632  0DA1  00A0               	movwf	___ftneg@f1
  4633  0DA2  0844               	movf	trapmf@a+1,w
  4634  0DA3  00A1               	movwf	___ftneg@f1+1
  4635  0DA4  0845               	movf	trapmf@a+2,w
  4636  0DA5  2E35               	goto	L9
  4637  0DA6                     i1l3821:	
  4638                           
  4639                           ;main.c: 96: else if ((b <= x) && (x <= c))
  4640  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  4642  0DA8  0840               	movf	trapmf@x,w
  4643  0DA9  00F0               	movwf	___ftge@ff1
  4644  0DAA  0841               	movf	trapmf@x+1,w
  4645  0DAB  00F1               	movwf	___ftge@ff1+1
  4646  0DAC  0842               	movf	trapmf@x+2,w
  4647  0DAD  00F2               	movwf	___ftge@ff1+2
  4648  0DAE  0846               	movf	trapmf@b,w
  4649  0DAF  00F3               	movwf	___ftge@ff2
  4650  0DB0  0847               	movf	trapmf@b+1,w
  4651  0DB1  00F4               	movwf	___ftge@ff2+1
  4652  0DB2  0848               	movf	trapmf@b+2,w
  4653  0DB3  00F5               	movwf	___ftge@ff2+2
  4654  0DB4  160A  118A  2545  120A  158A  	fcall	___ftge
  4655  0DB9  1C03               	btfss	3,0
  4656  0DBA  2DD8               	goto	i1l3827
  4657  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4658  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0DBD  0849               	movf	trapmf@c,w
  4660  0DBE  00F0               	movwf	___ftge@ff1
  4661  0DBF  084A               	movf	trapmf@c+1,w
  4662  0DC0  00F1               	movwf	___ftge@ff1+1
  4663  0DC1  084B               	movf	trapmf@c+2,w
  4664  0DC2  00F2               	movwf	___ftge@ff1+2
  4665  0DC3  0840               	movf	trapmf@x,w
  4666  0DC4  00F3               	movwf	___ftge@ff2
  4667  0DC5  0841               	movf	trapmf@x+1,w
  4668  0DC6  00F4               	movwf	___ftge@ff2+1
  4669  0DC7  0842               	movf	trapmf@x+2,w
  4670  0DC8  00F5               	movwf	___ftge@ff2+2
  4671  0DC9  160A  118A  2545  120A  158A  	fcall	___ftge
  4672  0DCE  1C03               	btfss	3,0
  4673  0DCF  2DD8               	goto	i1l3827
  4674                           
  4675                           ;main.c: 97: ua = 1;
  4676  0DD0  3000               	movlw	0
  4677  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0DD3  00CF               	movwf	trapmf@ua
  4680  0DD4  3080               	movlw	128
  4681  0DD5  00D0               	movwf	trapmf@ua+1
  4682  0DD6  303F               	movlw	63
  4683  0DD7  2E79               	goto	L6
  4684  0DD8                     i1l3827:	
  4685                           
  4686                           ;main.c: 98: else if ((c < x) && (x <= d))
  4687  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4688  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4689  0DDA  0849               	movf	trapmf@c,w
  4690  0DDB  00F0               	movwf	___ftge@ff1
  4691  0DDC  084A               	movf	trapmf@c+1,w
  4692  0DDD  00F1               	movwf	___ftge@ff1+1
  4693  0DDE  084B               	movf	trapmf@c+2,w
  4694  0DDF  00F2               	movwf	___ftge@ff1+2
  4695  0DE0  0840               	movf	trapmf@x,w
  4696  0DE1  00F3               	movwf	___ftge@ff2
  4697  0DE2  0841               	movf	trapmf@x+1,w
  4698  0DE3  00F4               	movwf	___ftge@ff2+1
  4699  0DE4  0842               	movf	trapmf@x+2,w
  4700  0DE5  00F5               	movwf	___ftge@ff2+2
  4701  0DE6  160A  118A  2545  120A  158A  	fcall	___ftge
  4702  0DEB  1803               	btfsc	3,0
  4703  0DEC  2E5D               	goto	i1l3833
  4704  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0DEF  084C               	movf	trapmf@d,w
  4707  0DF0  00F0               	movwf	___ftge@ff1
  4708  0DF1  084D               	movf	trapmf@d+1,w
  4709  0DF2  00F1               	movwf	___ftge@ff1+1
  4710  0DF3  084E               	movf	trapmf@d+2,w
  4711  0DF4  00F2               	movwf	___ftge@ff1+2
  4712  0DF5  0840               	movf	trapmf@x,w
  4713  0DF6  00F3               	movwf	___ftge@ff2
  4714  0DF7  0841               	movf	trapmf@x+1,w
  4715  0DF8  00F4               	movwf	___ftge@ff2+1
  4716  0DF9  0842               	movf	trapmf@x+2,w
  4717  0DFA  00F5               	movwf	___ftge@ff2+2
  4718  0DFB  160A  118A  2545  120A  158A  	fcall	___ftge
  4719  0E00  1C03               	btfss	3,0
  4720  0E01  2E5D               	goto	i1l3833
  4721                           
  4722                           ;main.c: 99: ua = ((d - x) / (d - c));
  4723  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4724  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4725  0E04  084C               	movf	trapmf@d,w
  4726  0E05  00A3               	movwf	___ftadd@f1
  4727  0E06  084D               	movf	trapmf@d+1,w
  4728  0E07  00A4               	movwf	___ftadd@f1+1
  4729  0E08  084E               	movf	trapmf@d+2,w
  4730  0E09  00A5               	movwf	___ftadd@f1+2
  4731  0E0A  0849               	movf	trapmf@c,w
  4732  0E0B  00A0               	movwf	___ftneg@f1
  4733  0E0C  084A               	movf	trapmf@c+1,w
  4734  0E0D  00A1               	movwf	___ftneg@f1+1
  4735  0E0E  084B               	movf	trapmf@c+2,w
  4736  0E0F  00A2               	movwf	___ftneg@f1+2
  4737  0E10  160A  118A  22DF  120A  158A  	fcall	___ftneg
  4738  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  4739  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  4740  0E17  0820               	movf	?___ftneg,w
  4741  0E18  00A6               	movwf	___ftadd@f2
  4742  0E19  0821               	movf	?___ftneg+1,w
  4743  0E1A  00A7               	movwf	___ftadd@f2+1
  4744  0E1B  0822               	movf	?___ftneg+2,w
  4745  0E1C  00A8               	movwf	___ftadd@f2+2
  4746  0E1D  120A  158A  2424  120A  158A  	fcall	___ftadd
  4747  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  4748  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0E24  0823               	movf	?___ftadd,w
  4750  0E25  00B0               	movwf	___ftdiv@f2
  4751  0E26  0824               	movf	?___ftadd+1,w
  4752  0E27  00B1               	movwf	___ftdiv@f2+1
  4753  0E28  0825               	movf	?___ftadd+2,w
  4754  0E29  00B2               	movwf	___ftdiv@f2+2
  4755  0E2A  084C               	movf	trapmf@d,w
  4756  0E2B  00A3               	movwf	___ftadd@f1
  4757  0E2C  084D               	movf	trapmf@d+1,w
  4758  0E2D  00A4               	movwf	___ftadd@f1+1
  4759  0E2E  084E               	movf	trapmf@d+2,w
  4760  0E2F  00A5               	movwf	___ftadd@f1+2
  4761  0E30  0840               	movf	trapmf@x,w
  4762  0E31  00A0               	movwf	___ftneg@f1
  4763  0E32  0841               	movf	trapmf@x+1,w
  4764  0E33  00A1               	movwf	___ftneg@f1+1
  4765  0E34  0842               	movf	trapmf@x+2,w
  4766  0E35                     L9:	
  4767  0E35  00A2               	movwf	___ftneg@f1+2
  4768  0E36  160A  118A  22DF  120A  158A  	fcall	___ftneg
  4769  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4770  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4771  0E3D  0820               	movf	?___ftneg,w
  4772  0E3E  00A6               	movwf	___ftadd@f2
  4773  0E3F  0821               	movf	?___ftneg+1,w
  4774  0E40  00A7               	movwf	___ftadd@f2+1
  4775  0E41  0822               	movf	?___ftneg+2,w
  4776  0E42  00A8               	movwf	___ftadd@f2+2
  4777  0E43  120A  158A  2424  120A  158A  	fcall	___ftadd
  4778  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0E4A  0823               	movf	?___ftadd,w
  4781  0E4B  00B3               	movwf	___ftdiv@f1
  4782  0E4C  0824               	movf	?___ftadd+1,w
  4783  0E4D  00B4               	movwf	___ftdiv@f1+1
  4784  0E4E  0825               	movf	?___ftadd+2,w
  4785  0E4F  00B5               	movwf	___ftdiv@f1+2
  4786  0E50  120A  158A  2299  120A  158A  	fcall	___ftdiv
  4787  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0E57  0830               	movf	?___ftdiv,w
  4790  0E58  00CF               	movwf	trapmf@ua
  4791  0E59  0831               	movf	?___ftdiv+1,w
  4792  0E5A  00D0               	movwf	trapmf@ua+1
  4793  0E5B  0832               	movf	?___ftdiv+2,w
  4794  0E5C  2E79               	goto	L6
  4795  0E5D                     i1l3833:	
  4796                           
  4797                           ;main.c: 100: else if (x > d)
  4798  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  4799  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  4800  0E5F  084C               	movf	trapmf@d,w
  4801  0E60  00F0               	movwf	___ftge@ff1
  4802  0E61  084D               	movf	trapmf@d+1,w
  4803  0E62  00F1               	movwf	___ftge@ff1+1
  4804  0E63  084E               	movf	trapmf@d+2,w
  4805  0E64  00F2               	movwf	___ftge@ff1+2
  4806  0E65  0840               	movf	trapmf@x,w
  4807  0E66  00F3               	movwf	___ftge@ff2
  4808  0E67  0841               	movf	trapmf@x+1,w
  4809  0E68  00F4               	movwf	___ftge@ff2+1
  4810  0E69  0842               	movf	trapmf@x+2,w
  4811  0E6A  00F5               	movwf	___ftge@ff2+2
  4812  0E6B  160A  118A  2545  120A  158A  	fcall	___ftge
  4813  0E70  1803               	btfsc	3,0
  4814  0E71  2E7A               	goto	i1l130
  4815  0E72                     L7:	
  4816                           
  4817                           ;main.c: 101: ua = 0;
  4818  0E72  3000               	movlw	0
  4819  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0E75  00CF               	movwf	trapmf@ua
  4822  0E76  3000               	movlw	0
  4823  0E77  00D0               	movwf	trapmf@ua+1
  4824  0E78  3000               	movlw	0
  4825  0E79                     L6:	
  4826  0E79  00D1               	movwf	trapmf@ua+2
  4827  0E7A                     i1l130:	
  4828                           
  4829                           ;main.c: 103: return(ua);
  4830  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0E7C  084F               	movf	trapmf@ua,w
  4833  0E7D  00C0               	movwf	?_trapmf
  4834  0E7E  0850               	movf	trapmf@ua+1,w
  4835  0E7F  00C1               	movwf	?_trapmf+1
  4836  0E80  0851               	movf	trapmf@ua+2,w
  4837  0E81  00C2               	movwf	?_trapmf+2
  4838  0E82  0008               	return
  4839  0E83                     __end_of_trapmf:	
  4840                           
  4841                           	psect	text25
  4842  12DF                     __ptext25:	
  4843 ;; *************** function ___ftneg *****************
  4844 ;; Defined at:
  4845 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  f1              3    0[BANK0 ] float 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  3    0[BANK0 ] float 
  4852 ;; Registers used:
  4853 ;;		wreg
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4859 ;;      Params:         0       3       0       0       0
  4860 ;;      Locals:         0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0
  4862 ;;      Totals:         0       3       0       0       0
  4863 ;;Total ram usage:        3 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_trapmf
  4869 ;;		_Fuzzy
  4870 ;;		_trimf
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function ___ftneg
  4876  12DF                     ___ftneg:	
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in ___ftneg: [wreg]
  4880  12DF  1283               	bcf	3,5	;RP0=0, select bank0
  4881  12E0  1303               	bcf	3,6	;RP1=0, select bank0
  4882  12E1  0822               	movf	___ftneg@f1+2,w
  4883  12E2  0421               	iorwf	___ftneg@f1+1,w
  4884  12E3  0420               	iorwf	___ftneg@f1,w
  4885  12E4  1903               	skipnz
  4886  12E5  0008               	return
  4887  12E6  3080               	movlw	128
  4888  12E7  06A2               	xorwf	___ftneg@f1+2,f
  4889  12E8  0008               	return
  4890  12E9                     __end_of___ftneg:	
  4891                           
  4892                           	psect	text26
  4893  0A99                     __ptext26:	
  4894 ;; *************** function ___ftdiv *****************
  4895 ;; Defined at:
  4896 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  f2              3   16[BANK0 ] float 
  4899 ;;  f1              3   19[BANK0 ] float 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  f3              3   27[BANK0 ] float 
  4902 ;;  sign            1   31[BANK0 ] unsigned char 
  4903 ;;  exp             1   30[BANK0 ] unsigned char 
  4904 ;;  cntr            1   26[BANK0 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  3   16[BANK0 ] float 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       6       0       0       0
  4915 ;;      Locals:         0       6       0       0       0
  4916 ;;      Temps:          0       4       0       0       0
  4917 ;;      Totals:         0      16       0       0       0
  4918 ;;Total ram usage:       16 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		___ftpack
  4923 ;; This function is called by:
  4924 ;;		_trapmf
  4925 ;;		_Fuzzy
  4926 ;;		_trimf
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function ___ftdiv
  4932  0A99                     ___ftdiv:	
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4936  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0A9B  0833               	movf	___ftdiv@f1,w
  4939  0A9C  00B6               	movwf	??___ftdiv
  4940  0A9D  0834               	movf	___ftdiv@f1+1,w
  4941  0A9E  00B7               	movwf	??___ftdiv+1
  4942  0A9F  0835               	movf	___ftdiv@f1+2,w
  4943  0AA0  00B8               	movwf	??___ftdiv+2
  4944  0AA1  1003               	clrc
  4945  0AA2  0D37               	rlf	??___ftdiv+1,w
  4946  0AA3  0D38               	rlf	??___ftdiv+2,w
  4947  0AA4  00B9               	movwf	??___ftdiv+3
  4948  0AA5  0839               	movf	??___ftdiv+3,w
  4949  0AA6  00BE               	movwf	___ftdiv@exp
  4950  0AA7  08BE               	movf	___ftdiv@exp,f
  4951  0AA8  1D03               	skipz
  4952  0AA9  2AB1               	goto	i1l2213
  4953  0AAA  3000               	movlw	0
  4954  0AAB  00B0               	movwf	?___ftdiv
  4955  0AAC  3000               	movlw	0
  4956  0AAD  00B1               	movwf	?___ftdiv+1
  4957  0AAE  3000               	movlw	0
  4958  0AAF  00B2               	movwf	?___ftdiv+2
  4959  0AB0  0008               	return
  4960  0AB1                     i1l2213:	
  4961  0AB1  0830               	movf	___ftdiv@f2,w
  4962  0AB2  00B6               	movwf	??___ftdiv
  4963  0AB3  0831               	movf	___ftdiv@f2+1,w
  4964  0AB4  00B7               	movwf	??___ftdiv+1
  4965  0AB5  0832               	movf	___ftdiv@f2+2,w
  4966  0AB6  00B8               	movwf	??___ftdiv+2
  4967  0AB7  1003               	clrc
  4968  0AB8  0D37               	rlf	??___ftdiv+1,w
  4969  0AB9  0D38               	rlf	??___ftdiv+2,w
  4970  0ABA  00B9               	movwf	??___ftdiv+3
  4971  0ABB  0839               	movf	??___ftdiv+3,w
  4972  0ABC  00BF               	movwf	___ftdiv@sign
  4973  0ABD  08BF               	movf	___ftdiv@sign,f
  4974  0ABE  1D03               	skipz
  4975  0ABF  2AC7               	goto	i1l2219
  4976  0AC0  3000               	movlw	0
  4977  0AC1  00B0               	movwf	?___ftdiv
  4978  0AC2  3000               	movlw	0
  4979  0AC3  00B1               	movwf	?___ftdiv+1
  4980  0AC4  3000               	movlw	0
  4981  0AC5  00B2               	movwf	?___ftdiv+2
  4982  0AC6  0008               	return
  4983  0AC7                     i1l2219:	
  4984  0AC7  3000               	movlw	0
  4985  0AC8  00BB               	movwf	___ftdiv@f3
  4986  0AC9  3000               	movlw	0
  4987  0ACA  00BC               	movwf	___ftdiv@f3+1
  4988  0ACB  3000               	movlw	0
  4989  0ACC  00BD               	movwf	___ftdiv@f3+2
  4990  0ACD  3089               	movlw	137
  4991  0ACE  073F               	addwf	___ftdiv@sign,w
  4992  0ACF  00B6               	movwf	??___ftdiv
  4993  0AD0  0836               	movf	??___ftdiv,w
  4994  0AD1  02BE               	subwf	___ftdiv@exp,f
  4995  0AD2  0833               	movf	___ftdiv@f1,w
  4996  0AD3  00B6               	movwf	??___ftdiv
  4997  0AD4  0834               	movf	___ftdiv@f1+1,w
  4998  0AD5  00B7               	movwf	??___ftdiv+1
  4999  0AD6  0835               	movf	___ftdiv@f1+2,w
  5000  0AD7  00B8               	movwf	??___ftdiv+2
  5001  0AD8  3010               	movlw	16
  5002  0AD9                     u233_25:	
  5003  0AD9  1003               	clrc
  5004  0ADA  0CB8               	rrf	??___ftdiv+2,f
  5005  0ADB  0CB7               	rrf	??___ftdiv+1,f
  5006  0ADC  0CB6               	rrf	??___ftdiv,f
  5007  0ADD  3EFF               	addlw	-1
  5008  0ADE  1D03               	skipz
  5009  0ADF  2AD9               	goto	u233_25
  5010  0AE0  0836               	movf	??___ftdiv,w
  5011  0AE1  00B9               	movwf	??___ftdiv+3
  5012  0AE2  0839               	movf	??___ftdiv+3,w
  5013  0AE3  00BF               	movwf	___ftdiv@sign
  5014  0AE4  0830               	movf	___ftdiv@f2,w
  5015  0AE5  00B6               	movwf	??___ftdiv
  5016  0AE6  0831               	movf	___ftdiv@f2+1,w
  5017  0AE7  00B7               	movwf	??___ftdiv+1
  5018  0AE8  0832               	movf	___ftdiv@f2+2,w
  5019  0AE9  00B8               	movwf	??___ftdiv+2
  5020  0AEA  3010               	movlw	16
  5021  0AEB                     u234_25:	
  5022  0AEB  1003               	clrc
  5023  0AEC  0CB8               	rrf	??___ftdiv+2,f
  5024  0AED  0CB7               	rrf	??___ftdiv+1,f
  5025  0AEE  0CB6               	rrf	??___ftdiv,f
  5026  0AEF  3EFF               	addlw	-1
  5027  0AF0  1D03               	skipz
  5028  0AF1  2AEB               	goto	u234_25
  5029  0AF2  0836               	movf	??___ftdiv,w
  5030  0AF3  00B9               	movwf	??___ftdiv+3
  5031  0AF4  0839               	movf	??___ftdiv+3,w
  5032  0AF5  06BF               	xorwf	___ftdiv@sign,f
  5033  0AF6  3080               	movlw	128
  5034  0AF7  00B6               	movwf	??___ftdiv
  5035  0AF8  0836               	movf	??___ftdiv,w
  5036  0AF9  05BF               	andwf	___ftdiv@sign,f
  5037  0AFA  17B4               	bsf	___ftdiv@f1+1,7
  5038  0AFB  30FF               	movlw	255
  5039  0AFC  05B3               	andwf	___ftdiv@f1,f
  5040  0AFD  30FF               	movlw	255
  5041  0AFE  05B4               	andwf	___ftdiv@f1+1,f
  5042  0AFF  3000               	movlw	0
  5043  0B00  05B5               	andwf	___ftdiv@f1+2,f
  5044  0B01  17B1               	bsf	___ftdiv@f2+1,7
  5045  0B02  30FF               	movlw	255
  5046  0B03  05B0               	andwf	___ftdiv@f2,f
  5047  0B04  30FF               	movlw	255
  5048  0B05  05B1               	andwf	___ftdiv@f2+1,f
  5049  0B06  3000               	movlw	0
  5050  0B07  05B2               	andwf	___ftdiv@f2+2,f
  5051  0B08  3018               	movlw	24
  5052  0B09  00B6               	movwf	??___ftdiv
  5053  0B0A  0836               	movf	??___ftdiv,w
  5054  0B0B  00BA               	movwf	___ftdiv@cntr
  5055  0B0C                     i1l2233:	
  5056  0B0C  3001               	movlw	1
  5057  0B0D                     u235_25:	
  5058  0B0D  1003               	clrc
  5059  0B0E  0DBB               	rlf	___ftdiv@f3,f
  5060  0B0F  0DBC               	rlf	___ftdiv@f3+1,f
  5061  0B10  0DBD               	rlf	___ftdiv@f3+2,f
  5062  0B11  3EFF               	addlw	-1
  5063  0B12  1D03               	skipz
  5064  0B13  2B0D               	goto	u235_25
  5065  0B14  0832               	movf	___ftdiv@f2+2,w
  5066  0B15  0235               	subwf	___ftdiv@f1+2,w
  5067  0B16  1D03               	skipz
  5068  0B17  2B1E               	goto	u236_25
  5069  0B18  0831               	movf	___ftdiv@f2+1,w
  5070  0B19  0234               	subwf	___ftdiv@f1+1,w
  5071  0B1A  1D03               	skipz
  5072  0B1B  2B1E               	goto	u236_25
  5073  0B1C  0830               	movf	___ftdiv@f2,w
  5074  0B1D  0233               	subwf	___ftdiv@f1,w
  5075  0B1E                     u236_25:	
  5076  0B1E  1C03               	skipc
  5077  0B1F  2B2B               	goto	i1l2241
  5078  0B20  0830               	movf	___ftdiv@f2,w
  5079  0B21  02B3               	subwf	___ftdiv@f1,f
  5080  0B22  0831               	movf	___ftdiv@f2+1,w
  5081  0B23  1C03               	skipc
  5082  0B24  0F31               	incfsz	___ftdiv@f2+1,w
  5083  0B25  02B4               	subwf	___ftdiv@f1+1,f
  5084  0B26  0832               	movf	___ftdiv@f2+2,w
  5085  0B27  1C03               	skipc
  5086  0B28  0A32               	incf	___ftdiv@f2+2,w
  5087  0B29  02B5               	subwf	___ftdiv@f1+2,f
  5088  0B2A  143B               	bsf	___ftdiv@f3,0
  5089  0B2B                     i1l2241:	
  5090  0B2B  3001               	movlw	1
  5091  0B2C                     u237_25:	
  5092  0B2C  1003               	clrc
  5093  0B2D  0DB3               	rlf	___ftdiv@f1,f
  5094  0B2E  0DB4               	rlf	___ftdiv@f1+1,f
  5095  0B2F  0DB5               	rlf	___ftdiv@f1+2,f
  5096  0B30  3EFF               	addlw	-1
  5097  0B31  1D03               	skipz
  5098  0B32  2B2C               	goto	u237_25
  5099  0B33  3001               	movlw	1
  5100  0B34  02BA               	subwf	___ftdiv@cntr,f
  5101  0B35  1D03               	btfss	3,2
  5102  0B36  2B0C               	goto	i1l2233
  5103  0B37  083B               	movf	___ftdiv@f3,w
  5104  0B38  00F0               	movwf	___ftpack@arg
  5105  0B39  083C               	movf	___ftdiv@f3+1,w
  5106  0B3A  00F1               	movwf	___ftpack@arg+1
  5107  0B3B  083D               	movf	___ftdiv@f3+2,w
  5108  0B3C  00F2               	movwf	___ftpack@arg+2
  5109  0B3D  083E               	movf	___ftdiv@exp,w
  5110  0B3E  00B6               	movwf	??___ftdiv
  5111  0B3F  0836               	movf	??___ftdiv,w
  5112  0B40  00F3               	movwf	___ftpack@exp
  5113  0B41  083F               	movf	___ftdiv@sign,w
  5114  0B42  00B7               	movwf	??___ftdiv+1
  5115  0B43  0837               	movf	??___ftdiv+1,w
  5116  0B44  00F4               	movwf	___ftpack@sign
  5117  0B45  160A  118A  25A2   	fcall	___ftpack
  5118  0B48  0870               	movf	?___ftpack,w
  5119  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  5120  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  5121  0B4B  00B0               	movwf	?___ftdiv
  5122  0B4C  0871               	movf	?___ftpack+1,w
  5123  0B4D  00B1               	movwf	?___ftdiv+1
  5124  0B4E  0872               	movf	?___ftpack+2,w
  5125  0B4F  00B2               	movwf	?___ftdiv+2
  5126  0B50  0008               	return
  5127  0B51                     __end_of___ftdiv:	
  5128                           
  5129                           	psect	text27
  5130  0C24                     __ptext27:	
  5131 ;; *************** function ___ftadd *****************
  5132 ;; Defined at:
  5133 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  f1              3    3[BANK0 ] float 
  5136 ;;  f2              3    6[BANK0 ] float 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  exp1            1   15[BANK0 ] unsigned char 
  5139 ;;  exp2            1   14[BANK0 ] unsigned char 
  5140 ;;  sign            1   13[BANK0 ] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  3    3[BANK0 ] float 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, pclath, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       6       0       0       0
  5151 ;;      Locals:         0       3       0       0       0
  5152 ;;      Temps:          0       4       0       0       0
  5153 ;;      Totals:         0      13       0       0       0
  5154 ;;Total ram usage:       13 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    1
  5157 ;; This function calls:
  5158 ;;		___ftpack
  5159 ;; This function is called by:
  5160 ;;		_trapmf
  5161 ;;		_Fuzzy
  5162 ;;		_trimf
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function ___ftadd
  5168  0C24                     ___ftadd:	
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5172  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0C26  0823               	movf	___ftadd@f1,w
  5175  0C27  00A9               	movwf	??___ftadd
  5176  0C28  0824               	movf	___ftadd@f1+1,w
  5177  0C29  00AA               	movwf	??___ftadd+1
  5178  0C2A  0825               	movf	___ftadd@f1+2,w
  5179  0C2B  00AB               	movwf	??___ftadd+2
  5180  0C2C  1003               	clrc
  5181  0C2D  0D2A               	rlf	??___ftadd+1,w
  5182  0C2E  0D2B               	rlf	??___ftadd+2,w
  5183  0C2F  00AC               	movwf	??___ftadd+3
  5184  0C30  082C               	movf	??___ftadd+3,w
  5185  0C31  00AF               	movwf	___ftadd@exp1
  5186  0C32  0826               	movf	___ftadd@f2,w
  5187  0C33  00A9               	movwf	??___ftadd
  5188  0C34  0827               	movf	___ftadd@f2+1,w
  5189  0C35  00AA               	movwf	??___ftadd+1
  5190  0C36  0828               	movf	___ftadd@f2+2,w
  5191  0C37  00AB               	movwf	??___ftadd+2
  5192  0C38  1003               	clrc
  5193  0C39  0D2A               	rlf	??___ftadd+1,w
  5194  0C3A  0D2B               	rlf	??___ftadd+2,w
  5195  0C3B  00AC               	movwf	??___ftadd+3
  5196  0C3C  082C               	movf	??___ftadd+3,w
  5197  0C3D  00AE               	movwf	___ftadd@exp2
  5198  0C3E  082F               	movf	___ftadd@exp1,w
  5199  0C3F  1903               	btfsc	3,2
  5200  0C40  2C4D               	goto	i1l3745
  5201  0C41  082E               	movf	___ftadd@exp2,w
  5202  0C42  022F               	subwf	___ftadd@exp1,w
  5203  0C43  1803               	skipnc
  5204  0C44  2C54               	goto	i1l3749
  5205  0C45  032F               	decf	___ftadd@exp1,w
  5206  0C46  3AFF               	xorlw	255
  5207  0C47  072E               	addwf	___ftadd@exp2,w
  5208  0C48  00A9               	movwf	??___ftadd
  5209  0C49  3019               	movlw	25
  5210  0C4A  0229               	subwf	??___ftadd,w
  5211  0C4B  1C03               	skipc
  5212  0C4C  2C54               	goto	i1l3749
  5213  0C4D                     i1l3745:	
  5214  0C4D  0826               	movf	___ftadd@f2,w
  5215  0C4E  00A3               	movwf	?___ftadd
  5216  0C4F  0827               	movf	___ftadd@f2+1,w
  5217  0C50  00A4               	movwf	?___ftadd+1
  5218  0C51  0828               	movf	___ftadd@f2+2,w
  5219  0C52  00A5               	movwf	?___ftadd+2
  5220  0C53  0008               	return
  5221  0C54                     i1l3749:	
  5222  0C54  082E               	movf	___ftadd@exp2,w
  5223  0C55  1903               	btfsc	3,2
  5224  0C56  0008               	return
  5225  0C57  082F               	movf	___ftadd@exp1,w
  5226  0C58  022E               	subwf	___ftadd@exp2,w
  5227  0C59  1803               	skipnc
  5228  0C5A  2C63               	goto	i1l3755
  5229  0C5B  032E               	decf	___ftadd@exp2,w
  5230  0C5C  3AFF               	xorlw	255
  5231  0C5D  072F               	addwf	___ftadd@exp1,w
  5232  0C5E  00A9               	movwf	??___ftadd
  5233  0C5F  3019               	movlw	25
  5234  0C60  0229               	subwf	??___ftadd,w
  5235  0C61  1803               	btfsc	3,0
  5236  0C62  0008               	return
  5237  0C63                     i1l3755:	
  5238  0C63  3006               	movlw	6
  5239  0C64  00A9               	movwf	??___ftadd
  5240  0C65  0829               	movf	??___ftadd,w
  5241  0C66  00AD               	movwf	___ftadd@sign
  5242  0C67  1BA5               	btfsc	___ftadd@f1+2,7
  5243  0C68  17AD               	bsf	___ftadd@sign,7
  5244  0C69  1BA8               	btfsc	___ftadd@f2+2,7
  5245  0C6A  172D               	bsf	___ftadd@sign,6
  5246  0C6B  17A4               	bsf	___ftadd@f1+1,7
  5247  0C6C  30FF               	movlw	255
  5248  0C6D  05A3               	andwf	___ftadd@f1,f
  5249  0C6E  30FF               	movlw	255
  5250  0C6F  05A4               	andwf	___ftadd@f1+1,f
  5251  0C70  3000               	movlw	0
  5252  0C71  05A5               	andwf	___ftadd@f1+2,f
  5253  0C72  17A7               	bsf	___ftadd@f2+1,7
  5254  0C73  30FF               	movlw	255
  5255  0C74  05A6               	andwf	___ftadd@f2,f
  5256  0C75  30FF               	movlw	255
  5257  0C76  05A7               	andwf	___ftadd@f2+1,f
  5258  0C77  3000               	movlw	0
  5259  0C78  05A8               	andwf	___ftadd@f2+2,f
  5260  0C79  082E               	movf	___ftadd@exp2,w
  5261  0C7A  022F               	subwf	___ftadd@exp1,w
  5262  0C7B  1803               	skipnc
  5263  0C7C  2CA3               	goto	i1l3777
  5264  0C7D                     i1l3767:	
  5265  0C7D  3001               	movlw	1
  5266  0C7E                     u496_25:	
  5267  0C7E  1003               	clrc
  5268  0C7F  0DA6               	rlf	___ftadd@f2,f
  5269  0C80  0DA7               	rlf	___ftadd@f2+1,f
  5270  0C81  0DA8               	rlf	___ftadd@f2+2,f
  5271  0C82  3EFF               	addlw	-1
  5272  0C83  1D03               	skipz
  5273  0C84  2C7E               	goto	u496_25
  5274  0C85  3001               	movlw	1
  5275  0C86  02AE               	subwf	___ftadd@exp2,f
  5276  0C87  082E               	movf	___ftadd@exp2,w
  5277  0C88  062F               	xorwf	___ftadd@exp1,w
  5278  0C89  1903               	skipnz
  5279  0C8A  2C9E               	goto	i1l3775
  5280  0C8B  3001               	movlw	1
  5281  0C8C  02AD               	subwf	___ftadd@sign,f
  5282  0C8D  082D               	movf	___ftadd@sign,w
  5283  0C8E  3907               	andlw	7
  5284  0C8F  1903               	btfsc	3,2
  5285  0C90  2C9E               	goto	i1l3775
  5286  0C91  2C7D               	goto	i1l3767
  5287  0C92                     i1l3773:	
  5288  0C92  3001               	movlw	1
  5289  0C93                     u499_25:	
  5290  0C93  1003               	clrc
  5291  0C94  0CA5               	rrf	___ftadd@f1+2,f
  5292  0C95  0CA4               	rrf	___ftadd@f1+1,f
  5293  0C96  0CA3               	rrf	___ftadd@f1,f
  5294  0C97  3EFF               	addlw	-1
  5295  0C98  1D03               	skipz
  5296  0C99  2C93               	goto	u499_25
  5297  0C9A  3001               	movlw	1
  5298  0C9B  00A9               	movwf	??___ftadd
  5299  0C9C  0829               	movf	??___ftadd,w
  5300  0C9D  07AF               	addwf	___ftadd@exp1,f
  5301  0C9E                     i1l3775:	
  5302  0C9E  082F               	movf	___ftadd@exp1,w
  5303  0C9F  062E               	xorwf	___ftadd@exp2,w
  5304  0CA0  1903               	btfsc	3,2
  5305  0CA1  2CCC               	goto	i1l758
  5306  0CA2  2C92               	goto	i1l3773
  5307  0CA3                     i1l3777:	
  5308  0CA3  082F               	movf	___ftadd@exp1,w
  5309  0CA4  022E               	subwf	___ftadd@exp2,w
  5310  0CA5  1803               	skipnc
  5311  0CA6  2CCC               	goto	i1l758
  5312  0CA7                     i1l3779:	
  5313  0CA7  3001               	movlw	1
  5314  0CA8                     u502_25:	
  5315  0CA8  1003               	clrc
  5316  0CA9  0DA3               	rlf	___ftadd@f1,f
  5317  0CAA  0DA4               	rlf	___ftadd@f1+1,f
  5318  0CAB  0DA5               	rlf	___ftadd@f1+2,f
  5319  0CAC  3EFF               	addlw	-1
  5320  0CAD  1D03               	skipz
  5321  0CAE  2CA8               	goto	u502_25
  5322  0CAF  3001               	movlw	1
  5323  0CB0  02AF               	subwf	___ftadd@exp1,f
  5324  0CB1  082E               	movf	___ftadd@exp2,w
  5325  0CB2  062F               	xorwf	___ftadd@exp1,w
  5326  0CB3  1903               	skipnz
  5327  0CB4  2CC8               	goto	i1l3787
  5328  0CB5  3001               	movlw	1
  5329  0CB6  02AD               	subwf	___ftadd@sign,f
  5330  0CB7  082D               	movf	___ftadd@sign,w
  5331  0CB8  3907               	andlw	7
  5332  0CB9  1903               	btfsc	3,2
  5333  0CBA  2CC8               	goto	i1l3787
  5334  0CBB  2CA7               	goto	i1l3779
  5335  0CBC                     i1l3785:	
  5336  0CBC  3001               	movlw	1
  5337  0CBD                     u505_25:	
  5338  0CBD  1003               	clrc
  5339  0CBE  0CA8               	rrf	___ftadd@f2+2,f
  5340  0CBF  0CA7               	rrf	___ftadd@f2+1,f
  5341  0CC0  0CA6               	rrf	___ftadd@f2,f
  5342  0CC1  3EFF               	addlw	-1
  5343  0CC2  1D03               	skipz
  5344  0CC3  2CBD               	goto	u505_25
  5345  0CC4  3001               	movlw	1
  5346  0CC5  00A9               	movwf	??___ftadd
  5347  0CC6  0829               	movf	??___ftadd,w
  5348  0CC7  07AE               	addwf	___ftadd@exp2,f
  5349  0CC8                     i1l3787:	
  5350  0CC8  082F               	movf	___ftadd@exp1,w
  5351  0CC9  062E               	xorwf	___ftadd@exp2,w
  5352  0CCA  1D03               	skipz
  5353  0CCB  2CBC               	goto	i1l3785
  5354  0CCC                     i1l758:	
  5355  0CCC  1FAD               	btfss	___ftadd@sign,7
  5356  0CCD  2CDE               	goto	i1l3791
  5357  0CCE  30FF               	movlw	255
  5358  0CCF  06A3               	xorwf	___ftadd@f1,f
  5359  0CD0  30FF               	movlw	255
  5360  0CD1  06A4               	xorwf	___ftadd@f1+1,f
  5361  0CD2  30FF               	movlw	255
  5362  0CD3  06A5               	xorwf	___ftadd@f1+2,f
  5363  0CD4  3001               	movlw	1
  5364  0CD5  07A3               	addwf	___ftadd@f1,f
  5365  0CD6  3000               	movlw	0
  5366  0CD7  1803               	skipnc
  5367  0CD8  3001               	movlw	1
  5368  0CD9  07A4               	addwf	___ftadd@f1+1,f
  5369  0CDA  3000               	movlw	0
  5370  0CDB  1803               	skipnc
  5371  0CDC  3001               	movlw	1
  5372  0CDD  07A5               	addwf	___ftadd@f1+2,f
  5373  0CDE                     i1l3791:	
  5374  0CDE  1F2D               	btfss	___ftadd@sign,6
  5375  0CDF  2CF0               	goto	i1l3795
  5376  0CE0  30FF               	movlw	255
  5377  0CE1  06A6               	xorwf	___ftadd@f2,f
  5378  0CE2  30FF               	movlw	255
  5379  0CE3  06A7               	xorwf	___ftadd@f2+1,f
  5380  0CE4  30FF               	movlw	255
  5381  0CE5  06A8               	xorwf	___ftadd@f2+2,f
  5382  0CE6  3001               	movlw	1
  5383  0CE7  07A6               	addwf	___ftadd@f2,f
  5384  0CE8  3000               	movlw	0
  5385  0CE9  1803               	skipnc
  5386  0CEA  3001               	movlw	1
  5387  0CEB  07A7               	addwf	___ftadd@f2+1,f
  5388  0CEC  3000               	movlw	0
  5389  0CED  1803               	skipnc
  5390  0CEE  3001               	movlw	1
  5391  0CEF  07A8               	addwf	___ftadd@f2+2,f
  5392  0CF0                     i1l3795:	
  5393  0CF0  01AD               	clrf	___ftadd@sign
  5394  0CF1  0823               	movf	___ftadd@f1,w
  5395  0CF2  07A6               	addwf	___ftadd@f2,f
  5396  0CF3  0824               	movf	___ftadd@f1+1,w
  5397  0CF4  1103               	clrz
  5398  0CF5  1803               	skipnc
  5399  0CF6  0A24               	incf	___ftadd@f1+1,w
  5400  0CF7  1D03               	btfss	3,2
  5401  0CF8  07A7               	addwf	___ftadd@f2+1,f
  5402  0CF9  0825               	movf	___ftadd@f1+2,w
  5403  0CFA  1103               	clrz
  5404  0CFB  1803               	skipnc
  5405  0CFC  0A25               	incf	___ftadd@f1+2,w
  5406  0CFD  1D03               	btfss	3,2
  5407  0CFE  07A8               	addwf	___ftadd@f2+2,f
  5408  0CFF  1FA8               	btfss	___ftadd@f2+2,7
  5409  0D00  2D13               	goto	i1l3805
  5410  0D01  30FF               	movlw	255
  5411  0D02  06A6               	xorwf	___ftadd@f2,f
  5412  0D03  30FF               	movlw	255
  5413  0D04  06A7               	xorwf	___ftadd@f2+1,f
  5414  0D05  30FF               	movlw	255
  5415  0D06  06A8               	xorwf	___ftadd@f2+2,f
  5416  0D07  3001               	movlw	1
  5417  0D08  07A6               	addwf	___ftadd@f2,f
  5418  0D09  3000               	movlw	0
  5419  0D0A  1803               	skipnc
  5420  0D0B  3001               	movlw	1
  5421  0D0C  07A7               	addwf	___ftadd@f2+1,f
  5422  0D0D  3000               	movlw	0
  5423  0D0E  1803               	skipnc
  5424  0D0F  3001               	movlw	1
  5425  0D10  07A8               	addwf	___ftadd@f2+2,f
  5426  0D11  01AD               	clrf	___ftadd@sign
  5427  0D12  0AAD               	incf	___ftadd@sign,f
  5428  0D13                     i1l3805:	
  5429  0D13  0826               	movf	___ftadd@f2,w
  5430  0D14  00F0               	movwf	___ftpack@arg
  5431  0D15  0827               	movf	___ftadd@f2+1,w
  5432  0D16  00F1               	movwf	___ftpack@arg+1
  5433  0D17  0828               	movf	___ftadd@f2+2,w
  5434  0D18  00F2               	movwf	___ftpack@arg+2
  5435  0D19  082F               	movf	___ftadd@exp1,w
  5436  0D1A  00A9               	movwf	??___ftadd
  5437  0D1B  0829               	movf	??___ftadd,w
  5438  0D1C  00F3               	movwf	___ftpack@exp
  5439  0D1D  082D               	movf	___ftadd@sign,w
  5440  0D1E  00AA               	movwf	??___ftadd+1
  5441  0D1F  082A               	movf	??___ftadd+1,w
  5442  0D20  00F4               	movwf	___ftpack@sign
  5443  0D21  160A  118A  25A2   	fcall	___ftpack
  5444  0D24  0870               	movf	?___ftpack,w
  5445  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0D27  00A3               	movwf	?___ftadd
  5448  0D28  0871               	movf	?___ftpack+1,w
  5449  0D29  00A4               	movwf	?___ftadd+1
  5450  0D2A  0872               	movf	?___ftpack+2,w
  5451  0D2B  00A5               	movwf	?___ftadd+2
  5452  0D2C  0008               	return
  5453  0D2D                     __end_of___ftadd:	
  5454                           
  5455                           	psect	text28
  5456  07E2                     __ptext28:	
  5457 ;; *************** function _minimo *****************
  5458 ;; Defined at:
  5459 ;;		line 113 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  a               3    0[BANK0 ] float 
  5462 ;;  b               3    3[BANK0 ] float 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  3    0[BANK0 ] float 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5474 ;;      Params:         0       6       0       0       0
  5475 ;;      Locals:         0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0
  5477 ;;      Totals:         0       6       0       0       0
  5478 ;;Total ram usage:        6 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    1
  5481 ;; This function calls:
  5482 ;;		___ftge
  5483 ;; This function is called by:
  5484 ;;		_Fuzzy
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function _minimo
  5490  07E2                     _minimo:	
  5491                           
  5492                           ;main.c: 114: if (a < b) {
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5496  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5497  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  5498  07E4  0820               	movf	minimo@a,w
  5499  07E5  00F0               	movwf	___ftge@ff1
  5500  07E6  0821               	movf	minimo@a+1,w
  5501  07E7  00F1               	movwf	___ftge@ff1+1
  5502  07E8  0822               	movf	minimo@a+2,w
  5503  07E9  00F2               	movwf	___ftge@ff1+2
  5504  07EA  0823               	movf	minimo@b,w
  5505  07EB  00F3               	movwf	___ftge@ff2
  5506  07EC  0824               	movf	minimo@b+1,w
  5507  07ED  00F4               	movwf	___ftge@ff2+1
  5508  07EE  0825               	movf	minimo@b+2,w
  5509  07EF  00F5               	movwf	___ftge@ff2+2
  5510  07F0  160A  118A  2545  120A  118A  	fcall	___ftge
  5511  07F5  1C03               	btfss	3,0
  5512  07F6  0008               	return
  5513                           
  5514                           ;main.c: 116: }
  5515                           ;main.c: 117: return b;
  5516                           
  5517                           ;main.c: 115: return a;
  5518  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5519  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5520  07F9  0823               	movf	minimo@b,w
  5521  07FA  00A0               	movwf	?_minimo
  5522  07FB  0824               	movf	minimo@b+1,w
  5523  07FC  00A1               	movwf	?_minimo+1
  5524  07FD  0825               	movf	minimo@b+2,w
  5525  07FE  00A2               	movwf	?_minimo+2
  5526  07FF  0008               	return
  5527  0800                     __end_of_minimo:	
  5528                           
  5529                           	psect	text29
  5530  1389                     __ptext29:	
  5531 ;; *************** function _maximo *****************
  5532 ;; Defined at:
  5533 ;;		line 106 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  a               3    6[BANK0 ] float 
  5536 ;;  b               3    9[BANK0 ] float 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  3    6[BANK0 ] float 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       6       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         0       6       0       0       0
  5552 ;;Total ram usage:        6 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    1
  5555 ;; This function calls:
  5556 ;;		___ftge
  5557 ;; This function is called by:
  5558 ;;		_Fuzzy
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _maximo
  5564  1389                     _maximo:	
  5565                           
  5566                           ;main.c: 107: if (a > b) {
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5570  1389  1283               	bcf	3,5	;RP0=0, select bank0
  5571  138A  1303               	bcf	3,6	;RP1=0, select bank0
  5572  138B  0829               	movf	maximo@b,w
  5573  138C  00F0               	movwf	___ftge@ff1
  5574  138D  082A               	movf	maximo@b+1,w
  5575  138E  00F1               	movwf	___ftge@ff1+1
  5576  138F  082B               	movf	maximo@b+2,w
  5577  1390  00F2               	movwf	___ftge@ff1+2
  5578  1391  0826               	movf	maximo@a,w
  5579  1392  00F3               	movwf	___ftge@ff2
  5580  1393  0827               	movf	maximo@a+1,w
  5581  1394  00F4               	movwf	___ftge@ff2+1
  5582  1395  0828               	movf	maximo@a+2,w
  5583  1396  00F5               	movwf	___ftge@ff2+2
  5584  1397  160A  118A  2545  160A  118A  	fcall	___ftge
  5585  139C  1C03               	btfss	3,0
  5586  139D  0008               	return
  5587                           
  5588                           ;main.c: 109: }
  5589                           ;main.c: 110: return b;
  5590                           
  5591                           ;main.c: 108: return a;
  5592  139E  1283               	bcf	3,5	;RP0=0, select bank0
  5593  139F  1303               	bcf	3,6	;RP1=0, select bank0
  5594  13A0  0829               	movf	maximo@b,w
  5595  13A1  00A6               	movwf	?_maximo
  5596  13A2  082A               	movf	maximo@b+1,w
  5597  13A3  00A7               	movwf	?_maximo+1
  5598  13A4  082B               	movf	maximo@b+2,w
  5599  13A5  00A8               	movwf	?_maximo+2
  5600  13A6  0008               	return
  5601  13A7                     __end_of_maximo:	
  5602                           
  5603                           	psect	text30
  5604  1545                     __ptext30:	
  5605 ;; *************** function ___ftge *****************
  5606 ;; Defined at:
  5607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  ff1             3    0[COMMON] float 
  5610 ;;  ff2             3    3[COMMON] float 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;		None               void
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5622 ;;      Params:         6       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0
  5624 ;;      Temps:          6       0       0       0       0
  5625 ;;      Totals:        12       0       0       0       0
  5626 ;;Total ram usage:       12 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_trapmf
  5632 ;;		_maximo
  5633 ;;		_minimo
  5634 ;;		_Fuzzy
  5635 ;;		_trimf
  5636 ;;		_min_val
  5637 ;;		_max_val
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function ___ftge
  5643  1545                     ___ftge:	
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5647  1545  1FF2               	btfss	___ftge@ff1+2,7
  5648  1546  2D6C               	goto	i1l2253
  5649  1547  3000               	movlw	0
  5650  1548  00F6               	movwf	??___ftge
  5651  1549  3000               	movlw	0
  5652  154A  00F7               	movwf	??___ftge+1
  5653  154B  3080               	movlw	128
  5654  154C  00F8               	movwf	??___ftge+2
  5655  154D  0970               	comf	___ftge@ff1,w
  5656  154E  00F9               	movwf	??___ftge+3
  5657  154F  0971               	comf	___ftge@ff1+1,w
  5658  1550  00FA               	movwf	??___ftge+4
  5659  1551  0972               	comf	___ftge@ff1+2,w
  5660  1552  00FB               	movwf	??___ftge+5
  5661  1553  0AF9               	incf	??___ftge+3,f
  5662  1554  1903               	skipnz
  5663  1555  0AFA               	incf	??___ftge+4,f
  5664  1556  1903               	skipnz
  5665  1557  0AFB               	incf	??___ftge+5,f
  5666  1558  0879               	movf	??___ftge+3,w
  5667  1559  07F6               	addwf	??___ftge,f
  5668  155A  087A               	movf	??___ftge+4,w
  5669  155B  1803               	skipnc
  5670  155C  0F7A               	incfsz	??___ftge+4,w
  5671  155D  2D5F               	goto	u240_21
  5672  155E  2D60               	goto	u240_22
  5673  155F                     u240_21:	
  5674  155F  07F7               	addwf	??___ftge+1,f
  5675  1560                     u240_22:	
  5676  1560  087B               	movf	??___ftge+5,w
  5677  1561  1803               	skipnc
  5678  1562  0F7B               	incfsz	??___ftge+5,w
  5679  1563  2D65               	goto	u240_23
  5680  1564  2D66               	goto	u240_24
  5681  1565                     u240_23:	
  5682  1565  07F8               	addwf	??___ftge+2,f
  5683  1566                     u240_24:	
  5684  1566  0876               	movf	??___ftge,w
  5685  1567  00F0               	movwf	___ftge@ff1
  5686  1568  0877               	movf	??___ftge+1,w
  5687  1569  00F1               	movwf	___ftge@ff1+1
  5688  156A  0878               	movf	??___ftge+2,w
  5689  156B  00F2               	movwf	___ftge@ff1+2
  5690  156C                     i1l2253:	
  5691  156C  1FF5               	btfss	___ftge@ff2+2,7
  5692  156D  2D93               	goto	i1l2257
  5693  156E  3000               	movlw	0
  5694  156F  00F6               	movwf	??___ftge
  5695  1570  3000               	movlw	0
  5696  1571  00F7               	movwf	??___ftge+1
  5697  1572  3080               	movlw	128
  5698  1573  00F8               	movwf	??___ftge+2
  5699  1574  0973               	comf	___ftge@ff2,w
  5700  1575  00F9               	movwf	??___ftge+3
  5701  1576  0974               	comf	___ftge@ff2+1,w
  5702  1577  00FA               	movwf	??___ftge+4
  5703  1578  0975               	comf	___ftge@ff2+2,w
  5704  1579  00FB               	movwf	??___ftge+5
  5705  157A  0AF9               	incf	??___ftge+3,f
  5706  157B  1903               	skipnz
  5707  157C  0AFA               	incf	??___ftge+4,f
  5708  157D  1903               	skipnz
  5709  157E  0AFB               	incf	??___ftge+5,f
  5710  157F  0879               	movf	??___ftge+3,w
  5711  1580  07F6               	addwf	??___ftge,f
  5712  1581  087A               	movf	??___ftge+4,w
  5713  1582  1803               	skipnc
  5714  1583  0F7A               	incfsz	??___ftge+4,w
  5715  1584  2D86               	goto	u242_21
  5716  1585  2D87               	goto	u242_22
  5717  1586                     u242_21:	
  5718  1586  07F7               	addwf	??___ftge+1,f
  5719  1587                     u242_22:	
  5720  1587  087B               	movf	??___ftge+5,w
  5721  1588  1803               	skipnc
  5722  1589  0F7B               	incfsz	??___ftge+5,w
  5723  158A  2D8C               	goto	u242_23
  5724  158B  2D8D               	goto	u242_24
  5725  158C                     u242_23:	
  5726  158C  07F8               	addwf	??___ftge+2,f
  5727  158D                     u242_24:	
  5728  158D  0876               	movf	??___ftge,w
  5729  158E  00F3               	movwf	___ftge@ff2
  5730  158F  0877               	movf	??___ftge+1,w
  5731  1590  00F4               	movwf	___ftge@ff2+1
  5732  1591  0878               	movf	??___ftge+2,w
  5733  1592  00F5               	movwf	___ftge@ff2+2
  5734  1593                     i1l2257:	
  5735  1593  3080               	movlw	128
  5736  1594  06F2               	xorwf	___ftge@ff1+2,f
  5737  1595  3080               	movlw	128
  5738  1596  06F5               	xorwf	___ftge@ff2+2,f
  5739  1597  0875               	movf	___ftge@ff2+2,w
  5740  1598  0272               	subwf	___ftge@ff1+2,w
  5741  1599  1D03               	skipz
  5742  159A  0008               	return
  5743  159B  0874               	movf	___ftge@ff2+1,w
  5744  159C  0271               	subwf	___ftge@ff1+1,w
  5745  159D  1D03               	skipz
  5746  159E  0008               	return
  5747  159F  0873               	movf	___ftge@ff2,w
  5748  15A0  0270               	subwf	___ftge@ff1,w
  5749  15A1  0008               	return
  5750  15A2                     __end_of___ftge:	
  5751                           
  5752                           	psect	text31
  5753  12F4                     __ptext31:	
  5754 ;; *************** function _abs *****************
  5755 ;; Defined at:
  5756 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  a               2    0[COMMON] int 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  2    0[COMMON] int 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5770 ;;      Params:         2       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0
  5772 ;;      Temps:          2       0       0       0       0
  5773 ;;      Totals:         4       0       0       0       0
  5774 ;;Total ram usage:        4 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_Fuzzy
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _abs
  5785  12F4                     _abs:	
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _abs: [wreg+status,2+status,0]
  5789  12F4  1FF1               	btfss	abs@a+1,7
  5790  12F5  0008               	return
  5791  12F6  0970               	comf	abs@a,w
  5792  12F7  00F2               	movwf	??_abs
  5793  12F8  0971               	comf	abs@a+1,w
  5794  12F9  00F3               	movwf	??_abs+1
  5795  12FA  0AF2               	incf	??_abs,f
  5796  12FB  1903               	skipnz
  5797  12FC  0AF3               	incf	??_abs+1,f
  5798  12FD  0872               	movf	??_abs,w
  5799  12FE  00F0               	movwf	?_abs
  5800  12FF  0873               	movf	??_abs+1,w
  5801  1300  00F1               	movwf	?_abs+1
  5802  1301  0008               	return
  5803  1302                     __end_of_abs:	
  5804                           
  5805                           	psect	text32
  5806  146E                     __ptext32:	
  5807 ;; *************** function ___wmul *****************
  5808 ;; Defined at:
  5809 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  multiplier      2   26[BANK0 ] unsigned int 
  5812 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  product         2   30[BANK0 ] unsigned int 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2   26[BANK0 ] unsigned int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5824 ;;      Params:         0       4       0       0       0
  5825 ;;      Locals:         0       2       0       0       0
  5826 ;;      Temps:          0       0       0       0       0
  5827 ;;      Totals:         0       6       0       0       0
  5828 ;;Total ram usage:        6 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_Fuzzy
  5834 ;;		_ISR
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function ___wmul
  5840  146E                     ___wmul:	
  5841                           
  5842                           ;incstack = 0
  5843                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5844  146E  1283               	bcf	3,5	;RP0=0, select bank0
  5845  146F  1303               	bcf	3,6	;RP1=0, select bank0
  5846  1470  01BE               	clrf	___wmul@product
  5847  1471  01BF               	clrf	___wmul@product+1
  5848  1472                     i1l2355:	
  5849  1472  1C3A               	btfss	___wmul@multiplier,0
  5850  1473  2C7A               	goto	i1l564
  5851  1474  083C               	movf	___wmul@multiplicand,w
  5852  1475  07BE               	addwf	___wmul@product,f
  5853  1476  1803               	skipnc
  5854  1477  0ABF               	incf	___wmul@product+1,f
  5855  1478  083D               	movf	___wmul@multiplicand+1,w
  5856  1479  07BF               	addwf	___wmul@product+1,f
  5857  147A                     i1l564:	
  5858  147A  3001               	movlw	1
  5859  147B                     u258_25:	
  5860  147B  1003               	clrc
  5861  147C  0DBC               	rlf	___wmul@multiplicand,f
  5862  147D  0DBD               	rlf	___wmul@multiplicand+1,f
  5863  147E  3EFF               	addlw	-1
  5864  147F  1D03               	skipz
  5865  1480  2C7B               	goto	u258_25
  5866  1481  3001               	movlw	1
  5867  1482                     u259_25:	
  5868  1482  1003               	clrc
  5869  1483  0CBB               	rrf	___wmul@multiplier+1,f
  5870  1484  0CBA               	rrf	___wmul@multiplier,f
  5871  1485  3EFF               	addlw	-1
  5872  1486  1D03               	skipz
  5873  1487  2C82               	goto	u259_25
  5874  1488  083B               	movf	___wmul@multiplier+1,w
  5875  1489  043A               	iorwf	___wmul@multiplier,w
  5876  148A  1D03               	skipz
  5877  148B  2C72               	goto	i1l2355
  5878  148C  083F               	movf	___wmul@product+1,w
  5879  148D  01BB               	clrf	?___wmul+1
  5880  148E  07BB               	addwf	?___wmul+1,f
  5881  148F  083E               	movf	___wmul@product,w
  5882  1490  01BA               	clrf	?___wmul
  5883  1491  07BA               	addwf	?___wmul,f
  5884  1492  0008               	return
  5885  1493                     __end_of___wmul:	
  5886                           
  5887                           	psect	text33
  5888  1314                     __ptext33:	
  5889 ;; *************** function ___lwtoft *****************
  5890 ;; Defined at:
  5891 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  c               2    8[COMMON] unsigned int 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  3    8[COMMON] float 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, pclath, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5905 ;;      Params:         3       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0
  5907 ;;      Temps:          1       0       0       0       0
  5908 ;;      Totals:         4       0       0       0       0
  5909 ;;Total ram usage:        4 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    1
  5912 ;; This function calls:
  5913 ;;		___ftpack
  5914 ;; This function is called by:
  5915 ;;		_Fuzzy
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function ___lwtoft
  5921  1314                     ___lwtoft:	
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5925  1314  0878               	movf	___lwtoft@c,w
  5926  1315  00F0               	movwf	___ftpack@arg
  5927  1316  0879               	movf	___lwtoft@c+1,w
  5928  1317  00F1               	movwf	___ftpack@arg+1
  5929  1318  01F2               	clrf	___ftpack@arg+2
  5930  1319  308E               	movlw	142
  5931  131A  00FB               	movwf	??___lwtoft
  5932  131B  087B               	movf	??___lwtoft,w
  5933  131C  00F3               	movwf	___ftpack@exp
  5934  131D  01F4               	clrf	___ftpack@sign
  5935  131E  160A  118A  25A2   	fcall	___ftpack
  5936  1321  0870               	movf	?___ftpack,w
  5937  1322  00F8               	movwf	?___lwtoft
  5938  1323  0871               	movf	?___ftpack+1,w
  5939  1324  00F9               	movwf	?___lwtoft+1
  5940  1325  0872               	movf	?___ftpack+2,w
  5941  1326  00FA               	movwf	?___lwtoft+2
  5942  1327  0008               	return
  5943  1328                     __end_of___lwtoft:	
  5944                           
  5945                           	psect	text34
  5946  1772                     __ptext34:	
  5947 ;; *************** function ___fttol *****************
  5948 ;; Defined at:
  5949 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  f1              3   12[BANK0 ] float 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  lval            4   21[BANK0 ] unsigned long 
  5954 ;;  exp1            1   25[BANK0 ] unsigned char 
  5955 ;;  sign1           1   20[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  4   12[BANK0 ] long 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5965 ;;      Params:         0       4       0       0       0
  5966 ;;      Locals:         0       6       0       0       0
  5967 ;;      Temps:          0       4       0       0       0
  5968 ;;      Totals:         0      14       0       0       0
  5969 ;;Total ram usage:       14 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_Fuzzy
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function ___fttol
  5980  1772                     ___fttol:	
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5984  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5985  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5986  1774  082C               	movf	___fttol@f1,w
  5987  1775  00B0               	movwf	??___fttol
  5988  1776  082D               	movf	___fttol@f1+1,w
  5989  1777  00B1               	movwf	??___fttol+1
  5990  1778  082E               	movf	___fttol@f1+2,w
  5991  1779  00B2               	movwf	??___fttol+2
  5992  177A  1003               	clrc
  5993  177B  0D31               	rlf	??___fttol+1,w
  5994  177C  0D32               	rlf	??___fttol+2,w
  5995  177D  00B3               	movwf	??___fttol+3
  5996  177E  0833               	movf	??___fttol+3,w
  5997  177F  00B9               	movwf	___fttol@exp1
  5998  1780  08B9               	movf	___fttol@exp1,f
  5999  1781  1D03               	skipz
  6000  1782  2F8C               	goto	i1l2473
  6001  1783  3000               	movlw	0
  6002  1784  00AF               	movwf	?___fttol+3
  6003  1785  3000               	movlw	0
  6004  1786  00AE               	movwf	?___fttol+2
  6005  1787  3000               	movlw	0
  6006  1788  00AD               	movwf	?___fttol+1
  6007  1789  3000               	movlw	0
  6008  178A  00AC               	movwf	?___fttol
  6009  178B  0008               	return
  6010  178C                     i1l2473:	
  6011  178C  082C               	movf	___fttol@f1,w
  6012  178D  00B0               	movwf	??___fttol
  6013  178E  082D               	movf	___fttol@f1+1,w
  6014  178F  00B1               	movwf	??___fttol+1
  6015  1790  082E               	movf	___fttol@f1+2,w
  6016  1791  00B2               	movwf	??___fttol+2
  6017  1792  3017               	movlw	23
  6018  1793                     u287_25:	
  6019  1793  1003               	clrc
  6020  1794  0CB2               	rrf	??___fttol+2,f
  6021  1795  0CB1               	rrf	??___fttol+1,f
  6022  1796  0CB0               	rrf	??___fttol,f
  6023  1797  3EFF               	addlw	-1
  6024  1798  1D03               	skipz
  6025  1799  2F93               	goto	u287_25
  6026  179A  0830               	movf	??___fttol,w
  6027  179B  00B3               	movwf	??___fttol+3
  6028  179C  0833               	movf	??___fttol+3,w
  6029  179D  00B4               	movwf	___fttol@sign1
  6030  179E  17AD               	bsf	___fttol@f1+1,7
  6031  179F  30FF               	movlw	255
  6032  17A0  05AC               	andwf	___fttol@f1,f
  6033  17A1  30FF               	movlw	255
  6034  17A2  05AD               	andwf	___fttol@f1+1,f
  6035  17A3  3000               	movlw	0
  6036  17A4  05AE               	andwf	___fttol@f1+2,f
  6037  17A5  082C               	movf	___fttol@f1,w
  6038  17A6  00B5               	movwf	___fttol@lval
  6039  17A7  082D               	movf	___fttol@f1+1,w
  6040  17A8  00B6               	movwf	___fttol@lval+1
  6041  17A9  082E               	movf	___fttol@f1+2,w
  6042  17AA  00B7               	movwf	___fttol@lval+2
  6043  17AB  01B8               	clrf	___fttol@lval+3
  6044  17AC  308E               	movlw	142
  6045  17AD  02B9               	subwf	___fttol@exp1,f
  6046  17AE  1FB9               	btfss	___fttol@exp1,7
  6047  17AF  2FCE               	goto	i1l2493
  6048  17B0  0839               	movf	___fttol@exp1,w
  6049  17B1  3A80               	xorlw	128
  6050  17B2  3E8F               	addlw	143
  6051  17B3  1803               	skipnc
  6052  17B4  2FBE               	goto	i1l2491
  6053  17B5  3000               	movlw	0
  6054  17B6  00AF               	movwf	?___fttol+3
  6055  17B7  3000               	movlw	0
  6056  17B8  00AE               	movwf	?___fttol+2
  6057  17B9  3000               	movlw	0
  6058  17BA  00AD               	movwf	?___fttol+1
  6059  17BB  3000               	movlw	0
  6060  17BC  00AC               	movwf	?___fttol
  6061  17BD  0008               	return
  6062  17BE                     i1l2491:	
  6063  17BE  3001               	movlw	1
  6064  17BF                     u290_25:	
  6065  17BF  1003               	clrc
  6066  17C0  0CB8               	rrf	___fttol@lval+3,f
  6067  17C1  0CB7               	rrf	___fttol@lval+2,f
  6068  17C2  0CB6               	rrf	___fttol@lval+1,f
  6069  17C3  0CB5               	rrf	___fttol@lval,f
  6070  17C4  3EFF               	addlw	-1
  6071  17C5  1D03               	skipz
  6072  17C6  2FBF               	goto	u290_25
  6073  17C7  3001               	movlw	1
  6074  17C8  00B0               	movwf	??___fttol
  6075  17C9  0830               	movf	??___fttol,w
  6076  17CA  07B9               	addwf	___fttol@exp1,f
  6077  17CB  1903               	btfsc	3,2
  6078  17CC  2FE9               	goto	i1l2503
  6079  17CD  2FBE               	goto	i1l2491
  6080  17CE                     i1l2493:	
  6081  17CE  3018               	movlw	24
  6082  17CF  0239               	subwf	___fttol@exp1,w
  6083  17D0  1C03               	skipc
  6084  17D1  2FE6               	goto	i1l2501
  6085  17D2  3000               	movlw	0
  6086  17D3  00AF               	movwf	?___fttol+3
  6087  17D4  3000               	movlw	0
  6088  17D5  00AE               	movwf	?___fttol+2
  6089  17D6  3000               	movlw	0
  6090  17D7  00AD               	movwf	?___fttol+1
  6091  17D8  3000               	movlw	0
  6092  17D9  00AC               	movwf	?___fttol
  6093  17DA  0008               	return
  6094  17DB                     i1l2499:	
  6095  17DB  3001               	movlw	1
  6096  17DC  00B0               	movwf	??___fttol
  6097  17DD                     u293_25:	
  6098  17DD  1003               	clrc
  6099  17DE  0DB5               	rlf	___fttol@lval,f
  6100  17DF  0DB6               	rlf	___fttol@lval+1,f
  6101  17E0  0DB7               	rlf	___fttol@lval+2,f
  6102  17E1  0DB8               	rlf	___fttol@lval+3,f
  6103  17E2  0BB0               	decfsz	??___fttol,f
  6104  17E3  2FDD               	goto	u293_25
  6105  17E4  3001               	movlw	1
  6106  17E5  02B9               	subwf	___fttol@exp1,f
  6107  17E6                     i1l2501:	
  6108  17E6  08B9               	movf	___fttol@exp1,f
  6109  17E7  1D03               	skipz
  6110  17E8  2FDB               	goto	i1l2499
  6111  17E9                     i1l2503:	
  6112  17E9  0834               	movf	___fttol@sign1,w
  6113  17EA  1903               	btfsc	3,2
  6114  17EB  2FF7               	goto	i1l2507
  6115  17EC  09B5               	comf	___fttol@lval,f
  6116  17ED  09B6               	comf	___fttol@lval+1,f
  6117  17EE  09B7               	comf	___fttol@lval+2,f
  6118  17EF  09B8               	comf	___fttol@lval+3,f
  6119  17F0  0AB5               	incf	___fttol@lval,f
  6120  17F1  1903               	skipnz
  6121  17F2  0AB6               	incf	___fttol@lval+1,f
  6122  17F3  1903               	skipnz
  6123  17F4  0AB7               	incf	___fttol@lval+2,f
  6124  17F5  1903               	skipnz
  6125  17F6  0AB8               	incf	___fttol@lval+3,f
  6126  17F7                     i1l2507:	
  6127  17F7  0838               	movf	___fttol@lval+3,w
  6128  17F8  00AF               	movwf	?___fttol+3
  6129  17F9  0837               	movf	___fttol@lval+2,w
  6130  17FA  00AE               	movwf	?___fttol+2
  6131  17FB  0836               	movf	___fttol@lval+1,w
  6132  17FC  00AD               	movwf	?___fttol+1
  6133  17FD  0835               	movf	___fttol@lval,w
  6134  17FE  00AC               	movwf	?___fttol
  6135  17FF  0008               	return
  6136  1800                     __end_of___fttol:	
  6137                           
  6138                           	psect	text35
  6139  0B51                     __ptext35:	
  6140 ;; *************** function ___ftmul *****************
  6141 ;; Defined at:
  6142 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  f1              3   50[BANK0 ] float 
  6145 ;;  f2              3   53[BANK0 ] float 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6148 ;;  sign            1   65[BANK0 ] unsigned char 
  6149 ;;  cntr            1   64[BANK0 ] unsigned char 
  6150 ;;  exp             1   60[BANK0 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  3   50[BANK0 ] float 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, pclath, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       6       0       0       0
  6161 ;;      Locals:         0       6       0       0       0
  6162 ;;      Temps:          0       4       0       0       0
  6163 ;;      Totals:         0      16       0       0       0
  6164 ;;Total ram usage:       16 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    1
  6167 ;; This function calls:
  6168 ;;		___ftpack
  6169 ;; This function is called by:
  6170 ;;		_Fuzzy
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function ___ftmul
  6176  0B51                     ___ftmul:	
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6180  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0B53  0852               	movf	___ftmul@f1,w
  6183  0B54  00D8               	movwf	??___ftmul
  6184  0B55  0853               	movf	___ftmul@f1+1,w
  6185  0B56  00D9               	movwf	??___ftmul+1
  6186  0B57  0854               	movf	___ftmul@f1+2,w
  6187  0B58  00DA               	movwf	??___ftmul+2
  6188  0B59  1003               	clrc
  6189  0B5A  0D59               	rlf	??___ftmul+1,w
  6190  0B5B  0D5A               	rlf	??___ftmul+2,w
  6191  0B5C  00DB               	movwf	??___ftmul+3
  6192  0B5D  085B               	movf	??___ftmul+3,w
  6193  0B5E  00DC               	movwf	___ftmul@exp
  6194  0B5F  08DC               	movf	___ftmul@exp,f
  6195  0B60  1D03               	skipz
  6196  0B61  2B69               	goto	i1l2423
  6197  0B62  3000               	movlw	0
  6198  0B63  00D2               	movwf	?___ftmul
  6199  0B64  3000               	movlw	0
  6200  0B65  00D3               	movwf	?___ftmul+1
  6201  0B66  3000               	movlw	0
  6202  0B67  00D4               	movwf	?___ftmul+2
  6203  0B68  0008               	return
  6204  0B69                     i1l2423:	
  6205  0B69  0855               	movf	___ftmul@f2,w
  6206  0B6A  00D8               	movwf	??___ftmul
  6207  0B6B  0856               	movf	___ftmul@f2+1,w
  6208  0B6C  00D9               	movwf	??___ftmul+1
  6209  0B6D  0857               	movf	___ftmul@f2+2,w
  6210  0B6E  00DA               	movwf	??___ftmul+2
  6211  0B6F  1003               	clrc
  6212  0B70  0D59               	rlf	??___ftmul+1,w
  6213  0B71  0D5A               	rlf	??___ftmul+2,w
  6214  0B72  00DB               	movwf	??___ftmul+3
  6215  0B73  085B               	movf	??___ftmul+3,w
  6216  0B74  00E1               	movwf	___ftmul@sign
  6217  0B75  08E1               	movf	___ftmul@sign,f
  6218  0B76  1D03               	skipz
  6219  0B77  2B7F               	goto	i1l2429
  6220  0B78  3000               	movlw	0
  6221  0B79  00D2               	movwf	?___ftmul
  6222  0B7A  3000               	movlw	0
  6223  0B7B  00D3               	movwf	?___ftmul+1
  6224  0B7C  3000               	movlw	0
  6225  0B7D  00D4               	movwf	?___ftmul+2
  6226  0B7E  0008               	return
  6227  0B7F                     i1l2429:	
  6228  0B7F  0861               	movf	___ftmul@sign,w
  6229  0B80  3E7B               	addlw	123
  6230  0B81  00D8               	movwf	??___ftmul
  6231  0B82  0858               	movf	??___ftmul,w
  6232  0B83  07DC               	addwf	___ftmul@exp,f
  6233  0B84  0852               	movf	___ftmul@f1,w
  6234  0B85  00D8               	movwf	??___ftmul
  6235  0B86  0853               	movf	___ftmul@f1+1,w
  6236  0B87  00D9               	movwf	??___ftmul+1
  6237  0B88  0854               	movf	___ftmul@f1+2,w
  6238  0B89  00DA               	movwf	??___ftmul+2
  6239  0B8A  3010               	movlw	16
  6240  0B8B                     u274_25:	
  6241  0B8B  1003               	clrc
  6242  0B8C  0CDA               	rrf	??___ftmul+2,f
  6243  0B8D  0CD9               	rrf	??___ftmul+1,f
  6244  0B8E  0CD8               	rrf	??___ftmul,f
  6245  0B8F  3EFF               	addlw	-1
  6246  0B90  1D03               	skipz
  6247  0B91  2B8B               	goto	u274_25
  6248  0B92  0858               	movf	??___ftmul,w
  6249  0B93  00DB               	movwf	??___ftmul+3
  6250  0B94  085B               	movf	??___ftmul+3,w
  6251  0B95  00E1               	movwf	___ftmul@sign
  6252  0B96  0855               	movf	___ftmul@f2,w
  6253  0B97  00D8               	movwf	??___ftmul
  6254  0B98  0856               	movf	___ftmul@f2+1,w
  6255  0B99  00D9               	movwf	??___ftmul+1
  6256  0B9A  0857               	movf	___ftmul@f2+2,w
  6257  0B9B  00DA               	movwf	??___ftmul+2
  6258  0B9C  3010               	movlw	16
  6259  0B9D                     u275_25:	
  6260  0B9D  1003               	clrc
  6261  0B9E  0CDA               	rrf	??___ftmul+2,f
  6262  0B9F  0CD9               	rrf	??___ftmul+1,f
  6263  0BA0  0CD8               	rrf	??___ftmul,f
  6264  0BA1  3EFF               	addlw	-1
  6265  0BA2  1D03               	skipz
  6266  0BA3  2B9D               	goto	u275_25
  6267  0BA4  0858               	movf	??___ftmul,w
  6268  0BA5  00DB               	movwf	??___ftmul+3
  6269  0BA6  085B               	movf	??___ftmul+3,w
  6270  0BA7  06E1               	xorwf	___ftmul@sign,f
  6271  0BA8  3080               	movlw	128
  6272  0BA9  00D8               	movwf	??___ftmul
  6273  0BAA  0858               	movf	??___ftmul,w
  6274  0BAB  05E1               	andwf	___ftmul@sign,f
  6275  0BAC  17D3               	bsf	___ftmul@f1+1,7
  6276  0BAD  17D6               	bsf	___ftmul@f2+1,7
  6277  0BAE  30FF               	movlw	255
  6278  0BAF  05D5               	andwf	___ftmul@f2,f
  6279  0BB0  30FF               	movlw	255
  6280  0BB1  05D6               	andwf	___ftmul@f2+1,f
  6281  0BB2  3000               	movlw	0
  6282  0BB3  05D7               	andwf	___ftmul@f2+2,f
  6283  0BB4  3000               	movlw	0
  6284  0BB5  00DD               	movwf	___ftmul@f3_as_product
  6285  0BB6  3000               	movlw	0
  6286  0BB7  00DE               	movwf	___ftmul@f3_as_product+1
  6287  0BB8  3000               	movlw	0
  6288  0BB9  00DF               	movwf	___ftmul@f3_as_product+2
  6289  0BBA  3007               	movlw	7
  6290  0BBB  00D8               	movwf	??___ftmul
  6291  0BBC  0858               	movf	??___ftmul,w
  6292  0BBD  00E0               	movwf	___ftmul@cntr
  6293  0BBE                     i1l2441:	
  6294  0BBE  1C52               	btfss	___ftmul@f1,0
  6295  0BBF  2BCE               	goto	i1l2445
  6296  0BC0  0855               	movf	___ftmul@f2,w
  6297  0BC1  07DD               	addwf	___ftmul@f3_as_product,f
  6298  0BC2  0856               	movf	___ftmul@f2+1,w
  6299  0BC3  1103               	clrz
  6300  0BC4  1803               	skipnc
  6301  0BC5  0A56               	incf	___ftmul@f2+1,w
  6302  0BC6  1D03               	btfss	3,2
  6303  0BC7  07DE               	addwf	___ftmul@f3_as_product+1,f
  6304  0BC8  0857               	movf	___ftmul@f2+2,w
  6305  0BC9  1103               	clrz
  6306  0BCA  1803               	skipnc
  6307  0BCB  0A57               	incf	___ftmul@f2+2,w
  6308  0BCC  1D03               	btfss	3,2
  6309  0BCD  07DF               	addwf	___ftmul@f3_as_product+2,f
  6310  0BCE                     i1l2445:	
  6311  0BCE  3001               	movlw	1
  6312  0BCF                     u278_25:	
  6313  0BCF  1003               	clrc
  6314  0BD0  0CD4               	rrf	___ftmul@f1+2,f
  6315  0BD1  0CD3               	rrf	___ftmul@f1+1,f
  6316  0BD2  0CD2               	rrf	___ftmul@f1,f
  6317  0BD3  3EFF               	addlw	-1
  6318  0BD4  1D03               	skipz
  6319  0BD5  2BCF               	goto	u278_25
  6320  0BD6  3001               	movlw	1
  6321  0BD7                     u279_25:	
  6322  0BD7  1003               	clrc
  6323  0BD8  0DD5               	rlf	___ftmul@f2,f
  6324  0BD9  0DD6               	rlf	___ftmul@f2+1,f
  6325  0BDA  0DD7               	rlf	___ftmul@f2+2,f
  6326  0BDB  3EFF               	addlw	-1
  6327  0BDC  1D03               	skipz
  6328  0BDD  2BD7               	goto	u279_25
  6329  0BDE  3001               	movlw	1
  6330  0BDF  02E0               	subwf	___ftmul@cntr,f
  6331  0BE0  1D03               	btfss	3,2
  6332  0BE1  2BBE               	goto	i1l2441
  6333  0BE2  3009               	movlw	9
  6334  0BE3  00D8               	movwf	??___ftmul
  6335  0BE4  0858               	movf	??___ftmul,w
  6336  0BE5  00E0               	movwf	___ftmul@cntr
  6337  0BE6                     i1l2453:	
  6338  0BE6  1C52               	btfss	___ftmul@f1,0
  6339  0BE7  2BF6               	goto	i1l2457
  6340  0BE8  0855               	movf	___ftmul@f2,w
  6341  0BE9  07DD               	addwf	___ftmul@f3_as_product,f
  6342  0BEA  0856               	movf	___ftmul@f2+1,w
  6343  0BEB  1103               	clrz
  6344  0BEC  1803               	skipnc
  6345  0BED  0A56               	incf	___ftmul@f2+1,w
  6346  0BEE  1D03               	btfss	3,2
  6347  0BEF  07DE               	addwf	___ftmul@f3_as_product+1,f
  6348  0BF0  0857               	movf	___ftmul@f2+2,w
  6349  0BF1  1103               	clrz
  6350  0BF2  1803               	skipnc
  6351  0BF3  0A57               	incf	___ftmul@f2+2,w
  6352  0BF4  1D03               	btfss	3,2
  6353  0BF5  07DF               	addwf	___ftmul@f3_as_product+2,f
  6354  0BF6                     i1l2457:	
  6355  0BF6  3001               	movlw	1
  6356  0BF7                     u283_25:	
  6357  0BF7  1003               	clrc
  6358  0BF8  0CD4               	rrf	___ftmul@f1+2,f
  6359  0BF9  0CD3               	rrf	___ftmul@f1+1,f
  6360  0BFA  0CD2               	rrf	___ftmul@f1,f
  6361  0BFB  3EFF               	addlw	-1
  6362  0BFC  1D03               	skipz
  6363  0BFD  2BF7               	goto	u283_25
  6364  0BFE  3001               	movlw	1
  6365  0BFF                     u284_25:	
  6366  0BFF  1003               	clrc
  6367  0C00  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6368  0C01  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6369  0C02  0CDD               	rrf	___ftmul@f3_as_product,f
  6370  0C03  3EFF               	addlw	-1
  6371  0C04  1D03               	skipz
  6372  0C05  2BFF               	goto	u284_25
  6373  0C06  3001               	movlw	1
  6374  0C07  02E0               	subwf	___ftmul@cntr,f
  6375  0C08  1D03               	btfss	3,2
  6376  0C09  2BE6               	goto	i1l2453
  6377  0C0A  085D               	movf	___ftmul@f3_as_product,w
  6378  0C0B  00F0               	movwf	___ftpack@arg
  6379  0C0C  085E               	movf	___ftmul@f3_as_product+1,w
  6380  0C0D  00F1               	movwf	___ftpack@arg+1
  6381  0C0E  085F               	movf	___ftmul@f3_as_product+2,w
  6382  0C0F  00F2               	movwf	___ftpack@arg+2
  6383  0C10  085C               	movf	___ftmul@exp,w
  6384  0C11  00D8               	movwf	??___ftmul
  6385  0C12  0858               	movf	??___ftmul,w
  6386  0C13  00F3               	movwf	___ftpack@exp
  6387  0C14  0861               	movf	___ftmul@sign,w
  6388  0C15  00D9               	movwf	??___ftmul+1
  6389  0C16  0859               	movf	??___ftmul+1,w
  6390  0C17  00F4               	movwf	___ftpack@sign
  6391  0C18  160A  118A  25A2   	fcall	___ftpack
  6392  0C1B  0870               	movf	?___ftpack,w
  6393  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  6394  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  6395  0C1E  00D2               	movwf	?___ftmul
  6396  0C1F  0871               	movf	?___ftpack+1,w
  6397  0C20  00D3               	movwf	?___ftmul+1
  6398  0C21  0872               	movf	?___ftpack+2,w
  6399  0C22  00D4               	movwf	?___ftmul+2
  6400  0C23  0008               	return
  6401  0C24                     __end_of___ftmul:	
  6402                           
  6403                           	psect	text36
  6404  13E7                     __ptext36:	
  6405 ;; *************** function ___awtoft *****************
  6406 ;; Defined at:
  6407 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  c               2    8[COMMON] int 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  sign            1   13[COMMON] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  3    8[COMMON] float 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, pclath, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6421 ;;      Params:         3       0       0       0       0
  6422 ;;      Locals:         1       0       0       0       0
  6423 ;;      Temps:          2       0       0       0       0
  6424 ;;      Totals:         6       0       0       0       0
  6425 ;;Total ram usage:        6 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    1
  6428 ;; This function calls:
  6429 ;;		___ftpack
  6430 ;; This function is called by:
  6431 ;;		_Fuzzy
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function ___awtoft
  6437  13E7                     ___awtoft:	
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6441  13E7  01FD               	clrf	___awtoft@sign
  6442  13E8  1FF9               	btfss	___awtoft@c+1,7
  6443  13E9  2BF1               	goto	i1l2413
  6444  13EA  09F8               	comf	___awtoft@c,f
  6445  13EB  09F9               	comf	___awtoft@c+1,f
  6446  13EC  0AF8               	incf	___awtoft@c,f
  6447  13ED  1903               	skipnz
  6448  13EE  0AF9               	incf	___awtoft@c+1,f
  6449  13EF  01FD               	clrf	___awtoft@sign
  6450  13F0  0AFD               	incf	___awtoft@sign,f
  6451  13F1                     i1l2413:	
  6452  13F1  0878               	movf	___awtoft@c,w
  6453  13F2  00F0               	movwf	___ftpack@arg
  6454  13F3  0879               	movf	___awtoft@c+1,w
  6455  13F4  00F1               	movwf	___ftpack@arg+1
  6456  13F5  01F2               	clrf	___ftpack@arg+2
  6457  13F6  308E               	movlw	142
  6458  13F7  00FB               	movwf	??___awtoft
  6459  13F8  087B               	movf	??___awtoft,w
  6460  13F9  00F3               	movwf	___ftpack@exp
  6461  13FA  087D               	movf	___awtoft@sign,w
  6462  13FB  00FC               	movwf	??___awtoft+1
  6463  13FC  087C               	movf	??___awtoft+1,w
  6464  13FD  00F4               	movwf	___ftpack@sign
  6465  13FE  160A  118A  25A2   	fcall	___ftpack
  6466  1401  0870               	movf	?___ftpack,w
  6467  1402  00F8               	movwf	?___awtoft
  6468  1403  0871               	movf	?___ftpack+1,w
  6469  1404  00F9               	movwf	?___awtoft+1
  6470  1405  0872               	movf	?___ftpack+2,w
  6471  1406  00FA               	movwf	?___awtoft+2
  6472  1407  0008               	return
  6473  1408                     __end_of___awtoft:	
  6474                           
  6475                           	psect	text37
  6476  15A2                     __ptext37:	
  6477 ;; *************** function ___ftpack *****************
  6478 ;; Defined at:
  6479 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  arg             3    0[COMMON] unsigned um
  6482 ;;  exp             1    3[COMMON] unsigned char 
  6483 ;;  sign            1    4[COMMON] unsigned char 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  3    0[COMMON] float 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6495 ;;      Params:         5       0       0       0       0
  6496 ;;      Locals:         0       0       0       0       0
  6497 ;;      Temps:          3       0       0       0       0
  6498 ;;      Totals:         8       0       0       0       0
  6499 ;;Total ram usage:        8 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		___awtoft
  6505 ;;		___ftadd
  6506 ;;		___ftdiv
  6507 ;;		___ftmul
  6508 ;;		___lwtoft
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function ___ftpack
  6514  15A2                     ___ftpack:	
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6518  15A2  0873               	movf	___ftpack@exp,w
  6519  15A3  1903               	btfsc	3,2
  6520  15A4  2DAA               	goto	i1l2105
  6521  15A5  0872               	movf	___ftpack@arg+2,w
  6522  15A6  0471               	iorwf	___ftpack@arg+1,w
  6523  15A7  0470               	iorwf	___ftpack@arg,w
  6524  15A8  1D03               	skipz
  6525  15A9  2DBD               	goto	i1l2111
  6526  15AA                     i1l2105:	
  6527  15AA  3000               	movlw	0
  6528  15AB  00F0               	movwf	?___ftpack
  6529  15AC  3000               	movlw	0
  6530  15AD  00F1               	movwf	?___ftpack+1
  6531  15AE  3000               	movlw	0
  6532  15AF  00F2               	movwf	?___ftpack+2
  6533  15B0  0008               	return
  6534  15B1                     i1l2109:	
  6535  15B1  3001               	movlw	1
  6536  15B2  00F5               	movwf	??___ftpack
  6537  15B3  0875               	movf	??___ftpack,w
  6538  15B4  07F3               	addwf	___ftpack@exp,f
  6539  15B5  3001               	movlw	1
  6540  15B6                     u197_25:	
  6541  15B6  1003               	clrc
  6542  15B7  0CF2               	rrf	___ftpack@arg+2,f
  6543  15B8  0CF1               	rrf	___ftpack@arg+1,f
  6544  15B9  0CF0               	rrf	___ftpack@arg,f
  6545  15BA  3EFF               	addlw	-1
  6546  15BB  1D03               	skipz
  6547  15BC  2DB6               	goto	u197_25
  6548  15BD                     i1l2111:	
  6549  15BD  30FE               	movlw	254
  6550  15BE  0572               	andwf	___ftpack@arg+2,w
  6551  15BF  1903               	btfsc	3,2
  6552  15C0  2DD8               	goto	i1l729
  6553  15C1  2DB1               	goto	i1l2109
  6554  15C2                     i1l2113:	
  6555  15C2  3001               	movlw	1
  6556  15C3  00F5               	movwf	??___ftpack
  6557  15C4  0875               	movf	??___ftpack,w
  6558  15C5  07F3               	addwf	___ftpack@exp,f
  6559  15C6  3001               	movlw	1
  6560  15C7  07F0               	addwf	___ftpack@arg,f
  6561  15C8  3000               	movlw	0
  6562  15C9  1803               	skipnc
  6563  15CA  3001               	movlw	1
  6564  15CB  07F1               	addwf	___ftpack@arg+1,f
  6565  15CC  3000               	movlw	0
  6566  15CD  1803               	skipnc
  6567  15CE  3001               	movlw	1
  6568  15CF  07F2               	addwf	___ftpack@arg+2,f
  6569  15D0  3001               	movlw	1
  6570  15D1                     u199_25:	
  6571  15D1  1003               	clrc
  6572  15D2  0CF2               	rrf	___ftpack@arg+2,f
  6573  15D3  0CF1               	rrf	___ftpack@arg+1,f
  6574  15D4  0CF0               	rrf	___ftpack@arg,f
  6575  15D5  3EFF               	addlw	-1
  6576  15D6  1D03               	skipz
  6577  15D7  2DD1               	goto	u199_25
  6578  15D8                     i1l729:	
  6579  15D8  30FF               	movlw	255
  6580  15D9  0572               	andwf	___ftpack@arg+2,w
  6581  15DA  1903               	btfsc	3,2
  6582  15DB  2DE7               	goto	i1l2121
  6583  15DC  2DC2               	goto	i1l2113
  6584  15DD                     i1l2119:	
  6585  15DD  3001               	movlw	1
  6586  15DE  02F3               	subwf	___ftpack@exp,f
  6587  15DF  3001               	movlw	1
  6588  15E0                     u201_25:	
  6589  15E0  1003               	clrc
  6590  15E1  0DF0               	rlf	___ftpack@arg,f
  6591  15E2  0DF1               	rlf	___ftpack@arg+1,f
  6592  15E3  0DF2               	rlf	___ftpack@arg+2,f
  6593  15E4  3EFF               	addlw	-1
  6594  15E5  1D03               	skipz
  6595  15E6  2DE0               	goto	u201_25
  6596  15E7                     i1l2121:	
  6597  15E7  1FF1               	btfss	___ftpack@arg+1,7
  6598  15E8  2DDD               	goto	i1l2119
  6599  15E9  1873               	btfsc	___ftpack@exp,0
  6600  15EA  2DF1               	goto	i1l735
  6601  15EB  30FF               	movlw	255
  6602  15EC  05F0               	andwf	___ftpack@arg,f
  6603  15ED  307F               	movlw	127
  6604  15EE  05F1               	andwf	___ftpack@arg+1,f
  6605  15EF  30FF               	movlw	255
  6606  15F0  05F2               	andwf	___ftpack@arg+2,f
  6607  15F1                     i1l735:	
  6608  15F1  1003               	clrc
  6609  15F2  0CF3               	rrf	___ftpack@exp,f
  6610  15F3  0873               	movf	___ftpack@exp,w
  6611  15F4  00F5               	movwf	??___ftpack
  6612  15F5  01F6               	clrf	??___ftpack+1
  6613  15F6  01F7               	clrf	??___ftpack+2
  6614  15F7  3010               	movlw	16
  6615  15F8                     u204_25:	
  6616  15F8  1003               	clrc
  6617  15F9  0DF5               	rlf	??___ftpack,f
  6618  15FA  0DF6               	rlf	??___ftpack+1,f
  6619  15FB  0DF7               	rlf	??___ftpack+2,f
  6620  15FC  3EFF               	addlw	-1
  6621  15FD  1D03               	skipz
  6622  15FE  2DF8               	goto	u204_25
  6623  15FF  0875               	movf	??___ftpack,w
  6624  1600  04F0               	iorwf	___ftpack@arg,f
  6625  1601  0876               	movf	??___ftpack+1,w
  6626  1602  04F1               	iorwf	___ftpack@arg+1,f
  6627  1603  0877               	movf	??___ftpack+2,w
  6628  1604  04F2               	iorwf	___ftpack@arg+2,f
  6629  1605  0874               	movf	___ftpack@sign,w
  6630  1606  1903               	btfsc	3,2
  6631  1607  0008               	return
  6632  1608  17F2               	bsf	___ftpack@arg+2,7
  6633  1609  0008               	return
  6634  160A                     __end_of___ftpack:	
  6635  007E                     btemp	set	126	;btemp
  6636  007E                     wtemp	set	126
  6637  007E                     wtemp0	set	126
  6638  0080                     wtemp1	set	128
  6639  0082                     wtemp2	set	130
  6640  0084                     wtemp3	set	132
  6641  0086                     wtemp4	set	134
  6642  0088                     wtemp5	set	136
  6643  007F                     wtemp6	set	127
  6644  007E                     ttemp	set	126
  6645  007E                     ttemp0	set	126
  6646  0081                     ttemp1	set	129
  6647  0084                     ttemp2	set	132
  6648  0087                     ttemp3	set	135
  6649  007F                     ttemp4	set	127
  6650  007E                     ltemp	set	126
  6651  007E                     ltemp0	set	126
  6652  0082                     ltemp1	set	130
  6653  0086                     ltemp2	set	134
  6654  0080                     ltemp3	set	128
  6655                           
  6656                           	psect	text22_split_1
  6657  16EC                     L11:	
  6658  16EC  01F9               	clrf	___awtoft@c+1
  6659  16ED  07F9               	addwf	___awtoft@c+1,f
  6660  16EE  0870               	movf	?_abs,w
  6661  16EF  01F8               	clrf	___awtoft@c
  6662  16F0  07F8               	addwf	___awtoft@c,f
  6663  16F1  160A  118A  23E7  160A  118A  	fcall	___awtoft
  6664  16F6  0878               	movf	?___awtoft,w
  6665  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  6666  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  6667  16F9  00A0               	movwf	minimo@a
  6668  16FA  0879               	movf	?___awtoft+1,w
  6669  16FB  00A1               	movwf	minimo@a+1
  6670  16FC  087A               	movf	?___awtoft+2,w
  6671  16FD  00A2               	movwf	minimo@a+2
  6672  16FE  120A  118A  27E2  160A  118A  	fcall	_minimo
  6673  1703  1283               	bcf	3,5	;RP0=0, select bank0
  6674  1704  1303               	bcf	3,6	;RP1=0, select bank0
  6675  1705  0820               	movf	?_minimo,w
  6676  1706  00A6               	movwf	maximo@a
  6677  1707  0821               	movf	?_minimo+1,w
  6678  1708  00A7               	movwf	maximo@a+1
  6679  1709  0822               	movf	?_minimo+2,w
  6680  170A  00A8               	movwf	maximo@a+2
  6681  170B  160A  118A  2389  160A  118A  	fcall	_maximo
  6682  1710  1283               	bcf	3,5	;RP0=0, select bank0
  6683  1711  1303               	bcf	3,6	;RP1=0, select bank0
  6684  1712  0826               	movf	?_maximo,w
  6685  1713  00AC               	movwf	___fttol@f1
  6686  1714  0827               	movf	?_maximo+1,w
  6687  1715  00AD               	movwf	___fttol@f1+1
  6688  1716  0828               	movf	?_maximo+2,w
  6689  1717  00AE               	movwf	___fttol@f1+2
  6690  1718  160A  118A  2772  160A  118A  	fcall	___fttol
  6691  171D  1283               	bcf	3,5	;RP0=0, select bank0
  6692  171E  1303               	bcf	3,6	;RP1=0, select bank0
  6693  171F  082D               	movf	?___fttol+1,w
  6694  1720  1683               	bsf	3,5	;RP0=1, select bank1
  6695  1721  1303               	bcf	3,6	;RP1=0, select bank1
  6696  1722  01B3               	clrf	(Fuzzy@delta+1)^(0+128)
  6697  1723  07B3               	addwf	(Fuzzy@delta+1)^(0+128),f
  6698  1724  1283               	bcf	3,5	;RP0=0, select bank0
  6699  1725  1303               	bcf	3,6	;RP1=0, select bank0
  6700  1726  082C               	movf	?___fttol,w
  6701  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6702  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6703  1729  01B2               	clrf	Fuzzy@delta^(0+128)
  6704  172A  07B2               	addwf	Fuzzy@delta^(0+128),f
  6705                           
  6706                           ;main.c: 189: float x = 0;
  6707  172B  3000               	movlw	0
  6708  172C  00BF               	movwf	Fuzzy@x^(0+128)
  6709  172D  3000               	movlw	0
  6710  172E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6711  172F  3000               	movlw	0
  6712  1730  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6713                           
  6714                           ;main.c: 190: float rule = 0;
  6715  1731  3000               	movlw	0
  6716  1732  00BC               	movwf	Fuzzy@rule^(0+128)
  6717  1733  3000               	movlw	0
  6718  1734  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6719  1735  3000               	movlw	0
  6720  1736  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6721                           
  6722                           ;main.c: 193: if (deltaV <= 100) {
  6723  1737  3000               	movlw	0
  6724  1738  0254               	subwf	(_deltaV+1)^(0+128),w
  6725  1739  3065               	movlw	101
  6726  173A  1903               	skipnz
  6727  173B  0253               	subwf	_deltaV^(0+128),w
  6728  173C  120A  118A  1803   	skipnc
  6729  173F  2875               	goto	i1l3867
  6730                           
  6731                           ;main.c: 195: rule = trapmf(deltaV, -1, 0, 1, 100);
  6732  1740  0854               	movf	(_deltaV+1)^(0+128),w
  6733  1741  01F9               	clrf	___lwtoft@c+1
  6734  1742  07F9               	addwf	___lwtoft@c+1,f
  6735  1743  0853               	movf	_deltaV^(0+128),w
  6736  1744  01F8               	clrf	___lwtoft@c
  6737  1745  07F8               	addwf	___lwtoft@c,f
  6738  1746  160A  118A  2314  160A  118A  	fcall	___lwtoft
  6739  174B  0878               	movf	?___lwtoft,w
  6740  174C  1283               	bcf	3,5	;RP0=0, select bank0
  6741  174D  1303               	bcf	3,6	;RP1=0, select bank0
  6742  174E  00C0               	movwf	trapmf@x
  6743  174F  0879               	movf	?___lwtoft+1,w
  6744  1750  00C1               	movwf	trapmf@x+1
  6745  1751  087A               	movf	?___lwtoft+2,w
  6746  1752  00C2               	movwf	trapmf@x+2
  6747  1753  3000               	movlw	0
  6748  1754  00C3               	movwf	trapmf@a
  6749  1755  3080               	movlw	128
  6750  1756  00C4               	movwf	trapmf@a+1
  6751  1757  30BF               	movlw	191
  6752  1758  00C5               	movwf	trapmf@a+2
  6753  1759  3000               	movlw	0
  6754  175A  00C6               	movwf	trapmf@b
  6755  175B  3000               	movlw	0
  6756  175C  00C7               	movwf	trapmf@b+1
  6757  175D  3000               	movlw	0
  6758  175E  00C8               	movwf	trapmf@b+2
  6759  175F  3000               	movlw	0
  6760  1760  00C9               	movwf	trapmf@c
  6761  1761  3080               	movlw	128
  6762  1762  00CA               	movwf	trapmf@c+1
  6763  1763  303F               	movlw	63
  6764  1764  00CB               	movwf	trapmf@c+2
  6765  1765  3000               	movlw	0
  6766  1766  00CC               	movwf	trapmf@d
  6767  1767  30C8               	movlw	200
  6768  1768  00CD               	movwf	trapmf@d+1
  6769  1769  3042               	movlw	66
  6770  176A  00CE               	movwf	trapmf@d+2
  6771  176B  120A  158A  252D   	fcall	_trapmf
  6772  176E  1283               	bcf	3,5	;RP0=0, select bank0
  6773  176F  120A  158A  293F   	ljmp	L12
  6774                           
  6775                           	psect	text22_split_2
  6776  093F                     L12:	
  6777  093F  1303               	bcf	3,6	;RP1=0, select bank0
  6778  0940  0840               	movf	?_trapmf,w
  6779  0941  1683               	bsf	3,5	;RP0=1, select bank1
  6780  0942  1303               	bcf	3,6	;RP1=0, select bank1
  6781  0943  00BC               	movwf	Fuzzy@rule^(0+128)
  6782  0944  1283               	bcf	3,5	;RP0=0, select bank0
  6783  0945  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0946  0841               	movf	?_trapmf+1,w
  6785  0947  1683               	bsf	3,5	;RP0=1, select bank1
  6786  0948  1303               	bcf	3,6	;RP1=0, select bank1
  6787  0949  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6788  094A  1283               	bcf	3,5	;RP0=0, select bank0
  6789  094B  1303               	bcf	3,6	;RP1=0, select bank0
  6790  094C  0842               	movf	?_trapmf+2,w
  6791  094D  1683               	bsf	3,5	;RP0=1, select bank1
  6792  094E  1303               	bcf	3,6	;RP1=0, select bank1
  6793  094F  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6794                           
  6795                           ;main.c: 197: x = 0;
  6796  0950  3000               	movlw	0
  6797  0951  00BF               	movwf	Fuzzy@x^(0+128)
  6798  0952  3000               	movlw	0
  6799  0953  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6800  0954  3000               	movlw	0
  6801  0955  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6802                           
  6803                           ;main.c: 198: for (int a = 0; a <= 15; a++) {
  6804  0956  01AA               	clrf	Fuzzy@a^(0+128)
  6805  0957  01AB               	clrf	(Fuzzy@a+1)^(0+128)
  6806  0958  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6807  0959  3A80               	xorlw	128
  6808  095A  00FF               	movwf	127
  6809  095B  3080               	movlw	128
  6810  095C  027F               	subwf	127,w
  6811  095D  1D03               	skipz
  6812  095E  2961               	goto	u520_25
  6813  095F  3010               	movlw	16
  6814  0960  022A               	subwf	Fuzzy@a^(0+128),w
  6815  0961                     u520_25:	
  6816  0961  1803               	btfsc	3,0
  6817  0962  29E0               	goto	L15
  6818  0963                     i1l3857:	
  6819                           
  6820                           ;main.c: 199: rulepequeno = trapmf(x, -1, 0, 0, 5);
  6821  0963  1683               	bsf	3,5	;RP0=1, select bank1
  6822  0964  1303               	bcf	3,6	;RP1=0, select bank1
  6823  0965  083F               	movf	Fuzzy@x^(0+128),w
  6824  0966  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0967  1303               	bcf	3,6	;RP1=0, select bank0
  6826  0968  00C0               	movwf	trapmf@x
  6827  0969  1683               	bsf	3,5	;RP0=1, select bank1
  6828  096A  1303               	bcf	3,6	;RP1=0, select bank1
  6829  096B  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6830  096C  1283               	bcf	3,5	;RP0=0, select bank0
  6831  096D  1303               	bcf	3,6	;RP1=0, select bank0
  6832  096E  00C1               	movwf	trapmf@x+1
  6833  096F  1683               	bsf	3,5	;RP0=1, select bank1
  6834  0970  1303               	bcf	3,6	;RP1=0, select bank1
  6835  0971  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6836  0972  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0973  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0974  00C2               	movwf	trapmf@x+2
  6839  0975  3000               	movlw	0
  6840  0976  00C3               	movwf	trapmf@a
  6841  0977  3080               	movlw	128
  6842  0978  00C4               	movwf	trapmf@a+1
  6843  0979  30BF               	movlw	191
  6844  097A  00C5               	movwf	trapmf@a+2
  6845  097B  3000               	movlw	0
  6846  097C  00C6               	movwf	trapmf@b
  6847  097D  3000               	movlw	0
  6848  097E  00C7               	movwf	trapmf@b+1
  6849  097F  3000               	movlw	0
  6850  0980  00C8               	movwf	trapmf@b+2
  6851  0981  3000               	movlw	0
  6852  0982  00C9               	movwf	trapmf@c
  6853  0983  3000               	movlw	0
  6854  0984  00CA               	movwf	trapmf@c+1
  6855  0985  3000               	movlw	0
  6856  0986  00CB               	movwf	trapmf@c+2
  6857  0987  3000               	movlw	0
  6858  0988  00CC               	movwf	trapmf@d
  6859  0989  30A0               	movlw	160
  6860  098A  00CD               	movwf	trapmf@d+1
  6861  098B  3040               	movlw	64
  6862  098C  00CE               	movwf	trapmf@d+2
  6863  098D  120A  158A  252D  120A  158A  	fcall	_trapmf
  6864  0992  1283               	bcf	3,5	;RP0=0, select bank0
  6865  0993  1303               	bcf	3,6	;RP1=0, select bank0
  6866  0994  0840               	movf	?_trapmf,w
  6867  0995  1683               	bsf	3,5	;RP0=1, select bank1
  6868  0996  1303               	bcf	3,6	;RP1=0, select bank1
  6869  0997  00C8               	movwf	_rulepequeno^(0+128)
  6870  0998  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0999  1303               	bcf	3,6	;RP1=0, select bank0
  6872  099A  0841               	movf	?_trapmf+1,w
  6873  099B  1683               	bsf	3,5	;RP0=1, select bank1
  6874  099C  1303               	bcf	3,6	;RP1=0, select bank1
  6875  099D  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6876  099E  1283               	bcf	3,5	;RP0=0, select bank0
  6877  099F  1303               	bcf	3,6	;RP1=0, select bank0
  6878  09A0  0842               	movf	?_trapmf+2,w
  6879  09A1  1683               	bsf	3,5	;RP0=1, select bank1
  6880  09A2  1303               	bcf	3,6	;RP1=0, select bank1
  6881  09A3  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6882                           
  6883                           ;main.c: 200: if (rulepequeno >= rule) {
  6884  09A4  0848               	movf	_rulepequeno^(0+128),w
  6885  09A5  00F0               	movwf	___ftge@ff1
  6886  09A6  0849               	movf	(_rulepequeno+1)^(0+128),w
  6887  09A7  00F1               	movwf	___ftge@ff1+1
  6888  09A8  084A               	movf	(_rulepequeno+2)^(0+128),w
  6889  09A9  00F2               	movwf	___ftge@ff1+2
  6890  09AA  083C               	movf	Fuzzy@rule^(0+128),w
  6891  09AB  00F3               	movwf	___ftge@ff2
  6892  09AC  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6893  09AD  00F4               	movwf	___ftge@ff2+1
  6894  09AE  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6895  09AF  00F5               	movwf	___ftge@ff2+2
  6896  09B0  160A  118A  2545  120A  158A  	fcall	___ftge
  6897  09B5  1C03               	btfss	3,0
  6898  09B6  29BF               	goto	i1l3861
  6899                           
  6900                           ;main.c: 201: rulepequeno = rule;
  6901  09B7  1683               	bsf	3,5	;RP0=1, select bank1
  6902  09B8  1303               	bcf	3,6	;RP1=0, select bank1
  6903  09B9  083C               	movf	Fuzzy@rule^(0+128),w
  6904  09BA  00C8               	movwf	_rulepequeno^(0+128)
  6905  09BB  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6906  09BC  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6907  09BD  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6908  09BE  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6909  09BF                     i1l3861:	
  6910                           
  6911                           ;main.c: 202: }
  6912                           ;main.c: 204: x += 1;
  6913  09BF  3000               	movlw	0
  6914  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  6915  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  6916  09C2  00A3               	movwf	___ftadd@f1
  6917  09C3  3080               	movlw	128
  6918  09C4  00A4               	movwf	___ftadd@f1+1
  6919  09C5  303F               	movlw	63
  6920  09C6  00A5               	movwf	___ftadd@f1+2
  6921  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  6922  09C8  1303               	bcf	3,6	;RP1=0, select bank1
  6923  09C9  083F               	movf	Fuzzy@x^(0+128),w
  6924  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  6925  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  6926  09CC  00A6               	movwf	___ftadd@f2
  6927  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  6928  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  6929  09CF  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6930  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6931  09D1  1303               	bcf	3,6	;RP1=0, select bank0
  6932  09D2  00A7               	movwf	___ftadd@f2+1
  6933  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  6934  09D4  1303               	bcf	3,6	;RP1=0, select bank1
  6935  09D5  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6936  09D6  1283               	bcf	3,5	;RP0=0, select bank0
  6937  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  6938  09D8  00A8               	movwf	___ftadd@f2+2
  6939  09D9  120A  158A  2424   	fcall	___ftadd
  6940  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  6941  09DD  120A  118A  2853   	ljmp	L13
  6942  09E0                     L15:	
  6943  09E0  120A  118A  2875   	ljmp	i1l3867
  6944                           
  6945                           	psect	text22_split_3
  6946  0053                     L13:	
  6947  0053  1303               	bcf	3,6	;RP1=0, select bank0
  6948  0054  0823               	movf	?___ftadd,w
  6949  0055  1683               	bsf	3,5	;RP0=1, select bank1
  6950  0056  1303               	bcf	3,6	;RP1=0, select bank1
  6951  0057  00BF               	movwf	Fuzzy@x^(0+128)
  6952  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6953  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6954  005A  0824               	movf	?___ftadd+1,w
  6955  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6956  005C  1303               	bcf	3,6	;RP1=0, select bank1
  6957  005D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6958  005E  1283               	bcf	3,5	;RP0=0, select bank0
  6959  005F  1303               	bcf	3,6	;RP1=0, select bank0
  6960  0060  0825               	movf	?___ftadd+2,w
  6961  0061  1683               	bsf	3,5	;RP0=1, select bank1
  6962  0062  1303               	bcf	3,6	;RP1=0, select bank1
  6963  0063  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6964  0064  3001               	movlw	1
  6965  0065  07AA               	addwf	Fuzzy@a^(0+128),f
  6966  0066  1803               	skipnc
  6967  0067  0AAB               	incf	(Fuzzy@a+1)^(0+128),f
  6968  0068  3000               	movlw	0
  6969  0069  07AB               	addwf	(Fuzzy@a+1)^(0+128),f
  6970  006A  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6971  006B  3A80               	xorlw	128
  6972  006C  00FF               	movwf	127
  6973  006D  3080               	movlw	128
  6974  006E  027F               	subwf	127,w
  6975  006F  1D03               	skipz
  6976  0070  2873               	goto	u522_25
  6977  0071  3010               	movlw	16
  6978  0072  022A               	subwf	Fuzzy@a^(0+128),w
  6979  0073                     u522_25:	
  6980  0073  1C03               	skipc
  6981  0074  2FDF               	goto	L16
  6982  0075                     i1l3867:	
  6983                           
  6984                           ;main.c: 205: }
  6985                           ;main.c: 206: }
  6986                           ;main.c: 209: if (deltaV >= 100 && deltaV <= 1001 && delta <= 200)
  6987  0075  3000               	movlw	0
  6988  0076  1683               	bsf	3,5	;RP0=1, select bank1
  6989  0077  1303               	bcf	3,6	;RP1=0, select bank1
  6990  0078  0254               	subwf	(_deltaV+1)^(0+128),w
  6991  0079  3064               	movlw	100
  6992  007A  1903               	skipnz
  6993  007B  0253               	subwf	_deltaV^(0+128),w
  6994  007C  1C03               	skipc
  6995  007D  2A0C               	goto	i1l3893
  6996  007E  3003               	movlw	3
  6997  007F  0254               	subwf	(_deltaV+1)^(0+128),w
  6998  0080  30EA               	movlw	234
  6999  0081  1903               	skipnz
  7000  0082  0253               	subwf	_deltaV^(0+128),w
  7001  0083  1803               	skipnc
  7002  0084  2A0C               	goto	i1l3893
  7003  0085  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7004  0086  3A80               	xorlw	128
  7005  0087  00FF               	movwf	127
  7006  0088  3080               	movlw	128
  7007  0089  027F               	subwf	127,w
  7008  008A  1D03               	skipz
  7009  008B  288E               	goto	u525_25
  7010  008C  30C9               	movlw	201
  7011  008D  0232               	subwf	Fuzzy@delta^(0+128),w
  7012  008E                     u525_25:	
  7013  008E  1803               	skipnc
  7014  008F  2A0C               	goto	i1l3893
  7015                           
  7016                           ;main.c: 210: {
  7017                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7018  0090  3000               	movlw	0
  7019  0091  1283               	bcf	3,5	;RP0=0, select bank0
  7020  0092  1303               	bcf	3,6	;RP1=0, select bank0
  7021  0093  00CC               	movwf	trapmf@d
  7022  0094  3048               	movlw	72
  7023  0095  00CD               	movwf	trapmf@d+1
  7024  0096  3043               	movlw	67
  7025  0097  00CE               	movwf	trapmf@d+2
  7026  0098  3000               	movlw	0
  7027  0099  00C9               	movwf	trapmf@c
  7028  009A  3080               	movlw	128
  7029  009B  00CA               	movwf	trapmf@c+1
  7030  009C  303F               	movlw	63
  7031  009D  00CB               	movwf	trapmf@c+2
  7032  009E  3000               	movlw	0
  7033  009F  00C6               	movwf	trapmf@b
  7034  00A0  3000               	movlw	0
  7035  00A1  00C7               	movwf	trapmf@b+1
  7036  00A2  3000               	movlw	0
  7037  00A3  00C8               	movwf	trapmf@b+2
  7038  00A4  3000               	movlw	0
  7039  00A5  00C3               	movwf	trapmf@a
  7040  00A6  3080               	movlw	128
  7041  00A7  00C4               	movwf	trapmf@a+1
  7042  00A8  30BF               	movlw	191
  7043  00A9  00C5               	movwf	trapmf@a+2
  7044  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  7045  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  7046  00AC  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7047  00AD  01F9               	clrf	___awtoft@c+1
  7048  00AE  07F9               	addwf	___awtoft@c+1,f
  7049  00AF  0832               	movf	Fuzzy@delta^(0+128),w
  7050  00B0  01F8               	clrf	___awtoft@c
  7051  00B1  07F8               	addwf	___awtoft@c,f
  7052  00B2  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7053  00B7  0878               	movf	?___awtoft,w
  7054  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7055  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7056  00BA  00C0               	movwf	trapmf@x
  7057  00BB  0879               	movf	?___awtoft+1,w
  7058  00BC  00C1               	movwf	trapmf@x+1
  7059  00BD  087A               	movf	?___awtoft+2,w
  7060  00BE  00C2               	movwf	trapmf@x+2
  7061  00BF  120A  158A  252D  120A  118A  	fcall	_trapmf
  7062  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  7063  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  7064  00C6  0840               	movf	?_trapmf,w
  7065  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  7066  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  7067  00C9  00A0               	movwf	_Fuzzy$1692^(0+128)
  7068  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  7069  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  7070  00CC  0841               	movf	?_trapmf+1,w
  7071  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  7072  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  7073  00CF  00A1               	movwf	(_Fuzzy$1692+1)^(0+128)
  7074  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  7075  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  7076  00D2  0842               	movf	?_trapmf+2,w
  7077  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  7078  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  7079  00D5  00A2               	movwf	(_Fuzzy$1692+2)^(0+128)
  7080                           
  7081                           ;main.c: 210: {
  7082                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7083  00D6  30C0               	movlw	192
  7084  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  7085  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  7086  00D9  00CC               	movwf	trapmf@d
  7087  00DA  30C1               	movlw	193
  7088  00DB  00CD               	movwf	trapmf@d+1
  7089  00DC  3044               	movlw	68
  7090  00DD  00CE               	movwf	trapmf@d+2
  7091  00DE  3000               	movlw	0
  7092  00DF  00C9               	movwf	trapmf@c
  7093  00E0  3048               	movlw	72
  7094  00E1  00CA               	movwf	trapmf@c+1
  7095  00E2  3044               	movlw	68
  7096  00E3  00CB               	movwf	trapmf@c+2
  7097  00E4  3000               	movlw	0
  7098  00E5  00C6               	movwf	trapmf@b
  7099  00E6  3048               	movlw	72
  7100  00E7  00C7               	movwf	trapmf@b+1
  7101  00E8  3044               	movlw	68
  7102  00E9  00C8               	movwf	trapmf@b+2
  7103  00EA  3000               	movlw	0
  7104  00EB  00C3               	movwf	trapmf@a
  7105  00EC  3048               	movlw	72
  7106  00ED  00C4               	movwf	trapmf@a+1
  7107  00EE  3042               	movlw	66
  7108  00EF  00C5               	movwf	trapmf@a+2
  7109  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  7110  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  7111  00F2  0854               	movf	(_deltaV+1)^(0+128),w
  7112  00F3  01F9               	clrf	___lwtoft@c+1
  7113  00F4  07F9               	addwf	___lwtoft@c+1,f
  7114  00F5  0853               	movf	_deltaV^(0+128),w
  7115  00F6  01F8               	clrf	___lwtoft@c
  7116  00F7  07F8               	addwf	___lwtoft@c,f
  7117  00F8  160A  118A  2314  120A  118A  	fcall	___lwtoft
  7118  00FD  0878               	movf	?___lwtoft,w
  7119  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  7120  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  7121  0100  00C0               	movwf	trapmf@x
  7122  0101  0879               	movf	?___lwtoft+1,w
  7123  0102  00C1               	movwf	trapmf@x+1
  7124  0103  087A               	movf	?___lwtoft+2,w
  7125  0104  00C2               	movwf	trapmf@x+2
  7126  0105  120A  158A  252D  120A  118A  	fcall	_trapmf
  7127  010A  1283               	bcf	3,5	;RP0=0, select bank0
  7128  010B  1303               	bcf	3,6	;RP1=0, select bank0
  7129  010C  0840               	movf	?_trapmf,w
  7130  010D  00D2               	movwf	___ftmul@f1
  7131  010E  0841               	movf	?_trapmf+1,w
  7132  010F  00D3               	movwf	___ftmul@f1+1
  7133  0110  0842               	movf	?_trapmf+2,w
  7134  0111  00D4               	movwf	___ftmul@f1+2
  7135  0112  3000               	movlw	0
  7136  0113  00A3               	movwf	___ftadd@f1
  7137  0114  3080               	movlw	128
  7138  0115  00A4               	movwf	___ftadd@f1+1
  7139  0116  303F               	movlw	63
  7140  0117  00A5               	movwf	___ftadd@f1+2
  7141  0118  1683               	bsf	3,5	;RP0=1, select bank1
  7142  0119  1303               	bcf	3,6	;RP1=0, select bank1
  7143  011A  0820               	movf	_Fuzzy$1692^(0+128),w
  7144  011B  1283               	bcf	3,5	;RP0=0, select bank0
  7145  011C  1303               	bcf	3,6	;RP1=0, select bank0
  7146  011D  00A0               	movwf	___ftneg@f1
  7147  011E  1683               	bsf	3,5	;RP0=1, select bank1
  7148  011F  1303               	bcf	3,6	;RP1=0, select bank1
  7149  0120  0821               	movf	(_Fuzzy$1692+1)^(0+128),w
  7150  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0123  00A1               	movwf	___ftneg@f1+1
  7153  0124  1683               	bsf	3,5	;RP0=1, select bank1
  7154  0125  1303               	bcf	3,6	;RP1=0, select bank1
  7155  0126  0822               	movf	(_Fuzzy$1692+2)^(0+128),w
  7156  0127  1283               	bcf	3,5	;RP0=0, select bank0
  7157  0128  1303               	bcf	3,6	;RP1=0, select bank0
  7158  0129  00A2               	movwf	___ftneg@f1+2
  7159  012A  160A  118A  22DF  120A  118A  	fcall	___ftneg
  7160  012F  1283               	bcf	3,5	;RP0=0, select bank0
  7161  0130  1303               	bcf	3,6	;RP1=0, select bank0
  7162  0131  0820               	movf	?___ftneg,w
  7163  0132  00A6               	movwf	___ftadd@f2
  7164  0133  0821               	movf	?___ftneg+1,w
  7165  0134  00A7               	movwf	___ftadd@f2+1
  7166  0135  0822               	movf	?___ftneg+2,w
  7167  0136  00A8               	movwf	___ftadd@f2+2
  7168  0137  120A  158A  2424  120A  118A  	fcall	___ftadd
  7169  013C  1283               	bcf	3,5	;RP0=0, select bank0
  7170  013D  1303               	bcf	3,6	;RP1=0, select bank0
  7171  013E  0823               	movf	?___ftadd,w
  7172  013F  00D5               	movwf	___ftmul@f2
  7173  0140  0824               	movf	?___ftadd+1,w
  7174  0141  00D6               	movwf	___ftmul@f2+1
  7175  0142  0825               	movf	?___ftadd+2,w
  7176  0143  00D7               	movwf	___ftmul@f2+2
  7177  0144  120A  158A  2351  120A  118A  	fcall	___ftmul
  7178  0149  1283               	bcf	3,5	;RP0=0, select bank0
  7179  014A  1303               	bcf	3,6	;RP1=0, select bank0
  7180  014B  0852               	movf	?___ftmul,w
  7181  014C  1683               	bsf	3,5	;RP0=1, select bank1
  7182  014D  1303               	bcf	3,6	;RP1=0, select bank1
  7183  014E  00BC               	movwf	Fuzzy@rule^(0+128)
  7184  014F  1283               	bcf	3,5	;RP0=0, select bank0
  7185  0150  1303               	bcf	3,6	;RP1=0, select bank0
  7186  0151  0853               	movf	?___ftmul+1,w
  7187  0152  1683               	bsf	3,5	;RP0=1, select bank1
  7188  0153  1303               	bcf	3,6	;RP1=0, select bank1
  7189  0154  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7190  0155  1283               	bcf	3,5	;RP0=0, select bank0
  7191  0156  1303               	bcf	3,6	;RP1=0, select bank0
  7192  0157  0854               	movf	?___ftmul+2,w
  7193  0158  1683               	bsf	3,5	;RP0=1, select bank1
  7194  0159  1303               	bcf	3,6	;RP1=0, select bank1
  7195  015A  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7196                           
  7197                           ;main.c: 214: x = 0;
  7198  015B  3000               	movlw	0
  7199  015C  00BF               	movwf	Fuzzy@x^(0+128)
  7200  015D  3000               	movlw	0
  7201  015E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7202  015F  3000               	movlw	0
  7203  0160  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7204                           
  7205                           ;main.c: 215: for (int a = 0; a <= 15; a++) {
  7206  0161  01AC               	clrf	Fuzzy@a_244^(0+128)
  7207  0162  01AD               	clrf	(Fuzzy@a_244+1)^(0+128)
  7208  0163  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7209  0164  3A80               	xorlw	128
  7210  0165  00FF               	movwf	127
  7211  0166  3080               	movlw	128
  7212  0167  027F               	subwf	127,w
  7213  0168  1D03               	skipz
  7214  0169  296C               	goto	u526_25
  7215  016A  3010               	movlw	16
  7216  016B  022C               	subwf	Fuzzy@a_244^(0+128),w
  7217  016C                     u526_25:	
  7218  016C  1803               	btfsc	3,0
  7219  016D  2A0C               	goto	i1l3893
  7220  016E                     i1l3883:	
  7221                           
  7222                           ;main.c: 216: rulepequeno = trapmf(x, 2, 5, 5, 10);
  7223  016E  1683               	bsf	3,5	;RP0=1, select bank1
  7224  016F  1303               	bcf	3,6	;RP1=0, select bank1
  7225  0170  083F               	movf	Fuzzy@x^(0+128),w
  7226  0171  1283               	bcf	3,5	;RP0=0, select bank0
  7227  0172  1303               	bcf	3,6	;RP1=0, select bank0
  7228  0173  00C0               	movwf	trapmf@x
  7229  0174  1683               	bsf	3,5	;RP0=1, select bank1
  7230  0175  1303               	bcf	3,6	;RP1=0, select bank1
  7231  0176  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7232  0177  1283               	bcf	3,5	;RP0=0, select bank0
  7233  0178  1303               	bcf	3,6	;RP1=0, select bank0
  7234  0179  00C1               	movwf	trapmf@x+1
  7235  017A  1683               	bsf	3,5	;RP0=1, select bank1
  7236  017B  1303               	bcf	3,6	;RP1=0, select bank1
  7237  017C  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7238  017D  1283               	bcf	3,5	;RP0=0, select bank0
  7239  017E  1303               	bcf	3,6	;RP1=0, select bank0
  7240  017F  00C2               	movwf	trapmf@x+2
  7241  0180  3000               	movlw	0
  7242  0181  00C3               	movwf	trapmf@a
  7243  0182  3000               	movlw	0
  7244  0183  00C4               	movwf	trapmf@a+1
  7245  0184  3040               	movlw	64
  7246  0185  00C5               	movwf	trapmf@a+2
  7247  0186  3000               	movlw	0
  7248  0187  00C6               	movwf	trapmf@b
  7249  0188  30A0               	movlw	160
  7250  0189  00C7               	movwf	trapmf@b+1
  7251  018A  3040               	movlw	64
  7252  018B  00C8               	movwf	trapmf@b+2
  7253  018C  3000               	movlw	0
  7254  018D  00C9               	movwf	trapmf@c
  7255  018E  30A0               	movlw	160
  7256  018F  00CA               	movwf	trapmf@c+1
  7257  0190  3040               	movlw	64
  7258  0191  00CB               	movwf	trapmf@c+2
  7259  0192  3000               	movlw	0
  7260  0193  00CC               	movwf	trapmf@d
  7261  0194  3020               	movlw	32
  7262  0195  00CD               	movwf	trapmf@d+1
  7263  0196  3041               	movlw	65
  7264  0197  00CE               	movwf	trapmf@d+2
  7265  0198  120A  158A  252D  120A  118A  	fcall	_trapmf
  7266  019D  1283               	bcf	3,5	;RP0=0, select bank0
  7267  019E  1303               	bcf	3,6	;RP1=0, select bank0
  7268  019F  0840               	movf	?_trapmf,w
  7269  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  7270  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  7271  01A2  00C8               	movwf	_rulepequeno^(0+128)
  7272  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7273  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  7274  01A5  0841               	movf	?_trapmf+1,w
  7275  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  7276  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  7277  01A8  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7278  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7279  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7280  01AB  0842               	movf	?_trapmf+2,w
  7281  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  7282  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  7283  01AE  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7284                           
  7285                           ;main.c: 217: if (rulepequeno >= rule) {
  7286  01AF  0848               	movf	_rulepequeno^(0+128),w
  7287  01B0  00F0               	movwf	___ftge@ff1
  7288  01B1  0849               	movf	(_rulepequeno+1)^(0+128),w
  7289  01B2  00F1               	movwf	___ftge@ff1+1
  7290  01B3  084A               	movf	(_rulepequeno+2)^(0+128),w
  7291  01B4  00F2               	movwf	___ftge@ff1+2
  7292  01B5  083C               	movf	Fuzzy@rule^(0+128),w
  7293  01B6  00F3               	movwf	___ftge@ff2
  7294  01B7  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7295  01B8  00F4               	movwf	___ftge@ff2+1
  7296  01B9  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7297  01BA  00F5               	movwf	___ftge@ff2+2
  7298  01BB  160A  118A  2545  120A  118A  	fcall	___ftge
  7299  01C0  1C03               	btfss	3,0
  7300  01C1  29CA               	goto	i1l3887
  7301                           
  7302                           ;main.c: 218: rulepequeno = rule;
  7303  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  7304  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  7305  01C4  083C               	movf	Fuzzy@rule^(0+128),w
  7306  01C5  00C8               	movwf	_rulepequeno^(0+128)
  7307  01C6  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7308  01C7  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7309  01C8  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7310  01C9  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7311  01CA                     i1l3887:	
  7312                           
  7313                           ;main.c: 219: }
  7314                           ;main.c: 221: x += 1;
  7315  01CA  3000               	movlw	0
  7316  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  7317  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  7318  01CD  00A3               	movwf	___ftadd@f1
  7319  01CE  3080               	movlw	128
  7320  01CF  00A4               	movwf	___ftadd@f1+1
  7321  01D0  303F               	movlw	63
  7322  01D1  00A5               	movwf	___ftadd@f1+2
  7323  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  7324  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  7325  01D4  083F               	movf	Fuzzy@x^(0+128),w
  7326  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7327  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7328  01D7  00A6               	movwf	___ftadd@f2
  7329  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  7330  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  7331  01DA  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7332  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  7333  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  7334  01DD  00A7               	movwf	___ftadd@f2+1
  7335  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  7336  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  7337  01E0  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7338  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  7339  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  7340  01E3  00A8               	movwf	___ftadd@f2+2
  7341  01E4  120A  158A  2424  120A  118A  	fcall	___ftadd
  7342  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  7343  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  7344  01EB  0823               	movf	?___ftadd,w
  7345  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  7346  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  7347  01EE  00BF               	movwf	Fuzzy@x^(0+128)
  7348  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  7349  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  7350  01F1  0824               	movf	?___ftadd+1,w
  7351  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  7352  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  7353  01F4  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7354  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  7355  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  7356  01F7  0825               	movf	?___ftadd+2,w
  7357  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  7358  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  7359  01FA  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7360  01FB  3001               	movlw	1
  7361  01FC  07AC               	addwf	Fuzzy@a_244^(0+128),f
  7362  01FD  1803               	skipnc
  7363  01FE  0AAD               	incf	(Fuzzy@a_244+1)^(0+128),f
  7364  01FF  3000               	movlw	0
  7365  0200  07AD               	addwf	(Fuzzy@a_244+1)^(0+128),f
  7366  0201  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7367  0202  3A80               	xorlw	128
  7368  0203  00FF               	movwf	127
  7369  0204  3080               	movlw	128
  7370  0205  027F               	subwf	127,w
  7371  0206  1D03               	skipz
  7372  0207  2A0A               	goto	u528_25
  7373  0208  3010               	movlw	16
  7374  0209  022C               	subwf	Fuzzy@a_244^(0+128),w
  7375  020A                     u528_25:	
  7376  020A  1C03               	skipc
  7377  020B  296E               	goto	i1l3883
  7378  020C                     i1l3893:	
  7379                           
  7380                           ;main.c: 222: }
  7381                           ;main.c: 223: }
  7382                           ;main.c: 226: if (deltaV >= 100 && deltaV <= 1001 && delta >= 201)
  7383  020C  3000               	movlw	0
  7384  020D  1683               	bsf	3,5	;RP0=1, select bank1
  7385  020E  1303               	bcf	3,6	;RP1=0, select bank1
  7386  020F  0254               	subwf	(_deltaV+1)^(0+128),w
  7387  0210  3064               	movlw	100
  7388  0211  1903               	skipnz
  7389  0212  0253               	subwf	_deltaV^(0+128),w
  7390  0213  1C03               	skipc
  7391  0214  2B65               	goto	i1l3919
  7392  0215  3003               	movlw	3
  7393  0216  0254               	subwf	(_deltaV+1)^(0+128),w
  7394  0217  30EA               	movlw	234
  7395  0218  1903               	skipnz
  7396  0219  0253               	subwf	_deltaV^(0+128),w
  7397  021A  1803               	skipnc
  7398  021B  2B65               	goto	i1l3919
  7399  021C  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7400  021D  3A80               	xorlw	128
  7401  021E  00FF               	movwf	127
  7402  021F  3080               	movlw	128
  7403  0220  027F               	subwf	127,w
  7404  0221  1D03               	skipz
  7405  0222  2A25               	goto	u531_25
  7406  0223  30C9               	movlw	201
  7407  0224  0232               	subwf	Fuzzy@delta^(0+128),w
  7408  0225                     u531_25:	
  7409  0225  1C03               	skipc
  7410  0226  2B65               	goto	i1l3919
  7411                           
  7412                           ;main.c: 227: {
  7413                           ;main.c: 229: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7414                           ;main.c: 230: trapmf(delta, 200, 500, 2000, 2001);
  7415  0227  3020               	movlw	32
  7416  0228  1283               	bcf	3,5	;RP0=0, select bank0
  7417  0229  1303               	bcf	3,6	;RP1=0, select bank0
  7418  022A  00CC               	movwf	trapmf@d
  7419  022B  30FA               	movlw	250
  7420  022C  00CD               	movwf	trapmf@d+1
  7421  022D  3044               	movlw	68
  7422  022E  00CE               	movwf	trapmf@d+2
  7423  022F  3000               	movlw	0
  7424  0230  00C9               	movwf	trapmf@c
  7425  0231  30FA               	movlw	250
  7426  0232  00CA               	movwf	trapmf@c+1
  7427  0233  3044               	movlw	68
  7428  0234  00CB               	movwf	trapmf@c+2
  7429  0235  3000               	movlw	0
  7430  0236  00C6               	movwf	trapmf@b
  7431  0237  30FA               	movlw	250
  7432  0238  00C7               	movwf	trapmf@b+1
  7433  0239  3043               	movlw	67
  7434  023A  00C8               	movwf	trapmf@b+2
  7435  023B  3000               	movlw	0
  7436  023C  00C3               	movwf	trapmf@a
  7437  023D  3048               	movlw	72
  7438  023E  00C4               	movwf	trapmf@a+1
  7439  023F  3043               	movlw	67
  7440  0240  00C5               	movwf	trapmf@a+2
  7441  0241  1683               	bsf	3,5	;RP0=1, select bank1
  7442  0242  1303               	bcf	3,6	;RP1=0, select bank1
  7443  0243  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7444  0244  01F9               	clrf	___awtoft@c+1
  7445  0245  07F9               	addwf	___awtoft@c+1,f
  7446  0246  0832               	movf	Fuzzy@delta^(0+128),w
  7447  0247  01F8               	clrf	___awtoft@c
  7448  0248  07F8               	addwf	___awtoft@c,f
  7449  0249  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7450  024E  0878               	movf	?___awtoft,w
  7451  024F  1283               	bcf	3,5	;RP0=0, select bank0
  7452  0250  1303               	bcf	3,6	;RP1=0, select bank0
  7453  0251  00C0               	movwf	trapmf@x
  7454  0252  0879               	movf	?___awtoft+1,w
  7455  0253  00C1               	movwf	trapmf@x+1
  7456  0254  087A               	movf	?___awtoft+2,w
  7457  0255  00C2               	movwf	trapmf@x+2
  7458  0256  120A  158A  252D  120A  118A  	fcall	_trapmf
  7459  025B  1283               	bcf	3,5	;RP0=0, select bank0
  7460  025C  1303               	bcf	3,6	;RP1=0, select bank0
  7461  025D  0840               	movf	?_trapmf,w
  7462  025E  00D2               	movwf	___ftmul@f1
  7463  025F  0841               	movf	?_trapmf+1,w
  7464  0260  00D3               	movwf	___ftmul@f1+1
  7465  0261  0842               	movf	?_trapmf+2,w
  7466  0262  00D4               	movwf	___ftmul@f1+2
  7467  0263  30C0               	movlw	192
  7468  0264  00CC               	movwf	trapmf@d
  7469  0265  30C1               	movlw	193
  7470  0266  00CD               	movwf	trapmf@d+1
  7471  0267  3044               	movlw	68
  7472  0268  00CE               	movwf	trapmf@d+2
  7473  0269  3000               	movlw	0
  7474  026A  00C9               	movwf	trapmf@c
  7475  026B  3048               	movlw	72
  7476  026C  00CA               	movwf	trapmf@c+1
  7477  026D  3044               	movlw	68
  7478  026E  00CB               	movwf	trapmf@c+2
  7479  026F  3000               	movlw	0
  7480  0270  00C6               	movwf	trapmf@b
  7481  0271  3048               	movlw	72
  7482  0272  00C7               	movwf	trapmf@b+1
  7483  0273  3044               	movlw	68
  7484  0274  00C8               	movwf	trapmf@b+2
  7485  0275  3000               	movlw	0
  7486  0276  00C3               	movwf	trapmf@a
  7487  0277  3048               	movlw	72
  7488  0278  00C4               	movwf	trapmf@a+1
  7489  0279  3042               	movlw	66
  7490  027A  00C5               	movwf	trapmf@a+2
  7491  027B  1683               	bsf	3,5	;RP0=1, select bank1
  7492  027C  1303               	bcf	3,6	;RP1=0, select bank1
  7493  027D  0854               	movf	(_deltaV+1)^(0+128),w
  7494  027E  01F9               	clrf	___lwtoft@c+1
  7495  027F  07F9               	addwf	___lwtoft@c+1,f
  7496  0280  0853               	movf	_deltaV^(0+128),w
  7497  0281  01F8               	clrf	___lwtoft@c
  7498  0282  07F8               	addwf	___lwtoft@c,f
  7499  0283  160A  118A  2314  120A  118A  	fcall	___lwtoft
  7500  0288  0878               	movf	?___lwtoft,w
  7501  0289  1283               	bcf	3,5	;RP0=0, select bank0
  7502  028A  1303               	bcf	3,6	;RP1=0, select bank0
  7503  028B  00C0               	movwf	trapmf@x
  7504  028C  0879               	movf	?___lwtoft+1,w
  7505  028D  00C1               	movwf	trapmf@x+1
  7506  028E  087A               	movf	?___lwtoft+2,w
  7507  028F  00C2               	movwf	trapmf@x+2
  7508  0290  120A  158A  252D  120A  118A  	fcall	_trapmf
  7509  0295  1283               	bcf	3,5	;RP0=0, select bank0
  7510  0296  1303               	bcf	3,6	;RP1=0, select bank0
  7511  0297  0840               	movf	?_trapmf,w
  7512  0298  00D5               	movwf	___ftmul@f2
  7513  0299  0841               	movf	?_trapmf+1,w
  7514  029A  00D6               	movwf	___ftmul@f2+1
  7515  029B  0842               	movf	?_trapmf+2,w
  7516  029C  00D7               	movwf	___ftmul@f2+2
  7517  029D  120A  158A  2351  120A  118A  	fcall	___ftmul
  7518  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  7519  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  7520  02A4  0852               	movf	?___ftmul,w
  7521  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  7522  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  7523  02A7  00BC               	movwf	Fuzzy@rule^(0+128)
  7524  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  7525  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  7526  02AA  0853               	movf	?___ftmul+1,w
  7527  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  7528  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  7529  02AD  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7530  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7531  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7532  02B0  0854               	movf	?___ftmul+2,w
  7533  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  7534  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  7535  02B3  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7536                           
  7537                           ;main.c: 232: x = 0;
  7538  02B4  3000               	movlw	0
  7539  02B5  00BF               	movwf	Fuzzy@x^(0+128)
  7540  02B6  3000               	movlw	0
  7541  02B7  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7542  02B8  3000               	movlw	0
  7543  02B9  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7544                           
  7545                           ;main.c: 233: for (int a = 0; a <= 15; a++) {
  7546  02BA  01AE               	clrf	Fuzzy@a_245^(0+128)
  7547  02BB  01AF               	clrf	(Fuzzy@a_245+1)^(0+128)
  7548  02BC  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7549  02BD  3A80               	xorlw	128
  7550  02BE  00FF               	movwf	127
  7551  02BF  3080               	movlw	128
  7552  02C0  027F               	subwf	127,w
  7553  02C1  1D03               	skipz
  7554  02C2  2AC5               	goto	u532_25
  7555  02C3  3010               	movlw	16
  7556  02C4  022E               	subwf	Fuzzy@a_245^(0+128),w
  7557  02C5                     u532_25:	
  7558  02C5  1803               	btfsc	3,0
  7559  02C6  2B65               	goto	i1l3919
  7560  02C7                     i1l3909:	
  7561                           
  7562                           ;main.c: 234: rulemedio = trapmf(x, 2, 5, 5, 10);
  7563  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  7564  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  7565  02C9  083F               	movf	Fuzzy@x^(0+128),w
  7566  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  7567  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  7568  02CC  00C0               	movwf	trapmf@x
  7569  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  7570  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  7571  02CF  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7572  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  7573  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  7574  02D2  00C1               	movwf	trapmf@x+1
  7575  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  7576  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  7577  02D5  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7578  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  7579  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  7580  02D8  00C2               	movwf	trapmf@x+2
  7581  02D9  3000               	movlw	0
  7582  02DA  00C3               	movwf	trapmf@a
  7583  02DB  3000               	movlw	0
  7584  02DC  00C4               	movwf	trapmf@a+1
  7585  02DD  3040               	movlw	64
  7586  02DE  00C5               	movwf	trapmf@a+2
  7587  02DF  3000               	movlw	0
  7588  02E0  00C6               	movwf	trapmf@b
  7589  02E1  30A0               	movlw	160
  7590  02E2  00C7               	movwf	trapmf@b+1
  7591  02E3  3040               	movlw	64
  7592  02E4  00C8               	movwf	trapmf@b+2
  7593  02E5  3000               	movlw	0
  7594  02E6  00C9               	movwf	trapmf@c
  7595  02E7  30A0               	movlw	160
  7596  02E8  00CA               	movwf	trapmf@c+1
  7597  02E9  3040               	movlw	64
  7598  02EA  00CB               	movwf	trapmf@c+2
  7599  02EB  3000               	movlw	0
  7600  02EC  00CC               	movwf	trapmf@d
  7601  02ED  3020               	movlw	32
  7602  02EE  00CD               	movwf	trapmf@d+1
  7603  02EF  3041               	movlw	65
  7604  02F0  00CE               	movwf	trapmf@d+2
  7605  02F1  120A  158A  252D  120A  118A  	fcall	_trapmf
  7606  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  7607  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  7608  02F8  0840               	movf	?_trapmf,w
  7609  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  7610  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  7611  02FB  00C5               	movwf	_rulemedio^(0+128)
  7612  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  7613  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  7614  02FE  0841               	movf	?_trapmf+1,w
  7615  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  7616  0300  1303               	bcf	3,6	;RP1=0, select bank1
  7617  0301  00C6               	movwf	(_rulemedio+1)^(0+128)
  7618  0302  1283               	bcf	3,5	;RP0=0, select bank0
  7619  0303  1303               	bcf	3,6	;RP1=0, select bank0
  7620  0304  0842               	movf	?_trapmf+2,w
  7621  0305  1683               	bsf	3,5	;RP0=1, select bank1
  7622  0306  1303               	bcf	3,6	;RP1=0, select bank1
  7623  0307  00C7               	movwf	(_rulemedio+2)^(0+128)
  7624                           
  7625                           ;main.c: 236: if (rulemedio >= rule) {
  7626  0308  0845               	movf	_rulemedio^(0+128),w
  7627  0309  00F0               	movwf	___ftge@ff1
  7628  030A  0846               	movf	(_rulemedio+1)^(0+128),w
  7629  030B  00F1               	movwf	___ftge@ff1+1
  7630  030C  0847               	movf	(_rulemedio+2)^(0+128),w
  7631  030D  00F2               	movwf	___ftge@ff1+2
  7632  030E  083C               	movf	Fuzzy@rule^(0+128),w
  7633  030F  00F3               	movwf	___ftge@ff2
  7634  0310  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7635  0311  00F4               	movwf	___ftge@ff2+1
  7636  0312  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7637  0313  00F5               	movwf	___ftge@ff2+2
  7638  0314  160A  118A  2545  120A  118A  	fcall	___ftge
  7639  0319  1C03               	btfss	3,0
  7640  031A  2B23               	goto	i1l3913
  7641                           
  7642                           ;main.c: 237: rulemedio = rule;
  7643  031B  1683               	bsf	3,5	;RP0=1, select bank1
  7644  031C  1303               	bcf	3,6	;RP1=0, select bank1
  7645  031D  083C               	movf	Fuzzy@rule^(0+128),w
  7646  031E  00C5               	movwf	_rulemedio^(0+128)
  7647  031F  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7648  0320  00C6               	movwf	(_rulemedio+1)^(0+128)
  7649  0321  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7650  0322  00C7               	movwf	(_rulemedio+2)^(0+128)
  7651  0323                     i1l3913:	
  7652                           
  7653                           ;main.c: 238: }
  7654                           ;main.c: 240: x += 1;
  7655  0323  3000               	movlw	0
  7656  0324  1283               	bcf	3,5	;RP0=0, select bank0
  7657  0325  1303               	bcf	3,6	;RP1=0, select bank0
  7658  0326  00A3               	movwf	___ftadd@f1
  7659  0327  3080               	movlw	128
  7660  0328  00A4               	movwf	___ftadd@f1+1
  7661  0329  303F               	movlw	63
  7662  032A  00A5               	movwf	___ftadd@f1+2
  7663  032B  1683               	bsf	3,5	;RP0=1, select bank1
  7664  032C  1303               	bcf	3,6	;RP1=0, select bank1
  7665  032D  083F               	movf	Fuzzy@x^(0+128),w
  7666  032E  1283               	bcf	3,5	;RP0=0, select bank0
  7667  032F  1303               	bcf	3,6	;RP1=0, select bank0
  7668  0330  00A6               	movwf	___ftadd@f2
  7669  0331  1683               	bsf	3,5	;RP0=1, select bank1
  7670  0332  1303               	bcf	3,6	;RP1=0, select bank1
  7671  0333  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7672  0334  1283               	bcf	3,5	;RP0=0, select bank0
  7673  0335  1303               	bcf	3,6	;RP1=0, select bank0
  7674  0336  00A7               	movwf	___ftadd@f2+1
  7675  0337  1683               	bsf	3,5	;RP0=1, select bank1
  7676  0338  1303               	bcf	3,6	;RP1=0, select bank1
  7677  0339  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7678  033A  1283               	bcf	3,5	;RP0=0, select bank0
  7679  033B  1303               	bcf	3,6	;RP1=0, select bank0
  7680  033C  00A8               	movwf	___ftadd@f2+2
  7681  033D  120A  158A  2424  120A  118A  	fcall	___ftadd
  7682  0342  1283               	bcf	3,5	;RP0=0, select bank0
  7683  0343  1303               	bcf	3,6	;RP1=0, select bank0
  7684  0344  0823               	movf	?___ftadd,w
  7685  0345  1683               	bsf	3,5	;RP0=1, select bank1
  7686  0346  1303               	bcf	3,6	;RP1=0, select bank1
  7687  0347  00BF               	movwf	Fuzzy@x^(0+128)
  7688  0348  1283               	bcf	3,5	;RP0=0, select bank0
  7689  0349  1303               	bcf	3,6	;RP1=0, select bank0
  7690  034A  0824               	movf	?___ftadd+1,w
  7691  034B  1683               	bsf	3,5	;RP0=1, select bank1
  7692  034C  1303               	bcf	3,6	;RP1=0, select bank1
  7693  034D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7694  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7695  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7696  0350  0825               	movf	?___ftadd+2,w
  7697  0351  1683               	bsf	3,5	;RP0=1, select bank1
  7698  0352  1303               	bcf	3,6	;RP1=0, select bank1
  7699  0353  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7700  0354  3001               	movlw	1
  7701  0355  07AE               	addwf	Fuzzy@a_245^(0+128),f
  7702  0356  1803               	skipnc
  7703  0357  0AAF               	incf	(Fuzzy@a_245+1)^(0+128),f
  7704  0358  3000               	movlw	0
  7705  0359  07AF               	addwf	(Fuzzy@a_245+1)^(0+128),f
  7706  035A  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7707  035B  3A80               	xorlw	128
  7708  035C  00FF               	movwf	127
  7709  035D  3080               	movlw	128
  7710  035E  027F               	subwf	127,w
  7711  035F  1D03               	skipz
  7712  0360  2B63               	goto	u534_25
  7713  0361  3010               	movlw	16
  7714  0362  022E               	subwf	Fuzzy@a_245^(0+128),w
  7715  0363                     u534_25:	
  7716  0363  1C03               	skipc
  7717  0364  2AC7               	goto	i1l3909
  7718  0365                     i1l3919:	
  7719                           
  7720                           ;main.c: 241: }
  7721                           ;main.c: 242: }
  7722                           ;main.c: 245: if (deltaV >= 1001)
  7723  0365  3003               	movlw	3
  7724  0366  1683               	bsf	3,5	;RP0=1, select bank1
  7725  0367  1303               	bcf	3,6	;RP1=0, select bank1
  7726  0368  0254               	subwf	(_deltaV+1)^(0+128),w
  7727  0369  30E9               	movlw	233
  7728  036A  1903               	skipnz
  7729  036B  0253               	subwf	_deltaV^(0+128),w
  7730  036C  1C03               	skipc
  7731  036D  2C61               	goto	i1l3941
  7732                           
  7733                           ;main.c: 246: {
  7734                           ;main.c: 248: rule = trapmf(deltaV, 1001, 1500, 2000, 2001);
  7735  036E  0854               	movf	(_deltaV+1)^(0+128),w
  7736  036F  01F9               	clrf	___lwtoft@c+1
  7737  0370  07F9               	addwf	___lwtoft@c+1,f
  7738  0371  0853               	movf	_deltaV^(0+128),w
  7739  0372  01F8               	clrf	___lwtoft@c
  7740  0373  07F8               	addwf	___lwtoft@c,f
  7741  0374  160A  118A  2314  120A  118A  	fcall	___lwtoft
  7742  0379  0878               	movf	?___lwtoft,w
  7743  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7744  037B  1303               	bcf	3,6	;RP1=0, select bank0
  7745  037C  00C0               	movwf	trapmf@x
  7746  037D  0879               	movf	?___lwtoft+1,w
  7747  037E  00C1               	movwf	trapmf@x+1
  7748  037F  087A               	movf	?___lwtoft+2,w
  7749  0380  00C2               	movwf	trapmf@x+2
  7750  0381  3040               	movlw	64
  7751  0382  00C3               	movwf	trapmf@a
  7752  0383  307A               	movlw	122
  7753  0384  00C4               	movwf	trapmf@a+1
  7754  0385  3044               	movlw	68
  7755  0386  00C5               	movwf	trapmf@a+2
  7756  0387  3080               	movlw	128
  7757  0388  00C6               	movwf	trapmf@b
  7758  0389  30BB               	movlw	187
  7759  038A  00C7               	movwf	trapmf@b+1
  7760  038B  3044               	movlw	68
  7761  038C  00C8               	movwf	trapmf@b+2
  7762  038D  3000               	movlw	0
  7763  038E  00C9               	movwf	trapmf@c
  7764  038F  30FA               	movlw	250
  7765  0390  00CA               	movwf	trapmf@c+1
  7766  0391  3044               	movlw	68
  7767  0392  00CB               	movwf	trapmf@c+2
  7768  0393  3020               	movlw	32
  7769  0394  00CC               	movwf	trapmf@d
  7770  0395  30FA               	movlw	250
  7771  0396  00CD               	movwf	trapmf@d+1
  7772  0397  3044               	movlw	68
  7773  0398  00CE               	movwf	trapmf@d+2
  7774  0399  120A  158A  252D  120A  118A  	fcall	_trapmf
  7775  039E  1283               	bcf	3,5	;RP0=0, select bank0
  7776  039F  1303               	bcf	3,6	;RP1=0, select bank0
  7777  03A0  0840               	movf	?_trapmf,w
  7778  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  7779  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  7780  03A3  00BC               	movwf	Fuzzy@rule^(0+128)
  7781  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  7782  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  7783  03A6  0841               	movf	?_trapmf+1,w
  7784  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7785  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  7786  03A9  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7787  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  7788  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  7789  03AC  0842               	movf	?_trapmf+2,w
  7790  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  7791  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  7792  03AF  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7793                           
  7794                           ;main.c: 250: x = 0;
  7795  03B0  3000               	movlw	0
  7796  03B1  00BF               	movwf	Fuzzy@x^(0+128)
  7797  03B2  3000               	movlw	0
  7798  03B3  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7799  03B4  3000               	movlw	0
  7800  03B5  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7801                           
  7802                           ;main.c: 251: for (int a = 0; a <= 15; a++) {
  7803  03B6  01B0               	clrf	Fuzzy@a_246^(0+128)
  7804  03B7  01B1               	clrf	(Fuzzy@a_246+1)^(0+128)
  7805  03B8  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7806  03B9  3A80               	xorlw	128
  7807  03BA  00FF               	movwf	127
  7808  03BB  3080               	movlw	128
  7809  03BC  027F               	subwf	127,w
  7810  03BD  1D03               	skipz
  7811  03BE  2BC1               	goto	u536_25
  7812  03BF  3010               	movlw	16
  7813  03C0  0230               	subwf	Fuzzy@a_246^(0+128),w
  7814  03C1                     u536_25:	
  7815  03C1  1803               	btfsc	3,0
  7816  03C2  2C61               	goto	i1l3941
  7817  03C3                     i1l3931:	
  7818                           
  7819                           ;main.c: 252: rulegrande = trapmf(x, 5, 10, 15, 16);
  7820  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  7821  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  7822  03C5  083F               	movf	Fuzzy@x^(0+128),w
  7823  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  7824  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  7825  03C8  00C0               	movwf	trapmf@x
  7826  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  7827  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  7828  03CB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7829  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  7830  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  7831  03CE  00C1               	movwf	trapmf@x+1
  7832  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  7833  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  7834  03D1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7835  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  7836  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  7837  03D4  00C2               	movwf	trapmf@x+2
  7838  03D5  3000               	movlw	0
  7839  03D6  00C3               	movwf	trapmf@a
  7840  03D7  30A0               	movlw	160
  7841  03D8  00C4               	movwf	trapmf@a+1
  7842  03D9  3040               	movlw	64
  7843  03DA  00C5               	movwf	trapmf@a+2
  7844  03DB  3000               	movlw	0
  7845  03DC  00C6               	movwf	trapmf@b
  7846  03DD  3020               	movlw	32
  7847  03DE  00C7               	movwf	trapmf@b+1
  7848  03DF  3041               	movlw	65
  7849  03E0  00C8               	movwf	trapmf@b+2
  7850  03E1  3000               	movlw	0
  7851  03E2  00C9               	movwf	trapmf@c
  7852  03E3  3070               	movlw	112
  7853  03E4  00CA               	movwf	trapmf@c+1
  7854  03E5  3041               	movlw	65
  7855  03E6  00CB               	movwf	trapmf@c+2
  7856  03E7  3000               	movlw	0
  7857  03E8  00CC               	movwf	trapmf@d
  7858  03E9  3080               	movlw	128
  7859  03EA  00CD               	movwf	trapmf@d+1
  7860  03EB  3041               	movlw	65
  7861  03EC  00CE               	movwf	trapmf@d+2
  7862  03ED  120A  158A  252D  120A  118A  	fcall	_trapmf
  7863  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  7864  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  7865  03F4  0840               	movf	?_trapmf,w
  7866  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7867  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  7868  03F7  00C2               	movwf	_rulegrande^(0+128)
  7869  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7870  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7871  03FA  0841               	movf	?_trapmf+1,w
  7872  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  7873  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  7874  03FD  00C3               	movwf	(_rulegrande+1)^(0+128)
  7875  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  7876  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0400  0842               	movf	?_trapmf+2,w
  7878  0401  1683               	bsf	3,5	;RP0=1, select bank1
  7879  0402  1303               	bcf	3,6	;RP1=0, select bank1
  7880  0403  00C4               	movwf	(_rulegrande+2)^(0+128)
  7881                           
  7882                           ;main.c: 254: if (rulegrande >= rule) {
  7883  0404  0842               	movf	_rulegrande^(0+128),w
  7884  0405  00F0               	movwf	___ftge@ff1
  7885  0406  0843               	movf	(_rulegrande+1)^(0+128),w
  7886  0407  00F1               	movwf	___ftge@ff1+1
  7887  0408  0844               	movf	(_rulegrande+2)^(0+128),w
  7888  0409  00F2               	movwf	___ftge@ff1+2
  7889  040A  083C               	movf	Fuzzy@rule^(0+128),w
  7890  040B  00F3               	movwf	___ftge@ff2
  7891  040C  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7892  040D  00F4               	movwf	___ftge@ff2+1
  7893  040E  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7894  040F  00F5               	movwf	___ftge@ff2+2
  7895  0410  160A  118A  2545  120A  118A  	fcall	___ftge
  7896  0415  1C03               	btfss	3,0
  7897  0416  2C1F               	goto	i1l3935
  7898                           
  7899                           ;main.c: 255: rulegrande = rule;
  7900  0417  1683               	bsf	3,5	;RP0=1, select bank1
  7901  0418  1303               	bcf	3,6	;RP1=0, select bank1
  7902  0419  083C               	movf	Fuzzy@rule^(0+128),w
  7903  041A  00C2               	movwf	_rulegrande^(0+128)
  7904  041B  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7905  041C  00C3               	movwf	(_rulegrande+1)^(0+128)
  7906  041D  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7907  041E  00C4               	movwf	(_rulegrande+2)^(0+128)
  7908  041F                     i1l3935:	
  7909                           
  7910                           ;main.c: 256: }
  7911                           ;main.c: 258: x += 1;
  7912  041F  3000               	movlw	0
  7913  0420  1283               	bcf	3,5	;RP0=0, select bank0
  7914  0421  1303               	bcf	3,6	;RP1=0, select bank0
  7915  0422  00A3               	movwf	___ftadd@f1
  7916  0423  3080               	movlw	128
  7917  0424  00A4               	movwf	___ftadd@f1+1
  7918  0425  303F               	movlw	63
  7919  0426  00A5               	movwf	___ftadd@f1+2
  7920  0427  1683               	bsf	3,5	;RP0=1, select bank1
  7921  0428  1303               	bcf	3,6	;RP1=0, select bank1
  7922  0429  083F               	movf	Fuzzy@x^(0+128),w
  7923  042A  1283               	bcf	3,5	;RP0=0, select bank0
  7924  042B  1303               	bcf	3,6	;RP1=0, select bank0
  7925  042C  00A6               	movwf	___ftadd@f2
  7926  042D  1683               	bsf	3,5	;RP0=1, select bank1
  7927  042E  1303               	bcf	3,6	;RP1=0, select bank1
  7928  042F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7929  0430  1283               	bcf	3,5	;RP0=0, select bank0
  7930  0431  1303               	bcf	3,6	;RP1=0, select bank0
  7931  0432  00A7               	movwf	___ftadd@f2+1
  7932  0433  1683               	bsf	3,5	;RP0=1, select bank1
  7933  0434  1303               	bcf	3,6	;RP1=0, select bank1
  7934  0435  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7935  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7936  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7937  0438  00A8               	movwf	___ftadd@f2+2
  7938  0439  120A  158A  2424  120A  118A  	fcall	___ftadd
  7939  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7940  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7941  0440  0823               	movf	?___ftadd,w
  7942  0441  1683               	bsf	3,5	;RP0=1, select bank1
  7943  0442  1303               	bcf	3,6	;RP1=0, select bank1
  7944  0443  00BF               	movwf	Fuzzy@x^(0+128)
  7945  0444  1283               	bcf	3,5	;RP0=0, select bank0
  7946  0445  1303               	bcf	3,6	;RP1=0, select bank0
  7947  0446  0824               	movf	?___ftadd+1,w
  7948  0447  1683               	bsf	3,5	;RP0=1, select bank1
  7949  0448  1303               	bcf	3,6	;RP1=0, select bank1
  7950  0449  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7951  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7952  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7953  044C  0825               	movf	?___ftadd+2,w
  7954  044D  1683               	bsf	3,5	;RP0=1, select bank1
  7955  044E  1303               	bcf	3,6	;RP1=0, select bank1
  7956  044F  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7957  0450  3001               	movlw	1
  7958  0451  07B0               	addwf	Fuzzy@a_246^(0+128),f
  7959  0452  1803               	skipnc
  7960  0453  0AB1               	incf	(Fuzzy@a_246+1)^(0+128),f
  7961  0454  3000               	movlw	0
  7962  0455  07B1               	addwf	(Fuzzy@a_246+1)^(0+128),f
  7963  0456  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7964  0457  3A80               	xorlw	128
  7965  0458  00FF               	movwf	127
  7966  0459  3080               	movlw	128
  7967  045A  027F               	subwf	127,w
  7968  045B  1D03               	skipz
  7969  045C  2C5F               	goto	u538_25
  7970  045D  3010               	movlw	16
  7971  045E  0230               	subwf	Fuzzy@a_246^(0+128),w
  7972  045F                     u538_25:	
  7973  045F  1C03               	skipc
  7974  0460  2BC3               	goto	i1l3931
  7975  0461                     i1l3941:	
  7976                           
  7977                           ;main.c: 259: }
  7978                           ;main.c: 260: }
  7979                           ;main.c: 263: x = 0;
  7980  0461  3000               	movlw	0
  7981  0462  1683               	bsf	3,5	;RP0=1, select bank1
  7982  0463  1303               	bcf	3,6	;RP1=0, select bank1
  7983  0464  00BF               	movwf	Fuzzy@x^(0+128)
  7984  0465  3000               	movlw	0
  7985  0466  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7986  0467  3000               	movlw	0
  7987  0468  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7988                           
  7989                           ;main.c: 264: float total_area = 0;
  7990  0469  3000               	movlw	0
  7991  046A  00B7               	movwf	Fuzzy@total_area^(0+128)
  7992  046B  3000               	movlw	0
  7993  046C  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  7994  046D  3000               	movlw	0
  7995  046E  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  7996                           
  7997                           ;main.c: 265: float soma = 0;
  7998  046F  3000               	movlw	0
  7999  0470  00B4               	movwf	Fuzzy@soma^(0+128)
  8000  0471  3000               	movlw	0
  8001  0472  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8002  0473  3000               	movlw	0
  8003  0474  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8004                           
  8005                           ;main.c: 266: for (int a = 0; a <= 15; a++)
  8006  0475  01BA               	clrf	Fuzzy@a_249^(0+128)
  8007  0476  01BB               	clrf	(Fuzzy@a_249+1)^(0+128)
  8008  0477  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8009  0478  3A80               	xorlw	128
  8010  0479  00FF               	movwf	127
  8011  047A  3080               	movlw	128
  8012  047B  027F               	subwf	127,w
  8013  047C  1D03               	skipz
  8014  047D  2C80               	goto	u539_25
  8015  047E  3010               	movlw	16
  8016  047F  023A               	subwf	Fuzzy@a_249^(0+128),w
  8017  0480                     u539_25:	
  8018  0480  1803               	btfsc	3,0
  8019  0481  2EC0               	goto	i1l3969
  8020  0482                     i1l180:	
  8021                           
  8022                           ;main.c: 267: {
  8023                           ;main.c: 268: if (a >= 0 && a <= 5) {
  8024  0482  1683               	bsf	3,5	;RP0=1, select bank1
  8025  0483  1303               	bcf	3,6	;RP1=0, select bank1
  8026  0484  1BBB               	btfsc	(Fuzzy@a_249+1)^(0+128),7
  8027  0485  2D24               	goto	i1l3953
  8028  0486  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8029  0487  3A80               	xorlw	128
  8030  0488  00FF               	movwf	127
  8031  0489  3080               	movlw	128
  8032  048A  027F               	subwf	127,w
  8033  048B  1D03               	skipz
  8034  048C  2C8F               	goto	u541_25
  8035  048D  3006               	movlw	6
  8036  048E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8037  048F                     u541_25:	
  8038  048F  1803               	skipnc
  8039  0490  2D24               	goto	i1l3953
  8040                           
  8041                           ;main.c: 269: total_area += rulepequeno;
  8042  0491  1683               	bsf	3,5	;RP0=1, select bank1
  8043  0492  1303               	bcf	3,6	;RP1=0, select bank1
  8044  0493  0848               	movf	_rulepequeno^(0+128),w
  8045  0494  1283               	bcf	3,5	;RP0=0, select bank0
  8046  0495  1303               	bcf	3,6	;RP1=0, select bank0
  8047  0496  00A3               	movwf	___ftadd@f1
  8048  0497  1683               	bsf	3,5	;RP0=1, select bank1
  8049  0498  1303               	bcf	3,6	;RP1=0, select bank1
  8050  0499  0849               	movf	(_rulepequeno+1)^(0+128),w
  8051  049A  1283               	bcf	3,5	;RP0=0, select bank0
  8052  049B  1303               	bcf	3,6	;RP1=0, select bank0
  8053  049C  00A4               	movwf	___ftadd@f1+1
  8054  049D  1683               	bsf	3,5	;RP0=1, select bank1
  8055  049E  1303               	bcf	3,6	;RP1=0, select bank1
  8056  049F  084A               	movf	(_rulepequeno+2)^(0+128),w
  8057  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  8058  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  8059  04A2  00A5               	movwf	___ftadd@f1+2
  8060  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  8061  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  8062  04A5  0837               	movf	Fuzzy@total_area^(0+128),w
  8063  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  8064  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  8065  04A8  00A6               	movwf	___ftadd@f2
  8066  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  8067  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  8068  04AB  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8069  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  8070  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  8071  04AE  00A7               	movwf	___ftadd@f2+1
  8072  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  8073  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  8074  04B1  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8075  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  8076  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  8077  04B4  00A8               	movwf	___ftadd@f2+2
  8078  04B5  120A  158A  2424  120A  118A  	fcall	___ftadd
  8079  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  8080  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  8081  04BC  0823               	movf	?___ftadd,w
  8082  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  8083  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  8084  04BF  00B7               	movwf	Fuzzy@total_area^(0+128)
  8085  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  8086  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  8087  04C2  0824               	movf	?___ftadd+1,w
  8088  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  8089  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  8090  04C5  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8091  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  8092  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  8093  04C8  0825               	movf	?___ftadd+2,w
  8094  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  8095  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  8096  04CB  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8097                           
  8098                           ;main.c: 270: soma += (x * rulepequeno);
  8099  04CC  083F               	movf	Fuzzy@x^(0+128),w
  8100  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8101  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8102  04CF  00D5               	movwf	___ftmul@f2
  8103  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8104  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8105  04D2  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8106  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8107  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8108  04D5  00D6               	movwf	___ftmul@f2+1
  8109  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  8110  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  8111  04D8  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8112  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  8113  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  8114  04DB  00D7               	movwf	___ftmul@f2+2
  8115  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  8116  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  8117  04DE  0848               	movf	_rulepequeno^(0+128),w
  8118  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  8119  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  8120  04E1  00D2               	movwf	___ftmul@f1
  8121  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  8122  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  8123  04E4  0849               	movf	(_rulepequeno+1)^(0+128),w
  8124  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  8125  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  8126  04E7  00D3               	movwf	___ftmul@f1+1
  8127  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  8128  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  8129  04EA  084A               	movf	(_rulepequeno+2)^(0+128),w
  8130  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  8131  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  8132  04ED  00D4               	movwf	___ftmul@f1+2
  8133  04EE  120A  158A  2351  120A  118A  	fcall	___ftmul
  8134  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  8135  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  8136  04F5  0852               	movf	?___ftmul,w
  8137  04F6  00A3               	movwf	___ftadd@f1
  8138  04F7  0853               	movf	?___ftmul+1,w
  8139  04F8  00A4               	movwf	___ftadd@f1+1
  8140  04F9  0854               	movf	?___ftmul+2,w
  8141  04FA  00A5               	movwf	___ftadd@f1+2
  8142  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  8143  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  8144  04FD  0834               	movf	Fuzzy@soma^(0+128),w
  8145  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  8146  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  8147  0500  00A6               	movwf	___ftadd@f2
  8148  0501  1683               	bsf	3,5	;RP0=1, select bank1
  8149  0502  1303               	bcf	3,6	;RP1=0, select bank1
  8150  0503  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8151  0504  1283               	bcf	3,5	;RP0=0, select bank0
  8152  0505  1303               	bcf	3,6	;RP1=0, select bank0
  8153  0506  00A7               	movwf	___ftadd@f2+1
  8154  0507  1683               	bsf	3,5	;RP0=1, select bank1
  8155  0508  1303               	bcf	3,6	;RP1=0, select bank1
  8156  0509  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8157  050A  1283               	bcf	3,5	;RP0=0, select bank0
  8158  050B  1303               	bcf	3,6	;RP1=0, select bank0
  8159  050C  00A8               	movwf	___ftadd@f2+2
  8160  050D  120A  158A  2424  120A  118A  	fcall	___ftadd
  8161  0512  1283               	bcf	3,5	;RP0=0, select bank0
  8162  0513  1303               	bcf	3,6	;RP1=0, select bank0
  8163  0514  0823               	movf	?___ftadd,w
  8164  0515  1683               	bsf	3,5	;RP0=1, select bank1
  8165  0516  1303               	bcf	3,6	;RP1=0, select bank1
  8166  0517  00B4               	movwf	Fuzzy@soma^(0+128)
  8167  0518  1283               	bcf	3,5	;RP0=0, select bank0
  8168  0519  1303               	bcf	3,6	;RP1=0, select bank0
  8169  051A  0824               	movf	?___ftadd+1,w
  8170  051B  1683               	bsf	3,5	;RP0=1, select bank1
  8171  051C  1303               	bcf	3,6	;RP1=0, select bank1
  8172  051D  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8173  051E  1283               	bcf	3,5	;RP0=0, select bank0
  8174  051F  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0520  0825               	movf	?___ftadd+2,w
  8176  0521  1683               	bsf	3,5	;RP0=1, select bank1
  8177  0522  1303               	bcf	3,6	;RP1=0, select bank1
  8178  0523  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8179  0524                     i1l3953:	
  8180                           
  8181                           ;main.c: 271: }
  8182                           ;main.c: 273: if (a >= 5 && a <= 10) {
  8183  0524  1683               	bsf	3,5	;RP0=1, select bank1
  8184  0525  1303               	bcf	3,6	;RP1=0, select bank1
  8185  0526  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8186  0527  3A80               	xorlw	128
  8187  0528  00FF               	movwf	127
  8188  0529  3080               	movlw	128
  8189  052A  027F               	subwf	127,w
  8190  052B  1D03               	skipz
  8191  052C  2D2F               	goto	u542_25
  8192  052D  3005               	movlw	5
  8193  052E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8194  052F                     u542_25:	
  8195  052F  1C03               	skipc
  8196  0530  2DD1               	goto	i1l3959
  8197  0531  1683               	bsf	3,5	;RP0=1, select bank1
  8198  0532  1303               	bcf	3,6	;RP1=0, select bank1
  8199  0533  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8200  0534  3A80               	xorlw	128
  8201  0535  00FF               	movwf	127
  8202  0536  3080               	movlw	128
  8203  0537  027F               	subwf	127,w
  8204  0538  1D03               	skipz
  8205  0539  2D3C               	goto	u543_25
  8206  053A  300B               	movlw	11
  8207  053B  023A               	subwf	Fuzzy@a_249^(0+128),w
  8208  053C                     u543_25:	
  8209  053C  1803               	skipnc
  8210  053D  2DD1               	goto	i1l3959
  8211                           
  8212                           ;main.c: 274: total_area += rulemedio;
  8213  053E  1683               	bsf	3,5	;RP0=1, select bank1
  8214  053F  1303               	bcf	3,6	;RP1=0, select bank1
  8215  0540  0845               	movf	_rulemedio^(0+128),w
  8216  0541  1283               	bcf	3,5	;RP0=0, select bank0
  8217  0542  1303               	bcf	3,6	;RP1=0, select bank0
  8218  0543  00A3               	movwf	___ftadd@f1
  8219  0544  1683               	bsf	3,5	;RP0=1, select bank1
  8220  0545  1303               	bcf	3,6	;RP1=0, select bank1
  8221  0546  0846               	movf	(_rulemedio+1)^(0+128),w
  8222  0547  1283               	bcf	3,5	;RP0=0, select bank0
  8223  0548  1303               	bcf	3,6	;RP1=0, select bank0
  8224  0549  00A4               	movwf	___ftadd@f1+1
  8225  054A  1683               	bsf	3,5	;RP0=1, select bank1
  8226  054B  1303               	bcf	3,6	;RP1=0, select bank1
  8227  054C  0847               	movf	(_rulemedio+2)^(0+128),w
  8228  054D  1283               	bcf	3,5	;RP0=0, select bank0
  8229  054E  1303               	bcf	3,6	;RP1=0, select bank0
  8230  054F  00A5               	movwf	___ftadd@f1+2
  8231  0550  1683               	bsf	3,5	;RP0=1, select bank1
  8232  0551  1303               	bcf	3,6	;RP1=0, select bank1
  8233  0552  0837               	movf	Fuzzy@total_area^(0+128),w
  8234  0553  1283               	bcf	3,5	;RP0=0, select bank0
  8235  0554  1303               	bcf	3,6	;RP1=0, select bank0
  8236  0555  00A6               	movwf	___ftadd@f2
  8237  0556  1683               	bsf	3,5	;RP0=1, select bank1
  8238  0557  1303               	bcf	3,6	;RP1=0, select bank1
  8239  0558  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8240  0559  1283               	bcf	3,5	;RP0=0, select bank0
  8241  055A  1303               	bcf	3,6	;RP1=0, select bank0
  8242  055B  00A7               	movwf	___ftadd@f2+1
  8243  055C  1683               	bsf	3,5	;RP0=1, select bank1
  8244  055D  1303               	bcf	3,6	;RP1=0, select bank1
  8245  055E  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8246  055F  1283               	bcf	3,5	;RP0=0, select bank0
  8247  0560  1303               	bcf	3,6	;RP1=0, select bank0
  8248  0561  00A8               	movwf	___ftadd@f2+2
  8249  0562  120A  158A  2424  120A  118A  	fcall	___ftadd
  8250  0567  1283               	bcf	3,5	;RP0=0, select bank0
  8251  0568  1303               	bcf	3,6	;RP1=0, select bank0
  8252  0569  0823               	movf	?___ftadd,w
  8253  056A  1683               	bsf	3,5	;RP0=1, select bank1
  8254  056B  1303               	bcf	3,6	;RP1=0, select bank1
  8255  056C  00B7               	movwf	Fuzzy@total_area^(0+128)
  8256  056D  1283               	bcf	3,5	;RP0=0, select bank0
  8257  056E  1303               	bcf	3,6	;RP1=0, select bank0
  8258  056F  0824               	movf	?___ftadd+1,w
  8259  0570  1683               	bsf	3,5	;RP0=1, select bank1
  8260  0571  1303               	bcf	3,6	;RP1=0, select bank1
  8261  0572  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8262  0573  1283               	bcf	3,5	;RP0=0, select bank0
  8263  0574  1303               	bcf	3,6	;RP1=0, select bank0
  8264  0575  0825               	movf	?___ftadd+2,w
  8265  0576  1683               	bsf	3,5	;RP0=1, select bank1
  8266  0577  1303               	bcf	3,6	;RP1=0, select bank1
  8267  0578  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8268                           
  8269                           ;main.c: 275: soma += (x * rulemedio);
  8270  0579  083F               	movf	Fuzzy@x^(0+128),w
  8271  057A  1283               	bcf	3,5	;RP0=0, select bank0
  8272  057B  1303               	bcf	3,6	;RP1=0, select bank0
  8273  057C  00D5               	movwf	___ftmul@f2
  8274  057D  1683               	bsf	3,5	;RP0=1, select bank1
  8275  057E  1303               	bcf	3,6	;RP1=0, select bank1
  8276  057F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8277  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8278  0581  1303               	bcf	3,6	;RP1=0, select bank0
  8279  0582  00D6               	movwf	___ftmul@f2+1
  8280  0583  1683               	bsf	3,5	;RP0=1, select bank1
  8281  0584  1303               	bcf	3,6	;RP1=0, select bank1
  8282  0585  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8283  0586  1283               	bcf	3,5	;RP0=0, select bank0
  8284  0587  1303               	bcf	3,6	;RP1=0, select bank0
  8285  0588  00D7               	movwf	___ftmul@f2+2
  8286  0589  1683               	bsf	3,5	;RP0=1, select bank1
  8287  058A  1303               	bcf	3,6	;RP1=0, select bank1
  8288  058B  0845               	movf	_rulemedio^(0+128),w
  8289  058C  1283               	bcf	3,5	;RP0=0, select bank0
  8290  058D  1303               	bcf	3,6	;RP1=0, select bank0
  8291  058E  00D2               	movwf	___ftmul@f1
  8292  058F  1683               	bsf	3,5	;RP0=1, select bank1
  8293  0590  1303               	bcf	3,6	;RP1=0, select bank1
  8294  0591  0846               	movf	(_rulemedio+1)^(0+128),w
  8295  0592  1283               	bcf	3,5	;RP0=0, select bank0
  8296  0593  1303               	bcf	3,6	;RP1=0, select bank0
  8297  0594  00D3               	movwf	___ftmul@f1+1
  8298  0595  1683               	bsf	3,5	;RP0=1, select bank1
  8299  0596  1303               	bcf	3,6	;RP1=0, select bank1
  8300  0597  0847               	movf	(_rulemedio+2)^(0+128),w
  8301  0598  1283               	bcf	3,5	;RP0=0, select bank0
  8302  0599  1303               	bcf	3,6	;RP1=0, select bank0
  8303  059A  00D4               	movwf	___ftmul@f1+2
  8304  059B  120A  158A  2351  120A  118A  	fcall	___ftmul
  8305  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  8306  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  8307  05A2  0852               	movf	?___ftmul,w
  8308  05A3  00A3               	movwf	___ftadd@f1
  8309  05A4  0853               	movf	?___ftmul+1,w
  8310  05A5  00A4               	movwf	___ftadd@f1+1
  8311  05A6  0854               	movf	?___ftmul+2,w
  8312  05A7  00A5               	movwf	___ftadd@f1+2
  8313  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  8314  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  8315  05AA  0834               	movf	Fuzzy@soma^(0+128),w
  8316  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  8317  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  8318  05AD  00A6               	movwf	___ftadd@f2
  8319  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8320  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8321  05B0  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8322  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8323  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8324  05B3  00A7               	movwf	___ftadd@f2+1
  8325  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  8326  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  8327  05B6  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8328  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  8329  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  8330  05B9  00A8               	movwf	___ftadd@f2+2
  8331  05BA  120A  158A  2424  120A  118A  	fcall	___ftadd
  8332  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8333  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8334  05C1  0823               	movf	?___ftadd,w
  8335  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  8336  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  8337  05C4  00B4               	movwf	Fuzzy@soma^(0+128)
  8338  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8339  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8340  05C7  0824               	movf	?___ftadd+1,w
  8341  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  8342  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  8343  05CA  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8344  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  8345  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  8346  05CD  0825               	movf	?___ftadd+2,w
  8347  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  8348  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  8349  05D0  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8350  05D1                     i1l3959:	
  8351                           
  8352                           ;main.c: 276: }
  8353                           ;main.c: 278: if (a >= 10 && a <= 15) {
  8354  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  8355  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  8356  05D3  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8357  05D4  3A80               	xorlw	128
  8358  05D5  00FF               	movwf	127
  8359  05D6  3080               	movlw	128
  8360  05D7  027F               	subwf	127,w
  8361  05D8  1D03               	skipz
  8362  05D9  2DDC               	goto	u544_25
  8363  05DA  300A               	movlw	10
  8364  05DB  023A               	subwf	Fuzzy@a_249^(0+128),w
  8365  05DC                     u544_25:	
  8366  05DC  1C03               	skipc
  8367  05DD  2E7E               	goto	i1l184
  8368  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  8369  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  8370  05E0  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8371  05E1  3A80               	xorlw	128
  8372  05E2  00FF               	movwf	127
  8373  05E3  3080               	movlw	128
  8374  05E4  027F               	subwf	127,w
  8375  05E5  1D03               	skipz
  8376  05E6  2DE9               	goto	u545_25
  8377  05E7  3010               	movlw	16
  8378  05E8  023A               	subwf	Fuzzy@a_249^(0+128),w
  8379  05E9                     u545_25:	
  8380  05E9  1803               	skipnc
  8381  05EA  2E7E               	goto	i1l184
  8382                           
  8383                           ;main.c: 279: total_area += rulegrande;
  8384  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  8385  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  8386  05ED  0842               	movf	_rulegrande^(0+128),w
  8387  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  8388  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  8389  05F0  00A3               	movwf	___ftadd@f1
  8390  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  8391  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  8392  05F3  0843               	movf	(_rulegrande+1)^(0+128),w
  8393  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  8394  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  8395  05F6  00A4               	movwf	___ftadd@f1+1
  8396  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  8397  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  8398  05F9  0844               	movf	(_rulegrande+2)^(0+128),w
  8399  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8400  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8401  05FC  00A5               	movwf	___ftadd@f1+2
  8402  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  8403  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  8404  05FF  0837               	movf	Fuzzy@total_area^(0+128),w
  8405  0600  1283               	bcf	3,5	;RP0=0, select bank0
  8406  0601  1303               	bcf	3,6	;RP1=0, select bank0
  8407  0602  00A6               	movwf	___ftadd@f2
  8408  0603  1683               	bsf	3,5	;RP0=1, select bank1
  8409  0604  1303               	bcf	3,6	;RP1=0, select bank1
  8410  0605  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8411  0606  1283               	bcf	3,5	;RP0=0, select bank0
  8412  0607  1303               	bcf	3,6	;RP1=0, select bank0
  8413  0608  00A7               	movwf	___ftadd@f2+1
  8414  0609  1683               	bsf	3,5	;RP0=1, select bank1
  8415  060A  1303               	bcf	3,6	;RP1=0, select bank1
  8416  060B  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8417  060C  1283               	bcf	3,5	;RP0=0, select bank0
  8418  060D  1303               	bcf	3,6	;RP1=0, select bank0
  8419  060E  00A8               	movwf	___ftadd@f2+2
  8420  060F  120A  158A  2424  120A  118A  	fcall	___ftadd
  8421  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8422  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8423  0616  0823               	movf	?___ftadd,w
  8424  0617  1683               	bsf	3,5	;RP0=1, select bank1
  8425  0618  1303               	bcf	3,6	;RP1=0, select bank1
  8426  0619  00B7               	movwf	Fuzzy@total_area^(0+128)
  8427  061A  1283               	bcf	3,5	;RP0=0, select bank0
  8428  061B  1303               	bcf	3,6	;RP1=0, select bank0
  8429  061C  0824               	movf	?___ftadd+1,w
  8430  061D  1683               	bsf	3,5	;RP0=1, select bank1
  8431  061E  1303               	bcf	3,6	;RP1=0, select bank1
  8432  061F  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8433  0620  1283               	bcf	3,5	;RP0=0, select bank0
  8434  0621  1303               	bcf	3,6	;RP1=0, select bank0
  8435  0622  0825               	movf	?___ftadd+2,w
  8436  0623  1683               	bsf	3,5	;RP0=1, select bank1
  8437  0624  1303               	bcf	3,6	;RP1=0, select bank1
  8438  0625  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8439                           
  8440                           ;main.c: 280: soma += (x * rulegrande);
  8441  0626  083F               	movf	Fuzzy@x^(0+128),w
  8442  0627  1283               	bcf	3,5	;RP0=0, select bank0
  8443  0628  1303               	bcf	3,6	;RP1=0, select bank0
  8444  0629  00D5               	movwf	___ftmul@f2
  8445  062A  1683               	bsf	3,5	;RP0=1, select bank1
  8446  062B  1303               	bcf	3,6	;RP1=0, select bank1
  8447  062C  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8448  062D  1283               	bcf	3,5	;RP0=0, select bank0
  8449  062E  1303               	bcf	3,6	;RP1=0, select bank0
  8450  062F  00D6               	movwf	___ftmul@f2+1
  8451  0630  1683               	bsf	3,5	;RP0=1, select bank1
  8452  0631  1303               	bcf	3,6	;RP1=0, select bank1
  8453  0632  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8454  0633  1283               	bcf	3,5	;RP0=0, select bank0
  8455  0634  1303               	bcf	3,6	;RP1=0, select bank0
  8456  0635  00D7               	movwf	___ftmul@f2+2
  8457  0636  1683               	bsf	3,5	;RP0=1, select bank1
  8458  0637  1303               	bcf	3,6	;RP1=0, select bank1
  8459  0638  0842               	movf	_rulegrande^(0+128),w
  8460  0639  1283               	bcf	3,5	;RP0=0, select bank0
  8461  063A  1303               	bcf	3,6	;RP1=0, select bank0
  8462  063B  00D2               	movwf	___ftmul@f1
  8463  063C  1683               	bsf	3,5	;RP0=1, select bank1
  8464  063D  1303               	bcf	3,6	;RP1=0, select bank1
  8465  063E  0843               	movf	(_rulegrande+1)^(0+128),w
  8466  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8467  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8468  0641  00D3               	movwf	___ftmul@f1+1
  8469  0642  1683               	bsf	3,5	;RP0=1, select bank1
  8470  0643  1303               	bcf	3,6	;RP1=0, select bank1
  8471  0644  0844               	movf	(_rulegrande+2)^(0+128),w
  8472  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8473  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8474  0647  00D4               	movwf	___ftmul@f1+2
  8475  0648  120A  158A  2351  120A  118A  	fcall	___ftmul
  8476  064D  1283               	bcf	3,5	;RP0=0, select bank0
  8477  064E  1303               	bcf	3,6	;RP1=0, select bank0
  8478  064F  0852               	movf	?___ftmul,w
  8479  0650  00A3               	movwf	___ftadd@f1
  8480  0651  0853               	movf	?___ftmul+1,w
  8481  0652  00A4               	movwf	___ftadd@f1+1
  8482  0653  0854               	movf	?___ftmul+2,w
  8483  0654  00A5               	movwf	___ftadd@f1+2
  8484  0655  1683               	bsf	3,5	;RP0=1, select bank1
  8485  0656  1303               	bcf	3,6	;RP1=0, select bank1
  8486  0657  0834               	movf	Fuzzy@soma^(0+128),w
  8487  0658  1283               	bcf	3,5	;RP0=0, select bank0
  8488  0659  1303               	bcf	3,6	;RP1=0, select bank0
  8489  065A  00A6               	movwf	___ftadd@f2
  8490  065B  1683               	bsf	3,5	;RP0=1, select bank1
  8491  065C  1303               	bcf	3,6	;RP1=0, select bank1
  8492  065D  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8493  065E  1283               	bcf	3,5	;RP0=0, select bank0
  8494  065F  1303               	bcf	3,6	;RP1=0, select bank0
  8495  0660  00A7               	movwf	___ftadd@f2+1
  8496  0661  1683               	bsf	3,5	;RP0=1, select bank1
  8497  0662  1303               	bcf	3,6	;RP1=0, select bank1
  8498  0663  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8499  0664  1283               	bcf	3,5	;RP0=0, select bank0
  8500  0665  1303               	bcf	3,6	;RP1=0, select bank0
  8501  0666  00A8               	movwf	___ftadd@f2+2
  8502  0667  120A  158A  2424  120A  118A  	fcall	___ftadd
  8503  066C  1283               	bcf	3,5	;RP0=0, select bank0
  8504  066D  1303               	bcf	3,6	;RP1=0, select bank0
  8505  066E  0823               	movf	?___ftadd,w
  8506  066F  1683               	bsf	3,5	;RP0=1, select bank1
  8507  0670  1303               	bcf	3,6	;RP1=0, select bank1
  8508  0671  00B4               	movwf	Fuzzy@soma^(0+128)
  8509  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8510  0673  1303               	bcf	3,6	;RP1=0, select bank0
  8511  0674  0824               	movf	?___ftadd+1,w
  8512  0675  1683               	bsf	3,5	;RP0=1, select bank1
  8513  0676  1303               	bcf	3,6	;RP1=0, select bank1
  8514  0677  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8515  0678  1283               	bcf	3,5	;RP0=0, select bank0
  8516  0679  1303               	bcf	3,6	;RP1=0, select bank0
  8517  067A  0825               	movf	?___ftadd+2,w
  8518  067B  1683               	bsf	3,5	;RP0=1, select bank1
  8519  067C  1303               	bcf	3,6	;RP1=0, select bank1
  8520  067D  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8521  067E                     i1l184:	
  8522                           
  8523                           ;main.c: 281: }
  8524                           ;main.c: 282: x += 1;
  8525  067E  3000               	movlw	0
  8526  067F  1283               	bcf	3,5	;RP0=0, select bank0
  8527  0680  1303               	bcf	3,6	;RP1=0, select bank0
  8528  0681  00A3               	movwf	___ftadd@f1
  8529  0682  3080               	movlw	128
  8530  0683  00A4               	movwf	___ftadd@f1+1
  8531  0684  303F               	movlw	63
  8532  0685  00A5               	movwf	___ftadd@f1+2
  8533  0686  1683               	bsf	3,5	;RP0=1, select bank1
  8534  0687  1303               	bcf	3,6	;RP1=0, select bank1
  8535  0688  083F               	movf	Fuzzy@x^(0+128),w
  8536  0689  1283               	bcf	3,5	;RP0=0, select bank0
  8537  068A  1303               	bcf	3,6	;RP1=0, select bank0
  8538  068B  00A6               	movwf	___ftadd@f2
  8539  068C  1683               	bsf	3,5	;RP0=1, select bank1
  8540  068D  1303               	bcf	3,6	;RP1=0, select bank1
  8541  068E  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8542  068F  1283               	bcf	3,5	;RP0=0, select bank0
  8543  0690  1303               	bcf	3,6	;RP1=0, select bank0
  8544  0691  00A7               	movwf	___ftadd@f2+1
  8545  0692  1683               	bsf	3,5	;RP0=1, select bank1
  8546  0693  1303               	bcf	3,6	;RP1=0, select bank1
  8547  0694  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8548  0695  1283               	bcf	3,5	;RP0=0, select bank0
  8549  0696  1303               	bcf	3,6	;RP1=0, select bank0
  8550  0697  00A8               	movwf	___ftadd@f2+2
  8551  0698  120A  158A  2424  120A  118A  	fcall	___ftadd
  8552  069D  1283               	bcf	3,5	;RP0=0, select bank0
  8553  069E  1303               	bcf	3,6	;RP1=0, select bank0
  8554  069F  0823               	movf	?___ftadd,w
  8555  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  8556  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  8557  06A2  00BF               	movwf	Fuzzy@x^(0+128)
  8558  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  8559  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  8560  06A5  0824               	movf	?___ftadd+1,w
  8561  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  8562  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  8563  06A8  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8564  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  8565  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  8566  06AB  0825               	movf	?___ftadd+2,w
  8567  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  8568  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  8569  06AE  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8570  06AF  3001               	movlw	1
  8571  06B0  07BA               	addwf	Fuzzy@a_249^(0+128),f
  8572  06B1  1803               	skipnc
  8573  06B2  0ABB               	incf	(Fuzzy@a_249+1)^(0+128),f
  8574  06B3  3000               	movlw	0
  8575  06B4  07BB               	addwf	(Fuzzy@a_249+1)^(0+128),f
  8576  06B5  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8577  06B6  3A80               	xorlw	128
  8578  06B7  00FF               	movwf	127
  8579  06B8  3080               	movlw	128
  8580  06B9  027F               	subwf	127,w
  8581  06BA  1D03               	skipz
  8582  06BB  2EBE               	goto	u546_25
  8583  06BC  3010               	movlw	16
  8584  06BD  023A               	subwf	Fuzzy@a_249^(0+128),w
  8585  06BE                     u546_25:	
  8586  06BE  1C03               	skipc
  8587  06BF  2C82               	goto	i1l180
  8588  06C0                     i1l3969:	
  8589                           
  8590                           ;main.c: 283: }
  8591                           ;main.c: 286: float reajuste = 0;
  8592  06C0  3000               	movlw	0
  8593  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  8594  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  8595  06C3  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8596  06C4  3000               	movlw	0
  8597  06C5  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8598  06C6  3000               	movlw	0
  8599  06C7  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8600                           
  8601                           ;main.c: 287: if (total_area != 0)
  8602  06C8  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8603  06C9  0438               	iorwf	(Fuzzy@total_area+1)^(0+128),w
  8604  06CA  0437               	iorwf	Fuzzy@total_area^(0+128),w
  8605  06CB  1903               	skipnz
  8606  06CC  2F06               	goto	i1l3973
  8607                           
  8608                           ;main.c: 288: {
  8609                           ;main.c: 289: reajuste = soma / total_area;
  8610  06CD  0837               	movf	Fuzzy@total_area^(0+128),w
  8611  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  8612  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  8613  06D0  00B0               	movwf	___ftdiv@f2
  8614  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  8615  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  8616  06D3  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8617  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  8618  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  8619  06D6  00B1               	movwf	___ftdiv@f2+1
  8620  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  8621  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  8622  06D9  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8623  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  8624  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  8625  06DC  00B2               	movwf	___ftdiv@f2+2
  8626  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  8627  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  8628  06DF  0834               	movf	Fuzzy@soma^(0+128),w
  8629  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  8630  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  8631  06E2  00B3               	movwf	___ftdiv@f1
  8632  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  8633  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  8634  06E5  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8635  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  8636  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  8637  06E8  00B4               	movwf	___ftdiv@f1+1
  8638  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  8639  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  8640  06EB  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8641  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  8642  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  8643  06EE  00B5               	movwf	___ftdiv@f1+2
  8644  06EF  120A  158A  2299  120A  118A  	fcall	___ftdiv
  8645  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8646  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  8647  06F6  0830               	movf	?___ftdiv,w
  8648  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  8649  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  8650  06F9  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8651  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  8652  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  8653  06FC  0831               	movf	?___ftdiv+1,w
  8654  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  8655  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  8656  06FF  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8657  0700  1283               	bcf	3,5	;RP0=0, select bank0
  8658  0701  1303               	bcf	3,6	;RP1=0, select bank0
  8659  0702  0832               	movf	?___ftdiv+2,w
  8660  0703  1683               	bsf	3,5	;RP0=1, select bank1
  8661  0704  1303               	bcf	3,6	;RP1=0, select bank1
  8662  0705  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8663  0706                     i1l3973:	
  8664                           
  8665                           ;main.c: 290: }
  8666                           ;main.c: 293: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, deltaV)) * (setpointUI > 
      +                          rpm ? 1 : -1), 1023), 0);
  8667  0706  085A               	movf	(_setpointUI+1)^(0+128),w
  8668  0707  0258               	subwf	(_rpm+1)^(0+128),w
  8669  0708  1D03               	skipz
  8670  0709  2F0C               	goto	u548_25
  8671  070A  0859               	movf	_setpointUI^(0+128),w
  8672  070B  0257               	subwf	_rpm^(0+128),w
  8673  070C                     u548_25:	
  8674  070C  1C03               	skipc
  8675  070D  2F12               	goto	i1l3977
  8676  070E  30FF               	movlw	255
  8677  070F  00A8               	movwf	_Fuzzy$251^(0+128)
  8678  0710  30FF               	movlw	255
  8679  0711  2F15               	goto	L2
  8680  0712                     i1l3977:	
  8681  0712  3001               	movlw	1
  8682  0713  00A8               	movwf	_Fuzzy$251^(0+128)
  8683  0714  3000               	movlw	0
  8684  0715                     L2:	
  8685  0715  00A9               	movwf	(_Fuzzy$251^(0+128)+1)
  8686  0716  0829               	movf	(_Fuzzy$251+1)^(0+128),w
  8687  0717  1283               	bcf	3,5	;RP0=0, select bank0
  8688  0718  1303               	bcf	3,6	;RP1=0, select bank0
  8689  0719  01BD               	clrf	___wmul@multiplicand+1
  8690  071A  07BD               	addwf	___wmul@multiplicand+1,f
  8691  071B  1683               	bsf	3,5	;RP0=1, select bank1
  8692  071C  1303               	bcf	3,6	;RP1=0, select bank1
  8693  071D  0828               	movf	_Fuzzy$251^(0+128),w
  8694  071E  1283               	bcf	3,5	;RP0=0, select bank0
  8695  071F  1303               	bcf	3,6	;RP1=0, select bank0
  8696  0720  01BC               	clrf	___wmul@multiplicand
  8697  0721  07BC               	addwf	___wmul@multiplicand,f
  8698  0722  1683               	bsf	3,5	;RP0=1, select bank1
  8699  0723  1303               	bcf	3,6	;RP1=0, select bank1
  8700  0724  0854               	movf	(_deltaV+1)^(0+128),w
  8701  0725  01F9               	clrf	___lwtoft@c+1
  8702  0726  07F9               	addwf	___lwtoft@c+1,f
  8703  0727  0853               	movf	_deltaV^(0+128),w
  8704  0728  01F8               	clrf	___lwtoft@c
  8705  0729  07F8               	addwf	___lwtoft@c,f
  8706  072A  160A  118A  2314  120A  118A  	fcall	___lwtoft
  8707  072F  0878               	movf	?___lwtoft,w
  8708  0730  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0731  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0732  00A3               	movwf	minimo@b
  8711  0733  0879               	movf	?___lwtoft+1,w
  8712  0734  00A4               	movwf	minimo@b+1
  8713  0735  087A               	movf	?___lwtoft+2,w
  8714  0736  00A5               	movwf	minimo@b+2
  8715  0737  1683               	bsf	3,5	;RP0=1, select bank1
  8716  0738  1303               	bcf	3,6	;RP1=0, select bank1
  8717  0739  0825               	movf	Fuzzy@reajuste^(0+128),w
  8718  073A  1283               	bcf	3,5	;RP0=0, select bank0
  8719  073B  1303               	bcf	3,6	;RP1=0, select bank0
  8720  073C  00A0               	movwf	minimo@a
  8721  073D  1683               	bsf	3,5	;RP0=1, select bank1
  8722  073E  1303               	bcf	3,6	;RP1=0, select bank1
  8723  073F  0826               	movf	(Fuzzy@reajuste+1)^(0+128),w
  8724  0740  1283               	bcf	3,5	;RP0=0, select bank0
  8725  0741  1303               	bcf	3,6	;RP1=0, select bank0
  8726  0742  00A1               	movwf	minimo@a+1
  8727  0743  1683               	bsf	3,5	;RP0=1, select bank1
  8728  0744  1303               	bcf	3,6	;RP1=0, select bank1
  8729  0745  0827               	movf	(Fuzzy@reajuste+2)^(0+128),w
  8730  0746  1283               	bcf	3,5	;RP0=0, select bank0
  8731  0747  1303               	bcf	3,6	;RP1=0, select bank0
  8732  0748  00A2               	movwf	minimo@a+2
  8733  0749  120A  118A  27E2  120A  118A  	fcall	_minimo
  8734  074E  1283               	bcf	3,5	;RP0=0, select bank0
  8735  074F  1303               	bcf	3,6	;RP1=0, select bank0
  8736  0750  0820               	movf	?_minimo,w
  8737  0751  00AC               	movwf	___fttol@f1
  8738  0752  0821               	movf	?_minimo+1,w
  8739  0753  00AD               	movwf	___fttol@f1+1
  8740  0754  0822               	movf	?_minimo+2,w
  8741  0755  00AE               	movwf	___fttol@f1+2
  8742  0756  160A  118A  2772  120A  118A  	fcall	___fttol
  8743  075B  1283               	bcf	3,5	;RP0=0, select bank0
  8744  075C  1303               	bcf	3,6	;RP1=0, select bank0
  8745  075D  082D               	movf	?___fttol+1,w
  8746  075E  01BB               	clrf	___wmul@multiplier+1
  8747  075F  07BB               	addwf	___wmul@multiplier+1,f
  8748  0760  082C               	movf	?___fttol,w
  8749  0761  01BA               	clrf	___wmul@multiplier
  8750  0762  07BA               	addwf	___wmul@multiplier,f
  8751  0763  160A  118A  246E  120A  118A  	fcall	___wmul
  8752  0768  1683               	bsf	3,5	;RP0=1, select bank1
  8753  0769  1303               	bcf	3,6	;RP1=0, select bank1
  8754  076A  0861               	movf	_pwm^(0+128),w
  8755  076B  1283               	bcf	3,5	;RP0=0, select bank0
  8756  076C  1303               	bcf	3,6	;RP1=0, select bank0
  8757  076D  073A               	addwf	?___wmul,w
  8758  076E  1683               	bsf	3,5	;RP0=1, select bank1
  8759  076F  1303               	bcf	3,6	;RP1=0, select bank1
  8760  0770  00A3               	movwf	_Fuzzy$1693^(0+128)
  8761  0771  0862               	movf	(_pwm+1)^(0+128),w
  8762  0772  1803               	skipnc
  8763  0773  0A62               	incf	(_pwm+1)^(0+128),w
  8764  0774  1283               	bcf	3,5	;RP0=0, select bank0
  8765  0775  1303               	bcf	3,6	;RP1=0, select bank0
  8766  0776  073B               	addwf	?___wmul+1,w
  8767  0777  1683               	bsf	3,5	;RP0=1, select bank1
  8768  0778  1303               	bcf	3,6	;RP1=0, select bank1
  8769  0779  00A4               	movwf	(_Fuzzy$1693+1)^(0+128)
  8770  077A  3000               	movlw	0
  8771  077B  1283               	bcf	3,5	;RP0=0, select bank0
  8772  077C  1303               	bcf	3,6	;RP1=0, select bank0
  8773  077D  00A9               	movwf	maximo@b
  8774  077E  3000               	movlw	0
  8775  077F  00AA               	movwf	maximo@b+1
  8776  0780  3000               	movlw	0
  8777  0781  00AB               	movwf	maximo@b+2
  8778  0782  30C0               	movlw	192
  8779  0783  00A3               	movwf	minimo@b
  8780  0784  307F               	movlw	127
  8781  0785  00A4               	movwf	minimo@b+1
  8782  0786  3044               	movlw	68
  8783  0787  00A5               	movwf	minimo@b+2
  8784  0788  1683               	bsf	3,5	;RP0=1, select bank1
  8785  0789  1303               	bcf	3,6	;RP1=0, select bank1
  8786  078A  0824               	movf	(_Fuzzy$1693+1)^(0+128),w
  8787  078B  01F9               	clrf	___lwtoft@c+1
  8788  078C  07F9               	addwf	___lwtoft@c+1,f
  8789  078D  0823               	movf	_Fuzzy$1693^(0+128),w
  8790  078E  01F8               	clrf	___lwtoft@c
  8791  078F  07F8               	addwf	___lwtoft@c,f
  8792  0790  160A  118A  2314  120A  118A  	fcall	___lwtoft
  8793  0795  0878               	movf	?___lwtoft,w
  8794  0796  1283               	bcf	3,5	;RP0=0, select bank0
  8795  0797  1303               	bcf	3,6	;RP1=0, select bank0
  8796  0798  00A0               	movwf	minimo@a
  8797  0799  0879               	movf	?___lwtoft+1,w
  8798  079A  00A1               	movwf	minimo@a+1
  8799  079B  087A               	movf	?___lwtoft+2,w
  8800  079C  00A2               	movwf	minimo@a+2
  8801  079D  120A  118A  27E2  120A  118A  	fcall	_minimo
  8802  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  8803  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  8804  07A4  0820               	movf	?_minimo,w
  8805  07A5  00A6               	movwf	maximo@a
  8806  07A6  0821               	movf	?_minimo+1,w
  8807  07A7  00A7               	movwf	maximo@a+1
  8808  07A8  0822               	movf	?_minimo+2,w
  8809  07A9  00A8               	movwf	maximo@a+2
  8810  07AA  160A  118A  2389  120A  118A  	fcall	_maximo
  8811  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  8812  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  8813  07B1  0826               	movf	?_maximo,w
  8814  07B2  00AC               	movwf	___fttol@f1
  8815  07B3  0827               	movf	?_maximo+1,w
  8816  07B4  00AD               	movwf	___fttol@f1+1
  8817  07B5  0828               	movf	?_maximo+2,w
  8818  07B6  00AE               	movwf	___fttol@f1+2
  8819  07B7  160A  118A  2772  120A  118A  	fcall	___fttol
  8820  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  8821  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  8822  07BE  082D               	movf	?___fttol+1,w
  8823  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  8824  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  8825  07C1  01E2               	clrf	(_pwm+1)^(0+128)
  8826  07C2  07E2               	addwf	(_pwm+1)^(0+128),f
  8827  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  8828  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  8829  07C5  082C               	movf	?___fttol,w
  8830  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  8831  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  8832  07C8  01E1               	clrf	_pwm^(0+128)
  8833  07C9  07E1               	addwf	_pwm^(0+128),f
  8834                           
  8835                           ;main.c: 296: if(pwm > 0 && pwm < 1024)
  8836  07CA  0862               	movf	(_pwm+1)^(0+128),w
  8837  07CB  0461               	iorwf	_pwm^(0+128),w
  8838  07CC  1903               	skipnz
  8839  07CD  0008               	return
  8840  07CE  3004               	movlw	4
  8841  07CF  0262               	subwf	(_pwm+1)^(0+128),w
  8842  07D0  3000               	movlw	0
  8843  07D1  1903               	skipnz
  8844  07D2  0261               	subwf	_pwm^(0+128),w
  8845  07D3  1803               	skipnc
  8846  07D4  0008               	return
  8847                           
  8848                           ;main.c: 297: {
  8849                           ;main.c: 298: PWM_DutyCycle2(pwm);
  8850  07D5  0862               	movf	(_pwm+1)^(0+128),w
  8851  07D6  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8852  07D7  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8853  07D8  0861               	movf	_pwm^(0+128),w
  8854  07D9  01F0               	clrf	i1PWM_DutyCycle2@valor
  8855  07DA  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8856  07DB  160A  118A  236E   	fcall	i1_PWM_DutyCycle2
  8857  07DE  0008               	return
  8858  07DF                     L16:	
  8859  07DF                     __end_of_Fuzzy:	
  8860  07DF  120A  158A  2963   	ljmp	i1l3857


Data Sizes:
    Strings     73
    Constant    0
    Data        6
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     34      67
    BANK3            96     26      63
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _enviabuffer->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _maximo->_minimo
    ___wmul->___fttol
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1648
                                             23 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     223
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     2      0     162
                                              2 BANK3      2     2      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     324
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0   53800
                                             68 BANK0      7     7      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                        _enviabuffer
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _enviabuffer                                          3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               36    36      0   52498
                                             66 BANK0      2     2      0
                                              0 BANK1     34    34      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   19869
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7603
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _minimo                                               6     0      6    3552
                                              0 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _maximo                                               6     0      6    3296
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2952
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                             26 BANK0      6     2      4
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2493
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             12 BANK0     14    10      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
       _abs (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _abs (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _abs
     _maximo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
     _trapmf
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
   _enviabuffer
     _USART_WriteChar
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      3F       9       65.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4B      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 17:39:12 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00DD                           _y 01B3  
                         pc 0002                 ?_LCD_Cursor 01B5     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 003C          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00CF  
              ___ftadd@sign 002D                         l623 082F                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0E83                         _abs 12F4  
                       _rpm 00D7                         fsr0 0004                         _pwm 00E1  
                       _sum 01AD  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 01B7                 _rulepequeno 00C8  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
              ___ftdiv@sign 003F                        ?_abs 0070          LCD_WriteString@Str 01B8  
                      l3121 0840                        l3131 0860                        l3143 0895  
                      l3129 0850                        l3147 08A3                        l3139 0888  
                      l3331 0A6D                        l3273 13CA                        l3259 13B5  
                      STR_1 103F                        STR_2 102E                        STR_3 1049  
                      STR_4 1006                        u3815 0862                        u3905 141D  
                      u3825 0877                        u3835 0889                        u3865 143E  
                      u3795 0854                        u3875 1505                        _OERR 00C1  
                      u5907 164C                        u5917 165A                        u5837 0A66  
                      u5927 1668                        u5847 0A92                        u5937 1674  
                      u5857 1350                        u5947 13C1                        u5867 1616  
                      u5957 149F                        u5877 1626                        u5967 14AD  
                      u5887 1634                        u5977 14B9                        u5897 1640  
                      u5987 1339                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 09E3                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        btemp 007E  
          __end_of_ADC_Init 1314                ?_enviabuffer 0070                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 133F                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 12CF                       ??_ISR 0064  
              ___fttol@exp1 0039                       ??_abs 0072                ___fttol@lval 0035  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 1677             __end_of___aldiv 08AC  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 0D2D  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 0B51             __end_of___ftneg 12E9  
           __end_of___ftmul 0C24                       _T1CON 0010             __end_of___fttol 1800  
           __end_of___lwdiv 14FA                       i1l201 0FF5                       i1l130 0E7A  
                     i1l180 0482                       i1l244 12C8                       i1l184 067E  
                     i1l564 147A                       i1l735 15F1                       i1l729 15D8  
                     i1l758 0CCC                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 08AC  
             ___awtoft@sign 007D                       _lendo 006E               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 146E                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 01B5              ?_LCD_WriteData 0070                 ?_USART_Init 01C4  
       enviabuffer@checksum 0072       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 0A99                      ??_main 01CC               ___fttol@sign1 0034  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 14BC                  Fuzzy@a_244 00AC  
                Fuzzy@a_245 00AE                  Fuzzy@a_246 00B0                  Fuzzy@a_249 00BA  
                Fuzzy@delta 00B2                      ?_Fuzzy 0070                  _Fuzzy$1692 00A0  
                _Fuzzy$1693 00A3                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___awtoft 1408            __end_of___ftpack 160A  
                    i1l2111 15BD                      i1l2121 15E7                      i1l2113 15C2  
                    i1l2105 15AA                      i1l2109 15B1                      i1l2213 0AB1  
                    i1l2119 15DD                      i1l2241 0B2B                      i1l2233 0B0C  
                    i1l2219 0AC7                      i1l2413 13F1                      i1l2501 17E6  
                    i1l2253 156C                      i1l4101 0F89                      i1l2423 0B69  
                    i1l2503 17E9                      i1l2335 0802                      i1l4031 0EAD  
                    i1l4103 0F8C                      i1l2441 0BBE                      i1l2257 1593  
                    i1l4025 0E9B                      i1l2507 17F7                      i1l2355 1472  
                    i1l4115 0FA9                      u201_25 15E0                      i1l2453 0BE6  
                    i1l2445 0BCE                      i1l2429 0B7F                      i1l4061 0F11  
                    i1l4029 0EA5                      i1l4127 0FF0                      i1l4071 0F25  
                    i1l2457 0BF6                      i1l2473 178C                      i1l4129 0FF1  
                    i1l4081 0F46                      i1l4065 0F1F                      i1l4049 0EED  
                    i1l2491 17BE                      i1l2547 16E1                      i1l2539 16C7  
                    i1l4091 0F6C                      i1l2493 17CE                      i1l2717 136B  
                    i1l2709 135F                      i1l4087 0F58                      i1l4097 0F7F  
                    i1l2499 17DB                      i1l3805 0D13                      i1l3821 0DA6  
                    i1l3745 0C4D                      i1l3833 0E5D                      i1l3913 0323  
                    i1l3755 0C63                      i1l3827 0DD8                      i1l3931 03C3  
                    i1l2875 14E8                      i1l2867 14C4                      u204_25 15F8  
                    i1l3773 0C92                      i1l3749 0C54                      i1l3941 0461  
                    i1l3909 02C7                      i1l3861 09BF                      i1l2869 14D2  
                    i1l3791 0CDE                      i1l3775 0C9E                      i1l3767 0C7D  
                    i1l3935 041F                      i1l3919 0365                      i1l2879 14F3  
                    i1l3785 0CBC                      i1l3777 0CA3                      i1l3953 0524  
                    i1l3857 0963                      i1l3795 0CF0                      i1l3787 0CC8  
                    i1l3779 0CA7                      i1l3883 016E                      i1l3867 0075  
                    i1l3973 0706                      i1l3893 020C                      i1l3959 05D1  
                    i1l3887 01CA                      i1l3977 0712                      i1l3969 06C0  
                    u240_21 155F                      u240_22 1560                      u240_23 1565  
                    u240_24 1566                      u233_25 0AD9                      u242_21 1586  
                    u242_22 1587                      u242_23 158C                      u242_24 158D  
                    u234_25 0AEB                      u235_25 0B0D                      u236_25 0B1E  
                    u340_25 14D3                      u237_25 0B2C                      u341_25 14DF  
                    u502_25 0CA8                      u342_25 14E9                      u520_25 0961  
                    u505_25 0CBD            __end_of___lwtoft 1328                      u274_25 0B8B  
                    u290_25 17BF                      u258_25 147B                      u522_25 0073  
                    u338_25 14C7                      u283_25 0BF7                      u275_25 0B9D  
                    u259_25 1482                      u531_25 0225                      u284_25 0BFF  
                    u532_25 02C5                      u197_25 15B6                      u293_25 17DD  
                    u541_25 048F                      u525_25 008E         __size_of_TIMER0_Set 0008  
                    u278_25 0BCF                      u542_25 052F                      u534_25 0363  
                    u526_25 016C                      u199_25 15D1                      u279_25 0BD7  
                    u287_25 1793                      u543_25 053C                      u296_25 137F  
                    u544_25 05DC                      u536_25 03C1                      u528_25 020A  
                    u545_25 05E9                      u546_25 06BE                      u538_25 045F  
                    u539_25 0480                      u548_25 070C                      u496_25 0C7E  
                    u499_25 0C93                      _SSPADD 0093                      _SSPBUF 0013  
                    Fuzzy@a 00AA                      Fuzzy@x 00BF            LCD_WriteCmd@Byte 01B6  
                    ___ftge 1545                   ??___aldiv 01BD                      ___wmul 146E  
                 ??___ftadd 0029              _PWM_DutyCycle1 1408              _PWM_DutyCycle2 1429  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _deltaV 00D3                   ??___ftmul 0058                   ??___fttol 0030  
                 ??___lwdiv 0074                      _antigo 01A4                      _buffer 0190  
                    _fitemp 01AA                      _maximo 1389                      _minimo 07E2  
     USART_ReceiveChar@byte 0074                      _trapmf 0D2D                      _pulsos 00D5  
                    _status 00DB       ___ftmul@f3_as_product 005D                   ?_ADC_Init 0070  
                    saved_w 007E         __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070  
   __end_of__initialization 004F                   ?_LCD_Init 0070                  ___ftadd@f1 0023  
                ___ftadd@f2 0026             ??_LCD_WriteData 01B5                  ___ftge@ff1 0070  
                ___ftge@ff2 0073                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
    __end_of_PWM_DutyCycle1 1429      __end_of_PWM_DutyCycle2 144A                  ___ftmul@f1 0052  
                ___ftmul@f2 0055        __size_of_enviabuffer 0075                  ___fttol@f1 002C  
            __pcstackCOMMON 0070               __end_of_Fuzzy 07DF                __pidataBANK0 12BB  
              __pidataBANK1 12BD               LCD_Cursor@Col 01B5               LCD_Cursor@Row 01B7  
              ??_LCD_Cursor 01B6             _LCD_WriteString 13C7                  ___lwtoft@c 0078  
                 ?_PWM_Init 0070              _OPTION_REGbits 0081                  ??_ADC_Init 01B5  
      __end_of_LCD_WriteCmd 133F                     ??_Fuzzy 0062   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 006B                  __pbssBANK1 00C2  
                __pbssBANK3 0190          __end_of_LCD_Cursor 13C7                  ??_LCD_Init 01B7  
                   ISR@byte 006A             ?_PWM_DutyCycle1 01B5             ?_PWM_DutyCycle2 01B5  
                __pmaintext 09E3                     ?___ftge 0070                     ?___wmul 003A  
                __pintentry 0004                ??_TIMER0_Set 01B5                     _CCP1CON 0017  
                   _CCP2CON 001D                     ?_maximo 0026                     ?_minimo 0020  
                 ?___awtoft 0078                   ?___ftpack 0070               Fuzzy@reajuste 00A5  
                   ?_trapmf 0040                  ??_PWM_Init 01B5                   ?___lwtoft 0078  
      __size_of_TIMER0_Init 000B                     _SSPCON2 0091                  __stringtab 1000  
        __end_of_TIMER0_Set 12D7     __end_of_LCD_WriteString 13E7                   _ADCResult 00CB  
              ??_USART_Init 01C8           LCD_WriteData@Byte 01B6                     ___aldiv 081D  
           __size_of___ftge 005D                     ___ftadd 0C24                     ___ftdiv 0A99  
                   ___ftneg 12DF             __size_of___wmul 0025                     ___ftmul 0B51  
                   ___fttol 1772                     ___lwdiv 14BC                  ??___awtoft 007B  
                ??___ftpack 0075             __size_of_maximo 001E             __size_of_minimo 001E  
                   __ptext1 14FA                     __ptext2 081D                     __ptext3 12CF  
                   __ptext4 12E9                     __ptext5 144A                     __ptext6 1429  
                   __ptext7 1408                     __ptext8 13C7                     __ptext9 133F  
                _pas_cooler 00DF                  ??___lwtoft 007B             __size_of_trapmf 0156  
              __size_of_ISR 017D                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E            ___aldiv@dividend 01B9                   _LCD_Clear 1493  
        __end_of_USART_Init 1545                     clrloop0 12D8        end_of_initialization 004F  
                   maximo@a 0026                     maximo@b 0029                     minimo@a 0020  
                   minimo@b 0023                   _RCSTAbits 0018            ___aldiv@quotient 01C0  
                   psplit$0 270037                     psplit$1 370038                     psplit$2 380039  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040             Fuzzy@total_area 00B7  
      __end_ofi1_TIMER0_Set 12C7       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 00D9                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 136E           __size_of_ADC_Init 0012                  _rulegrande 00C2  
       PWM_DutyCycle1@valor 01B5                  _total_area 01B0         PWM_DutyCycle2@valor 01B5  
               _CCP1CONbits 0017                 ___ftdiv@exp 003E                 _CCP2CONbits 001D  
                 _TXSTAbits 0098            ?_LCD_WriteString 0070           __size_of_LCD_Init 006D  
              _LCD_WriteCmd 1328                 ___ftmul@exp 005C              __end_of___ftge 15A2  
            __end_of___wmul 1493              __end_of_maximo 13A7              __end_of_minimo 0800  
            __end_of_trapmf 0E83    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 1000                _indicebuffer 006B  
               __end_of_abs 1302            ??_PWM_DutyCycle1 01B7            ??_PWM_DutyCycle2 01B7  
                 Fuzzy@soma 00B4                   Fuzzy@rule 00BC                   _Fuzzy$251 00A8  
             ??_enviabuffer 0071       __end_of_LCD_WriteData 1356           _USART_ReceiveChar 1356  
                  ??___ftge 0076          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK0 006D                 __pdataBANK1 00DF                    ??_maximo 007E  
                  ??_minimo 007E                    ??_trapmf 007E         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01B5                 ??_LCD_Clear 01B7         __end_of__stringdata 104F  
 __end_of_USART_ReceiveChar 136E       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01B5                    ?___aldiv 01B5         __end_of_enviabuffer 16EC  
                  ?___ftadd 0023                    ?___ftdiv 0030                    ?___ftneg 0020  
                  ?___ftmul 0052                    ?___fttol 002C                    ?___lwdiv 0070  
                 __pstrings 1000                   _ativa_fan 01A7               ??_TIMER0_Init 01B5  
        USART_Init@BaudRate 01C4                    _ADC_Init 1302              __size_of_Fuzzy FF33  
          ___lwdiv@quotient 0075                  pnum$text22 0027           ??_USART_WriteChar 0070  
              i1_TIMER0_Set 12C1             ___aldiv@divisor 01B5           interrupt_function 0004  
           ___aldiv@counter 01BE                    _LCD_Init 160A              ___wmul@product 003E  
                 clear_ram0 12D7                    _PIE1bits 008C                    _PIE2bits 008D  
                  _PIR1bits 000C                    _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 1389  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 144A           ___wmul@multiplier 003A  
                 _rulemedio 00C5            enviabuffer@index 0073         __end_of_TIMER0_Init 12F4  
__size_of_USART_ReceiveChar 0018                  _EECON1bits 018C                 _enviabuffer 1677  
          __size_of___aldiv 008F            __size_of___ftadd 0109            __size_of___ftdiv 00B8  
          __size_of___ftneg 000A            __size_of___ftmul 00D3            __size_of___fttol 008E  
          __size_of___lwdiv 003E                    ___awtoft 13E7                    ___ftpack 15A2  
        __end_of__stringtab 1006                    ___lwtoft 1314              _bufferRecebido 019D  
               _cruzeiroSet 006D                 _cruzeiroVel 00D1             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 0801                    __ptext10 160A  
                  __ptext11 13A7                    __ptext20 0801                    __ptext12 1493  
                  __ptext21 12C7                    __ptext13 1328                    __ptext30 1545  
                  __ptext22 08AC                    __ptext14 1302                    __ptext31 12F4  
                  __ptext23 136E                    __ptext15 0E83                    __ptext32 146E  
                  __ptext24 0D2D                    __ptext16 12C1                    __ptext33 1314  
                  __ptext25 12DF                    __ptext17 1677                    __ptext34 1772  
                  __ptext26 0A99                    __ptext18 14BC                    __ptext35 0B51  
                  __ptext27 0C24                    __ptext19 1356                    __ptext36 13E7  
                  __ptext28 07E2                    __ptext37 15A2                    __ptext29 1389  
                  _antigoUI 00CD          ?_USART_WriteString 0070               __size_of_main 00B6  
       USART_WriteChar@byte 0070         ??_USART_WriteString 0071                  _LCD_Cursor 13A7  
  __size_of_LCD_WriteString 0020          pnum$text22_split_1 0037          pnum$text22_split_2 0038  
        pnum$text22_split_3 0039                 _TIMER0_Init 12E9                  _INTCONbits 000B  
 __end_of_USART_WriteString 081D                    intlevel1 0000                   stringcode 1000  
      USART_WriteString@str 0072                  _TIMER0_Set 12CF                    trapmf@ua 004F  
           _USART_WriteChar 12C7                    stringdir 1000                    stringtab 1000  
              ___aldiv@sign 01BF      __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 14FA  
