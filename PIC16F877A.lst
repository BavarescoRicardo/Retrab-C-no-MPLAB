

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 13:42:54 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  102A                     __pidataBANK1:	
   604                           
   605                           ;initializer for _tf
   606  102A  3400               	retlw	0
   607  102B  34A0               	retlw	160
   608  102C  3441               	retlw	65
   609                           
   610                           ;initializer for _pas_cooler
   611  102D  3407               	retlw	7
   612  102E  3400               	retlw	0
   613                           
   614                           	psect	idataBANK3
   615  1027                     __pidataBANK3:	
   616                           
   617                           ;initializer for _setpoint
   618  1027  3400               	retlw	0
   619  1028  34A0               	retlw	160
   620  1029  3441               	retlw	65
   621                           
   622                           	psect	strings
   623  0702                     __pstrings:	
   624  0702                     stringtab:	
   625  0702                     __stringtab:	
   626                           
   627                           ;	String table - string pointers are 1 byte each
   628  0702  1BFF               	btfsc	btemp+1,7
   629  0703  2F0C               	ljmp	stringcode
   630  0704  1383               	bcf	3,7
   631  0705  187F               	btfsc	btemp+1,0
   632  0706  1783               	bsf	3,7
   633  0707  0800               	movf	0,w
   634  0708  0A84               	incf	4,f
   635  0709  1903               	skipnz
   636  070A  0AFF               	incf	btemp+1,f
   637  070B  0008               	return
   638  070C                     stringcode:	
   639  070C                     stringdir:	
   640  070C  3007               	movlw	high stringdir
   641  070D  008A               	movwf	10
   642  070E  0804               	movf	4,w
   643  070F  0A84               	incf	4,f
   644  0710  0782               	addwf	2,f
   645  0711                     __stringbase:	
   646  0711  3400               	retlw	0
   647  0712                     __end_of__stringtab:	
   648  0712                     _dpowers:	
   649  0712  3401               	retlw	1
   650  0713  3400               	retlw	0
   651  0714  340A               	retlw	10
   652  0715  3400               	retlw	0
   653  0716  3464               	retlw	100
   654  0717  3400               	retlw	0
   655  0718  34E8               	retlw	232
   656  0719  3403               	retlw	3
   657  071A  3410               	retlw	16
   658  071B  3427               	retlw	39
   659  071C                     __end_of_dpowers:	
   660  000E                     _TMR1	set	14
   661  001F                     _ADCON0bits	set	31
   662  001E                     _ADRESH	set	30
   663  0017                     _CCP1CON	set	23
   664  0017                     _CCP1CONbits	set	23
   665  001D                     _CCP2CON	set	29
   666  001D                     _CCP2CONbits	set	29
   667  0015                     _CCPR1L	set	21
   668  001B                     _CCPR2L	set	27
   669  000B                     _INTCONbits	set	11
   670  000C                     _PIR1bits	set	12
   671  000D                     _PIR2bits	set	13
   672  0005                     _PORTA	set	5
   673  0006                     _PORTB	set	6
   674  0006                     _PORTBbits	set	6
   675  0007                     _PORTC	set	7
   676  0008                     _PORTD	set	8
   677  0009                     _PORTE	set	9
   678  0009                     _PORTEbits	set	9
   679  001A                     _RCREG	set	26
   680  0018                     _RCSTAbits	set	24
   681  0013                     _SSPBUF	set	19
   682  0014                     _SSPCONbits	set	20
   683  0010                     _T1CON	set	16
   684  0010                     _T1CONbits	set	16
   685  0012                     _T2CONbits	set	18
   686  0001                     _TMR0	set	1
   687  000F                     _TMR1H	set	15
   688  000E                     _TMR1L	set	14
   689  0019                     _TXREG	set	25
   690  00C1                     _OERR	set	193
   691  009F                     _ADCON1bits	set	159
   692  009E                     _ADRESL	set	158
   693  0081                     _OPTION_REGbits	set	129
   694  008C                     _PIE1bits	set	140
   695  008D                     _PIE2bits	set	141
   696  0092                     _PR2	set	146
   697  0099                     _SPBRG	set	153
   698  0093                     _SSPADD	set	147
   699  0091                     _SSPCON2	set	145
   700  0091                     _SSPCON2bits	set	145
   701  0094                     _SSPSTATbits	set	148
   702  0085                     _TRISA	set	133
   703  0086                     _TRISB	set	134
   704  0087                     _TRISC	set	135
   705  0088                     _TRISD	set	136
   706  0089                     _TRISE	set	137
   707  0098                     _TXSTAbits	set	152
   708  010D                     _EEADR	set	269
   709  010C                     _EEDATA	set	268
   710  018C                     _EECON1bits	set	396
   711  018D                     _EECON2	set	397
   712  071C                     __stringdata:	
   713  071C                     STR_19:	
   714  071C  340A               	retlw	10
   715  071D  340D               	retlw	13
   716  071E  3420               	retlw	32	;' '
   717  071F  342D               	retlw	45	;'-'
   718  0720  342D               	retlw	45	;'-'
   719  0721  342D               	retlw	45	;'-'
   720  0722  342D               	retlw	45	;'-'
   721  0723  342D               	retlw	45	;'-'
   722  0724  342D               	retlw	45	;'-'
   723  0725  342D               	retlw	45	;'-'
   724  0726  3420               	retlw	32	;' '
   725  0727  3445               	retlw	69	;'E'
   726  0728  3453               	retlw	83	;'S'
   727  0729  3454               	retlw	84	;'T'
   728  072A  344F               	retlw	79	;'O'
   729  072B  3455               	retlw	85	;'U'
   730  072C  3452               	retlw	82	;'R'
   731  072D  344F               	retlw	79	;'O'
   732  072E  3420               	retlw	32	;' '
   733  072F  3444               	retlw	68	;'D'
   734  0730  3445               	retlw	69	;'E'
   735  0731  3420               	retlw	32	;' '
   736  0732  3450               	retlw	80	;'P'
   737  0733  3449               	retlw	73	;'I'
   738  0734  344C               	retlw	76	;'L'
   739  0735  3448               	retlw	72	;'H'
   740  0736  3441               	retlw	65	;'A'
   741  0737  3420               	retlw	32	;' '
   742  0738  342D               	retlw	45	;'-'
   743  0739  342D               	retlw	45	;'-'
   744  073A  342D               	retlw	45	;'-'
   745  073B  342D               	retlw	45	;'-'
   746  073C  342D               	retlw	45	;'-'
   747  073D  342D               	retlw	45	;'-'
   748  073E  342D               	retlw	45	;'-'
   749  073F  3420               	retlw	32	;' '
   750  0740  340A               	retlw	10
   751  0741  340D               	retlw	13
   752  0742  3420               	retlw	32	;' '
   753  0743  3400               	retlw	0
   754  0744                     STR_11:	
   755  0744  3449               	retlw	73	;'I'
   756  0745  346E               	retlw	110	;'n'
   757  0746  3469               	retlw	105	;'i'
   758  0747  3463               	retlw	99	;'c'
   759  0748  3469               	retlw	105	;'i'
   760  0749  3461               	retlw	97	;'a'
   761  074A  346C               	retlw	108	;'l'
   762  074B  3469               	retlw	105	;'i'
   763  074C  347A               	retlw	122	;'z'
   764  074D  3461               	retlw	97	;'a'
   765  074E  346E               	retlw	110	;'n'
   766  074F  3464               	retlw	100	;'d'
   767  0750  346F               	retlw	111	;'o'
   768  0751  3420               	retlw	32	;' '
   769  0752  346F               	retlw	111	;'o'
   770  0753  3420               	retlw	32	;' '
   771  0754  3450               	retlw	80	;'P'
   772  0755  3449               	retlw	73	;'I'
   773  0756  3443               	retlw	67	;'C'
   774  0757  3431               	retlw	49	;'1'
   775  0758  3436               	retlw	54	;'6'
   776  0759  3446               	retlw	70	;'F'
   777  075A  3438               	retlw	56	;'8'
   778  075B  3437               	retlw	55	;'7'
   779  075C  3437               	retlw	55	;'7'
   780  075D  3441               	retlw	65	;'A'
   781  075E  340A               	retlw	10
   782  075F  340D               	retlw	13
   783  0760  3400               	retlw	0
   784  0761                     STR_12:	
   785  0761  3455               	retlw	85	;'U'
   786  0762  3453               	retlw	83	;'S'
   787  0763  3441               	retlw	65	;'A'
   788  0764  3452               	retlw	82	;'R'
   789  0765  3454               	retlw	84	;'T'
   790  0766  343A               	retlw	58	;':'
   791  0767  3420               	retlw	32	;' '
   792  0768  3431               	retlw	49	;'1'
   793  0769  3431               	retlw	49	;'1'
   794  076A  3435               	retlw	53	;'5'
   795  076B  342E               	retlw	46	;'.'
   796  076C  3432               	retlw	50	;'2'
   797  076D  3430               	retlw	48	;'0'
   798  076E  3430               	retlw	48	;'0'
   799  076F  3462               	retlw	98	;'b'
   800  0770  3470               	retlw	112	;'p'
   801  0771  3473               	retlw	115	;'s'
   802  0772  340A               	retlw	10
   803  0773  340D               	retlw	13
   804  0774  3400               	retlw	0
   805  0775                     STR_13:	
   806  0775  3449               	retlw	73	;'I'
   807  0776  346E               	retlw	110	;'n'
   808  0777  3469               	retlw	105	;'i'
   809  0778  3463               	retlw	99	;'c'
   810  0779  3469               	retlw	105	;'i'
   811  077A  3461               	retlw	97	;'a'
   812  077B  346C               	retlw	108	;'l'
   813  077C  3469               	retlw	105	;'i'
   814  077D  347A               	retlw	122	;'z'
   815  077E  3461               	retlw	97	;'a'
   816  077F  346E               	retlw	110	;'n'
   817  0780  3464               	retlw	100	;'d'
   818  0781  346F               	retlw	111	;'o'
   819  0782  342E               	retlw	46	;'.'
   820  0783  342E               	retlw	46	;'.'
   821  0784  342E               	retlw	46	;'.'
   822  0785  3400               	retlw	0
   823  0786                     STR_10:	
   824  0786  340A               	retlw	10
   825  0787  340D               	retlw	13
   826  0788  3470               	retlw	112	;'p'
   827  0789  3477               	retlw	119	;'w'
   828  078A  346D               	retlw	109	;'m'
   829  078B  3420               	retlw	32	;' '
   830  078C  343D               	retlw	61	;'='
   831  078D  3420               	retlw	32	;' '
   832  078E  3431               	retlw	49	;'1'
   833  078F  3430               	retlw	48	;'0'
   834  0790  3432               	retlw	50	;'2'
   835  0791  3433               	retlw	51	;'3'
   836  0792  340A               	retlw	10
   837  0793  340D               	retlw	13
   838  0794  3400               	retlw	0
   839  0795                     STR_8:	
   840  0795  340A               	retlw	10
   841  0796  340D               	retlw	13
   842  0797  3470               	retlw	112	;'p'
   843  0798  3477               	retlw	119	;'w'
   844  0799  346D               	retlw	109	;'m'
   845  079A  3420               	retlw	32	;' '
   846  079B  343D               	retlw	61	;'='
   847  079C  3420               	retlw	32	;' '
   848  079D  3438               	retlw	56	;'8'
   849  079E  3439               	retlw	57	;'9'
   850  079F  3436               	retlw	54	;'6'
   851  07A0  340A               	retlw	10
   852  07A1  340D               	retlw	13
   853  07A2  3400               	retlw	0
   854  07A3                     STR_7:	
   855  07A3  340A               	retlw	10
   856  07A4  340D               	retlw	13
   857  07A5  3470               	retlw	112	;'p'
   858  07A6  3477               	retlw	119	;'w'
   859  07A7  346D               	retlw	109	;'m'
   860  07A8  3420               	retlw	32	;' '
   861  07A9  343D               	retlw	61	;'='
   862  07AA  3420               	retlw	32	;' '
   863  07AB  3437               	retlw	55	;'7'
   864  07AC  3436               	retlw	54	;'6'
   865  07AD  3438               	retlw	56	;'8'
   866  07AE  340A               	retlw	10
   867  07AF  340D               	retlw	13
   868  07B0  3400               	retlw	0
   869  07B1                     STR_1:	
   870  07B1  340A               	retlw	10
   871  07B2  340D               	retlw	13
   872  07B3  3464               	retlw	100	;'d'
   873  07B4  3465               	retlw	101	;'e'
   874  07B5  3473               	retlw	115	;'s'
   875  07B6  346C               	retlw	108	;'l'
   876  07B7  3469               	retlw	105	;'i'
   877  07B8  3467               	retlw	103	;'g'
   878  07B9  3461               	retlw	97	;'a'
   879  07BA  3464               	retlw	100	;'d'
   880  07BB  346F               	retlw	111	;'o'
   881  07BC  340A               	retlw	10
   882  07BD  340D               	retlw	13
   883  07BE  3400               	retlw	0
   884  07BF                     STR_2:	
   885  07BF  340A               	retlw	10
   886  07C0  340D               	retlw	13
   887  07C1  3470               	retlw	112	;'p'
   888  07C2  3477               	retlw	119	;'w'
   889  07C3  346D               	retlw	109	;'m'
   890  07C4  3420               	retlw	32	;' '
   891  07C5  343D               	retlw	61	;'='
   892  07C6  3420               	retlw	32	;' '
   893  07C7  340A               	retlw	10
   894  07C8  340D               	retlw	13
   895  07C9  3400               	retlw	0
   896  07CA                     STR_17:	
   897  07CA  3452               	retlw	82	;'R'
   898  07CB  3450               	retlw	80	;'P'
   899  07CC  344D               	retlw	77	;'M'
   900  07CD  343A               	retlw	58	;':'
   901  07CE  3420               	retlw	32	;' '
   902  07CF  3400               	retlw	0
   903  07D0                     STR_18:	
   904  07D0  3450               	retlw	80	;'P'
   905  07D1  3457               	retlw	87	;'W'
   906  07D2  344D               	retlw	77	;'M'
   907  07D3  343A               	retlw	58	;':'
   908  07D4  3420               	retlw	32	;' '
   909  07D5  3400               	retlw	0
   910  07D6                     STR_14:	
   911  07D6  3425               	retlw	37	;'%'
   912  07D7  3430               	retlw	48	;'0'
   913  07D8  3434               	retlw	52	;'4'
   914  07D9  3464               	retlw	100	;'d'
   915  07DA  3400               	retlw	0
   916  07DB                     __end_of__stringdata:	
   917                           
   918                           ; #config settings
   919  0000                     
   920                           	psect	cinit
   921  0019                     start_initialization:	
   922  0019                     __initialization:	
   923                           
   924                           ; Clear objects allocated to BANK1
   925  0019  1383               	bcf	3,7	;select IRP bank0
   926  001A  30A0               	movlw	low __pbssBANK1
   927  001B  0084               	movwf	4
   928  001C  30C5               	movlw	low (__pbssBANK1+37)
   929  001D  160A  118A  204D  120A  118A  	fcall	clear_ram0
   930                           
   931                           ; Clear objects allocated to BANK3
   932  0022  1783               	bsf	3,7	;select IRP bank2
   933  0023  3090               	movlw	low __pbssBANK3
   934  0024  0084               	movwf	4
   935  0025  30B4               	movlw	low (__pbssBANK3+36)
   936  0026  160A  118A  204D  120A  118A  	fcall	clear_ram0
   937                           
   938                           ; Initialize objects allocated to BANK3
   939  002B  1683               	bsf	3,5	;RP0=1, select bank3
   940  002C  1703               	bsf	3,6	;RP1=1, select bank3
   941  002D  160A  118A  2027  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   942  0032  00BF               	movwf	__pdataBANK3& (0+127)
   943  0033  160A  118A  2028  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   944  0038  00C0               	movwf	(__pdataBANK3+1)& (0+127)
   945  0039  160A  118A  2029  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   946  003E  00C1               	movwf	(__pdataBANK3+2)& (0+127)
   947                           
   948                           ; Initialize objects allocated to BANK1
   949  003F  1683               	bsf	3,5	;RP0=1, select bank1
   950  0040  1303               	bcf	3,6	;RP1=0, select bank1
   951  0041  160A  118A  202A  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   952  0046  00E3               	movwf	__pdataBANK1& (0+127)
   953  0047  160A  118A  202B  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   954  004C  00E4               	movwf	(__pdataBANK1+1)& (0+127)
   955  004D  160A  118A  202C  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   956  0052  00E5               	movwf	(__pdataBANK1+2)& (0+127)
   957  0053  160A  118A  202D  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   958  0058  00E6               	movwf	(__pdataBANK1+3)& (0+127)
   959  0059  160A  118A  202E   	fcall	__pidataBANK1+4	;fetch initializer
   960  005C  00E7               	movwf	(__pdataBANK1+4)& (0+127)
   961  005D                     end_of_initialization:	
   962                           ;End of C runtime variable initialization code
   963                           
   964  005D                     __end_of__initialization:	
   965  005D  0183               	clrf	3
   966  005E  120A  158A  297A   	ljmp	_main	;jump to C main() function
   967                           
   968                           	psect	bssBANK1
   969  00A0                     __pbssBANK1:	
   970  00A0                     _fitemp:	
   971  00A0                     	ds	3
   972  00A3                     _fop_rule1:	
   973  00A3                     	ds	3
   974  00A6                     _fop_rule2:	
   975  00A6                     	ds	3
   976  00A9                     _fop_rule3:	
   977  00A9                     	ds	3
   978  00AC                     _sum:	
   979  00AC                     	ds	3
   980  00AF                     _temp:	
   981  00AF                     	ds	3
   982  00B2                     _total_area:	
   983  00B2                     	ds	3
   984  00B5                     _x:	
   985  00B5                     	ds	3
   986  00B8                     _y:	
   987  00B8                     	ds	3
   988  00BB                     _contagens_tm0:	
   989  00BB                     	ds	2
   990  00BD                     _deltaV:	
   991  00BD                     	ds	2
   992  00BF                     _pulsos:	
   993  00BF                     	ds	2
   994  00C1                     _pwm:	
   995  00C1                     	ds	2
   996  00C3                     _rpm:	
   997  00C3                     	ds	2
   998                           
   999                           	psect	dataBANK1
  1000  00E3                     __pdataBANK1:	
  1001  00E3                     _tf:	
  1002  00E3                     	ds	3
  1003  00E6                     _pas_cooler:	
  1004  00E6                     	ds	2
  1005                           
  1006                           	psect	bssBANK3
  1007  0190                     __pbssBANK3:	
  1008  0190                     _ativa_fan:	
  1009  0190                     	ds	3
  1010  0193                     _derro:	
  1011  0193                     	ds	3
  1012  0196                     _ADCResult:	
  1013  0196                     	ds	2
  1014  0198                     _contador_rb6:	
  1015  0198                     	ds	2
  1016  019A                     _status:	
  1017  019A                     	ds	2
  1018  019C                     _temp_lida:	
  1019  019C                     	ds	2
  1020  019E                     _tempo_rb6:	
  1021  019E                     	ds	2
  1022  01A0                     _display_pwm:	
  1023  01A0                     	ds	10
  1024  01AA                     _display_rpm:	
  1025  01AA                     	ds	10
  1026                           
  1027                           	psect	dataBANK3
  1028  01BF                     __pdataBANK3:	
  1029  01BF                     _setpoint:	
  1030  01BF                     	ds	3
  1031                           
  1032                           	psect	clrtext
  1033  104D                     clear_ram0:	
  1034                           ;	Called with FSR containing the base address, and
  1035                           ;	W with the last address+1
  1036                           
  1037  104D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1038  104E                     clrloop0:	
  1039  104E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1040  104F  0A84               	incf	4,f	;increment pointer
  1041  1050  0604               	xorwf	4,w	;XOR with final address
  1042  1051  1903               	btfsc	3,2	;have we reached the end yet?
  1043  1052  3400               	retlw	0	;all done for this memory range, return
  1044  1053  0604               	xorwf	4,w	;XOR again to restore value
  1045  1054  284E               	goto	clrloop0	;do the next byte
  1046                           
  1047                           	psect	cstackBANK3
  1048  01B4                     __pcstackBANK3:	
  1049  01B4                     sprintf@ap:	
  1050                           
  1051                           ; 1 bytes @ 0x0
  1052  01B4                     	ds	1
  1053  01B5                     sprintf@prec:	
  1054                           
  1055                           ; 1 bytes @ 0x1
  1056  01B5                     	ds	1
  1057  01B6                     sprintf@_val:	
  1058                           
  1059                           ; 4 bytes @ 0x2
  1060  01B6                     	ds	4
  1061  01BA                     sprintf@flag:	
  1062                           
  1063                           ; 1 bytes @ 0x6
  1064  01BA                     	ds	1
  1065  01BB                     sprintf@width:	
  1066                           
  1067                           ; 2 bytes @ 0x7
  1068  01BB                     	ds	2
  1069  01BD                     sprintf@sp:	
  1070                           
  1071                           ; 1 bytes @ 0x9
  1072  01BD                     	ds	1
  1073  01BE                     sprintf@c:	
  1074                           
  1075                           ; 1 bytes @ 0xA
  1076  01BE                     	ds	1
  1077                           
  1078                           	psect	cstackBANK1
  1079  00C5                     __pcstackBANK1:	
  1080  00C5                     ??_ISR:	
  1081                           
  1082                           ; 0 bytes @ 0x0
  1083  00C5                     	ds	4
  1084  00C9                     ?_PWM_DutyCycle2:	
  1085  00C9                     ??_TIMER0_Set:	
  1086                           ; 0 bytes @ 0x4
  1087                           
  1088  00C9                     ??_TIMER0_Init:	
  1089                           ; 0 bytes @ 0x4
  1090                           
  1091  00C9                     ??_ADC_Init:	
  1092                           ; 0 bytes @ 0x4
  1093                           
  1094  00C9                     ??_PWM_Init:	
  1095                           ; 0 bytes @ 0x4
  1096                           
  1097  00C9                     ?_LCD_Cursor:	
  1098                           ; 0 bytes @ 0x4
  1099                           
  1100  00C9                     ?_PWM_DutyCycle1:	
  1101                           ; 0 bytes @ 0x4
  1102                           
  1103  00C9                     ??_isdigit:	
  1104                           ; 0 bytes @ 0x4
  1105                           
  1106  00C9                     ??_USART_WriteChar:	
  1107                           ; 0 bytes @ 0x4
  1108                           
  1109  00C9                     ??_LCD_WriteCmd:	
  1110                           ; 0 bytes @ 0x4
  1111                           
  1112  00C9                     ??_LCD_WriteData:	
  1113                           ; 0 bytes @ 0x4
  1114                           
  1115  00C9                     ?___wmul:	
  1116                           ; 0 bytes @ 0x4
  1117                           
  1118  00C9                     ?___lwdiv:	
  1119                           ; 2 bytes @ 0x4
  1120                           
  1121  00C9                     ?___aldiv:	
  1122                           ; 2 bytes @ 0x4
  1123                           
  1124  00C9                     USART_WriteChar@byte:	
  1125                           ; 4 bytes @ 0x4
  1126                           
  1127  00C9                     TIMER0_Set@contagens:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  00C9                     LCD_Cursor@Col:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133  00C9                     _isdigit$1449:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136  00C9                     PWM_DutyCycle1@valor:	
  1137                           ; 1 bytes @ 0x4
  1138                           
  1139  00C9                     PWM_DutyCycle2@valor:	
  1140                           ; 2 bytes @ 0x4
  1141                           
  1142  00C9                     ___wmul@multiplier:	
  1143                           ; 2 bytes @ 0x4
  1144                           
  1145  00C9                     ___lwdiv@divisor:	
  1146                           ; 2 bytes @ 0x4
  1147                           
  1148  00C9                     ___aldiv@divisor:	
  1149                           ; 2 bytes @ 0x4
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x4
  1153  00C9                     	ds	1
  1154  00CA                     ?_USART_WriteString:	
  1155  00CA                     ??_LCD_Cursor:	
  1156                           ; 0 bytes @ 0x5
  1157                           
  1158  00CA                     LCD_WriteCmd@Byte:	
  1159                           ; 0 bytes @ 0x5
  1160                           
  1161  00CA                     LCD_WriteData@Byte:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164  00CA                     isdigit@c:	
  1165                           ; 1 bytes @ 0x5
  1166                           
  1167  00CA                     USART_WriteString@str:	
  1168                           ; 1 bytes @ 0x5
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0x5
  1172  00CA                     	ds	1
  1173  00CB                     ??_PWM_DutyCycle2:	
  1174  00CB                     ??_LCD_Init:	
  1175                           ; 0 bytes @ 0x6
  1176                           
  1177  00CB                     ?_LCD_WriteString:	
  1178                           ; 0 bytes @ 0x6
  1179                           
  1180  00CB                     ??_PWM_DutyCycle1:	
  1181                           ; 0 bytes @ 0x6
  1182                           
  1183  00CB                     ??_LCD_Clear:	
  1184                           ; 0 bytes @ 0x6
  1185                           
  1186  00CB                     LCD_Cursor@Row:	
  1187                           ; 0 bytes @ 0x6
  1188                           
  1189  00CB                     LCD_WriteString@Str:	
  1190                           ; 1 bytes @ 0x6
  1191                           
  1192  00CB                     ___wmul@multiplicand:	
  1193                           ; 2 bytes @ 0x6
  1194                           
  1195  00CB                     ___lwdiv@dividend:	
  1196                           ; 2 bytes @ 0x6
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x6
  1200  00CB                     	ds	1
  1201  00CC                     ??_USART_WriteString:	
  1202                           
  1203                           ; 0 bytes @ 0x7
  1204  00CC                     	ds	1
  1205  00CD                     ??_LCD_WriteString:	
  1206  00CD                     ??___wmul:	
  1207                           ; 0 bytes @ 0x8
  1208                           
  1209  00CD                     ??___lwdiv:	
  1210                           ; 0 bytes @ 0x8
  1211                           
  1212  00CD                     ___wmul@product:	
  1213                           ; 0 bytes @ 0x8
  1214                           
  1215  00CD                     ___aldiv@dividend:	
  1216                           ; 2 bytes @ 0x8
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x8
  1220  00CD                     	ds	1
  1221  00CE                     ___lwdiv@counter:	
  1222                           
  1223                           ; 1 bytes @ 0x9
  1224  00CE                     	ds	1
  1225  00CF                     ___lwdiv@quotient:	
  1226                           
  1227                           ; 2 bytes @ 0xA
  1228  00CF                     	ds	2
  1229  00D1                     ??___aldiv:	
  1230  00D1                     ?___lwmod:	
  1231                           ; 0 bytes @ 0xC
  1232                           
  1233  00D1                     ___lwmod@divisor:	
  1234                           ; 2 bytes @ 0xC
  1235                           
  1236                           
  1237                           ; 2 bytes @ 0xC
  1238  00D1                     	ds	1
  1239  00D2                     ___aldiv@counter:	
  1240                           
  1241                           ; 1 bytes @ 0xD
  1242  00D2                     	ds	1
  1243  00D3                     ___aldiv@sign:	
  1244  00D3                     ___lwmod@dividend:	
  1245                           ; 1 bytes @ 0xE
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0xE
  1249  00D3                     	ds	1
  1250  00D4                     ___aldiv@quotient:	
  1251                           
  1252                           ; 4 bytes @ 0xF
  1253  00D4                     	ds	1
  1254  00D5                     ??___lwmod:	
  1255                           
  1256                           ; 0 bytes @ 0x10
  1257  00D5                     	ds	1
  1258  00D6                     ___lwmod@counter:	
  1259                           
  1260                           ; 1 bytes @ 0x11
  1261  00D6                     	ds	1
  1262  00D7                     ?_sprintf:	
  1263  00D7                     sprintf@f:	
  1264                           ; 2 bytes @ 0x12
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0x12
  1268  00D7                     	ds	1
  1269  00D8                     ?_USART_Init:	
  1270  00D8                     USART_Init@BaudRate:	
  1271                           ; 0 bytes @ 0x13
  1272                           
  1273                           
  1274                           ; 4 bytes @ 0x13
  1275  00D8                     	ds	2
  1276  00DA                     ??_sprintf:	
  1277                           
  1278                           ; 0 bytes @ 0x15
  1279  00DA                     	ds	2
  1280  00DC                     ??_USART_Init:	
  1281                           
  1282                           ; 0 bytes @ 0x17
  1283  00DC                     	ds	4
  1284  00E0                     ??_main:	
  1285                           
  1286                           ; 0 bytes @ 0x1B
  1287  00E0                     	ds	3
  1288                           
  1289                           	psect	cstackCOMMON
  1290  0070                     __pcstackCOMMON:	
  1291  0070                     ?_TIMER0_Set:	
  1292  0070                     ?_TIMER0_Init:	
  1293                           ; 0 bytes @ 0x0
  1294                           
  1295  0070                     ?_ADC_Init:	
  1296                           ; 0 bytes @ 0x0
  1297                           
  1298  0070                     ?_PWM_Init:	
  1299                           ; 0 bytes @ 0x0
  1300                           
  1301  0070                     ?_LCD_Init:	
  1302                           ; 0 bytes @ 0x0
  1303                           
  1304  0070                     ?_LCD_Clear:	
  1305                           ; 0 bytes @ 0x0
  1306                           
  1307  0070                     ?_isdigit:	
  1308                           ; 0 bytes @ 0x0
  1309                           
  1310  0070                     ?_Fuzzy:	
  1311                           ; 1 bit 
  1312                           
  1313  0070                     ?_ISR:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ?_main:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?_USART_WriteChar:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?_LCD_WriteCmd:	
  1323                           ; 0 bytes @ 0x0
  1324                           
  1325  0070                     ?_LCD_WriteData:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?___ftge:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?i1_USART_WriteChar:	
  1332                           ; 1 bit 
  1333                           
  1334  0070                     ??i1_USART_WriteChar:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?i1_TIMER0_Set:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ??i1_TIMER0_Set:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?i1_PWM_DutyCycle2:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_USART_ReceiveChar:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ?i1___lwdiv:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?___ftpack:	
  1353                           ; 2 bytes @ 0x0
  1354                           
  1355  0070                     ?___ftneg:	
  1356                           ; 3 bytes @ 0x0
  1357                           
  1358  0070                     ?___fttol:	
  1359                           ; 3 bytes @ 0x0
  1360                           
  1361  0070                     i1USART_WriteChar@byte:	
  1362                           ; 4 bytes @ 0x0
  1363                           
  1364  0070                     i1TIMER0_Set@contagens:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     i1PWM_DutyCycle2@valor:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     i1___lwdiv@divisor:	
  1371                           ; 2 bytes @ 0x0
  1372                           
  1373  0070                     ___ftpack@arg:	
  1374                           ; 2 bytes @ 0x0
  1375                           
  1376  0070                     ___ftge@ff1:	
  1377                           ; 3 bytes @ 0x0
  1378                           
  1379  0070                     ___ftneg@f1:	
  1380                           ; 3 bytes @ 0x0
  1381                           
  1382  0070                     ___fttol@f1:	
  1383                           ; 3 bytes @ 0x0
  1384                           
  1385                           
  1386                           ; 3 bytes @ 0x0
  1387  0070                     	ds	1
  1388  0071                     ?i1_USART_WriteString:	
  1389  0071                     i1USART_WriteString@str:	
  1390                           ; 0 bytes @ 0x1
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x1
  1394  0071                     	ds	1
  1395  0072                     ??i1_PWM_DutyCycle2:	
  1396  0072                     i1___lwdiv@dividend:	
  1397                           ; 0 bytes @ 0x2
  1398                           
  1399                           
  1400                           ; 2 bytes @ 0x2
  1401  0072                     	ds	1
  1402  0073                     ??_USART_ReceiveChar:	
  1403  0073                     ??___ftneg:	
  1404                           ; 0 bytes @ 0x3
  1405                           
  1406  0073                     ??i1_USART_WriteString:	
  1407                           ; 0 bytes @ 0x3
  1408                           
  1409  0073                     ___ftpack@exp:	
  1410                           ; 0 bytes @ 0x3
  1411                           
  1412  0073                     ___ftge@ff2:	
  1413                           ; 1 bytes @ 0x3
  1414                           
  1415                           
  1416                           ; 3 bytes @ 0x3
  1417  0073                     	ds	1
  1418  0074                     ??___fttol:	
  1419  0074                     ??i1___lwdiv:	
  1420                           ; 0 bytes @ 0x4
  1421                           
  1422  0074                     USART_ReceiveChar@byte:	
  1423                           ; 0 bytes @ 0x4
  1424                           
  1425  0074                     ___ftpack@sign:	
  1426                           ; 1 bytes @ 0x4
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x4
  1430  0074                     	ds	1
  1431  0075                     ??___ftpack:	
  1432  0075                     i1___lwdiv@quotient:	
  1433                           ; 0 bytes @ 0x5
  1434                           
  1435                           
  1436                           ; 2 bytes @ 0x5
  1437  0075                     	ds	1
  1438  0076                     ??___ftge:	
  1439                           
  1440                           ; 0 bytes @ 0x6
  1441  0076                     	ds	1
  1442  0077                     i1___lwdiv@counter:	
  1443                           
  1444                           ; 1 bytes @ 0x7
  1445  0077                     	ds	1
  1446  0078                     ?i1___wmul:	
  1447  0078                     ?___ftmul:	
  1448                           ; 2 bytes @ 0x8
  1449                           
  1450  0078                     ?___lwtoft:	
  1451                           ; 3 bytes @ 0x8
  1452                           
  1453  0078                     ___fttol@sign1:	
  1454                           ; 3 bytes @ 0x8
  1455                           
  1456  0078                     ___lwtoft@c:	
  1457                           ; 1 bytes @ 0x8
  1458                           
  1459  0078                     i1___wmul@multiplier:	
  1460                           ; 2 bytes @ 0x8
  1461                           
  1462  0078                     ___ftmul@f1:	
  1463                           ; 2 bytes @ 0x8
  1464                           
  1465                           
  1466                           ; 3 bytes @ 0x8
  1467  0078                     	ds	1
  1468  0079                     ___fttol@lval:	
  1469                           
  1470                           ; 4 bytes @ 0x9
  1471  0079                     	ds	1
  1472  007A                     i1___wmul@multiplicand:	
  1473                           
  1474                           ; 2 bytes @ 0xA
  1475  007A                     	ds	1
  1476  007B                     ??___lwtoft:	
  1477  007B                     ___ftmul@f2:	
  1478                           ; 0 bytes @ 0xB
  1479                           
  1480                           
  1481                           ; 3 bytes @ 0xB
  1482  007B                     	ds	1
  1483  007C                     ??_max_val:	
  1484  007C                     ??i1___wmul:	
  1485                           ; 0 bytes @ 0xC
  1486                           
  1487  007C                     i1___wmul@product:	
  1488                           ; 0 bytes @ 0xC
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0xC
  1492  007C                     	ds	1
  1493  007D                     ___fttol@exp1:	
  1494                           
  1495                           ; 1 bytes @ 0xD
  1496  007D                     	ds	1
  1497  007E                     ??_trimf:	
  1498  007E                     ??_trapmf:	
  1499                           ; 0 bytes @ 0xE
  1500                           
  1501  007E                     ??_Fuzzy:	
  1502                           ; 0 bytes @ 0xE
  1503                           
  1504                           
  1505                           	psect	cstackBANK0
  1506  0020                     __pcstackBANK0:	
  1507                           ; 0 bytes @ 0xE
  1508                           
  1509  0020                     ??___ftmul:	
  1510  0020                     ?_max_val:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0020                     max_val@a:	
  1514                           ; 3 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 3 bytes @ 0x0
  1518  0020                     	ds	3
  1519  0023                     max_val@b:	
  1520                           
  1521                           ; 3 bytes @ 0x3
  1522  0023                     	ds	1
  1523  0024                     ___ftmul@exp:	
  1524                           
  1525                           ; 1 bytes @ 0x4
  1526  0024                     	ds	1
  1527  0025                     ___ftmul@f3_as_product:	
  1528                           
  1529                           ; 3 bytes @ 0x5
  1530  0025                     	ds	3
  1531  0028                     ___ftmul@cntr:	
  1532                           
  1533                           ; 1 bytes @ 0x8
  1534  0028                     	ds	1
  1535  0029                     ___ftmul@sign:	
  1536                           
  1537                           ; 1 bytes @ 0x9
  1538  0029                     	ds	1
  1539  002A                     ?___ftadd:	
  1540  002A                     ___ftadd@f1:	
  1541                           ; 3 bytes @ 0xA
  1542                           
  1543                           
  1544                           ; 3 bytes @ 0xA
  1545  002A                     	ds	3
  1546  002D                     ___ftadd@f2:	
  1547                           
  1548                           ; 3 bytes @ 0xD
  1549  002D                     	ds	3
  1550  0030                     ??___ftadd:	
  1551                           
  1552                           ; 0 bytes @ 0x10
  1553  0030                     	ds	4
  1554  0034                     ___ftadd@sign:	
  1555                           
  1556                           ; 1 bytes @ 0x14
  1557  0034                     	ds	1
  1558  0035                     ___ftadd@exp2:	
  1559                           
  1560                           ; 1 bytes @ 0x15
  1561  0035                     	ds	1
  1562  0036                     ___ftadd@exp1:	
  1563                           
  1564                           ; 1 bytes @ 0x16
  1565  0036                     	ds	1
  1566  0037                     ?___ftdiv:	
  1567  0037                     ___ftdiv@f2:	
  1568                           ; 3 bytes @ 0x17
  1569                           
  1570                           
  1571                           ; 3 bytes @ 0x17
  1572  0037                     	ds	3
  1573  003A                     ___ftdiv@f1:	
  1574                           
  1575                           ; 3 bytes @ 0x1A
  1576  003A                     	ds	3
  1577  003D                     ??___ftdiv:	
  1578                           
  1579                           ; 0 bytes @ 0x1D
  1580  003D                     	ds	4
  1581  0041                     ___ftdiv@cntr:	
  1582                           
  1583                           ; 1 bytes @ 0x21
  1584  0041                     	ds	1
  1585  0042                     ___ftdiv@f3:	
  1586                           
  1587                           ; 3 bytes @ 0x22
  1588  0042                     	ds	3
  1589  0045                     ___ftdiv@exp:	
  1590                           
  1591                           ; 1 bytes @ 0x25
  1592  0045                     	ds	1
  1593  0046                     ___ftdiv@sign:	
  1594                           
  1595                           ; 1 bytes @ 0x26
  1596  0046                     	ds	1
  1597  0047                     ?_trimf:	
  1598  0047                     ?_trapmf:	
  1599                           ; 3 bytes @ 0x27
  1600                           
  1601  0047                     trimf@x:	
  1602                           ; 3 bytes @ 0x27
  1603                           
  1604  0047                     trapmf@x:	
  1605                           ; 3 bytes @ 0x27
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0x27
  1609  0047                     	ds	3
  1610  004A                     trimf@a:	
  1611  004A                     trapmf@a:	
  1612                           ; 3 bytes @ 0x2A
  1613                           
  1614                           
  1615                           ; 3 bytes @ 0x2A
  1616  004A                     	ds	3
  1617  004D                     trimf@b:	
  1618  004D                     trapmf@b:	
  1619                           ; 3 bytes @ 0x2D
  1620                           
  1621                           
  1622                           ; 3 bytes @ 0x2D
  1623  004D                     	ds	3
  1624  0050                     trimf@c:	
  1625  0050                     trapmf@c:	
  1626                           ; 3 bytes @ 0x30
  1627                           
  1628                           
  1629                           ; 3 bytes @ 0x30
  1630  0050                     	ds	3
  1631  0053                     trimf@ua:	
  1632  0053                     trapmf@d:	
  1633                           ; 3 bytes @ 0x33
  1634                           
  1635                           
  1636                           ; 3 bytes @ 0x33
  1637  0053                     	ds	3
  1638  0056                     trapmf@ua:	
  1639                           
  1640                           ; 3 bytes @ 0x36
  1641  0056                     	ds	3
  1642  0059                     Fuzzy@a:	
  1643                           
  1644                           ; 2 bytes @ 0x39
  1645  0059                     	ds	2
  1646  005B                     Fuzzy@a_232:	
  1647                           
  1648                           ; 2 bytes @ 0x3B
  1649  005B                     	ds	2
  1650  005D                     Fuzzy@a_233:	
  1651                           
  1652                           ; 2 bytes @ 0x3D
  1653  005D                     	ds	2
  1654  005F                     Fuzzy@a_234:	
  1655                           
  1656                           ; 2 bytes @ 0x3F
  1657  005F                     	ds	2
  1658  0061                     Fuzzy@a_235:	
  1659                           
  1660                           ; 2 bytes @ 0x41
  1661  0061                     	ds	2
  1662  0063                     Fuzzy@tip:	
  1663                           
  1664                           ; 3 bytes @ 0x43
  1665  0063                     	ds	3
  1666  0066                     Fuzzy@mantem:	
  1667                           
  1668                           ; 3 bytes @ 0x46
  1669  0066                     	ds	3
  1670  0069                     Fuzzy@reduz:	
  1671                           
  1672                           ; 3 bytes @ 0x49
  1673  0069                     	ds	3
  1674  006C                     Fuzzy@aumenta:	
  1675                           
  1676                           ; 3 bytes @ 0x4C
  1677  006C                     	ds	3
  1678                           
  1679                           	psect	maintext
  1680  097A                     __pmaintext:	
  1681 ;;
  1682 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1683 ;;
  1684 ;; *************** function _main *****************
  1685 ;; Defined at:
  1686 ;;		line 468 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;		None               void
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 17F/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          0       0       3       0       0
  1703 ;;      Totals:         0       0       3       0       0
  1704 ;;Total ram usage:        3 bytes
  1705 ;; Hardware stack levels required when called:    7
  1706 ;; This function calls:
  1707 ;;		_ADC_Init
  1708 ;;		_LCD_Clear
  1709 ;;		_LCD_Cursor
  1710 ;;		_LCD_Init
  1711 ;;		_LCD_WriteString
  1712 ;;		_PWM_DutyCycle1
  1713 ;;		_PWM_DutyCycle2
  1714 ;;		_PWM_Init
  1715 ;;		_TIMER0_Init
  1716 ;;		_TIMER0_Set
  1717 ;;		_USART_Init
  1718 ;;		_USART_WriteString
  1719 ;;		_sprintf
  1720 ;; This function is called by:
  1721 ;;		Startup code after reset
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _main
  1727  097A                     _main:	
  1728                           
  1729                           ;main.c: 470: TRISA = 0b00000001;
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1733  097A  3001               	movlw	1
  1734  097B  1683               	bsf	3,5	;RP0=1, select bank1
  1735  097C  1303               	bcf	3,6	;RP1=0, select bank1
  1736  097D  0085               	movwf	5	;volatile
  1737                           
  1738                           ;main.c: 471: PORTA = 0b00000001;
  1739  097E  3001               	movlw	1
  1740  097F  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0980  1303               	bcf	3,6	;RP1=0, select bank0
  1742  0981  0085               	movwf	5	;volatile
  1743                           
  1744                           ;main.c: 472: TRISB = 0b00000000;
  1745  0982  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0983  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0984  0186               	clrf	6	;volatile
  1748                           
  1749                           ;main.c: 473: PORTB = 0b00000000;
  1750  0985  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0986  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0987  0186               	clrf	6	;volatile
  1753                           
  1754                           ;main.c: 474: TRISC = 0b10000001;
  1755  0988  3081               	movlw	129
  1756  0989  1683               	bsf	3,5	;RP0=1, select bank1
  1757  098A  1303               	bcf	3,6	;RP1=0, select bank1
  1758  098B  0087               	movwf	7	;volatile
  1759                           
  1760                           ;main.c: 475: PORTC = 0b11000000;
  1761  098C  30C0               	movlw	192
  1762  098D  1283               	bcf	3,5	;RP0=0, select bank0
  1763  098E  1303               	bcf	3,6	;RP1=0, select bank0
  1764  098F  0087               	movwf	7	;volatile
  1765                           
  1766                           ;main.c: 476: TRISD = 0b00000000;
  1767  0990  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0991  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0992  0188               	clrf	8	;volatile
  1770                           
  1771                           ;main.c: 477: PORTD = 0b00000000;
  1772  0993  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0994  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0995  0188               	clrf	8	;volatile
  1775                           
  1776                           ;main.c: 478: TRISE = 0b00000000;
  1777  0996  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0997  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0998  0189               	clrf	9	;volatile
  1780                           
  1781                           ;main.c: 479: PORTE = 0b00000000;
  1782  0999  1283               	bcf	3,5	;RP0=0, select bank0
  1783  099A  1303               	bcf	3,6	;RP1=0, select bank0
  1784  099B  0189               	clrf	9	;volatile
  1785                           
  1786                           ;main.c: 482: T1CON = 0x03;
  1787  099C  3003               	movlw	3
  1788  099D  0090               	movwf	16	;volatile
  1789                           
  1790                           ;main.c: 483: TMR1L = 0x00;
  1791  099E  018E               	clrf	14	;volatile
  1792                           
  1793                           ;main.c: 484: TMR1H = 0x00;
  1794  099F  018F               	clrf	15	;volatile
  1795                           
  1796                           ;main.c: 487: USART_Init(115200);
  1797  09A0  3000               	movlw	0
  1798  09A1  1683               	bsf	3,5	;RP0=1, select bank1
  1799  09A2  1303               	bcf	3,6	;RP1=0, select bank1
  1800  09A3  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1801  09A4  3001               	movlw	1
  1802  09A5  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1803  09A6  30C2               	movlw	194
  1804  09A7  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1805  09A8  3000               	movlw	0
  1806  09A9  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1807  09AA  120A  158A  200D  120A  158A  	fcall	_USART_Init
  1808                           
  1809                           ;main.c: 488: TIMER0_Init();
  1810  09AF  160A  118A  2055  120A  158A  	fcall	_TIMER0_Init
  1811                           
  1812                           ;main.c: 489: ADC_Init();
  1813  09B4  160A  118A  2070  120A  158A  	fcall	_ADC_Init
  1814                           
  1815                           ;main.c: 490: PWM_Init();
  1816  09B9  160A  118A  21C0  120A  158A  	fcall	_PWM_Init
  1817                           
  1818                           ;main.c: 491: LCD_Init();
  1819  09BE  160A  118A  23E8  120A  158A  	fcall	_LCD_Init
  1820                           
  1821                           ;main.c: 494: INTCONbits.PEIE = 1;
  1822  09C3  170B               	bsf	11,6	;volatile
  1823                           
  1824                           ;main.c: 495: INTCONbits.GIE = 1;
  1825  09C4  178B               	bsf	11,7	;volatile
  1826                           
  1827                           ;main.c: 498: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1828  09C5  3033               	movlw	low (STR_11-__stringbase)
  1829  09C6  1683               	bsf	3,5	;RP0=1, select bank1
  1830  09C7  1303               	bcf	3,6	;RP1=0, select bank1
  1831  09C8  00CA               	movwf	USART_WriteString@str^(0+128)
  1832  09C9  3080               	movlw	128
  1833  09CA  00CB               	movwf	(USART_WriteString@str+1)^(0+128)
  1834  09CB  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1835                           
  1836                           ;main.c: 499: USART_WriteString("USART: 115.200bps\n\r");
  1837  09D0  3050               	movlw	low (STR_12-__stringbase)
  1838  09D1  1683               	bsf	3,5	;RP0=1, select bank1
  1839  09D2  1303               	bcf	3,6	;RP1=0, select bank1
  1840  09D3  00CA               	movwf	USART_WriteString@str^(0+128)
  1841  09D4  3080               	movlw	128
  1842  09D5  00CB               	movwf	(USART_WriteString@str+1)^(0+128)
  1843  09D6  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1844                           
  1845                           ;main.c: 502: LCD_Init();
  1846  09DB  160A  118A  23E8  120A  158A  	fcall	_LCD_Init
  1847                           
  1848                           ;main.c: 503: LCD_Cursor(0,0);
  1849  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  1850  09E1  1303               	bcf	3,6	;RP1=0, select bank1
  1851  09E2  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1852  09E3  3000               	movlw	0
  1853  09E4  160A  118A  2118  120A  158A  	fcall	_LCD_Cursor
  1854                           
  1855                           ;main.c: 504: LCD_WriteString("Inicializando...");
  1856  09E9  3064               	movlw	low (STR_13-__stringbase)
  1857  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  1858  09EB  1303               	bcf	3,6	;RP1=0, select bank1
  1859  09EC  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1860  09ED  3080               	movlw	128
  1861  09EE  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1862  09EF  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1863                           
  1864                           ;main.c: 507: PWM_DutyCycle1(0);
  1865  09F4  3000               	movlw	0
  1866  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  1867  09F6  1303               	bcf	3,6	;RP1=0, select bank1
  1868  09F7  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1869  09F8  3000               	movlw	0
  1870  09F9  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1871  09FA  160A  118A  2138  120A  158A  	fcall	_PWM_DutyCycle1
  1872                           
  1873                           ;main.c: 508: PWM_DutyCycle2(0);
  1874  09FF  3000               	movlw	0
  1875  0A00  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0A01  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0A02  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1878  0A03  3000               	movlw	0
  1879  0A04  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1880  0A05  160A  118A  2159  120A  158A  	fcall	_PWM_DutyCycle2
  1881                           
  1882                           ;main.c: 511: TIMER0_Set(238);
  1883  0A0A  30EE               	movlw	238
  1884  0A0B  160A  118A  2045  120A  158A  	fcall	_TIMER0_Set
  1885                           
  1886                           ;main.c: 514: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1887  0A10  3018               	movlw	24
  1888  0A11  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0A12  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0A13  00E2               	movwf	(??_main^(0+128)+2)
  1891  0A14  3061               	movlw	97
  1892  0A15  00E1               	movwf	(??_main^(0+128)+1)
  1893  0A16  306E               	movlw	110
  1894  0A17  00E0               	movwf	??_main^(0+128)
  1895  0A18                     u4527:	
  1896  0A18  0BE0               	decfsz	??_main^(0+128),f
  1897  0A19  2A18               	goto	u4527
  1898  0A1A  0BE1               	decfsz	(??_main^(0+128)+1),f
  1899  0A1B  2A18               	goto	u4527
  1900  0A1C  0BE2               	decfsz	(??_main^(0+128)+2),f
  1901  0A1D  2A18               	goto	u4527
  1902  0A1E  0000               	nop
  1903  0A1F                     l202:	
  1904                           ;main.c: 517: while(1)
  1905                           
  1906                           
  1907                           ;main.c: 518: {
  1908                           ;main.c: 522: sprintf(display_rpm,"%04d", rpm);
  1909  0A1F  30C5               	movlw	(STR_14-__stringbase)& (0+255)
  1910  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0A22  00E0               	movwf	??_main^(0+128)
  1913  0A23  0860               	movf	??_main^(0+128),w
  1914  0A24  00D7               	movwf	sprintf@f^(0+128)
  1915  0A25  0844               	movf	(_rpm+1)^(0+128),w
  1916  0A26  01D9               	clrf	((?_sprintf+1)^(0+128)+1)
  1917  0A27  07D9               	addwf	((?_sprintf+1)^(0+128)+1),f
  1918  0A28  0843               	movf	_rpm^(0+128),w
  1919  0A29  01D8               	clrf	(?_sprintf^(0+128)+1)
  1920  0A2A  07D8               	addwf	(?_sprintf^(0+128)+1),f
  1921  0A2B  30AA               	movlw	_display_rpm& (0+255)
  1922  0A2C  120A  158A  25B6  120A  158A  	fcall	_sprintf
  1923                           
  1924                           ;main.c: 523: sprintf(display_pwm,"%04d", pwm);
  1925  0A31  30C5               	movlw	(STR_14-__stringbase)& (0+255)
  1926  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0A34  00E0               	movwf	??_main^(0+128)
  1929  0A35  0860               	movf	??_main^(0+128),w
  1930  0A36  00D7               	movwf	sprintf@f^(0+128)
  1931  0A37  0842               	movf	(_pwm+1)^(0+128),w
  1932  0A38  01D9               	clrf	((?_sprintf+1)^(0+128)+1)
  1933  0A39  07D9               	addwf	((?_sprintf+1)^(0+128)+1),f
  1934  0A3A  0841               	movf	_pwm^(0+128),w
  1935  0A3B  01D8               	clrf	(?_sprintf^(0+128)+1)
  1936  0A3C  07D8               	addwf	(?_sprintf^(0+128)+1),f
  1937  0A3D  30A0               	movlw	_display_pwm& (0+255)
  1938  0A3E  120A  158A  25B6  120A  158A  	fcall	_sprintf
  1939                           
  1940                           ;main.c: 527: USART_WriteString(display_rpm);
  1941  0A43  30AA               	movlw	_display_rpm& (0+255)
  1942  0A44  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0A45  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0A46  00CA               	movwf	USART_WriteString@str^(0+128)
  1945  0A47  3001               	movlw	1
  1946  0A48  00CB               	movwf	(USART_WriteString@str+1)^(0+128)
  1947  0A49  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1948                           
  1949                           ;main.c: 528: USART_WriteString("\n\r");
  1950  0A4E  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1951  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0A51  00CA               	movwf	USART_WriteString@str^(0+128)
  1954  0A52  3080               	movlw	128
  1955  0A53  00CB               	movwf	(USART_WriteString@str+1)^(0+128)
  1956  0A54  160A  118A  223E  120A  158A  	fcall	_USART_WriteString
  1957                           
  1958                           ;main.c: 531: LCD_Clear();
  1959  0A59  160A  118A  21E4  120A  158A  	fcall	_LCD_Clear
  1960                           
  1961                           ;main.c: 532: LCD_Cursor(0,0);
  1962  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0A60  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1965  0A61  3000               	movlw	0
  1966  0A62  160A  118A  2118  120A  158A  	fcall	_LCD_Cursor
  1967                           
  1968                           ;main.c: 533: LCD_WriteString("RPM: ");
  1969  0A67  30B9               	movlw	low (STR_17-__stringbase)
  1970  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0A6A  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1973  0A6B  3080               	movlw	128
  1974  0A6C  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1975  0A6D  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1976                           
  1977                           ;main.c: 534: LCD_Cursor(0,6);
  1978  0A72  3006               	movlw	6
  1979  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0A75  00E0               	movwf	??_main^(0+128)
  1982  0A76  0860               	movf	??_main^(0+128),w
  1983  0A77  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1984  0A78  3000               	movlw	0
  1985  0A79  160A  118A  2118  120A  158A  	fcall	_LCD_Cursor
  1986                           
  1987                           ;main.c: 535: LCD_WriteString(display_rpm);
  1988  0A7E  30AA               	movlw	_display_rpm& (0+255)
  1989  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  1990  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  1991  0A81  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1992  0A82  3001               	movlw	1
  1993  0A83  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1994  0A84  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  1995                           
  1996                           ;main.c: 536: LCD_Cursor(1,0);
  1997  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0A8B  01C9               	clrf	LCD_Cursor@Col^(0+128)
  2000  0A8C  3001               	movlw	1
  2001  0A8D  160A  118A  2118  120A  158A  	fcall	_LCD_Cursor
  2002                           
  2003                           ;main.c: 537: LCD_WriteString("PWM: ");
  2004  0A92  30BF               	movlw	low (STR_18-__stringbase)
  2005  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0A95  00CB               	movwf	LCD_WriteString@Str^(0+128)
  2008  0A96  3080               	movlw	128
  2009  0A97  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2010  0A98  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  2011                           
  2012                           ;main.c: 538: LCD_Cursor(1,6);
  2013  0A9D  3006               	movlw	6
  2014  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0A9F  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0AA0  00E0               	movwf	??_main^(0+128)
  2017  0AA1  0860               	movf	??_main^(0+128),w
  2018  0AA2  00C9               	movwf	LCD_Cursor@Col^(0+128)
  2019  0AA3  3001               	movlw	1
  2020  0AA4  160A  118A  2118  120A  158A  	fcall	_LCD_Cursor
  2021                           
  2022                           ;main.c: 539: LCD_WriteString(display_pwm);
  2023  0AA9  30A0               	movlw	_display_pwm& (0+255)
  2024  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0AAC  00CB               	movwf	LCD_WriteString@Str^(0+128)
  2027  0AAD  3001               	movlw	1
  2028  0AAE  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2029  0AAF  160A  118A  220D  120A  158A  	fcall	_LCD_WriteString
  2030                           
  2031                           ;main.c: 541: _delay((unsigned long)((200)*(18432000/4000.0)));
  2032  0AB4  3005               	movlw	5
  2033  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  2034  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  2035  0AB7  00E2               	movwf	(??_main^(0+128)+2)
  2036  0AB8  30AD               	movlw	173
  2037  0AB9  00E1               	movwf	(??_main^(0+128)+1)
  2038  0ABA  30E0               	movlw	224
  2039  0ABB  00E0               	movwf	??_main^(0+128)
  2040  0ABC                     u4537:	
  2041  0ABC  0BE0               	decfsz	??_main^(0+128),f
  2042  0ABD  2ABC               	goto	u4537
  2043  0ABE  0BE1               	decfsz	(??_main^(0+128)+1),f
  2044  0ABF  2ABC               	goto	u4537
  2045  0AC0  0BE2               	decfsz	(??_main^(0+128)+2),f
  2046  0AC1  2ABC               	goto	u4537
  2047  0AC2  2A1F               	goto	l202
  2048  0AC3                     __end_of_main:	
  2049                           
  2050                           	psect	text1
  2051  0DB6                     __ptext1:	
  2052 ;; *************** function _sprintf *****************
  2053 ;; Defined at:
  2054 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  sp              1    wreg     PTR unsigned char 
  2057 ;;		 -> display_pwm(10), display_rpm(10), 
  2058 ;;  f               1   18[BANK1 ] PTR const unsigned char 
  2059 ;;		 -> STR_15(5), STR_14(5), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  2062 ;;		 -> display_pwm(10), display_rpm(10), 
  2063 ;;  _val            4    2[BANK3 ] struct .
  2064 ;;  width           2    7[BANK3 ] int 
  2065 ;;  c               1   10[BANK3 ] char 
  2066 ;;  flag            1    6[BANK3 ] unsigned char 
  2067 ;;  prec            1    1[BANK3 ] char 
  2068 ;;  ap              1    0[BANK3 ] PTR void [1]
  2069 ;;		 -> ?_sprintf(2), 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   18[BANK1 ] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       3       0       0
  2080 ;;      Locals:         0       0       0      11       0
  2081 ;;      Temps:          0       0       3       0       0
  2082 ;;      Totals:         0       0       6      11       0
  2083 ;;Total ram usage:       17 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    6
  2086 ;; This function calls:
  2087 ;;		___lwdiv
  2088 ;;		___lwmod
  2089 ;;		___wmul
  2090 ;;		_isdigit
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _sprintf
  2098  0DB6                     _sprintf:	
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2102                           ;sprintf@sp stored from wreg
  2103  0DB6  1683               	bsf	3,5	;RP0=1, select bank3
  2104  0DB7  1703               	bsf	3,6	;RP1=1, select bank3
  2105  0DB8  00BD               	movwf	sprintf@sp^(0+384)
  2106                           
  2107                           ;doprnt.c: 494: va_list ap;
  2108                           ;doprnt.c: 499: signed char c;
  2109                           ;doprnt.c: 501: int width;
  2110                           ;doprnt.c: 506: signed char prec;
  2111                           ;doprnt.c: 508: unsigned char flag;
  2112                           ;doprnt.c: 527: union {
  2113                           ;doprnt.c: 528: unsigned int _val;
  2114                           ;doprnt.c: 529: struct {
  2115                           ;doprnt.c: 530: const char * _cp;
  2116                           ;doprnt.c: 531: unsigned _len;
  2117                           ;doprnt.c: 532: } _str;
  2118                           ;doprnt.c: 533: } _val;
  2119                           ;doprnt.c: 542: *ap = __va_start();
  2120  0DB9  30D8               	movlw	(?_sprintf+1)& (0+255)
  2121  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  2122  0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  2123  0DBC  00DA               	movwf	??_sprintf^(0+128)
  2124  0DBD  085A               	movf	??_sprintf^(0+128),w
  2125  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  2126  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  2127  0DC0  00B4               	movwf	sprintf@ap^(0+384)
  2128  0DC1                     l3538:	
  2129                           ;doprnt.c: 545: while(c = *f++) {
  2130                           
  2131  0DC1  3001               	movlw	1
  2132  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  2134  0DC4  07D7               	addwf	sprintf@f^(0+128),f
  2135  0DC5  30FF               	movlw	-1
  2136  0DC6  0757               	addwf	sprintf@f^(0+128),w
  2137  0DC7  0084               	movwf	4
  2138  0DC8  120A  118A  270C  120A  158A  	fcall	stringdir
  2139  0DCD  00DA               	movwf	??_sprintf^(0+128)
  2140  0DCE  085A               	movf	??_sprintf^(0+128),w
  2141  0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  2142  0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  2143  0DD1  00BE               	movwf	sprintf@c^(0+384)
  2144  0DD2  08BE               	movf	sprintf@c^(0+384),f
  2145  0DD3  1903               	btfsc	3,2
  2146  0DD4  2FF9               	goto	l3540
  2147                           
  2148                           ;doprnt.c: 547: if(c != '%')
  2149  0DD5  083E               	movf	sprintf@c^(0+384),w
  2150  0DD6  3A25               	xorlw	37
  2151  0DD7  1903               	skipnz
  2152  0DD8  2DED               	goto	l3442
  2153                           
  2154                           ;doprnt.c: 549: {
  2155                           ;doprnt.c: 550: ((*sp++ = (c)));
  2156  0DD9  083E               	movf	sprintf@c^(0+384),w
  2157  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0DDC  00DA               	movwf	??_sprintf^(0+128)
  2160  0DDD  1683               	bsf	3,5	;RP0=1, select bank3
  2161  0DDE  1703               	bsf	3,6	;RP1=1, select bank3
  2162  0DDF  083D               	movf	sprintf@sp^(0+384),w
  2163  0DE0  0084               	movwf	4
  2164  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  2165  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  2166  0DE3  085A               	movf	??_sprintf^(0+128),w
  2167  0DE4  1783               	bsf	3,7	;select IRP bank2
  2168  0DE5  0080               	movwf	0
  2169  0DE6  3001               	movlw	1
  2170  0DE7  00DA               	movwf	??_sprintf^(0+128)
  2171  0DE8  085A               	movf	??_sprintf^(0+128),w
  2172  0DE9  1683               	bsf	3,5	;RP0=1, select bank3
  2173  0DEA  1703               	bsf	3,6	;RP1=1, select bank3
  2174  0DEB  07BD               	addwf	sprintf@sp^(0+384),f
  2175                           
  2176                           ;doprnt.c: 551: continue;
  2177  0DEC  2DC1               	goto	l3538
  2178  0DED                     l3442:	
  2179                           
  2180                           ;doprnt.c: 552: }
  2181                           ;doprnt.c: 555: width = 0;
  2182  0DED  01BB               	clrf	sprintf@width^(0+384)
  2183  0DEE  01BC               	clrf	(sprintf@width+1)^(0+384)
  2184                           
  2185                           ;doprnt.c: 557: flag = 0;
  2186  0DEF  01BA               	clrf	sprintf@flag^(0+384)
  2187                           
  2188                           ;doprnt.c: 560: switch(*f) {
  2189                           
  2190                           ;doprnt.c: 559: for(;;) {
  2191  0DF0  2DFA               	goto	l3448
  2192  0DF1                     l479:	
  2193                           ;doprnt.c: 588: case '0':
  2194                           
  2195                           
  2196                           ;doprnt.c: 589: flag |= 0x04;
  2197  0DF1  1683               	bsf	3,5	;RP0=1, select bank3
  2198  0DF2  1703               	bsf	3,6	;RP1=1, select bank3
  2199  0DF3  153A               	bsf	sprintf@flag^(0+384),2
  2200                           
  2201                           ;doprnt.c: 590: f++;
  2202  0DF4  3001               	movlw	1
  2203  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0DF7  00DA               	movwf	??_sprintf^(0+128)
  2206  0DF8  085A               	movf	??_sprintf^(0+128),w
  2207  0DF9  07D7               	addwf	sprintf@f^(0+128),f
  2208  0DFA                     l3448:	
  2209                           ;doprnt.c: 593: }
  2210                           
  2211                           ;doprnt.c: 591: continue;
  2212                           
  2213  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2214  0DFB  0857               	movf	sprintf@f^(0+128),w
  2215  0DFC  0084               	movwf	4
  2216  0DFD  120A  118A  270C  120A  158A  	fcall	stringdir
  2217                           
  2218                           ; Switch size 1, requested type "space"
  2219                           ; Number of cases is 1, Range of values is 48 to 48
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte            4     3 (average)
  2223                           ; direct_byte           14    11 (fixed)
  2224                           ; jumptable            263     9 (fixed)
  2225                           ;	Chosen strategy is simple_byte
  2226  0E02  3A30               	xorlw	48	; case 48
  2227  0E03  1903               	skipnz
  2228  0E04  2DF1               	goto	l479
  2229  0E05  2E06               	goto	l3450
  2230  0E06                     l3450:	
  2231                           ;doprnt.c: 595: }
  2232                           
  2233                           ;doprnt.c: 594: break;
  2234                           
  2235                           
  2236                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2237  0E06  0857               	movf	sprintf@f^(0+128),w
  2238  0E07  0084               	movwf	4
  2239  0E08  120A  118A  270C  120A  158A  	fcall	stringdir
  2240  0E0D  160A  118A  2060  120A  158A  	fcall	_isdigit
  2241  0E12  1C03               	btfss	3,0
  2242  0E13  2E6E               	goto	l3464
  2243                           
  2244                           ;doprnt.c: 607: width = 0;
  2245  0E14  1683               	bsf	3,5	;RP0=1, select bank3
  2246  0E15  1703               	bsf	3,6	;RP1=1, select bank3
  2247  0E16  01BB               	clrf	sprintf@width^(0+384)
  2248  0E17  01BC               	clrf	(sprintf@width+1)^(0+384)
  2249  0E18                     l3454:	
  2250                           ;doprnt.c: 608: do {
  2251                           
  2252                           
  2253                           ;doprnt.c: 609: width *= 10;
  2254  0E18  300A               	movlw	10
  2255  0E19  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0E1B  00C9               	movwf	___wmul@multiplier^(0+128)
  2258  0E1C  3000               	movlw	0
  2259  0E1D  00CA               	movwf	(___wmul@multiplier^(0+128)+1)
  2260  0E1E  1683               	bsf	3,5	;RP0=1, select bank3
  2261  0E1F  1703               	bsf	3,6	;RP1=1, select bank3
  2262  0E20  083C               	movf	(sprintf@width+1)^(0+384),w
  2263  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0E23  01CC               	clrf	(___wmul@multiplicand+1)^(0+128)
  2266  0E24  07CC               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2267  0E25  1683               	bsf	3,5	;RP0=1, select bank3
  2268  0E26  1703               	bsf	3,6	;RP1=1, select bank3
  2269  0E27  083B               	movf	sprintf@width^(0+384),w
  2270  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2272  0E2A  01CB               	clrf	___wmul@multiplicand^(0+128)
  2273  0E2B  07CB               	addwf	___wmul@multiplicand^(0+128),f
  2274  0E2C  120A  118A  27DB  120A  158A  	fcall	___wmul
  2275  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0E32  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0E33  084A               	movf	(?___wmul+1)^(0+128),w
  2278  0E34  1683               	bsf	3,5	;RP0=1, select bank3
  2279  0E35  1703               	bsf	3,6	;RP1=1, select bank3
  2280  0E36  01BC               	clrf	(sprintf@width+1)^(0+384)
  2281  0E37  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2282  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0E3A  0849               	movf	?___wmul^(0+128),w
  2285  0E3B  1683               	bsf	3,5	;RP0=1, select bank3
  2286  0E3C  1703               	bsf	3,6	;RP1=1, select bank3
  2287  0E3D  01BB               	clrf	sprintf@width^(0+384)
  2288  0E3E  07BB               	addwf	sprintf@width^(0+384),f
  2289                           
  2290                           ;doprnt.c: 610: width += *f++ - '0';
  2291  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0E41  0857               	movf	sprintf@f^(0+128),w
  2294  0E42  0084               	movwf	4
  2295  0E43  120A  118A  270C  120A  158A  	fcall	stringdir
  2296  0E48  3ED0               	addlw	208
  2297  0E49  00DA               	movwf	??_sprintf^(0+128)
  2298  0E4A  30FF               	movlw	255
  2299  0E4B  1803               	skipnc
  2300  0E4C  3000               	movlw	0
  2301  0E4D  00DB               	movwf	(??_sprintf^(0+128)+1)
  2302  0E4E  085A               	movf	??_sprintf^(0+128),w
  2303  0E4F  1683               	bsf	3,5	;RP0=1, select bank3
  2304  0E50  1703               	bsf	3,6	;RP1=1, select bank3
  2305  0E51  07BB               	addwf	sprintf@width^(0+384),f
  2306  0E52  1803               	skipnc
  2307  0E53  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2308  0E54  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0E55  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0E56  085B               	movf	(??_sprintf+1)^(0+128),w
  2311  0E57  1683               	bsf	3,5	;RP0=1, select bank3
  2312  0E58  1703               	bsf	3,6	;RP1=1, select bank3
  2313  0E59  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2314  0E5A  3001               	movlw	1
  2315  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0E5D  00DA               	movwf	??_sprintf^(0+128)
  2318  0E5E  085A               	movf	??_sprintf^(0+128),w
  2319  0E5F  07D7               	addwf	sprintf@f^(0+128),f
  2320                           
  2321                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2322  0E60  0857               	movf	sprintf@f^(0+128),w
  2323  0E61  0084               	movwf	4
  2324  0E62  120A  118A  270C  120A  158A  	fcall	stringdir
  2325  0E67  160A  118A  2060  120A  158A  	fcall	_isdigit
  2326  0E6C  1803               	btfsc	3,0
  2327  0E6D  2E18               	goto	l3454
  2328  0E6E                     l3464:	
  2329                           ;doprnt.c: 831: }
  2330                           
  2331                           ;doprnt.c: 822: continue;
  2332                           
  2333                           ;doprnt.c: 811: default:
  2334                           
  2335                           ;doprnt.c: 707: case 'i':
  2336                           ;doprnt.c: 708: break;
  2337                           
  2338                           ;doprnt.c: 706: case 'd':
  2339                           
  2340                           ;doprnt.c: 647: goto alldone;
  2341                           
  2342                           ;doprnt.c: 646: case 0:
  2343                           
  2344                           ;doprnt.c: 617: }
  2345                           ;doprnt.c: 644: switch(c = *f++) {
  2346                           
  2347  0E6E  3001               	movlw	1
  2348  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0E71  07D7               	addwf	sprintf@f^(0+128),f
  2351  0E72  30FF               	movlw	-1
  2352  0E73  0757               	addwf	sprintf@f^(0+128),w
  2353  0E74  0084               	movwf	4
  2354  0E75  120A  118A  270C  120A  158A  	fcall	stringdir
  2355  0E7A  1683               	bsf	3,5	;RP0=1, select bank3
  2356  0E7B  1703               	bsf	3,6	;RP1=1, select bank3
  2357  0E7C  00BE               	movwf	sprintf@c^(0+384)
  2358                           
  2359                           ; Switch size 1, requested type "space"
  2360                           ; Number of cases is 3, Range of values is 0 to 105
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte           10     6 (average)
  2364                           ; jumptable            260     6 (fixed)
  2365                           ;	Chosen strategy is simple_byte
  2366  0E7D  3A00               	xorlw	0	; case 0
  2367  0E7E  1903               	skipnz
  2368  0E7F  2FF9               	goto	l3540
  2369  0E80  3A64               	xorlw	100	; case 100
  2370  0E81  1903               	skipnz
  2371  0E82  2E87               	goto	l3466
  2372  0E83  3A0D               	xorlw	13	; case 105
  2373  0E84  1903               	skipnz
  2374  0E85  2E87               	goto	l3466
  2375  0E86  2DC1               	goto	l3538
  2376  0E87                     l3466:	
  2377                           
  2378                           ;doprnt.c: 1262: {
  2379                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2380  0E87  1683               	bsf	3,5	;RP0=1, select bank3
  2381  0E88  1703               	bsf	3,6	;RP1=1, select bank3
  2382  0E89  0834               	movf	sprintf@ap^(0+384),w
  2383  0E8A  0084               	movwf	4
  2384  0E8B  1383               	bcf	3,7	;select IRP bank0
  2385  0E8C  0800               	movf	0,w
  2386  0E8D  00B6               	movwf	sprintf@_val^(0+384)
  2387  0E8E  0A84               	incf	4,f
  2388  0E8F  0800               	movf	0,w
  2389  0E90  00B7               	movwf	(sprintf@_val+1)^(0+384)
  2390  0E91  3002               	movlw	2
  2391  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  2392  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  2393  0E94  00DA               	movwf	??_sprintf^(0+128)
  2394  0E95  085A               	movf	??_sprintf^(0+128),w
  2395  0E96  1683               	bsf	3,5	;RP0=1, select bank3
  2396  0E97  1703               	bsf	3,6	;RP1=1, select bank3
  2397  0E98  07B4               	addwf	sprintf@ap^(0+384),f
  2398                           
  2399                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2400  0E99  1FB7               	btfss	(sprintf@_val+1)^(0+384),7
  2401  0E9A  2EA8               	goto	l3476
  2402                           
  2403                           ;doprnt.c: 1271: flag |= 0x03;
  2404  0E9B  3003               	movlw	3
  2405  0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  2407  0E9E  00DA               	movwf	??_sprintf^(0+128)
  2408  0E9F  085A               	movf	??_sprintf^(0+128),w
  2409  0EA0  1683               	bsf	3,5	;RP0=1, select bank3
  2410  0EA1  1703               	bsf	3,6	;RP1=1, select bank3
  2411  0EA2  04BA               	iorwf	sprintf@flag^(0+384),f
  2412                           
  2413                           ;doprnt.c: 1272: _val._val = -_val._val;
  2414  0EA3  09B6               	comf	sprintf@_val^(0+384),f
  2415  0EA4  09B7               	comf	(sprintf@_val+1)^(0+384),f
  2416  0EA5  0AB6               	incf	sprintf@_val^(0+384),f
  2417  0EA6  1903               	skipnz
  2418  0EA7  0AB7               	incf	(sprintf@_val+1)^(0+384),f
  2419  0EA8                     l3476:	
  2420                           
  2421                           ;doprnt.c: 1273: }
  2422                           ;doprnt.c: 1275: }
  2423                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2424  0EA8  01BE               	clrf	sprintf@c^(0+384)
  2425  0EA9  0ABE               	incf	sprintf@c^(0+384),f
  2426  0EAA  083E               	movf	sprintf@c^(0+384),w
  2427  0EAB  3A05               	xorlw	5
  2428  0EAC  1903               	btfsc	3,2
  2429  0EAD  2EDB               	goto	l3488
  2430  0EAE                     l3480:	
  2431                           
  2432                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2433  0EAE  083E               	movf	sprintf@c^(0+384),w
  2434  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0EB1  00DA               	movwf	??_sprintf^(0+128)
  2437  0EB2  075A               	addwf	??_sprintf^(0+128),w
  2438  0EB3  3E01               	addlw	low (_dpowers-__stringbase)
  2439  0EB4  0084               	movwf	4
  2440  0EB5  120A  118A  270C  120A  158A  	fcall	stringdir
  2441  0EBA  00DB               	movwf	(??_sprintf+1)^(0+128)
  2442  0EBB  120A  118A  270C  120A  158A  	fcall	stringdir
  2443  0EC0  00DC               	movwf	((??_sprintf+1)^(0+128)+1)
  2444  0EC1  085C               	movf	(??_sprintf+2)^(0+128),w
  2445  0EC2  1683               	bsf	3,5	;RP0=1, select bank3
  2446  0EC3  1703               	bsf	3,6	;RP1=1, select bank3
  2447  0EC4  0237               	subwf	(sprintf@_val+1)^(0+384),w
  2448  0EC5  1D03               	skipz
  2449  0EC6  2ECD               	goto	u4385
  2450  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0EC9  085B               	movf	(??_sprintf+1)^(0+128),w
  2453  0ECA  1683               	bsf	3,5	;RP0=1, select bank3
  2454  0ECB  1703               	bsf	3,6	;RP1=1, select bank3
  2455  0ECC  0236               	subwf	sprintf@_val^(0+384),w
  2456  0ECD                     u4385:	
  2457  0ECD  1C03               	btfss	3,0
  2458  0ECE  2EDB               	goto	l3488
  2459                           
  2460                           ;doprnt.c: 1316: break;
  2461  0ECF  3001               	movlw	1
  2462  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0ED2  00DA               	movwf	??_sprintf^(0+128)
  2465  0ED3  085A               	movf	??_sprintf^(0+128),w
  2466  0ED4  1683               	bsf	3,5	;RP0=1, select bank3
  2467  0ED5  1703               	bsf	3,6	;RP1=1, select bank3
  2468  0ED6  07BE               	addwf	sprintf@c^(0+384),f
  2469  0ED7  083E               	movf	sprintf@c^(0+384),w
  2470  0ED8  3A05               	xorlw	5
  2471  0ED9  1D03               	skipz
  2472  0EDA  2EAE               	goto	l3480
  2473  0EDB                     l3488:	
  2474                           
  2475                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2476  0EDB  083C               	movf	(sprintf@width+1)^(0+384),w
  2477  0EDC  043B               	iorwf	sprintf@width^(0+384),w
  2478  0EDD  1903               	skipnz
  2479  0EDE  2EE9               	goto	l497
  2480  0EDF  083A               	movf	sprintf@flag^(0+384),w
  2481  0EE0  3903               	andlw	3
  2482  0EE1  1903               	btfsc	3,2
  2483  0EE2  2EE9               	goto	l497
  2484                           
  2485                           ;doprnt.c: 1355: width--;
  2486  0EE3  30FF               	movlw	255
  2487  0EE4  07BB               	addwf	sprintf@width^(0+384),f
  2488  0EE5  1803               	skipnc
  2489  0EE6  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2490  0EE7  30FF               	movlw	255
  2491  0EE8  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2492  0EE9                     l497:	
  2493                           
  2494                           ;doprnt.c: 1390: if(width > c)
  2495  0EE9  083E               	movf	sprintf@c^(0+384),w
  2496  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0EEC  00DA               	movwf	??_sprintf^(0+128)
  2499  0EED  01DB               	clrf	(??_sprintf^(0+128)+1)
  2500  0EEE  1BDA               	btfsc	??_sprintf^(0+128),7
  2501  0EEF  03DB               	decf	(??_sprintf^(0+128)+1),f
  2502  0EF0  085B               	movf	(??_sprintf+1)^(0+128),w
  2503  0EF1  3A80               	xorlw	128
  2504  0EF2  00DC               	movwf	(??_sprintf+2)^(0+128)
  2505  0EF3  1683               	bsf	3,5	;RP0=1, select bank3
  2506  0EF4  1703               	bsf	3,6	;RP1=1, select bank3
  2507  0EF5  083C               	movf	(sprintf@width+1)^(0+384),w
  2508  0EF6  3A80               	xorlw	128
  2509  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0EF9  025C               	subwf	(??_sprintf+2)^(0+128),w
  2512  0EFA  1D03               	skipz
  2513  0EFB  2F02               	goto	u4425
  2514  0EFC  1683               	bsf	3,5	;RP0=1, select bank3
  2515  0EFD  1703               	bsf	3,6	;RP1=1, select bank3
  2516  0EFE  083B               	movf	sprintf@width^(0+384),w
  2517  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0F01  025A               	subwf	??_sprintf^(0+128),w
  2520  0F02                     u4425:	
  2521  0F02  1803               	skipnc
  2522  0F03  2F1A               	goto	l3496
  2523                           
  2524                           ;doprnt.c: 1391: width -= c;
  2525  0F04  1683               	bsf	3,5	;RP0=1, select bank3
  2526  0F05  1703               	bsf	3,6	;RP1=1, select bank3
  2527  0F06  083E               	movf	sprintf@c^(0+384),w
  2528  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0F09  00DA               	movwf	??_sprintf^(0+128)
  2531  0F0A  01DB               	clrf	(??_sprintf^(0+128)+1)
  2532  0F0B  1BDA               	btfsc	??_sprintf^(0+128),7
  2533  0F0C  03DB               	decf	(??_sprintf^(0+128)+1),f
  2534  0F0D  085A               	movf	??_sprintf^(0+128),w
  2535  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2536  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2537  0F10  02BB               	subwf	sprintf@width^(0+384),f
  2538  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0F13  085B               	movf	(??_sprintf+1)^(0+128),w
  2541  0F14  1683               	bsf	3,5	;RP0=1, select bank3
  2542  0F15  1703               	bsf	3,6	;RP1=1, select bank3
  2543  0F16  1C03               	skipc
  2544  0F17  03BC               	decf	(sprintf@width+1)^(0+384),f
  2545  0F18  02BC               	subwf	(sprintf@width+1)^(0+384),f
  2546  0F19  2F1E               	goto	l3498
  2547  0F1A                     l3496:	
  2548                           
  2549                           ;doprnt.c: 1392: else
  2550                           ;doprnt.c: 1393: width = 0;
  2551  0F1A  1683               	bsf	3,5	;RP0=1, select bank3
  2552  0F1B  1703               	bsf	3,6	;RP1=1, select bank3
  2553  0F1C  01BB               	clrf	sprintf@width^(0+384)
  2554  0F1D  01BC               	clrf	(sprintf@width+1)^(0+384)
  2555  0F1E                     l3498:	
  2556                           
  2557                           ;doprnt.c: 1396: if(flag & 0x04) {
  2558  0F1E  1D3A               	btfss	sprintf@flag^(0+384),2
  2559  0F1F  2F55               	goto	l3514
  2560                           
  2561                           ;doprnt.c: 1401: if(flag & 0x03)
  2562  0F20  083A               	movf	sprintf@flag^(0+384),w
  2563  0F21  3903               	andlw	3
  2564  0F22  1903               	btfsc	3,2
  2565  0F23  2F37               	goto	l3506
  2566                           
  2567                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2568  0F24  302D               	movlw	45
  2569  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0F27  00DA               	movwf	??_sprintf^(0+128)
  2572  0F28  1683               	bsf	3,5	;RP0=1, select bank3
  2573  0F29  1703               	bsf	3,6	;RP1=1, select bank3
  2574  0F2A  083D               	movf	sprintf@sp^(0+384),w
  2575  0F2B  0084               	movwf	4
  2576  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  2578  0F2E  085A               	movf	??_sprintf^(0+128),w
  2579  0F2F  1783               	bsf	3,7	;select IRP bank2
  2580  0F30  0080               	movwf	0
  2581  0F31  3001               	movlw	1
  2582  0F32  00DA               	movwf	??_sprintf^(0+128)
  2583  0F33  085A               	movf	??_sprintf^(0+128),w
  2584  0F34  1683               	bsf	3,5	;RP0=1, select bank3
  2585  0F35  1703               	bsf	3,6	;RP1=1, select bank3
  2586  0F36  07BD               	addwf	sprintf@sp^(0+384),f
  2587  0F37                     l3506:	
  2588                           
  2589                           ;doprnt.c: 1424: if(width)
  2590  0F37  083C               	movf	(sprintf@width+1)^(0+384),w
  2591  0F38  043B               	iorwf	sprintf@width^(0+384),w
  2592  0F39  1903               	skipnz
  2593  0F3A  2F8D               	goto	l3528
  2594                           
  2595                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2596                           
  2597                           ;doprnt.c: 1425: do
  2598  0F3B  3030               	movlw	48
  2599  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2601  0F3E  00DA               	movwf	??_sprintf^(0+128)
  2602  0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2603  0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2604  0F41  083D               	movf	sprintf@sp^(0+384),w
  2605  0F42  0084               	movwf	4
  2606  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0F45  085A               	movf	??_sprintf^(0+128),w
  2609  0F46  1783               	bsf	3,7	;select IRP bank2
  2610  0F47  0080               	movwf	0
  2611  0F48  3001               	movlw	1
  2612  0F49  00DA               	movwf	??_sprintf^(0+128)
  2613  0F4A  085A               	movf	??_sprintf^(0+128),w
  2614  0F4B  1683               	bsf	3,5	;RP0=1, select bank3
  2615  0F4C  1703               	bsf	3,6	;RP1=1, select bank3
  2616  0F4D  07BD               	addwf	sprintf@sp^(0+384),f
  2617                           
  2618                           ;doprnt.c: 1427: while(--width);
  2619  0F4E  30FF               	movlw	255
  2620  0F4F  07BB               	addwf	sprintf@width^(0+384),f
  2621  0F50  1803               	skipnc
  2622  0F51  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2623  0F52  30FF               	movlw	255
  2624  0F53  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2625  0F54  2F37               	goto	l3506
  2626  0F55                     l3514:	
  2627                           ;doprnt.c: 1429: } else
  2628                           
  2629                           
  2630                           ;doprnt.c: 1431: {
  2631                           ;doprnt.c: 1433: if(width
  2632                           ;doprnt.c: 1437: )
  2633  0F55  083C               	movf	(sprintf@width+1)^(0+384),w
  2634  0F56  043B               	iorwf	sprintf@width^(0+384),w
  2635  0F57  1903               	skipnz
  2636  0F58  2F76               	goto	l3522
  2637  0F59                     l3516:	
  2638                           ;doprnt.c: 1438: do
  2639                           
  2640                           
  2641                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2642  0F59  3020               	movlw	32
  2643  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2645  0F5C  00DA               	movwf	??_sprintf^(0+128)
  2646  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  2647  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  2648  0F5F  083D               	movf	sprintf@sp^(0+384),w
  2649  0F60  0084               	movwf	4
  2650  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0F63  085A               	movf	??_sprintf^(0+128),w
  2653  0F64  1783               	bsf	3,7	;select IRP bank2
  2654  0F65  0080               	movwf	0
  2655  0F66  3001               	movlw	1
  2656  0F67  00DA               	movwf	??_sprintf^(0+128)
  2657  0F68  085A               	movf	??_sprintf^(0+128),w
  2658  0F69  1683               	bsf	3,5	;RP0=1, select bank3
  2659  0F6A  1703               	bsf	3,6	;RP1=1, select bank3
  2660  0F6B  07BD               	addwf	sprintf@sp^(0+384),f
  2661                           
  2662                           ;doprnt.c: 1440: while(--width);
  2663  0F6C  30FF               	movlw	255
  2664  0F6D  07BB               	addwf	sprintf@width^(0+384),f
  2665  0F6E  1803               	skipnc
  2666  0F6F  0ABC               	incf	(sprintf@width+1)^(0+384),f
  2667  0F70  30FF               	movlw	255
  2668  0F71  07BC               	addwf	(sprintf@width+1)^(0+384),f
  2669  0F72  083C               	movf	(sprintf@width+1)^(0+384),w
  2670  0F73  043B               	iorwf	sprintf@width^(0+384),w
  2671  0F74  1D03               	skipz
  2672  0F75  2F59               	goto	l3516
  2673  0F76                     l3522:	
  2674                           
  2675                           ;doprnt.c: 1447: if(flag & 0x03)
  2676  0F76  083A               	movf	sprintf@flag^(0+384),w
  2677  0F77  3903               	andlw	3
  2678  0F78  1903               	btfsc	3,2
  2679  0F79  2F8D               	goto	l3528
  2680                           
  2681                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2682  0F7A  302D               	movlw	45
  2683  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0F7D  00DA               	movwf	??_sprintf^(0+128)
  2686  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2687  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2688  0F80  083D               	movf	sprintf@sp^(0+384),w
  2689  0F81  0084               	movwf	4
  2690  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0F84  085A               	movf	??_sprintf^(0+128),w
  2693  0F85  1783               	bsf	3,7	;select IRP bank2
  2694  0F86  0080               	movwf	0
  2695  0F87  3001               	movlw	1
  2696  0F88  00DA               	movwf	??_sprintf^(0+128)
  2697  0F89  085A               	movf	??_sprintf^(0+128),w
  2698  0F8A  1683               	bsf	3,5	;RP0=1, select bank3
  2699  0F8B  1703               	bsf	3,6	;RP1=1, select bank3
  2700  0F8C  07BD               	addwf	sprintf@sp^(0+384),f
  2701  0F8D                     l3528:	
  2702                           
  2703                           ;doprnt.c: 1478: }
  2704                           ;doprnt.c: 1481: prec = c;
  2705  0F8D  083E               	movf	sprintf@c^(0+384),w
  2706  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0F90  00DA               	movwf	??_sprintf^(0+128)
  2709  0F91  085A               	movf	??_sprintf^(0+128),w
  2710  0F92  1683               	bsf	3,5	;RP0=1, select bank3
  2711  0F93  1703               	bsf	3,6	;RP1=1, select bank3
  2712  0F94  00B5               	movwf	sprintf@prec^(0+384)
  2713  0F95                     l3536:	
  2714                           ;doprnt.c: 1483: while(prec--) {
  2715                           
  2716  0F95  30FF               	movlw	-1
  2717  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2719  0F98  00DA               	movwf	??_sprintf^(0+128)
  2720  0F99  085A               	movf	??_sprintf^(0+128),w
  2721  0F9A  1683               	bsf	3,5	;RP0=1, select bank3
  2722  0F9B  1703               	bsf	3,6	;RP1=1, select bank3
  2723  0F9C  07B5               	addwf	sprintf@prec^(0+384),f
  2724  0F9D  0835               	movf	sprintf@prec^(0+384),w
  2725  0F9E  3AFF               	xorlw	-1
  2726  0F9F  1903               	btfsc	3,2
  2727  0FA0  2DC1               	goto	l3538
  2728                           
  2729                           ;doprnt.c: 1487: {
  2730                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2731  0FA1  300A               	movlw	10
  2732  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0FA4  00D1               	movwf	___lwmod@divisor^(0+128)
  2735  0FA5  3000               	movlw	0
  2736  0FA6  00D2               	movwf	(___lwmod@divisor^(0+128)+1)
  2737  0FA7  1683               	bsf	3,5	;RP0=1, select bank3
  2738  0FA8  1703               	bsf	3,6	;RP1=1, select bank3
  2739  0FA9  0835               	movf	sprintf@prec^(0+384),w
  2740  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  2741  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  2742  0FAC  00DA               	movwf	??_sprintf^(0+128)
  2743  0FAD  075A               	addwf	??_sprintf^(0+128),w
  2744  0FAE  3E01               	addlw	low (_dpowers-__stringbase)
  2745  0FAF  0084               	movwf	4
  2746  0FB0  120A  118A  270C  120A  158A  	fcall	stringdir
  2747  0FB5  00C9               	movwf	___lwdiv@divisor^(0+128)
  2748  0FB6  120A  118A  270C  120A  158A  	fcall	stringdir
  2749  0FBB  00CA               	movwf	(___lwdiv@divisor+1)^(0+128)
  2750  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  2751  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  2752  0FBE  0837               	movf	(sprintf@_val+1)^(0+384),w
  2753  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2754  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2755  0FC1  01CC               	clrf	(___lwdiv@dividend+1)^(0+128)
  2756  0FC2  07CC               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2757  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2758  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2759  0FC5  0836               	movf	sprintf@_val^(0+384),w
  2760  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0FC8  01CB               	clrf	___lwdiv@dividend^(0+128)
  2763  0FC9  07CB               	addwf	___lwdiv@dividend^(0+128),f
  2764  0FCA  160A  118A  22E3  120A  158A  	fcall	___lwdiv
  2765  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0FD1  084A               	movf	(?___lwdiv+1)^(0+128),w
  2768  0FD2  01D4               	clrf	(___lwmod@dividend+1)^(0+128)
  2769  0FD3  07D4               	addwf	(___lwmod@dividend+1)^(0+128),f
  2770  0FD4  0849               	movf	?___lwdiv^(0+128),w
  2771  0FD5  01D3               	clrf	___lwmod@dividend^(0+128)
  2772  0FD6  07D3               	addwf	___lwmod@dividend^(0+128),f
  2773  0FD7  160A  118A  226F  120A  158A  	fcall	___lwmod
  2774  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2776  0FDE  0851               	movf	?___lwmod^(0+128),w
  2777  0FDF  3E30               	addlw	48
  2778  0FE0  00DB               	movwf	(??_sprintf+1)^(0+128)
  2779  0FE1  085B               	movf	(??_sprintf+1)^(0+128),w
  2780  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  2781  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  2782  0FE4  00BE               	movwf	sprintf@c^(0+384)
  2783                           
  2784                           ;doprnt.c: 1532: }
  2785                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2786  0FE5  083E               	movf	sprintf@c^(0+384),w
  2787  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0FE8  00DA               	movwf	??_sprintf^(0+128)
  2790  0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  2791  0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  2792  0FEB  083D               	movf	sprintf@sp^(0+384),w
  2793  0FEC  0084               	movwf	4
  2794  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  2796  0FEF  085A               	movf	??_sprintf^(0+128),w
  2797  0FF0  1783               	bsf	3,7	;select IRP bank2
  2798  0FF1  0080               	movwf	0
  2799  0FF2  3001               	movlw	1
  2800  0FF3  00DA               	movwf	??_sprintf^(0+128)
  2801  0FF4  085A               	movf	??_sprintf^(0+128),w
  2802  0FF5  1683               	bsf	3,5	;RP0=1, select bank3
  2803  0FF6  1703               	bsf	3,6	;RP1=1, select bank3
  2804  0FF7  07BD               	addwf	sprintf@sp^(0+384),f
  2805  0FF8  2F95               	goto	l3536
  2806  0FF9                     l3540:	
  2807                           ;doprnt.c: 1534: }
  2808                           ;doprnt.c: 1542: }
  2809                           ;doprnt.c: 1544: alldone:
  2810                           
  2811                           
  2812                           ;doprnt.c: 1547: *sp = 0;
  2813  0FF9  1683               	bsf	3,5	;RP0=1, select bank3
  2814  0FFA  1703               	bsf	3,6	;RP1=1, select bank3
  2815  0FFB  083D               	movf	sprintf@sp^(0+384),w
  2816  0FFC  0084               	movwf	4
  2817  0FFD  1783               	bsf	3,7	;select IRP bank2
  2818  0FFE  0180               	clrf	0
  2819  0FFF  0008               	return
  2820  1000                     __end_of_sprintf:	
  2821                           ;doprnt.c: 1549: return 0;
  2822                           ;	Return value of _sprintf is never used
  2823                           
  2824                           
  2825                           	psect	text2
  2826  1060                     __ptext2:	
  2827 ;; *************** function _isdigit *****************
  2828 ;; Defined at:
  2829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  c               1    wreg     unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  c               1    5[BANK1 ] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       2       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       2       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    5
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_sprintf
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _isdigit
  2859  1060                     _isdigit:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2863                           ;isdigit@c stored from wreg
  2864  1060  1683               	bsf	3,5	;RP0=1, select bank1
  2865  1061  1303               	bcf	3,6	;RP1=0, select bank1
  2866  1062  00CA               	movwf	isdigit@c^(0+128)
  2867  1063  01C9               	clrf	_isdigit$1449^(0+128)
  2868  1064  303A               	movlw	58
  2869  1065  024A               	subwf	isdigit@c^(0+128),w
  2870  1066  1803               	skipnc
  2871  1067  286E               	goto	l3370
  2872  1068  3030               	movlw	48
  2873  1069  024A               	subwf	isdigit@c^(0+128),w
  2874  106A  1C03               	skipc
  2875  106B  286E               	goto	l3370
  2876  106C  01C9               	clrf	_isdigit$1449^(0+128)
  2877  106D  0AC9               	incf	_isdigit$1449^(0+128),f
  2878  106E                     l3370:	
  2879  106E  0C49               	rrf	_isdigit$1449^(0+128),w
  2880  106F  0008               	return
  2881  1070                     __end_of_isdigit:	
  2882                           
  2883                           	psect	text3
  2884  07DB                     __ptext3:	
  2885 ;; *************** function ___wmul *****************
  2886 ;; Defined at:
  2887 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  multiplier      2    4[BANK1 ] unsigned int 
  2890 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  product         2    8[BANK1 ] unsigned int 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    4[BANK1 ] unsigned int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       4       0       0
  2903 ;;      Locals:         0       0       2       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       6       0       0
  2906 ;;Total ram usage:        6 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    5
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_sprintf
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function ___wmul
  2918  07DB                     ___wmul:	
  2919                           
  2920                           ;incstack = 0
  2921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2922  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  2923  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  2924  07DD  01CD               	clrf	___wmul@product^(0+128)
  2925  07DE  01CE               	clrf	(___wmul@product+1)^(0+128)
  2926  07DF                     l3376:	
  2927  07DF  1C49               	btfss	___wmul@multiplier^(0+128),0
  2928  07E0  2FE7               	goto	l598
  2929  07E1  084B               	movf	___wmul@multiplicand^(0+128),w
  2930  07E2  07CD               	addwf	___wmul@product^(0+128),f
  2931  07E3  1803               	skipnc
  2932  07E4  0ACE               	incf	(___wmul@product+1)^(0+128),f
  2933  07E5  084C               	movf	(___wmul@multiplicand+1)^(0+128),w
  2934  07E6  07CE               	addwf	(___wmul@product+1)^(0+128),f
  2935  07E7                     l598:	
  2936  07E7  3001               	movlw	1
  2937  07E8                     u4175:	
  2938  07E8  1003               	clrc
  2939  07E9  0DCB               	rlf	___wmul@multiplicand^(0+128),f
  2940  07EA  0DCC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2941  07EB  3EFF               	addlw	-1
  2942  07EC  1D03               	skipz
  2943  07ED  2FE8               	goto	u4175
  2944  07EE  3001               	movlw	1
  2945  07EF                     u4185:	
  2946  07EF  1003               	clrc
  2947  07F0  0CCA               	rrf	(___wmul@multiplier+1)^(0+128),f
  2948  07F1  0CC9               	rrf	___wmul@multiplier^(0+128),f
  2949  07F2  3EFF               	addlw	-1
  2950  07F3  1D03               	skipz
  2951  07F4  2FEF               	goto	u4185
  2952  07F5  084A               	movf	(___wmul@multiplier+1)^(0+128),w
  2953  07F6  0449               	iorwf	___wmul@multiplier^(0+128),w
  2954  07F7  1D03               	skipz
  2955  07F8  2FDF               	goto	l3376
  2956  07F9  084E               	movf	(___wmul@product+1)^(0+128),w
  2957  07FA  01CA               	clrf	(?___wmul+1)^(0+128)
  2958  07FB  07CA               	addwf	(?___wmul+1)^(0+128),f
  2959  07FC  084D               	movf	___wmul@product^(0+128),w
  2960  07FD  01C9               	clrf	?___wmul^(0+128)
  2961  07FE  07C9               	addwf	?___wmul^(0+128),f
  2962  07FF  0008               	return
  2963  0800                     __end_of___wmul:	
  2964                           
  2965                           	psect	text4
  2966  126F                     __ptext4:	
  2967 ;; *************** function ___lwmod *****************
  2968 ;; Defined at:
  2969 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  divisor         2   12[BANK1 ] unsigned int 
  2972 ;;  dividend        2   14[BANK1 ] unsigned int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  counter         1   17[BANK1 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   12[BANK1 ] unsigned int 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       4       0       0
  2985 ;;      Locals:         0       0       1       0       0
  2986 ;;      Temps:          0       0       1       0       0
  2987 ;;      Totals:         0       0       6       0       0
  2988 ;;Total ram usage:        6 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    5
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_sprintf
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___lwmod
  3000  126F                     ___lwmod:	
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3004  126F  1683               	bsf	3,5	;RP0=1, select bank1
  3005  1270  1303               	bcf	3,6	;RP1=0, select bank1
  3006  1271  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  3007  1272  0451               	iorwf	___lwmod@divisor^(0+128),w
  3008  1273  1903               	skipnz
  3009  1274  2A9E               	goto	l3430
  3010  1275  01D6               	clrf	___lwmod@counter^(0+128)
  3011  1276  0AD6               	incf	___lwmod@counter^(0+128),f
  3012  1277                     l3420:	
  3013  1277  1BD2               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3014  1278  2A85               	goto	l3422
  3015  1279  3001               	movlw	1
  3016  127A                     u4285:	
  3017  127A  1003               	clrc
  3018  127B  0DD1               	rlf	___lwmod@divisor^(0+128),f
  3019  127C  0DD2               	rlf	(___lwmod@divisor+1)^(0+128),f
  3020  127D  3EFF               	addlw	-1
  3021  127E  1D03               	skipz
  3022  127F  2A7A               	goto	u4285
  3023  1280  3001               	movlw	1
  3024  1281  00D5               	movwf	??___lwmod^(0+128)
  3025  1282  0855               	movf	??___lwmod^(0+128),w
  3026  1283  07D6               	addwf	___lwmod@counter^(0+128),f
  3027  1284  2A77               	goto	l3420
  3028  1285                     l3422:	
  3029  1285  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  3030  1286  0254               	subwf	(___lwmod@dividend+1)^(0+128),w
  3031  1287  1D03               	skipz
  3032  1288  2A8B               	goto	u4305
  3033  1289  0851               	movf	___lwmod@divisor^(0+128),w
  3034  128A  0253               	subwf	___lwmod@dividend^(0+128),w
  3035  128B                     u4305:	
  3036  128B  1C03               	skipc
  3037  128C  2A93               	goto	l3426
  3038  128D  0851               	movf	___lwmod@divisor^(0+128),w
  3039  128E  02D3               	subwf	___lwmod@dividend^(0+128),f
  3040  128F  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  3041  1290  1C03               	skipc
  3042  1291  03D4               	decf	(___lwmod@dividend+1)^(0+128),f
  3043  1292  02D4               	subwf	(___lwmod@dividend+1)^(0+128),f
  3044  1293                     l3426:	
  3045  1293  3001               	movlw	1
  3046  1294                     u4315:	
  3047  1294  1003               	clrc
  3048  1295  0CD2               	rrf	(___lwmod@divisor+1)^(0+128),f
  3049  1296  0CD1               	rrf	___lwmod@divisor^(0+128),f
  3050  1297  3EFF               	addlw	-1
  3051  1298  1D03               	skipz
  3052  1299  2A94               	goto	u4315
  3053  129A  3001               	movlw	1
  3054  129B  02D6               	subwf	___lwmod@counter^(0+128),f
  3055  129C  1D03               	btfss	3,2
  3056  129D  2A85               	goto	l3422
  3057  129E                     l3430:	
  3058  129E  0854               	movf	(___lwmod@dividend+1)^(0+128),w
  3059  129F  01D2               	clrf	(?___lwmod+1)^(0+128)
  3060  12A0  07D2               	addwf	(?___lwmod+1)^(0+128),f
  3061  12A1  0853               	movf	___lwmod@dividend^(0+128),w
  3062  12A2  01D1               	clrf	?___lwmod^(0+128)
  3063  12A3  07D1               	addwf	?___lwmod^(0+128),f
  3064  12A4  0008               	return
  3065  12A5                     __end_of___lwmod:	
  3066                           
  3067                           	psect	text5
  3068  12E3                     __ptext5:	
  3069 ;; *************** function ___lwdiv *****************
  3070 ;; Defined at:
  3071 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  divisor         2    4[BANK1 ] unsigned int 
  3074 ;;  dividend        2    6[BANK1 ] unsigned int 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  quotient        2   10[BANK1 ] unsigned int 
  3077 ;;  counter         1    9[BANK1 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  2    4[BANK1 ] unsigned int 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         0       0       4       0       0
  3088 ;;      Locals:         0       0       3       0       0
  3089 ;;      Temps:          0       0       1       0       0
  3090 ;;      Totals:         0       0       8       0       0
  3091 ;;Total ram usage:        8 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    5
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_sprintf
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function ___lwdiv
  3103  12E3                     ___lwdiv:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3107  12E3  1683               	bsf	3,5	;RP0=1, select bank1
  3108  12E4  1303               	bcf	3,6	;RP1=0, select bank1
  3109  12E5  01CF               	clrf	___lwdiv@quotient^(0+128)
  3110  12E6  01D0               	clrf	(___lwdiv@quotient+1)^(0+128)
  3111  12E7  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  3112  12E8  0449               	iorwf	___lwdiv@divisor^(0+128),w
  3113  12E9  1903               	skipnz
  3114  12EA  2B1C               	goto	l3408
  3115  12EB  01CE               	clrf	___lwdiv@counter^(0+128)
  3116  12EC  0ACE               	incf	___lwdiv@counter^(0+128),f
  3117  12ED                     l3396:	
  3118  12ED  1BCA               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3119  12EE  2AFB               	goto	l3398
  3120  12EF  3001               	movlw	1
  3121  12F0                     u4215:	
  3122  12F0  1003               	clrc
  3123  12F1  0DC9               	rlf	___lwdiv@divisor^(0+128),f
  3124  12F2  0DCA               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3125  12F3  3EFF               	addlw	-1
  3126  12F4  1D03               	skipz
  3127  12F5  2AF0               	goto	u4215
  3128  12F6  3001               	movlw	1
  3129  12F7  00CD               	movwf	??___lwdiv^(0+128)
  3130  12F8  084D               	movf	??___lwdiv^(0+128),w
  3131  12F9  07CE               	addwf	___lwdiv@counter^(0+128),f
  3132  12FA  2AED               	goto	l3396
  3133  12FB                     l3398:	
  3134  12FB  3001               	movlw	1
  3135  12FC                     u4235:	
  3136  12FC  1003               	clrc
  3137  12FD  0DCF               	rlf	___lwdiv@quotient^(0+128),f
  3138  12FE  0DD0               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3139  12FF  3EFF               	addlw	-1
  3140  1300  1D03               	skipz
  3141  1301  2AFC               	goto	u4235
  3142  1302  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  3143  1303  024C               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3144  1304  1D03               	skipz
  3145  1305  2B08               	goto	u4245
  3146  1306  0849               	movf	___lwdiv@divisor^(0+128),w
  3147  1307  024B               	subwf	___lwdiv@dividend^(0+128),w
  3148  1308                     u4245:	
  3149  1308  1C03               	skipc
  3150  1309  2B11               	goto	l3404
  3151  130A  0849               	movf	___lwdiv@divisor^(0+128),w
  3152  130B  02CB               	subwf	___lwdiv@dividend^(0+128),f
  3153  130C  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  3154  130D  1C03               	skipc
  3155  130E  03CC               	decf	(___lwdiv@dividend+1)^(0+128),f
  3156  130F  02CC               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3157  1310  144F               	bsf	___lwdiv@quotient^(0+128),0
  3158  1311                     l3404:	
  3159  1311  3001               	movlw	1
  3160  1312                     u4255:	
  3161  1312  1003               	clrc
  3162  1313  0CCA               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3163  1314  0CC9               	rrf	___lwdiv@divisor^(0+128),f
  3164  1315  3EFF               	addlw	-1
  3165  1316  1D03               	skipz
  3166  1317  2B12               	goto	u4255
  3167  1318  3001               	movlw	1
  3168  1319  02CE               	subwf	___lwdiv@counter^(0+128),f
  3169  131A  1D03               	btfss	3,2
  3170  131B  2AFB               	goto	l3398
  3171  131C                     l3408:	
  3172  131C  0850               	movf	(___lwdiv@quotient+1)^(0+128),w
  3173  131D  01CA               	clrf	(?___lwdiv+1)^(0+128)
  3174  131E  07CA               	addwf	(?___lwdiv+1)^(0+128),f
  3175  131F  084F               	movf	___lwdiv@quotient^(0+128),w
  3176  1320  01C9               	clrf	?___lwdiv^(0+128)
  3177  1321  07C9               	addwf	?___lwdiv^(0+128),f
  3178  1322  0008               	return
  3179  1323                     __end_of___lwdiv:	
  3180                           
  3181                           	psect	text6
  3182  123E                     __ptext6:	
  3183 ;; *************** function _USART_WriteString *****************
  3184 ;; Defined at:
  3185 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3188 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3189 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3190 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3191 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       0       2       0       0
  3204 ;;      Locals:         0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0
  3206 ;;      Totals:         0       0       2       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    6
  3210 ;; This function calls:
  3211 ;;		_USART_WriteChar
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _USART_WriteString
  3219  123E                     _USART_WriteString:	
  3220  123E                     l2896:	
  3221                           ;usart.c: 54: while(*str != '\0')
  3222                           
  3223                           ;incstack = 0
  3224                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3225                           
  3226  123E  1683               	bsf	3,5	;RP0=1, select bank1
  3227  123F  1303               	bcf	3,6	;RP1=0, select bank1
  3228  1240  084B               	movf	(USART_WriteString@str+1)^(0+128),w
  3229  1241  1283               	bcf	3,5	;RP0=0, select bank0
  3230  1242  1303               	bcf	3,6	;RP1=0, select bank0
  3231  1243  00FF               	movwf	127
  3232  1244  1683               	bsf	3,5	;RP0=1, select bank1
  3233  1245  1303               	bcf	3,6	;RP1=0, select bank1
  3234  1246  084A               	movf	USART_WriteString@str^(0+128),w
  3235  1247  0084               	movwf	4
  3236  1248  1283               	bcf	3,5	;RP0=0, select bank0
  3237  1249  1303               	bcf	3,6	;RP1=0, select bank0
  3238  124A  120A  118A  2702  160A  118A  	fcall	stringtab
  3239  124F  3800               	iorlw	0
  3240  1250  1903               	btfsc	3,2
  3241  1251  0008               	return
  3242                           
  3243                           ;usart.c: 55: {
  3244                           ;usart.c: 56: USART_WriteChar(*str);
  3245  1252  1683               	bsf	3,5	;RP0=1, select bank1
  3246  1253  1303               	bcf	3,6	;RP1=0, select bank1
  3247  1254  084B               	movf	(USART_WriteString@str+1)^(0+128),w
  3248  1255  1283               	bcf	3,5	;RP0=0, select bank0
  3249  1256  1303               	bcf	3,6	;RP1=0, select bank0
  3250  1257  00FF               	movwf	127
  3251  1258  1683               	bsf	3,5	;RP0=1, select bank1
  3252  1259  1303               	bcf	3,6	;RP1=0, select bank1
  3253  125A  084A               	movf	USART_WriteString@str^(0+128),w
  3254  125B  0084               	movwf	4
  3255  125C  1283               	bcf	3,5	;RP0=0, select bank0
  3256  125D  1303               	bcf	3,6	;RP1=0, select bank0
  3257  125E  120A  118A  2702  160A  118A  	fcall	stringtab
  3258  1263  120A  158A  2000  160A  118A  	fcall	_USART_WriteChar
  3259                           
  3260                           ;usart.c: 57: str++;
  3261  1268  3001               	movlw	1
  3262  1269  1683               	bsf	3,5	;RP0=1, select bank1
  3263  126A  1303               	bcf	3,6	;RP1=0, select bank1
  3264  126B  07CA               	addwf	USART_WriteString@str^(0+128),f
  3265  126C  1803               	skipnc
  3266  126D  0ACB               	incf	(USART_WriteString@str+1)^(0+128),f
  3267  126E  2A3E               	goto	l2896
  3268  126F                     __end_of_USART_WriteString:	
  3269                           
  3270                           	psect	text7
  3271  0800                     __ptext7:	
  3272 ;; *************** function _USART_WriteChar *****************
  3273 ;; Defined at:
  3274 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  byte            1    wreg     unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  byte            1    4[BANK1 ] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       0       0       0       0
  3289 ;;      Locals:         0       0       1       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         0       0       1       0       0
  3292 ;;Total ram usage:        1 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    5
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_USART_WriteString
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _USART_WriteChar
  3304  0800                     _USART_WriteChar:	
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _USART_WriteChar: [wreg]
  3308                           ;USART_WriteChar@byte stored from wreg
  3309  0800  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0801  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0802  00C9               	movwf	USART_WriteChar@byte^(0+128)
  3312  0803                     l227:	
  3313                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3314                           
  3315  0803  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0804  1E0C               	btfss	12,4	;volatile
  3317  0805  2803               	goto	l227
  3318                           
  3319                           ;usart.c: 47: TXREG = byte;
  3320  0806  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0807  1303               	bcf	3,6	;RP1=0, select bank1
  3322  0808  0849               	movf	USART_WriteChar@byte^(0+128),w
  3323  0809  1283               	bcf	3,5	;RP0=0, select bank0
  3324  080A  1303               	bcf	3,6	;RP1=0, select bank0
  3325  080B  0099               	movwf	25	;volatile
  3326  080C  0008               	return
  3327  080D                     __end_of_USART_WriteChar:	
  3328                           
  3329                           	psect	text8
  3330  080D                     __ptext8:	
  3331 ;; *************** function _USART_Init *****************
  3332 ;; Defined at:
  3333 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  BaudRate        4   19[BANK1 ] long 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       4       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       4       0       0
  3350 ;;      Totals:         0       0       8       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    6
  3354 ;; This function calls:
  3355 ;;		___aldiv
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _USART_Init
  3363  080D                     _USART_Init:	
  3364                           
  3365                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3369  080D  1683               	bsf	3,5	;RP0=1, select bank1
  3370  080E  1303               	bcf	3,6	;RP1=0, select bank1
  3371  080F  0858               	movf	USART_Init@BaudRate^(0+128),w
  3372  0810  00DC               	movwf	??_USART_Init^(0+128)
  3373  0811  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3374  0812  00DD               	movwf	(??_USART_Init^(0+128)+1)
  3375  0813  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3376  0814  00DE               	movwf	(??_USART_Init^(0+128)+2)
  3377  0815  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3378  0816  00DF               	movwf	(??_USART_Init^(0+128)+3)
  3379  0817  3004               	movlw	4
  3380  0818                     u3625:	
  3381  0818  1003               	clrc
  3382  0819  0DDC               	rlf	??_USART_Init^(0+128),f
  3383  081A  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  3384  081B  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  3385  081C  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  3386  081D  3EFF               	addlw	-1
  3387  081E  1D03               	skipz
  3388  081F  2818               	goto	u3625
  3389  0820  085F               	movf	(??_USART_Init+3)^(0+128),w
  3390  0821  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  3391  0822  085E               	movf	(??_USART_Init+2)^(0+128),w
  3392  0823  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  3393  0824  085D               	movf	(??_USART_Init+1)^(0+128),w
  3394  0825  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  3395  0826  085C               	movf	??_USART_Init^(0+128),w
  3396  0827  00C9               	movwf	___aldiv@divisor^(0+128)
  3397  0828  3001               	movlw	1
  3398  0829  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  3399  082A  3019               	movlw	25
  3400  082B  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  3401  082C  3040               	movlw	64
  3402  082D  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  3403  082E  3000               	movlw	0
  3404  082F  00CD               	movwf	___aldiv@dividend^(0+128)
  3405  0830  160A  118A  24DF   	fcall	___aldiv
  3406  0833  1683               	bsf	3,5	;RP0=1, select bank1
  3407  0834  1303               	bcf	3,6	;RP1=0, select bank1
  3408  0835  0849               	movf	?___aldiv^(0+128),w
  3409  0836  3EFF               	addlw	255
  3410  0837  0099               	movwf	25	;volatile
  3411                           
  3412                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3413  0838  1398               	bcf	24,7	;volatile
  3414                           
  3415                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3416  0839  1318               	bcf	24,6	;volatile
  3417                           
  3418                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3419  083A  1698               	bsf	24,5	;volatile
  3420                           
  3421                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3422  083B  1218               	bcf	24,4	;volatile
  3423                           
  3424                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3425  083C  1518               	bsf	24,2	;volatile
  3426                           
  3427                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3428  083D  1498               	bsf	24,1	;volatile
  3429                           
  3430                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3431  083E  1018               	bcf	24,0	;volatile
  3432                           
  3433                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3434  083F  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0840  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0841  1798               	bsf	24,7	;volatile
  3437                           
  3438                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3439  0842  1318               	bcf	24,6	;volatile
  3440                           
  3441                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3442  0843  1298               	bcf	24,5	;volatile
  3443                           
  3444                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3445  0844  1618               	bsf	24,4	;volatile
  3446                           
  3447                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3448  0845  1198               	bcf	24,3	;volatile
  3449                           
  3450                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3451  0846  1118               	bcf	24,2	;volatile
  3452                           
  3453                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3454  0847  1098               	bcf	24,1	;volatile
  3455                           
  3456                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3457  0848  1018               	bcf	24,0	;volatile
  3458                           
  3459                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3460  0849  1683               	bsf	3,5	;RP0=1, select bank1
  3461  084A  1303               	bcf	3,6	;RP1=0, select bank1
  3462  084B  120C               	bcf	12,4	;volatile
  3463                           
  3464                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3465  084C  1283               	bcf	3,5	;RP0=0, select bank0
  3466  084D  1303               	bcf	3,6	;RP1=0, select bank0
  3467  084E  120C               	bcf	12,4	;volatile
  3468                           
  3469                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3470  084F  1683               	bsf	3,5	;RP0=1, select bank1
  3471  0850  1303               	bcf	3,6	;RP1=0, select bank1
  3472  0851  168C               	bsf	12,5	;volatile
  3473                           
  3474                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3475  0852  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0853  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0854  128C               	bcf	12,5	;volatile
  3478  0855  0008               	return
  3479  0856                     __end_of_USART_Init:	
  3480                           
  3481                           	psect	text9
  3482  14DF                     __ptext9:	
  3483 ;; *************** function ___aldiv *****************
  3484 ;; Defined at:
  3485 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  divisor         4    4[BANK1 ] long 
  3488 ;;  dividend        4    8[BANK1 ] long 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  quotient        4   15[BANK1 ] long 
  3491 ;;  sign            1   14[BANK1 ] unsigned char 
  3492 ;;  counter         1   13[BANK1 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  4    4[BANK1 ] long 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       8       0       0
  3503 ;;      Locals:         0       0       6       0       0
  3504 ;;      Temps:          0       0       1       0       0
  3505 ;;      Totals:         0       0      15       0       0
  3506 ;;Total ram usage:       15 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    5
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_USART_Init
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function ___aldiv
  3518  14DF                     ___aldiv:	
  3519                           
  3520                           ;incstack = 0
  3521                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3522  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  3523  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  3524  14E1  01D3               	clrf	___aldiv@sign^(0+128)
  3525  14E2  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  3526  14E3  2CF1               	goto	l653
  3527  14E4  09C9               	comf	___aldiv@divisor^(0+128),f
  3528  14E5  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  3529  14E6  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  3530  14E7  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  3531  14E8  0AC9               	incf	___aldiv@divisor^(0+128),f
  3532  14E9  1903               	skipnz
  3533  14EA  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  3534  14EB  1903               	skipnz
  3535  14EC  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  3536  14ED  1903               	skipnz
  3537  14EE  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  3538  14EF  01D3               	clrf	___aldiv@sign^(0+128)
  3539  14F0  0AD3               	incf	___aldiv@sign^(0+128),f
  3540  14F1                     l653:	
  3541  14F1  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  3542  14F2  2D02               	goto	l2546
  3543  14F3  09CD               	comf	___aldiv@dividend^(0+128),f
  3544  14F4  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  3545  14F5  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  3546  14F6  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  3547  14F7  0ACD               	incf	___aldiv@dividend^(0+128),f
  3548  14F8  1903               	skipnz
  3549  14F9  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  3550  14FA  1903               	skipnz
  3551  14FB  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  3552  14FC  1903               	skipnz
  3553  14FD  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  3554  14FE  3001               	movlw	1
  3555  14FF  00D1               	movwf	??___aldiv^(0+128)
  3556  1500  0851               	movf	??___aldiv^(0+128),w
  3557  1501  06D3               	xorwf	___aldiv@sign^(0+128),f
  3558  1502                     l2546:	
  3559  1502  3000               	movlw	0
  3560  1503  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  3561  1504  3000               	movlw	0
  3562  1505  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  3563  1506  3000               	movlw	0
  3564  1507  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  3565  1508  3000               	movlw	0
  3566  1509  00D4               	movwf	___aldiv@quotient^(0+128)
  3567  150A  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3568  150B  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3569  150C  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3570  150D  0449               	iorwf	___aldiv@divisor^(0+128),w
  3571  150E  1903               	skipnz
  3572  150F  2D57               	goto	l2568
  3573  1510  01D2               	clrf	___aldiv@counter^(0+128)
  3574  1511  0AD2               	incf	___aldiv@counter^(0+128),f
  3575  1512                     l2554:	
  3576  1512  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3577  1513  2D22               	goto	l2556
  3578  1514  3001               	movlw	1
  3579  1515  00D1               	movwf	??___aldiv^(0+128)
  3580  1516                     u2895:	
  3581  1516  1003               	clrc
  3582  1517  0DC9               	rlf	___aldiv@divisor^(0+128),f
  3583  1518  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  3584  1519  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  3585  151A  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  3586  151B  0BD1               	decfsz	??___aldiv^(0+128),f
  3587  151C  2D16               	goto	u2895
  3588  151D  3001               	movlw	1
  3589  151E  00D1               	movwf	??___aldiv^(0+128)
  3590  151F  0851               	movf	??___aldiv^(0+128),w
  3591  1520  07D2               	addwf	___aldiv@counter^(0+128),f
  3592  1521  2D12               	goto	l2554
  3593  1522                     l2556:	
  3594  1522  3001               	movlw	1
  3595  1523  00D1               	movwf	??___aldiv^(0+128)
  3596  1524                     u2915:	
  3597  1524  1003               	clrc
  3598  1525  0DD4               	rlf	___aldiv@quotient^(0+128),f
  3599  1526  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  3600  1527  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  3601  1528  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  3602  1529  0BD1               	decfsz	??___aldiv^(0+128),f
  3603  152A  2D24               	goto	u2915
  3604  152B  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3605  152C  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  3606  152D  1D03               	skipz
  3607  152E  2D39               	goto	u2925
  3608  152F  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3609  1530  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  3610  1531  1D03               	skipz
  3611  1532  2D39               	goto	u2925
  3612  1533  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3613  1534  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  3614  1535  1D03               	skipz
  3615  1536  2D39               	goto	u2925
  3616  1537  0849               	movf	___aldiv@divisor^(0+128),w
  3617  1538  024D               	subwf	___aldiv@dividend^(0+128),w
  3618  1539                     u2925:	
  3619  1539  1C03               	skipc
  3620  153A  2D4A               	goto	l2564
  3621  153B  0849               	movf	___aldiv@divisor^(0+128),w
  3622  153C  02CD               	subwf	___aldiv@dividend^(0+128),f
  3623  153D  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3624  153E  1C03               	skipc
  3625  153F  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3626  1540  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  3627  1541  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3628  1542  1C03               	skipc
  3629  1543  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3630  1544  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  3631  1545  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3632  1546  1C03               	skipc
  3633  1547  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3634  1548  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  3635  1549  1454               	bsf	___aldiv@quotient^(0+128),0
  3636  154A                     l2564:	
  3637  154A  3001               	movlw	1
  3638  154B                     u2935:	
  3639  154B  1003               	clrc
  3640  154C  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  3641  154D  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  3642  154E  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  3643  154F  0CC9               	rrf	___aldiv@divisor^(0+128),f
  3644  1550  3EFF               	addlw	-1
  3645  1551  1D03               	skipz
  3646  1552  2D4B               	goto	u2935
  3647  1553  3001               	movlw	1
  3648  1554  02D2               	subwf	___aldiv@counter^(0+128),f
  3649  1555  1D03               	btfss	3,2
  3650  1556  2D22               	goto	l2556
  3651  1557                     l2568:	
  3652  1557  0853               	movf	___aldiv@sign^(0+128),w
  3653  1558  1903               	btfsc	3,2
  3654  1559  2D65               	goto	l2572
  3655  155A  09D4               	comf	___aldiv@quotient^(0+128),f
  3656  155B  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  3657  155C  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  3658  155D  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  3659  155E  0AD4               	incf	___aldiv@quotient^(0+128),f
  3660  155F  1903               	skipnz
  3661  1560  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  3662  1561  1903               	skipnz
  3663  1562  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  3664  1563  1903               	skipnz
  3665  1564  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  3666  1565                     l2572:	
  3667  1565  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  3668  1566  00CC               	movwf	(?___aldiv+3)^(0+128)
  3669  1567  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  3670  1568  00CB               	movwf	(?___aldiv+2)^(0+128)
  3671  1569  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  3672  156A  00CA               	movwf	(?___aldiv+1)^(0+128)
  3673  156B  0854               	movf	___aldiv@quotient^(0+128),w
  3674  156C  00C9               	movwf	?___aldiv^(0+128)
  3675  156D  0008               	return
  3676  156E                     __end_of___aldiv:	
  3677                           
  3678                           	psect	text10
  3679  1045                     __ptext10:	
  3680 ;; *************** function _TIMER0_Set *****************
  3681 ;; Defined at:
  3682 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  contagens       1    wreg     unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  contagens       1    4[BANK1 ] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;		None               void
  3689 ;; Registers used:
  3690 ;;		wreg
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3696 ;;      Params:         0       0       0       0       0
  3697 ;;      Locals:         0       0       1       0       0
  3698 ;;      Temps:          0       0       0       0       0
  3699 ;;      Totals:         0       0       1       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    5
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _TIMER0_Set
  3712  1045                     _TIMER0_Set:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _TIMER0_Set: [wreg]
  3716                           ;TIMER0_Set@contagens stored from wreg
  3717  1045  1683               	bsf	3,5	;RP0=1, select bank1
  3718  1046  1303               	bcf	3,6	;RP1=0, select bank1
  3719  1047  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  3720                           
  3721                           ;timers.c: 22: TMR0 = contagens;
  3722  1048  0849               	movf	TIMER0_Set@contagens^(0+128),w
  3723  1049  1283               	bcf	3,5	;RP0=0, select bank0
  3724  104A  1303               	bcf	3,6	;RP1=0, select bank0
  3725  104B  0081               	movwf	1	;volatile
  3726  104C  0008               	return
  3727  104D                     __end_of_TIMER0_Set:	
  3728                           
  3729                           	psect	text11
  3730  1055                     __ptext11:	
  3731 ;; *************** function _TIMER0_Init *****************
  3732 ;; Defined at:
  3733 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		None
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    5
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _TIMER0_Init
  3763  1055                     _TIMER0_Init:	
  3764                           
  3765                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _TIMER0_Init: []
  3769  1055  1683               	bsf	3,5	;RP0=1, select bank1
  3770  1056  1303               	bcf	3,6	;RP1=0, select bank1
  3771  1057  1281               	bcf	1,5	;volatile
  3772                           
  3773                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3774  1058  1201               	bcf	1,4	;volatile
  3775                           
  3776                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3777  1059  1181               	bcf	1,3	;volatile
  3778                           
  3779                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3780  105A  1501               	bsf	1,2	;volatile
  3781                           
  3782                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3783  105B  1481               	bsf	1,1	;volatile
  3784                           
  3785                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3786  105C  1401               	bsf	1,0	;volatile
  3787                           
  3788                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3789  105D  110B               	bcf	11,2	;volatile
  3790                           
  3791                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3792  105E  168B               	bsf	11,5	;volatile
  3793  105F  0008               	return
  3794  1060                     __end_of_TIMER0_Init:	
  3795                           
  3796                           	psect	text12
  3797  11C0                     __ptext12:	
  3798 ;; *************** function _PWM_Init *****************
  3799 ;; Defined at:
  3800 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;		None               void
  3807 ;; Registers used:
  3808 ;;		wreg
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3814 ;;      Params:         0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0
  3817 ;;      Totals:         0       0       0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    5
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           
  3829                           ;psect for function _PWM_Init
  3830  11C0                     _PWM_Init:	
  3831                           
  3832                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _PWM_Init: [wreg]
  3836  11C0  1283               	bcf	3,5	;RP0=0, select bank0
  3837  11C1  1303               	bcf	3,6	;RP1=0, select bank0
  3838  11C2  1492               	bsf	18,1	;volatile
  3839                           
  3840                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3841  11C3  1012               	bcf	18,0	;volatile
  3842                           
  3843                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3844  11C4  1312               	bcf	18,6	;volatile
  3845                           
  3846                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3847  11C5  1292               	bcf	18,5	;volatile
  3848                           
  3849                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3850  11C6  1212               	bcf	18,4	;volatile
  3851                           
  3852                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3853  11C7  1192               	bcf	18,3	;volatile
  3854                           
  3855                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3856  11C8  1512               	bsf	18,2	;volatile
  3857                           
  3858                           ;pwm.c: 27: PR2 = 255;
  3859  11C9  30FF               	movlw	255
  3860  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  3861  11CB  1303               	bcf	3,6	;RP1=0, select bank1
  3862  11CC  0092               	movwf	18	;volatile
  3863                           
  3864                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3865  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  3866  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  3867  11CF  1597               	bsf	23,3	;volatile
  3868                           
  3869                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3870  11D0  1517               	bsf	23,2	;volatile
  3871                           
  3872                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3873  11D1  1497               	bsf	23,1	;volatile
  3874                           
  3875                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3876  11D2  1417               	bsf	23,0	;volatile
  3877                           
  3878                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3879  11D3  1683               	bsf	3,5	;RP0=1, select bank1
  3880  11D4  1303               	bcf	3,6	;RP1=0, select bank1
  3881  11D5  150C               	bsf	12,2	;volatile
  3882                           
  3883                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3884  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  3885  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  3886  11D8  110C               	bcf	12,2	;volatile
  3887                           
  3888                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3889  11D9  159D               	bsf	29,3	;volatile
  3890                           
  3891                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3892  11DA  151D               	bsf	29,2	;volatile
  3893                           
  3894                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3895  11DB  149D               	bsf	29,1	;volatile
  3896                           
  3897                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3898  11DC  141D               	bsf	29,0	;volatile
  3899                           
  3900                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3901  11DD  1683               	bsf	3,5	;RP0=1, select bank1
  3902  11DE  1303               	bcf	3,6	;RP1=0, select bank1
  3903  11DF  140D               	bsf	13,0	;volatile
  3904                           
  3905                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3906  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3907  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3908  11E2  100D               	bcf	13,0	;volatile
  3909  11E3  0008               	return
  3910  11E4                     __end_of_PWM_Init:	
  3911                           
  3912                           	psect	text13
  3913  1159                     __ptext13:	
  3914 ;; *************** function _PWM_DutyCycle2 *****************
  3915 ;; Defined at:
  3916 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  valor           2    4[BANK1 ] int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         0       0       2       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       2       0       0
  3933 ;;      Totals:         0       0       4       0       0
  3934 ;;Total ram usage:        4 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    5
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _PWM_DutyCycle2
  3946  1159                     _PWM_DutyCycle2:	
  3947                           
  3948                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3952  1159  1683               	bsf	3,5	;RP0=1, select bank1
  3953  115A  1303               	bcf	3,6	;RP1=0, select bank1
  3954  115B  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3955  115C  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3956  115D  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3957  115E  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3958  115F  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3959  1160  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3960  1161  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3961  1162  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3962  1163  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3963  1164  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3964  1165  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  3965  1166  1283               	bcf	3,5	;RP0=0, select bank0
  3966  1167  1303               	bcf	3,6	;RP1=0, select bank0
  3967  1168  009B               	movwf	27	;volatile
  3968                           
  3969                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3970  1169  1683               	bsf	3,5	;RP0=1, select bank1
  3971  116A  1303               	bcf	3,6	;RP1=0, select bank1
  3972  116B  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3973  116C  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3974  116D  3003               	movlw	3
  3975  116E                     u3595:	
  3976  116E  1003               	clrc
  3977  116F  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  3978  1170  3EFF               	addlw	-1
  3979  1171  1D03               	skipz
  3980  1172  296E               	goto	u3595
  3981  1173  1003               	clrc
  3982  1174  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  3983  1175  380C               	iorlw	12
  3984  1176  1283               	bcf	3,5	;RP0=0, select bank0
  3985  1177  1303               	bcf	3,6	;RP1=0, select bank0
  3986  1178  009D               	movwf	29	;volatile
  3987  1179  0008               	return
  3988  117A                     __end_of_PWM_DutyCycle2:	
  3989                           
  3990                           	psect	text14
  3991  1138                     __ptext14:	
  3992 ;; *************** function _PWM_DutyCycle1 *****************
  3993 ;; Defined at:
  3994 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  valor           2    4[BANK1 ] int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       2       0       0
  4009 ;;      Locals:         0       0       0       0       0
  4010 ;;      Temps:          0       0       2       0       0
  4011 ;;      Totals:         0       0       4       0       0
  4012 ;;Total ram usage:        4 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    5
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function _PWM_DutyCycle1
  4024  1138                     _PWM_DutyCycle1:	
  4025                           
  4026                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4030  1138  1683               	bsf	3,5	;RP0=1, select bank1
  4031  1139  1303               	bcf	3,6	;RP1=0, select bank1
  4032  113A  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4033  113B  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4034  113C  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  4035  113D  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  4036  113E  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4037  113F  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4038  1140  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  4039  1141  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4040  1142  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4041  1143  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  4042  1144  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  4043  1145  1283               	bcf	3,5	;RP0=0, select bank0
  4044  1146  1303               	bcf	3,6	;RP1=0, select bank0
  4045  1147  0095               	movwf	21	;volatile
  4046                           
  4047                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4048  1148  1683               	bsf	3,5	;RP0=1, select bank1
  4049  1149  1303               	bcf	3,6	;RP1=0, select bank1
  4050  114A  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  4051  114B  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  4052  114C  3003               	movlw	3
  4053  114D                     u3655:	
  4054  114D  1003               	clrc
  4055  114E  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  4056  114F  3EFF               	addlw	-1
  4057  1150  1D03               	skipz
  4058  1151  294D               	goto	u3655
  4059  1152  1003               	clrc
  4060  1153  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  4061  1154  380C               	iorlw	12
  4062  1155  1283               	bcf	3,5	;RP0=0, select bank0
  4063  1156  1303               	bcf	3,6	;RP1=0, select bank0
  4064  1157  0097               	movwf	23	;volatile
  4065  1158  0008               	return
  4066  1159                     __end_of_PWM_DutyCycle1:	
  4067                           
  4068                           	psect	text15
  4069  120D                     __ptext15:	
  4070 ;; *************** function _LCD_WriteString *****************
  4071 ;; Defined at:
  4072 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4075 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4076 ;;		 -> STR_13(17), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       0       2       0       0
  4089 ;;      Locals:         0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0
  4091 ;;      Totals:         0       0       2       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    6
  4095 ;; This function calls:
  4096 ;;		_LCD_WriteData
  4097 ;; This function is called by:
  4098 ;;		_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _LCD_WriteString
  4104  120D                     _LCD_WriteString:	
  4105  120D                     l3016:	
  4106                           ;lcd.c: 63: while(*Str != '\0')
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4110                           
  4111  120D  1683               	bsf	3,5	;RP0=1, select bank1
  4112  120E  1303               	bcf	3,6	;RP1=0, select bank1
  4113  120F  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4114  1210  1283               	bcf	3,5	;RP0=0, select bank0
  4115  1211  1303               	bcf	3,6	;RP1=0, select bank0
  4116  1212  00FF               	movwf	127
  4117  1213  1683               	bsf	3,5	;RP0=1, select bank1
  4118  1214  1303               	bcf	3,6	;RP1=0, select bank1
  4119  1215  084B               	movf	LCD_WriteString@Str^(0+128),w
  4120  1216  0084               	movwf	4
  4121  1217  1283               	bcf	3,5	;RP0=0, select bank0
  4122  1218  1303               	bcf	3,6	;RP1=0, select bank0
  4123  1219  120A  118A  2702  160A  118A  	fcall	stringtab
  4124  121E  3800               	iorlw	0
  4125  121F  1903               	btfsc	3,2
  4126  1220  0008               	return
  4127                           
  4128                           ;lcd.c: 64: {
  4129                           ;lcd.c: 65: LCD_WriteData(*Str);
  4130  1221  1683               	bsf	3,5	;RP0=1, select bank1
  4131  1222  1303               	bcf	3,6	;RP1=0, select bank1
  4132  1223  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4133  1224  1283               	bcf	3,5	;RP0=0, select bank0
  4134  1225  1303               	bcf	3,6	;RP1=0, select bank0
  4135  1226  00FF               	movwf	127
  4136  1227  1683               	bsf	3,5	;RP0=1, select bank1
  4137  1228  1303               	bcf	3,6	;RP1=0, select bank1
  4138  1229  084B               	movf	LCD_WriteString@Str^(0+128),w
  4139  122A  0084               	movwf	4
  4140  122B  1283               	bcf	3,5	;RP0=0, select bank0
  4141  122C  1303               	bcf	3,6	;RP1=0, select bank0
  4142  122D  120A  118A  2702  160A  118A  	fcall	stringtab
  4143  1232  160A  118A  20AD  160A  118A  	fcall	_LCD_WriteData
  4144                           
  4145                           ;lcd.c: 66: Str++;
  4146  1237  3001               	movlw	1
  4147  1238  1683               	bsf	3,5	;RP0=1, select bank1
  4148  1239  1303               	bcf	3,6	;RP1=0, select bank1
  4149  123A  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  4150  123B  1803               	skipnc
  4151  123C  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4152  123D  2A0D               	goto	l3016
  4153  123E                     __end_of_LCD_WriteString:	
  4154                           
  4155                           	psect	text16
  4156  10AD                     __ptext16:	
  4157 ;; *************** function _LCD_WriteData *****************
  4158 ;; Defined at:
  4159 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  Byte            1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  Byte            1    5[BANK1 ] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       0       0       0
  4174 ;;      Locals:         0       0       1       0       0
  4175 ;;      Temps:          0       0       1       0       0
  4176 ;;      Totals:         0       0       2       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    5
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_LCD_WriteString
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _LCD_WriteData
  4189  10AD                     _LCD_WriteData:	
  4190                           
  4191                           ;incstack = 0
  4192                           ; Regs used in _LCD_WriteData: [wreg]
  4193                           ;LCD_WriteData@Byte stored from wreg
  4194  10AD  1683               	bsf	3,5	;RP0=1, select bank1
  4195  10AE  1303               	bcf	3,6	;RP1=0, select bank1
  4196  10AF  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  4197                           
  4198                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4199  10B0  1283               	bcf	3,5	;RP0=0, select bank0
  4200  10B1  1303               	bcf	3,6	;RP1=0, select bank0
  4201  10B2  1409               	bsf	9,0	;volatile
  4202                           
  4203                           ;lcd.c: 51: PORTD = Byte;
  4204  10B3  1683               	bsf	3,5	;RP0=1, select bank1
  4205  10B4  1303               	bcf	3,6	;RP1=0, select bank1
  4206  10B5  084A               	movf	LCD_WriteData@Byte^(0+128),w
  4207  10B6  1283               	bcf	3,5	;RP0=0, select bank0
  4208  10B7  1303               	bcf	3,6	;RP1=0, select bank0
  4209  10B8  0088               	movwf	8	;volatile
  4210                           
  4211                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4212  10B9  1489               	bsf	9,1	;volatile
  4213                           
  4214                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4215  10BA  303D               	movlw	61
  4216  10BB  1683               	bsf	3,5	;RP0=1, select bank1
  4217  10BC  1303               	bcf	3,6	;RP1=0, select bank1
  4218  10BD  00C9               	movwf	??_LCD_WriteData^(0+128)
  4219  10BE                     u4547:	
  4220  10BE  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  4221  10BF  28BE               	goto	u4547
  4222                           
  4223                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4224  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  4225  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  4226  10C2  1089               	bcf	9,1	;volatile
  4227  10C3  0008               	return
  4228  10C4                     __end_of_LCD_WriteData:	
  4229                           
  4230                           	psect	text17
  4231  13E8                     __ptext17:	
  4232 ;; *************** function _LCD_Init *****************
  4233 ;; Defined at:
  4234 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;		None               void
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0
  4250 ;;      Temps:          0       0       2       0       0
  4251 ;;      Totals:         0       0       2       0       0
  4252 ;;Total ram usage:        2 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    6
  4255 ;; This function calls:
  4256 ;;		_LCD_WriteCmd
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _LCD_Init
  4264  13E8                     _LCD_Init:	
  4265                           
  4266                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4267                           
  4268                           ;incstack = 0
  4269                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4270  13E8  1683               	bsf	3,5	;RP0=1, select bank1
  4271  13E9  1303               	bcf	3,6	;RP1=0, select bank1
  4272  13EA  119F               	bcf	31,3	;volatile
  4273                           
  4274                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4275  13EB  151F               	bsf	31,2	;volatile
  4276                           
  4277                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4278  13EC  109F               	bcf	31,1	;volatile
  4279                           
  4280                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4281  13ED  101F               	bcf	31,0	;volatile
  4282                           
  4283                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4284  13EE  305A               	movlw	90
  4285  13EF  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  4286  13F0  30C3               	movlw	195
  4287  13F1  00CB               	movwf	??_LCD_Init^(0+128)
  4288  13F2                     u4557:	
  4289  13F2  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4290  13F3  2BF2               	goto	u4557
  4291  13F4  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  4292  13F5  2BF2               	goto	u4557
  4293                           
  4294                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4295  13F6  3030               	movlw	48
  4296  13F7  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4297                           
  4298                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4299  13FC  3018               	movlw	24
  4300  13FD  1683               	bsf	3,5	;RP0=1, select bank1
  4301  13FE  1303               	bcf	3,6	;RP1=0, select bank1
  4302  13FF  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  4303  1400  30EF               	movlw	239
  4304  1401  00CB               	movwf	??_LCD_Init^(0+128)
  4305  1402                     u4567:	
  4306  1402  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4307  1403  2C02               	goto	u4567
  4308  1404  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  4309  1405  2C02               	goto	u4567
  4310                           
  4311                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4312  1406  3030               	movlw	48
  4313  1407  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4314                           
  4315                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4316  140C  3099               	movlw	153
  4317  140D  1683               	bsf	3,5	;RP0=1, select bank1
  4318  140E  1303               	bcf	3,6	;RP1=0, select bank1
  4319  140F  00CB               	movwf	??_LCD_Init^(0+128)
  4320  1410                     u4577:	
  4321  1410  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4322  1411  2C10               	goto	u4577
  4323                           
  4324                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4325  1412  3030               	movlw	48
  4326  1413  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4327                           
  4328                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4329  1418  303D               	movlw	61
  4330  1419  1683               	bsf	3,5	;RP0=1, select bank1
  4331  141A  1303               	bcf	3,6	;RP1=0, select bank1
  4332  141B  00CB               	movwf	??_LCD_Init^(0+128)
  4333  141C                     u4587:	
  4334  141C  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4335  141D  2C1C               	goto	u4587
  4336                           
  4337                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4338  141E  3038               	movlw	56
  4339  141F  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4340                           
  4341                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4342  1424  303D               	movlw	61
  4343  1425  1683               	bsf	3,5	;RP0=1, select bank1
  4344  1426  1303               	bcf	3,6	;RP1=0, select bank1
  4345  1427  00CB               	movwf	??_LCD_Init^(0+128)
  4346  1428                     u4597:	
  4347  1428  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4348  1429  2C28               	goto	u4597
  4349                           
  4350                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4351  142A  3001               	movlw	1
  4352  142B  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4353                           
  4354                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4355  1430  300C               	movlw	12
  4356  1431  1683               	bsf	3,5	;RP0=1, select bank1
  4357  1432  1303               	bcf	3,6	;RP1=0, select bank1
  4358  1433  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  4359  1434  30F7               	movlw	247
  4360  1435  00CB               	movwf	??_LCD_Init^(0+128)
  4361  1436                     u4607:	
  4362  1436  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4363  1437  2C36               	goto	u4607
  4364  1438  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  4365  1439  2C36               	goto	u4607
  4366                           
  4367                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4368  143A  300C               	movlw	12
  4369  143B  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4370                           
  4371                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4372  1440  303D               	movlw	61
  4373  1441  1683               	bsf	3,5	;RP0=1, select bank1
  4374  1442  1303               	bcf	3,6	;RP1=0, select bank1
  4375  1443  00CB               	movwf	??_LCD_Init^(0+128)
  4376  1444                     u4617:	
  4377  1444  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4378  1445  2C44               	goto	u4617
  4379                           
  4380                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4381  1446  3006               	movlw	6
  4382  1447  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4383                           
  4384                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4385  144C  303D               	movlw	61
  4386  144D  1683               	bsf	3,5	;RP0=1, select bank1
  4387  144E  1303               	bcf	3,6	;RP1=0, select bank1
  4388  144F  00CB               	movwf	??_LCD_Init^(0+128)
  4389  1450                     u4627:	
  4390  1450  0BCB               	decfsz	??_LCD_Init^(0+128),f
  4391  1451  2C50               	goto	u4627
  4392  1452  0008               	return
  4393  1453                     __end_of_LCD_Init:	
  4394                           
  4395                           	psect	text18
  4396  1118                     __ptext18:	
  4397 ;; *************** function _LCD_Cursor *****************
  4398 ;; Defined at:
  4399 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  Row             1    wreg     unsigned char 
  4402 ;;  Col             1    4[BANK1 ] unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  Row             1    6[BANK1 ] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;		None               void
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4414 ;;      Params:         0       0       1       0       0
  4415 ;;      Locals:         0       0       1       0       0
  4416 ;;      Temps:          0       0       1       0       0
  4417 ;;      Totals:         0       0       3       0       0
  4418 ;;Total ram usage:        3 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    5
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           
  4429                           ;psect for function _LCD_Cursor
  4430  1118                     _LCD_Cursor:	
  4431                           
  4432                           ;incstack = 0
  4433                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4434                           ;LCD_Cursor@Row stored from wreg
  4435  1118  1683               	bsf	3,5	;RP0=1, select bank1
  4436  1119  1303               	bcf	3,6	;RP1=0, select bank1
  4437  111A  00CB               	movwf	LCD_Cursor@Row^(0+128)
  4438                           
  4439                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4440  111B  1283               	bcf	3,5	;RP0=0, select bank0
  4441  111C  1303               	bcf	3,6	;RP1=0, select bank0
  4442  111D  1009               	bcf	9,0	;volatile
  4443                           
  4444                           ;lcd.c: 14: if (Row == 0)
  4445  111E  1683               	bsf	3,5	;RP0=1, select bank1
  4446  111F  1303               	bcf	3,6	;RP1=0, select bank1
  4447  1120  08CB               	movf	LCD_Cursor@Row^(0+128),f
  4448  1121  1D03               	skipz
  4449  1122  2926               	goto	l3002
  4450                           
  4451                           ;lcd.c: 15: {
  4452                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4453  1123  0849               	movf	LCD_Cursor@Col^(0+128),w
  4454  1124  3E80               	addlw	128
  4455  1125  292A               	goto	L2
  4456  1126                     l3002:	
  4457                           ;lcd.c: 17: }
  4458                           
  4459                           
  4460                           ;lcd.c: 18: else
  4461                           ;lcd.c: 19: {
  4462                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4463  1126  1683               	bsf	3,5	;RP0=1, select bank1
  4464  1127  1303               	bcf	3,6	;RP1=0, select bank1
  4465  1128  0849               	movf	LCD_Cursor@Col^(0+128),w
  4466  1129  3EC0               	addlw	192
  4467  112A                     L2:	
  4468  112A  1283               	bcf	3,5	;RP0=0, select bank0
  4469  112B  1303               	bcf	3,6	;RP1=0, select bank0
  4470  112C  0088               	movwf	8	;volatile
  4471                           
  4472                           ;lcd.c: 21: }
  4473                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4474  112D  1489               	bsf	9,1	;volatile
  4475                           
  4476                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4477  112E  303D               	movlw	61
  4478  112F  1683               	bsf	3,5	;RP0=1, select bank1
  4479  1130  1303               	bcf	3,6	;RP1=0, select bank1
  4480  1131  00CA               	movwf	??_LCD_Cursor^(0+128)
  4481  1132                     u4637:	
  4482  1132  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  4483  1133  2932               	goto	u4637
  4484                           
  4485                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4486  1134  1283               	bcf	3,5	;RP0=0, select bank0
  4487  1135  1303               	bcf	3,6	;RP1=0, select bank0
  4488  1136  1089               	bcf	9,1	;volatile
  4489  1137  0008               	return
  4490  1138                     __end_of_LCD_Cursor:	
  4491                           
  4492                           	psect	text19
  4493  11E4                     __ptext19:	
  4494 ;; *************** function _LCD_Clear *****************
  4495 ;; Defined at:
  4496 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;		None               void
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, pclath, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0
  4512 ;;      Temps:          0       0       2       0       0
  4513 ;;      Totals:         0       0       2       0       0
  4514 ;;Total ram usage:        2 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    6
  4517 ;; This function calls:
  4518 ;;		_LCD_WriteCmd
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _LCD_Clear
  4526  11E4                     _LCD_Clear:	
  4527                           
  4528                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4532  11E4  3001               	movlw	1
  4533  11E5  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4534                           
  4535                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4536  11EA  300C               	movlw	12
  4537  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  4538  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  4539  11ED  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  4540  11EE  30F7               	movlw	247
  4541  11EF  00CB               	movwf	??_LCD_Clear^(0+128)
  4542  11F0                     u4647:	
  4543  11F0  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4544  11F1  29F0               	goto	u4647
  4545  11F2  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4546  11F3  29F0               	goto	u4647
  4547                           
  4548                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4549  11F4  300C               	movlw	12
  4550  11F5  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4551                           
  4552                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4553  11FA  303D               	movlw	61
  4554  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  4555  11FC  1303               	bcf	3,6	;RP1=0, select bank1
  4556  11FD  00CB               	movwf	??_LCD_Clear^(0+128)
  4557  11FE                     u4657:	
  4558  11FE  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4559  11FF  29FE               	goto	u4657
  4560                           
  4561                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4562  1200  3006               	movlw	6
  4563  1201  160A  118A  2096  160A  118A  	fcall	_LCD_WriteCmd
  4564                           
  4565                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4566  1206  303D               	movlw	61
  4567  1207  1683               	bsf	3,5	;RP0=1, select bank1
  4568  1208  1303               	bcf	3,6	;RP1=0, select bank1
  4569  1209  00CB               	movwf	??_LCD_Clear^(0+128)
  4570  120A                     u4667:	
  4571  120A  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4572  120B  2A0A               	goto	u4667
  4573  120C  0008               	return
  4574  120D                     __end_of_LCD_Clear:	
  4575                           
  4576                           	psect	text20
  4577  1096                     __ptext20:	
  4578 ;; *************** function _LCD_WriteCmd *****************
  4579 ;; Defined at:
  4580 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  Byte            1    wreg     unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  Byte            1    5[BANK1 ] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4594 ;;      Params:         0       0       0       0       0
  4595 ;;      Locals:         0       0       1       0       0
  4596 ;;      Temps:          0       0       1       0       0
  4597 ;;      Totals:         0       0       2       0       0
  4598 ;;Total ram usage:        2 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    5
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_LCD_Clear
  4605 ;;		_LCD_Init
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _LCD_WriteCmd
  4611  1096                     _LCD_WriteCmd:	
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in _LCD_WriteCmd: [wreg]
  4615                           ;LCD_WriteCmd@Byte stored from wreg
  4616  1096  1683               	bsf	3,5	;RP0=1, select bank1
  4617  1097  1303               	bcf	3,6	;RP1=0, select bank1
  4618  1098  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  4619                           
  4620                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4621  1099  1283               	bcf	3,5	;RP0=0, select bank0
  4622  109A  1303               	bcf	3,6	;RP1=0, select bank0
  4623  109B  1009               	bcf	9,0	;volatile
  4624                           
  4625                           ;lcd.c: 36: PORTD = Byte;
  4626  109C  1683               	bsf	3,5	;RP0=1, select bank1
  4627  109D  1303               	bcf	3,6	;RP1=0, select bank1
  4628  109E  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  4629  109F  1283               	bcf	3,5	;RP0=0, select bank0
  4630  10A0  1303               	bcf	3,6	;RP1=0, select bank0
  4631  10A1  0088               	movwf	8	;volatile
  4632                           
  4633                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4634  10A2  1489               	bsf	9,1	;volatile
  4635                           
  4636                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4637  10A3  303D               	movlw	61
  4638  10A4  1683               	bsf	3,5	;RP0=1, select bank1
  4639  10A5  1303               	bcf	3,6	;RP1=0, select bank1
  4640  10A6  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  4641  10A7                     u4677:	
  4642  10A7  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  4643  10A8  28A7               	goto	u4677
  4644                           
  4645                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4646  10A9  1283               	bcf	3,5	;RP0=0, select bank0
  4647  10AA  1303               	bcf	3,6	;RP1=0, select bank0
  4648  10AB  1089               	bcf	9,1	;volatile
  4649  10AC  0008               	return
  4650  10AD                     __end_of_LCD_WriteCmd:	
  4651                           
  4652                           	psect	text21
  4653  1070                     __ptext21:	
  4654 ;; *************** function _ADC_Init *****************
  4655 ;; Defined at:
  4656 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		None
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    5
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _ADC_Init
  4686  1070                     _ADC_Init:	
  4687                           
  4688                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _ADC_Init: []
  4692  1070  1683               	bsf	3,5	;RP0=1, select bank1
  4693  1071  1303               	bcf	3,6	;RP1=0, select bank1
  4694  1072  179F               	bsf	31,7	;volatile
  4695                           
  4696                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4697  1073  159F               	bsf	31,3	;volatile
  4698                           
  4699                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4700  1074  151F               	bsf	31,2	;volatile
  4701                           
  4702                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4703  1075  149F               	bsf	31,1	;volatile
  4704                           
  4705                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4706  1076  101F               	bcf	31,0	;volatile
  4707                           
  4708                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4709  1077  1283               	bcf	3,5	;RP0=0, select bank0
  4710  1078  1303               	bcf	3,6	;RP1=0, select bank0
  4711  1079  179F               	bsf	31,7	;volatile
  4712                           
  4713                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4714  107A  131F               	bcf	31,6	;volatile
  4715                           
  4716                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4717  107B  1683               	bsf	3,5	;RP0=1, select bank1
  4718  107C  1303               	bcf	3,6	;RP1=0, select bank1
  4719  107D  130C               	bcf	12,6	;volatile
  4720                           
  4721                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4722  107E  1283               	bcf	3,5	;RP0=0, select bank0
  4723  107F  1303               	bcf	3,6	;RP1=0, select bank0
  4724  1080  130C               	bcf	12,6	;volatile
  4725  1081  0008               	return
  4726  1082                     __end_of_ADC_Init:	
  4727                           
  4728                           	psect	text22
  4729  0C19                     __ptext22:	
  4730 ;; *************** function _ISR *****************
  4731 ;; Defined at:
  4732 ;;		line 305 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;		None               void
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0
  4748 ;;      Temps:          0       0       4       0       0
  4749 ;;      Totals:         0       0       4       0       0
  4750 ;;Total ram usage:        4 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    4
  4753 ;; This function calls:
  4754 ;;		_Fuzzy
  4755 ;;		_USART_ReceiveChar
  4756 ;;		___lwtoft
  4757 ;;		i1_PWM_DutyCycle2
  4758 ;;		i1_TIMER0_Set
  4759 ;;		i1_USART_WriteString
  4760 ;;		i1___lwdiv
  4761 ;;		i1___wmul
  4762 ;; This function is called by:
  4763 ;;		Interrupt level 1
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _ISR
  4769  0C19                     _ISR:	
  4770                           
  4771                           ;main.c: 308: if (PIR1bits.RCIF)
  4772  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0C1B  1E8C               	btfss	12,5	;volatile
  4775  0C1C  2D44               	goto	i1l3270
  4776                           
  4777                           ;main.c: 309: {
  4778                           ;main.c: 310: if (USART_ReceiveChar() == '0')
  4779  0C1D  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4780  0C22  3A30               	xorlw	48
  4781  0C23  1D03               	skipz
  4782  0C24  2C3E               	goto	i1l3200
  4783                           
  4784                           ;main.c: 311: {
  4785                           ;main.c: 312: USART_WriteString("\n\rdesligado\n\r");
  4786  0C25  30A0               	movlw	low (STR_1-__stringbase)
  4787  0C26  00F1               	movwf	i1USART_WriteString@str
  4788  0C27  3080               	movlw	128
  4789  0C28  00F2               	movwf	i1USART_WriteString@str+1
  4790  0C29  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4791                           
  4792                           ;main.c: 313: pwm = 0;
  4793  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  4794  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  4795  0C30  01C1               	clrf	_pwm^(0+128)
  4796  0C31  01C2               	clrf	(_pwm+1)^(0+128)
  4797                           
  4798                           ;main.c: 314: PWM_DutyCycle2(pwm);
  4799  0C32  0842               	movf	(_pwm+1)^(0+128),w
  4800  0C33  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4801  0C34  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4802  0C35  0841               	movf	_pwm^(0+128),w
  4803  0C36  01F0               	clrf	i1PWM_DutyCycle2@valor
  4804  0C37  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4805  0C38  160A  118A  20C4  120A  158A  	fcall	i1_PWM_DutyCycle2
  4806                           
  4807                           ;main.c: 315: return;
  4808  0C3D  2DA5               	goto	i1l180
  4809  0C3E                     i1l3200:	
  4810                           
  4811                           ;main.c: 316: }
  4812                           ;main.c: 318: if (USART_ReceiveChar() == '1')
  4813  0C3E  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4814  0C43  3A31               	xorlw	49
  4815  0C44  1D03               	skipz
  4816  0C45  2C55               	goto	i1l3206
  4817                           
  4818                           ;main.c: 319: {
  4819                           ;main.c: 320: USART_WriteString("\n\rpwm = \n\r");
  4820  0C46  30AE               	movlw	low (STR_2-__stringbase)
  4821  0C47  00F1               	movwf	i1USART_WriteString@str
  4822  0C48  3080               	movlw	128
  4823  0C49  00F2               	movwf	i1USART_WriteString@str+1
  4824  0C4A  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4825                           
  4826                           ;main.c: 321: pwm = 32;
  4827  0C4F  3020               	movlw	32
  4828  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  4829  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  4830  0C52  00C1               	movwf	_pwm^(0+128)
  4831  0C53  3000               	movlw	0
  4832  0C54  00C2               	movwf	(_pwm^(0+128)+1)
  4833  0C55                     i1l3206:	
  4834                           
  4835                           ;main.c: 323: }
  4836                           ;main.c: 325: if (USART_ReceiveChar() == '2')
  4837  0C55  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4838  0C5A  3A32               	xorlw	50
  4839  0C5B  1D03               	skipz
  4840  0C5C  2C6C               	goto	i1l3212
  4841                           
  4842                           ;main.c: 326: {
  4843                           ;main.c: 327: USART_WriteString("\n\rpwm = \n\r");
  4844  0C5D  30AE               	movlw	low (STR_2-__stringbase)
  4845  0C5E  00F1               	movwf	i1USART_WriteString@str
  4846  0C5F  3080               	movlw	128
  4847  0C60  00F2               	movwf	i1USART_WriteString@str+1
  4848  0C61  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4849                           
  4850                           ;main.c: 328: pwm = 64;
  4851  0C66  3040               	movlw	64
  4852  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0C69  00C1               	movwf	_pwm^(0+128)
  4855  0C6A  3000               	movlw	0
  4856  0C6B  00C2               	movwf	(_pwm^(0+128)+1)
  4857  0C6C                     i1l3212:	
  4858                           
  4859                           ;main.c: 330: }
  4860                           ;main.c: 332: if (USART_ReceiveChar() == '3')
  4861  0C6C  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4862  0C71  3A33               	xorlw	51
  4863  0C72  1D03               	skipz
  4864  0C73  2C8A               	goto	i1l3222
  4865                           
  4866                           ;main.c: 333: {
  4867                           ;main.c: 334: USART_WriteString("\n\rpwm = \n\r");
  4868  0C74  30AE               	movlw	low (STR_2-__stringbase)
  4869  0C75  00F1               	movwf	i1USART_WriteString@str
  4870  0C76  3080               	movlw	128
  4871  0C77  00F2               	movwf	i1USART_WriteString@str+1
  4872  0C78  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4873                           
  4874                           ;main.c: 335: pwm = 128;
  4875  0C7D  3080               	movlw	128
  4876  0C7E  1683               	bsf	3,5	;RP0=1, select bank1
  4877  0C7F  1303               	bcf	3,6	;RP1=0, select bank1
  4878  0C80  00C1               	movwf	_pwm^(0+128)
  4879  0C81  3000               	movlw	0
  4880  0C82  00C2               	movwf	(_pwm^(0+128)+1)
  4881                           
  4882                           ;main.c: 337: if(PORTBbits.RB0 == 0)
  4883  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4884  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4885  0C85  1806               	btfsc	6,0	;volatile
  4886  0C86  2C89               	goto	i1l184
  4887                           
  4888                           ;main.c: 338: {
  4889                           ;main.c: 339: PORTBbits.RB0 = 1;
  4890  0C87  1406               	bsf	6,0	;volatile
  4891                           
  4892                           ;main.c: 340: }else{
  4893  0C88  2C8A               	goto	i1l3222
  4894  0C89                     i1l184:	
  4895                           
  4896                           ;main.c: 341: PORTBbits.RB0 = 0;
  4897  0C89  1006               	bcf	6,0	;volatile
  4898  0C8A                     i1l3222:	
  4899                           
  4900                           ;main.c: 342: }
  4901                           ;main.c: 343: }
  4902                           ;main.c: 345: if (USART_ReceiveChar() == '4')
  4903  0C8A  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4904  0C8F  3A34               	xorlw	52
  4905  0C90  1D03               	skipz
  4906  0C91  2CB4               	goto	i1l3234
  4907                           
  4908                           ;main.c: 346: {
  4909                           ;main.c: 347: USART_WriteString("\n\rpwm = \n\r");
  4910  0C92  30AE               	movlw	low (STR_2-__stringbase)
  4911  0C93  00F1               	movwf	i1USART_WriteString@str
  4912  0C94  3080               	movlw	128
  4913  0C95  00F2               	movwf	i1USART_WriteString@str+1
  4914  0C96  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4915                           
  4916                           ;main.c: 348: pwm = 256;
  4917  0C9B  3000               	movlw	0
  4918  0C9C  1683               	bsf	3,5	;RP0=1, select bank1
  4919  0C9D  1303               	bcf	3,6	;RP1=0, select bank1
  4920  0C9E  00C1               	movwf	_pwm^(0+128)
  4921  0C9F  3001               	movlw	1
  4922  0CA0  00C2               	movwf	(_pwm^(0+128)+1)
  4923                           
  4924                           ;main.c: 349: PWM_DutyCycle2(pwm);
  4925  0CA1  0842               	movf	(_pwm+1)^(0+128),w
  4926  0CA2  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4927  0CA3  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4928  0CA4  0841               	movf	_pwm^(0+128),w
  4929  0CA5  01F0               	clrf	i1PWM_DutyCycle2@valor
  4930  0CA6  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4931  0CA7  160A  118A  20C4  120A  158A  	fcall	i1_PWM_DutyCycle2
  4932                           
  4933                           ;main.c: 350: if(PORTBbits.RB1 == 0)
  4934  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  4935  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  4936  0CAE  1886               	btfsc	6,1	;volatile
  4937  0CAF  2CB2               	goto	i1l187
  4938                           
  4939                           ;main.c: 351: {
  4940                           ;main.c: 352: PORTBbits.RB1 = 1;
  4941  0CB0  1486               	bsf	6,1	;volatile
  4942                           
  4943                           ;main.c: 353: }else{
  4944  0CB1  2DA5               	goto	i1l180
  4945  0CB2                     i1l187:	
  4946                           
  4947                           ;main.c: 354: PORTBbits.RB1 = 0;
  4948  0CB2  1086               	bcf	6,1	;volatile
  4949                           
  4950                           ;main.c: 355: }
  4951                           ;main.c: 356: return;
  4952  0CB3  2DA5               	goto	i1l180
  4953  0CB4                     i1l3234:	
  4954                           
  4955                           ;main.c: 357: }
  4956                           ;main.c: 359: if (USART_ReceiveChar() == '5')
  4957  0CB4  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4958  0CB9  3A35               	xorlw	53
  4959  0CBA  1D03               	skipz
  4960  0CBB  2CCB               	goto	i1l3240
  4961                           
  4962                           ;main.c: 360: {
  4963                           ;main.c: 361: USART_WriteString("\n\rpwm = \n\r");
  4964  0CBC  30AE               	movlw	low (STR_2-__stringbase)
  4965  0CBD  00F1               	movwf	i1USART_WriteString@str
  4966  0CBE  3080               	movlw	128
  4967  0CBF  00F2               	movwf	i1USART_WriteString@str+1
  4968  0CC0  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4969                           
  4970                           ;main.c: 362: pwm = 512;
  4971  0CC5  3000               	movlw	0
  4972  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  4973  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  4974  0CC8  00C1               	movwf	_pwm^(0+128)
  4975  0CC9  3002               	movlw	2
  4976  0CCA  00C2               	movwf	(_pwm^(0+128)+1)
  4977  0CCB                     i1l3240:	
  4978                           
  4979                           ;main.c: 364: }
  4980                           ;main.c: 366: if (USART_ReceiveChar() == '6')
  4981  0CCB  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  4982  0CD0  3A36               	xorlw	54
  4983  0CD1  1D03               	skipz
  4984  0CD2  2CE2               	goto	i1l3246
  4985                           
  4986                           ;main.c: 367: {
  4987                           ;main.c: 368: USART_WriteString("\n\rpwm = 768\n\r");
  4988  0CD3  3092               	movlw	low (STR_7-__stringbase)
  4989  0CD4  00F1               	movwf	i1USART_WriteString@str
  4990  0CD5  3080               	movlw	128
  4991  0CD6  00F2               	movwf	i1USART_WriteString@str+1
  4992  0CD7  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  4993                           
  4994                           ;main.c: 369: pwm = 768;
  4995  0CDC  3000               	movlw	0
  4996  0CDD  1683               	bsf	3,5	;RP0=1, select bank1
  4997  0CDE  1303               	bcf	3,6	;RP1=0, select bank1
  4998  0CDF  00C1               	movwf	_pwm^(0+128)
  4999  0CE0  3003               	movlw	3
  5000  0CE1  00C2               	movwf	(_pwm^(0+128)+1)
  5001  0CE2                     i1l3246:	
  5002                           
  5003                           ;main.c: 371: }
  5004                           ;main.c: 373: if (USART_ReceiveChar() == '7')
  5005  0CE2  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  5006  0CE7  3A37               	xorlw	55
  5007  0CE8  1D03               	skipz
  5008  0CE9  2CF9               	goto	i1l3252
  5009                           
  5010                           ;main.c: 374: {
  5011                           ;main.c: 375: USART_WriteString("\n\rpwm = 896\n\r");
  5012  0CEA  3084               	movlw	low (STR_8-__stringbase)
  5013  0CEB  00F1               	movwf	i1USART_WriteString@str
  5014  0CEC  3080               	movlw	128
  5015  0CED  00F2               	movwf	i1USART_WriteString@str+1
  5016  0CEE  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  5017                           
  5018                           ;main.c: 376: pwm = 896;
  5019  0CF3  3080               	movlw	128
  5020  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  5021  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  5022  0CF6  00C1               	movwf	_pwm^(0+128)
  5023  0CF7  3003               	movlw	3
  5024  0CF8  00C2               	movwf	(_pwm^(0+128)+1)
  5025  0CF9                     i1l3252:	
  5026                           
  5027                           ;main.c: 378: }
  5028                           ;main.c: 380: if (USART_ReceiveChar() == '8')
  5029  0CF9  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  5030  0CFE  3A38               	xorlw	56
  5031  0CFF  1D03               	skipz
  5032  0D00  2D10               	goto	i1l3258
  5033                           
  5034                           ;main.c: 381: {
  5035                           ;main.c: 382: USART_WriteString("\n\rpwm = \n\r");
  5036  0D01  30AE               	movlw	low (STR_2-__stringbase)
  5037  0D02  00F1               	movwf	i1USART_WriteString@str
  5038  0D03  3080               	movlw	128
  5039  0D04  00F2               	movwf	i1USART_WriteString@str+1
  5040  0D05  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  5041                           
  5042                           ;main.c: 383: pwm = 1000;
  5043  0D0A  30E8               	movlw	232
  5044  0D0B  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0D0C  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0D0D  00C1               	movwf	_pwm^(0+128)
  5047  0D0E  3003               	movlw	3
  5048  0D0F  00C2               	movwf	(_pwm^(0+128)+1)
  5049  0D10                     i1l3258:	
  5050                           
  5051                           ;main.c: 385: }
  5052                           ;main.c: 387: if (USART_ReceiveChar() == '9')
  5053  0D10  160A  118A  20DF  120A  158A  	fcall	_USART_ReceiveChar
  5054  0D15  3A39               	xorlw	57
  5055  0D16  1D03               	skipz
  5056  0D17  2D27               	goto	i1l3264
  5057                           
  5058                           ;main.c: 388: {
  5059                           ;main.c: 389: USART_WriteString("\n\rpwm = 1023\n\r");
  5060  0D18  3075               	movlw	low (STR_10-__stringbase)
  5061  0D19  00F1               	movwf	i1USART_WriteString@str
  5062  0D1A  3080               	movlw	128
  5063  0D1B  00F2               	movwf	i1USART_WriteString@str+1
  5064  0D1C  160A  118A  217A  120A  158A  	fcall	i1_USART_WriteString
  5065                           
  5066                           ;main.c: 390: pwm = 1023;
  5067  0D21  30FF               	movlw	255
  5068  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  5069  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  5070  0D24  00C1               	movwf	_pwm^(0+128)
  5071  0D25  3003               	movlw	3
  5072  0D26  00C2               	movwf	(_pwm^(0+128)+1)
  5073  0D27                     i1l3264:	
  5074                           
  5075                           ;main.c: 392: }
  5076                           ;main.c: 396: Fuzzy();
  5077  0D27  120A  118A  2061  120A  158A  	fcall	_Fuzzy
  5078                           
  5079                           ;main.c: 397: tf = pwm;
  5080  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  5081  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  5082  0D2E  0842               	movf	(_pwm+1)^(0+128),w
  5083  0D2F  01F9               	clrf	___lwtoft@c+1
  5084  0D30  07F9               	addwf	___lwtoft@c+1,f
  5085  0D31  0841               	movf	_pwm^(0+128),w
  5086  0D32  01F8               	clrf	___lwtoft@c
  5087  0D33  07F8               	addwf	___lwtoft@c,f
  5088  0D34  160A  118A  2082  120A  158A  	fcall	___lwtoft
  5089  0D39  0878               	movf	?___lwtoft,w
  5090  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  5092  0D3C  00E3               	movwf	_tf^(0+128)
  5093  0D3D  0879               	movf	?___lwtoft+1,w
  5094  0D3E  00E4               	movwf	(_tf+1)^(0+128)
  5095  0D3F  087A               	movf	?___lwtoft+2,w
  5096  0D40  00E5               	movwf	(_tf+2)^(0+128)
  5097                           
  5098                           ;main.c: 399: PIR1bits.RCIF = 0;
  5099  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0D43  128C               	bcf	12,5	;volatile
  5102  0D44                     i1l3270:	
  5103                           
  5104                           ;main.c: 400: }
  5105                           ;main.c: 403: if (PIR1bits.ADIF)
  5106  0D44  1B0C               	btfsc	12,6	;volatile
  5107                           
  5108                           ;main.c: 404: {
  5109                           ;main.c: 408: PIR1bits.ADIF = 0;
  5110  0D45  130C               	bcf	12,6	;volatile
  5111                           
  5112                           ;main.c: 409: }
  5113                           ;main.c: 413: if (INTCONbits.T0IF)
  5114  0D46  1D0B               	btfss	11,2	;volatile
  5115  0D47  2DA1               	goto	i1l3296
  5116                           
  5117                           ;main.c: 414: {
  5118                           ;main.c: 416: TIMER0_Set(238);
  5119  0D48  30EE               	movlw	238
  5120  0D49  160A  118A  202F  120A  158A  	fcall	i1_TIMER0_Set
  5121                           
  5122                           ;main.c: 419: if (contagens_tm0 < 499)
  5123  0D4E  3001               	movlw	1
  5124  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0D51  023C               	subwf	(_contagens_tm0+1)^(0+128),w
  5127  0D52  30F3               	movlw	243
  5128  0D53  1903               	skipnz
  5129  0D54  023B               	subwf	_contagens_tm0^(0+128),w
  5130  0D55  1803               	skipnc
  5131  0D56  2D61               	goto	i1l3282
  5132                           
  5133                           ;main.c: 420: {
  5134                           ;main.c: 422: contagens_tm0++;
  5135  0D57  3001               	movlw	1
  5136  0D58  07BB               	addwf	_contagens_tm0^(0+128),f
  5137  0D59  1803               	skipnc
  5138  0D5A  0ABC               	incf	(_contagens_tm0+1)^(0+128),f
  5139  0D5B  3000               	movlw	0
  5140  0D5C  07BC               	addwf	(_contagens_tm0+1)^(0+128),f
  5141                           
  5142                           ;main.c: 425: PORTBbits.RB6 = 1;
  5143  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0D5F  1706               	bsf	6,6	;volatile
  5146                           
  5147                           ;main.c: 426: }
  5148  0D60  2DA0               	goto	i1l3294
  5149  0D61                     i1l3282:	
  5150                           
  5151                           ;main.c: 427: else
  5152                           ;main.c: 428: {
  5153                           ;main.c: 430: contagens_tm0 = 0;
  5154  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  5155  0D62  1303               	bcf	3,6	;RP1=0, select bank1
  5156  0D63  01BB               	clrf	_contagens_tm0^(0+128)
  5157  0D64  01BC               	clrf	(_contagens_tm0+1)^(0+128)
  5158                           
  5159                           ;main.c: 433: pulsos = (TMR1H << 8) + TMR1L;
  5160  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5161  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5162  0D67  080F               	movf	15,w	;volatile
  5163  0D68  1683               	bsf	3,5	;RP0=1, select bank1
  5164  0D69  1303               	bcf	3,6	;RP1=0, select bank1
  5165  0D6A  01C0               	clrf	(_pulsos+1)^(0+128)
  5166  0D6B  07C0               	addwf	(_pulsos+1)^(0+128),f
  5167  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5168  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5169  0D6E  080E               	movf	14,w	;volatile
  5170  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  5171  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  5172  0D71  01BF               	clrf	_pulsos^(0+128)
  5173  0D72  07BF               	addwf	_pulsos^(0+128),f
  5174                           
  5175                           ;main.c: 434: rpm = ((pulsos / pas_cooler) * 120);
  5176  0D73  0867               	movf	(_pas_cooler+1)^(0+128),w
  5177  0D74  01F1               	clrf	i1___lwdiv@divisor+1
  5178  0D75  07F1               	addwf	i1___lwdiv@divisor+1,f
  5179  0D76  0866               	movf	_pas_cooler^(0+128),w
  5180  0D77  01F0               	clrf	i1___lwdiv@divisor
  5181  0D78  07F0               	addwf	i1___lwdiv@divisor,f
  5182  0D79  0840               	movf	(_pulsos+1)^(0+128),w
  5183  0D7A  01F3               	clrf	i1___lwdiv@dividend+1
  5184  0D7B  07F3               	addwf	i1___lwdiv@dividend+1,f
  5185  0D7C  083F               	movf	_pulsos^(0+128),w
  5186  0D7D  01F2               	clrf	i1___lwdiv@dividend
  5187  0D7E  07F2               	addwf	i1___lwdiv@dividend,f
  5188  0D7F  160A  118A  22A5  120A  158A  	fcall	i1___lwdiv
  5189  0D84  0871               	movf	?i1___lwdiv+1,w
  5190  0D85  01F9               	clrf	i1___wmul@multiplier+1
  5191  0D86  07F9               	addwf	i1___wmul@multiplier+1,f
  5192  0D87  0870               	movf	?i1___lwdiv,w
  5193  0D88  01F8               	clrf	i1___wmul@multiplier
  5194  0D89  07F8               	addwf	i1___wmul@multiplier,f
  5195  0D8A  3078               	movlw	120
  5196  0D8B  00FA               	movwf	i1___wmul@multiplicand
  5197  0D8C  3000               	movlw	0
  5198  0D8D  00FB               	movwf	i1___wmul@multiplicand+1
  5199  0D8E  160A  118A  219D  120A  158A  	fcall	i1___wmul
  5200  0D93  0879               	movf	?i1___wmul+1,w
  5201  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  5202  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  5203  0D96  01C4               	clrf	(_rpm+1)^(0+128)
  5204  0D97  07C4               	addwf	(_rpm+1)^(0+128),f
  5205  0D98  0878               	movf	?i1___wmul,w
  5206  0D99  01C3               	clrf	_rpm^(0+128)
  5207  0D9A  07C3               	addwf	_rpm^(0+128),f
  5208                           
  5209                           ;main.c: 437: TMR1L = 0x00;
  5210  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0D9D  018E               	clrf	14	;volatile
  5213                           
  5214                           ;main.c: 438: TMR1H = 0x00;
  5215  0D9E  018F               	clrf	15	;volatile
  5216                           
  5217                           ;main.c: 441: PORTBbits.RB6 = 0;
  5218  0D9F  1306               	bcf	6,6	;volatile
  5219  0DA0                     i1l3294:	
  5220                           
  5221                           ;main.c: 442: }
  5222                           ;main.c: 445: INTCONbits.T0IF = 0;
  5223  0DA0  110B               	bcf	11,2	;volatile
  5224  0DA1                     i1l3296:	
  5225                           
  5226                           ;main.c: 446: }
  5227                           ;main.c: 449: if (PIR1bits.TMR1IF)
  5228  0DA1  180C               	btfsc	12,0	;volatile
  5229                           
  5230                           ;main.c: 450: {
  5231                           ;main.c: 454: PIR1bits.TMR1IF = 0;
  5232  0DA2  100C               	bcf	12,0	;volatile
  5233                           
  5234                           ;main.c: 455: }
  5235                           ;main.c: 458: if (PIR1bits.SSPIF)
  5236  0DA3  198C               	btfsc	12,3	;volatile
  5237                           
  5238                           ;main.c: 459: {
  5239                           ;main.c: 463: PIR1bits.SSPIF = 0;
  5240  0DA4  118C               	bcf	12,3	;volatile
  5241  0DA5                     i1l180:	
  5242  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0DA7  0848               	movf	(??_ISR+3)^(0+128),w
  5245  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0DAA  00FF               	movwf	127
  5248  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  5249  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  5250  0DAD  0847               	movf	(??_ISR+2)^(0+128),w
  5251  0DAE  008A               	movwf	10
  5252  0DAF  0846               	movf	(??_ISR+1)^(0+128),w
  5253  0DB0  0084               	movwf	4
  5254  0DB1  0E45               	swapf	??_ISR^(0+128),w
  5255  0DB2  0083               	movwf	3
  5256  0DB3  0EFE               	swapf	126,f
  5257  0DB4  0E7E               	swapf	126,w
  5258  0DB5  0009               	retfie
  5259  0DB6                     __end_of_ISR:	
  5260                           
  5261                           	psect	intentry
  5262  0004                     __pintentry:	
  5263                           ;incstack = 0
  5264                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5265                           
  5266  0004                     interrupt_function:	
  5267  007E                     saved_w	set	btemp
  5268  0004  00FE               	movwf	btemp
  5269  0005  0E03               	swapf	3,w
  5270  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5272  0008  00C5               	movwf	??_ISR^(0+128)
  5273  0009  0804               	movf	4,w
  5274  000A  00C6               	movwf	(??_ISR+1)^(0+128)
  5275  000B  080A               	movf	10,w
  5276  000C  00C7               	movwf	(??_ISR+2)^(0+128)
  5277  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5278  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5279  000F  087F               	movf	btemp+1,w
  5280  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5281  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5282  0012  00C8               	movwf	(??_ISR+3)^(0+128)
  5283  0013  120A  158A  2C19   	ljmp	_ISR
  5284                           
  5285                           	psect	text23
  5286  119D                     __ptext23:	
  5287 ;; *************** function i1___wmul *****************
  5288 ;; Defined at:
  5289 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  multiplier      2    8[COMMON] unsigned int 
  5292 ;;  multiplicand    2   10[COMMON] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  __wmul          2   12[COMMON] unsigned int 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  2    8[COMMON] unsigned int 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5304 ;;      Params:         4       0       0       0       0
  5305 ;;      Locals:         2       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0
  5307 ;;      Totals:         6       0       0       0       0
  5308 ;;Total ram usage:        6 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_ISR
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function i1___wmul
  5319  119D                     i1___wmul:	
  5320                           
  5321                           ;incstack = 0
  5322                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5323  119D  01FC               	clrf	i1___wmul@product
  5324  119E  01FD               	clrf	i1___wmul@product+1
  5325  119F                     i1l3146:	
  5326  119F  1C78               	btfss	i1___wmul@multiplier,0
  5327  11A0  29A7               	goto	i1l598
  5328  11A1  087A               	movf	i1___wmul@multiplicand,w
  5329  11A2  07FC               	addwf	i1___wmul@product,f
  5330  11A3  1803               	skipnc
  5331  11A4  0AFD               	incf	i1___wmul@product+1,f
  5332  11A5  087B               	movf	i1___wmul@multiplicand+1,w
  5333  11A6  07FD               	addwf	i1___wmul@product+1,f
  5334  11A7                     i1l598:	
  5335  11A7  3001               	movlw	1
  5336  11A8                     u386_25:	
  5337  11A8  1003               	clrc
  5338  11A9  0DFA               	rlf	i1___wmul@multiplicand,f
  5339  11AA  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5340  11AB  3EFF               	addlw	-1
  5341  11AC  1D03               	skipz
  5342  11AD  29A8               	goto	u386_25
  5343  11AE  3001               	movlw	1
  5344  11AF                     u387_25:	
  5345  11AF  1003               	clrc
  5346  11B0  0CF9               	rrf	i1___wmul@multiplier+1,f
  5347  11B1  0CF8               	rrf	i1___wmul@multiplier,f
  5348  11B2  3EFF               	addlw	-1
  5349  11B3  1D03               	skipz
  5350  11B4  29AF               	goto	u387_25
  5351  11B5  0879               	movf	i1___wmul@multiplier+1,w
  5352  11B6  0478               	iorwf	i1___wmul@multiplier,w
  5353  11B7  1D03               	skipz
  5354  11B8  299F               	goto	i1l3146
  5355  11B9  087D               	movf	i1___wmul@product+1,w
  5356  11BA  01F9               	clrf	?i1___wmul+1
  5357  11BB  07F9               	addwf	?i1___wmul+1,f
  5358  11BC  087C               	movf	i1___wmul@product,w
  5359  11BD  01F8               	clrf	?i1___wmul
  5360  11BE  07F8               	addwf	?i1___wmul,f
  5361  11BF  0008               	return
  5362  11C0                     __end_ofi1___wmul:	
  5363                           
  5364                           	psect	text24
  5365  12A5                     __ptext24:	
  5366 ;; *************** function i1___lwdiv *****************
  5367 ;; Defined at:
  5368 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  divisor         2    0[COMMON] unsigned int 
  5371 ;;  dividend        2    2[COMMON] unsigned int 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5374 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2    0[COMMON] unsigned int 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5384 ;;      Params:         4       0       0       0       0
  5385 ;;      Locals:         3       0       0       0       0
  5386 ;;      Temps:          1       0       0       0       0
  5387 ;;      Totals:         8       0       0       0       0
  5388 ;;Total ram usage:        8 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_ISR
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function i1___lwdiv
  5399  12A5                     i1___lwdiv:	
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5403  12A5  01F5               	clrf	i1___lwdiv@quotient
  5404  12A6  01F6               	clrf	i1___lwdiv@quotient+1
  5405  12A7  0871               	movf	i1___lwdiv@divisor+1,w
  5406  12A8  0470               	iorwf	i1___lwdiv@divisor,w
  5407  12A9  1903               	skipnz
  5408  12AA  2ADC               	goto	i1l3178
  5409  12AB  01F7               	clrf	i1___lwdiv@counter
  5410  12AC  0AF7               	incf	i1___lwdiv@counter,f
  5411  12AD                     i1l3166:	
  5412  12AD  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5413  12AE  2ABB               	goto	i1l3168
  5414  12AF  3001               	movlw	1
  5415  12B0                     u390_25:	
  5416  12B0  1003               	clrc
  5417  12B1  0DF0               	rlf	i1___lwdiv@divisor,f
  5418  12B2  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5419  12B3  3EFF               	addlw	-1
  5420  12B4  1D03               	skipz
  5421  12B5  2AB0               	goto	u390_25
  5422  12B6  3001               	movlw	1
  5423  12B7  00F4               	movwf	??i1___lwdiv
  5424  12B8  0874               	movf	??i1___lwdiv,w
  5425  12B9  07F7               	addwf	i1___lwdiv@counter,f
  5426  12BA  2AAD               	goto	i1l3166
  5427  12BB                     i1l3168:	
  5428  12BB  3001               	movlw	1
  5429  12BC                     u392_25:	
  5430  12BC  1003               	clrc
  5431  12BD  0DF5               	rlf	i1___lwdiv@quotient,f
  5432  12BE  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5433  12BF  3EFF               	addlw	-1
  5434  12C0  1D03               	skipz
  5435  12C1  2ABC               	goto	u392_25
  5436  12C2  0871               	movf	i1___lwdiv@divisor+1,w
  5437  12C3  0273               	subwf	i1___lwdiv@dividend+1,w
  5438  12C4  1D03               	skipz
  5439  12C5  2AC8               	goto	u393_25
  5440  12C6  0870               	movf	i1___lwdiv@divisor,w
  5441  12C7  0272               	subwf	i1___lwdiv@dividend,w
  5442  12C8                     u393_25:	
  5443  12C8  1C03               	skipc
  5444  12C9  2AD1               	goto	i1l3174
  5445  12CA  0870               	movf	i1___lwdiv@divisor,w
  5446  12CB  02F2               	subwf	i1___lwdiv@dividend,f
  5447  12CC  0871               	movf	i1___lwdiv@divisor+1,w
  5448  12CD  1C03               	skipc
  5449  12CE  03F3               	decf	i1___lwdiv@dividend+1,f
  5450  12CF  02F3               	subwf	i1___lwdiv@dividend+1,f
  5451  12D0  1475               	bsf	i1___lwdiv@quotient,0
  5452  12D1                     i1l3174:	
  5453  12D1  3001               	movlw	1
  5454  12D2                     u394_25:	
  5455  12D2  1003               	clrc
  5456  12D3  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5457  12D4  0CF0               	rrf	i1___lwdiv@divisor,f
  5458  12D5  3EFF               	addlw	-1
  5459  12D6  1D03               	skipz
  5460  12D7  2AD2               	goto	u394_25
  5461  12D8  3001               	movlw	1
  5462  12D9  02F7               	subwf	i1___lwdiv@counter,f
  5463  12DA  1D03               	btfss	3,2
  5464  12DB  2ABB               	goto	i1l3168
  5465  12DC                     i1l3178:	
  5466  12DC  0876               	movf	i1___lwdiv@quotient+1,w
  5467  12DD  01F1               	clrf	?i1___lwdiv+1
  5468  12DE  07F1               	addwf	?i1___lwdiv+1,f
  5469  12DF  0875               	movf	i1___lwdiv@quotient,w
  5470  12E0  01F0               	clrf	?i1___lwdiv
  5471  12E1  07F0               	addwf	?i1___lwdiv,f
  5472  12E2  0008               	return
  5473  12E3                     __end_ofi1___lwdiv:	
  5474                           
  5475                           	psect	text25
  5476  102F                     __ptext25:	
  5477 ;; *************** function i1_TIMER0_Set *****************
  5478 ;; Defined at:
  5479 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  contagens       1    wreg     unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  contagens       1    0[COMMON] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;		None               void
  5486 ;; Registers used:
  5487 ;;		wreg
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         0       0       0       0       0
  5494 ;;      Locals:         1       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0
  5496 ;;      Totals:         1       0       0       0       0
  5497 ;;Total ram usage:        1 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_ISR
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function i1_TIMER0_Set
  5508  102F                     i1_TIMER0_Set:	
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in i1_TIMER0_Set: [wreg]
  5512                           ;i1TIMER0_Set@contagens stored from wreg
  5513  102F  00F0               	movwf	i1TIMER0_Set@contagens
  5514                           
  5515                           ;timers.c: 22: TMR0 = contagens;
  5516  1030  0870               	movf	i1TIMER0_Set@contagens,w
  5517  1031  1283               	bcf	3,5	;RP0=0, select bank0
  5518  1032  1303               	bcf	3,6	;RP1=0, select bank0
  5519  1033  0081               	movwf	1	;volatile
  5520  1034  0008               	return
  5521  1035                     __end_ofi1_TIMER0_Set:	
  5522                           
  5523                           	psect	text26
  5524  10DF                     __ptext26:	
  5525 ;; *************** function _USART_ReceiveChar *****************
  5526 ;; Defined at:
  5527 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  byte            1    4[COMMON] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5541 ;;      Params:         0       0       0       0       0
  5542 ;;      Locals:         1       0       0       0       0
  5543 ;;      Temps:          1       0       0       0       0
  5544 ;;      Totals:         2       0       0       0       0
  5545 ;;Total ram usage:        2 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    2
  5548 ;; This function calls:
  5549 ;;		i1_USART_WriteString
  5550 ;; This function is called by:
  5551 ;;		_ISR
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           
  5556                           ;psect for function _USART_ReceiveChar
  5557  10DF                     _USART_ReceiveChar:	
  5558                           
  5559                           ;usart.c: 65: unsigned char byte;
  5560                           ;usart.c: 67: if (!OERR)
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5564  10DF  1283               	bcf	3,5	;RP0=0, select bank0
  5565  10E0  1303               	bcf	3,6	;RP1=0, select bank0
  5566  10E1  1898               	btfsc	24,1	;volatile
  5567  10E2  28E8               	goto	i1l2876
  5568                           
  5569                           ;usart.c: 68: {
  5570                           ;usart.c: 69: byte = RCREG;
  5571  10E3  081A               	movf	26,w	;volatile
  5572  10E4  00F3               	movwf	??_USART_ReceiveChar
  5573  10E5  0873               	movf	??_USART_ReceiveChar,w
  5574  10E6  00F4               	movwf	USART_ReceiveChar@byte
  5575  10E7  28F7               	goto	i1l2884
  5576  10E8                     i1l2876:	
  5577                           ;usart.c: 71: }
  5578                           
  5579                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5580                           
  5581                           
  5582                           ;usart.c: 72: else
  5583                           ;usart.c: 73: {
  5584                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5585  10E8  300B               	movlw	low (STR_19-__stringbase)
  5586  10E9  00F1               	movwf	i1USART_WriteString@str
  5587  10EA  3080               	movlw	128
  5588  10EB  00F2               	movwf	i1USART_WriteString@str+1
  5589  10EC  160A  118A  217A   	fcall	i1_USART_WriteString
  5590                           
  5591                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5592  10EF  1283               	bcf	3,5	;RP0=0, select bank0
  5593  10F0  1303               	bcf	3,6	;RP1=0, select bank0
  5594  10F1  1218               	bcf	24,4	;volatile
  5595                           
  5596                           ;usart.c: 77: byte = RCREG;
  5597  10F2  081A               	movf	26,w	;volatile
  5598  10F3  00F3               	movwf	??_USART_ReceiveChar
  5599  10F4  0873               	movf	??_USART_ReceiveChar,w
  5600  10F5  00F4               	movwf	USART_ReceiveChar@byte
  5601                           
  5602                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5603  10F6  1618               	bsf	24,4	;volatile
  5604  10F7                     i1l2884:	
  5605                           
  5606                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5607  10F7  128C               	bcf	12,5	;volatile
  5608                           
  5609                           ;usart.c: 80: }
  5610                           ;usart.c: 82: return(byte);
  5611  10F8  0874               	movf	USART_ReceiveChar@byte,w
  5612  10F9  0008               	return
  5613  10FA                     __end_of_USART_ReceiveChar:	
  5614                           
  5615                           	psect	text27
  5616  117A                     __ptext27:	
  5617 ;; *************** function i1_USART_WriteString *****************
  5618 ;; Defined at:
  5619 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  str             2    1[COMMON] PTR const unsigned char 
  5622 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5623 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5624 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5625 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5637 ;;      Params:         2       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0
  5640 ;;      Totals:         2       0       0       0       0
  5641 ;;Total ram usage:        2 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    1
  5644 ;; This function calls:
  5645 ;;		i1_USART_WriteChar
  5646 ;; This function is called by:
  5647 ;;		_ISR
  5648 ;;		_USART_ReceiveChar
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function i1_USART_WriteString
  5654  117A                     i1_USART_WriteString:	
  5655  117A                     i1l2728:	
  5656                           ;usart.c: 54: while(*str != '\0')
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5660                           
  5661  117A  0872               	movf	i1USART_WriteString@str+1,w
  5662  117B  1283               	bcf	3,5	;RP0=0, select bank0
  5663  117C  1303               	bcf	3,6	;RP1=0, select bank0
  5664  117D  00FF               	movwf	127
  5665  117E  0871               	movf	i1USART_WriteString@str,w
  5666  117F  0084               	movwf	4
  5667  1180  120A  118A  2702  160A  118A  	fcall	stringtab
  5668  1185  3800               	iorlw	0
  5669  1186  1903               	btfsc	3,2
  5670  1187  0008               	return
  5671                           
  5672                           ;usart.c: 55: {
  5673                           ;usart.c: 56: USART_WriteChar(*str);
  5674  1188  0872               	movf	i1USART_WriteString@str+1,w
  5675  1189  1283               	bcf	3,5	;RP0=0, select bank0
  5676  118A  1303               	bcf	3,6	;RP1=0, select bank0
  5677  118B  00FF               	movwf	127
  5678  118C  0871               	movf	i1USART_WriteString@str,w
  5679  118D  0084               	movwf	4
  5680  118E  120A  118A  2702  160A  118A  	fcall	stringtab
  5681  1193  160A  118A  203D  160A  118A  	fcall	i1_USART_WriteChar
  5682                           
  5683                           ;usart.c: 57: str++;
  5684  1198  3001               	movlw	1
  5685  1199  07F1               	addwf	i1USART_WriteString@str,f
  5686  119A  1803               	skipnc
  5687  119B  0AF2               	incf	i1USART_WriteString@str+1,f
  5688  119C  297A               	goto	i1l2728
  5689  119D                     __end_ofi1_USART_WriteString:	
  5690                           
  5691                           	psect	text28
  5692  103D                     __ptext28:	
  5693 ;; *************** function i1_USART_WriteChar *****************
  5694 ;; Defined at:
  5695 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  byte            1    wreg     unsigned char 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  byte            1    0[COMMON] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		wreg
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         1       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0
  5712 ;;      Totals:         1       0       0       0       0
  5713 ;;Total ram usage:        1 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		i1_USART_WriteString
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function i1_USART_WriteChar
  5724  103D                     i1_USART_WriteChar:	
  5725                           
  5726                           ;incstack = 0
  5727                           ; Regs used in i1_USART_WriteChar: [wreg]
  5728                           ;i1USART_WriteChar@byte stored from wreg
  5729  103D  00F0               	movwf	i1USART_WriteChar@byte
  5730  103E                     i1l227:	
  5731                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5732                           
  5733  103E  1283               	bcf	3,5	;RP0=0, select bank0
  5734  103F  1303               	bcf	3,6	;RP1=0, select bank0
  5735  1040  1E0C               	btfss	12,4	;volatile
  5736  1041  283E               	goto	i1l227
  5737                           
  5738                           ;usart.c: 47: TXREG = byte;
  5739  1042  0870               	movf	i1USART_WriteChar@byte,w
  5740  1043  0099               	movwf	25	;volatile
  5741  1044  0008               	return
  5742  1045                     __end_ofi1_USART_WriteChar:	
  5743                           
  5744                           	psect	text29
  5745  0061                     __ptext29:	
  5746 ;; *************** function _Fuzzy *****************
  5747 ;; Defined at:
  5748 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  a               2   61[BANK0 ] int 
  5753 ;;  a               2   59[BANK0 ] int 
  5754 ;;  a               2   57[BANK0 ] int 
  5755 ;;  a               2   65[BANK0 ] int 
  5756 ;;  a               2   63[BANK0 ] int 
  5757 ;;  aumenta         3   76[BANK0 ] float 
  5758 ;;  reduz           3   73[BANK0 ] float 
  5759 ;;  mantem          3   70[BANK0 ] float 
  5760 ;;  tip             3   67[BANK0 ] float 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;		None               void
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5770 ;;      Params:         0       0       0       0       0
  5771 ;;      Locals:         0      22       0       0       0
  5772 ;;      Temps:          0       0       0       0       0
  5773 ;;      Totals:         0      22       0       0       0
  5774 ;;Total ram usage:       22 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    3
  5777 ;; This function calls:
  5778 ;;		___ftadd
  5779 ;;		___ftdiv
  5780 ;;		___ftge
  5781 ;;		___ftmul
  5782 ;;		___ftneg
  5783 ;;		___fttol
  5784 ;;		___lwtoft
  5785 ;;		_max_val
  5786 ;;		_trapmf
  5787 ;;		_trimf
  5788 ;;		i1_PWM_DutyCycle2
  5789 ;; This function is called by:
  5790 ;;		_ISR
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _Fuzzy
  5796  0061                     _Fuzzy:	
  5797                           
  5798                           ;main.c: 140: setpoint = (float)pwm;
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5802  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5803  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5804  0063  0842               	movf	(_pwm+1)^(0+128),w
  5805  0064  01F9               	clrf	___lwtoft@c+1
  5806  0065  07F9               	addwf	___lwtoft@c+1,f
  5807  0066  0841               	movf	_pwm^(0+128),w
  5808  0067  01F8               	clrf	___lwtoft@c
  5809  0068  07F8               	addwf	___lwtoft@c,f
  5810  0069  160A  118A  2082  120A  118A  	fcall	___lwtoft
  5811  006E  0878               	movf	?___lwtoft,w
  5812  006F  1683               	bsf	3,5	;RP0=1, select bank3
  5813  0070  1703               	bsf	3,6	;RP1=1, select bank3
  5814  0071  00BF               	movwf	_setpoint^(0+384)
  5815  0072  0879               	movf	?___lwtoft+1,w
  5816  0073  00C0               	movwf	(_setpoint+1)^(0+384)
  5817  0074  087A               	movf	?___lwtoft+2,w
  5818  0075  00C1               	movwf	(_setpoint+2)^(0+384)
  5819                           
  5820                           ;main.c: 142: float mantem = 1100;
  5821  0076  3080               	movlw	128
  5822  0077  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0078  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0079  00E6               	movwf	Fuzzy@mantem
  5825  007A  3089               	movlw	137
  5826  007B  00E7               	movwf	Fuzzy@mantem+1
  5827  007C  3044               	movlw	68
  5828  007D  00E8               	movwf	Fuzzy@mantem+2
  5829                           
  5830                           ;main.c: 143: float reduz = 2200;
  5831  007E  3080               	movlw	128
  5832  007F  00E9               	movwf	Fuzzy@reduz
  5833  0080  3009               	movlw	9
  5834  0081  00EA               	movwf	Fuzzy@reduz+1
  5835  0082  3045               	movlw	69
  5836  0083  00EB               	movwf	Fuzzy@reduz+2
  5837                           
  5838                           ;main.c: 144: float aumenta = 3300;
  5839  0084  3040               	movlw	64
  5840  0085  00EC               	movwf	Fuzzy@aumenta
  5841  0086  304E               	movlw	78
  5842  0087  00ED               	movwf	Fuzzy@aumenta+1
  5843  0088  3045               	movlw	69
  5844  0089  00EE               	movwf	Fuzzy@aumenta+2
  5845                           
  5846                           ;main.c: 145: float tip;
  5847                           ;main.c: 147: fitemp =0;
  5848  008A  3000               	movlw	0
  5849  008B  1683               	bsf	3,5	;RP0=1, select bank1
  5850  008C  1303               	bcf	3,6	;RP1=0, select bank1
  5851  008D  00A0               	movwf	_fitemp^(0+128)
  5852  008E  3000               	movlw	0
  5853  008F  00A1               	movwf	(_fitemp+1)^(0+128)
  5854  0090  3000               	movlw	0
  5855  0091  00A2               	movwf	(_fitemp+2)^(0+128)
  5856                           
  5857                           ;main.c: 150: temp = (setpoint - tf);
  5858  0092  1683               	bsf	3,5	;RP0=1, select bank3
  5859  0093  1703               	bsf	3,6	;RP1=1, select bank3
  5860  0094  083F               	movf	_setpoint^(0+384),w
  5861  0095  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0096  1303               	bcf	3,6	;RP1=0, select bank0
  5863  0097  00AA               	movwf	___ftadd@f1
  5864  0098  1683               	bsf	3,5	;RP0=1, select bank3
  5865  0099  1703               	bsf	3,6	;RP1=1, select bank3
  5866  009A  0840               	movf	(_setpoint+1)^(0+384),w
  5867  009B  1283               	bcf	3,5	;RP0=0, select bank0
  5868  009C  1303               	bcf	3,6	;RP1=0, select bank0
  5869  009D  00AB               	movwf	___ftadd@f1+1
  5870  009E  1683               	bsf	3,5	;RP0=1, select bank3
  5871  009F  1703               	bsf	3,6	;RP1=1, select bank3
  5872  00A0  0841               	movf	(_setpoint+2)^(0+384),w
  5873  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5874  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5875  00A3  00AC               	movwf	___ftadd@f1+2
  5876  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  5877  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  5878  00A6  0863               	movf	_tf^(0+128),w
  5879  00A7  00F0               	movwf	___ftneg@f1
  5880  00A8  0864               	movf	(_tf+1)^(0+128),w
  5881  00A9  00F1               	movwf	___ftneg@f1+1
  5882  00AA  0865               	movf	(_tf+2)^(0+128),w
  5883  00AB  00F2               	movwf	___ftneg@f1+2
  5884  00AC  160A  118A  2035  120A  118A  	fcall	___ftneg
  5885  00B1  0870               	movf	?___ftneg,w
  5886  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  5887  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  5888  00B4  00AD               	movwf	___ftadd@f2
  5889  00B5  0871               	movf	?___ftneg+1,w
  5890  00B6  00AE               	movwf	___ftadd@f2+1
  5891  00B7  0872               	movf	?___ftneg+2,w
  5892  00B8  00AF               	movwf	___ftadd@f2+2
  5893  00B9  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5894  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  5895  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  5896  00C0  082A               	movf	?___ftadd,w
  5897  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  5898  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  5899  00C3  00AF               	movwf	_temp^(0+128)
  5900  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  5901  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  5902  00C6  082B               	movf	?___ftadd+1,w
  5903  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  5904  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  5905  00C9  00B0               	movwf	(_temp+1)^(0+128)
  5906  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  5907  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  5908  00CC  082C               	movf	?___ftadd+2,w
  5909  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  5910  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  5911  00CF  00B1               	movwf	(_temp+2)^(0+128)
  5912                           
  5913                           ;main.c: 151: deltaV = temp;
  5914  00D0  082F               	movf	_temp^(0+128),w
  5915  00D1  00F0               	movwf	___fttol@f1
  5916  00D2  0830               	movf	(_temp+1)^(0+128),w
  5917  00D3  00F1               	movwf	___fttol@f1+1
  5918  00D4  0831               	movf	(_temp+2)^(0+128),w
  5919  00D5  00F2               	movwf	___fttol@f1+2
  5920  00D6  160A  118A  2453  120A  118A  	fcall	___fttol
  5921  00DB  0871               	movf	?___fttol+1,w
  5922  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  5923  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  5924  00DE  01BE               	clrf	(_deltaV+1)^(0+128)
  5925  00DF  07BE               	addwf	(_deltaV+1)^(0+128),f
  5926  00E0  0870               	movf	?___fttol,w
  5927  00E1  01BD               	clrf	_deltaV^(0+128)
  5928  00E2  07BD               	addwf	_deltaV^(0+128),f
  5929                           
  5930                           ;main.c: 153: if (temp >100) temp = 100;
  5931  00E3  3000               	movlw	0
  5932  00E4  00F0               	movwf	___ftge@ff1
  5933  00E5  30C8               	movlw	200
  5934  00E6  00F1               	movwf	___ftge@ff1+1
  5935  00E7  3042               	movlw	66
  5936  00E8  00F2               	movwf	___ftge@ff1+2
  5937  00E9  082F               	movf	_temp^(0+128),w
  5938  00EA  00F3               	movwf	___ftge@ff2
  5939  00EB  0830               	movf	(_temp+1)^(0+128),w
  5940  00EC  00F4               	movwf	___ftge@ff2+1
  5941  00ED  0831               	movf	(_temp+2)^(0+128),w
  5942  00EE  00F5               	movwf	___ftge@ff2+2
  5943  00EF  160A  118A  2323  120A  118A  	fcall	___ftge
  5944  00F4  1803               	btfsc	3,0
  5945  00F5  28FE               	goto	i1l2746
  5946  00F6  3000               	movlw	0
  5947  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  5948  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  5949  00F9  00AF               	movwf	_temp^(0+128)
  5950  00FA  30C8               	movlw	200
  5951  00FB  00B0               	movwf	(_temp+1)^(0+128)
  5952  00FC  3042               	movlw	66
  5953  00FD  00B1               	movwf	(_temp+2)^(0+128)
  5954  00FE                     i1l2746:	
  5955                           
  5956                           ;main.c: 154: if (temp <0) temp = 0;
  5957  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  5958  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  5959  0100  082F               	movf	_temp^(0+128),w
  5960  0101  00F0               	movwf	___ftge@ff1
  5961  0102  0830               	movf	(_temp+1)^(0+128),w
  5962  0103  00F1               	movwf	___ftge@ff1+1
  5963  0104  0831               	movf	(_temp+2)^(0+128),w
  5964  0105  00F2               	movwf	___ftge@ff1+2
  5965  0106  3000               	movlw	0
  5966  0107  00F3               	movwf	___ftge@ff2
  5967  0108  3000               	movlw	0
  5968  0109  00F4               	movwf	___ftge@ff2+1
  5969  010A  3000               	movlw	0
  5970  010B  00F5               	movwf	___ftge@ff2+2
  5971  010C  160A  118A  2323  120A  118A  	fcall	___ftge
  5972  0111  1803               	btfsc	3,0
  5973  0112  291B               	goto	i1l2750
  5974  0113  3000               	movlw	0
  5975  0114  1683               	bsf	3,5	;RP0=1, select bank1
  5976  0115  1303               	bcf	3,6	;RP1=0, select bank1
  5977  0116  00AF               	movwf	_temp^(0+128)
  5978  0117  3000               	movlw	0
  5979  0118  00B0               	movwf	(_temp+1)^(0+128)
  5980  0119  3000               	movlw	0
  5981  011A  00B1               	movwf	(_temp+2)^(0+128)
  5982  011B                     i1l2750:	
  5983                           
  5984                           ;main.c: 157: if (temp < 25)
  5985  011B  1683               	bsf	3,5	;RP0=1, select bank1
  5986  011C  1303               	bcf	3,6	;RP1=0, select bank1
  5987  011D  082F               	movf	_temp^(0+128),w
  5988  011E  00F0               	movwf	___ftge@ff1
  5989  011F  0830               	movf	(_temp+1)^(0+128),w
  5990  0120  00F1               	movwf	___ftge@ff1+1
  5991  0121  0831               	movf	(_temp+2)^(0+128),w
  5992  0122  00F2               	movwf	___ftge@ff1+2
  5993  0123  3000               	movlw	0
  5994  0124  00F3               	movwf	___ftge@ff2
  5995  0125  30C8               	movlw	200
  5996  0126  00F4               	movwf	___ftge@ff2+1
  5997  0127  3041               	movlw	65
  5998  0128  00F5               	movwf	___ftge@ff2+2
  5999  0129  160A  118A  2323  120A  118A  	fcall	___ftge
  6000  012E  1803               	btfsc	3,0
  6001  012F  2A84               	goto	i1l2774
  6002                           
  6003                           ;main.c: 158: {
  6004                           ;main.c: 161: fitemp = trapmf(temp, 0,0,13,32);
  6005  0130  1683               	bsf	3,5	;RP0=1, select bank1
  6006  0131  1303               	bcf	3,6	;RP1=0, select bank1
  6007  0132  082F               	movf	_temp^(0+128),w
  6008  0133  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0134  1303               	bcf	3,6	;RP1=0, select bank0
  6010  0135  00C7               	movwf	trapmf@x
  6011  0136  1683               	bsf	3,5	;RP0=1, select bank1
  6012  0137  1303               	bcf	3,6	;RP1=0, select bank1
  6013  0138  0830               	movf	(_temp+1)^(0+128),w
  6014  0139  1283               	bcf	3,5	;RP0=0, select bank0
  6015  013A  1303               	bcf	3,6	;RP1=0, select bank0
  6016  013B  00C8               	movwf	trapmf@x+1
  6017  013C  1683               	bsf	3,5	;RP0=1, select bank1
  6018  013D  1303               	bcf	3,6	;RP1=0, select bank1
  6019  013E  0831               	movf	(_temp+2)^(0+128),w
  6020  013F  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6022  0141  00C9               	movwf	trapmf@x+2
  6023  0142  3000               	movlw	0
  6024  0143  00CA               	movwf	trapmf@a
  6025  0144  3000               	movlw	0
  6026  0145  00CB               	movwf	trapmf@a+1
  6027  0146  3000               	movlw	0
  6028  0147  00CC               	movwf	trapmf@a+2
  6029  0148  3000               	movlw	0
  6030  0149  00CD               	movwf	trapmf@b
  6031  014A  3000               	movlw	0
  6032  014B  00CE               	movwf	trapmf@b+1
  6033  014C  3000               	movlw	0
  6034  014D  00CF               	movwf	trapmf@b+2
  6035  014E  3000               	movlw	0
  6036  014F  00D0               	movwf	trapmf@c
  6037  0150  3050               	movlw	80
  6038  0151  00D1               	movwf	trapmf@c+1
  6039  0152  3041               	movlw	65
  6040  0153  00D2               	movwf	trapmf@c+2
  6041  0154  3000               	movlw	0
  6042  0155  00D3               	movwf	trapmf@d
  6043  0156  3000               	movlw	0
  6044  0157  00D4               	movwf	trapmf@d+1
  6045  0158  3042               	movlw	66
  6046  0159  00D5               	movwf	trapmf@d+2
  6047  015A  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6048  015F  1283               	bcf	3,5	;RP0=0, select bank0
  6049  0160  1303               	bcf	3,6	;RP1=0, select bank0
  6050  0161  0847               	movf	?_trapmf,w
  6051  0162  1683               	bsf	3,5	;RP0=1, select bank1
  6052  0163  1303               	bcf	3,6	;RP1=0, select bank1
  6053  0164  00A0               	movwf	_fitemp^(0+128)
  6054  0165  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0166  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0167  0848               	movf	?_trapmf+1,w
  6057  0168  1683               	bsf	3,5	;RP0=1, select bank1
  6058  0169  1303               	bcf	3,6	;RP1=0, select bank1
  6059  016A  00A1               	movwf	(_fitemp+1)^(0+128)
  6060  016B  1283               	bcf	3,5	;RP0=0, select bank0
  6061  016C  1303               	bcf	3,6	;RP1=0, select bank0
  6062  016D  0849               	movf	?_trapmf+2,w
  6063  016E  1683               	bsf	3,5	;RP0=1, select bank1
  6064  016F  1303               	bcf	3,6	;RP1=0, select bank1
  6065  0170  00A2               	movwf	(_fitemp+2)^(0+128)
  6066                           
  6067                           ;main.c: 164: fop_rule1 = max_val(fitemp,0.1);
  6068  0171  0820               	movf	_fitemp^(0+128),w
  6069  0172  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0173  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0174  00A0               	movwf	max_val@a
  6072  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6073  0176  1303               	bcf	3,6	;RP1=0, select bank1
  6074  0177  0821               	movf	(_fitemp+1)^(0+128),w
  6075  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6076  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6077  017A  00A1               	movwf	max_val@a+1
  6078  017B  1683               	bsf	3,5	;RP0=1, select bank1
  6079  017C  1303               	bcf	3,6	;RP1=0, select bank1
  6080  017D  0822               	movf	(_fitemp+2)^(0+128),w
  6081  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6082  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6083  0180  00A2               	movwf	max_val@a+2
  6084  0181  30CD               	movlw	205
  6085  0182  00A3               	movwf	max_val@b
  6086  0183  30CC               	movlw	204
  6087  0184  00A4               	movwf	max_val@b+1
  6088  0185  303D               	movlw	61
  6089  0186  00A5               	movwf	max_val@b+2
  6090  0187  160A  118A  20FA  120A  118A  	fcall	_max_val
  6091  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6092  018D  1303               	bcf	3,6	;RP1=0, select bank0
  6093  018E  0820               	movf	?_max_val,w
  6094  018F  1683               	bsf	3,5	;RP0=1, select bank1
  6095  0190  1303               	bcf	3,6	;RP1=0, select bank1
  6096  0191  00A3               	movwf	_fop_rule1^(0+128)
  6097  0192  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0193  1303               	bcf	3,6	;RP1=0, select bank0
  6099  0194  0821               	movf	?_max_val+1,w
  6100  0195  1683               	bsf	3,5	;RP0=1, select bank1
  6101  0196  1303               	bcf	3,6	;RP1=0, select bank1
  6102  0197  00A4               	movwf	(_fop_rule1+1)^(0+128)
  6103  0198  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0199  1303               	bcf	3,6	;RP1=0, select bank0
  6105  019A  0822               	movf	?_max_val+2,w
  6106  019B  1683               	bsf	3,5	;RP0=1, select bank1
  6107  019C  1303               	bcf	3,6	;RP1=0, select bank1
  6108  019D  00A5               	movwf	(_fop_rule1+2)^(0+128)
  6109                           
  6110                           ;main.c: 167: x=0;
  6111  019E  3000               	movlw	0
  6112  019F  00B5               	movwf	_x^(0+128)
  6113  01A0  3000               	movlw	0
  6114  01A1  00B6               	movwf	(_x+1)^(0+128)
  6115  01A2  3000               	movlw	0
  6116  01A3  00B7               	movwf	(_x+2)^(0+128)
  6117                           
  6118                           ;main.c: 168: y=0;
  6119  01A4  3000               	movlw	0
  6120  01A5  00B8               	movwf	_y^(0+128)
  6121  01A6  3000               	movlw	0
  6122  01A7  00B9               	movwf	(_y+1)^(0+128)
  6123  01A8  3000               	movlw	0
  6124  01A9  00BA               	movwf	(_y+2)^(0+128)
  6125                           
  6126                           ;main.c: 169: for (int a=0; a<=90; a++)
  6127  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  6128  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  6129  01AC  01D9               	clrf	Fuzzy@a
  6130  01AD  01DA               	clrf	Fuzzy@a+1
  6131  01AE  085A               	movf	Fuzzy@a+1,w
  6132  01AF  3A80               	xorlw	128
  6133  01B0  00FF               	movwf	127
  6134  01B1  3080               	movlw	128
  6135  01B2  027F               	subwf	127,w
  6136  01B3  1D03               	skipz
  6137  01B4  29B7               	goto	u338_25
  6138  01B5  305B               	movlw	91
  6139  01B6  0259               	subwf	Fuzzy@a,w
  6140  01B7                     u338_25:	
  6141  01B7  1803               	btfsc	3,0
  6142  01B8  2A84               	goto	i1l2774
  6143  01B9                     i1l2764:	
  6144                           
  6145                           ;main.c: 170: {
  6146                           ;main.c: 171: y = trapmf(x,0,0,13,32);
  6147  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  6148  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  6149  01BB  0835               	movf	_x^(0+128),w
  6150  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  6151  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  6152  01BE  00C7               	movwf	trapmf@x
  6153  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  6154  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  6155  01C1  0836               	movf	(_x+1)^(0+128),w
  6156  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  6157  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  6158  01C4  00C8               	movwf	trapmf@x+1
  6159  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  6160  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  6161  01C7  0837               	movf	(_x+2)^(0+128),w
  6162  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6163  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  6164  01CA  00C9               	movwf	trapmf@x+2
  6165  01CB  3000               	movlw	0
  6166  01CC  00CA               	movwf	trapmf@a
  6167  01CD  3000               	movlw	0
  6168  01CE  00CB               	movwf	trapmf@a+1
  6169  01CF  3000               	movlw	0
  6170  01D0  00CC               	movwf	trapmf@a+2
  6171  01D1  3000               	movlw	0
  6172  01D2  00CD               	movwf	trapmf@b
  6173  01D3  3000               	movlw	0
  6174  01D4  00CE               	movwf	trapmf@b+1
  6175  01D5  3000               	movlw	0
  6176  01D6  00CF               	movwf	trapmf@b+2
  6177  01D7  3000               	movlw	0
  6178  01D8  00D0               	movwf	trapmf@c
  6179  01D9  3050               	movlw	80
  6180  01DA  00D1               	movwf	trapmf@c+1
  6181  01DB  3041               	movlw	65
  6182  01DC  00D2               	movwf	trapmf@c+2
  6183  01DD  3000               	movlw	0
  6184  01DE  00D3               	movwf	trapmf@d
  6185  01DF  3000               	movlw	0
  6186  01E0  00D4               	movwf	trapmf@d+1
  6187  01E1  3042               	movlw	66
  6188  01E2  00D5               	movwf	trapmf@d+2
  6189  01E3  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6190  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6191  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  6192  01EA  0847               	movf	?_trapmf,w
  6193  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6194  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  6195  01ED  00B8               	movwf	_y^(0+128)
  6196  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  6197  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  6198  01F0  0848               	movf	?_trapmf+1,w
  6199  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  6200  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  6201  01F3  00B9               	movwf	(_y+1)^(0+128)
  6202  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6203  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6204  01F6  0849               	movf	?_trapmf+2,w
  6205  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  6206  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  6207  01F9  00BA               	movwf	(_y+2)^(0+128)
  6208                           
  6209                           ;main.c: 173: if (y > fop_rule1)
  6210  01FA  0823               	movf	_fop_rule1^(0+128),w
  6211  01FB  00F0               	movwf	___ftge@ff1
  6212  01FC  0824               	movf	(_fop_rule1+1)^(0+128),w
  6213  01FD  00F1               	movwf	___ftge@ff1+1
  6214  01FE  0825               	movf	(_fop_rule1+2)^(0+128),w
  6215  01FF  00F2               	movwf	___ftge@ff1+2
  6216  0200  0838               	movf	_y^(0+128),w
  6217  0201  00F3               	movwf	___ftge@ff2
  6218  0202  0839               	movf	(_y+1)^(0+128),w
  6219  0203  00F4               	movwf	___ftge@ff2+1
  6220  0204  083A               	movf	(_y+2)^(0+128),w
  6221  0205  00F5               	movwf	___ftge@ff2+2
  6222  0206  160A  118A  2323  120A  118A  	fcall	___ftge
  6223  020B  1803               	btfsc	3,0
  6224  020C  2A1D               	goto	i1l2768
  6225                           
  6226                           ;main.c: 174: {
  6227                           ;main.c: 175: mantem += fop_rule1;
  6228  020D  1683               	bsf	3,5	;RP0=1, select bank1
  6229  020E  1303               	bcf	3,6	;RP1=0, select bank1
  6230  020F  0823               	movf	_fop_rule1^(0+128),w
  6231  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0212  00AA               	movwf	___ftadd@f1
  6234  0213  1683               	bsf	3,5	;RP0=1, select bank1
  6235  0214  1303               	bcf	3,6	;RP1=0, select bank1
  6236  0215  0824               	movf	(_fop_rule1+1)^(0+128),w
  6237  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0217  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0218  00AB               	movwf	___ftadd@f1+1
  6240  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6241  021A  1303               	bcf	3,6	;RP1=0, select bank1
  6242  021B  0825               	movf	(_fop_rule1+2)^(0+128),w
  6243  021C  2A2C               	goto	L3
  6244  021D                     i1l2768:	
  6245                           ;main.c: 176: }
  6246                           
  6247                           
  6248                           ;main.c: 177: else
  6249                           ;main.c: 178: {
  6250                           ;main.c: 179: mantem += y;
  6251  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6252  021E  1303               	bcf	3,6	;RP1=0, select bank1
  6253  021F  0838               	movf	_y^(0+128),w
  6254  0220  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0221  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0222  00AA               	movwf	___ftadd@f1
  6257  0223  1683               	bsf	3,5	;RP0=1, select bank1
  6258  0224  1303               	bcf	3,6	;RP1=0, select bank1
  6259  0225  0839               	movf	(_y+1)^(0+128),w
  6260  0226  1283               	bcf	3,5	;RP0=0, select bank0
  6261  0227  1303               	bcf	3,6	;RP1=0, select bank0
  6262  0228  00AB               	movwf	___ftadd@f1+1
  6263  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6264  022A  1303               	bcf	3,6	;RP1=0, select bank1
  6265  022B  083A               	movf	(_y+2)^(0+128),w
  6266  022C                     L3:	
  6267  022C  1283               	bcf	3,5	;RP0=0, select bank0
  6268  022D  1303               	bcf	3,6	;RP1=0, select bank0
  6269  022E  00AC               	movwf	___ftadd@f1+2
  6270  022F  0866               	movf	Fuzzy@mantem,w
  6271  0230  00AD               	movwf	___ftadd@f2
  6272  0231  0867               	movf	Fuzzy@mantem+1,w
  6273  0232  00AE               	movwf	___ftadd@f2+1
  6274  0233  0868               	movf	Fuzzy@mantem+2,w
  6275  0234  00AF               	movwf	___ftadd@f2+2
  6276  0235  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6277  023A  1283               	bcf	3,5	;RP0=0, select bank0
  6278  023B  1303               	bcf	3,6	;RP1=0, select bank0
  6279  023C  082A               	movf	?___ftadd,w
  6280  023D  00E6               	movwf	Fuzzy@mantem
  6281  023E  082B               	movf	?___ftadd+1,w
  6282  023F  00E7               	movwf	Fuzzy@mantem+1
  6283  0240  082C               	movf	?___ftadd+2,w
  6284  0241  00E8               	movwf	Fuzzy@mantem+2
  6285                           
  6286                           ;main.c: 180: }
  6287                           ;main.c: 182: x=x+1;
  6288  0242  3000               	movlw	0
  6289  0243  00AA               	movwf	___ftadd@f1
  6290  0244  3080               	movlw	128
  6291  0245  00AB               	movwf	___ftadd@f1+1
  6292  0246  303F               	movlw	63
  6293  0247  00AC               	movwf	___ftadd@f1+2
  6294  0248  1683               	bsf	3,5	;RP0=1, select bank1
  6295  0249  1303               	bcf	3,6	;RP1=0, select bank1
  6296  024A  0835               	movf	_x^(0+128),w
  6297  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6298  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6299  024D  00AD               	movwf	___ftadd@f2
  6300  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6301  024F  1303               	bcf	3,6	;RP1=0, select bank1
  6302  0250  0836               	movf	(_x+1)^(0+128),w
  6303  0251  1283               	bcf	3,5	;RP0=0, select bank0
  6304  0252  1303               	bcf	3,6	;RP1=0, select bank0
  6305  0253  00AE               	movwf	___ftadd@f2+1
  6306  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6307  0255  1303               	bcf	3,6	;RP1=0, select bank1
  6308  0256  0837               	movf	(_x+2)^(0+128),w
  6309  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6310  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6311  0259  00AF               	movwf	___ftadd@f2+2
  6312  025A  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6313  025F  1283               	bcf	3,5	;RP0=0, select bank0
  6314  0260  1303               	bcf	3,6	;RP1=0, select bank0
  6315  0261  082A               	movf	?___ftadd,w
  6316  0262  1683               	bsf	3,5	;RP0=1, select bank1
  6317  0263  1303               	bcf	3,6	;RP1=0, select bank1
  6318  0264  00B5               	movwf	_x^(0+128)
  6319  0265  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0266  1303               	bcf	3,6	;RP1=0, select bank0
  6321  0267  082B               	movf	?___ftadd+1,w
  6322  0268  1683               	bsf	3,5	;RP0=1, select bank1
  6323  0269  1303               	bcf	3,6	;RP1=0, select bank1
  6324  026A  00B6               	movwf	(_x+1)^(0+128)
  6325  026B  1283               	bcf	3,5	;RP0=0, select bank0
  6326  026C  1303               	bcf	3,6	;RP1=0, select bank0
  6327  026D  082C               	movf	?___ftadd+2,w
  6328  026E  1683               	bsf	3,5	;RP0=1, select bank1
  6329  026F  1303               	bcf	3,6	;RP1=0, select bank1
  6330  0270  00B7               	movwf	(_x+2)^(0+128)
  6331  0271  3001               	movlw	1
  6332  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6333  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6334  0274  07D9               	addwf	Fuzzy@a,f
  6335  0275  1803               	skipnc
  6336  0276  0ADA               	incf	Fuzzy@a+1,f
  6337  0277  3000               	movlw	0
  6338  0278  07DA               	addwf	Fuzzy@a+1,f
  6339  0279  085A               	movf	Fuzzy@a+1,w
  6340  027A  3A80               	xorlw	128
  6341  027B  00FF               	movwf	127
  6342  027C  3080               	movlw	128
  6343  027D  027F               	subwf	127,w
  6344  027E  1D03               	skipz
  6345  027F  2A82               	goto	u340_25
  6346  0280  305B               	movlw	91
  6347  0281  0259               	subwf	Fuzzy@a,w
  6348  0282                     u340_25:	
  6349  0282  1C03               	skipc
  6350  0283  29B9               	goto	i1l2764
  6351  0284                     i1l2774:	
  6352                           
  6353                           ;main.c: 183: }
  6354                           ;main.c: 185: }
  6355                           ;main.c: 191: if ((temp > 20) && (temp < 70))
  6356  0284  3000               	movlw	0
  6357  0285  00F0               	movwf	___ftge@ff1
  6358  0286  30A0               	movlw	160
  6359  0287  00F1               	movwf	___ftge@ff1+1
  6360  0288  3041               	movlw	65
  6361  0289  00F2               	movwf	___ftge@ff1+2
  6362  028A  1683               	bsf	3,5	;RP0=1, select bank1
  6363  028B  1303               	bcf	3,6	;RP1=0, select bank1
  6364  028C  082F               	movf	_temp^(0+128),w
  6365  028D  00F3               	movwf	___ftge@ff2
  6366  028E  0830               	movf	(_temp+1)^(0+128),w
  6367  028F  00F4               	movwf	___ftge@ff2+1
  6368  0290  0831               	movf	(_temp+2)^(0+128),w
  6369  0291  00F5               	movwf	___ftge@ff2+2
  6370  0292  160A  118A  2323  120A  118A  	fcall	___ftge
  6371  0297  1803               	btfsc	3,0
  6372  0298  2BF6               	goto	i1l2800
  6373  0299  1683               	bsf	3,5	;RP0=1, select bank1
  6374  029A  1303               	bcf	3,6	;RP1=0, select bank1
  6375  029B  082F               	movf	_temp^(0+128),w
  6376  029C  00F0               	movwf	___ftge@ff1
  6377  029D  0830               	movf	(_temp+1)^(0+128),w
  6378  029E  00F1               	movwf	___ftge@ff1+1
  6379  029F  0831               	movf	(_temp+2)^(0+128),w
  6380  02A0  00F2               	movwf	___ftge@ff1+2
  6381  02A1  3000               	movlw	0
  6382  02A2  00F3               	movwf	___ftge@ff2
  6383  02A3  308C               	movlw	140
  6384  02A4  00F4               	movwf	___ftge@ff2+1
  6385  02A5  3042               	movlw	66
  6386  02A6  00F5               	movwf	___ftge@ff2+2
  6387  02A7  160A  118A  2323  120A  118A  	fcall	___ftge
  6388  02AC  1803               	btfsc	3,0
  6389  02AD  2BF6               	goto	i1l2800
  6390                           
  6391                           ;main.c: 192: {
  6392                           ;main.c: 194: fitemp = trimf(temp, 9, 45, 81);
  6393  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  6394  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  6395  02B0  082F               	movf	_temp^(0+128),w
  6396  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6397  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6398  02B3  00C7               	movwf	trimf@x
  6399  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6400  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  6401  02B6  0830               	movf	(_temp+1)^(0+128),w
  6402  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6403  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  6404  02B9  00C8               	movwf	trimf@x+1
  6405  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  6406  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  6407  02BC  0831               	movf	(_temp+2)^(0+128),w
  6408  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  6409  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  6410  02BF  00C9               	movwf	trimf@x+2
  6411  02C0  3000               	movlw	0
  6412  02C1  00CA               	movwf	trimf@a
  6413  02C2  3010               	movlw	16
  6414  02C3  00CB               	movwf	trimf@a+1
  6415  02C4  3041               	movlw	65
  6416  02C5  00CC               	movwf	trimf@a+2
  6417  02C6  3000               	movlw	0
  6418  02C7  00CD               	movwf	trimf@b
  6419  02C8  3034               	movlw	52
  6420  02C9  00CE               	movwf	trimf@b+1
  6421  02CA  3042               	movlw	66
  6422  02CB  00CF               	movwf	trimf@b+2
  6423  02CC  3000               	movlw	0
  6424  02CD  00D0               	movwf	trimf@c
  6425  02CE  30A2               	movlw	162
  6426  02CF  00D1               	movwf	trimf@c+1
  6427  02D0  3042               	movlw	66
  6428  02D1  00D2               	movwf	trimf@c+2
  6429  02D2  120A  158A  2056  120A  118A  	fcall	_trimf
  6430  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6431  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  6432  02D9  0847               	movf	?_trimf,w
  6433  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  6434  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  6435  02DC  00A0               	movwf	_fitemp^(0+128)
  6436  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  6437  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  6438  02DF  0848               	movf	?_trimf+1,w
  6439  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6440  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  6441  02E2  00A1               	movwf	(_fitemp+1)^(0+128)
  6442  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6443  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6444  02E5  0849               	movf	?_trimf+2,w
  6445  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  6446  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  6447  02E8  00A2               	movwf	(_fitemp+2)^(0+128)
  6448                           
  6449                           ;main.c: 197: fop_rule2 = max_val(fitemp,0.1);
  6450  02E9  0820               	movf	_fitemp^(0+128),w
  6451  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6452  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6453  02EC  00A0               	movwf	max_val@a
  6454  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  6455  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  6456  02EF  0821               	movf	(_fitemp+1)^(0+128),w
  6457  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6458  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6459  02F2  00A1               	movwf	max_val@a+1
  6460  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6461  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  6462  02F5  0822               	movf	(_fitemp+2)^(0+128),w
  6463  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6464  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6465  02F8  00A2               	movwf	max_val@a+2
  6466  02F9  30CD               	movlw	205
  6467  02FA  00A3               	movwf	max_val@b
  6468  02FB  30CC               	movlw	204
  6469  02FC  00A4               	movwf	max_val@b+1
  6470  02FD  303D               	movlw	61
  6471  02FE  00A5               	movwf	max_val@b+2
  6472  02FF  160A  118A  20FA  120A  118A  	fcall	_max_val
  6473  0304  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0305  1303               	bcf	3,6	;RP1=0, select bank0
  6475  0306  0820               	movf	?_max_val,w
  6476  0307  1683               	bsf	3,5	;RP0=1, select bank1
  6477  0308  1303               	bcf	3,6	;RP1=0, select bank1
  6478  0309  00A6               	movwf	_fop_rule2^(0+128)
  6479  030A  1283               	bcf	3,5	;RP0=0, select bank0
  6480  030B  1303               	bcf	3,6	;RP1=0, select bank0
  6481  030C  0821               	movf	?_max_val+1,w
  6482  030D  1683               	bsf	3,5	;RP0=1, select bank1
  6483  030E  1303               	bcf	3,6	;RP1=0, select bank1
  6484  030F  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6485  0310  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0311  1303               	bcf	3,6	;RP1=0, select bank0
  6487  0312  0822               	movf	?_max_val+2,w
  6488  0313  1683               	bsf	3,5	;RP0=1, select bank1
  6489  0314  1303               	bcf	3,6	;RP1=0, select bank1
  6490  0315  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6491                           
  6492                           ;main.c: 200: x=0;
  6493  0316  3000               	movlw	0
  6494  0317  00B5               	movwf	_x^(0+128)
  6495  0318  3000               	movlw	0
  6496  0319  00B6               	movwf	(_x+1)^(0+128)
  6497  031A  3000               	movlw	0
  6498  031B  00B7               	movwf	(_x+2)^(0+128)
  6499                           
  6500                           ;main.c: 201: y=0;
  6501  031C  3000               	movlw	0
  6502  031D  00B8               	movwf	_y^(0+128)
  6503  031E  3000               	movlw	0
  6504  031F  00B9               	movwf	(_y+1)^(0+128)
  6505  0320  3000               	movlw	0
  6506  0321  00BA               	movwf	(_y+2)^(0+128)
  6507                           
  6508                           ;main.c: 202: for (int a=0; a<=90; a++)
  6509  0322  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0323  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0324  01DB               	clrf	Fuzzy@a_232
  6512  0325  01DC               	clrf	Fuzzy@a_232+1
  6513  0326  085C               	movf	Fuzzy@a_232+1,w
  6514  0327  3A80               	xorlw	128
  6515  0328  00FF               	movwf	127
  6516  0329  3080               	movlw	128
  6517  032A  027F               	subwf	127,w
  6518  032B  1D03               	skipz
  6519  032C  2B2F               	goto	u343_25
  6520  032D  305B               	movlw	91
  6521  032E  025B               	subwf	Fuzzy@a_232,w
  6522  032F                     u343_25:	
  6523  032F  1803               	btfsc	3,0
  6524  0330  2BF6               	goto	i1l2800
  6525  0331                     i1l2790:	
  6526                           
  6527                           ;main.c: 203: {
  6528                           ;main.c: 204: y = trimf(x, 9, 45, 81);
  6529  0331  1683               	bsf	3,5	;RP0=1, select bank1
  6530  0332  1303               	bcf	3,6	;RP1=0, select bank1
  6531  0333  0835               	movf	_x^(0+128),w
  6532  0334  1283               	bcf	3,5	;RP0=0, select bank0
  6533  0335  1303               	bcf	3,6	;RP1=0, select bank0
  6534  0336  00C7               	movwf	trimf@x
  6535  0337  1683               	bsf	3,5	;RP0=1, select bank1
  6536  0338  1303               	bcf	3,6	;RP1=0, select bank1
  6537  0339  0836               	movf	(_x+1)^(0+128),w
  6538  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6539  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6540  033C  00C8               	movwf	trimf@x+1
  6541  033D  1683               	bsf	3,5	;RP0=1, select bank1
  6542  033E  1303               	bcf	3,6	;RP1=0, select bank1
  6543  033F  0837               	movf	(_x+2)^(0+128),w
  6544  0340  1283               	bcf	3,5	;RP0=0, select bank0
  6545  0341  1303               	bcf	3,6	;RP1=0, select bank0
  6546  0342  00C9               	movwf	trimf@x+2
  6547  0343  3000               	movlw	0
  6548  0344  00CA               	movwf	trimf@a
  6549  0345  3010               	movlw	16
  6550  0346  00CB               	movwf	trimf@a+1
  6551  0347  3041               	movlw	65
  6552  0348  00CC               	movwf	trimf@a+2
  6553  0349  3000               	movlw	0
  6554  034A  00CD               	movwf	trimf@b
  6555  034B  3034               	movlw	52
  6556  034C  00CE               	movwf	trimf@b+1
  6557  034D  3042               	movlw	66
  6558  034E  00CF               	movwf	trimf@b+2
  6559  034F  3000               	movlw	0
  6560  0350  00D0               	movwf	trimf@c
  6561  0351  30A2               	movlw	162
  6562  0352  00D1               	movwf	trimf@c+1
  6563  0353  3042               	movlw	66
  6564  0354  00D2               	movwf	trimf@c+2
  6565  0355  120A  158A  2056  120A  118A  	fcall	_trimf
  6566  035A  1283               	bcf	3,5	;RP0=0, select bank0
  6567  035B  1303               	bcf	3,6	;RP1=0, select bank0
  6568  035C  0847               	movf	?_trimf,w
  6569  035D  1683               	bsf	3,5	;RP0=1, select bank1
  6570  035E  1303               	bcf	3,6	;RP1=0, select bank1
  6571  035F  00B8               	movwf	_y^(0+128)
  6572  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0361  1303               	bcf	3,6	;RP1=0, select bank0
  6574  0362  0848               	movf	?_trimf+1,w
  6575  0363  1683               	bsf	3,5	;RP0=1, select bank1
  6576  0364  1303               	bcf	3,6	;RP1=0, select bank1
  6577  0365  00B9               	movwf	(_y+1)^(0+128)
  6578  0366  1283               	bcf	3,5	;RP0=0, select bank0
  6579  0367  1303               	bcf	3,6	;RP1=0, select bank0
  6580  0368  0849               	movf	?_trimf+2,w
  6581  0369  1683               	bsf	3,5	;RP0=1, select bank1
  6582  036A  1303               	bcf	3,6	;RP1=0, select bank1
  6583  036B  00BA               	movwf	(_y+2)^(0+128)
  6584                           
  6585                           ;main.c: 206: if (y >= fop_rule2)
  6586  036C  0838               	movf	_y^(0+128),w
  6587  036D  00F0               	movwf	___ftge@ff1
  6588  036E  0839               	movf	(_y+1)^(0+128),w
  6589  036F  00F1               	movwf	___ftge@ff1+1
  6590  0370  083A               	movf	(_y+2)^(0+128),w
  6591  0371  00F2               	movwf	___ftge@ff1+2
  6592  0372  0826               	movf	_fop_rule2^(0+128),w
  6593  0373  00F3               	movwf	___ftge@ff2
  6594  0374  0827               	movf	(_fop_rule2+1)^(0+128),w
  6595  0375  00F4               	movwf	___ftge@ff2+1
  6596  0376  0828               	movf	(_fop_rule2+2)^(0+128),w
  6597  0377  00F5               	movwf	___ftge@ff2+2
  6598  0378  160A  118A  2323  120A  118A  	fcall	___ftge
  6599  037D  1C03               	btfss	3,0
  6600  037E  2B8F               	goto	i1l2794
  6601                           
  6602                           ;main.c: 207: {
  6603                           ;main.c: 208: reduz += fop_rule2;
  6604  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6605  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6606  0381  0826               	movf	_fop_rule2^(0+128),w
  6607  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0384  00AA               	movwf	___ftadd@f1
  6610  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6611  0386  1303               	bcf	3,6	;RP1=0, select bank1
  6612  0387  0827               	movf	(_fop_rule2+1)^(0+128),w
  6613  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6614  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6615  038A  00AB               	movwf	___ftadd@f1+1
  6616  038B  1683               	bsf	3,5	;RP0=1, select bank1
  6617  038C  1303               	bcf	3,6	;RP1=0, select bank1
  6618  038D  0828               	movf	(_fop_rule2+2)^(0+128),w
  6619  038E  2B9E               	goto	L4
  6620  038F                     i1l2794:	
  6621                           ;main.c: 209: }
  6622                           
  6623                           
  6624                           ;main.c: 210: else
  6625                           ;main.c: 211: {
  6626                           ;main.c: 212: reduz += y;
  6627  038F  1683               	bsf	3,5	;RP0=1, select bank1
  6628  0390  1303               	bcf	3,6	;RP1=0, select bank1
  6629  0391  0838               	movf	_y^(0+128),w
  6630  0392  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0393  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0394  00AA               	movwf	___ftadd@f1
  6633  0395  1683               	bsf	3,5	;RP0=1, select bank1
  6634  0396  1303               	bcf	3,6	;RP1=0, select bank1
  6635  0397  0839               	movf	(_y+1)^(0+128),w
  6636  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6638  039A  00AB               	movwf	___ftadd@f1+1
  6639  039B  1683               	bsf	3,5	;RP0=1, select bank1
  6640  039C  1303               	bcf	3,6	;RP1=0, select bank1
  6641  039D  083A               	movf	(_y+2)^(0+128),w
  6642  039E                     L4:	
  6643  039E  1283               	bcf	3,5	;RP0=0, select bank0
  6644  039F  1303               	bcf	3,6	;RP1=0, select bank0
  6645  03A0  00AC               	movwf	___ftadd@f1+2
  6646  03A1  0869               	movf	Fuzzy@reduz,w
  6647  03A2  00AD               	movwf	___ftadd@f2
  6648  03A3  086A               	movf	Fuzzy@reduz+1,w
  6649  03A4  00AE               	movwf	___ftadd@f2+1
  6650  03A5  086B               	movf	Fuzzy@reduz+2,w
  6651  03A6  00AF               	movwf	___ftadd@f2+2
  6652  03A7  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6653  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  6654  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  6655  03AE  082A               	movf	?___ftadd,w
  6656  03AF  00E9               	movwf	Fuzzy@reduz
  6657  03B0  082B               	movf	?___ftadd+1,w
  6658  03B1  00EA               	movwf	Fuzzy@reduz+1
  6659  03B2  082C               	movf	?___ftadd+2,w
  6660  03B3  00EB               	movwf	Fuzzy@reduz+2
  6661                           
  6662                           ;main.c: 213: }
  6663                           ;main.c: 215: x=x+1;
  6664  03B4  3000               	movlw	0
  6665  03B5  00AA               	movwf	___ftadd@f1
  6666  03B6  3080               	movlw	128
  6667  03B7  00AB               	movwf	___ftadd@f1+1
  6668  03B8  303F               	movlw	63
  6669  03B9  00AC               	movwf	___ftadd@f1+2
  6670  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6671  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6672  03BC  0835               	movf	_x^(0+128),w
  6673  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6674  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6675  03BF  00AD               	movwf	___ftadd@f2
  6676  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  6677  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  6678  03C2  0836               	movf	(_x+1)^(0+128),w
  6679  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6680  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6681  03C5  00AE               	movwf	___ftadd@f2+1
  6682  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6683  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6684  03C8  0837               	movf	(_x+2)^(0+128),w
  6685  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6686  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6687  03CB  00AF               	movwf	___ftadd@f2+2
  6688  03CC  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6689  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  6690  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  6691  03D3  082A               	movf	?___ftadd,w
  6692  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6693  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  6694  03D6  00B5               	movwf	_x^(0+128)
  6695  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6696  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  6697  03D9  082B               	movf	?___ftadd+1,w
  6698  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  6699  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  6700  03DC  00B6               	movwf	(_x+1)^(0+128)
  6701  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  6702  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  6703  03DF  082C               	movf	?___ftadd+2,w
  6704  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  6705  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  6706  03E2  00B7               	movwf	(_x+2)^(0+128)
  6707  03E3  3001               	movlw	1
  6708  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  6709  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  6710  03E6  07DB               	addwf	Fuzzy@a_232,f
  6711  03E7  1803               	skipnc
  6712  03E8  0ADC               	incf	Fuzzy@a_232+1,f
  6713  03E9  3000               	movlw	0
  6714  03EA  07DC               	addwf	Fuzzy@a_232+1,f
  6715  03EB  085C               	movf	Fuzzy@a_232+1,w
  6716  03EC  3A80               	xorlw	128
  6717  03ED  00FF               	movwf	127
  6718  03EE  3080               	movlw	128
  6719  03EF  027F               	subwf	127,w
  6720  03F0  1D03               	skipz
  6721  03F1  2BF4               	goto	u345_25
  6722  03F2  305B               	movlw	91
  6723  03F3  025B               	subwf	Fuzzy@a_232,w
  6724  03F4                     u345_25:	
  6725  03F4  1C03               	skipc
  6726  03F5  2B31               	goto	i1l2790
  6727  03F6                     i1l2800:	
  6728                           
  6729                           ;main.c: 216: }
  6730                           ;main.c: 218: }
  6731                           ;main.c: 224: if (temp > 70 )
  6732  03F6  3000               	movlw	0
  6733  03F7  00F0               	movwf	___ftge@ff1
  6734  03F8  308C               	movlw	140
  6735  03F9  00F1               	movwf	___ftge@ff1+1
  6736  03FA  3042               	movlw	66
  6737  03FB  00F2               	movwf	___ftge@ff1+2
  6738  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  6739  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  6740  03FE  082F               	movf	_temp^(0+128),w
  6741  03FF  00F3               	movwf	___ftge@ff2
  6742  0400  0830               	movf	(_temp+1)^(0+128),w
  6743  0401  00F4               	movwf	___ftge@ff2+1
  6744  0402  0831               	movf	(_temp+2)^(0+128),w
  6745  0403  00F5               	movwf	___ftge@ff2+2
  6746  0404  160A  118A  2323  120A  118A  	fcall	___ftge
  6747  0409  1803               	btfsc	3,0
  6748  040A  2D5F               	goto	i1l2824
  6749                           
  6750                           ;main.c: 225: {
  6751                           ;main.c: 227: fitemp = trapmf(temp, 62, 79, 90, 90);
  6752  040B  1683               	bsf	3,5	;RP0=1, select bank1
  6753  040C  1303               	bcf	3,6	;RP1=0, select bank1
  6754  040D  082F               	movf	_temp^(0+128),w
  6755  040E  1283               	bcf	3,5	;RP0=0, select bank0
  6756  040F  1303               	bcf	3,6	;RP1=0, select bank0
  6757  0410  00C7               	movwf	trapmf@x
  6758  0411  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0412  1303               	bcf	3,6	;RP1=0, select bank1
  6760  0413  0830               	movf	(_temp+1)^(0+128),w
  6761  0414  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0415  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0416  00C8               	movwf	trapmf@x+1
  6764  0417  1683               	bsf	3,5	;RP0=1, select bank1
  6765  0418  1303               	bcf	3,6	;RP1=0, select bank1
  6766  0419  0831               	movf	(_temp+2)^(0+128),w
  6767  041A  1283               	bcf	3,5	;RP0=0, select bank0
  6768  041B  1303               	bcf	3,6	;RP1=0, select bank0
  6769  041C  00C9               	movwf	trapmf@x+2
  6770  041D  3000               	movlw	0
  6771  041E  00CA               	movwf	trapmf@a
  6772  041F  3078               	movlw	120
  6773  0420  00CB               	movwf	trapmf@a+1
  6774  0421  3042               	movlw	66
  6775  0422  00CC               	movwf	trapmf@a+2
  6776  0423  3000               	movlw	0
  6777  0424  00CD               	movwf	trapmf@b
  6778  0425  309E               	movlw	158
  6779  0426  00CE               	movwf	trapmf@b+1
  6780  0427  3042               	movlw	66
  6781  0428  00CF               	movwf	trapmf@b+2
  6782  0429  3000               	movlw	0
  6783  042A  00D0               	movwf	trapmf@c
  6784  042B  30B4               	movlw	180
  6785  042C  00D1               	movwf	trapmf@c+1
  6786  042D  3042               	movlw	66
  6787  042E  00D2               	movwf	trapmf@c+2
  6788  042F  3000               	movlw	0
  6789  0430  00D3               	movwf	trapmf@d
  6790  0431  30B4               	movlw	180
  6791  0432  00D4               	movwf	trapmf@d+1
  6792  0433  3042               	movlw	66
  6793  0434  00D5               	movwf	trapmf@d+2
  6794  0435  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6795  043A  1283               	bcf	3,5	;RP0=0, select bank0
  6796  043B  1303               	bcf	3,6	;RP1=0, select bank0
  6797  043C  0847               	movf	?_trapmf,w
  6798  043D  1683               	bsf	3,5	;RP0=1, select bank1
  6799  043E  1303               	bcf	3,6	;RP1=0, select bank1
  6800  043F  00A0               	movwf	_fitemp^(0+128)
  6801  0440  1283               	bcf	3,5	;RP0=0, select bank0
  6802  0441  1303               	bcf	3,6	;RP1=0, select bank0
  6803  0442  0848               	movf	?_trapmf+1,w
  6804  0443  1683               	bsf	3,5	;RP0=1, select bank1
  6805  0444  1303               	bcf	3,6	;RP1=0, select bank1
  6806  0445  00A1               	movwf	(_fitemp+1)^(0+128)
  6807  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6808  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6809  0448  0849               	movf	?_trapmf+2,w
  6810  0449  1683               	bsf	3,5	;RP0=1, select bank1
  6811  044A  1303               	bcf	3,6	;RP1=0, select bank1
  6812  044B  00A2               	movwf	(_fitemp+2)^(0+128)
  6813                           
  6814                           ;main.c: 231: fop_rule3 = max_val(fitemp,0.1);
  6815  044C  0820               	movf	_fitemp^(0+128),w
  6816  044D  1283               	bcf	3,5	;RP0=0, select bank0
  6817  044E  1303               	bcf	3,6	;RP1=0, select bank0
  6818  044F  00A0               	movwf	max_val@a
  6819  0450  1683               	bsf	3,5	;RP0=1, select bank1
  6820  0451  1303               	bcf	3,6	;RP1=0, select bank1
  6821  0452  0821               	movf	(_fitemp+1)^(0+128),w
  6822  0453  1283               	bcf	3,5	;RP0=0, select bank0
  6823  0454  1303               	bcf	3,6	;RP1=0, select bank0
  6824  0455  00A1               	movwf	max_val@a+1
  6825  0456  1683               	bsf	3,5	;RP0=1, select bank1
  6826  0457  1303               	bcf	3,6	;RP1=0, select bank1
  6827  0458  0822               	movf	(_fitemp+2)^(0+128),w
  6828  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6829  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6830  045B  00A2               	movwf	max_val@a+2
  6831  045C  30CD               	movlw	205
  6832  045D  00A3               	movwf	max_val@b
  6833  045E  30CC               	movlw	204
  6834  045F  00A4               	movwf	max_val@b+1
  6835  0460  303D               	movlw	61
  6836  0461  00A5               	movwf	max_val@b+2
  6837  0462  160A  118A  20FA  120A  118A  	fcall	_max_val
  6838  0467  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0468  1303               	bcf	3,6	;RP1=0, select bank0
  6840  0469  0820               	movf	?_max_val,w
  6841  046A  1683               	bsf	3,5	;RP0=1, select bank1
  6842  046B  1303               	bcf	3,6	;RP1=0, select bank1
  6843  046C  00A9               	movwf	_fop_rule3^(0+128)
  6844  046D  1283               	bcf	3,5	;RP0=0, select bank0
  6845  046E  1303               	bcf	3,6	;RP1=0, select bank0
  6846  046F  0821               	movf	?_max_val+1,w
  6847  0470  1683               	bsf	3,5	;RP0=1, select bank1
  6848  0471  1303               	bcf	3,6	;RP1=0, select bank1
  6849  0472  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6850  0473  1283               	bcf	3,5	;RP0=0, select bank0
  6851  0474  1303               	bcf	3,6	;RP1=0, select bank0
  6852  0475  0822               	movf	?_max_val+2,w
  6853  0476  1683               	bsf	3,5	;RP0=1, select bank1
  6854  0477  1303               	bcf	3,6	;RP1=0, select bank1
  6855  0478  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6856                           
  6857                           ;main.c: 234: x=0;
  6858  0479  3000               	movlw	0
  6859  047A  00B5               	movwf	_x^(0+128)
  6860  047B  3000               	movlw	0
  6861  047C  00B6               	movwf	(_x+1)^(0+128)
  6862  047D  3000               	movlw	0
  6863  047E  00B7               	movwf	(_x+2)^(0+128)
  6864                           
  6865                           ;main.c: 235: y=0;
  6866  047F  3000               	movlw	0
  6867  0480  00B8               	movwf	_y^(0+128)
  6868  0481  3000               	movlw	0
  6869  0482  00B9               	movwf	(_y+1)^(0+128)
  6870  0483  3000               	movlw	0
  6871  0484  00BA               	movwf	(_y+2)^(0+128)
  6872                           
  6873                           ;main.c: 236: for (int a=0; a<=90; a++)
  6874  0485  1283               	bcf	3,5	;RP0=0, select bank0
  6875  0486  1303               	bcf	3,6	;RP1=0, select bank0
  6876  0487  01DD               	clrf	Fuzzy@a_233
  6877  0488  01DE               	clrf	Fuzzy@a_233+1
  6878  0489  085E               	movf	Fuzzy@a_233+1,w
  6879  048A  3A80               	xorlw	128
  6880  048B  00FF               	movwf	127
  6881  048C  3080               	movlw	128
  6882  048D  027F               	subwf	127,w
  6883  048E  1D03               	skipz
  6884  048F  2C92               	goto	u347_25
  6885  0490  305B               	movlw	91
  6886  0491  025D               	subwf	Fuzzy@a_233,w
  6887  0492                     u347_25:	
  6888  0492  1803               	btfsc	3,0
  6889  0493  2D5F               	goto	i1l2824
  6890  0494                     i1l2814:	
  6891                           
  6892                           ;main.c: 237: {
  6893                           ;main.c: 238: y = trapmf(x, 62, 79, 90, 90);
  6894  0494  1683               	bsf	3,5	;RP0=1, select bank1
  6895  0495  1303               	bcf	3,6	;RP1=0, select bank1
  6896  0496  0835               	movf	_x^(0+128),w
  6897  0497  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0498  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0499  00C7               	movwf	trapmf@x
  6900  049A  1683               	bsf	3,5	;RP0=1, select bank1
  6901  049B  1303               	bcf	3,6	;RP1=0, select bank1
  6902  049C  0836               	movf	(_x+1)^(0+128),w
  6903  049D  1283               	bcf	3,5	;RP0=0, select bank0
  6904  049E  1303               	bcf	3,6	;RP1=0, select bank0
  6905  049F  00C8               	movwf	trapmf@x+1
  6906  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  6907  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  6908  04A2  0837               	movf	(_x+2)^(0+128),w
  6909  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  6910  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  6911  04A5  00C9               	movwf	trapmf@x+2
  6912  04A6  3000               	movlw	0
  6913  04A7  00CA               	movwf	trapmf@a
  6914  04A8  3078               	movlw	120
  6915  04A9  00CB               	movwf	trapmf@a+1
  6916  04AA  3042               	movlw	66
  6917  04AB  00CC               	movwf	trapmf@a+2
  6918  04AC  3000               	movlw	0
  6919  04AD  00CD               	movwf	trapmf@b
  6920  04AE  309E               	movlw	158
  6921  04AF  00CE               	movwf	trapmf@b+1
  6922  04B0  3042               	movlw	66
  6923  04B1  00CF               	movwf	trapmf@b+2
  6924  04B2  3000               	movlw	0
  6925  04B3  00D0               	movwf	trapmf@c
  6926  04B4  30B4               	movlw	180
  6927  04B5  00D1               	movwf	trapmf@c+1
  6928  04B6  3042               	movlw	66
  6929  04B7  00D2               	movwf	trapmf@c+2
  6930  04B8  3000               	movlw	0
  6931  04B9  00D3               	movwf	trapmf@d
  6932  04BA  30B4               	movlw	180
  6933  04BB  00D4               	movwf	trapmf@d+1
  6934  04BC  3042               	movlw	66
  6935  04BD  00D5               	movwf	trapmf@d+2
  6936  04BE  120A  158A  22C3  120A  118A  	fcall	_trapmf
  6937  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  6938  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  6939  04C5  0847               	movf	?_trapmf,w
  6940  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  6941  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  6942  04C8  00B8               	movwf	_y^(0+128)
  6943  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  6944  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  6945  04CB  0848               	movf	?_trapmf+1,w
  6946  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  6947  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  6948  04CE  00B9               	movwf	(_y+1)^(0+128)
  6949  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  6950  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  6951  04D1  0849               	movf	?_trapmf+2,w
  6952  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  6953  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  6954  04D4  00BA               	movwf	(_y+2)^(0+128)
  6955                           
  6956                           ;main.c: 240: if (y >= fop_rule3)
  6957  04D5  0838               	movf	_y^(0+128),w
  6958  04D6  00F0               	movwf	___ftge@ff1
  6959  04D7  0839               	movf	(_y+1)^(0+128),w
  6960  04D8  00F1               	movwf	___ftge@ff1+1
  6961  04D9  083A               	movf	(_y+2)^(0+128),w
  6962  04DA  00F2               	movwf	___ftge@ff1+2
  6963  04DB  0829               	movf	_fop_rule3^(0+128),w
  6964  04DC  00F3               	movwf	___ftge@ff2
  6965  04DD  082A               	movf	(_fop_rule3+1)^(0+128),w
  6966  04DE  00F4               	movwf	___ftge@ff2+1
  6967  04DF  082B               	movf	(_fop_rule3+2)^(0+128),w
  6968  04E0  00F5               	movwf	___ftge@ff2+2
  6969  04E1  160A  118A  2323  120A  118A  	fcall	___ftge
  6970  04E6  1C03               	btfss	3,0
  6971  04E7  2CF8               	goto	i1l2818
  6972                           
  6973                           ;main.c: 241: {
  6974                           ;main.c: 242: aumenta += fop_rule3;
  6975  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  6976  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  6977  04EA  0829               	movf	_fop_rule3^(0+128),w
  6978  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  6979  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  6980  04ED  00AA               	movwf	___ftadd@f1
  6981  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  6982  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  6983  04F0  082A               	movf	(_fop_rule3+1)^(0+128),w
  6984  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6985  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6986  04F3  00AB               	movwf	___ftadd@f1+1
  6987  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  6988  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  6989  04F6  082B               	movf	(_fop_rule3+2)^(0+128),w
  6990  04F7  2D07               	goto	L5
  6991  04F8                     i1l2818:	
  6992                           ;main.c: 243: }
  6993                           
  6994                           
  6995                           ;main.c: 244: else
  6996                           ;main.c: 245: {
  6997                           ;main.c: 246: aumenta += y;
  6998  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  6999  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  7000  04FA  0838               	movf	_y^(0+128),w
  7001  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  7002  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  7003  04FD  00AA               	movwf	___ftadd@f1
  7004  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  7005  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  7006  0500  0839               	movf	(_y+1)^(0+128),w
  7007  0501  1283               	bcf	3,5	;RP0=0, select bank0
  7008  0502  1303               	bcf	3,6	;RP1=0, select bank0
  7009  0503  00AB               	movwf	___ftadd@f1+1
  7010  0504  1683               	bsf	3,5	;RP0=1, select bank1
  7011  0505  1303               	bcf	3,6	;RP1=0, select bank1
  7012  0506  083A               	movf	(_y+2)^(0+128),w
  7013  0507                     L5:	
  7014  0507  1283               	bcf	3,5	;RP0=0, select bank0
  7015  0508  1303               	bcf	3,6	;RP1=0, select bank0
  7016  0509  00AC               	movwf	___ftadd@f1+2
  7017  050A  086C               	movf	Fuzzy@aumenta,w
  7018  050B  00AD               	movwf	___ftadd@f2
  7019  050C  086D               	movf	Fuzzy@aumenta+1,w
  7020  050D  00AE               	movwf	___ftadd@f2+1
  7021  050E  086E               	movf	Fuzzy@aumenta+2,w
  7022  050F  00AF               	movwf	___ftadd@f2+2
  7023  0510  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7024  0515  1283               	bcf	3,5	;RP0=0, select bank0
  7025  0516  1303               	bcf	3,6	;RP1=0, select bank0
  7026  0517  082A               	movf	?___ftadd,w
  7027  0518  00EC               	movwf	Fuzzy@aumenta
  7028  0519  082B               	movf	?___ftadd+1,w
  7029  051A  00ED               	movwf	Fuzzy@aumenta+1
  7030  051B  082C               	movf	?___ftadd+2,w
  7031  051C  00EE               	movwf	Fuzzy@aumenta+2
  7032                           
  7033                           ;main.c: 247: }
  7034                           ;main.c: 249: x=x+1;
  7035  051D  3000               	movlw	0
  7036  051E  00AA               	movwf	___ftadd@f1
  7037  051F  3080               	movlw	128
  7038  0520  00AB               	movwf	___ftadd@f1+1
  7039  0521  303F               	movlw	63
  7040  0522  00AC               	movwf	___ftadd@f1+2
  7041  0523  1683               	bsf	3,5	;RP0=1, select bank1
  7042  0524  1303               	bcf	3,6	;RP1=0, select bank1
  7043  0525  0835               	movf	_x^(0+128),w
  7044  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7045  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7046  0528  00AD               	movwf	___ftadd@f2
  7047  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7048  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7049  052B  0836               	movf	(_x+1)^(0+128),w
  7050  052C  1283               	bcf	3,5	;RP0=0, select bank0
  7051  052D  1303               	bcf	3,6	;RP1=0, select bank0
  7052  052E  00AE               	movwf	___ftadd@f2+1
  7053  052F  1683               	bsf	3,5	;RP0=1, select bank1
  7054  0530  1303               	bcf	3,6	;RP1=0, select bank1
  7055  0531  0837               	movf	(_x+2)^(0+128),w
  7056  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7057  0533  1303               	bcf	3,6	;RP1=0, select bank0
  7058  0534  00AF               	movwf	___ftadd@f2+2
  7059  0535  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7060  053A  1283               	bcf	3,5	;RP0=0, select bank0
  7061  053B  1303               	bcf	3,6	;RP1=0, select bank0
  7062  053C  082A               	movf	?___ftadd,w
  7063  053D  1683               	bsf	3,5	;RP0=1, select bank1
  7064  053E  1303               	bcf	3,6	;RP1=0, select bank1
  7065  053F  00B5               	movwf	_x^(0+128)
  7066  0540  1283               	bcf	3,5	;RP0=0, select bank0
  7067  0541  1303               	bcf	3,6	;RP1=0, select bank0
  7068  0542  082B               	movf	?___ftadd+1,w
  7069  0543  1683               	bsf	3,5	;RP0=1, select bank1
  7070  0544  1303               	bcf	3,6	;RP1=0, select bank1
  7071  0545  00B6               	movwf	(_x+1)^(0+128)
  7072  0546  1283               	bcf	3,5	;RP0=0, select bank0
  7073  0547  1303               	bcf	3,6	;RP1=0, select bank0
  7074  0548  082C               	movf	?___ftadd+2,w
  7075  0549  1683               	bsf	3,5	;RP0=1, select bank1
  7076  054A  1303               	bcf	3,6	;RP1=0, select bank1
  7077  054B  00B7               	movwf	(_x+2)^(0+128)
  7078  054C  3001               	movlw	1
  7079  054D  1283               	bcf	3,5	;RP0=0, select bank0
  7080  054E  1303               	bcf	3,6	;RP1=0, select bank0
  7081  054F  07DD               	addwf	Fuzzy@a_233,f
  7082  0550  1803               	skipnc
  7083  0551  0ADE               	incf	Fuzzy@a_233+1,f
  7084  0552  3000               	movlw	0
  7085  0553  07DE               	addwf	Fuzzy@a_233+1,f
  7086  0554  085E               	movf	Fuzzy@a_233+1,w
  7087  0555  3A80               	xorlw	128
  7088  0556  00FF               	movwf	127
  7089  0557  3080               	movlw	128
  7090  0558  027F               	subwf	127,w
  7091  0559  1D03               	skipz
  7092  055A  2D5D               	goto	u349_25
  7093  055B  305B               	movlw	91
  7094  055C  025D               	subwf	Fuzzy@a_233,w
  7095  055D                     u349_25:	
  7096  055D  1C03               	skipc
  7097  055E  2C94               	goto	i1l2814
  7098  055F                     i1l2824:	
  7099                           
  7100                           ;main.c: 250: }
  7101                           ;main.c: 252: }
  7102                           ;main.c: 255: for (int a=0; a<1; a++)
  7103  055F  1283               	bcf	3,5	;RP0=0, select bank0
  7104  0560  1303               	bcf	3,6	;RP1=0, select bank0
  7105  0561  01DF               	clrf	Fuzzy@a_234
  7106  0562  01E0               	clrf	Fuzzy@a_234+1
  7107  0563  0860               	movf	Fuzzy@a_234+1,w
  7108  0564  3A80               	xorlw	128
  7109  0565  00FF               	movwf	127
  7110  0566  3080               	movlw	128
  7111  0567  027F               	subwf	127,w
  7112  0568  1D03               	skipz
  7113  0569  2D6C               	goto	u350_25
  7114  056A  3001               	movlw	1
  7115  056B  025F               	subwf	Fuzzy@a_234,w
  7116  056C                     u350_25:	
  7117  056C  1803               	btfsc	3,0
  7118  056D  2DD6               	goto	i1l2844
  7119  056E                     i1l2830:	
  7120                           
  7121                           ;main.c: 256: {
  7122                           ;main.c: 257: if (temp < 25)
  7123  056E  1683               	bsf	3,5	;RP0=1, select bank1
  7124  056F  1303               	bcf	3,6	;RP1=0, select bank1
  7125  0570  082F               	movf	_temp^(0+128),w
  7126  0571  00F0               	movwf	___ftge@ff1
  7127  0572  0830               	movf	(_temp+1)^(0+128),w
  7128  0573  00F1               	movwf	___ftge@ff1+1
  7129  0574  0831               	movf	(_temp+2)^(0+128),w
  7130  0575  00F2               	movwf	___ftge@ff1+2
  7131  0576  3000               	movlw	0
  7132  0577  00F3               	movwf	___ftge@ff2
  7133  0578  30C8               	movlw	200
  7134  0579  00F4               	movwf	___ftge@ff2+1
  7135  057A  3041               	movlw	65
  7136  057B  00F5               	movwf	___ftge@ff2+2
  7137  057C  160A  118A  2323  120A  118A  	fcall	___ftge
  7138  0581  1803               	btfsc	3,0
  7139  0582  2D8B               	goto	i1l2834
  7140                           
  7141                           ;main.c: 258: {
  7142                           ;main.c: 259: tip = mantem;
  7143  0583  1283               	bcf	3,5	;RP0=0, select bank0
  7144  0584  1303               	bcf	3,6	;RP1=0, select bank0
  7145  0585  0866               	movf	Fuzzy@mantem,w
  7146  0586  00E3               	movwf	Fuzzy@tip
  7147  0587  0867               	movf	Fuzzy@mantem+1,w
  7148  0588  00E4               	movwf	Fuzzy@tip+1
  7149  0589  0868               	movf	Fuzzy@mantem+2,w
  7150  058A  2DC4               	goto	L7
  7151  058B                     i1l2834:	
  7152                           ;main.c: 260: }else
  7153                           
  7154                           
  7155                           ;main.c: 261: if (temp >= 25 && temp < 75)
  7156  058B  1683               	bsf	3,5	;RP0=1, select bank1
  7157  058C  1303               	bcf	3,6	;RP1=0, select bank1
  7158  058D  082F               	movf	_temp^(0+128),w
  7159  058E  00F0               	movwf	___ftge@ff1
  7160  058F  0830               	movf	(_temp+1)^(0+128),w
  7161  0590  00F1               	movwf	___ftge@ff1+1
  7162  0591  0831               	movf	(_temp+2)^(0+128),w
  7163  0592  00F2               	movwf	___ftge@ff1+2
  7164  0593  3000               	movlw	0
  7165  0594  00F3               	movwf	___ftge@ff2
  7166  0595  30C8               	movlw	200
  7167  0596  00F4               	movwf	___ftge@ff2+1
  7168  0597  3041               	movlw	65
  7169  0598  00F5               	movwf	___ftge@ff2+2
  7170  0599  160A  118A  2323  120A  118A  	fcall	___ftge
  7171  059E  1C03               	btfss	3,0
  7172  059F  2DBD               	goto	i1l2840
  7173  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  7174  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  7175  05A2  082F               	movf	_temp^(0+128),w
  7176  05A3  00F0               	movwf	___ftge@ff1
  7177  05A4  0830               	movf	(_temp+1)^(0+128),w
  7178  05A5  00F1               	movwf	___ftge@ff1+1
  7179  05A6  0831               	movf	(_temp+2)^(0+128),w
  7180  05A7  00F2               	movwf	___ftge@ff1+2
  7181  05A8  3000               	movlw	0
  7182  05A9  00F3               	movwf	___ftge@ff2
  7183  05AA  3096               	movlw	150
  7184  05AB  00F4               	movwf	___ftge@ff2+1
  7185  05AC  3042               	movlw	66
  7186  05AD  00F5               	movwf	___ftge@ff2+2
  7187  05AE  160A  118A  2323  120A  118A  	fcall	___ftge
  7188  05B3  1803               	btfsc	3,0
  7189  05B4  2DBD               	goto	i1l2840
  7190                           
  7191                           ;main.c: 262: {
  7192                           ;main.c: 263: tip = reduz;
  7193  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  7194  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  7195  05B7  0869               	movf	Fuzzy@reduz,w
  7196  05B8  00E3               	movwf	Fuzzy@tip
  7197  05B9  086A               	movf	Fuzzy@reduz+1,w
  7198  05BA  00E4               	movwf	Fuzzy@tip+1
  7199  05BB  086B               	movf	Fuzzy@reduz+2,w
  7200  05BC  2DC4               	goto	L7
  7201  05BD                     i1l2840:	
  7202                           ;main.c: 264: }else
  7203                           
  7204                           
  7205                           ;main.c: 265: {
  7206                           ;main.c: 266: tip = aumenta;
  7207  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  7208  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  7209  05BF  086C               	movf	Fuzzy@aumenta,w
  7210  05C0  00E3               	movwf	Fuzzy@tip
  7211  05C1  086D               	movf	Fuzzy@aumenta+1,w
  7212  05C2  00E4               	movwf	Fuzzy@tip+1
  7213  05C3  086E               	movf	Fuzzy@aumenta+2,w
  7214  05C4                     L7:	
  7215  05C4  00E5               	movwf	Fuzzy@tip+2
  7216  05C5  3001               	movlw	1
  7217  05C6  07DF               	addwf	Fuzzy@a_234,f
  7218  05C7  1803               	skipnc
  7219  05C8  0AE0               	incf	Fuzzy@a_234+1,f
  7220  05C9  3000               	movlw	0
  7221  05CA  07E0               	addwf	Fuzzy@a_234+1,f
  7222  05CB  0860               	movf	Fuzzy@a_234+1,w
  7223  05CC  3A80               	xorlw	128
  7224  05CD  00FF               	movwf	127
  7225  05CE  3080               	movlw	128
  7226  05CF  027F               	subwf	127,w
  7227  05D0  1D03               	skipz
  7228  05D1  2DD4               	goto	u354_25
  7229  05D2  3001               	movlw	1
  7230  05D3  025F               	subwf	Fuzzy@a_234,w
  7231  05D4                     u354_25:	
  7232  05D4  1C03               	skipc
  7233  05D5  2D6E               	goto	i1l2830
  7234  05D6                     i1l2844:	
  7235                           
  7236                           ;main.c: 267: }
  7237                           ;main.c: 268: }
  7238                           ;main.c: 272: x = 0;
  7239  05D6  3000               	movlw	0
  7240  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  7241  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  7242  05D9  00B5               	movwf	_x^(0+128)
  7243  05DA  3000               	movlw	0
  7244  05DB  00B6               	movwf	(_x+1)^(0+128)
  7245  05DC  3000               	movlw	0
  7246  05DD  00B7               	movwf	(_x+2)^(0+128)
  7247                           
  7248                           ;main.c: 273: total_area = 0;
  7249  05DE  3000               	movlw	0
  7250  05DF  00B2               	movwf	_total_area^(0+128)
  7251  05E0  3000               	movlw	0
  7252  05E1  00B3               	movwf	(_total_area+1)^(0+128)
  7253  05E2  3000               	movlw	0
  7254  05E3  00B4               	movwf	(_total_area+2)^(0+128)
  7255                           
  7256                           ;main.c: 274: sum = 0;
  7257  05E4  3000               	movlw	0
  7258  05E5  00AC               	movwf	_sum^(0+128)
  7259  05E6  3000               	movlw	0
  7260  05E7  00AD               	movwf	(_sum+1)^(0+128)
  7261  05E8  3000               	movlw	0
  7262  05E9  00AE               	movwf	(_sum+2)^(0+128)
  7263                           
  7264                           ;main.c: 275: for (int a=0; a<1; a++)
  7265  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  7266  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  7267  05EC  01E1               	clrf	Fuzzy@a_235
  7268  05ED  01E2               	clrf	Fuzzy@a_235+1
  7269  05EE  0862               	movf	Fuzzy@a_235+1,w
  7270  05EF  3A80               	xorlw	128
  7271  05F0  00FF               	movwf	127
  7272  05F1  3080               	movlw	128
  7273  05F2  027F               	subwf	127,w
  7274  05F3  1D03               	skipz
  7275  05F4  2DF7               	goto	u355_25
  7276  05F5  3001               	movlw	1
  7277  05F6  0261               	subwf	Fuzzy@a_235,w
  7278  05F7                     u355_25:	
  7279  05F7  1803               	btfsc	3,0
  7280  05F8  2EB0               	goto	i1l2858
  7281  05F9                     i1l2852:	
  7282                           
  7283                           ;main.c: 276: {
  7284                           ;main.c: 277: total_area = total_area + tip;
  7285  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  7286  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  7287  05FB  0863               	movf	Fuzzy@tip,w
  7288  05FC  00AA               	movwf	___ftadd@f1
  7289  05FD  0864               	movf	Fuzzy@tip+1,w
  7290  05FE  00AB               	movwf	___ftadd@f1+1
  7291  05FF  0865               	movf	Fuzzy@tip+2,w
  7292  0600  00AC               	movwf	___ftadd@f1+2
  7293  0601  1683               	bsf	3,5	;RP0=1, select bank1
  7294  0602  1303               	bcf	3,6	;RP1=0, select bank1
  7295  0603  0832               	movf	_total_area^(0+128),w
  7296  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7297  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7298  0606  00AD               	movwf	___ftadd@f2
  7299  0607  1683               	bsf	3,5	;RP0=1, select bank1
  7300  0608  1303               	bcf	3,6	;RP1=0, select bank1
  7301  0609  0833               	movf	(_total_area+1)^(0+128),w
  7302  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7303  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7304  060C  00AE               	movwf	___ftadd@f2+1
  7305  060D  1683               	bsf	3,5	;RP0=1, select bank1
  7306  060E  1303               	bcf	3,6	;RP1=0, select bank1
  7307  060F  0834               	movf	(_total_area+2)^(0+128),w
  7308  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7309  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7310  0612  00AF               	movwf	___ftadd@f2+2
  7311  0613  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7312  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7314  061A  082A               	movf	?___ftadd,w
  7315  061B  1683               	bsf	3,5	;RP0=1, select bank1
  7316  061C  1303               	bcf	3,6	;RP1=0, select bank1
  7317  061D  00B2               	movwf	_total_area^(0+128)
  7318  061E  1283               	bcf	3,5	;RP0=0, select bank0
  7319  061F  1303               	bcf	3,6	;RP1=0, select bank0
  7320  0620  082B               	movf	?___ftadd+1,w
  7321  0621  1683               	bsf	3,5	;RP0=1, select bank1
  7322  0622  1303               	bcf	3,6	;RP1=0, select bank1
  7323  0623  00B3               	movwf	(_total_area+1)^(0+128)
  7324  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7325  0625  1303               	bcf	3,6	;RP1=0, select bank0
  7326  0626  082C               	movf	?___ftadd+2,w
  7327  0627  1683               	bsf	3,5	;RP0=1, select bank1
  7328  0628  1303               	bcf	3,6	;RP1=0, select bank1
  7329  0629  00B4               	movwf	(_total_area+2)^(0+128)
  7330                           
  7331                           ;main.c: 278: sum = sum + (x * tip);
  7332  062A  082C               	movf	_sum^(0+128),w
  7333  062B  1283               	bcf	3,5	;RP0=0, select bank0
  7334  062C  1303               	bcf	3,6	;RP1=0, select bank0
  7335  062D  00AA               	movwf	___ftadd@f1
  7336  062E  1683               	bsf	3,5	;RP0=1, select bank1
  7337  062F  1303               	bcf	3,6	;RP1=0, select bank1
  7338  0630  082D               	movf	(_sum+1)^(0+128),w
  7339  0631  1283               	bcf	3,5	;RP0=0, select bank0
  7340  0632  1303               	bcf	3,6	;RP1=0, select bank0
  7341  0633  00AB               	movwf	___ftadd@f1+1
  7342  0634  1683               	bsf	3,5	;RP0=1, select bank1
  7343  0635  1303               	bcf	3,6	;RP1=0, select bank1
  7344  0636  082E               	movf	(_sum+2)^(0+128),w
  7345  0637  1283               	bcf	3,5	;RP0=0, select bank0
  7346  0638  1303               	bcf	3,6	;RP1=0, select bank0
  7347  0639  00AC               	movwf	___ftadd@f1+2
  7348  063A  0863               	movf	Fuzzy@tip,w
  7349  063B  00F8               	movwf	___ftmul@f1
  7350  063C  0864               	movf	Fuzzy@tip+1,w
  7351  063D  00F9               	movwf	___ftmul@f1+1
  7352  063E  0865               	movf	Fuzzy@tip+2,w
  7353  063F  00FA               	movwf	___ftmul@f1+2
  7354  0640  1683               	bsf	3,5	;RP0=1, select bank1
  7355  0641  1303               	bcf	3,6	;RP1=0, select bank1
  7356  0642  0835               	movf	_x^(0+128),w
  7357  0643  00FB               	movwf	___ftmul@f2
  7358  0644  0836               	movf	(_x+1)^(0+128),w
  7359  0645  00FC               	movwf	___ftmul@f2+1
  7360  0646  0837               	movf	(_x+2)^(0+128),w
  7361  0647  00FD               	movwf	___ftmul@f2+2
  7362  0648  160A  118A  2626  120A  118A  	fcall	___ftmul
  7363  064D  0878               	movf	?___ftmul,w
  7364  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7365  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7366  0650  00AD               	movwf	___ftadd@f2
  7367  0651  0879               	movf	?___ftmul+1,w
  7368  0652  00AE               	movwf	___ftadd@f2+1
  7369  0653  087A               	movf	?___ftmul+2,w
  7370  0654  00AF               	movwf	___ftadd@f2+2
  7371  0655  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7372  065A  1283               	bcf	3,5	;RP0=0, select bank0
  7373  065B  1303               	bcf	3,6	;RP1=0, select bank0
  7374  065C  082A               	movf	?___ftadd,w
  7375  065D  1683               	bsf	3,5	;RP0=1, select bank1
  7376  065E  1303               	bcf	3,6	;RP1=0, select bank1
  7377  065F  00AC               	movwf	_sum^(0+128)
  7378  0660  1283               	bcf	3,5	;RP0=0, select bank0
  7379  0661  1303               	bcf	3,6	;RP1=0, select bank0
  7380  0662  082B               	movf	?___ftadd+1,w
  7381  0663  1683               	bsf	3,5	;RP0=1, select bank1
  7382  0664  1303               	bcf	3,6	;RP1=0, select bank1
  7383  0665  00AD               	movwf	(_sum+1)^(0+128)
  7384  0666  1283               	bcf	3,5	;RP0=0, select bank0
  7385  0667  1303               	bcf	3,6	;RP1=0, select bank0
  7386  0668  082C               	movf	?___ftadd+2,w
  7387  0669  1683               	bsf	3,5	;RP0=1, select bank1
  7388  066A  1303               	bcf	3,6	;RP1=0, select bank1
  7389  066B  00AE               	movwf	(_sum+2)^(0+128)
  7390                           
  7391                           ;main.c: 280: x=x+1;
  7392  066C  3000               	movlw	0
  7393  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7394  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7395  066F  00AA               	movwf	___ftadd@f1
  7396  0670  3080               	movlw	128
  7397  0671  00AB               	movwf	___ftadd@f1+1
  7398  0672  303F               	movlw	63
  7399  0673  00AC               	movwf	___ftadd@f1+2
  7400  0674  1683               	bsf	3,5	;RP0=1, select bank1
  7401  0675  1303               	bcf	3,6	;RP1=0, select bank1
  7402  0676  0835               	movf	_x^(0+128),w
  7403  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7405  0679  00AD               	movwf	___ftadd@f2
  7406  067A  1683               	bsf	3,5	;RP0=1, select bank1
  7407  067B  1303               	bcf	3,6	;RP1=0, select bank1
  7408  067C  0836               	movf	(_x+1)^(0+128),w
  7409  067D  1283               	bcf	3,5	;RP0=0, select bank0
  7410  067E  1303               	bcf	3,6	;RP1=0, select bank0
  7411  067F  00AE               	movwf	___ftadd@f2+1
  7412  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7413  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7414  0682  0837               	movf	(_x+2)^(0+128),w
  7415  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7416  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7417  0685  00AF               	movwf	___ftadd@f2+2
  7418  0686  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7419  068B  1283               	bcf	3,5	;RP0=0, select bank0
  7420  068C  1303               	bcf	3,6	;RP1=0, select bank0
  7421  068D  082A               	movf	?___ftadd,w
  7422  068E  1683               	bsf	3,5	;RP0=1, select bank1
  7423  068F  1303               	bcf	3,6	;RP1=0, select bank1
  7424  0690  00B5               	movwf	_x^(0+128)
  7425  0691  1283               	bcf	3,5	;RP0=0, select bank0
  7426  0692  1303               	bcf	3,6	;RP1=0, select bank0
  7427  0693  082B               	movf	?___ftadd+1,w
  7428  0694  1683               	bsf	3,5	;RP0=1, select bank1
  7429  0695  1303               	bcf	3,6	;RP1=0, select bank1
  7430  0696  00B6               	movwf	(_x+1)^(0+128)
  7431  0697  1283               	bcf	3,5	;RP0=0, select bank0
  7432  0698  1303               	bcf	3,6	;RP1=0, select bank0
  7433  0699  082C               	movf	?___ftadd+2,w
  7434  069A  1683               	bsf	3,5	;RP0=1, select bank1
  7435  069B  1303               	bcf	3,6	;RP1=0, select bank1
  7436  069C  00B7               	movwf	(_x+2)^(0+128)
  7437  069D  3001               	movlw	1
  7438  069E  1283               	bcf	3,5	;RP0=0, select bank0
  7439  069F  1303               	bcf	3,6	;RP1=0, select bank0
  7440  06A0  07E1               	addwf	Fuzzy@a_235,f
  7441  06A1  1803               	skipnc
  7442  06A2  0AE2               	incf	Fuzzy@a_235+1,f
  7443  06A3  3000               	movlw	0
  7444  06A4  07E2               	addwf	Fuzzy@a_235+1,f
  7445  06A5  0862               	movf	Fuzzy@a_235+1,w
  7446  06A6  3A80               	xorlw	128
  7447  06A7  00FF               	movwf	127
  7448  06A8  3080               	movlw	128
  7449  06A9  027F               	subwf	127,w
  7450  06AA  1D03               	skipz
  7451  06AB  2EAE               	goto	u356_25
  7452  06AC  3001               	movlw	1
  7453  06AD  0261               	subwf	Fuzzy@a_235,w
  7454  06AE                     u356_25:	
  7455  06AE  1C03               	skipc
  7456  06AF  2DF9               	goto	i1l2852
  7457  06B0                     i1l2858:	
  7458                           
  7459                           ;main.c: 281: }
  7460                           ;main.c: 284: ativa_fan = sum/total_area;
  7461  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  7462  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  7463  06B2  0832               	movf	_total_area^(0+128),w
  7464  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  7465  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  7466  06B5  00B7               	movwf	___ftdiv@f2
  7467  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  7468  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  7469  06B8  0833               	movf	(_total_area+1)^(0+128),w
  7470  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  7471  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  7472  06BB  00B8               	movwf	___ftdiv@f2+1
  7473  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  7474  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  7475  06BE  0834               	movf	(_total_area+2)^(0+128),w
  7476  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  7477  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  7478  06C1  00B9               	movwf	___ftdiv@f2+2
  7479  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  7480  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  7481  06C4  082C               	movf	_sum^(0+128),w
  7482  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  7483  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  7484  06C7  00BA               	movwf	___ftdiv@f1
  7485  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  7486  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  7487  06CA  082D               	movf	(_sum+1)^(0+128),w
  7488  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  7489  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  7490  06CD  00BB               	movwf	___ftdiv@f1+1
  7491  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  7492  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  7493  06D0  082E               	movf	(_sum+2)^(0+128),w
  7494  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  7495  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  7496  06D3  00BC               	movwf	___ftdiv@f1+2
  7497  06D4  160A  118A  256E  120A  118A  	fcall	___ftdiv
  7498  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7499  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7500  06DB  0837               	movf	?___ftdiv,w
  7501  06DC  1683               	bsf	3,5	;RP0=1, select bank3
  7502  06DD  1703               	bsf	3,6	;RP1=1, select bank3
  7503  06DE  0090               	movwf	_ativa_fan^(0+384)
  7504  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  7505  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  7506  06E1  0838               	movf	?___ftdiv+1,w
  7507  06E2  1683               	bsf	3,5	;RP0=1, select bank3
  7508  06E3  1703               	bsf	3,6	;RP1=1, select bank3
  7509  06E4  0091               	movwf	(_ativa_fan+1)^(0+384)
  7510  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  7511  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  7512  06E7  0839               	movf	?___ftdiv+2,w
  7513  06E8  1683               	bsf	3,5	;RP0=1, select bank3
  7514  06E9  1703               	bsf	3,6	;RP1=1, select bank3
  7515  06EA  0092               	movwf	(_ativa_fan+2)^(0+384)
  7516                           
  7517                           ;main.c: 288: if (deltaV >0 && deltaV < 1020)
  7518  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  7519  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  7520  06ED  083E               	movf	(_deltaV+1)^(0+128),w
  7521  06EE  043D               	iorwf	_deltaV^(0+128),w
  7522  06EF  1903               	skipnz
  7523  06F0  0008               	return
  7524  06F1  3003               	movlw	3
  7525  06F2  023E               	subwf	(_deltaV+1)^(0+128),w
  7526  06F3  30FC               	movlw	252
  7527  06F4  1903               	skipnz
  7528  06F5  023D               	subwf	_deltaV^(0+128),w
  7529  06F6  1803               	skipnc
  7530  06F7  0008               	return
  7531                           
  7532                           ;main.c: 289: {
  7533                           ;main.c: 290: PWM_DutyCycle2(deltaV);
  7534  06F8  083E               	movf	(_deltaV+1)^(0+128),w
  7535  06F9  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7536  06FA  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7537  06FB  083D               	movf	_deltaV^(0+128),w
  7538  06FC  01F0               	clrf	i1PWM_DutyCycle2@valor
  7539  06FD  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7540  06FE  160A  118A  20C4   	fcall	i1_PWM_DutyCycle2
  7541  0701  0008               	return
  7542  0702                     __end_of_Fuzzy:	
  7543                           
  7544                           	psect	text30
  7545  10C4                     __ptext30:	
  7546 ;; *************** function i1_PWM_DutyCycle2 *****************
  7547 ;; Defined at:
  7548 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  valor           2    0[COMMON] int 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;		None               void
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7562 ;;      Params:         2       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0
  7564 ;;      Temps:          2       0       0       0       0
  7565 ;;      Totals:         4       0       0       0       0
  7566 ;;Total ram usage:        4 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_Fuzzy
  7572 ;;		_ISR
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           
  7577                           ;psect for function i1_PWM_DutyCycle2
  7578  10C4                     i1_PWM_DutyCycle2:	
  7579                           
  7580                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7581                           
  7582                           ;incstack = 0
  7583                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7584  10C4  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7585  10C5  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7586  10C6  0870               	movf	i1PWM_DutyCycle2@valor,w
  7587  10C7  00F2               	movwf	??i1_PWM_DutyCycle2
  7588  10C8  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7589  10C9  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7590  10CA  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7591  10CB  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7592  10CC  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7593  10CD  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7594  10CE  0872               	movf	??i1_PWM_DutyCycle2,w
  7595  10CF  1283               	bcf	3,5	;RP0=0, select bank0
  7596  10D0  1303               	bcf	3,6	;RP1=0, select bank0
  7597  10D1  009B               	movwf	27	;volatile
  7598                           
  7599                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7600  10D2  0870               	movf	i1PWM_DutyCycle2@valor,w
  7601  10D3  00F2               	movwf	??i1_PWM_DutyCycle2
  7602  10D4  3003               	movlw	3
  7603  10D5                     u334_25:	
  7604  10D5  1003               	clrc
  7605  10D6  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7606  10D7  3EFF               	addlw	-1
  7607  10D8  1D03               	skipz
  7608  10D9  28D5               	goto	u334_25
  7609  10DA  1003               	clrc
  7610  10DB  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7611  10DC  380C               	iorlw	12
  7612  10DD  009D               	movwf	29	;volatile
  7613  10DE  0008               	return
  7614  10DF                     __end_ofi1_PWM_DutyCycle2:	
  7615                           
  7616                           	psect	text31
  7617  0856                     __ptext31:	
  7618 ;; *************** function _trimf *****************
  7619 ;; Defined at:
  7620 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  x               3   39[BANK0 ] float 
  7623 ;;  a               3   42[BANK0 ] float 
  7624 ;;  b               3   45[BANK0 ] float 
  7625 ;;  c               3   48[BANK0 ] float 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  ua              3   51[BANK0 ] float 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  3   39[BANK0 ] float 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7637 ;;      Params:         0      12       0       0       0
  7638 ;;      Locals:         0       3       0       0       0
  7639 ;;      Temps:          0       0       0       0       0
  7640 ;;      Totals:         0      15       0       0       0
  7641 ;;Total ram usage:       15 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    2
  7644 ;; This function calls:
  7645 ;;		___ftadd
  7646 ;;		___ftdiv
  7647 ;;		___ftge
  7648 ;;		___ftneg
  7649 ;; This function is called by:
  7650 ;;		_Fuzzy
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           
  7655                           ;psect for function _trimf
  7656  0856                     _trimf:	
  7657                           
  7658                           ;main.c: 70: float ua = 0;
  7659                           
  7660                           ;incstack = 0
  7661                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7662  0856  3000               	movlw	0
  7663  0857  1283               	bcf	3,5	;RP0=0, select bank0
  7664  0858  1303               	bcf	3,6	;RP1=0, select bank0
  7665  0859  00D3               	movwf	trimf@ua
  7666  085A  3000               	movlw	0
  7667  085B  00D4               	movwf	trimf@ua+1
  7668  085C  3000               	movlw	0
  7669  085D  00D5               	movwf	trimf@ua+2
  7670                           
  7671                           ;main.c: 72: if (x <= a)
  7672  085E  084A               	movf	trimf@a,w
  7673  085F  00F0               	movwf	___ftge@ff1
  7674  0860  084B               	movf	trimf@a+1,w
  7675  0861  00F1               	movwf	___ftge@ff1+1
  7676  0862  084C               	movf	trimf@a+2,w
  7677  0863  00F2               	movwf	___ftge@ff1+2
  7678  0864  0847               	movf	trimf@x,w
  7679  0865  00F3               	movwf	___ftge@ff2
  7680  0866  0848               	movf	trimf@x+1,w
  7681  0867  00F4               	movwf	___ftge@ff2+1
  7682  0868  0849               	movf	trimf@x+2,w
  7683  0869  00F5               	movwf	___ftge@ff2+2
  7684  086A  160A  118A  2323  120A  158A  	fcall	___ftge
  7685  086F  1803               	btfsc	3,0
  7686  0870  2969               	goto	L12
  7687                           
  7688                           ;main.c: 74: else if ((a < x) && (x <= b))
  7689                           
  7690                           ;main.c: 73: ua = 0;
  7691  0871  1283               	bcf	3,5	;RP0=0, select bank0
  7692  0872  1303               	bcf	3,6	;RP1=0, select bank0
  7693  0873  084A               	movf	trimf@a,w
  7694  0874  00F0               	movwf	___ftge@ff1
  7695  0875  084B               	movf	trimf@a+1,w
  7696  0876  00F1               	movwf	___ftge@ff1+1
  7697  0877  084C               	movf	trimf@a+2,w
  7698  0878  00F2               	movwf	___ftge@ff1+2
  7699  0879  0847               	movf	trimf@x,w
  7700  087A  00F3               	movwf	___ftge@ff2
  7701  087B  0848               	movf	trimf@x+1,w
  7702  087C  00F4               	movwf	___ftge@ff2+1
  7703  087D  0849               	movf	trimf@x+2,w
  7704  087E  00F5               	movwf	___ftge@ff2+2
  7705  087F  160A  118A  2323  120A  158A  	fcall	___ftge
  7706  0884  1803               	btfsc	3,0
  7707  0885  28CF               	goto	i1l2440
  7708  0886  1283               	bcf	3,5	;RP0=0, select bank0
  7709  0887  1303               	bcf	3,6	;RP1=0, select bank0
  7710  0888  084D               	movf	trimf@b,w
  7711  0889  00F0               	movwf	___ftge@ff1
  7712  088A  084E               	movf	trimf@b+1,w
  7713  088B  00F1               	movwf	___ftge@ff1+1
  7714  088C  084F               	movf	trimf@b+2,w
  7715  088D  00F2               	movwf	___ftge@ff1+2
  7716  088E  0847               	movf	trimf@x,w
  7717  088F  00F3               	movwf	___ftge@ff2
  7718  0890  0848               	movf	trimf@x+1,w
  7719  0891  00F4               	movwf	___ftge@ff2+1
  7720  0892  0849               	movf	trimf@x+2,w
  7721  0893  00F5               	movwf	___ftge@ff2+2
  7722  0894  160A  118A  2323  120A  158A  	fcall	___ftge
  7723  0899  1C03               	btfss	3,0
  7724  089A  28CF               	goto	i1l2440
  7725                           
  7726                           ;main.c: 75: ua = ((x - a) / (b - a));
  7727  089B  1283               	bcf	3,5	;RP0=0, select bank0
  7728  089C  1303               	bcf	3,6	;RP1=0, select bank0
  7729  089D  084D               	movf	trimf@b,w
  7730  089E  00AA               	movwf	___ftadd@f1
  7731  089F  084E               	movf	trimf@b+1,w
  7732  08A0  00AB               	movwf	___ftadd@f1+1
  7733  08A1  084F               	movf	trimf@b+2,w
  7734  08A2  00AC               	movwf	___ftadd@f1+2
  7735  08A3  084A               	movf	trimf@a,w
  7736  08A4  00F0               	movwf	___ftneg@f1
  7737  08A5  084B               	movf	trimf@a+1,w
  7738  08A6  00F1               	movwf	___ftneg@f1+1
  7739  08A7  084C               	movf	trimf@a+2,w
  7740  08A8  00F2               	movwf	___ftneg@f1+2
  7741  08A9  160A  118A  2035  120A  158A  	fcall	___ftneg
  7742  08AE  0870               	movf	?___ftneg,w
  7743  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  7744  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  7745  08B1  00AD               	movwf	___ftadd@f2
  7746  08B2  0871               	movf	?___ftneg+1,w
  7747  08B3  00AE               	movwf	___ftadd@f2+1
  7748  08B4  0872               	movf	?___ftneg+2,w
  7749  08B5  00AF               	movwf	___ftadd@f2+2
  7750  08B6  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7751  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  7752  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  7753  08BD  082A               	movf	?___ftadd,w
  7754  08BE  00B7               	movwf	___ftdiv@f2
  7755  08BF  082B               	movf	?___ftadd+1,w
  7756  08C0  00B8               	movwf	___ftdiv@f2+1
  7757  08C1  082C               	movf	?___ftadd+2,w
  7758  08C2  00B9               	movwf	___ftdiv@f2+2
  7759  08C3  0847               	movf	trimf@x,w
  7760  08C4  00AA               	movwf	___ftadd@f1
  7761  08C5  0848               	movf	trimf@x+1,w
  7762  08C6  00AB               	movwf	___ftadd@f1+1
  7763  08C7  0849               	movf	trimf@x+2,w
  7764  08C8  00AC               	movwf	___ftadd@f1+2
  7765  08C9  084A               	movf	trimf@a,w
  7766  08CA  00F0               	movwf	___ftneg@f1
  7767  08CB  084B               	movf	trimf@a+1,w
  7768  08CC  00F1               	movwf	___ftneg@f1+1
  7769  08CD  084C               	movf	trimf@a+2,w
  7770  08CE  292C               	goto	L13
  7771  08CF                     i1l2440:	
  7772                           
  7773                           ;main.c: 76: else if ((b < x) && (x <= c))
  7774  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  7775  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  7776  08D1  084D               	movf	trimf@b,w
  7777  08D2  00F0               	movwf	___ftge@ff1
  7778  08D3  084E               	movf	trimf@b+1,w
  7779  08D4  00F1               	movwf	___ftge@ff1+1
  7780  08D5  084F               	movf	trimf@b+2,w
  7781  08D6  00F2               	movwf	___ftge@ff1+2
  7782  08D7  0847               	movf	trimf@x,w
  7783  08D8  00F3               	movwf	___ftge@ff2
  7784  08D9  0848               	movf	trimf@x+1,w
  7785  08DA  00F4               	movwf	___ftge@ff2+1
  7786  08DB  0849               	movf	trimf@x+2,w
  7787  08DC  00F5               	movwf	___ftge@ff2+2
  7788  08DD  160A  118A  2323  120A  158A  	fcall	___ftge
  7789  08E2  1803               	btfsc	3,0
  7790  08E3  2954               	goto	i1l2446
  7791  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  7792  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  7793  08E6  0850               	movf	trimf@c,w
  7794  08E7  00F0               	movwf	___ftge@ff1
  7795  08E8  0851               	movf	trimf@c+1,w
  7796  08E9  00F1               	movwf	___ftge@ff1+1
  7797  08EA  0852               	movf	trimf@c+2,w
  7798  08EB  00F2               	movwf	___ftge@ff1+2
  7799  08EC  0847               	movf	trimf@x,w
  7800  08ED  00F3               	movwf	___ftge@ff2
  7801  08EE  0848               	movf	trimf@x+1,w
  7802  08EF  00F4               	movwf	___ftge@ff2+1
  7803  08F0  0849               	movf	trimf@x+2,w
  7804  08F1  00F5               	movwf	___ftge@ff2+2
  7805  08F2  160A  118A  2323  120A  158A  	fcall	___ftge
  7806  08F7  1C03               	btfss	3,0
  7807  08F8  2954               	goto	i1l2446
  7808                           
  7809                           ;main.c: 77: ua = ((x - c) / (b - c));
  7810  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  7811  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  7812  08FB  084D               	movf	trimf@b,w
  7813  08FC  00AA               	movwf	___ftadd@f1
  7814  08FD  084E               	movf	trimf@b+1,w
  7815  08FE  00AB               	movwf	___ftadd@f1+1
  7816  08FF  084F               	movf	trimf@b+2,w
  7817  0900  00AC               	movwf	___ftadd@f1+2
  7818  0901  0850               	movf	trimf@c,w
  7819  0902  00F0               	movwf	___ftneg@f1
  7820  0903  0851               	movf	trimf@c+1,w
  7821  0904  00F1               	movwf	___ftneg@f1+1
  7822  0905  0852               	movf	trimf@c+2,w
  7823  0906  00F2               	movwf	___ftneg@f1+2
  7824  0907  160A  118A  2035  120A  158A  	fcall	___ftneg
  7825  090C  0870               	movf	?___ftneg,w
  7826  090D  1283               	bcf	3,5	;RP0=0, select bank0
  7827  090E  1303               	bcf	3,6	;RP1=0, select bank0
  7828  090F  00AD               	movwf	___ftadd@f2
  7829  0910  0871               	movf	?___ftneg+1,w
  7830  0911  00AE               	movwf	___ftadd@f2+1
  7831  0912  0872               	movf	?___ftneg+2,w
  7832  0913  00AF               	movwf	___ftadd@f2+2
  7833  0914  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7834  0919  1283               	bcf	3,5	;RP0=0, select bank0
  7835  091A  1303               	bcf	3,6	;RP1=0, select bank0
  7836  091B  082A               	movf	?___ftadd,w
  7837  091C  00B7               	movwf	___ftdiv@f2
  7838  091D  082B               	movf	?___ftadd+1,w
  7839  091E  00B8               	movwf	___ftdiv@f2+1
  7840  091F  082C               	movf	?___ftadd+2,w
  7841  0920  00B9               	movwf	___ftdiv@f2+2
  7842  0921  0847               	movf	trimf@x,w
  7843  0922  00AA               	movwf	___ftadd@f1
  7844  0923  0848               	movf	trimf@x+1,w
  7845  0924  00AB               	movwf	___ftadd@f1+1
  7846  0925  0849               	movf	trimf@x+2,w
  7847  0926  00AC               	movwf	___ftadd@f1+2
  7848  0927  0850               	movf	trimf@c,w
  7849  0928  00F0               	movwf	___ftneg@f1
  7850  0929  0851               	movf	trimf@c+1,w
  7851  092A  00F1               	movwf	___ftneg@f1+1
  7852  092B  0852               	movf	trimf@c+2,w
  7853  092C                     L13:	
  7854  092C  00F2               	movwf	___ftneg@f1+2
  7855  092D  160A  118A  2035  120A  158A  	fcall	___ftneg
  7856  0932  0870               	movf	?___ftneg,w
  7857  0933  1283               	bcf	3,5	;RP0=0, select bank0
  7858  0934  1303               	bcf	3,6	;RP1=0, select bank0
  7859  0935  00AD               	movwf	___ftadd@f2
  7860  0936  0871               	movf	?___ftneg+1,w
  7861  0937  00AE               	movwf	___ftadd@f2+1
  7862  0938  0872               	movf	?___ftneg+2,w
  7863  0939  00AF               	movwf	___ftadd@f2+2
  7864  093A  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7865  093F  1283               	bcf	3,5	;RP0=0, select bank0
  7866  0940  1303               	bcf	3,6	;RP1=0, select bank0
  7867  0941  082A               	movf	?___ftadd,w
  7868  0942  00BA               	movwf	___ftdiv@f1
  7869  0943  082B               	movf	?___ftadd+1,w
  7870  0944  00BB               	movwf	___ftdiv@f1+1
  7871  0945  082C               	movf	?___ftadd+2,w
  7872  0946  00BC               	movwf	___ftdiv@f1+2
  7873  0947  160A  118A  256E  120A  158A  	fcall	___ftdiv
  7874  094C  1283               	bcf	3,5	;RP0=0, select bank0
  7875  094D  1303               	bcf	3,6	;RP1=0, select bank0
  7876  094E  0837               	movf	?___ftdiv,w
  7877  094F  00D3               	movwf	trimf@ua
  7878  0950  0838               	movf	?___ftdiv+1,w
  7879  0951  00D4               	movwf	trimf@ua+1
  7880  0952  0839               	movf	?___ftdiv+2,w
  7881  0953  2970               	goto	L10
  7882  0954                     i1l2446:	
  7883                           
  7884                           ;main.c: 78: else if (x > c)
  7885  0954  1283               	bcf	3,5	;RP0=0, select bank0
  7886  0955  1303               	bcf	3,6	;RP1=0, select bank0
  7887  0956  0850               	movf	trimf@c,w
  7888  0957  00F0               	movwf	___ftge@ff1
  7889  0958  0851               	movf	trimf@c+1,w
  7890  0959  00F1               	movwf	___ftge@ff1+1
  7891  095A  0852               	movf	trimf@c+2,w
  7892  095B  00F2               	movwf	___ftge@ff1+2
  7893  095C  0847               	movf	trimf@x,w
  7894  095D  00F3               	movwf	___ftge@ff2
  7895  095E  0848               	movf	trimf@x+1,w
  7896  095F  00F4               	movwf	___ftge@ff2+1
  7897  0960  0849               	movf	trimf@x+2,w
  7898  0961  00F5               	movwf	___ftge@ff2+2
  7899  0962  160A  118A  2323  120A  158A  	fcall	___ftge
  7900  0967  1803               	btfsc	3,0
  7901  0968  2971               	goto	i1l118
  7902  0969                     L12:	
  7903                           
  7904                           ;main.c: 79: ua = 0;
  7905  0969  3000               	movlw	0
  7906  096A  1283               	bcf	3,5	;RP0=0, select bank0
  7907  096B  1303               	bcf	3,6	;RP1=0, select bank0
  7908  096C  00D3               	movwf	trimf@ua
  7909  096D  3000               	movlw	0
  7910  096E  00D4               	movwf	trimf@ua+1
  7911  096F  3000               	movlw	0
  7912  0970                     L10:	
  7913  0970  00D5               	movwf	trimf@ua+2
  7914  0971                     i1l118:	
  7915                           
  7916                           ;main.c: 81: return(ua);
  7917  0971  1283               	bcf	3,5	;RP0=0, select bank0
  7918  0972  1303               	bcf	3,6	;RP1=0, select bank0
  7919  0973  0853               	movf	trimf@ua,w
  7920  0974  00C7               	movwf	?_trimf
  7921  0975  0854               	movf	trimf@ua+1,w
  7922  0976  00C8               	movwf	?_trimf+1
  7923  0977  0855               	movf	trimf@ua+2,w
  7924  0978  00C9               	movwf	?_trimf+2
  7925  0979  0008               	return
  7926  097A                     __end_of_trimf:	
  7927                           
  7928                           	psect	text32
  7929  0AC3                     __ptext32:	
  7930 ;; *************** function _trapmf *****************
  7931 ;; Defined at:
  7932 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  x               3   39[BANK0 ] float 
  7935 ;;  a               3   42[BANK0 ] float 
  7936 ;;  b               3   45[BANK0 ] float 
  7937 ;;  c               3   48[BANK0 ] float 
  7938 ;;  d               3   51[BANK0 ] float 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  ua              3   54[BANK0 ] float 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  3   39[BANK0 ] float 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, pclath, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7950 ;;      Params:         0      15       0       0       0
  7951 ;;      Locals:         0       3       0       0       0
  7952 ;;      Temps:          0       0       0       0       0
  7953 ;;      Totals:         0      18       0       0       0
  7954 ;;Total ram usage:       18 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    2
  7957 ;; This function calls:
  7958 ;;		___ftadd
  7959 ;;		___ftdiv
  7960 ;;		___ftge
  7961 ;;		___ftneg
  7962 ;; This function is called by:
  7963 ;;		_Fuzzy
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           
  7968                           ;psect for function _trapmf
  7969  0AC3                     _trapmf:	
  7970                           
  7971                           ;main.c: 89: float ua = 0;
  7972                           
  7973                           ;incstack = 0
  7974                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7975  0AC3  3000               	movlw	0
  7976  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  7977  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  7978  0AC6  00D6               	movwf	trapmf@ua
  7979  0AC7  3000               	movlw	0
  7980  0AC8  00D7               	movwf	trapmf@ua+1
  7981  0AC9  3000               	movlw	0
  7982  0ACA  00D8               	movwf	trapmf@ua+2
  7983                           
  7984                           ;main.c: 91: if (x <= a)
  7985  0ACB  084A               	movf	trapmf@a,w
  7986  0ACC  00F0               	movwf	___ftge@ff1
  7987  0ACD  084B               	movf	trapmf@a+1,w
  7988  0ACE  00F1               	movwf	___ftge@ff1+1
  7989  0ACF  084C               	movf	trapmf@a+2,w
  7990  0AD0  00F2               	movwf	___ftge@ff1+2
  7991  0AD1  0847               	movf	trapmf@x,w
  7992  0AD2  00F3               	movwf	___ftge@ff2
  7993  0AD3  0848               	movf	trapmf@x+1,w
  7994  0AD4  00F4               	movwf	___ftge@ff2+1
  7995  0AD5  0849               	movf	trapmf@x+2,w
  7996  0AD6  00F5               	movwf	___ftge@ff2+2
  7997  0AD7  160A  118A  2323  120A  158A  	fcall	___ftge
  7998  0ADC  1803               	btfsc	3,0
  7999  0ADD  2C08               	goto	L18
  8000                           
  8001                           ;main.c: 93: else if ((a < x) && (x <= b))
  8002                           
  8003                           ;main.c: 92: ua = 0;
  8004  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0AE0  084A               	movf	trapmf@a,w
  8007  0AE1  00F0               	movwf	___ftge@ff1
  8008  0AE2  084B               	movf	trapmf@a+1,w
  8009  0AE3  00F1               	movwf	___ftge@ff1+1
  8010  0AE4  084C               	movf	trapmf@a+2,w
  8011  0AE5  00F2               	movwf	___ftge@ff1+2
  8012  0AE6  0847               	movf	trapmf@x,w
  8013  0AE7  00F3               	movwf	___ftge@ff2
  8014  0AE8  0848               	movf	trapmf@x+1,w
  8015  0AE9  00F4               	movwf	___ftge@ff2+1
  8016  0AEA  0849               	movf	trapmf@x+2,w
  8017  0AEB  00F5               	movwf	___ftge@ff2+2
  8018  0AEC  160A  118A  2323  120A  158A  	fcall	___ftge
  8019  0AF1  1803               	btfsc	3,0
  8020  0AF2  2B3C               	goto	i1l2464
  8021  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  8022  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  8023  0AF5  084D               	movf	trapmf@b,w
  8024  0AF6  00F0               	movwf	___ftge@ff1
  8025  0AF7  084E               	movf	trapmf@b+1,w
  8026  0AF8  00F1               	movwf	___ftge@ff1+1
  8027  0AF9  084F               	movf	trapmf@b+2,w
  8028  0AFA  00F2               	movwf	___ftge@ff1+2
  8029  0AFB  0847               	movf	trapmf@x,w
  8030  0AFC  00F3               	movwf	___ftge@ff2
  8031  0AFD  0848               	movf	trapmf@x+1,w
  8032  0AFE  00F4               	movwf	___ftge@ff2+1
  8033  0AFF  0849               	movf	trapmf@x+2,w
  8034  0B00  00F5               	movwf	___ftge@ff2+2
  8035  0B01  160A  118A  2323  120A  158A  	fcall	___ftge
  8036  0B06  1C03               	btfss	3,0
  8037  0B07  2B3C               	goto	i1l2464
  8038                           
  8039                           ;main.c: 94: ua = ((x - a) / (b - a));
  8040  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  8041  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  8042  0B0A  084D               	movf	trapmf@b,w
  8043  0B0B  00AA               	movwf	___ftadd@f1
  8044  0B0C  084E               	movf	trapmf@b+1,w
  8045  0B0D  00AB               	movwf	___ftadd@f1+1
  8046  0B0E  084F               	movf	trapmf@b+2,w
  8047  0B0F  00AC               	movwf	___ftadd@f1+2
  8048  0B10  084A               	movf	trapmf@a,w
  8049  0B11  00F0               	movwf	___ftneg@f1
  8050  0B12  084B               	movf	trapmf@a+1,w
  8051  0B13  00F1               	movwf	___ftneg@f1+1
  8052  0B14  084C               	movf	trapmf@a+2,w
  8053  0B15  00F2               	movwf	___ftneg@f1+2
  8054  0B16  160A  118A  2035  120A  158A  	fcall	___ftneg
  8055  0B1B  0870               	movf	?___ftneg,w
  8056  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  8057  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  8058  0B1E  00AD               	movwf	___ftadd@f2
  8059  0B1F  0871               	movf	?___ftneg+1,w
  8060  0B20  00AE               	movwf	___ftadd@f2+1
  8061  0B21  0872               	movf	?___ftneg+2,w
  8062  0B22  00AF               	movwf	___ftadd@f2+2
  8063  0B23  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8064  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  8065  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  8066  0B2A  082A               	movf	?___ftadd,w
  8067  0B2B  00B7               	movwf	___ftdiv@f2
  8068  0B2C  082B               	movf	?___ftadd+1,w
  8069  0B2D  00B8               	movwf	___ftdiv@f2+1
  8070  0B2E  082C               	movf	?___ftadd+2,w
  8071  0B2F  00B9               	movwf	___ftdiv@f2+2
  8072  0B30  0847               	movf	trapmf@x,w
  8073  0B31  00AA               	movwf	___ftadd@f1
  8074  0B32  0848               	movf	trapmf@x+1,w
  8075  0B33  00AB               	movwf	___ftadd@f1+1
  8076  0B34  0849               	movf	trapmf@x+2,w
  8077  0B35  00AC               	movwf	___ftadd@f1+2
  8078  0B36  084A               	movf	trapmf@a,w
  8079  0B37  00F0               	movwf	___ftneg@f1
  8080  0B38  084B               	movf	trapmf@a+1,w
  8081  0B39  00F1               	movwf	___ftneg@f1+1
  8082  0B3A  084C               	movf	trapmf@a+2,w
  8083  0B3B  2BCB               	goto	L20
  8084  0B3C                     i1l2464:	
  8085                           
  8086                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8087  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  8088  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  8089  0B3E  0847               	movf	trapmf@x,w
  8090  0B3F  00F0               	movwf	___ftge@ff1
  8091  0B40  0848               	movf	trapmf@x+1,w
  8092  0B41  00F1               	movwf	___ftge@ff1+1
  8093  0B42  0849               	movf	trapmf@x+2,w
  8094  0B43  00F2               	movwf	___ftge@ff1+2
  8095  0B44  084D               	movf	trapmf@b,w
  8096  0B45  00F3               	movwf	___ftge@ff2
  8097  0B46  084E               	movf	trapmf@b+1,w
  8098  0B47  00F4               	movwf	___ftge@ff2+1
  8099  0B48  084F               	movf	trapmf@b+2,w
  8100  0B49  00F5               	movwf	___ftge@ff2+2
  8101  0B4A  160A  118A  2323  120A  158A  	fcall	___ftge
  8102  0B4F  1C03               	btfss	3,0
  8103  0B50  2B6E               	goto	i1l2470
  8104  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  8105  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  8106  0B53  0850               	movf	trapmf@c,w
  8107  0B54  00F0               	movwf	___ftge@ff1
  8108  0B55  0851               	movf	trapmf@c+1,w
  8109  0B56  00F1               	movwf	___ftge@ff1+1
  8110  0B57  0852               	movf	trapmf@c+2,w
  8111  0B58  00F2               	movwf	___ftge@ff1+2
  8112  0B59  0847               	movf	trapmf@x,w
  8113  0B5A  00F3               	movwf	___ftge@ff2
  8114  0B5B  0848               	movf	trapmf@x+1,w
  8115  0B5C  00F4               	movwf	___ftge@ff2+1
  8116  0B5D  0849               	movf	trapmf@x+2,w
  8117  0B5E  00F5               	movwf	___ftge@ff2+2
  8118  0B5F  160A  118A  2323  120A  158A  	fcall	___ftge
  8119  0B64  1C03               	btfss	3,0
  8120  0B65  2B6E               	goto	i1l2470
  8121                           
  8122                           ;main.c: 96: ua = 1;
  8123  0B66  3000               	movlw	0
  8124  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0B69  00D6               	movwf	trapmf@ua
  8127  0B6A  3080               	movlw	128
  8128  0B6B  00D7               	movwf	trapmf@ua+1
  8129  0B6C  303F               	movlw	63
  8130  0B6D  2C0F               	goto	L17
  8131  0B6E                     i1l2470:	
  8132                           
  8133                           ;main.c: 97: else if ((c < x) && (x <= d))
  8134  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  8135  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  8136  0B70  0850               	movf	trapmf@c,w
  8137  0B71  00F0               	movwf	___ftge@ff1
  8138  0B72  0851               	movf	trapmf@c+1,w
  8139  0B73  00F1               	movwf	___ftge@ff1+1
  8140  0B74  0852               	movf	trapmf@c+2,w
  8141  0B75  00F2               	movwf	___ftge@ff1+2
  8142  0B76  0847               	movf	trapmf@x,w
  8143  0B77  00F3               	movwf	___ftge@ff2
  8144  0B78  0848               	movf	trapmf@x+1,w
  8145  0B79  00F4               	movwf	___ftge@ff2+1
  8146  0B7A  0849               	movf	trapmf@x+2,w
  8147  0B7B  00F5               	movwf	___ftge@ff2+2
  8148  0B7C  160A  118A  2323  120A  158A  	fcall	___ftge
  8149  0B81  1803               	btfsc	3,0
  8150  0B82  2BF3               	goto	i1l2476
  8151  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  8152  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  8153  0B85  0853               	movf	trapmf@d,w
  8154  0B86  00F0               	movwf	___ftge@ff1
  8155  0B87  0854               	movf	trapmf@d+1,w
  8156  0B88  00F1               	movwf	___ftge@ff1+1
  8157  0B89  0855               	movf	trapmf@d+2,w
  8158  0B8A  00F2               	movwf	___ftge@ff1+2
  8159  0B8B  0847               	movf	trapmf@x,w
  8160  0B8C  00F3               	movwf	___ftge@ff2
  8161  0B8D  0848               	movf	trapmf@x+1,w
  8162  0B8E  00F4               	movwf	___ftge@ff2+1
  8163  0B8F  0849               	movf	trapmf@x+2,w
  8164  0B90  00F5               	movwf	___ftge@ff2+2
  8165  0B91  160A  118A  2323  120A  158A  	fcall	___ftge
  8166  0B96  1C03               	btfss	3,0
  8167  0B97  2BF3               	goto	i1l2476
  8168                           
  8169                           ;main.c: 98: ua = ((d - x) / (d - c));
  8170  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  8171  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  8172  0B9A  0853               	movf	trapmf@d,w
  8173  0B9B  00AA               	movwf	___ftadd@f1
  8174  0B9C  0854               	movf	trapmf@d+1,w
  8175  0B9D  00AB               	movwf	___ftadd@f1+1
  8176  0B9E  0855               	movf	trapmf@d+2,w
  8177  0B9F  00AC               	movwf	___ftadd@f1+2
  8178  0BA0  0850               	movf	trapmf@c,w
  8179  0BA1  00F0               	movwf	___ftneg@f1
  8180  0BA2  0851               	movf	trapmf@c+1,w
  8181  0BA3  00F1               	movwf	___ftneg@f1+1
  8182  0BA4  0852               	movf	trapmf@c+2,w
  8183  0BA5  00F2               	movwf	___ftneg@f1+2
  8184  0BA6  160A  118A  2035  120A  158A  	fcall	___ftneg
  8185  0BAB  0870               	movf	?___ftneg,w
  8186  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  8187  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  8188  0BAE  00AD               	movwf	___ftadd@f2
  8189  0BAF  0871               	movf	?___ftneg+1,w
  8190  0BB0  00AE               	movwf	___ftadd@f2+1
  8191  0BB1  0872               	movf	?___ftneg+2,w
  8192  0BB2  00AF               	movwf	___ftadd@f2+2
  8193  0BB3  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8194  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  8195  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  8196  0BBA  082A               	movf	?___ftadd,w
  8197  0BBB  00B7               	movwf	___ftdiv@f2
  8198  0BBC  082B               	movf	?___ftadd+1,w
  8199  0BBD  00B8               	movwf	___ftdiv@f2+1
  8200  0BBE  082C               	movf	?___ftadd+2,w
  8201  0BBF  00B9               	movwf	___ftdiv@f2+2
  8202  0BC0  0853               	movf	trapmf@d,w
  8203  0BC1  00AA               	movwf	___ftadd@f1
  8204  0BC2  0854               	movf	trapmf@d+1,w
  8205  0BC3  00AB               	movwf	___ftadd@f1+1
  8206  0BC4  0855               	movf	trapmf@d+2,w
  8207  0BC5  00AC               	movwf	___ftadd@f1+2
  8208  0BC6  0847               	movf	trapmf@x,w
  8209  0BC7  00F0               	movwf	___ftneg@f1
  8210  0BC8  0848               	movf	trapmf@x+1,w
  8211  0BC9  00F1               	movwf	___ftneg@f1+1
  8212  0BCA  0849               	movf	trapmf@x+2,w
  8213  0BCB                     L20:	
  8214  0BCB  00F2               	movwf	___ftneg@f1+2
  8215  0BCC  160A  118A  2035  120A  158A  	fcall	___ftneg
  8216  0BD1  0870               	movf	?___ftneg,w
  8217  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  8218  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  8219  0BD4  00AD               	movwf	___ftadd@f2
  8220  0BD5  0871               	movf	?___ftneg+1,w
  8221  0BD6  00AE               	movwf	___ftadd@f2+1
  8222  0BD7  0872               	movf	?___ftneg+2,w
  8223  0BD8  00AF               	movwf	___ftadd@f2+2
  8224  0BD9  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8225  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8226  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8227  0BE0  082A               	movf	?___ftadd,w
  8228  0BE1  00BA               	movwf	___ftdiv@f1
  8229  0BE2  082B               	movf	?___ftadd+1,w
  8230  0BE3  00BB               	movwf	___ftdiv@f1+1
  8231  0BE4  082C               	movf	?___ftadd+2,w
  8232  0BE5  00BC               	movwf	___ftdiv@f1+2
  8233  0BE6  160A  118A  256E  120A  158A  	fcall	___ftdiv
  8234  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  8235  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  8236  0BED  0837               	movf	?___ftdiv,w
  8237  0BEE  00D6               	movwf	trapmf@ua
  8238  0BEF  0838               	movf	?___ftdiv+1,w
  8239  0BF0  00D7               	movwf	trapmf@ua+1
  8240  0BF1  0839               	movf	?___ftdiv+2,w
  8241  0BF2  2C0F               	goto	L17
  8242  0BF3                     i1l2476:	
  8243                           
  8244                           ;main.c: 99: else if (x > d)
  8245  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  8246  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  8247  0BF5  0853               	movf	trapmf@d,w
  8248  0BF6  00F0               	movwf	___ftge@ff1
  8249  0BF7  0854               	movf	trapmf@d+1,w
  8250  0BF8  00F1               	movwf	___ftge@ff1+1
  8251  0BF9  0855               	movf	trapmf@d+2,w
  8252  0BFA  00F2               	movwf	___ftge@ff1+2
  8253  0BFB  0847               	movf	trapmf@x,w
  8254  0BFC  00F3               	movwf	___ftge@ff2
  8255  0BFD  0848               	movf	trapmf@x+1,w
  8256  0BFE  00F4               	movwf	___ftge@ff2+1
  8257  0BFF  0849               	movf	trapmf@x+2,w
  8258  0C00  00F5               	movwf	___ftge@ff2+2
  8259  0C01  160A  118A  2323  120A  158A  	fcall	___ftge
  8260  0C06  1803               	btfsc	3,0
  8261  0C07  2C10               	goto	i1l128
  8262  0C08                     L18:	
  8263                           
  8264                           ;main.c: 100: ua = 0;
  8265  0C08  3000               	movlw	0
  8266  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0C0B  00D6               	movwf	trapmf@ua
  8269  0C0C  3000               	movlw	0
  8270  0C0D  00D7               	movwf	trapmf@ua+1
  8271  0C0E  3000               	movlw	0
  8272  0C0F                     L17:	
  8273  0C0F  00D8               	movwf	trapmf@ua+2
  8274  0C10                     i1l128:	
  8275                           
  8276                           ;main.c: 102: return(ua);
  8277  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  8278  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  8279  0C12  0856               	movf	trapmf@ua,w
  8280  0C13  00C7               	movwf	?_trapmf
  8281  0C14  0857               	movf	trapmf@ua+1,w
  8282  0C15  00C8               	movwf	?_trapmf+1
  8283  0C16  0858               	movf	trapmf@ua+2,w
  8284  0C17  00C9               	movwf	?_trapmf+2
  8285  0C18  0008               	return
  8286  0C19                     __end_of_trapmf:	
  8287                           
  8288                           	psect	text33
  8289  1035                     __ptext33:	
  8290 ;; *************** function ___ftneg *****************
  8291 ;; Defined at:
  8292 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  f1              3    0[COMMON] float 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  3    0[COMMON] float 
  8299 ;; Registers used:
  8300 ;;		wreg
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         3       0       0       0       0
  8307 ;;      Locals:         0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0
  8309 ;;      Totals:         3       0       0       0       0
  8310 ;;Total ram usage:        3 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_trimf
  8316 ;;		_trapmf
  8317 ;;		_Fuzzy
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           
  8322                           ;psect for function ___ftneg
  8323  1035                     ___ftneg:	
  8324                           
  8325                           ;incstack = 0
  8326                           ; Regs used in ___ftneg: [wreg]
  8327  1035  0872               	movf	___ftneg@f1+2,w
  8328  1036  0471               	iorwf	___ftneg@f1+1,w
  8329  1037  0470               	iorwf	___ftneg@f1,w
  8330  1038  1903               	skipnz
  8331  1039  0008               	return
  8332  103A  3080               	movlw	128
  8333  103B  06F2               	xorwf	___ftneg@f1+2,f
  8334  103C  0008               	return
  8335  103D                     __end_of___ftneg:	
  8336                           
  8337                           	psect	text34
  8338  156E                     __ptext34:	
  8339 ;; *************** function ___ftdiv *****************
  8340 ;; Defined at:
  8341 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  f2              3   23[BANK0 ] float 
  8344 ;;  f1              3   26[BANK0 ] float 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  f3              3   34[BANK0 ] float 
  8347 ;;  sign            1   38[BANK0 ] unsigned char 
  8348 ;;  exp             1   37[BANK0 ] unsigned char 
  8349 ;;  cntr            1   33[BANK0 ] unsigned char 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  3   23[BANK0 ] float 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8359 ;;      Params:         0       6       0       0       0
  8360 ;;      Locals:         0       6       0       0       0
  8361 ;;      Temps:          0       4       0       0       0
  8362 ;;      Totals:         0      16       0       0       0
  8363 ;;Total ram usage:       16 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    1
  8366 ;; This function calls:
  8367 ;;		___ftpack
  8368 ;; This function is called by:
  8369 ;;		_trimf
  8370 ;;		_trapmf
  8371 ;;		_Fuzzy
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function ___ftdiv
  8377  156E                     ___ftdiv:	
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8381  156E  1283               	bcf	3,5	;RP0=0, select bank0
  8382  156F  1303               	bcf	3,6	;RP1=0, select bank0
  8383  1570  083A               	movf	___ftdiv@f1,w
  8384  1571  00BD               	movwf	??___ftdiv
  8385  1572  083B               	movf	___ftdiv@f1+1,w
  8386  1573  00BE               	movwf	??___ftdiv+1
  8387  1574  083C               	movf	___ftdiv@f1+2,w
  8388  1575  00BF               	movwf	??___ftdiv+2
  8389  1576  1003               	clrc
  8390  1577  0D3E               	rlf	??___ftdiv+1,w
  8391  1578  0D3F               	rlf	??___ftdiv+2,w
  8392  1579  00C0               	movwf	??___ftdiv+3
  8393  157A  0840               	movf	??___ftdiv+3,w
  8394  157B  00C5               	movwf	___ftdiv@exp
  8395  157C  08C5               	movf	___ftdiv@exp,f
  8396  157D  1D03               	skipz
  8397  157E  2D86               	goto	i1l2360
  8398  157F  3000               	movlw	0
  8399  1580  00B7               	movwf	?___ftdiv
  8400  1581  3000               	movlw	0
  8401  1582  00B8               	movwf	?___ftdiv+1
  8402  1583  3000               	movlw	0
  8403  1584  00B9               	movwf	?___ftdiv+2
  8404  1585  0008               	return
  8405  1586                     i1l2360:	
  8406  1586  0837               	movf	___ftdiv@f2,w
  8407  1587  00BD               	movwf	??___ftdiv
  8408  1588  0838               	movf	___ftdiv@f2+1,w
  8409  1589  00BE               	movwf	??___ftdiv+1
  8410  158A  0839               	movf	___ftdiv@f2+2,w
  8411  158B  00BF               	movwf	??___ftdiv+2
  8412  158C  1003               	clrc
  8413  158D  0D3E               	rlf	??___ftdiv+1,w
  8414  158E  0D3F               	rlf	??___ftdiv+2,w
  8415  158F  00C0               	movwf	??___ftdiv+3
  8416  1590  0840               	movf	??___ftdiv+3,w
  8417  1591  00C6               	movwf	___ftdiv@sign
  8418  1592  08C6               	movf	___ftdiv@sign,f
  8419  1593  1D03               	skipz
  8420  1594  2D9C               	goto	i1l2366
  8421  1595  3000               	movlw	0
  8422  1596  00B7               	movwf	?___ftdiv
  8423  1597  3000               	movlw	0
  8424  1598  00B8               	movwf	?___ftdiv+1
  8425  1599  3000               	movlw	0
  8426  159A  00B9               	movwf	?___ftdiv+2
  8427  159B  0008               	return
  8428  159C                     i1l2366:	
  8429  159C  3000               	movlw	0
  8430  159D  00C2               	movwf	___ftdiv@f3
  8431  159E  3000               	movlw	0
  8432  159F  00C3               	movwf	___ftdiv@f3+1
  8433  15A0  3000               	movlw	0
  8434  15A1  00C4               	movwf	___ftdiv@f3+2
  8435  15A2  3089               	movlw	137
  8436  15A3  0746               	addwf	___ftdiv@sign,w
  8437  15A4  00BD               	movwf	??___ftdiv
  8438  15A5  083D               	movf	??___ftdiv,w
  8439  15A6  02C5               	subwf	___ftdiv@exp,f
  8440  15A7  083A               	movf	___ftdiv@f1,w
  8441  15A8  00BD               	movwf	??___ftdiv
  8442  15A9  083B               	movf	___ftdiv@f1+1,w
  8443  15AA  00BE               	movwf	??___ftdiv+1
  8444  15AB  083C               	movf	___ftdiv@f1+2,w
  8445  15AC  00BF               	movwf	??___ftdiv+2
  8446  15AD  3010               	movlw	16
  8447  15AE                     u251_25:	
  8448  15AE  1003               	clrc
  8449  15AF  0CBF               	rrf	??___ftdiv+2,f
  8450  15B0  0CBE               	rrf	??___ftdiv+1,f
  8451  15B1  0CBD               	rrf	??___ftdiv,f
  8452  15B2  3EFF               	addlw	-1
  8453  15B3  1D03               	skipz
  8454  15B4  2DAE               	goto	u251_25
  8455  15B5  083D               	movf	??___ftdiv,w
  8456  15B6  00C0               	movwf	??___ftdiv+3
  8457  15B7  0840               	movf	??___ftdiv+3,w
  8458  15B8  00C6               	movwf	___ftdiv@sign
  8459  15B9  0837               	movf	___ftdiv@f2,w
  8460  15BA  00BD               	movwf	??___ftdiv
  8461  15BB  0838               	movf	___ftdiv@f2+1,w
  8462  15BC  00BE               	movwf	??___ftdiv+1
  8463  15BD  0839               	movf	___ftdiv@f2+2,w
  8464  15BE  00BF               	movwf	??___ftdiv+2
  8465  15BF  3010               	movlw	16
  8466  15C0                     u252_25:	
  8467  15C0  1003               	clrc
  8468  15C1  0CBF               	rrf	??___ftdiv+2,f
  8469  15C2  0CBE               	rrf	??___ftdiv+1,f
  8470  15C3  0CBD               	rrf	??___ftdiv,f
  8471  15C4  3EFF               	addlw	-1
  8472  15C5  1D03               	skipz
  8473  15C6  2DC0               	goto	u252_25
  8474  15C7  083D               	movf	??___ftdiv,w
  8475  15C8  00C0               	movwf	??___ftdiv+3
  8476  15C9  0840               	movf	??___ftdiv+3,w
  8477  15CA  06C6               	xorwf	___ftdiv@sign,f
  8478  15CB  3080               	movlw	128
  8479  15CC  00BD               	movwf	??___ftdiv
  8480  15CD  083D               	movf	??___ftdiv,w
  8481  15CE  05C6               	andwf	___ftdiv@sign,f
  8482  15CF  17BB               	bsf	___ftdiv@f1+1,7
  8483  15D0  30FF               	movlw	255
  8484  15D1  05BA               	andwf	___ftdiv@f1,f
  8485  15D2  30FF               	movlw	255
  8486  15D3  05BB               	andwf	___ftdiv@f1+1,f
  8487  15D4  3000               	movlw	0
  8488  15D5  05BC               	andwf	___ftdiv@f1+2,f
  8489  15D6  17B8               	bsf	___ftdiv@f2+1,7
  8490  15D7  30FF               	movlw	255
  8491  15D8  05B7               	andwf	___ftdiv@f2,f
  8492  15D9  30FF               	movlw	255
  8493  15DA  05B8               	andwf	___ftdiv@f2+1,f
  8494  15DB  3000               	movlw	0
  8495  15DC  05B9               	andwf	___ftdiv@f2+2,f
  8496  15DD  3018               	movlw	24
  8497  15DE  00BD               	movwf	??___ftdiv
  8498  15DF  083D               	movf	??___ftdiv,w
  8499  15E0  00C1               	movwf	___ftdiv@cntr
  8500  15E1                     i1l2380:	
  8501  15E1  3001               	movlw	1
  8502  15E2                     u253_25:	
  8503  15E2  1003               	clrc
  8504  15E3  0DC2               	rlf	___ftdiv@f3,f
  8505  15E4  0DC3               	rlf	___ftdiv@f3+1,f
  8506  15E5  0DC4               	rlf	___ftdiv@f3+2,f
  8507  15E6  3EFF               	addlw	-1
  8508  15E7  1D03               	skipz
  8509  15E8  2DE2               	goto	u253_25
  8510  15E9  0839               	movf	___ftdiv@f2+2,w
  8511  15EA  023C               	subwf	___ftdiv@f1+2,w
  8512  15EB  1D03               	skipz
  8513  15EC  2DF3               	goto	u254_25
  8514  15ED  0838               	movf	___ftdiv@f2+1,w
  8515  15EE  023B               	subwf	___ftdiv@f1+1,w
  8516  15EF  1D03               	skipz
  8517  15F0  2DF3               	goto	u254_25
  8518  15F1  0837               	movf	___ftdiv@f2,w
  8519  15F2  023A               	subwf	___ftdiv@f1,w
  8520  15F3                     u254_25:	
  8521  15F3  1C03               	skipc
  8522  15F4  2E00               	goto	i1l2388
  8523  15F5  0837               	movf	___ftdiv@f2,w
  8524  15F6  02BA               	subwf	___ftdiv@f1,f
  8525  15F7  0838               	movf	___ftdiv@f2+1,w
  8526  15F8  1C03               	skipc
  8527  15F9  0F38               	incfsz	___ftdiv@f2+1,w
  8528  15FA  02BB               	subwf	___ftdiv@f1+1,f
  8529  15FB  0839               	movf	___ftdiv@f2+2,w
  8530  15FC  1C03               	skipc
  8531  15FD  0A39               	incf	___ftdiv@f2+2,w
  8532  15FE  02BC               	subwf	___ftdiv@f1+2,f
  8533  15FF  1442               	bsf	___ftdiv@f3,0
  8534  1600                     i1l2388:	
  8535  1600  3001               	movlw	1
  8536  1601                     u255_25:	
  8537  1601  1003               	clrc
  8538  1602  0DBA               	rlf	___ftdiv@f1,f
  8539  1603  0DBB               	rlf	___ftdiv@f1+1,f
  8540  1604  0DBC               	rlf	___ftdiv@f1+2,f
  8541  1605  3EFF               	addlw	-1
  8542  1606  1D03               	skipz
  8543  1607  2E01               	goto	u255_25
  8544  1608  3001               	movlw	1
  8545  1609  02C1               	subwf	___ftdiv@cntr,f
  8546  160A  1D03               	btfss	3,2
  8547  160B  2DE1               	goto	i1l2380
  8548  160C  0842               	movf	___ftdiv@f3,w
  8549  160D  00F0               	movwf	___ftpack@arg
  8550  160E  0843               	movf	___ftdiv@f3+1,w
  8551  160F  00F1               	movwf	___ftpack@arg+1
  8552  1610  0844               	movf	___ftdiv@f3+2,w
  8553  1611  00F2               	movwf	___ftpack@arg+2
  8554  1612  0845               	movf	___ftdiv@exp,w
  8555  1613  00BD               	movwf	??___ftdiv
  8556  1614  083D               	movf	??___ftdiv,w
  8557  1615  00F3               	movwf	___ftpack@exp
  8558  1616  0846               	movf	___ftdiv@sign,w
  8559  1617  00BE               	movwf	??___ftdiv+1
  8560  1618  083E               	movf	??___ftdiv+1,w
  8561  1619  00F4               	movwf	___ftpack@sign
  8562  161A  160A  118A  2380   	fcall	___ftpack
  8563  161D  0870               	movf	?___ftpack,w
  8564  161E  1283               	bcf	3,5	;RP0=0, select bank0
  8565  161F  1303               	bcf	3,6	;RP1=0, select bank0
  8566  1620  00B7               	movwf	?___ftdiv
  8567  1621  0871               	movf	?___ftpack+1,w
  8568  1622  00B8               	movwf	?___ftdiv+1
  8569  1623  0872               	movf	?___ftpack+2,w
  8570  1624  00B9               	movwf	?___ftdiv+2
  8571  1625  0008               	return
  8572  1626                     __end_of___ftdiv:	
  8573                           
  8574                           	psect	text35
  8575  16F7                     __ptext35:	
  8576 ;; *************** function ___ftadd *****************
  8577 ;; Defined at:
  8578 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  f1              3   10[BANK0 ] float 
  8581 ;;  f2              3   13[BANK0 ] float 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  exp1            1   22[BANK0 ] unsigned char 
  8584 ;;  exp2            1   21[BANK0 ] unsigned char 
  8585 ;;  sign            1   20[BANK0 ] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  3   10[BANK0 ] float 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0, pclath, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8595 ;;      Params:         0       6       0       0       0
  8596 ;;      Locals:         0       3       0       0       0
  8597 ;;      Temps:          0       4       0       0       0
  8598 ;;      Totals:         0      13       0       0       0
  8599 ;;Total ram usage:       13 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    1
  8602 ;; This function calls:
  8603 ;;		___ftpack
  8604 ;; This function is called by:
  8605 ;;		_trimf
  8606 ;;		_trapmf
  8607 ;;		_Fuzzy
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___ftadd
  8613  16F7                     ___ftadd:	
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8617  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8618  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8619  16F9  082A               	movf	___ftadd@f1,w
  8620  16FA  00B0               	movwf	??___ftadd
  8621  16FB  082B               	movf	___ftadd@f1+1,w
  8622  16FC  00B1               	movwf	??___ftadd+1
  8623  16FD  082C               	movf	___ftadd@f1+2,w
  8624  16FE  00B2               	movwf	??___ftadd+2
  8625  16FF  1003               	clrc
  8626  1700  0D31               	rlf	??___ftadd+1,w
  8627  1701  0D32               	rlf	??___ftadd+2,w
  8628  1702  00B3               	movwf	??___ftadd+3
  8629  1703  0833               	movf	??___ftadd+3,w
  8630  1704  00B6               	movwf	___ftadd@exp1
  8631  1705  082D               	movf	___ftadd@f2,w
  8632  1706  00B0               	movwf	??___ftadd
  8633  1707  082E               	movf	___ftadd@f2+1,w
  8634  1708  00B1               	movwf	??___ftadd+1
  8635  1709  082F               	movf	___ftadd@f2+2,w
  8636  170A  00B2               	movwf	??___ftadd+2
  8637  170B  1003               	clrc
  8638  170C  0D31               	rlf	??___ftadd+1,w
  8639  170D  0D32               	rlf	??___ftadd+2,w
  8640  170E  00B3               	movwf	??___ftadd+3
  8641  170F  0833               	movf	??___ftadd+3,w
  8642  1710  00B5               	movwf	___ftadd@exp2
  8643  1711  0836               	movf	___ftadd@exp1,w
  8644  1712  1903               	btfsc	3,2
  8645  1713  2F20               	goto	i1l2290
  8646  1714  0835               	movf	___ftadd@exp2,w
  8647  1715  0236               	subwf	___ftadd@exp1,w
  8648  1716  1803               	skipnc
  8649  1717  2F27               	goto	i1l2294
  8650  1718  0336               	decf	___ftadd@exp1,w
  8651  1719  3AFF               	xorlw	255
  8652  171A  0735               	addwf	___ftadd@exp2,w
  8653  171B  00B0               	movwf	??___ftadd
  8654  171C  3019               	movlw	25
  8655  171D  0230               	subwf	??___ftadd,w
  8656  171E  1C03               	skipc
  8657  171F  2F27               	goto	i1l2294
  8658  1720                     i1l2290:	
  8659  1720  082D               	movf	___ftadd@f2,w
  8660  1721  00AA               	movwf	?___ftadd
  8661  1722  082E               	movf	___ftadd@f2+1,w
  8662  1723  00AB               	movwf	?___ftadd+1
  8663  1724  082F               	movf	___ftadd@f2+2,w
  8664  1725  00AC               	movwf	?___ftadd+2
  8665  1726  0008               	return
  8666  1727                     i1l2294:	
  8667  1727  0835               	movf	___ftadd@exp2,w
  8668  1728  1903               	btfsc	3,2
  8669  1729  0008               	return
  8670  172A  0836               	movf	___ftadd@exp1,w
  8671  172B  0235               	subwf	___ftadd@exp2,w
  8672  172C  1803               	skipnc
  8673  172D  2F36               	goto	i1l2300
  8674  172E  0335               	decf	___ftadd@exp2,w
  8675  172F  3AFF               	xorlw	255
  8676  1730  0736               	addwf	___ftadd@exp1,w
  8677  1731  00B0               	movwf	??___ftadd
  8678  1732  3019               	movlw	25
  8679  1733  0230               	subwf	??___ftadd,w
  8680  1734  1803               	btfsc	3,0
  8681  1735  0008               	return
  8682  1736                     i1l2300:	
  8683  1736  3006               	movlw	6
  8684  1737  00B0               	movwf	??___ftadd
  8685  1738  0830               	movf	??___ftadd,w
  8686  1739  00B4               	movwf	___ftadd@sign
  8687  173A  1BAC               	btfsc	___ftadd@f1+2,7
  8688  173B  17B4               	bsf	___ftadd@sign,7
  8689  173C  1BAF               	btfsc	___ftadd@f2+2,7
  8690  173D  1734               	bsf	___ftadd@sign,6
  8691  173E  17AB               	bsf	___ftadd@f1+1,7
  8692  173F  30FF               	movlw	255
  8693  1740  05AA               	andwf	___ftadd@f1,f
  8694  1741  30FF               	movlw	255
  8695  1742  05AB               	andwf	___ftadd@f1+1,f
  8696  1743  3000               	movlw	0
  8697  1744  05AC               	andwf	___ftadd@f1+2,f
  8698  1745  17AE               	bsf	___ftadd@f2+1,7
  8699  1746  30FF               	movlw	255
  8700  1747  05AD               	andwf	___ftadd@f2,f
  8701  1748  30FF               	movlw	255
  8702  1749  05AE               	andwf	___ftadd@f2+1,f
  8703  174A  3000               	movlw	0
  8704  174B  05AF               	andwf	___ftadd@f2+2,f
  8705  174C  0835               	movf	___ftadd@exp2,w
  8706  174D  0236               	subwf	___ftadd@exp1,w
  8707  174E  1803               	skipnc
  8708  174F  2F76               	goto	i1l2322
  8709  1750                     i1l2312:	
  8710  1750  3001               	movlw	1
  8711  1751                     u234_25:	
  8712  1751  1003               	clrc
  8713  1752  0DAD               	rlf	___ftadd@f2,f
  8714  1753  0DAE               	rlf	___ftadd@f2+1,f
  8715  1754  0DAF               	rlf	___ftadd@f2+2,f
  8716  1755  3EFF               	addlw	-1
  8717  1756  1D03               	skipz
  8718  1757  2F51               	goto	u234_25
  8719  1758  3001               	movlw	1
  8720  1759  02B5               	subwf	___ftadd@exp2,f
  8721  175A  0835               	movf	___ftadd@exp2,w
  8722  175B  0636               	xorwf	___ftadd@exp1,w
  8723  175C  1903               	skipnz
  8724  175D  2F71               	goto	i1l2320
  8725  175E  3001               	movlw	1
  8726  175F  02B4               	subwf	___ftadd@sign,f
  8727  1760  0834               	movf	___ftadd@sign,w
  8728  1761  3907               	andlw	7
  8729  1762  1903               	btfsc	3,2
  8730  1763  2F71               	goto	i1l2320
  8731  1764  2F50               	goto	i1l2312
  8732  1765                     i1l2318:	
  8733  1765  3001               	movlw	1
  8734  1766                     u237_25:	
  8735  1766  1003               	clrc
  8736  1767  0CAC               	rrf	___ftadd@f1+2,f
  8737  1768  0CAB               	rrf	___ftadd@f1+1,f
  8738  1769  0CAA               	rrf	___ftadd@f1,f
  8739  176A  3EFF               	addlw	-1
  8740  176B  1D03               	skipz
  8741  176C  2F66               	goto	u237_25
  8742  176D  3001               	movlw	1
  8743  176E  00B0               	movwf	??___ftadd
  8744  176F  0830               	movf	??___ftadd,w
  8745  1770  07B6               	addwf	___ftadd@exp1,f
  8746  1771                     i1l2320:	
  8747  1771  0836               	movf	___ftadd@exp1,w
  8748  1772  0635               	xorwf	___ftadd@exp2,w
  8749  1773  1903               	btfsc	3,2
  8750  1774  2F9F               	goto	i1l788
  8751  1775  2F65               	goto	i1l2318
  8752  1776                     i1l2322:	
  8753  1776  0836               	movf	___ftadd@exp1,w
  8754  1777  0235               	subwf	___ftadd@exp2,w
  8755  1778  1803               	skipnc
  8756  1779  2F9F               	goto	i1l788
  8757  177A                     i1l2324:	
  8758  177A  3001               	movlw	1
  8759  177B                     u240_25:	
  8760  177B  1003               	clrc
  8761  177C  0DAA               	rlf	___ftadd@f1,f
  8762  177D  0DAB               	rlf	___ftadd@f1+1,f
  8763  177E  0DAC               	rlf	___ftadd@f1+2,f
  8764  177F  3EFF               	addlw	-1
  8765  1780  1D03               	skipz
  8766  1781  2F7B               	goto	u240_25
  8767  1782  3001               	movlw	1
  8768  1783  02B6               	subwf	___ftadd@exp1,f
  8769  1784  0835               	movf	___ftadd@exp2,w
  8770  1785  0636               	xorwf	___ftadd@exp1,w
  8771  1786  1903               	skipnz
  8772  1787  2F9B               	goto	i1l2332
  8773  1788  3001               	movlw	1
  8774  1789  02B4               	subwf	___ftadd@sign,f
  8775  178A  0834               	movf	___ftadd@sign,w
  8776  178B  3907               	andlw	7
  8777  178C  1903               	btfsc	3,2
  8778  178D  2F9B               	goto	i1l2332
  8779  178E  2F7A               	goto	i1l2324
  8780  178F                     i1l2330:	
  8781  178F  3001               	movlw	1
  8782  1790                     u243_25:	
  8783  1790  1003               	clrc
  8784  1791  0CAF               	rrf	___ftadd@f2+2,f
  8785  1792  0CAE               	rrf	___ftadd@f2+1,f
  8786  1793  0CAD               	rrf	___ftadd@f2,f
  8787  1794  3EFF               	addlw	-1
  8788  1795  1D03               	skipz
  8789  1796  2F90               	goto	u243_25
  8790  1797  3001               	movlw	1
  8791  1798  00B0               	movwf	??___ftadd
  8792  1799  0830               	movf	??___ftadd,w
  8793  179A  07B5               	addwf	___ftadd@exp2,f
  8794  179B                     i1l2332:	
  8795  179B  0836               	movf	___ftadd@exp1,w
  8796  179C  0635               	xorwf	___ftadd@exp2,w
  8797  179D  1D03               	skipz
  8798  179E  2F8F               	goto	i1l2330
  8799  179F                     i1l788:	
  8800  179F  1FB4               	btfss	___ftadd@sign,7
  8801  17A0  2FB1               	goto	i1l2336
  8802  17A1  30FF               	movlw	255
  8803  17A2  06AA               	xorwf	___ftadd@f1,f
  8804  17A3  30FF               	movlw	255
  8805  17A4  06AB               	xorwf	___ftadd@f1+1,f
  8806  17A5  30FF               	movlw	255
  8807  17A6  06AC               	xorwf	___ftadd@f1+2,f
  8808  17A7  3001               	movlw	1
  8809  17A8  07AA               	addwf	___ftadd@f1,f
  8810  17A9  3000               	movlw	0
  8811  17AA  1803               	skipnc
  8812  17AB  3001               	movlw	1
  8813  17AC  07AB               	addwf	___ftadd@f1+1,f
  8814  17AD  3000               	movlw	0
  8815  17AE  1803               	skipnc
  8816  17AF  3001               	movlw	1
  8817  17B0  07AC               	addwf	___ftadd@f1+2,f
  8818  17B1                     i1l2336:	
  8819  17B1  1F34               	btfss	___ftadd@sign,6
  8820  17B2  2FC3               	goto	i1l2340
  8821  17B3  30FF               	movlw	255
  8822  17B4  06AD               	xorwf	___ftadd@f2,f
  8823  17B5  30FF               	movlw	255
  8824  17B6  06AE               	xorwf	___ftadd@f2+1,f
  8825  17B7  30FF               	movlw	255
  8826  17B8  06AF               	xorwf	___ftadd@f2+2,f
  8827  17B9  3001               	movlw	1
  8828  17BA  07AD               	addwf	___ftadd@f2,f
  8829  17BB  3000               	movlw	0
  8830  17BC  1803               	skipnc
  8831  17BD  3001               	movlw	1
  8832  17BE  07AE               	addwf	___ftadd@f2+1,f
  8833  17BF  3000               	movlw	0
  8834  17C0  1803               	skipnc
  8835  17C1  3001               	movlw	1
  8836  17C2  07AF               	addwf	___ftadd@f2+2,f
  8837  17C3                     i1l2340:	
  8838  17C3  01B4               	clrf	___ftadd@sign
  8839  17C4  082A               	movf	___ftadd@f1,w
  8840  17C5  07AD               	addwf	___ftadd@f2,f
  8841  17C6  082B               	movf	___ftadd@f1+1,w
  8842  17C7  1103               	clrz
  8843  17C8  1803               	skipnc
  8844  17C9  0A2B               	incf	___ftadd@f1+1,w
  8845  17CA  1D03               	btfss	3,2
  8846  17CB  07AE               	addwf	___ftadd@f2+1,f
  8847  17CC  082C               	movf	___ftadd@f1+2,w
  8848  17CD  1103               	clrz
  8849  17CE  1803               	skipnc
  8850  17CF  0A2C               	incf	___ftadd@f1+2,w
  8851  17D0  1D03               	btfss	3,2
  8852  17D1  07AF               	addwf	___ftadd@f2+2,f
  8853  17D2  1FAF               	btfss	___ftadd@f2+2,7
  8854  17D3  2FE6               	goto	i1l2350
  8855  17D4  30FF               	movlw	255
  8856  17D5  06AD               	xorwf	___ftadd@f2,f
  8857  17D6  30FF               	movlw	255
  8858  17D7  06AE               	xorwf	___ftadd@f2+1,f
  8859  17D8  30FF               	movlw	255
  8860  17D9  06AF               	xorwf	___ftadd@f2+2,f
  8861  17DA  3001               	movlw	1
  8862  17DB  07AD               	addwf	___ftadd@f2,f
  8863  17DC  3000               	movlw	0
  8864  17DD  1803               	skipnc
  8865  17DE  3001               	movlw	1
  8866  17DF  07AE               	addwf	___ftadd@f2+1,f
  8867  17E0  3000               	movlw	0
  8868  17E1  1803               	skipnc
  8869  17E2  3001               	movlw	1
  8870  17E3  07AF               	addwf	___ftadd@f2+2,f
  8871  17E4  01B4               	clrf	___ftadd@sign
  8872  17E5  0AB4               	incf	___ftadd@sign,f
  8873  17E6                     i1l2350:	
  8874  17E6  082D               	movf	___ftadd@f2,w
  8875  17E7  00F0               	movwf	___ftpack@arg
  8876  17E8  082E               	movf	___ftadd@f2+1,w
  8877  17E9  00F1               	movwf	___ftpack@arg+1
  8878  17EA  082F               	movf	___ftadd@f2+2,w
  8879  17EB  00F2               	movwf	___ftpack@arg+2
  8880  17EC  0836               	movf	___ftadd@exp1,w
  8881  17ED  00B0               	movwf	??___ftadd
  8882  17EE  0830               	movf	??___ftadd,w
  8883  17EF  00F3               	movwf	___ftpack@exp
  8884  17F0  0834               	movf	___ftadd@sign,w
  8885  17F1  00B1               	movwf	??___ftadd+1
  8886  17F2  0831               	movf	??___ftadd+1,w
  8887  17F3  00F4               	movwf	___ftpack@sign
  8888  17F4  160A  118A  2380   	fcall	___ftpack
  8889  17F7  0870               	movf	?___ftpack,w
  8890  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8891  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8892  17FA  00AA               	movwf	?___ftadd
  8893  17FB  0871               	movf	?___ftpack+1,w
  8894  17FC  00AB               	movwf	?___ftadd+1
  8895  17FD  0872               	movf	?___ftpack+2,w
  8896  17FE  00AC               	movwf	?___ftadd+2
  8897  17FF  0008               	return
  8898  1800                     __end_of___ftadd:	
  8899                           
  8900                           	psect	text36
  8901  10FA                     __ptext36:	
  8902 ;; *************** function _max_val *****************
  8903 ;; Defined at:
  8904 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  a               3    0[BANK0 ] float 
  8907 ;;  b               3    3[BANK0 ] float 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  3    0[BANK0 ] float 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0, pclath, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8919 ;;      Params:         0       6       0       0       0
  8920 ;;      Locals:         0       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0
  8922 ;;      Totals:         0       6       0       0       0
  8923 ;;Total ram usage:        6 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    1
  8926 ;; This function calls:
  8927 ;;		___ftge
  8928 ;; This function is called by:
  8929 ;;		_Fuzzy
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function _max_val
  8935  10FA                     _max_val:	
  8936                           
  8937                           ;main.c: 119: if (a > b)
  8938                           
  8939                           ;incstack = 0
  8940                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8941  10FA  1283               	bcf	3,5	;RP0=0, select bank0
  8942  10FB  1303               	bcf	3,6	;RP1=0, select bank0
  8943  10FC  0823               	movf	max_val@b,w
  8944  10FD  00F0               	movwf	___ftge@ff1
  8945  10FE  0824               	movf	max_val@b+1,w
  8946  10FF  00F1               	movwf	___ftge@ff1+1
  8947  1100  0825               	movf	max_val@b+2,w
  8948  1101  00F2               	movwf	___ftge@ff1+2
  8949  1102  0820               	movf	max_val@a,w
  8950  1103  00F3               	movwf	___ftge@ff2
  8951  1104  0821               	movf	max_val@a+1,w
  8952  1105  00F4               	movwf	___ftge@ff2+1
  8953  1106  0822               	movf	max_val@a+2,w
  8954  1107  00F5               	movwf	___ftge@ff2+2
  8955  1108  160A  118A  2323  160A  118A  	fcall	___ftge
  8956  110D  1C03               	btfss	3,0
  8957  110E  0008               	return
  8958                           
  8959                           ;main.c: 121: else
  8960                           ;main.c: 122: return b;
  8961                           
  8962                           ;main.c: 120: return a;
  8963  110F  1283               	bcf	3,5	;RP0=0, select bank0
  8964  1110  1303               	bcf	3,6	;RP1=0, select bank0
  8965  1111  0823               	movf	max_val@b,w
  8966  1112  00A0               	movwf	?_max_val
  8967  1113  0824               	movf	max_val@b+1,w
  8968  1114  00A1               	movwf	?_max_val+1
  8969  1115  0825               	movf	max_val@b+2,w
  8970  1116  00A2               	movwf	?_max_val+2
  8971  1117  0008               	return
  8972  1118                     __end_of_max_val:	
  8973                           
  8974                           	psect	text37
  8975  1323                     __ptext37:	
  8976 ;; *************** function ___ftge *****************
  8977 ;; Defined at:
  8978 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  ff1             3    0[COMMON] float 
  8981 ;;  ff2             3    3[COMMON] float 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;		None               void
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         6       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0
  8995 ;;      Temps:          6       0       0       0       0
  8996 ;;      Totals:        12       0       0       0       0
  8997 ;;Total ram usage:       12 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_trimf
  9003 ;;		_trapmf
  9004 ;;		_max_val
  9005 ;;		_Fuzzy
  9006 ;;		_min_val
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function ___ftge
  9012  1323                     ___ftge:	
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9016  1323  1FF2               	btfss	___ftge@ff1+2,7
  9017  1324  2B4A               	goto	i1l2400
  9018  1325  3000               	movlw	0
  9019  1326  00F6               	movwf	??___ftge
  9020  1327  3000               	movlw	0
  9021  1328  00F7               	movwf	??___ftge+1
  9022  1329  3080               	movlw	128
  9023  132A  00F8               	movwf	??___ftge+2
  9024  132B  0970               	comf	___ftge@ff1,w
  9025  132C  00F9               	movwf	??___ftge+3
  9026  132D  0971               	comf	___ftge@ff1+1,w
  9027  132E  00FA               	movwf	??___ftge+4
  9028  132F  0972               	comf	___ftge@ff1+2,w
  9029  1330  00FB               	movwf	??___ftge+5
  9030  1331  0AF9               	incf	??___ftge+3,f
  9031  1332  1903               	skipnz
  9032  1333  0AFA               	incf	??___ftge+4,f
  9033  1334  1903               	skipnz
  9034  1335  0AFB               	incf	??___ftge+5,f
  9035  1336  0879               	movf	??___ftge+3,w
  9036  1337  07F6               	addwf	??___ftge,f
  9037  1338  087A               	movf	??___ftge+4,w
  9038  1339  1803               	skipnc
  9039  133A  0F7A               	incfsz	??___ftge+4,w
  9040  133B  2B3D               	goto	u258_21
  9041  133C  2B3E               	goto	u258_22
  9042  133D                     u258_21:	
  9043  133D  07F7               	addwf	??___ftge+1,f
  9044  133E                     u258_22:	
  9045  133E  087B               	movf	??___ftge+5,w
  9046  133F  1803               	skipnc
  9047  1340  0F7B               	incfsz	??___ftge+5,w
  9048  1341  2B43               	goto	u258_23
  9049  1342  2B44               	goto	u258_24
  9050  1343                     u258_23:	
  9051  1343  07F8               	addwf	??___ftge+2,f
  9052  1344                     u258_24:	
  9053  1344  0876               	movf	??___ftge,w
  9054  1345  00F0               	movwf	___ftge@ff1
  9055  1346  0877               	movf	??___ftge+1,w
  9056  1347  00F1               	movwf	___ftge@ff1+1
  9057  1348  0878               	movf	??___ftge+2,w
  9058  1349  00F2               	movwf	___ftge@ff1+2
  9059  134A                     i1l2400:	
  9060  134A  1FF5               	btfss	___ftge@ff2+2,7
  9061  134B  2B71               	goto	i1l2404
  9062  134C  3000               	movlw	0
  9063  134D  00F6               	movwf	??___ftge
  9064  134E  3000               	movlw	0
  9065  134F  00F7               	movwf	??___ftge+1
  9066  1350  3080               	movlw	128
  9067  1351  00F8               	movwf	??___ftge+2
  9068  1352  0973               	comf	___ftge@ff2,w
  9069  1353  00F9               	movwf	??___ftge+3
  9070  1354  0974               	comf	___ftge@ff2+1,w
  9071  1355  00FA               	movwf	??___ftge+4
  9072  1356  0975               	comf	___ftge@ff2+2,w
  9073  1357  00FB               	movwf	??___ftge+5
  9074  1358  0AF9               	incf	??___ftge+3,f
  9075  1359  1903               	skipnz
  9076  135A  0AFA               	incf	??___ftge+4,f
  9077  135B  1903               	skipnz
  9078  135C  0AFB               	incf	??___ftge+5,f
  9079  135D  0879               	movf	??___ftge+3,w
  9080  135E  07F6               	addwf	??___ftge,f
  9081  135F  087A               	movf	??___ftge+4,w
  9082  1360  1803               	skipnc
  9083  1361  0F7A               	incfsz	??___ftge+4,w
  9084  1362  2B64               	goto	u260_21
  9085  1363  2B65               	goto	u260_22
  9086  1364                     u260_21:	
  9087  1364  07F7               	addwf	??___ftge+1,f
  9088  1365                     u260_22:	
  9089  1365  087B               	movf	??___ftge+5,w
  9090  1366  1803               	skipnc
  9091  1367  0F7B               	incfsz	??___ftge+5,w
  9092  1368  2B6A               	goto	u260_23
  9093  1369  2B6B               	goto	u260_24
  9094  136A                     u260_23:	
  9095  136A  07F8               	addwf	??___ftge+2,f
  9096  136B                     u260_24:	
  9097  136B  0876               	movf	??___ftge,w
  9098  136C  00F3               	movwf	___ftge@ff2
  9099  136D  0877               	movf	??___ftge+1,w
  9100  136E  00F4               	movwf	___ftge@ff2+1
  9101  136F  0878               	movf	??___ftge+2,w
  9102  1370  00F5               	movwf	___ftge@ff2+2
  9103  1371                     i1l2404:	
  9104  1371  3080               	movlw	128
  9105  1372  06F2               	xorwf	___ftge@ff1+2,f
  9106  1373  3080               	movlw	128
  9107  1374  06F5               	xorwf	___ftge@ff2+2,f
  9108  1375  0875               	movf	___ftge@ff2+2,w
  9109  1376  0272               	subwf	___ftge@ff1+2,w
  9110  1377  1D03               	skipz
  9111  1378  0008               	return
  9112  1379  0874               	movf	___ftge@ff2+1,w
  9113  137A  0271               	subwf	___ftge@ff1+1,w
  9114  137B  1D03               	skipz
  9115  137C  0008               	return
  9116  137D  0873               	movf	___ftge@ff2,w
  9117  137E  0270               	subwf	___ftge@ff1,w
  9118  137F  0008               	return
  9119  1380                     __end_of___ftge:	
  9120                           
  9121                           	psect	text38
  9122  1082                     __ptext38:	
  9123 ;; *************** function ___lwtoft *****************
  9124 ;; Defined at:
  9125 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  c               2    8[COMMON] unsigned int 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  3    8[COMMON] float 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0, pclath, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9139 ;;      Params:         3       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0
  9141 ;;      Temps:          1       0       0       0       0
  9142 ;;      Totals:         4       0       0       0       0
  9143 ;;Total ram usage:        4 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    1
  9146 ;; This function calls:
  9147 ;;		___ftpack
  9148 ;; This function is called by:
  9149 ;;		_Fuzzy
  9150 ;;		_ISR
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function ___lwtoft
  9156  1082                     ___lwtoft:	
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9160  1082  0878               	movf	___lwtoft@c,w
  9161  1083  00F0               	movwf	___ftpack@arg
  9162  1084  0879               	movf	___lwtoft@c+1,w
  9163  1085  00F1               	movwf	___ftpack@arg+1
  9164  1086  01F2               	clrf	___ftpack@arg+2
  9165  1087  308E               	movlw	142
  9166  1088  00FB               	movwf	??___lwtoft
  9167  1089  087B               	movf	??___lwtoft,w
  9168  108A  00F3               	movwf	___ftpack@exp
  9169  108B  01F4               	clrf	___ftpack@sign
  9170  108C  160A  118A  2380   	fcall	___ftpack
  9171  108F  0870               	movf	?___ftpack,w
  9172  1090  00F8               	movwf	?___lwtoft
  9173  1091  0871               	movf	?___ftpack+1,w
  9174  1092  00F9               	movwf	?___lwtoft+1
  9175  1093  0872               	movf	?___ftpack+2,w
  9176  1094  00FA               	movwf	?___lwtoft+2
  9177  1095  0008               	return
  9178  1096                     __end_of___lwtoft:	
  9179                           
  9180                           	psect	text39
  9181  1453                     __ptext39:	
  9182 ;; *************** function ___fttol *****************
  9183 ;; Defined at:
  9184 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  f1              3    0[COMMON] float 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  lval            4    9[COMMON] unsigned long 
  9189 ;;  exp1            1   13[COMMON] unsigned char 
  9190 ;;  sign1           1    8[COMMON] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  4    0[COMMON] long 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9200 ;;      Params:         4       0       0       0       0
  9201 ;;      Locals:         6       0       0       0       0
  9202 ;;      Temps:          4       0       0       0       0
  9203 ;;      Totals:        14       0       0       0       0
  9204 ;;Total ram usage:       14 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_Fuzzy
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function ___fttol
  9215  1453                     ___fttol:	
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9219  1453  0870               	movf	___fttol@f1,w
  9220  1454  00F4               	movwf	??___fttol
  9221  1455  0871               	movf	___fttol@f1+1,w
  9222  1456  00F5               	movwf	??___fttol+1
  9223  1457  0872               	movf	___fttol@f1+2,w
  9224  1458  00F6               	movwf	??___fttol+2
  9225  1459  1003               	clrc
  9226  145A  0D75               	rlf	??___fttol+1,w
  9227  145B  0D76               	rlf	??___fttol+2,w
  9228  145C  00F7               	movwf	??___fttol+3
  9229  145D  0877               	movf	??___fttol+3,w
  9230  145E  00FD               	movwf	___fttol@exp1
  9231  145F  08FD               	movf	___fttol@exp1,f
  9232  1460  1D03               	skipz
  9233  1461  2C6B               	goto	i1l2632
  9234  1462  3000               	movlw	0
  9235  1463  00F3               	movwf	?___fttol+3
  9236  1464  3000               	movlw	0
  9237  1465  00F2               	movwf	?___fttol+2
  9238  1466  3000               	movlw	0
  9239  1467  00F1               	movwf	?___fttol+1
  9240  1468  3000               	movlw	0
  9241  1469  00F0               	movwf	?___fttol
  9242  146A  0008               	return
  9243  146B                     i1l2632:	
  9244  146B  0870               	movf	___fttol@f1,w
  9245  146C  00F4               	movwf	??___fttol
  9246  146D  0871               	movf	___fttol@f1+1,w
  9247  146E  00F5               	movwf	??___fttol+1
  9248  146F  0872               	movf	___fttol@f1+2,w
  9249  1470  00F6               	movwf	??___fttol+2
  9250  1471  3017               	movlw	23
  9251  1472                     u311_25:	
  9252  1472  1003               	clrc
  9253  1473  0CF6               	rrf	??___fttol+2,f
  9254  1474  0CF5               	rrf	??___fttol+1,f
  9255  1475  0CF4               	rrf	??___fttol,f
  9256  1476  3EFF               	addlw	-1
  9257  1477  1D03               	skipz
  9258  1478  2C72               	goto	u311_25
  9259  1479  0874               	movf	??___fttol,w
  9260  147A  00F7               	movwf	??___fttol+3
  9261  147B  0877               	movf	??___fttol+3,w
  9262  147C  00F8               	movwf	___fttol@sign1
  9263  147D  17F1               	bsf	___fttol@f1+1,7
  9264  147E  30FF               	movlw	255
  9265  147F  05F0               	andwf	___fttol@f1,f
  9266  1480  30FF               	movlw	255
  9267  1481  05F1               	andwf	___fttol@f1+1,f
  9268  1482  3000               	movlw	0
  9269  1483  05F2               	andwf	___fttol@f1+2,f
  9270  1484  0870               	movf	___fttol@f1,w
  9271  1485  00F9               	movwf	___fttol@lval
  9272  1486  0871               	movf	___fttol@f1+1,w
  9273  1487  00FA               	movwf	___fttol@lval+1
  9274  1488  0872               	movf	___fttol@f1+2,w
  9275  1489  00FB               	movwf	___fttol@lval+2
  9276  148A  01FC               	clrf	___fttol@lval+3
  9277  148B  308E               	movlw	142
  9278  148C  02FD               	subwf	___fttol@exp1,f
  9279  148D  1FFD               	btfss	___fttol@exp1,7
  9280  148E  2CAD               	goto	i1l2652
  9281  148F  087D               	movf	___fttol@exp1,w
  9282  1490  3A80               	xorlw	128
  9283  1491  3E8F               	addlw	143
  9284  1492  1803               	skipnc
  9285  1493  2C9D               	goto	i1l2650
  9286  1494  3000               	movlw	0
  9287  1495  00F3               	movwf	?___fttol+3
  9288  1496  3000               	movlw	0
  9289  1497  00F2               	movwf	?___fttol+2
  9290  1498  3000               	movlw	0
  9291  1499  00F1               	movwf	?___fttol+1
  9292  149A  3000               	movlw	0
  9293  149B  00F0               	movwf	?___fttol
  9294  149C  0008               	return
  9295  149D                     i1l2650:	
  9296  149D  3001               	movlw	1
  9297  149E                     u314_25:	
  9298  149E  1003               	clrc
  9299  149F  0CFC               	rrf	___fttol@lval+3,f
  9300  14A0  0CFB               	rrf	___fttol@lval+2,f
  9301  14A1  0CFA               	rrf	___fttol@lval+1,f
  9302  14A2  0CF9               	rrf	___fttol@lval,f
  9303  14A3  3EFF               	addlw	-1
  9304  14A4  1D03               	skipz
  9305  14A5  2C9E               	goto	u314_25
  9306  14A6  3001               	movlw	1
  9307  14A7  00F4               	movwf	??___fttol
  9308  14A8  0874               	movf	??___fttol,w
  9309  14A9  07FD               	addwf	___fttol@exp1,f
  9310  14AA  1903               	btfsc	3,2
  9311  14AB  2CC8               	goto	i1l2662
  9312  14AC  2C9D               	goto	i1l2650
  9313  14AD                     i1l2652:	
  9314  14AD  3018               	movlw	24
  9315  14AE  027D               	subwf	___fttol@exp1,w
  9316  14AF  1C03               	skipc
  9317  14B0  2CC5               	goto	i1l2660
  9318  14B1  3000               	movlw	0
  9319  14B2  00F3               	movwf	?___fttol+3
  9320  14B3  3000               	movlw	0
  9321  14B4  00F2               	movwf	?___fttol+2
  9322  14B5  3000               	movlw	0
  9323  14B6  00F1               	movwf	?___fttol+1
  9324  14B7  3000               	movlw	0
  9325  14B8  00F0               	movwf	?___fttol
  9326  14B9  0008               	return
  9327  14BA                     i1l2658:	
  9328  14BA  3001               	movlw	1
  9329  14BB  00F4               	movwf	??___fttol
  9330  14BC                     u317_25:	
  9331  14BC  1003               	clrc
  9332  14BD  0DF9               	rlf	___fttol@lval,f
  9333  14BE  0DFA               	rlf	___fttol@lval+1,f
  9334  14BF  0DFB               	rlf	___fttol@lval+2,f
  9335  14C0  0DFC               	rlf	___fttol@lval+3,f
  9336  14C1  0BF4               	decfsz	??___fttol,f
  9337  14C2  2CBC               	goto	u317_25
  9338  14C3  3001               	movlw	1
  9339  14C4  02FD               	subwf	___fttol@exp1,f
  9340  14C5                     i1l2660:	
  9341  14C5  08FD               	movf	___fttol@exp1,f
  9342  14C6  1D03               	skipz
  9343  14C7  2CBA               	goto	i1l2658
  9344  14C8                     i1l2662:	
  9345  14C8  0878               	movf	___fttol@sign1,w
  9346  14C9  1903               	btfsc	3,2
  9347  14CA  2CD6               	goto	i1l2666
  9348  14CB  09F9               	comf	___fttol@lval,f
  9349  14CC  09FA               	comf	___fttol@lval+1,f
  9350  14CD  09FB               	comf	___fttol@lval+2,f
  9351  14CE  09FC               	comf	___fttol@lval+3,f
  9352  14CF  0AF9               	incf	___fttol@lval,f
  9353  14D0  1903               	skipnz
  9354  14D1  0AFA               	incf	___fttol@lval+1,f
  9355  14D2  1903               	skipnz
  9356  14D3  0AFB               	incf	___fttol@lval+2,f
  9357  14D4  1903               	skipnz
  9358  14D5  0AFC               	incf	___fttol@lval+3,f
  9359  14D6                     i1l2666:	
  9360  14D6  087C               	movf	___fttol@lval+3,w
  9361  14D7  00F3               	movwf	?___fttol+3
  9362  14D8  087B               	movf	___fttol@lval+2,w
  9363  14D9  00F2               	movwf	?___fttol+2
  9364  14DA  087A               	movf	___fttol@lval+1,w
  9365  14DB  00F1               	movwf	?___fttol+1
  9366  14DC  0879               	movf	___fttol@lval,w
  9367  14DD  00F0               	movwf	?___fttol
  9368  14DE  0008               	return
  9369  14DF                     __end_of___fttol:	
  9370                           
  9371                           	psect	text40
  9372  1626                     __ptext40:	
  9373 ;; *************** function ___ftmul *****************
  9374 ;; Defined at:
  9375 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  f1              3    8[COMMON] float 
  9378 ;;  f2              3   11[COMMON] float 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9381 ;;  sign            1    9[BANK0 ] unsigned char 
  9382 ;;  cntr            1    8[BANK0 ] unsigned char 
  9383 ;;  exp             1    4[BANK0 ] unsigned char 
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  3    8[COMMON] float 
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0, pclath, cstack
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9393 ;;      Params:         6       0       0       0       0
  9394 ;;      Locals:         0       6       0       0       0
  9395 ;;      Temps:          0       4       0       0       0
  9396 ;;      Totals:         6      10       0       0       0
  9397 ;;Total ram usage:       16 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    1
  9400 ;; This function calls:
  9401 ;;		___ftpack
  9402 ;; This function is called by:
  9403 ;;		_Fuzzy
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function ___ftmul
  9409  1626                     ___ftmul:	
  9410                           
  9411                           ;incstack = 0
  9412                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9413  1626  0878               	movf	___ftmul@f1,w
  9414  1627  1283               	bcf	3,5	;RP0=0, select bank0
  9415  1628  1303               	bcf	3,6	;RP1=0, select bank0
  9416  1629  00A0               	movwf	??___ftmul
  9417  162A  0879               	movf	___ftmul@f1+1,w
  9418  162B  00A1               	movwf	??___ftmul+1
  9419  162C  087A               	movf	___ftmul@f1+2,w
  9420  162D  00A2               	movwf	??___ftmul+2
  9421  162E  1003               	clrc
  9422  162F  0D21               	rlf	??___ftmul+1,w
  9423  1630  0D22               	rlf	??___ftmul+2,w
  9424  1631  00A3               	movwf	??___ftmul+3
  9425  1632  0823               	movf	??___ftmul+3,w
  9426  1633  00A4               	movwf	___ftmul@exp
  9427  1634  08A4               	movf	___ftmul@exp,f
  9428  1635  1D03               	skipz
  9429  1636  2E3E               	goto	i1l2582
  9430  1637  3000               	movlw	0
  9431  1638  00F8               	movwf	?___ftmul
  9432  1639  3000               	movlw	0
  9433  163A  00F9               	movwf	?___ftmul+1
  9434  163B  3000               	movlw	0
  9435  163C  00FA               	movwf	?___ftmul+2
  9436  163D  0008               	return
  9437  163E                     i1l2582:	
  9438  163E  087B               	movf	___ftmul@f2,w
  9439  163F  00A0               	movwf	??___ftmul
  9440  1640  087C               	movf	___ftmul@f2+1,w
  9441  1641  00A1               	movwf	??___ftmul+1
  9442  1642  087D               	movf	___ftmul@f2+2,w
  9443  1643  00A2               	movwf	??___ftmul+2
  9444  1644  1003               	clrc
  9445  1645  0D21               	rlf	??___ftmul+1,w
  9446  1646  0D22               	rlf	??___ftmul+2,w
  9447  1647  00A3               	movwf	??___ftmul+3
  9448  1648  0823               	movf	??___ftmul+3,w
  9449  1649  00A9               	movwf	___ftmul@sign
  9450  164A  08A9               	movf	___ftmul@sign,f
  9451  164B  1D03               	skipz
  9452  164C  2E54               	goto	i1l2588
  9453  164D  3000               	movlw	0
  9454  164E  00F8               	movwf	?___ftmul
  9455  164F  3000               	movlw	0
  9456  1650  00F9               	movwf	?___ftmul+1
  9457  1651  3000               	movlw	0
  9458  1652  00FA               	movwf	?___ftmul+2
  9459  1653  0008               	return
  9460  1654                     i1l2588:	
  9461  1654  0829               	movf	___ftmul@sign,w
  9462  1655  3E7B               	addlw	123
  9463  1656  00A0               	movwf	??___ftmul
  9464  1657  0820               	movf	??___ftmul,w
  9465  1658  07A4               	addwf	___ftmul@exp,f
  9466  1659  0878               	movf	___ftmul@f1,w
  9467  165A  00A0               	movwf	??___ftmul
  9468  165B  0879               	movf	___ftmul@f1+1,w
  9469  165C  00A1               	movwf	??___ftmul+1
  9470  165D  087A               	movf	___ftmul@f1+2,w
  9471  165E  00A2               	movwf	??___ftmul+2
  9472  165F  3010               	movlw	16
  9473  1660                     u298_25:	
  9474  1660  1003               	clrc
  9475  1661  0CA2               	rrf	??___ftmul+2,f
  9476  1662  0CA1               	rrf	??___ftmul+1,f
  9477  1663  0CA0               	rrf	??___ftmul,f
  9478  1664  3EFF               	addlw	-1
  9479  1665  1D03               	skipz
  9480  1666  2E60               	goto	u298_25
  9481  1667  0820               	movf	??___ftmul,w
  9482  1668  00A3               	movwf	??___ftmul+3
  9483  1669  0823               	movf	??___ftmul+3,w
  9484  166A  00A9               	movwf	___ftmul@sign
  9485  166B  087B               	movf	___ftmul@f2,w
  9486  166C  00A0               	movwf	??___ftmul
  9487  166D  087C               	movf	___ftmul@f2+1,w
  9488  166E  00A1               	movwf	??___ftmul+1
  9489  166F  087D               	movf	___ftmul@f2+2,w
  9490  1670  00A2               	movwf	??___ftmul+2
  9491  1671  3010               	movlw	16
  9492  1672                     u299_25:	
  9493  1672  1003               	clrc
  9494  1673  0CA2               	rrf	??___ftmul+2,f
  9495  1674  0CA1               	rrf	??___ftmul+1,f
  9496  1675  0CA0               	rrf	??___ftmul,f
  9497  1676  3EFF               	addlw	-1
  9498  1677  1D03               	skipz
  9499  1678  2E72               	goto	u299_25
  9500  1679  0820               	movf	??___ftmul,w
  9501  167A  00A3               	movwf	??___ftmul+3
  9502  167B  0823               	movf	??___ftmul+3,w
  9503  167C  06A9               	xorwf	___ftmul@sign,f
  9504  167D  3080               	movlw	128
  9505  167E  00A0               	movwf	??___ftmul
  9506  167F  0820               	movf	??___ftmul,w
  9507  1680  05A9               	andwf	___ftmul@sign,f
  9508  1681  17F9               	bsf	___ftmul@f1+1,7
  9509  1682  17FC               	bsf	___ftmul@f2+1,7
  9510  1683  30FF               	movlw	255
  9511  1684  05FB               	andwf	___ftmul@f2,f
  9512  1685  30FF               	movlw	255
  9513  1686  05FC               	andwf	___ftmul@f2+1,f
  9514  1687  3000               	movlw	0
  9515  1688  05FD               	andwf	___ftmul@f2+2,f
  9516  1689  3000               	movlw	0
  9517  168A  00A5               	movwf	___ftmul@f3_as_product
  9518  168B  3000               	movlw	0
  9519  168C  00A6               	movwf	___ftmul@f3_as_product+1
  9520  168D  3000               	movlw	0
  9521  168E  00A7               	movwf	___ftmul@f3_as_product+2
  9522  168F  3007               	movlw	7
  9523  1690  00A0               	movwf	??___ftmul
  9524  1691  0820               	movf	??___ftmul,w
  9525  1692  00A8               	movwf	___ftmul@cntr
  9526  1693                     i1l2600:	
  9527  1693  1C78               	btfss	___ftmul@f1,0
  9528  1694  2EA3               	goto	i1l2604
  9529  1695  087B               	movf	___ftmul@f2,w
  9530  1696  07A5               	addwf	___ftmul@f3_as_product,f
  9531  1697  087C               	movf	___ftmul@f2+1,w
  9532  1698  1103               	clrz
  9533  1699  1803               	skipnc
  9534  169A  0A7C               	incf	___ftmul@f2+1,w
  9535  169B  1D03               	btfss	3,2
  9536  169C  07A6               	addwf	___ftmul@f3_as_product+1,f
  9537  169D  087D               	movf	___ftmul@f2+2,w
  9538  169E  1103               	clrz
  9539  169F  1803               	skipnc
  9540  16A0  0A7D               	incf	___ftmul@f2+2,w
  9541  16A1  1D03               	btfss	3,2
  9542  16A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  9543  16A3                     i1l2604:	
  9544  16A3  3001               	movlw	1
  9545  16A4                     u302_25:	
  9546  16A4  1003               	clrc
  9547  16A5  0CFA               	rrf	___ftmul@f1+2,f
  9548  16A6  0CF9               	rrf	___ftmul@f1+1,f
  9549  16A7  0CF8               	rrf	___ftmul@f1,f
  9550  16A8  3EFF               	addlw	-1
  9551  16A9  1D03               	skipz
  9552  16AA  2EA4               	goto	u302_25
  9553  16AB  3001               	movlw	1
  9554  16AC                     u303_25:	
  9555  16AC  1003               	clrc
  9556  16AD  0DFB               	rlf	___ftmul@f2,f
  9557  16AE  0DFC               	rlf	___ftmul@f2+1,f
  9558  16AF  0DFD               	rlf	___ftmul@f2+2,f
  9559  16B0  3EFF               	addlw	-1
  9560  16B1  1D03               	skipz
  9561  16B2  2EAC               	goto	u303_25
  9562  16B3  3001               	movlw	1
  9563  16B4  02A8               	subwf	___ftmul@cntr,f
  9564  16B5  1D03               	btfss	3,2
  9565  16B6  2E93               	goto	i1l2600
  9566  16B7  3009               	movlw	9
  9567  16B8  00A0               	movwf	??___ftmul
  9568  16B9  0820               	movf	??___ftmul,w
  9569  16BA  00A8               	movwf	___ftmul@cntr
  9570  16BB                     i1l2612:	
  9571  16BB  1C78               	btfss	___ftmul@f1,0
  9572  16BC  2ECB               	goto	i1l2616
  9573  16BD  087B               	movf	___ftmul@f2,w
  9574  16BE  07A5               	addwf	___ftmul@f3_as_product,f
  9575  16BF  087C               	movf	___ftmul@f2+1,w
  9576  16C0  1103               	clrz
  9577  16C1  1803               	skipnc
  9578  16C2  0A7C               	incf	___ftmul@f2+1,w
  9579  16C3  1D03               	btfss	3,2
  9580  16C4  07A6               	addwf	___ftmul@f3_as_product+1,f
  9581  16C5  087D               	movf	___ftmul@f2+2,w
  9582  16C6  1103               	clrz
  9583  16C7  1803               	skipnc
  9584  16C8  0A7D               	incf	___ftmul@f2+2,w
  9585  16C9  1D03               	btfss	3,2
  9586  16CA  07A7               	addwf	___ftmul@f3_as_product+2,f
  9587  16CB                     i1l2616:	
  9588  16CB  3001               	movlw	1
  9589  16CC                     u307_25:	
  9590  16CC  1003               	clrc
  9591  16CD  0CFA               	rrf	___ftmul@f1+2,f
  9592  16CE  0CF9               	rrf	___ftmul@f1+1,f
  9593  16CF  0CF8               	rrf	___ftmul@f1,f
  9594  16D0  3EFF               	addlw	-1
  9595  16D1  1D03               	skipz
  9596  16D2  2ECC               	goto	u307_25
  9597  16D3  3001               	movlw	1
  9598  16D4                     u308_25:	
  9599  16D4  1003               	clrc
  9600  16D5  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9601  16D6  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9602  16D7  0CA5               	rrf	___ftmul@f3_as_product,f
  9603  16D8  3EFF               	addlw	-1
  9604  16D9  1D03               	skipz
  9605  16DA  2ED4               	goto	u308_25
  9606  16DB  3001               	movlw	1
  9607  16DC  02A8               	subwf	___ftmul@cntr,f
  9608  16DD  1D03               	btfss	3,2
  9609  16DE  2EBB               	goto	i1l2612
  9610  16DF  0825               	movf	___ftmul@f3_as_product,w
  9611  16E0  00F0               	movwf	___ftpack@arg
  9612  16E1  0826               	movf	___ftmul@f3_as_product+1,w
  9613  16E2  00F1               	movwf	___ftpack@arg+1
  9614  16E3  0827               	movf	___ftmul@f3_as_product+2,w
  9615  16E4  00F2               	movwf	___ftpack@arg+2
  9616  16E5  0824               	movf	___ftmul@exp,w
  9617  16E6  00A0               	movwf	??___ftmul
  9618  16E7  0820               	movf	??___ftmul,w
  9619  16E8  00F3               	movwf	___ftpack@exp
  9620  16E9  0829               	movf	___ftmul@sign,w
  9621  16EA  00A1               	movwf	??___ftmul+1
  9622  16EB  0821               	movf	??___ftmul+1,w
  9623  16EC  00F4               	movwf	___ftpack@sign
  9624  16ED  160A  118A  2380   	fcall	___ftpack
  9625  16F0  0870               	movf	?___ftpack,w
  9626  16F1  00F8               	movwf	?___ftmul
  9627  16F2  0871               	movf	?___ftpack+1,w
  9628  16F3  00F9               	movwf	?___ftmul+1
  9629  16F4  0872               	movf	?___ftpack+2,w
  9630  16F5  00FA               	movwf	?___ftmul+2
  9631  16F6  0008               	return
  9632  16F7                     __end_of___ftmul:	
  9633                           
  9634                           	psect	text41
  9635  1380                     __ptext41:	
  9636 ;; *************** function ___ftpack *****************
  9637 ;; Defined at:
  9638 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  arg             3    0[COMMON] unsigned um
  9641 ;;  exp             1    3[COMMON] unsigned char 
  9642 ;;  sign            1    4[COMMON] unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  3    0[COMMON] float 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9654 ;;      Params:         5       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0
  9656 ;;      Temps:          3       0       0       0       0
  9657 ;;      Totals:         8       0       0       0       0
  9658 ;;Total ram usage:        8 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		___ftadd
  9664 ;;		___ftdiv
  9665 ;;		___ftmul
  9666 ;;		___lwtoft
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function ___ftpack
  9672  1380                     ___ftpack:	
  9673                           
  9674                           ;incstack = 0
  9675                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9676  1380  0873               	movf	___ftpack@exp,w
  9677  1381  1903               	btfsc	3,2
  9678  1382  2B88               	goto	i1l2256
  9679  1383  0872               	movf	___ftpack@arg+2,w
  9680  1384  0471               	iorwf	___ftpack@arg+1,w
  9681  1385  0470               	iorwf	___ftpack@arg,w
  9682  1386  1D03               	skipz
  9683  1387  2B9B               	goto	i1l2262
  9684  1388                     i1l2256:	
  9685  1388  3000               	movlw	0
  9686  1389  00F0               	movwf	?___ftpack
  9687  138A  3000               	movlw	0
  9688  138B  00F1               	movwf	?___ftpack+1
  9689  138C  3000               	movlw	0
  9690  138D  00F2               	movwf	?___ftpack+2
  9691  138E  0008               	return
  9692  138F                     i1l2260:	
  9693  138F  3001               	movlw	1
  9694  1390  00F5               	movwf	??___ftpack
  9695  1391  0875               	movf	??___ftpack,w
  9696  1392  07F3               	addwf	___ftpack@exp,f
  9697  1393  3001               	movlw	1
  9698  1394                     u216_25:	
  9699  1394  1003               	clrc
  9700  1395  0CF2               	rrf	___ftpack@arg+2,f
  9701  1396  0CF1               	rrf	___ftpack@arg+1,f
  9702  1397  0CF0               	rrf	___ftpack@arg,f
  9703  1398  3EFF               	addlw	-1
  9704  1399  1D03               	skipz
  9705  139A  2B94               	goto	u216_25
  9706  139B                     i1l2262:	
  9707  139B  30FE               	movlw	254
  9708  139C  0572               	andwf	___ftpack@arg+2,w
  9709  139D  1903               	btfsc	3,2
  9710  139E  2BB6               	goto	i1l759
  9711  139F  2B8F               	goto	i1l2260
  9712  13A0                     i1l2264:	
  9713  13A0  3001               	movlw	1
  9714  13A1  00F5               	movwf	??___ftpack
  9715  13A2  0875               	movf	??___ftpack,w
  9716  13A3  07F3               	addwf	___ftpack@exp,f
  9717  13A4  3001               	movlw	1
  9718  13A5  07F0               	addwf	___ftpack@arg,f
  9719  13A6  3000               	movlw	0
  9720  13A7  1803               	skipnc
  9721  13A8  3001               	movlw	1
  9722  13A9  07F1               	addwf	___ftpack@arg+1,f
  9723  13AA  3000               	movlw	0
  9724  13AB  1803               	skipnc
  9725  13AC  3001               	movlw	1
  9726  13AD  07F2               	addwf	___ftpack@arg+2,f
  9727  13AE  3001               	movlw	1
  9728  13AF                     u218_25:	
  9729  13AF  1003               	clrc
  9730  13B0  0CF2               	rrf	___ftpack@arg+2,f
  9731  13B1  0CF1               	rrf	___ftpack@arg+1,f
  9732  13B2  0CF0               	rrf	___ftpack@arg,f
  9733  13B3  3EFF               	addlw	-1
  9734  13B4  1D03               	skipz
  9735  13B5  2BAF               	goto	u218_25
  9736  13B6                     i1l759:	
  9737  13B6  30FF               	movlw	255
  9738  13B7  0572               	andwf	___ftpack@arg+2,w
  9739  13B8  1903               	btfsc	3,2
  9740  13B9  2BC5               	goto	i1l2272
  9741  13BA  2BA0               	goto	i1l2264
  9742  13BB                     i1l2270:	
  9743  13BB  3001               	movlw	1
  9744  13BC  02F3               	subwf	___ftpack@exp,f
  9745  13BD  3001               	movlw	1
  9746  13BE                     u220_25:	
  9747  13BE  1003               	clrc
  9748  13BF  0DF0               	rlf	___ftpack@arg,f
  9749  13C0  0DF1               	rlf	___ftpack@arg+1,f
  9750  13C1  0DF2               	rlf	___ftpack@arg+2,f
  9751  13C2  3EFF               	addlw	-1
  9752  13C3  1D03               	skipz
  9753  13C4  2BBE               	goto	u220_25
  9754  13C5                     i1l2272:	
  9755  13C5  1FF1               	btfss	___ftpack@arg+1,7
  9756  13C6  2BBB               	goto	i1l2270
  9757  13C7  1873               	btfsc	___ftpack@exp,0
  9758  13C8  2BCF               	goto	i1l765
  9759  13C9  30FF               	movlw	255
  9760  13CA  05F0               	andwf	___ftpack@arg,f
  9761  13CB  307F               	movlw	127
  9762  13CC  05F1               	andwf	___ftpack@arg+1,f
  9763  13CD  30FF               	movlw	255
  9764  13CE  05F2               	andwf	___ftpack@arg+2,f
  9765  13CF                     i1l765:	
  9766  13CF  1003               	clrc
  9767  13D0  0CF3               	rrf	___ftpack@exp,f
  9768  13D1  0873               	movf	___ftpack@exp,w
  9769  13D2  00F5               	movwf	??___ftpack
  9770  13D3  01F6               	clrf	??___ftpack+1
  9771  13D4  01F7               	clrf	??___ftpack+2
  9772  13D5  3010               	movlw	16
  9773  13D6                     u223_25:	
  9774  13D6  1003               	clrc
  9775  13D7  0DF5               	rlf	??___ftpack,f
  9776  13D8  0DF6               	rlf	??___ftpack+1,f
  9777  13D9  0DF7               	rlf	??___ftpack+2,f
  9778  13DA  3EFF               	addlw	-1
  9779  13DB  1D03               	skipz
  9780  13DC  2BD6               	goto	u223_25
  9781  13DD  0875               	movf	??___ftpack,w
  9782  13DE  04F0               	iorwf	___ftpack@arg,f
  9783  13DF  0876               	movf	??___ftpack+1,w
  9784  13E0  04F1               	iorwf	___ftpack@arg+1,f
  9785  13E1  0877               	movf	??___ftpack+2,w
  9786  13E2  04F2               	iorwf	___ftpack@arg+2,f
  9787  13E3  0874               	movf	___ftpack@sign,w
  9788  13E4  1903               	btfsc	3,2
  9789  13E5  0008               	return
  9790  13E6  17F2               	bsf	___ftpack@arg+2,7
  9791  13E7  0008               	return
  9792  13E8                     __end_of___ftpack:	
  9793  007E                     btemp	set	126	;btemp
  9794  007E                     wtemp	set	126
  9795  007E                     wtemp0	set	126
  9796  0080                     wtemp1	set	128
  9797  0082                     wtemp2	set	130
  9798  0084                     wtemp3	set	132
  9799  0086                     wtemp4	set	134
  9800  0088                     wtemp5	set	136
  9801  007F                     wtemp6	set	127
  9802  007E                     ttemp	set	126
  9803  007E                     ttemp0	set	126
  9804  0081                     ttemp1	set	129
  9805  0084                     ttemp2	set	132
  9806  0087                     ttemp3	set	135
  9807  007F                     ttemp4	set	127
  9808  007E                     ltemp	set	126
  9809  007E                     ltemp0	set	126
  9810  0082                     ltemp1	set	130
  9811  0086                     ltemp2	set	134
  9812  0080                     ltemp3	set	128


Data Sizes:
    Strings     191
    Constant    10
    Data        8
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      72
    BANK3            96     11      50
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5324
                                             27 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2900
                                             18 BANK1      6     3      3
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55020
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51590
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 13:42:54 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00C9       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00E3                            fsr 0004           ___wmul@multiplicand 00CB  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BB                  ___ftadd@sign 0034  
                         l202 0A1F                           l227 0803                           l653 14F1  
                         l479 0DF1                           l497 0EE9                           l598 07E7  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0C19  
                         _rpm 00C3                           fsr0 0004                           _pwm 00C1  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CD                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
                        l3002 1126            LCD_WriteString@Str 00CB                          l3016 120D  
                        l3404 1311                          l3420 1277                          l3422 1285  
                        l3430 129E                          l3408 131C                          l2554 1512  
                        l2546 1502                          l3426 1293                          l3370 106E  
                        l3522 0F76                          l3506 0F37                          l3514 0F55  
                        l3450 0E06                          l3442 0DED                          l2572 1565  
                        l2564 154A                          l2556 1522                          l3516 0F59  
                        l3540 0FF9                          l3454 0E18                          l2568 1557  
                        l3376 07DF                          l3536 0F95                          l3528 0F8D  
                        l3480 0EAE                          l3464 0E6E                          l3448 0DFA  
                        l3466 0E87                          l3538 0DC1                          l3396 12ED  
                        l3476 0EA8                          l3398 12FB                          l3496 0F1A  
                        l3488 0EDB                          l3498 0F1E                          l2896 123E  
                        STR_1 07B1                          STR_2 07BF                          STR_3 07BF  
                        STR_4 07BF                          STR_5 07BF                          STR_6 07BF  
                        STR_7 07A3                          STR_8 0795                          STR_9 07BF  
                        u4215 12F0                          u4305 128B                          u4235 12FC  
                        u4315 1294                          u4245 1308                          u4255 1312  
                        u4175 07E8                          u3625 0818                          u4185 07EF  
                        u4425 0F02                          u2915 1524                          u2925 1539  
                        u4285 127A                          u4607 1436                          u3655 114D  
                        u2935 154B                          u4527 0A18                          u4617 1444  
                        u4385 0ECD                          u4537 0ABC                          u4627 1450  
                        u4547 10BE                          u3595 116E                          u4637 1132  
                        u4557 13F2                          u4647 11F0                          u4567 1402  
                        u2895 1516                          u4657 11FE                          u4577 1410  
                        u4667 120A                          u4587 141C                          u4677 10A7  
                        u4597 1428                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 097A                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 1082                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 10AD                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 080D                         ??_ISR 00C5  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1453               __end_of___aldiv 156E                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 1800                         STR_10 0786  
                       STR_11 0744                         STR_12 0761                         STR_13 0775  
                       STR_14 07D6                         STR_15 07D6                         STR_16 07C7  
                       STR_17 07CA                 __CFG_WDTE$OFF 0000                         STR_18 07D0  
                       STR_19 071C               __end_of___ftdiv 1626               __end_of___ftneg 103D  
             __end_of___ftmul 16F7                         _T1CON 0010               __end_of___fttol 14DF  
             __end_of___lwdiv 1323                         i1l118 0971                         i1l128 0C10  
                       i1l227 103E                         i1l180 0DA5                         i1l184 0C89  
             __end_of___lwmod 12A5                         i1l187 0CB2                         i1l765 13CF  
                       i1l598 11A7                         i1l759 13B6                         i1l788 179F  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0061                         _derro 0193  
             __end_of_dpowers 071C               __end_of_max_val 1118               __end_of_isdigit 1070  
               ___ftpack@sign 0074                         _trimf 0856                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 11E4  
            __end_ofi1___wmul 11C0                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 1000            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00C9                ?_LCD_WriteData 0070                   ?_USART_Init 00D8  
       i1TIMER0_Set@contagens 0070               __initialization 0019                  __end_of_main 0AC3  
                      ??_main 00E0                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 120D                    Fuzzy@a_232 005B                    Fuzzy@a_233 005D  
                  Fuzzy@a_234 005F                    Fuzzy@a_235 0061                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0069                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 13E8                        ?_trimf 0047  
                      i1l2300 1736                        i1l2400 134A                        i1l2320 1771  
                      i1l2312 1750                        i1l3200 0C3E                        i1l2330 178F  
                      i1l2322 1776                        i1l2260 138F                        i1l2404 1371  
                      i1l2340 17C3                        i1l2332 179B                        i1l2324 177A  
                      i1l3212 0C6C                        i1l2270 13BB                        i1l2262 139B  
                      i1l2350 17E6                        i1l2318 1765                        i1l3222 0C8A  
                      i1l3206 0C55                        i1l2272 13C5                        i1l2264 13A0  
                      i1l2256 1388                        i1l2600 1693                        i1l2336 17B1  
                      i1l2360 1586                        i1l2440 08CF                        i1l3240 0CCB  
                      i1l2290 1720                        i1l3146 119F                        i1l3234 0CB4  
                      i1l2612 16BB                        i1l2604 16A3                        i1l2380 15E1  
                      i1l3252 0CF9                        i1l2294 1727                        i1l2366 159C  
                      i1l2470 0B6E                        i1l2446 0954                        i1l3174 12D1  
                      i1l3166 12AD                        i1l3246 0CE2                        i1l3270 0D44  
                      i1l2616 16CB                        i1l2632 146B                        i1l2464 0B3C  
                      i1l2800 03F6                        i1l3168 12BB                        i1l3264 0D27  
                      i1l2650 149D                        i1l3178 12DC                        i1l3282 0D61  
                      i1l3258 0D10                        i1l2660 14C5                        i1l2652 14AD  
                      i1l2388 1600                        i1l2476 0BF3                        i1l2582 163E  
                      i1l2662 14C8                        i1l2830 056E                        i1l2814 0494  
                      i1l2750 011B                        i1l3294 0DA0                        i1l2840 05BD  
                      i1l2824 055F                        i1l2728 117A                        i1l3296 0DA1  
                      i1l2666 14D6                        i1l2658 14BA                        i1l2834 058B  
                      i1l2818 04F8                        i1l2746 00FE                        i1l2588 1654  
                      i1l2852 05F9                        i1l2844 05D6                        i1l2764 01B9  
                      i1l2790 0331                        i1l2774 0284                        i1l2768 021D  
                      i1l2858 06B0                        i1l2794 038F                        i1l2884 10F7  
                      i1l2876 10E8                        u220_25 13BE                        u302_25 16A4  
                      u223_25 13D6                        u303_25 16AC                        u311_25 1472  
                      u216_25 1394                        u240_25 177B                        u218_25 13AF  
                      u314_25 149E                        u234_25 1751                        u307_25 16CC  
                      u243_25 1790                        u251_25 15AE                        u260_21 1364  
                      u260_22 1365                        u260_23 136A                        u260_24 136B  
                      u308_25 16D4                        u252_25 15C0                        u340_25 0282  
                      u317_25 14BC                        u237_25 1766                        u253_25 15E2  
                      u254_25 15F3                        u334_25 10D5                        u350_25 056C  
                      u255_25 1601                        u343_25 032F                        u345_25 03F4  
                      u258_21 133D              __end_of___lwtoft 1096                        u258_22 133E  
                      u258_23 1343                        u258_24 1344                        u354_25 05D4  
                      u338_25 01B7                        u355_25 05F7                        u347_25 0492  
                      u356_25 06AE                        u349_25 055D           __size_of_TIMER0_Set 0008  
                      u390_25 12B0                        u392_25 12BC                        u393_25 12C8  
                      u298_25 1660                        u394_25 12D2                        u386_25 11A8  
                      u299_25 1672                        u387_25 11AF                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 0059              LCD_WriteCmd@Byte 00CA  
         i1_USART_WriteString 117A                        ___ftge 1323                     ??___aldiv 00D1  
                      ___wmul 07DB                     ??___ftadd 0030                _PWM_DutyCycle1 1138  
              _PWM_DutyCycle2 1159              ?_USART_WriteChar 0070                     ??___ftdiv 003D  
                   ??___ftneg 0073                        _deltaV 00BD                     ??___ftmul 0020  
                   ??___fttol 0074                     ??___lwdiv 00CD                     ??___lwmod 00D5  
                      _fitemp 00A0         USART_ReceiveChar@byte 0074                        _trapmf 0AC3  
                      _pulsos 00BF                        _status 019A         ___ftmul@f3_as_product 0025  
                   ??_max_val 007C             __end_ofi1___lwdiv 12E3                     ??_isdigit 00C9  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 004A                        trimf@b 004D  
                      trimf@c 0050                        trimf@x 0047                     ??_sprintf 00DA  
               ?i1_TIMER0_Set 0070       __end_of__initialization 005D                     ?_LCD_Init 0070  
                  ___ftadd@f1 002A                    ___ftadd@f2 002D               ??_LCD_WriteData 00C9  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 0037                    ___ftdiv@f3 0042                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 1159        __end_of_PWM_DutyCycle2 117A                    ___ftmul@f1 0078  
                  ___ftmul@f2 007B                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 0702                  __pidataBANK1 102A                  __pidataBANK3 1027  
               LCD_Cursor@Col 00C9                 LCD_Cursor@Row 00CB                  ??_LCD_Cursor 00CA  
             _LCD_WriteString 120D                 __end_of_trimf 097A                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00C9          __end_of_LCD_WriteCmd 10AD         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 01BB                       ??_trimf 007E                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 1138                    ??_LCD_Init 00CB  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00C9               ?_PWM_DutyCycle2 00C9  
                  __pmaintext 097A                   Fuzzy@mantem 0066                       ?___ftge 0070  
                     ?___wmul 00C9                    __pintentry 0004                  ??_TIMER0_Set 00C9  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0047                    ??_PWM_Init 00C9                    ??i1___wmul 007C  
                   ?___lwtoft 0078          __size_of_TIMER0_Init 000B                       _SSPCON2 0091  
                  __stringtab 0702            __end_of_TIMER0_Set 104D       __end_of_LCD_WriteString 123E  
                   _ADCResult 0196                  ??_USART_Init 00DC             LCD_WriteData@Byte 00CA  
                     ___aldiv 14DF               __size_of___ftge 005D                       ___ftadd 16F7  
                     ___ftdiv 156E                       ___ftneg 1035               __size_of___wmul 0025  
                     ___ftmul 1626                       ___fttol 1453                       ___lwdiv 12E3  
                     ___lwmod 126F                    ??___ftpack 0075                       __ptext1 0DB6  
                     __ptext2 1060                       __ptext3 07DB                       __ptext4 126F  
                     __ptext5 12E3                       __ptext6 123E                       __ptext7 0800  
                     __ptext8 080D                       __ptext9 14DF                    _pas_cooler 00E6  
                  ??___lwtoft 007B               __size_of_trapmf 0156                  __size_of_ISR 019D  
                   _T1CONbits 0010                       _dpowers 0712             i1___lwdiv@divisor 0070  
                   _T2CONbits 0012                       _max_val 10FA                       _isdigit 1060  
           i1___lwdiv@counter 0077              ___aldiv@dividend 00CD                     _LCD_Clear 11E4  
          __end_of_USART_Init 0856                       _sprintf 0DB6                       clrloop0 104E  
        end_of_initialization 005D                     _RCSTAbits 0018              ___aldiv@quotient 00D4  
                     trapmf@a 004A                       trapmf@b 004D                       trapmf@c 0050  
                     trapmf@d 0053                       trapmf@x 0047                       trimf@ua 0053  
        __end_ofi1_TIMER0_Set 1035         i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017  
                   _PORTBbits 0006                     _PORTEbits 0009                    ?_LCD_Clear 0070  
            i1_PWM_DutyCycle2 10C4             __size_of_ADC_Init 0012                     i1___lwdiv 12A5  
                _contador_rb6 0198           PWM_DutyCycle1@valor 00C9                    _total_area 00B2  
         PWM_DutyCycle2@valor 00C9                   _CCP1CONbits 0017                   ___ftdiv@exp 0045  
                 _CCP2CONbits 001D                     _TXSTAbits 0098              ?_LCD_WriteString 00CB  
           __size_of_LCD_Init 006B                  _LCD_WriteCmd 1096                   ___ftmul@exp 0024  
              __end_of___ftge 1380                __end_of___wmul 0800             i1_USART_WriteChar 103D  
          ?i1_USART_WriteChar 0070                __end_of_trapmf 0C19      __size_of_USART_WriteChar 000D  
           __size_of_PWM_Init 0024           start_initialization 0019             __size_ofi1___wmul 0023  
                 __end_of_ISR 0DB6           ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070  
            ??_PWM_DutyCycle1 00CB              ??_PWM_DutyCycle2 00CB         __end_of_LCD_WriteData 10C4  
           _USART_ReceiveChar 10DF                      ??___ftge 0076            ?_USART_ReceiveChar 0070  
   __end_ofi1_USART_WriteChar 1045                      ??___wmul 00CD                   __pdataBANK1 00E3  
                 __pdataBANK3 01BF   __end_ofi1_USART_WriteString 119D                      ??_trapmf 007E  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00C5  
               __pcstackBANK3 01B4                   ??_LCD_Clear 00CB           __end_of__stringdata 07DB  
                _isdigit$1449 00C9                   sprintf@_val 01B6                   sprintf@flag 01BA  
                 sprintf@prec 01B5     __end_of_USART_ReceiveChar 10FA         __size_ofi1_TIMER0_Set 0006  
            ___lwdiv@dividend 00CB           TIMER0_Set@contagens 00C9                  Fuzzy@aumenta 006C  
                    ?___aldiv 00C9                      ?___ftadd 002A                      ?___ftdiv 0037  
                    ?___ftneg 0070                      ?___ftmul 0078                      ?___fttol 0070  
                    ?___lwdiv 00C9                      ?___lwmod 00D1                     __pstrings 0702  
                   _ativa_fan 0190                 ??_TIMER0_Init 00C9            USART_Init@BaudRate 00D8  
                    ?_max_val 0020                      ?_isdigit 0070                      _ADC_Init 1070  
                   _fop_rule1 00A3                     _fop_rule2 00A6                     _fop_rule3 00A9  
              __size_of_Fuzzy 06A1              ___lwdiv@quotient 00CF                   ??i1___lwdiv 0074  
                    ?_sprintf 00D7                __size_of_trimf 0124             ??_USART_WriteChar 00C9  
                i1_TIMER0_Set 102F               ___aldiv@divisor 00C9             interrupt_function 0004  
             ___aldiv@counter 00D2                      _LCD_Init 13E8                ___wmul@product 00CD  
                   clear_ram0 104D                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 019C  
    __end_ofi1_PWM_DutyCycle2 10DF                     _tempo_rb6 019E    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 01AA                   _display_pwm 01A0                    _ADCON0bits 001F  
                 __stringbase 0711                    _ADCON1bits 009F                   __stringdata 071C  
                    _PWM_Init 11C0             ___wmul@multiplier 00C9                      i1___wmul 119D  
         __end_of_TIMER0_Init 1060    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@tip 0063              __size_of___aldiv 008F              __size_of___ftadd 0109  
            __size_of___ftdiv 00B8              __size_of___ftneg 0008              __size_of___ftmul 00D1  
            __size_of___fttol 008C              __size_of___lwdiv 0040              __size_of___lwmod 0036  
                    ___ftpack 1380            __end_of__stringtab 0712                      ___lwtoft 1082  
            __size_of_max_val 001E              __size_of_isdigit 0010               ___lwdiv@divisor 00C9  
             ___lwdiv@counter 00CE             _USART_WriteString 123E                      __ptext10 1045  
                    __ptext11 1055                      __ptext20 1096                      __ptext12 11C0  
                    __ptext21 1070                      __ptext13 1159                      __ptext30 10C4  
                    __ptext22 0C19                      __ptext14 1138                      __ptext31 0856  
                    __ptext23 119D                      __ptext15 120D                      __ptext40 1626  
                    __ptext32 0AC3                      __ptext24 12A5                      __ptext16 10AD  
                    __ptext41 1380                      __ptext33 1035                      __ptext25 102F  
                    __ptext17 13E8                      __ptext34 156E                      __ptext26 10DF  
                    __ptext18 1118                      __ptext35 16F7                      __ptext27 117A  
                    __ptext19 11E4                      __ptext36 10FA                      __ptext28 103D  
                    __ptext37 1323                      __ptext29 0061                      __ptext38 1082  
                    __ptext39 1453            ?_USART_WriteString 00CA              __size_of_sprintf 024A  
          i1___lwdiv@dividend 0072                 __size_of_main 0149           USART_WriteChar@byte 00C9  
         ??_USART_WriteString 00CC        i1USART_WriteString@str 0071                      _setpoint 01BF  
                  _LCD_Cursor 1118      __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075  
                 _TIMER0_Init 1055                    _INTCONbits 000B     __end_of_USART_WriteString 126F  
                    max_val@a 0020                      max_val@b 0023                      isdigit@c 00CA  
                    intlevel1 0000                     sprintf@ap 01B4                     sprintf@sp 01BD  
            ___lwmod@dividend 00D3                     stringcode 070C          USART_WriteString@str 00CA  
                  _TIMER0_Set 1045                      trapmf@ua 0056               _USART_WriteChar 0800  
                    sprintf@c 01BE                      sprintf@f 00D7               ___lwmod@divisor 00D1  
             ___lwmod@counter 00D6                      stringdir 070C                      stringtab 0702  
                ___aldiv@sign 00D3        __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014  
                  _USART_Init 080D  
