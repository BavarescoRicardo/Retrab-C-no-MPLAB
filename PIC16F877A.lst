

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 01:47:23 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  0801                     __pidataBANK0:	
   604                           
   605                           ;initializer for _tf
   606  0801  3400               	retlw	0
   607  0802  3448               	retlw	72
   608  0803  3442               	retlw	66
   609                           
   610                           	psect	idataBANK1
   611  11C0                     __pidataBANK1:	
   612                           
   613                           ;initializer for _setpoint
   614  11C0  3400               	retlw	0
   615  11C1  34A0               	retlw	160
   616  11C2  3441               	retlw	65
   617                           
   618                           ;initializer for _pas_cooler
   619  11C3  3407               	retlw	7
   620  11C4  3400               	retlw	0
   621                           
   622                           	psect	idataBANK3
   623  07FE                     __pidataBANK3:	
   624                           
   625                           ;initializer for _pwm
   626  07FE  3432               	retlw	50
   627  07FF  3400               	retlw	0
   628                           
   629                           	psect	strings
   630  1000                     __pstrings:	
   631  1000                     stringtab:	
   632  1000                     __stringtab:	
   633                           
   634                           ;	String table - string pointers are 1 byte each
   635  1000  1BFF               	btfsc	btemp+1,7
   636  1001  280A               	ljmp	stringcode
   637  1002  1383               	bcf	3,7
   638  1003  187F               	btfsc	btemp+1,0
   639  1004  1783               	bsf	3,7
   640  1005  0800               	movf	0,w
   641  1006  0A84               	incf	4,f
   642  1007  1903               	skipnz
   643  1008  0AFF               	incf	btemp+1,f
   644  1009  0008               	return
   645  100A                     stringcode:	
   646  100A                     stringdir:	
   647  100A  3010               	movlw	high stringdir
   648  100B  008A               	movwf	10
   649  100C  0804               	movf	4,w
   650  100D  0A84               	incf	4,f
   651  100E  0782               	addwf	2,f
   652  100F                     __stringbase:	
   653  100F  3400               	retlw	0
   654  1010                     __end_of__stringtab:	
   655  1010                     _dpowers:	
   656  1010  3401               	retlw	1
   657  1011  3400               	retlw	0
   658  1012  340A               	retlw	10
   659  1013  3400               	retlw	0
   660  1014  3464               	retlw	100
   661  1015  3400               	retlw	0
   662  1016  34E8               	retlw	232
   663  1017  3403               	retlw	3
   664  1018  3410               	retlw	16
   665  1019  3427               	retlw	39
   666  101A                     __end_of_dpowers:	
   667  000E                     _TMR1	set	14
   668  001F                     _ADCON0bits	set	31
   669  001E                     _ADRESH	set	30
   670  0017                     _CCP1CON	set	23
   671  0017                     _CCP1CONbits	set	23
   672  001D                     _CCP2CON	set	29
   673  001D                     _CCP2CONbits	set	29
   674  0015                     _CCPR1L	set	21
   675  001B                     _CCPR2L	set	27
   676  000B                     _INTCONbits	set	11
   677  000C                     _PIR1bits	set	12
   678  000D                     _PIR2bits	set	13
   679  0005                     _PORTA	set	5
   680  0006                     _PORTB	set	6
   681  0006                     _PORTBbits	set	6
   682  0007                     _PORTC	set	7
   683  0008                     _PORTD	set	8
   684  0009                     _PORTE	set	9
   685  0009                     _PORTEbits	set	9
   686  001A                     _RCREG	set	26
   687  0018                     _RCSTAbits	set	24
   688  0013                     _SSPBUF	set	19
   689  0014                     _SSPCONbits	set	20
   690  0010                     _T1CON	set	16
   691  0010                     _T1CONbits	set	16
   692  0012                     _T2CONbits	set	18
   693  0001                     _TMR0	set	1
   694  000F                     _TMR1H	set	15
   695  000E                     _TMR1L	set	14
   696  0019                     _TXREG	set	25
   697  00C1                     _OERR	set	193
   698  009F                     _ADCON1bits	set	159
   699  009E                     _ADRESL	set	158
   700  0081                     _OPTION_REGbits	set	129
   701  008C                     _PIE1bits	set	140
   702  008D                     _PIE2bits	set	141
   703  0092                     _PR2	set	146
   704  0099                     _SPBRG	set	153
   705  0093                     _SSPADD	set	147
   706  0091                     _SSPCON2	set	145
   707  0091                     _SSPCON2bits	set	145
   708  0094                     _SSPSTATbits	set	148
   709  0085                     _TRISA	set	133
   710  0086                     _TRISB	set	134
   711  0087                     _TRISC	set	135
   712  0088                     _TRISD	set	136
   713  0089                     _TRISE	set	137
   714  0098                     _TXSTAbits	set	152
   715  010D                     _EEADR	set	269
   716  010C                     _EEDATA	set	268
   717  018C                     _EECON1bits	set	396
   718  018D                     _EECON2	set	397
   719  101A                     __stringdata:	
   720  101A                     STR_5:	
   721  101A  340A               	retlw	10
   722  101B  340D               	retlw	13
   723  101C  3420               	retlw	32	;' '
   724  101D  342D               	retlw	45	;'-'
   725  101E  342D               	retlw	45	;'-'
   726  101F  342D               	retlw	45	;'-'
   727  1020  342D               	retlw	45	;'-'
   728  1021  342D               	retlw	45	;'-'
   729  1022  342D               	retlw	45	;'-'
   730  1023  342D               	retlw	45	;'-'
   731  1024  3420               	retlw	32	;' '
   732  1025  3445               	retlw	69	;'E'
   733  1026  3453               	retlw	83	;'S'
   734  1027  3454               	retlw	84	;'T'
   735  1028  344F               	retlw	79	;'O'
   736  1029  3455               	retlw	85	;'U'
   737  102A  3452               	retlw	82	;'R'
   738  102B  344F               	retlw	79	;'O'
   739  102C  3420               	retlw	32	;' '
   740  102D  3444               	retlw	68	;'D'
   741  102E  3445               	retlw	69	;'E'
   742  102F  3420               	retlw	32	;' '
   743  1030  3450               	retlw	80	;'P'
   744  1031  3449               	retlw	73	;'I'
   745  1032  344C               	retlw	76	;'L'
   746  1033  3448               	retlw	72	;'H'
   747  1034  3441               	retlw	65	;'A'
   748  1035  3420               	retlw	32	;' '
   749  1036  342D               	retlw	45	;'-'
   750  1037  342D               	retlw	45	;'-'
   751  1038  342D               	retlw	45	;'-'
   752  1039  342D               	retlw	45	;'-'
   753  103A  342D               	retlw	45	;'-'
   754  103B  342D               	retlw	45	;'-'
   755  103C  342D               	retlw	45	;'-'
   756  103D  3420               	retlw	32	;' '
   757  103E  340A               	retlw	10
   758  103F  340D               	retlw	13
   759  1040  3420               	retlw	32	;' '
   760  1041  3400               	retlw	0
   761  1042                     STR_2:	
   762  1042  3449               	retlw	73	;'I'
   763  1043  346E               	retlw	110	;'n'
   764  1044  3469               	retlw	105	;'i'
   765  1045  3463               	retlw	99	;'c'
   766  1046  3469               	retlw	105	;'i'
   767  1047  3461               	retlw	97	;'a'
   768  1048  346C               	retlw	108	;'l'
   769  1049  3469               	retlw	105	;'i'
   770  104A  347A               	retlw	122	;'z'
   771  104B  3461               	retlw	97	;'a'
   772  104C  346E               	retlw	110	;'n'
   773  104D  3464               	retlw	100	;'d'
   774  104E  346F               	retlw	111	;'o'
   775  104F  342E               	retlw	46	;'.'
   776  1050  342E               	retlw	46	;'.'
   777  1051  342E               	retlw	46	;'.'
   778  1052  3400               	retlw	0
   779  1053                     STR_1:	
   780  1053  340A               	retlw	10
   781  1054  340D               	retlw	13
   782  1055  3464               	retlw	100	;'d'
   783  1056  3465               	retlw	101	;'e'
   784  1057  3473               	retlw	115	;'s'
   785  1058  346C               	retlw	108	;'l'
   786  1059  3469               	retlw	105	;'i'
   787  105A  3467               	retlw	103	;'g'
   788  105B  3461               	retlw	97	;'a'
   789  105C  3464               	retlw	100	;'d'
   790  105D  346F               	retlw	111	;'o'
   791  105E  340A               	retlw	10
   792  105F  340D               	retlw	13
   793  1060  3400               	retlw	0
   794  1061                     STR_4:	
   795  1061  346B               	retlw	107	;'k'
   796  1062  346D               	retlw	109	;'m'
   797  1063  3448               	retlw	72	;'H'
   798  1064  343A               	retlw	58	;':'
   799  1065  3420               	retlw	32	;' '
   800  1066  3400               	retlw	0
   801  1067                     STR_3:	
   802  1067  3425               	retlw	37	;'%'
   803  1068  3430               	retlw	48	;'0'
   804  1069  3434               	retlw	52	;'4'
   805  106A  3464               	retlw	100	;'d'
   806  106B  3400               	retlw	0
   807  106C                     __end_of__stringdata:	
   808                           
   809                           ; #config settings
   810  0000                     
   811                           	psect	cinit
   812  0015                     start_initialization:	
   813  0015                     __initialization:	
   814                           
   815                           ; Clear objects allocated to BANK1
   816  0015  1383               	bcf	3,7	;select IRP bank0
   817  0016  30A0               	movlw	low __pbssBANK1
   818  0017  0084               	movwf	4
   819  0018  30C9               	movlw	low (__pbssBANK1+41)
   820  0019  160A  118A  21DB  120A  118A  	fcall	clear_ram0
   821                           
   822                           ; Clear objects allocated to BANK3
   823  001E  1783               	bsf	3,7	;select IRP bank2
   824  001F  3090               	movlw	low __pbssBANK3
   825  0020  0084               	movwf	4
   826  0021  30A1               	movlw	low (__pbssBANK3+17)
   827  0022  160A  118A  21DB  120A  118A  	fcall	clear_ram0
   828                           
   829                           ; Initialize objects allocated to BANK3
   830  0027  1683               	bsf	3,5	;RP0=1, select bank3
   831  0028  1703               	bsf	3,6	;RP1=1, select bank3
   832  0029  120A  118A  27FE  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   833  002E  00A1               	movwf	__pdataBANK3& (0+127)
   834  002F  120A  118A  27FF  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   835  0034  00A2               	movwf	(__pdataBANK3+1)& (0+127)
   836                           
   837                           ; Initialize objects allocated to BANK1
   838  0035  1683               	bsf	3,5	;RP0=1, select bank1
   839  0036  1303               	bcf	3,6	;RP1=0, select bank1
   840  0037  160A  118A  21C0  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   841  003C  00EB               	movwf	__pdataBANK1& (0+127)
   842  003D  160A  118A  21C1  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   843  0042  00EC               	movwf	(__pdataBANK1+1)& (0+127)
   844  0043  160A  118A  21C2  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   845  0048  00ED               	movwf	(__pdataBANK1+2)& (0+127)
   846  0049  160A  118A  21C3  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   847  004E  00EE               	movwf	(__pdataBANK1+3)& (0+127)
   848  004F  160A  118A  21C4  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   849  0054  00EF               	movwf	(__pdataBANK1+4)& (0+127)
   850                           
   851                           ; Initialize objects allocated to BANK0
   852  0055  1283               	bcf	3,5	;RP0=0, select bank0
   853  0056  1303               	bcf	3,6	;RP1=0, select bank0
   854  0057  120A  158A  2001  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   855  005C  00ED               	movwf	__pdataBANK0& (0+127)
   856  005D  120A  158A  2002  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   857  0062  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   858  0063  120A  158A  2003   	fcall	__pidataBANK0+2	;fetch initializer
   859  0066  00EF               	movwf	(__pdataBANK0+2)& (0+127)
   860  0067                     end_of_initialization:	
   861                           ;End of C runtime variable initialization code
   862                           
   863  0067                     __end_of__initialization:	
   864  0067  0183               	clrf	3
   865  0068  120A  158A  2892   	ljmp	_main	;jump to C main() function
   866                           
   867                           	psect	dataBANK0
   868  006D                     __pdataBANK0:	
   869  006D                     _tf:	
   870  006D                     	ds	3
   871                           
   872                           	psect	bssBANK1
   873  00A0                     __pbssBANK1:	
   874  00A0                     _ativa_fan:	
   875  00A0                     	ds	3
   876  00A3                     _fitemp:	
   877  00A3                     	ds	3
   878  00A6                     _fop_rule1:	
   879  00A6                     	ds	3
   880  00A9                     _fop_rule2:	
   881  00A9                     	ds	3
   882  00AC                     _fop_rule3:	
   883  00AC                     	ds	3
   884  00AF                     _sum:	
   885  00AF                     	ds	3
   886  00B2                     _total_area:	
   887  00B2                     	ds	3
   888  00B5                     _x:	
   889  00B5                     	ds	3
   890  00B8                     _y:	
   891  00B8                     	ds	3
   892  00BB                     _ADCResult:	
   893  00BB                     	ds	2
   894  00BD                     _contagens_tm0:	
   895  00BD                     	ds	2
   896  00BF                     _deltaV:	
   897  00BF                     	ds	2
   898  00C1                     _pulsos:	
   899  00C1                     	ds	2
   900  00C3                     _rpm:	
   901  00C3                     	ds	2
   902  00C5                     _setpointUI:	
   903  00C5                     	ds	2
   904  00C7                     _status:	
   905  00C7                     	ds	2
   906                           
   907                           	psect	dataBANK1
   908  00EB                     __pdataBANK1:	
   909  00EB                     _setpoint:	
   910  00EB                     	ds	3
   911  00EE                     _pas_cooler:	
   912  00EE                     	ds	2
   913                           
   914                           	psect	bssBANK3
   915  0190                     __pbssBANK3:	
   916  0190                     _buffer:	
   917  0190                     	ds	7
   918  0197                     _display_rpm:	
   919  0197                     	ds	10
   920                           
   921                           	psect	dataBANK3
   922  01A1                     __pdataBANK3:	
   923  01A1                     _pwm:	
   924  01A1                     	ds	2
   925                           
   926                           	psect	clrtext
   927  11DB                     clear_ram0:	
   928                           ;	Called with FSR containing the base address, and
   929                           ;	W with the last address+1
   930                           
   931  11DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   932  11DC                     clrloop0:	
   933  11DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   934  11DD  0A84               	incf	4,f	;increment pointer
   935  11DE  0604               	xorwf	4,w	;XOR with final address
   936  11DF  1903               	btfsc	3,2	;have we reached the end yet?
   937  11E0  3400               	retlw	0	;all done for this memory range, return
   938  11E1  0604               	xorwf	4,w	;XOR again to restore value
   939  11E2  29DC               	goto	clrloop0	;do the next byte
   940                           
   941                           	psect	cstackBANK1
   942  00C9                     __pcstackBANK1:	
   943  00C9                     ?_PWM_DutyCycle2:	
   944  00C9                     ??_TIMER0_Set:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  00C9                     ??_TIMER0_Init:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  00C9                     ??_ADC_Init:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  00C9                     ??_PWM_Init:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  00C9                     ?_LCD_Cursor:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  00C9                     ?_PWM_DutyCycle1:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  00C9                     ??_isdigit:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  00C9                     ??_LCD_WriteCmd:	
   966                           ; 0 bytes @ 0x0
   967                           
   968  00C9                     ??_LCD_WriteData:	
   969                           ; 0 bytes @ 0x0
   970                           
   971  00C9                     ?___wmul:	
   972                           ; 0 bytes @ 0x0
   973                           
   974  00C9                     ?___lwdiv:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  00C9                     ?___aldiv:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  00C9                     TIMER0_Set@contagens:	
   981                           ; 4 bytes @ 0x0
   982                           
   983  00C9                     LCD_Cursor@Col:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  00C9                     _isdigit$1440:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  00C9                     PWM_DutyCycle1@valor:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  00C9                     PWM_DutyCycle2@valor:	
   993                           ; 2 bytes @ 0x0
   994                           
   995  00C9                     ___wmul@multiplier:	
   996                           ; 2 bytes @ 0x0
   997                           
   998  00C9                     ___lwdiv@divisor:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  00C9                     ___aldiv@divisor:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x0
  1006  00C9                     	ds	1
  1007  00CA                     ??_LCD_Cursor:	
  1008  00CA                     LCD_WriteCmd@Byte:	
  1009                           ; 0 bytes @ 0x1
  1010                           
  1011  00CA                     LCD_WriteData@Byte:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014  00CA                     isdigit@c:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x1
  1019  00CA                     	ds	1
  1020  00CB                     ??_PWM_DutyCycle2:	
  1021  00CB                     ??_LCD_Init:	
  1022                           ; 0 bytes @ 0x2
  1023                           
  1024  00CB                     ?_LCD_WriteString:	
  1025                           ; 0 bytes @ 0x2
  1026                           
  1027  00CB                     ??_PWM_DutyCycle1:	
  1028                           ; 0 bytes @ 0x2
  1029                           
  1030  00CB                     ??_LCD_Clear:	
  1031                           ; 0 bytes @ 0x2
  1032                           
  1033  00CB                     LCD_Cursor@Row:	
  1034                           ; 0 bytes @ 0x2
  1035                           
  1036  00CB                     LCD_WriteString@Str:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039  00CB                     ___wmul@multiplicand:	
  1040                           ; 2 bytes @ 0x2
  1041                           
  1042  00CB                     ___lwdiv@dividend:	
  1043                           ; 2 bytes @ 0x2
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x2
  1047  00CB                     	ds	2
  1048  00CD                     ??_LCD_WriteString:	
  1049  00CD                     ??___wmul:	
  1050                           ; 0 bytes @ 0x4
  1051                           
  1052  00CD                     ??___lwdiv:	
  1053                           ; 0 bytes @ 0x4
  1054                           
  1055  00CD                     ___wmul@product:	
  1056                           ; 0 bytes @ 0x4
  1057                           
  1058  00CD                     ___aldiv@dividend:	
  1059                           ; 2 bytes @ 0x4
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x4
  1063  00CD                     	ds	1
  1064  00CE                     ___lwdiv@quotient:	
  1065                           
  1066                           ; 2 bytes @ 0x5
  1067  00CE                     	ds	2
  1068  00D0                     ___lwdiv@counter:	
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071  00D0                     	ds	1
  1072  00D1                     ??___aldiv:	
  1073  00D1                     ?___lwmod:	
  1074                           ; 0 bytes @ 0x8
  1075                           
  1076  00D1                     ___lwmod@divisor:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x8
  1081  00D1                     	ds	1
  1082  00D2                     ___aldiv@counter:	
  1083                           
  1084                           ; 1 bytes @ 0x9
  1085  00D2                     	ds	1
  1086  00D3                     ___aldiv@sign:	
  1087  00D3                     ___lwmod@dividend:	
  1088                           ; 1 bytes @ 0xA
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0xA
  1092  00D3                     	ds	1
  1093  00D4                     ___aldiv@quotient:	
  1094                           
  1095                           ; 4 bytes @ 0xB
  1096  00D4                     	ds	1
  1097  00D5                     ??___lwmod:	
  1098                           
  1099                           ; 0 bytes @ 0xC
  1100  00D5                     	ds	1
  1101  00D6                     ___lwmod@counter:	
  1102                           
  1103                           ; 1 bytes @ 0xD
  1104  00D6                     	ds	1
  1105  00D7                     ?_sprintf:	
  1106  00D7                     sprintf@f:	
  1107                           ; 2 bytes @ 0xE
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0xE
  1111  00D7                     	ds	1
  1112  00D8                     ?_USART_Init:	
  1113  00D8                     USART_Init@BaudRate:	
  1114                           ; 0 bytes @ 0xF
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0xF
  1118  00D8                     	ds	2
  1119  00DA                     ??_sprintf:	
  1120                           
  1121                           ; 0 bytes @ 0x11
  1122  00DA                     	ds	2
  1123  00DC                     ??_USART_Init:	
  1124                           
  1125                           ; 0 bytes @ 0x13
  1126  00DC                     	ds	1
  1127  00DD                     sprintf@ap:	
  1128                           
  1129                           ; 1 bytes @ 0x14
  1130  00DD                     	ds	1
  1131  00DE                     sprintf@prec:	
  1132                           
  1133                           ; 1 bytes @ 0x15
  1134  00DE                     	ds	1
  1135  00DF                     sprintf@_val:	
  1136                           
  1137                           ; 4 bytes @ 0x16
  1138  00DF                     	ds	4
  1139  00E3                     sprintf@flag:	
  1140                           
  1141                           ; 1 bytes @ 0x1A
  1142  00E3                     	ds	1
  1143  00E4                     sprintf@width:	
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00E4                     	ds	2
  1147  00E6                     sprintf@sp:	
  1148                           
  1149                           ; 1 bytes @ 0x1D
  1150  00E6                     	ds	1
  1151  00E7                     sprintf@c:	
  1152                           
  1153                           ; 1 bytes @ 0x1E
  1154  00E7                     	ds	1
  1155  00E8                     ??_main:	
  1156                           
  1157                           ; 0 bytes @ 0x1F
  1158  00E8                     	ds	3
  1159                           
  1160                           	psect	cstackCOMMON
  1161  0070                     __pcstackCOMMON:	
  1162  0070                     ?_USART_WriteChar:	
  1163  0070                     ??_USART_WriteChar:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_USART_WriteString:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_TIMER0_Set:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_TIMER0_Init:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ?_ADC_Init:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_PWM_Init:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0070                     ?_LCD_Init:	
  1182                           ; 0 bytes @ 0x0
  1183                           
  1184  0070                     ?_LCD_Clear:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?_isdigit:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?_send:	
  1191                           ; 1 bit 
  1192                           
  1193  0070                     ?_Fuzzy:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_ISR:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_main:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?_LCD_WriteCmd:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_LCD_WriteData:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?i1_TIMER0_Set:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ??i1_TIMER0_Set:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?_USART_ReceiveChar:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ?i1___lwdiv:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?___ftpack:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0070                     USART_WriteChar@byte:	
  1224                           ; 3 bytes @ 0x0
  1225                           
  1226  0070                     i1TIMER0_Set@contagens:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     i1___lwdiv@divisor:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ___ftpack@arg:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235                           
  1236                           ; 3 bytes @ 0x0
  1237  0070                     	ds	1
  1238  0071                     ??_USART_WriteString:	
  1239                           
  1240                           ; 0 bytes @ 0x1
  1241  0071                     	ds	1
  1242  0072                     USART_WriteString@str:	
  1243  0072                     i1___lwdiv@dividend:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246                           
  1247                           ; 2 bytes @ 0x2
  1248  0072                     	ds	1
  1249  0073                     ??_USART_ReceiveChar:	
  1250  0073                     ___ftpack@exp:	
  1251                           ; 0 bytes @ 0x3
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0x3
  1255  0073                     	ds	1
  1256  0074                     ??i1___lwdiv:	
  1257  0074                     USART_ReceiveChar@byte:	
  1258                           ; 0 bytes @ 0x4
  1259                           
  1260  0074                     ___ftpack@sign:	
  1261                           ; 1 bytes @ 0x4
  1262                           
  1263                           
  1264                           ; 1 bytes @ 0x4
  1265  0074                     	ds	1
  1266  0075                     ??___ftpack:	
  1267  0075                     i1___lwdiv@quotient:	
  1268                           ; 0 bytes @ 0x5
  1269                           
  1270                           
  1271                           ; 2 bytes @ 0x5
  1272  0075                     	ds	2
  1273  0077                     i1___lwdiv@counter:	
  1274                           
  1275                           ; 1 bytes @ 0x7
  1276  0077                     	ds	1
  1277  0078                     ?i1___wmul:	
  1278  0078                     ?___ftmul:	
  1279                           ; 2 bytes @ 0x8
  1280                           
  1281  0078                     ?___lwtoft:	
  1282                           ; 3 bytes @ 0x8
  1283                           
  1284  0078                     ___lwtoft@c:	
  1285                           ; 3 bytes @ 0x8
  1286                           
  1287  0078                     i1___wmul@multiplier:	
  1288                           ; 2 bytes @ 0x8
  1289                           
  1290  0078                     ___ftmul@f1:	
  1291                           ; 2 bytes @ 0x8
  1292                           
  1293                           
  1294                           ; 3 bytes @ 0x8
  1295  0078                     	ds	2
  1296  007A                     i1___wmul@multiplicand:	
  1297                           
  1298                           ; 2 bytes @ 0xA
  1299  007A                     	ds	1
  1300  007B                     ??___lwtoft:	
  1301  007B                     ___ftmul@f2:	
  1302                           ; 0 bytes @ 0xB
  1303                           
  1304                           
  1305                           ; 3 bytes @ 0xB
  1306  007B                     	ds	1
  1307  007C                     ??_trimf:	
  1308  007C                     ??_trapmf:	
  1309                           ; 0 bytes @ 0xC
  1310                           
  1311  007C                     ??_max_val:	
  1312                           ; 0 bytes @ 0xC
  1313                           
  1314  007C                     ??___ftneg:	
  1315                           ; 0 bytes @ 0xC
  1316                           
  1317  007C                     ??i1_PWM_DutyCycle2:	
  1318                           ; 0 bytes @ 0xC
  1319                           
  1320  007C                     ??i1___wmul:	
  1321                           ; 0 bytes @ 0xC
  1322                           
  1323  007C                     i1___wmul@product:	
  1324                           ; 0 bytes @ 0xC
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0xC
  1328  007C                     	ds	2
  1329  007E                     ??_Fuzzy:	
  1330                           
  1331                           	psect	cstackBANK0
  1332  0020                     __pcstackBANK0:	
  1333                           ; 0 bytes @ 0xE
  1334                           
  1335  0020                     ??_send:	
  1336  0020                     ??___ftmul:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0020                     ?___ftneg:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0020                     ___ftneg@f1:	
  1343                           ; 3 bytes @ 0x0
  1344                           
  1345                           
  1346                           ; 3 bytes @ 0x0
  1347  0020                     	ds	1
  1348  0021                     send@checksum:	
  1349                           
  1350                           ; 1 bytes @ 0x1
  1351  0021                     	ds	1
  1352  0022                     send@velocidade:	
  1353                           
  1354                           ; 2 bytes @ 0x2
  1355  0022                     	ds	1
  1356  0023                     ?___ftadd:	
  1357  0023                     ___ftadd@f1:	
  1358                           ; 3 bytes @ 0x3
  1359                           
  1360                           
  1361                           ; 3 bytes @ 0x3
  1362  0023                     	ds	1
  1363  0024                     send@index:	
  1364  0024                     ___ftmul@exp:	
  1365                           ; 1 bytes @ 0x4
  1366                           
  1367                           
  1368                           ; 1 bytes @ 0x4
  1369  0024                     	ds	1
  1370  0025                     ___ftmul@f3_as_product:	
  1371                           
  1372                           ; 3 bytes @ 0x5
  1373  0025                     	ds	1
  1374  0026                     ___ftadd@f2:	
  1375                           
  1376                           ; 3 bytes @ 0x6
  1377  0026                     	ds	2
  1378  0028                     ___ftmul@cntr:	
  1379                           
  1380                           ; 1 bytes @ 0x8
  1381  0028                     	ds	1
  1382  0029                     ??___ftadd:	
  1383  0029                     ___ftmul@sign:	
  1384                           ; 0 bytes @ 0x9
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x9
  1388  0029                     	ds	4
  1389  002D                     ___ftadd@sign:	
  1390                           
  1391                           ; 1 bytes @ 0xD
  1392  002D                     	ds	1
  1393  002E                     ___ftadd@exp2:	
  1394                           
  1395                           ; 1 bytes @ 0xE
  1396  002E                     	ds	1
  1397  002F                     ___ftadd@exp1:	
  1398                           
  1399                           ; 1 bytes @ 0xF
  1400  002F                     	ds	1
  1401  0030                     ?___ftge:	
  1402  0030                     ?___ftdiv:	
  1403                           ; 1 bit 
  1404                           
  1405  0030                     ?___fttol:	
  1406                           ; 3 bytes @ 0x10
  1407                           
  1408  0030                     ___ftdiv@f2:	
  1409                           ; 4 bytes @ 0x10
  1410                           
  1411  0030                     ___ftge@ff1:	
  1412                           ; 3 bytes @ 0x10
  1413                           
  1414  0030                     ___fttol@f1:	
  1415                           ; 3 bytes @ 0x10
  1416                           
  1417                           
  1418                           ; 3 bytes @ 0x10
  1419  0030                     	ds	3
  1420  0033                     ___ftdiv@f1:	
  1421  0033                     ___ftge@ff2:	
  1422                           ; 3 bytes @ 0x13
  1423                           
  1424                           
  1425                           ; 3 bytes @ 0x13
  1426  0033                     	ds	1
  1427  0034                     ??___fttol:	
  1428                           
  1429                           ; 0 bytes @ 0x14
  1430  0034                     	ds	2
  1431  0036                     ??___ftdiv:	
  1432  0036                     ??___ftge:	
  1433                           ; 0 bytes @ 0x16
  1434                           
  1435                           
  1436                           ; 0 bytes @ 0x16
  1437  0036                     	ds	2
  1438  0038                     ___fttol@sign1:	
  1439                           
  1440                           ; 1 bytes @ 0x18
  1441  0038                     	ds	1
  1442  0039                     ___fttol@lval:	
  1443                           
  1444                           ; 4 bytes @ 0x19
  1445  0039                     	ds	1
  1446  003A                     ___ftdiv@cntr:	
  1447                           
  1448                           ; 1 bytes @ 0x1A
  1449  003A                     	ds	1
  1450  003B                     ___ftdiv@f3:	
  1451                           
  1452                           ; 3 bytes @ 0x1B
  1453  003B                     	ds	1
  1454  003C                     ?_max_val:	
  1455  003C                     max_val@a:	
  1456                           ; 3 bytes @ 0x1C
  1457                           
  1458                           
  1459                           ; 3 bytes @ 0x1C
  1460  003C                     	ds	1
  1461  003D                     ___fttol@exp1:	
  1462                           
  1463                           ; 1 bytes @ 0x1D
  1464  003D                     	ds	1
  1465  003E                     ?i1_PWM_DutyCycle2:	
  1466  003E                     ___ftdiv@exp:	
  1467                           ; 0 bytes @ 0x1E
  1468                           
  1469  003E                     i1PWM_DutyCycle2@valor:	
  1470                           ; 1 bytes @ 0x1E
  1471                           
  1472                           
  1473                           ; 2 bytes @ 0x1E
  1474  003E                     	ds	1
  1475  003F                     ___ftdiv@sign:	
  1476  003F                     max_val@b:	
  1477                           ; 1 bytes @ 0x1F
  1478                           
  1479                           
  1480                           ; 3 bytes @ 0x1F
  1481  003F                     	ds	1
  1482  0040                     ?_trimf:	
  1483  0040                     ?_trapmf:	
  1484                           ; 3 bytes @ 0x20
  1485                           
  1486  0040                     trimf@x:	
  1487                           ; 3 bytes @ 0x20
  1488                           
  1489  0040                     trapmf@x:	
  1490                           ; 3 bytes @ 0x20
  1491                           
  1492                           
  1493                           ; 3 bytes @ 0x20
  1494  0040                     	ds	3
  1495  0043                     trimf@a:	
  1496  0043                     trapmf@a:	
  1497                           ; 3 bytes @ 0x23
  1498                           
  1499                           
  1500                           ; 3 bytes @ 0x23
  1501  0043                     	ds	3
  1502  0046                     trimf@b:	
  1503  0046                     trapmf@b:	
  1504                           ; 3 bytes @ 0x26
  1505                           
  1506                           
  1507                           ; 3 bytes @ 0x26
  1508  0046                     	ds	3
  1509  0049                     trimf@c:	
  1510  0049                     trapmf@c:	
  1511                           ; 3 bytes @ 0x29
  1512                           
  1513                           
  1514                           ; 3 bytes @ 0x29
  1515  0049                     	ds	3
  1516  004C                     trimf@ua:	
  1517  004C                     trapmf@d:	
  1518                           ; 3 bytes @ 0x2C
  1519                           
  1520                           
  1521                           ; 3 bytes @ 0x2C
  1522  004C                     	ds	3
  1523  004F                     trapmf@ua:	
  1524                           
  1525                           ; 3 bytes @ 0x2F
  1526  004F                     	ds	3
  1527  0052                     Fuzzy@freio:	
  1528                           
  1529                           ; 2 bytes @ 0x32
  1530  0052                     	ds	2
  1531  0054                     Fuzzy@tip:	
  1532                           
  1533                           ; 3 bytes @ 0x34
  1534  0054                     	ds	3
  1535  0057                     Fuzzy@a:	
  1536                           
  1537                           ; 2 bytes @ 0x37
  1538  0057                     	ds	2
  1539  0059                     Fuzzy@a_247:	
  1540                           
  1541                           ; 2 bytes @ 0x39
  1542  0059                     	ds	2
  1543  005B                     Fuzzy@a_248:	
  1544                           
  1545                           ; 2 bytes @ 0x3B
  1546  005B                     	ds	2
  1547  005D                     Fuzzy@mantem:	
  1548                           
  1549                           ; 3 bytes @ 0x3D
  1550  005D                     	ds	3
  1551  0060                     Fuzzy@reduz:	
  1552                           
  1553                           ; 3 bytes @ 0x40
  1554  0060                     	ds	3
  1555  0063                     Fuzzy@aumenta:	
  1556                           
  1557                           ; 3 bytes @ 0x43
  1558  0063                     	ds	3
  1559  0066                     Fuzzy@deltaRpm:	
  1560                           
  1561                           ; 3 bytes @ 0x46
  1562  0066                     	ds	3
  1563  0069                     ??_ISR:	
  1564                           
  1565                           ; 0 bytes @ 0x49
  1566  0069                     	ds	4
  1567                           
  1568                           	psect	maintext
  1569  0892                     __pmaintext:	
  1570 ;;
  1571 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1572 ;;
  1573 ;; *************** function _main *****************
  1574 ;; Defined at:
  1575 ;;		line 500 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 17F/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       0       3       0       0
  1592 ;;      Totals:         0       0       3       0       0
  1593 ;;Total ram usage:        3 bytes
  1594 ;; Hardware stack levels required when called:    7
  1595 ;; This function calls:
  1596 ;;		_ADC_Init
  1597 ;;		_LCD_Clear
  1598 ;;		_LCD_Cursor
  1599 ;;		_LCD_Init
  1600 ;;		_LCD_WriteString
  1601 ;;		_PWM_DutyCycle1
  1602 ;;		_PWM_DutyCycle2
  1603 ;;		_PWM_Init
  1604 ;;		_TIMER0_Init
  1605 ;;		_TIMER0_Set
  1606 ;;		_USART_Init
  1607 ;;		_sprintf
  1608 ;; This function is called by:
  1609 ;;		Startup code after reset
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _main
  1615  0892                     _main:	
  1616                           
  1617                           ;main.c: 502: TRISA = 0b00000001;
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1621  0892  3001               	movlw	1
  1622  0893  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0894  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0895  0085               	movwf	5	;volatile
  1625                           
  1626                           ;main.c: 503: PORTA = 0b00000001;
  1627  0896  3001               	movlw	1
  1628  0897  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0898  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0899  0085               	movwf	5	;volatile
  1631                           
  1632                           ;main.c: 504: TRISB = 0b00000000;
  1633  089A  1683               	bsf	3,5	;RP0=1, select bank1
  1634  089B  1303               	bcf	3,6	;RP1=0, select bank1
  1635  089C  0186               	clrf	6	;volatile
  1636                           
  1637                           ;main.c: 505: PORTB = 0b00000000;
  1638  089D  1283               	bcf	3,5	;RP0=0, select bank0
  1639  089E  1303               	bcf	3,6	;RP1=0, select bank0
  1640  089F  0186               	clrf	6	;volatile
  1641                           
  1642                           ;main.c: 506: TRISC = 0b10000001;
  1643  08A0  3081               	movlw	129
  1644  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1645  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1646  08A3  0087               	movwf	7	;volatile
  1647                           
  1648                           ;main.c: 507: PORTC = 0b11000000;
  1649  08A4  30C0               	movlw	192
  1650  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  1651  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  1652  08A7  0087               	movwf	7	;volatile
  1653                           
  1654                           ;main.c: 508: TRISD = 0b00000000;
  1655  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1656  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1657  08AA  0188               	clrf	8	;volatile
  1658                           
  1659                           ;main.c: 509: PORTD = 0b00000000;
  1660  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1661  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1662  08AD  0188               	clrf	8	;volatile
  1663                           
  1664                           ;main.c: 510: TRISE = 0b00000000;
  1665  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1666  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1667  08B0  0189               	clrf	9	;volatile
  1668                           
  1669                           ;main.c: 511: PORTE = 0b00000000;
  1670  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1671  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1672  08B3  0189               	clrf	9	;volatile
  1673                           
  1674                           ;main.c: 514: T1CON = 0x03;
  1675  08B4  3003               	movlw	3
  1676  08B5  0090               	movwf	16	;volatile
  1677                           
  1678                           ;main.c: 515: TMR1L = 0x00;
  1679  08B6  018E               	clrf	14	;volatile
  1680                           
  1681                           ;main.c: 516: TMR1H = 0x00;
  1682  08B7  018F               	clrf	15	;volatile
  1683                           
  1684                           ;main.c: 519: USART_Init(115200);
  1685  08B8  3000               	movlw	0
  1686  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  1687  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  1688  08BB  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1689  08BC  3001               	movlw	1
  1690  08BD  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1691  08BE  30C2               	movlw	194
  1692  08BF  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1693  08C0  3000               	movlw	0
  1694  08C1  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1695  08C2  160A  118A  248D  120A  158A  	fcall	_USART_Init
  1696                           
  1697                           ;main.c: 520: TIMER0_Init();
  1698  08C7  160A  118A  21ED  120A  158A  	fcall	_TIMER0_Init
  1699                           
  1700                           ;main.c: 521: ADC_Init();
  1701  08CC  160A  118A  2208  120A  158A  	fcall	_ADC_Init
  1702                           
  1703                           ;main.c: 522: PWM_Init();
  1704  08D1  160A  118A  2336  120A  158A  	fcall	_PWM_Init
  1705                           
  1706                           ;main.c: 523: LCD_Init();
  1707  08D6  160A  118A  259D  120A  158A  	fcall	_LCD_Init
  1708                           
  1709                           ;main.c: 526: INTCONbits.PEIE = 1;
  1710  08DB  170B               	bsf	11,6	;volatile
  1711                           
  1712                           ;main.c: 527: INTCONbits.GIE = 1;
  1713  08DC  178B               	bsf	11,7	;volatile
  1714                           
  1715                           ;main.c: 534: LCD_Init();
  1716  08DD  160A  118A  259D  120A  158A  	fcall	_LCD_Init
  1717                           
  1718                           ;main.c: 535: LCD_Cursor(0,0);
  1719  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  1720  08E3  1303               	bcf	3,6	;RP1=0, select bank1
  1721  08E4  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1722  08E5  3000               	movlw	0
  1723  08E6  160A  118A  22B1  120A  158A  	fcall	_LCD_Cursor
  1724                           
  1725                           ;main.c: 536: LCD_WriteString("Inicializando...");
  1726  08EB  3033               	movlw	low (STR_2-__stringbase)
  1727  08EC  1683               	bsf	3,5	;RP0=1, select bank1
  1728  08ED  1303               	bcf	3,6	;RP1=0, select bank1
  1729  08EE  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1730  08EF  3080               	movlw	128
  1731  08F0  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1732  08F1  160A  118A  23A8  120A  158A  	fcall	_LCD_WriteString
  1733                           
  1734                           ;main.c: 539: PWM_DutyCycle1(0);
  1735  08F6  3000               	movlw	0
  1736  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  1737  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  1738  08F9  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1739  08FA  3000               	movlw	0
  1740  08FB  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1741  08FC  160A  118A  22D1  120A  158A  	fcall	_PWM_DutyCycle1
  1742                           
  1743                           ;main.c: 540: PWM_DutyCycle2(0);
  1744  0901  3000               	movlw	0
  1745  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0904  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1748  0905  3000               	movlw	0
  1749  0906  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1750  0907  160A  118A  22F2  120A  158A  	fcall	_PWM_DutyCycle2
  1751                           
  1752                           ;main.c: 543: TIMER0_Set(238);
  1753  090C  30EE               	movlw	238
  1754  090D  160A  118A  21D3  120A  158A  	fcall	_TIMER0_Set
  1755                           
  1756                           ;main.c: 546: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1757  0912  3018               	movlw	24
  1758  0913  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0914  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0915  00EA               	movwf	(??_main^(0+128)+2)
  1761  0916  3061               	movlw	97
  1762  0917  00E9               	movwf	(??_main^(0+128)+1)
  1763  0918  306E               	movlw	110
  1764  0919  00E8               	movwf	??_main^(0+128)
  1765  091A                     u4107:	
  1766  091A  0BE8               	decfsz	??_main^(0+128),f
  1767  091B  291A               	goto	u4107
  1768  091C  0BE9               	decfsz	(??_main^(0+128)+1),f
  1769  091D  291A               	goto	u4107
  1770  091E  0BEA               	decfsz	(??_main^(0+128)+2),f
  1771  091F  291A               	goto	u4107
  1772  0920  0000               	nop
  1773  0921                     l199:	
  1774                           ;main.c: 549: while(1)
  1775                           
  1776                           
  1777                           ;main.c: 550: {
  1778                           ;main.c: 553: sprintf(display_rpm,"%04d", rpm);
  1779  0921  3058               	movlw	(STR_3-__stringbase)& (0+255)
  1780  0922  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0923  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0924  00E8               	movwf	??_main^(0+128)
  1783  0925  0868               	movf	??_main^(0+128),w
  1784  0926  00D7               	movwf	sprintf@f^(0+128)
  1785  0927  0844               	movf	(_rpm+1)^(0+128),w
  1786  0928  01D9               	clrf	((?_sprintf+1)^(0+128)+1)
  1787  0929  07D9               	addwf	((?_sprintf+1)^(0+128)+1),f
  1788  092A  0843               	movf	_rpm^(0+128),w
  1789  092B  01D8               	clrf	(?_sprintf^(0+128)+1)
  1790  092C  07D8               	addwf	(?_sprintf^(0+128)+1),f
  1791  092D  3097               	movlw	_display_rpm& (0+255)
  1792  092E  120A  158A  2649  120A  158A  	fcall	_sprintf
  1793                           
  1794                           ;main.c: 556: LCD_Clear();
  1795  0933  160A  118A  237F  120A  158A  	fcall	_LCD_Clear
  1796                           
  1797                           ;main.c: 557: LCD_Cursor(0,0);
  1798  0938  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0939  1303               	bcf	3,6	;RP1=0, select bank1
  1800  093A  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1801  093B  3000               	movlw	0
  1802  093C  160A  118A  22B1  120A  158A  	fcall	_LCD_Cursor
  1803                           
  1804                           ;main.c: 558: LCD_WriteString("kmH: ");
  1805  0941  3052               	movlw	low (STR_4-__stringbase)
  1806  0942  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0943  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0944  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1809  0945  3080               	movlw	128
  1810  0946  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1811  0947  160A  118A  23A8  120A  158A  	fcall	_LCD_WriteString
  1812                           
  1813                           ;main.c: 559: LCD_Cursor(0,6);
  1814  094C  3006               	movlw	6
  1815  094D  1683               	bsf	3,5	;RP0=1, select bank1
  1816  094E  1303               	bcf	3,6	;RP1=0, select bank1
  1817  094F  00E8               	movwf	??_main^(0+128)
  1818  0950  0868               	movf	??_main^(0+128),w
  1819  0951  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1820  0952  3000               	movlw	0
  1821  0953  160A  118A  22B1  120A  158A  	fcall	_LCD_Cursor
  1822                           
  1823                           ;main.c: 560: LCD_WriteString(display_rpm);
  1824  0958  3097               	movlw	_display_rpm& (0+255)
  1825  0959  1683               	bsf	3,5	;RP0=1, select bank1
  1826  095A  1303               	bcf	3,6	;RP1=0, select bank1
  1827  095B  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1828  095C  3001               	movlw	1
  1829  095D  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1830  095E  160A  118A  23A8  120A  158A  	fcall	_LCD_WriteString
  1831                           
  1832                           ;main.c: 561: LCD_Cursor(1,0);
  1833  0963  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0964  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0965  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1836  0966  3001               	movlw	1
  1837  0967  160A  118A  22B1  120A  158A  	fcall	_LCD_Cursor
  1838                           
  1839                           ;main.c: 566: _delay((unsigned long)((200)*(18432000/4000.0)));
  1840  096C  3005               	movlw	5
  1841  096D  1683               	bsf	3,5	;RP0=1, select bank1
  1842  096E  1303               	bcf	3,6	;RP1=0, select bank1
  1843  096F  00EA               	movwf	(??_main^(0+128)+2)
  1844  0970  30AD               	movlw	173
  1845  0971  00E9               	movwf	(??_main^(0+128)+1)
  1846  0972  30E0               	movlw	224
  1847  0973  00E8               	movwf	??_main^(0+128)
  1848  0974                     u4117:	
  1849  0974  0BE8               	decfsz	??_main^(0+128),f
  1850  0975  2974               	goto	u4117
  1851  0976  0BE9               	decfsz	(??_main^(0+128)+1),f
  1852  0977  2974               	goto	u4117
  1853  0978  0BEA               	decfsz	(??_main^(0+128)+2),f
  1854  0979  2974               	goto	u4117
  1855  097A  2921               	goto	l199
  1856  097B                     __end_of_main:	
  1857                           
  1858                           	psect	text1
  1859  0E49                     __ptext1:	
  1860 ;; *************** function _sprintf *****************
  1861 ;; Defined at:
  1862 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  sp              1    wreg     PTR unsigned char 
  1865 ;;		 -> display_rpm(10), 
  1866 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1867 ;;		 -> STR_3(5), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1870 ;;		 -> display_rpm(10), 
  1871 ;;  _val            4   22[BANK1 ] struct .
  1872 ;;  width           2   27[BANK1 ] int 
  1873 ;;  c               1   30[BANK1 ] char 
  1874 ;;  flag            1   26[BANK1 ] unsigned char 
  1875 ;;  prec            1   21[BANK1 ] char 
  1876 ;;  ap              1   20[BANK1 ] PTR void [1]
  1877 ;;		 -> ?_sprintf(2), 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   14[BANK1 ] int 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       0       3       0       0
  1888 ;;      Locals:         0       0      11       0       0
  1889 ;;      Temps:          0       0       3       0       0
  1890 ;;      Totals:         0       0      17       0       0
  1891 ;;Total ram usage:       17 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    6
  1894 ;; This function calls:
  1895 ;;		___lwdiv
  1896 ;;		___lwmod
  1897 ;;		___wmul
  1898 ;;		_isdigit
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _sprintf
  1906  0E49                     _sprintf:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1910                           ;sprintf@sp stored from wreg
  1911  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  1912  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  1913  0E4B  00E6               	movwf	sprintf@sp^(0+128)
  1914                           
  1915                           ;doprnt.c: 494: va_list ap;
  1916                           ;doprnt.c: 499: signed char c;
  1917                           ;doprnt.c: 501: int width;
  1918                           ;doprnt.c: 506: signed char prec;
  1919                           ;doprnt.c: 508: unsigned char flag;
  1920                           ;doprnt.c: 527: union {
  1921                           ;doprnt.c: 528: unsigned int _val;
  1922                           ;doprnt.c: 529: struct {
  1923                           ;doprnt.c: 530: const char * _cp;
  1924                           ;doprnt.c: 531: unsigned _len;
  1925                           ;doprnt.c: 532: } _str;
  1926                           ;doprnt.c: 533: } _val;
  1927                           ;doprnt.c: 542: *ap = __va_start();
  1928  0E4C  30D8               	movlw	(?_sprintf+1)& (0+255)
  1929  0E4D  00DA               	movwf	??_sprintf^(0+128)
  1930  0E4E  085A               	movf	??_sprintf^(0+128),w
  1931  0E4F  00DD               	movwf	sprintf@ap^(0+128)
  1932  0E50                     l3151:	
  1933                           ;doprnt.c: 545: while(c = *f++) {
  1934                           
  1935  0E50  3001               	movlw	1
  1936  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  1937  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  1938  0E53  07D7               	addwf	sprintf@f^(0+128),f
  1939  0E54  30FF               	movlw	-1
  1940  0E55  0757               	addwf	sprintf@f^(0+128),w
  1941  0E56  0084               	movwf	4
  1942  0E57  160A  118A  200A  120A  158A  	fcall	stringdir
  1943  0E5C  00DA               	movwf	??_sprintf^(0+128)
  1944  0E5D  085A               	movf	??_sprintf^(0+128),w
  1945  0E5E  00E7               	movwf	sprintf@c^(0+128)
  1946  0E5F  08E7               	movf	sprintf@c^(0+128),f
  1947  0E60  1903               	btfsc	3,2
  1948  0E61  2FF9               	goto	l3153
  1949                           
  1950                           ;doprnt.c: 547: if(c != '%')
  1951  0E62  0867               	movf	sprintf@c^(0+128),w
  1952  0E63  3A25               	xorlw	37
  1953  0E64  1903               	skipnz
  1954  0E65  2E72               	goto	l3055
  1955                           
  1956                           ;doprnt.c: 549: {
  1957                           ;doprnt.c: 550: ((*sp++ = (c)));
  1958  0E66  0867               	movf	sprintf@c^(0+128),w
  1959  0E67  00DA               	movwf	??_sprintf^(0+128)
  1960  0E68  0866               	movf	sprintf@sp^(0+128),w
  1961  0E69  0084               	movwf	4
  1962  0E6A  085A               	movf	??_sprintf^(0+128),w
  1963  0E6B  1783               	bsf	3,7	;select IRP bank2
  1964  0E6C  0080               	movwf	0
  1965  0E6D  3001               	movlw	1
  1966  0E6E  00DA               	movwf	??_sprintf^(0+128)
  1967  0E6F  085A               	movf	??_sprintf^(0+128),w
  1968  0E70  07E6               	addwf	sprintf@sp^(0+128),f
  1969                           
  1970                           ;doprnt.c: 551: continue;
  1971  0E71  2E50               	goto	l3151
  1972  0E72                     l3055:	
  1973                           
  1974                           ;doprnt.c: 552: }
  1975                           ;doprnt.c: 555: width = 0;
  1976  0E72  01E4               	clrf	sprintf@width^(0+128)
  1977  0E73  01E5               	clrf	(sprintf@width+1)^(0+128)
  1978                           
  1979                           ;doprnt.c: 557: flag = 0;
  1980  0E74  01E3               	clrf	sprintf@flag^(0+128)
  1981                           
  1982                           ;doprnt.c: 560: switch(*f) {
  1983                           
  1984                           ;doprnt.c: 559: for(;;) {
  1985  0E75  2E7B               	goto	l3061
  1986  0E76                     l476:	
  1987                           ;doprnt.c: 588: case '0':
  1988                           
  1989                           
  1990                           ;doprnt.c: 589: flag |= 0x04;
  1991  0E76  1563               	bsf	sprintf@flag^(0+128),2
  1992                           
  1993                           ;doprnt.c: 590: f++;
  1994  0E77  3001               	movlw	1
  1995  0E78  00DA               	movwf	??_sprintf^(0+128)
  1996  0E79  085A               	movf	??_sprintf^(0+128),w
  1997  0E7A  07D7               	addwf	sprintf@f^(0+128),f
  1998  0E7B                     l3061:	
  1999                           ;doprnt.c: 593: }
  2000                           
  2001                           ;doprnt.c: 591: continue;
  2002                           
  2003  0E7B  0857               	movf	sprintf@f^(0+128),w
  2004  0E7C  0084               	movwf	4
  2005  0E7D  160A  118A  200A  120A  158A  	fcall	stringdir
  2006                           
  2007                           ; Switch size 1, requested type "space"
  2008                           ; Number of cases is 1, Range of values is 48 to 48
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte            4     3 (average)
  2012                           ; direct_byte           14    11 (fixed)
  2013                           ; jumptable            263     9 (fixed)
  2014                           ;	Chosen strategy is simple_byte
  2015  0E82  3A30               	xorlw	48	; case 48
  2016  0E83  1903               	skipnz
  2017  0E84  2E76               	goto	l476
  2018  0E85  2E86               	goto	l3063
  2019  0E86                     l3063:	
  2020                           ;doprnt.c: 595: }
  2021                           
  2022                           ;doprnt.c: 594: break;
  2023                           
  2024                           
  2025                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2026  0E86  0857               	movf	sprintf@f^(0+128),w
  2027  0E87  0084               	movwf	4
  2028  0E88  160A  118A  200A  120A  158A  	fcall	stringdir
  2029  0E8D  160A  118A  21F8  120A  158A  	fcall	_isdigit
  2030  0E92  1C03               	btfss	3,0
  2031  0E93  2ED6               	goto	l3077
  2032                           
  2033                           ;doprnt.c: 607: width = 0;
  2034  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0E96  01E4               	clrf	sprintf@width^(0+128)
  2037  0E97  01E5               	clrf	(sprintf@width+1)^(0+128)
  2038  0E98                     l3067:	
  2039                           ;doprnt.c: 608: do {
  2040                           
  2041                           
  2042                           ;doprnt.c: 609: width *= 10;
  2043  0E98  300A               	movlw	10
  2044  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2046  0E9B  00C9               	movwf	___wmul@multiplier^(0+128)
  2047  0E9C  3000               	movlw	0
  2048  0E9D  00CA               	movwf	(___wmul@multiplier^(0+128)+1)
  2049  0E9E  0865               	movf	(sprintf@width+1)^(0+128),w
  2050  0E9F  01CC               	clrf	(___wmul@multiplicand+1)^(0+128)
  2051  0EA0  07CC               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2052  0EA1  0864               	movf	sprintf@width^(0+128),w
  2053  0EA2  01CB               	clrf	___wmul@multiplicand^(0+128)
  2054  0EA3  07CB               	addwf	___wmul@multiplicand^(0+128),f
  2055  0EA4  160A  118A  235A  120A  158A  	fcall	___wmul
  2056  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0EAB  084A               	movf	(?___wmul+1)^(0+128),w
  2059  0EAC  01E5               	clrf	(sprintf@width+1)^(0+128)
  2060  0EAD  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2061  0EAE  0849               	movf	?___wmul^(0+128),w
  2062  0EAF  01E4               	clrf	sprintf@width^(0+128)
  2063  0EB0  07E4               	addwf	sprintf@width^(0+128),f
  2064                           
  2065                           ;doprnt.c: 610: width += *f++ - '0';
  2066  0EB1  0857               	movf	sprintf@f^(0+128),w
  2067  0EB2  0084               	movwf	4
  2068  0EB3  160A  118A  200A  120A  158A  	fcall	stringdir
  2069  0EB8  3ED0               	addlw	208
  2070  0EB9  00DA               	movwf	??_sprintf^(0+128)
  2071  0EBA  30FF               	movlw	255
  2072  0EBB  1803               	skipnc
  2073  0EBC  3000               	movlw	0
  2074  0EBD  00DB               	movwf	(??_sprintf^(0+128)+1)
  2075  0EBE  085A               	movf	??_sprintf^(0+128),w
  2076  0EBF  07E4               	addwf	sprintf@width^(0+128),f
  2077  0EC0  1803               	skipnc
  2078  0EC1  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2079  0EC2  085B               	movf	(??_sprintf+1)^(0+128),w
  2080  0EC3  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2081  0EC4  3001               	movlw	1
  2082  0EC5  00DA               	movwf	??_sprintf^(0+128)
  2083  0EC6  085A               	movf	??_sprintf^(0+128),w
  2084  0EC7  07D7               	addwf	sprintf@f^(0+128),f
  2085                           
  2086                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2087  0EC8  0857               	movf	sprintf@f^(0+128),w
  2088  0EC9  0084               	movwf	4
  2089  0ECA  160A  118A  200A  120A  158A  	fcall	stringdir
  2090  0ECF  160A  118A  21F8  120A  158A  	fcall	_isdigit
  2091  0ED4  1803               	btfsc	3,0
  2092  0ED5  2E98               	goto	l3067
  2093  0ED6                     l3077:	
  2094                           ;doprnt.c: 831: }
  2095                           
  2096                           ;doprnt.c: 822: continue;
  2097                           
  2098                           ;doprnt.c: 811: default:
  2099                           
  2100                           ;doprnt.c: 707: case 'i':
  2101                           ;doprnt.c: 708: break;
  2102                           
  2103                           ;doprnt.c: 706: case 'd':
  2104                           
  2105                           ;doprnt.c: 647: goto alldone;
  2106                           
  2107                           ;doprnt.c: 646: case 0:
  2108                           
  2109                           ;doprnt.c: 617: }
  2110                           ;doprnt.c: 644: switch(c = *f++) {
  2111                           
  2112  0ED6  3001               	movlw	1
  2113  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0ED9  07D7               	addwf	sprintf@f^(0+128),f
  2116  0EDA  30FF               	movlw	-1
  2117  0EDB  0757               	addwf	sprintf@f^(0+128),w
  2118  0EDC  0084               	movwf	4
  2119  0EDD  160A  118A  200A  120A  158A  	fcall	stringdir
  2120  0EE2  00E7               	movwf	sprintf@c^(0+128)
  2121                           
  2122                           ; Switch size 1, requested type "space"
  2123                           ; Number of cases is 3, Range of values is 0 to 105
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte           10     6 (average)
  2127                           ; jumptable            260     6 (fixed)
  2128                           ;	Chosen strategy is simple_byte
  2129  0EE3  3A00               	xorlw	0	; case 0
  2130  0EE4  1903               	skipnz
  2131  0EE5  2FF9               	goto	l3153
  2132  0EE6  3A64               	xorlw	100	; case 100
  2133  0EE7  1903               	skipnz
  2134  0EE8  2EED               	goto	l3079
  2135  0EE9  3A0D               	xorlw	13	; case 105
  2136  0EEA  1903               	skipnz
  2137  0EEB  2EED               	goto	l3079
  2138  0EEC  2E50               	goto	l3151
  2139  0EED                     l3079:	
  2140                           
  2141                           ;doprnt.c: 1262: {
  2142                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2143  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2145  0EEF  085D               	movf	sprintf@ap^(0+128),w
  2146  0EF0  0084               	movwf	4
  2147  0EF1  1383               	bcf	3,7	;select IRP bank0
  2148  0EF2  0800               	movf	0,w
  2149  0EF3  00DF               	movwf	sprintf@_val^(0+128)
  2150  0EF4  0A84               	incf	4,f
  2151  0EF5  0800               	movf	0,w
  2152  0EF6  00E0               	movwf	(sprintf@_val+1)^(0+128)
  2153  0EF7  3002               	movlw	2
  2154  0EF8  00DA               	movwf	??_sprintf^(0+128)
  2155  0EF9  085A               	movf	??_sprintf^(0+128),w
  2156  0EFA  07DD               	addwf	sprintf@ap^(0+128),f
  2157                           
  2158                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2159  0EFB  1FE0               	btfss	(sprintf@_val+1)^(0+128),7
  2160  0EFC  2F06               	goto	l3089
  2161                           
  2162                           ;doprnt.c: 1271: flag |= 0x03;
  2163  0EFD  3003               	movlw	3
  2164  0EFE  00DA               	movwf	??_sprintf^(0+128)
  2165  0EFF  085A               	movf	??_sprintf^(0+128),w
  2166  0F00  04E3               	iorwf	sprintf@flag^(0+128),f
  2167                           
  2168                           ;doprnt.c: 1272: _val._val = -_val._val;
  2169  0F01  09DF               	comf	sprintf@_val^(0+128),f
  2170  0F02  09E0               	comf	(sprintf@_val+1)^(0+128),f
  2171  0F03  0ADF               	incf	sprintf@_val^(0+128),f
  2172  0F04  1903               	skipnz
  2173  0F05  0AE0               	incf	(sprintf@_val+1)^(0+128),f
  2174  0F06                     l3089:	
  2175                           
  2176                           ;doprnt.c: 1273: }
  2177                           ;doprnt.c: 1275: }
  2178                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2179  0F06  01E7               	clrf	sprintf@c^(0+128)
  2180  0F07  0AE7               	incf	sprintf@c^(0+128),f
  2181  0F08  0867               	movf	sprintf@c^(0+128),w
  2182  0F09  3A05               	xorlw	5
  2183  0F0A  1903               	btfsc	3,2
  2184  0F0B  2F2D               	goto	l3101
  2185  0F0C                     l3093:	
  2186                           
  2187                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2188  0F0C  0867               	movf	sprintf@c^(0+128),w
  2189  0F0D  00DA               	movwf	??_sprintf^(0+128)
  2190  0F0E  075A               	addwf	??_sprintf^(0+128),w
  2191  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2192  0F10  0084               	movwf	4
  2193  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2194  0F16  00DB               	movwf	(??_sprintf+1)^(0+128)
  2195  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2196  0F1C  00DC               	movwf	((??_sprintf+1)^(0+128)+1)
  2197  0F1D  085C               	movf	(??_sprintf+2)^(0+128),w
  2198  0F1E  0260               	subwf	(sprintf@_val+1)^(0+128),w
  2199  0F1F  1D03               	skipz
  2200  0F20  2F23               	goto	u3725
  2201  0F21  085B               	movf	(??_sprintf+1)^(0+128),w
  2202  0F22  025F               	subwf	sprintf@_val^(0+128),w
  2203  0F23                     u3725:	
  2204  0F23  1C03               	btfss	3,0
  2205  0F24  2F2D               	goto	l3101
  2206                           
  2207                           ;doprnt.c: 1316: break;
  2208  0F25  3001               	movlw	1
  2209  0F26  00DA               	movwf	??_sprintf^(0+128)
  2210  0F27  085A               	movf	??_sprintf^(0+128),w
  2211  0F28  07E7               	addwf	sprintf@c^(0+128),f
  2212  0F29  0867               	movf	sprintf@c^(0+128),w
  2213  0F2A  3A05               	xorlw	5
  2214  0F2B  1D03               	skipz
  2215  0F2C  2F0C               	goto	l3093
  2216  0F2D                     l3101:	
  2217                           
  2218                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2219  0F2D  0865               	movf	(sprintf@width+1)^(0+128),w
  2220  0F2E  0464               	iorwf	sprintf@width^(0+128),w
  2221  0F2F  1903               	skipnz
  2222  0F30  2F3B               	goto	l494
  2223  0F31  0863               	movf	sprintf@flag^(0+128),w
  2224  0F32  3903               	andlw	3
  2225  0F33  1903               	btfsc	3,2
  2226  0F34  2F3B               	goto	l494
  2227                           
  2228                           ;doprnt.c: 1355: width--;
  2229  0F35  30FF               	movlw	255
  2230  0F36  07E4               	addwf	sprintf@width^(0+128),f
  2231  0F37  1803               	skipnc
  2232  0F38  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2233  0F39  30FF               	movlw	255
  2234  0F3A  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2235  0F3B                     l494:	
  2236                           
  2237                           ;doprnt.c: 1390: if(width > c)
  2238  0F3B  0867               	movf	sprintf@c^(0+128),w
  2239  0F3C  00DA               	movwf	??_sprintf^(0+128)
  2240  0F3D  01DB               	clrf	(??_sprintf^(0+128)+1)
  2241  0F3E  1BDA               	btfsc	??_sprintf^(0+128),7
  2242  0F3F  03DB               	decf	(??_sprintf^(0+128)+1),f
  2243  0F40  085B               	movf	(??_sprintf+1)^(0+128),w
  2244  0F41  3A80               	xorlw	128
  2245  0F42  00DC               	movwf	(??_sprintf+2)^(0+128)
  2246  0F43  0865               	movf	(sprintf@width+1)^(0+128),w
  2247  0F44  3A80               	xorlw	128
  2248  0F45  025C               	subwf	(??_sprintf+2)^(0+128),w
  2249  0F46  1D03               	skipz
  2250  0F47  2F4A               	goto	u3765
  2251  0F48  0864               	movf	sprintf@width^(0+128),w
  2252  0F49  025A               	subwf	??_sprintf^(0+128),w
  2253  0F4A                     u3765:	
  2254  0F4A  1803               	skipnc
  2255  0F4B  2F5A               	goto	l3109
  2256                           
  2257                           ;doprnt.c: 1391: width -= c;
  2258  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0F4E  0867               	movf	sprintf@c^(0+128),w
  2261  0F4F  00DA               	movwf	??_sprintf^(0+128)
  2262  0F50  01DB               	clrf	(??_sprintf^(0+128)+1)
  2263  0F51  1BDA               	btfsc	??_sprintf^(0+128),7
  2264  0F52  03DB               	decf	(??_sprintf^(0+128)+1),f
  2265  0F53  085A               	movf	??_sprintf^(0+128),w
  2266  0F54  02E4               	subwf	sprintf@width^(0+128),f
  2267  0F55  085B               	movf	(??_sprintf+1)^(0+128),w
  2268  0F56  1C03               	skipc
  2269  0F57  03E5               	decf	(sprintf@width+1)^(0+128),f
  2270  0F58  02E5               	subwf	(sprintf@width+1)^(0+128),f
  2271  0F59  2F5E               	goto	l3111
  2272  0F5A                     l3109:	
  2273                           
  2274                           ;doprnt.c: 1392: else
  2275                           ;doprnt.c: 1393: width = 0;
  2276  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0F5C  01E4               	clrf	sprintf@width^(0+128)
  2279  0F5D  01E5               	clrf	(sprintf@width+1)^(0+128)
  2280  0F5E                     l3111:	
  2281                           
  2282                           ;doprnt.c: 1396: if(flag & 0x04) {
  2283  0F5E  1D63               	btfss	sprintf@flag^(0+128),2
  2284  0F5F  2F85               	goto	l3127
  2285                           
  2286                           ;doprnt.c: 1401: if(flag & 0x03)
  2287  0F60  0863               	movf	sprintf@flag^(0+128),w
  2288  0F61  3903               	andlw	3
  2289  0F62  1903               	btfsc	3,2
  2290  0F63  2F6F               	goto	l3119
  2291                           
  2292                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2293  0F64  302D               	movlw	45
  2294  0F65  00DA               	movwf	??_sprintf^(0+128)
  2295  0F66  0866               	movf	sprintf@sp^(0+128),w
  2296  0F67  0084               	movwf	4
  2297  0F68  085A               	movf	??_sprintf^(0+128),w
  2298  0F69  1783               	bsf	3,7	;select IRP bank2
  2299  0F6A  0080               	movwf	0
  2300  0F6B  3001               	movlw	1
  2301  0F6C  00DA               	movwf	??_sprintf^(0+128)
  2302  0F6D  085A               	movf	??_sprintf^(0+128),w
  2303  0F6E  07E6               	addwf	sprintf@sp^(0+128),f
  2304  0F6F                     l3119:	
  2305                           
  2306                           ;doprnt.c: 1424: if(width)
  2307  0F6F  0865               	movf	(sprintf@width+1)^(0+128),w
  2308  0F70  0464               	iorwf	sprintf@width^(0+128),w
  2309  0F71  1903               	skipnz
  2310  0F72  2FAD               	goto	l3141
  2311                           
  2312                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2313                           
  2314                           ;doprnt.c: 1425: do
  2315  0F73  3030               	movlw	48
  2316  0F74  00DA               	movwf	??_sprintf^(0+128)
  2317  0F75  0866               	movf	sprintf@sp^(0+128),w
  2318  0F76  0084               	movwf	4
  2319  0F77  085A               	movf	??_sprintf^(0+128),w
  2320  0F78  1783               	bsf	3,7	;select IRP bank2
  2321  0F79  0080               	movwf	0
  2322  0F7A  3001               	movlw	1
  2323  0F7B  00DA               	movwf	??_sprintf^(0+128)
  2324  0F7C  085A               	movf	??_sprintf^(0+128),w
  2325  0F7D  07E6               	addwf	sprintf@sp^(0+128),f
  2326                           
  2327                           ;doprnt.c: 1427: while(--width);
  2328  0F7E  30FF               	movlw	255
  2329  0F7F  07E4               	addwf	sprintf@width^(0+128),f
  2330  0F80  1803               	skipnc
  2331  0F81  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2332  0F82  30FF               	movlw	255
  2333  0F83  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2334  0F84  2F6F               	goto	l3119
  2335  0F85                     l3127:	
  2336                           ;doprnt.c: 1429: } else
  2337                           
  2338                           
  2339                           ;doprnt.c: 1431: {
  2340                           ;doprnt.c: 1433: if(width
  2341                           ;doprnt.c: 1437: )
  2342  0F85  0865               	movf	(sprintf@width+1)^(0+128),w
  2343  0F86  0464               	iorwf	sprintf@width^(0+128),w
  2344  0F87  1903               	skipnz
  2345  0F88  2F9E               	goto	l3135
  2346  0F89                     l3129:	
  2347                           ;doprnt.c: 1438: do
  2348                           
  2349                           
  2350                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2351  0F89  3020               	movlw	32
  2352  0F8A  00DA               	movwf	??_sprintf^(0+128)
  2353  0F8B  0866               	movf	sprintf@sp^(0+128),w
  2354  0F8C  0084               	movwf	4
  2355  0F8D  085A               	movf	??_sprintf^(0+128),w
  2356  0F8E  1783               	bsf	3,7	;select IRP bank2
  2357  0F8F  0080               	movwf	0
  2358  0F90  3001               	movlw	1
  2359  0F91  00DA               	movwf	??_sprintf^(0+128)
  2360  0F92  085A               	movf	??_sprintf^(0+128),w
  2361  0F93  07E6               	addwf	sprintf@sp^(0+128),f
  2362                           
  2363                           ;doprnt.c: 1440: while(--width);
  2364  0F94  30FF               	movlw	255
  2365  0F95  07E4               	addwf	sprintf@width^(0+128),f
  2366  0F96  1803               	skipnc
  2367  0F97  0AE5               	incf	(sprintf@width+1)^(0+128),f
  2368  0F98  30FF               	movlw	255
  2369  0F99  07E5               	addwf	(sprintf@width+1)^(0+128),f
  2370  0F9A  0865               	movf	(sprintf@width+1)^(0+128),w
  2371  0F9B  0464               	iorwf	sprintf@width^(0+128),w
  2372  0F9C  1D03               	skipz
  2373  0F9D  2F89               	goto	l3129
  2374  0F9E                     l3135:	
  2375                           
  2376                           ;doprnt.c: 1447: if(flag & 0x03)
  2377  0F9E  0863               	movf	sprintf@flag^(0+128),w
  2378  0F9F  3903               	andlw	3
  2379  0FA0  1903               	btfsc	3,2
  2380  0FA1  2FAD               	goto	l3141
  2381                           
  2382                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2383  0FA2  302D               	movlw	45
  2384  0FA3  00DA               	movwf	??_sprintf^(0+128)
  2385  0FA4  0866               	movf	sprintf@sp^(0+128),w
  2386  0FA5  0084               	movwf	4
  2387  0FA6  085A               	movf	??_sprintf^(0+128),w
  2388  0FA7  1783               	bsf	3,7	;select IRP bank2
  2389  0FA8  0080               	movwf	0
  2390  0FA9  3001               	movlw	1
  2391  0FAA  00DA               	movwf	??_sprintf^(0+128)
  2392  0FAB  085A               	movf	??_sprintf^(0+128),w
  2393  0FAC  07E6               	addwf	sprintf@sp^(0+128),f
  2394  0FAD                     l3141:	
  2395                           
  2396                           ;doprnt.c: 1478: }
  2397                           ;doprnt.c: 1481: prec = c;
  2398  0FAD  0867               	movf	sprintf@c^(0+128),w
  2399  0FAE  00DA               	movwf	??_sprintf^(0+128)
  2400  0FAF  085A               	movf	??_sprintf^(0+128),w
  2401  0FB0  00DE               	movwf	sprintf@prec^(0+128)
  2402  0FB1                     l3149:	
  2403                           ;doprnt.c: 1483: while(prec--) {
  2404                           
  2405  0FB1  30FF               	movlw	-1
  2406  0FB2  00DA               	movwf	??_sprintf^(0+128)
  2407  0FB3  085A               	movf	??_sprintf^(0+128),w
  2408  0FB4  07DE               	addwf	sprintf@prec^(0+128),f
  2409  0FB5  085E               	movf	sprintf@prec^(0+128),w
  2410  0FB6  3AFF               	xorlw	-1
  2411  0FB7  1903               	btfsc	3,2
  2412  0FB8  2E50               	goto	l3151
  2413                           
  2414                           ;doprnt.c: 1487: {
  2415                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2416  0FB9  300A               	movlw	10
  2417  0FBA  00D1               	movwf	___lwmod@divisor^(0+128)
  2418  0FBB  3000               	movlw	0
  2419  0FBC  00D2               	movwf	(___lwmod@divisor^(0+128)+1)
  2420  0FBD  085E               	movf	sprintf@prec^(0+128),w
  2421  0FBE  00DA               	movwf	??_sprintf^(0+128)
  2422  0FBF  075A               	addwf	??_sprintf^(0+128),w
  2423  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2424  0FC1  0084               	movwf	4
  2425  0FC2  160A  118A  200A  120A  158A  	fcall	stringdir
  2426  0FC7  00C9               	movwf	___lwdiv@divisor^(0+128)
  2427  0FC8  160A  118A  200A  120A  158A  	fcall	stringdir
  2428  0FCD  00CA               	movwf	(___lwdiv@divisor+1)^(0+128)
  2429  0FCE  0860               	movf	(sprintf@_val+1)^(0+128),w
  2430  0FCF  01CC               	clrf	(___lwdiv@dividend+1)^(0+128)
  2431  0FD0  07CC               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2432  0FD1  085F               	movf	sprintf@_val^(0+128),w
  2433  0FD2  01CB               	clrf	___lwdiv@dividend^(0+128)
  2434  0FD3  07CB               	addwf	___lwdiv@dividend^(0+128),f
  2435  0FD4  160A  118A  244D  120A  158A  	fcall	___lwdiv
  2436  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0FDB  084A               	movf	(?___lwdiv+1)^(0+128),w
  2439  0FDC  01D4               	clrf	(___lwmod@dividend+1)^(0+128)
  2440  0FDD  07D4               	addwf	(___lwmod@dividend+1)^(0+128),f
  2441  0FDE  0849               	movf	?___lwdiv^(0+128),w
  2442  0FDF  01D3               	clrf	___lwmod@dividend^(0+128)
  2443  0FE0  07D3               	addwf	___lwmod@dividend^(0+128),f
  2444  0FE1  160A  118A  23D9  120A  158A  	fcall	___lwmod
  2445  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2446  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2447  0FE8  0851               	movf	?___lwmod^(0+128),w
  2448  0FE9  3E30               	addlw	48
  2449  0FEA  00DB               	movwf	(??_sprintf+1)^(0+128)
  2450  0FEB  085B               	movf	(??_sprintf+1)^(0+128),w
  2451  0FEC  00E7               	movwf	sprintf@c^(0+128)
  2452                           
  2453                           ;doprnt.c: 1532: }
  2454                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2455  0FED  0867               	movf	sprintf@c^(0+128),w
  2456  0FEE  00DA               	movwf	??_sprintf^(0+128)
  2457  0FEF  0866               	movf	sprintf@sp^(0+128),w
  2458  0FF0  0084               	movwf	4
  2459  0FF1  085A               	movf	??_sprintf^(0+128),w
  2460  0FF2  1783               	bsf	3,7	;select IRP bank2
  2461  0FF3  0080               	movwf	0
  2462  0FF4  3001               	movlw	1
  2463  0FF5  00DA               	movwf	??_sprintf^(0+128)
  2464  0FF6  085A               	movf	??_sprintf^(0+128),w
  2465  0FF7  07E6               	addwf	sprintf@sp^(0+128),f
  2466  0FF8  2FB1               	goto	l3149
  2467  0FF9                     l3153:	
  2468                           ;doprnt.c: 1534: }
  2469                           ;doprnt.c: 1542: }
  2470                           ;doprnt.c: 1544: alldone:
  2471                           
  2472                           
  2473                           ;doprnt.c: 1547: *sp = 0;
  2474  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0FFB  0866               	movf	sprintf@sp^(0+128),w
  2477  0FFC  0084               	movwf	4
  2478  0FFD  1783               	bsf	3,7	;select IRP bank2
  2479  0FFE  0180               	clrf	0
  2480  0FFF  0008               	return
  2481  1000                     __end_of_sprintf:	
  2482                           ;doprnt.c: 1549: return 0;
  2483                           ;	Return value of _sprintf is never used
  2484                           
  2485                           
  2486                           	psect	text2
  2487  11F8                     __ptext2:	
  2488 ;; *************** function _isdigit *****************
  2489 ;; Defined at:
  2490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  c               1    wreg     unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  c               1    1[BANK1 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       2       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         0       0       2       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    5
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_sprintf
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _isdigit
  2520  11F8                     _isdigit:	
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2524                           ;isdigit@c stored from wreg
  2525  11F8  1683               	bsf	3,5	;RP0=1, select bank1
  2526  11F9  1303               	bcf	3,6	;RP1=0, select bank1
  2527  11FA  00CA               	movwf	isdigit@c^(0+128)
  2528  11FB  01C9               	clrf	_isdigit$1440^(0+128)
  2529  11FC  303A               	movlw	58
  2530  11FD  024A               	subwf	isdigit@c^(0+128),w
  2531  11FE  1803               	skipnc
  2532  11FF  2A06               	goto	l2513
  2533  1200  3030               	movlw	48
  2534  1201  024A               	subwf	isdigit@c^(0+128),w
  2535  1202  1C03               	skipc
  2536  1203  2A06               	goto	l2513
  2537  1204  01C9               	clrf	_isdigit$1440^(0+128)
  2538  1205  0AC9               	incf	_isdigit$1440^(0+128),f
  2539  1206                     l2513:	
  2540  1206  0C49               	rrf	_isdigit$1440^(0+128),w
  2541  1207  0008               	return
  2542  1208                     __end_of_isdigit:	
  2543                           
  2544                           	psect	text3
  2545  135A                     __ptext3:	
  2546 ;; *************** function ___wmul *****************
  2547 ;; Defined at:
  2548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2551 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  product         2    4[BANK1 ] unsigned int 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2    0[BANK1 ] unsigned int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       0       4       0       0
  2564 ;;      Locals:         0       0       2       0       0
  2565 ;;      Temps:          0       0       0       0       0
  2566 ;;      Totals:         0       0       6       0       0
  2567 ;;Total ram usage:        6 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    5
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_sprintf
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function ___wmul
  2579  135A                     ___wmul:	
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2583  135A  1683               	bsf	3,5	;RP0=1, select bank1
  2584  135B  1303               	bcf	3,6	;RP1=0, select bank1
  2585  135C  01CD               	clrf	___wmul@product^(0+128)
  2586  135D  01CE               	clrf	(___wmul@product+1)^(0+128)
  2587  135E                     l2519:	
  2588  135E  1C49               	btfss	___wmul@multiplier^(0+128),0
  2589  135F  2B66               	goto	l595
  2590  1360  084B               	movf	___wmul@multiplicand^(0+128),w
  2591  1361  07CD               	addwf	___wmul@product^(0+128),f
  2592  1362  1803               	skipnc
  2593  1363  0ACE               	incf	(___wmul@product+1)^(0+128),f
  2594  1364  084C               	movf	(___wmul@multiplicand+1)^(0+128),w
  2595  1365  07CE               	addwf	(___wmul@product+1)^(0+128),f
  2596  1366                     l595:	
  2597  1366  3001               	movlw	1
  2598  1367                     u2815:	
  2599  1367  1003               	clrc
  2600  1368  0DCB               	rlf	___wmul@multiplicand^(0+128),f
  2601  1369  0DCC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2602  136A  3EFF               	addlw	-1
  2603  136B  1D03               	skipz
  2604  136C  2B67               	goto	u2815
  2605  136D  3001               	movlw	1
  2606  136E                     u2825:	
  2607  136E  1003               	clrc
  2608  136F  0CCA               	rrf	(___wmul@multiplier+1)^(0+128),f
  2609  1370  0CC9               	rrf	___wmul@multiplier^(0+128),f
  2610  1371  3EFF               	addlw	-1
  2611  1372  1D03               	skipz
  2612  1373  2B6E               	goto	u2825
  2613  1374  084A               	movf	(___wmul@multiplier+1)^(0+128),w
  2614  1375  0449               	iorwf	___wmul@multiplier^(0+128),w
  2615  1376  1D03               	skipz
  2616  1377  2B5E               	goto	l2519
  2617  1378  084E               	movf	(___wmul@product+1)^(0+128),w
  2618  1379  01CA               	clrf	(?___wmul+1)^(0+128)
  2619  137A  07CA               	addwf	(?___wmul+1)^(0+128),f
  2620  137B  084D               	movf	___wmul@product^(0+128),w
  2621  137C  01C9               	clrf	?___wmul^(0+128)
  2622  137D  07C9               	addwf	?___wmul^(0+128),f
  2623  137E  0008               	return
  2624  137F                     __end_of___wmul:	
  2625                           
  2626                           	psect	text4
  2627  13D9                     __ptext4:	
  2628 ;; *************** function ___lwmod *****************
  2629 ;; Defined at:
  2630 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  divisor         2    8[BANK1 ] unsigned int 
  2633 ;;  dividend        2   10[BANK1 ] unsigned int 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  counter         1   13[BANK1 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  2    8[BANK1 ] unsigned int 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       4       0       0
  2646 ;;      Locals:         0       0       1       0       0
  2647 ;;      Temps:          0       0       1       0       0
  2648 ;;      Totals:         0       0       6       0       0
  2649 ;;Total ram usage:        6 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    5
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_sprintf
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function ___lwmod
  2661  13D9                     ___lwmod:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2665  13D9  1683               	bsf	3,5	;RP0=1, select bank1
  2666  13DA  1303               	bcf	3,6	;RP1=0, select bank1
  2667  13DB  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2668  13DC  0451               	iorwf	___lwmod@divisor^(0+128),w
  2669  13DD  1903               	skipnz
  2670  13DE  2C08               	goto	l2707
  2671  13DF  01D6               	clrf	___lwmod@counter^(0+128)
  2672  13E0  0AD6               	incf	___lwmod@counter^(0+128),f
  2673  13E1                     l2697:	
  2674  13E1  1BD2               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2675  13E2  2BEF               	goto	l2699
  2676  13E3  3001               	movlw	1
  2677  13E4                     u3265:	
  2678  13E4  1003               	clrc
  2679  13E5  0DD1               	rlf	___lwmod@divisor^(0+128),f
  2680  13E6  0DD2               	rlf	(___lwmod@divisor+1)^(0+128),f
  2681  13E7  3EFF               	addlw	-1
  2682  13E8  1D03               	skipz
  2683  13E9  2BE4               	goto	u3265
  2684  13EA  3001               	movlw	1
  2685  13EB  00D5               	movwf	??___lwmod^(0+128)
  2686  13EC  0855               	movf	??___lwmod^(0+128),w
  2687  13ED  07D6               	addwf	___lwmod@counter^(0+128),f
  2688  13EE  2BE1               	goto	l2697
  2689  13EF                     l2699:	
  2690  13EF  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2691  13F0  0254               	subwf	(___lwmod@dividend+1)^(0+128),w
  2692  13F1  1D03               	skipz
  2693  13F2  2BF5               	goto	u3285
  2694  13F3  0851               	movf	___lwmod@divisor^(0+128),w
  2695  13F4  0253               	subwf	___lwmod@dividend^(0+128),w
  2696  13F5                     u3285:	
  2697  13F5  1C03               	skipc
  2698  13F6  2BFD               	goto	l2703
  2699  13F7  0851               	movf	___lwmod@divisor^(0+128),w
  2700  13F8  02D3               	subwf	___lwmod@dividend^(0+128),f
  2701  13F9  0852               	movf	(___lwmod@divisor+1)^(0+128),w
  2702  13FA  1C03               	skipc
  2703  13FB  03D4               	decf	(___lwmod@dividend+1)^(0+128),f
  2704  13FC  02D4               	subwf	(___lwmod@dividend+1)^(0+128),f
  2705  13FD                     l2703:	
  2706  13FD  3001               	movlw	1
  2707  13FE                     u3295:	
  2708  13FE  1003               	clrc
  2709  13FF  0CD2               	rrf	(___lwmod@divisor+1)^(0+128),f
  2710  1400  0CD1               	rrf	___lwmod@divisor^(0+128),f
  2711  1401  3EFF               	addlw	-1
  2712  1402  1D03               	skipz
  2713  1403  2BFE               	goto	u3295
  2714  1404  3001               	movlw	1
  2715  1405  02D6               	subwf	___lwmod@counter^(0+128),f
  2716  1406  1D03               	btfss	3,2
  2717  1407  2BEF               	goto	l2699
  2718  1408                     l2707:	
  2719  1408  0854               	movf	(___lwmod@dividend+1)^(0+128),w
  2720  1409  01D2               	clrf	(?___lwmod+1)^(0+128)
  2721  140A  07D2               	addwf	(?___lwmod+1)^(0+128),f
  2722  140B  0853               	movf	___lwmod@dividend^(0+128),w
  2723  140C  01D1               	clrf	?___lwmod^(0+128)
  2724  140D  07D1               	addwf	?___lwmod^(0+128),f
  2725  140E  0008               	return
  2726  140F                     __end_of___lwmod:	
  2727                           
  2728                           	psect	text5
  2729  144D                     __ptext5:	
  2730 ;; *************** function ___lwdiv *****************
  2731 ;; Defined at:
  2732 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  divisor         2    0[BANK1 ] unsigned int 
  2735 ;;  dividend        2    2[BANK1 ] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  quotient        2    5[BANK1 ] unsigned int 
  2738 ;;  counter         1    7[BANK1 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2    0[BANK1 ] unsigned int 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         0       0       4       0       0
  2749 ;;      Locals:         0       0       3       0       0
  2750 ;;      Temps:          0       0       1       0       0
  2751 ;;      Totals:         0       0       8       0       0
  2752 ;;Total ram usage:        8 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    5
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_sprintf
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function ___lwdiv
  2764  144D                     ___lwdiv:	
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2768  144D  1683               	bsf	3,5	;RP0=1, select bank1
  2769  144E  1303               	bcf	3,6	;RP1=0, select bank1
  2770  144F  01CE               	clrf	___lwdiv@quotient^(0+128)
  2771  1450  01CF               	clrf	(___lwdiv@quotient+1)^(0+128)
  2772  1451  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2773  1452  0449               	iorwf	___lwdiv@divisor^(0+128),w
  2774  1453  1903               	skipnz
  2775  1454  2C86               	goto	l2685
  2776  1455  01D0               	clrf	___lwdiv@counter^(0+128)
  2777  1456  0AD0               	incf	___lwdiv@counter^(0+128),f
  2778  1457                     l2673:	
  2779  1457  1BCA               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2780  1458  2C65               	goto	l2675
  2781  1459  3001               	movlw	1
  2782  145A                     u3195:	
  2783  145A  1003               	clrc
  2784  145B  0DC9               	rlf	___lwdiv@divisor^(0+128),f
  2785  145C  0DCA               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2786  145D  3EFF               	addlw	-1
  2787  145E  1D03               	skipz
  2788  145F  2C5A               	goto	u3195
  2789  1460  3001               	movlw	1
  2790  1461  00CD               	movwf	??___lwdiv^(0+128)
  2791  1462  084D               	movf	??___lwdiv^(0+128),w
  2792  1463  07D0               	addwf	___lwdiv@counter^(0+128),f
  2793  1464  2C57               	goto	l2673
  2794  1465                     l2675:	
  2795  1465  3001               	movlw	1
  2796  1466                     u3215:	
  2797  1466  1003               	clrc
  2798  1467  0DCE               	rlf	___lwdiv@quotient^(0+128),f
  2799  1468  0DCF               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2800  1469  3EFF               	addlw	-1
  2801  146A  1D03               	skipz
  2802  146B  2C66               	goto	u3215
  2803  146C  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2804  146D  024C               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2805  146E  1D03               	skipz
  2806  146F  2C72               	goto	u3225
  2807  1470  0849               	movf	___lwdiv@divisor^(0+128),w
  2808  1471  024B               	subwf	___lwdiv@dividend^(0+128),w
  2809  1472                     u3225:	
  2810  1472  1C03               	skipc
  2811  1473  2C7B               	goto	l2681
  2812  1474  0849               	movf	___lwdiv@divisor^(0+128),w
  2813  1475  02CB               	subwf	___lwdiv@dividend^(0+128),f
  2814  1476  084A               	movf	(___lwdiv@divisor+1)^(0+128),w
  2815  1477  1C03               	skipc
  2816  1478  03CC               	decf	(___lwdiv@dividend+1)^(0+128),f
  2817  1479  02CC               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2818  147A  144E               	bsf	___lwdiv@quotient^(0+128),0
  2819  147B                     l2681:	
  2820  147B  3001               	movlw	1
  2821  147C                     u3235:	
  2822  147C  1003               	clrc
  2823  147D  0CCA               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2824  147E  0CC9               	rrf	___lwdiv@divisor^(0+128),f
  2825  147F  3EFF               	addlw	-1
  2826  1480  1D03               	skipz
  2827  1481  2C7C               	goto	u3235
  2828  1482  3001               	movlw	1
  2829  1483  02D0               	subwf	___lwdiv@counter^(0+128),f
  2830  1484  1D03               	btfss	3,2
  2831  1485  2C65               	goto	l2675
  2832  1486                     l2685:	
  2833  1486  084F               	movf	(___lwdiv@quotient+1)^(0+128),w
  2834  1487  01CA               	clrf	(?___lwdiv+1)^(0+128)
  2835  1488  07CA               	addwf	(?___lwdiv+1)^(0+128),f
  2836  1489  084E               	movf	___lwdiv@quotient^(0+128),w
  2837  148A  01C9               	clrf	?___lwdiv^(0+128)
  2838  148B  07C9               	addwf	?___lwdiv^(0+128),f
  2839  148C  0008               	return
  2840  148D                     __end_of___lwdiv:	
  2841                           
  2842                           	psect	text6
  2843  148D                     __ptext6:	
  2844 ;; *************** function _USART_Init *****************
  2845 ;; Defined at:
  2846 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  BaudRate        4   15[BANK1 ] long 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;		None               void
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       4       0       0
  2861 ;;      Locals:         0       0       0       0       0
  2862 ;;      Temps:          0       0       4       0       0
  2863 ;;      Totals:         0       0       8       0       0
  2864 ;;Total ram usage:        8 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    6
  2867 ;; This function calls:
  2868 ;;		___aldiv
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _USART_Init
  2876  148D                     _USART_Init:	
  2877                           
  2878                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2882  148D  1683               	bsf	3,5	;RP0=1, select bank1
  2883  148E  1303               	bcf	3,6	;RP1=0, select bank1
  2884  148F  0858               	movf	USART_Init@BaudRate^(0+128),w
  2885  1490  00DC               	movwf	??_USART_Init^(0+128)
  2886  1491  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  2887  1492  00DD               	movwf	(??_USART_Init^(0+128)+1)
  2888  1493  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  2889  1494  00DE               	movwf	(??_USART_Init^(0+128)+2)
  2890  1495  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  2891  1496  00DF               	movwf	(??_USART_Init^(0+128)+3)
  2892  1497  3004               	movlw	4
  2893  1498                     u3635:	
  2894  1498  1003               	clrc
  2895  1499  0DDC               	rlf	??_USART_Init^(0+128),f
  2896  149A  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  2897  149B  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  2898  149C  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  2899  149D  3EFF               	addlw	-1
  2900  149E  1D03               	skipz
  2901  149F  2C98               	goto	u3635
  2902  14A0  085F               	movf	(??_USART_Init+3)^(0+128),w
  2903  14A1  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  2904  14A2  085E               	movf	(??_USART_Init+2)^(0+128),w
  2905  14A3  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  2906  14A4  085D               	movf	(??_USART_Init+1)^(0+128),w
  2907  14A5  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  2908  14A6  085C               	movf	??_USART_Init^(0+128),w
  2909  14A7  00C9               	movwf	___aldiv@divisor^(0+128)
  2910  14A8  3001               	movlw	1
  2911  14A9  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  2912  14AA  3019               	movlw	25
  2913  14AB  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  2914  14AC  3040               	movlw	64
  2915  14AD  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  2916  14AE  3000               	movlw	0
  2917  14AF  00CD               	movwf	___aldiv@dividend^(0+128)
  2918  14B0  120A  118A  2757   	fcall	___aldiv
  2919  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  2920  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  2921  14B5  0849               	movf	?___aldiv^(0+128),w
  2922  14B6  3EFF               	addlw	255
  2923  14B7  0099               	movwf	25	;volatile
  2924                           
  2925                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2926  14B8  1398               	bcf	24,7	;volatile
  2927                           
  2928                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2929  14B9  1318               	bcf	24,6	;volatile
  2930                           
  2931                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2932  14BA  1698               	bsf	24,5	;volatile
  2933                           
  2934                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2935  14BB  1218               	bcf	24,4	;volatile
  2936                           
  2937                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2938  14BC  1518               	bsf	24,2	;volatile
  2939                           
  2940                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2941  14BD  1498               	bsf	24,1	;volatile
  2942                           
  2943                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2944  14BE  1018               	bcf	24,0	;volatile
  2945                           
  2946                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2947  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  2948  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  2949  14C1  1798               	bsf	24,7	;volatile
  2950                           
  2951                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2952  14C2  1318               	bcf	24,6	;volatile
  2953                           
  2954                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2955  14C3  1298               	bcf	24,5	;volatile
  2956                           
  2957                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2958  14C4  1618               	bsf	24,4	;volatile
  2959                           
  2960                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2961  14C5  1198               	bcf	24,3	;volatile
  2962                           
  2963                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2964  14C6  1118               	bcf	24,2	;volatile
  2965                           
  2966                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2967  14C7  1098               	bcf	24,1	;volatile
  2968                           
  2969                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2970  14C8  1018               	bcf	24,0	;volatile
  2971                           
  2972                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2973  14C9  1683               	bsf	3,5	;RP0=1, select bank1
  2974  14CA  1303               	bcf	3,6	;RP1=0, select bank1
  2975  14CB  120C               	bcf	12,4	;volatile
  2976                           
  2977                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2978  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  2979  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  2980  14CE  120C               	bcf	12,4	;volatile
  2981                           
  2982                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2983  14CF  1683               	bsf	3,5	;RP0=1, select bank1
  2984  14D0  1303               	bcf	3,6	;RP1=0, select bank1
  2985  14D1  168C               	bsf	12,5	;volatile
  2986                           
  2987                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2988  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  2989  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  2990  14D4  128C               	bcf	12,5	;volatile
  2991  14D5  0008               	return
  2992  14D6                     __end_of_USART_Init:	
  2993                           
  2994                           	psect	text7
  2995  0757                     __ptext7:	
  2996 ;; *************** function ___aldiv *****************
  2997 ;; Defined at:
  2998 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  divisor         4    0[BANK1 ] long 
  3001 ;;  dividend        4    4[BANK1 ] long 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  quotient        4   11[BANK1 ] long 
  3004 ;;  sign            1   10[BANK1 ] unsigned char 
  3005 ;;  counter         1    9[BANK1 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  4    0[BANK1 ] long 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       0       8       0       0
  3016 ;;      Locals:         0       0       6       0       0
  3017 ;;      Temps:          0       0       1       0       0
  3018 ;;      Totals:         0       0      15       0       0
  3019 ;;Total ram usage:       15 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    5
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_USART_Init
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function ___aldiv
  3031  0757                     ___aldiv:	
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3035  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3036  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3037  0759  01D3               	clrf	___aldiv@sign^(0+128)
  3038  075A  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  3039  075B  2F69               	goto	l650
  3040  075C  09C9               	comf	___aldiv@divisor^(0+128),f
  3041  075D  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  3042  075E  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  3043  075F  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  3044  0760  0AC9               	incf	___aldiv@divisor^(0+128),f
  3045  0761  1903               	skipnz
  3046  0762  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  3047  0763  1903               	skipnz
  3048  0764  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  3049  0765  1903               	skipnz
  3050  0766  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  3051  0767  01D3               	clrf	___aldiv@sign^(0+128)
  3052  0768  0AD3               	incf	___aldiv@sign^(0+128),f
  3053  0769                     l650:	
  3054  0769  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  3055  076A  2F7A               	goto	l2539
  3056  076B  09CD               	comf	___aldiv@dividend^(0+128),f
  3057  076C  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  3058  076D  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  3059  076E  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  3060  076F  0ACD               	incf	___aldiv@dividend^(0+128),f
  3061  0770  1903               	skipnz
  3062  0771  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  3063  0772  1903               	skipnz
  3064  0773  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  3065  0774  1903               	skipnz
  3066  0775  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  3067  0776  3001               	movlw	1
  3068  0777  00D1               	movwf	??___aldiv^(0+128)
  3069  0778  0851               	movf	??___aldiv^(0+128),w
  3070  0779  06D3               	xorwf	___aldiv@sign^(0+128),f
  3071  077A                     l2539:	
  3072  077A  3000               	movlw	0
  3073  077B  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  3074  077C  3000               	movlw	0
  3075  077D  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  3076  077E  3000               	movlw	0
  3077  077F  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  3078  0780  3000               	movlw	0
  3079  0781  00D4               	movwf	___aldiv@quotient^(0+128)
  3080  0782  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3081  0783  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3082  0784  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3083  0785  0449               	iorwf	___aldiv@divisor^(0+128),w
  3084  0786  1903               	skipnz
  3085  0787  2FCF               	goto	l2561
  3086  0788  01D2               	clrf	___aldiv@counter^(0+128)
  3087  0789  0AD2               	incf	___aldiv@counter^(0+128),f
  3088  078A                     l2547:	
  3089  078A  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3090  078B  2F9A               	goto	l2549
  3091  078C  3001               	movlw	1
  3092  078D  00D1               	movwf	??___aldiv^(0+128)
  3093  078E                     u2875:	
  3094  078E  1003               	clrc
  3095  078F  0DC9               	rlf	___aldiv@divisor^(0+128),f
  3096  0790  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  3097  0791  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  3098  0792  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  3099  0793  0BD1               	decfsz	??___aldiv^(0+128),f
  3100  0794  2F8E               	goto	u2875
  3101  0795  3001               	movlw	1
  3102  0796  00D1               	movwf	??___aldiv^(0+128)
  3103  0797  0851               	movf	??___aldiv^(0+128),w
  3104  0798  07D2               	addwf	___aldiv@counter^(0+128),f
  3105  0799  2F8A               	goto	l2547
  3106  079A                     l2549:	
  3107  079A  3001               	movlw	1
  3108  079B  00D1               	movwf	??___aldiv^(0+128)
  3109  079C                     u2895:	
  3110  079C  1003               	clrc
  3111  079D  0DD4               	rlf	___aldiv@quotient^(0+128),f
  3112  079E  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  3113  079F  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  3114  07A0  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  3115  07A1  0BD1               	decfsz	??___aldiv^(0+128),f
  3116  07A2  2F9C               	goto	u2895
  3117  07A3  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3118  07A4  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  3119  07A5  1D03               	skipz
  3120  07A6  2FB1               	goto	u2905
  3121  07A7  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3122  07A8  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  3123  07A9  1D03               	skipz
  3124  07AA  2FB1               	goto	u2905
  3125  07AB  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3126  07AC  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  3127  07AD  1D03               	skipz
  3128  07AE  2FB1               	goto	u2905
  3129  07AF  0849               	movf	___aldiv@divisor^(0+128),w
  3130  07B0  024D               	subwf	___aldiv@dividend^(0+128),w
  3131  07B1                     u2905:	
  3132  07B1  1C03               	skipc
  3133  07B2  2FC2               	goto	l2557
  3134  07B3  0849               	movf	___aldiv@divisor^(0+128),w
  3135  07B4  02CD               	subwf	___aldiv@dividend^(0+128),f
  3136  07B5  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  3137  07B6  1C03               	skipc
  3138  07B7  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3139  07B8  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  3140  07B9  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  3141  07BA  1C03               	skipc
  3142  07BB  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3143  07BC  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  3144  07BD  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  3145  07BE  1C03               	skipc
  3146  07BF  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3147  07C0  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  3148  07C1  1454               	bsf	___aldiv@quotient^(0+128),0
  3149  07C2                     l2557:	
  3150  07C2  3001               	movlw	1
  3151  07C3                     u2915:	
  3152  07C3  1003               	clrc
  3153  07C4  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  3154  07C5  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  3155  07C6  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  3156  07C7  0CC9               	rrf	___aldiv@divisor^(0+128),f
  3157  07C8  3EFF               	addlw	-1
  3158  07C9  1D03               	skipz
  3159  07CA  2FC3               	goto	u2915
  3160  07CB  3001               	movlw	1
  3161  07CC  02D2               	subwf	___aldiv@counter^(0+128),f
  3162  07CD  1D03               	btfss	3,2
  3163  07CE  2F9A               	goto	l2549
  3164  07CF                     l2561:	
  3165  07CF  0853               	movf	___aldiv@sign^(0+128),w
  3166  07D0  1903               	btfsc	3,2
  3167  07D1  2FDD               	goto	l2565
  3168  07D2  09D4               	comf	___aldiv@quotient^(0+128),f
  3169  07D3  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  3170  07D4  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  3171  07D5  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  3172  07D6  0AD4               	incf	___aldiv@quotient^(0+128),f
  3173  07D7  1903               	skipnz
  3174  07D8  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  3175  07D9  1903               	skipnz
  3176  07DA  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  3177  07DB  1903               	skipnz
  3178  07DC  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  3179  07DD                     l2565:	
  3180  07DD  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  3181  07DE  00CC               	movwf	(?___aldiv+3)^(0+128)
  3182  07DF  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  3183  07E0  00CB               	movwf	(?___aldiv+2)^(0+128)
  3184  07E1  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  3185  07E2  00CA               	movwf	(?___aldiv+1)^(0+128)
  3186  07E3  0854               	movf	___aldiv@quotient^(0+128),w
  3187  07E4  00C9               	movwf	?___aldiv^(0+128)
  3188  07E5  0008               	return
  3189  07E6                     __end_of___aldiv:	
  3190                           
  3191                           	psect	text8
  3192  11D3                     __ptext8:	
  3193 ;; *************** function _TIMER0_Set *****************
  3194 ;; Defined at:
  3195 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  contagens       1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  contagens       1    0[BANK1 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;		None               void
  3202 ;; Registers used:
  3203 ;;		wreg
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       0       1       0       0
  3211 ;;      Temps:          0       0       0       0       0
  3212 ;;      Totals:         0       0       1       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    5
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _TIMER0_Set
  3225  11D3                     _TIMER0_Set:	
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _TIMER0_Set: [wreg]
  3229                           ;TIMER0_Set@contagens stored from wreg
  3230  11D3  1683               	bsf	3,5	;RP0=1, select bank1
  3231  11D4  1303               	bcf	3,6	;RP1=0, select bank1
  3232  11D5  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  3233                           
  3234                           ;timers.c: 22: TMR0 = contagens;
  3235  11D6  0849               	movf	TIMER0_Set@contagens^(0+128),w
  3236  11D7  1283               	bcf	3,5	;RP0=0, select bank0
  3237  11D8  1303               	bcf	3,6	;RP1=0, select bank0
  3238  11D9  0081               	movwf	1	;volatile
  3239  11DA  0008               	return
  3240  11DB                     __end_of_TIMER0_Set:	
  3241                           
  3242                           	psect	text9
  3243  11ED                     __ptext9:	
  3244 ;; *************** function _TIMER0_Init *****************
  3245 ;; Defined at:
  3246 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		None
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    5
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function _TIMER0_Init
  3276  11ED                     _TIMER0_Init:	
  3277                           
  3278                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in _TIMER0_Init: []
  3282  11ED  1683               	bsf	3,5	;RP0=1, select bank1
  3283  11EE  1303               	bcf	3,6	;RP1=0, select bank1
  3284  11EF  1281               	bcf	1,5	;volatile
  3285                           
  3286                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3287  11F0  1201               	bcf	1,4	;volatile
  3288                           
  3289                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3290  11F1  1181               	bcf	1,3	;volatile
  3291                           
  3292                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3293  11F2  1501               	bsf	1,2	;volatile
  3294                           
  3295                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3296  11F3  1481               	bsf	1,1	;volatile
  3297                           
  3298                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3299  11F4  1401               	bsf	1,0	;volatile
  3300                           
  3301                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3302  11F5  110B               	bcf	11,2	;volatile
  3303                           
  3304                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3305  11F6  168B               	bsf	11,5	;volatile
  3306  11F7  0008               	return
  3307  11F8                     __end_of_TIMER0_Init:	
  3308                           
  3309                           	psect	text10
  3310  1336                     __ptext10:	
  3311 ;; *************** function _PWM_Init *****************
  3312 ;; Defined at:
  3313 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;		None               void
  3320 ;; Registers used:
  3321 ;;		wreg
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    5
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _PWM_Init
  3343  1336                     _PWM_Init:	
  3344                           
  3345                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _PWM_Init: [wreg]
  3349  1336  1283               	bcf	3,5	;RP0=0, select bank0
  3350  1337  1303               	bcf	3,6	;RP1=0, select bank0
  3351  1338  1492               	bsf	18,1	;volatile
  3352                           
  3353                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3354  1339  1012               	bcf	18,0	;volatile
  3355                           
  3356                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3357  133A  1312               	bcf	18,6	;volatile
  3358                           
  3359                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3360  133B  1292               	bcf	18,5	;volatile
  3361                           
  3362                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3363  133C  1212               	bcf	18,4	;volatile
  3364                           
  3365                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3366  133D  1192               	bcf	18,3	;volatile
  3367                           
  3368                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3369  133E  1512               	bsf	18,2	;volatile
  3370                           
  3371                           ;pwm.c: 27: PR2 = 255;
  3372  133F  30FF               	movlw	255
  3373  1340  1683               	bsf	3,5	;RP0=1, select bank1
  3374  1341  1303               	bcf	3,6	;RP1=0, select bank1
  3375  1342  0092               	movwf	18	;volatile
  3376                           
  3377                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3378  1343  1283               	bcf	3,5	;RP0=0, select bank0
  3379  1344  1303               	bcf	3,6	;RP1=0, select bank0
  3380  1345  1597               	bsf	23,3	;volatile
  3381                           
  3382                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3383  1346  1517               	bsf	23,2	;volatile
  3384                           
  3385                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3386  1347  1497               	bsf	23,1	;volatile
  3387                           
  3388                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3389  1348  1417               	bsf	23,0	;volatile
  3390                           
  3391                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3392  1349  1683               	bsf	3,5	;RP0=1, select bank1
  3393  134A  1303               	bcf	3,6	;RP1=0, select bank1
  3394  134B  150C               	bsf	12,2	;volatile
  3395                           
  3396                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3397  134C  1283               	bcf	3,5	;RP0=0, select bank0
  3398  134D  1303               	bcf	3,6	;RP1=0, select bank0
  3399  134E  110C               	bcf	12,2	;volatile
  3400                           
  3401                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3402  134F  159D               	bsf	29,3	;volatile
  3403                           
  3404                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3405  1350  151D               	bsf	29,2	;volatile
  3406                           
  3407                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3408  1351  149D               	bsf	29,1	;volatile
  3409                           
  3410                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3411  1352  141D               	bsf	29,0	;volatile
  3412                           
  3413                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3414  1353  1683               	bsf	3,5	;RP0=1, select bank1
  3415  1354  1303               	bcf	3,6	;RP1=0, select bank1
  3416  1355  140D               	bsf	13,0	;volatile
  3417                           
  3418                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3419  1356  1283               	bcf	3,5	;RP0=0, select bank0
  3420  1357  1303               	bcf	3,6	;RP1=0, select bank0
  3421  1358  100D               	bcf	13,0	;volatile
  3422  1359  0008               	return
  3423  135A                     __end_of_PWM_Init:	
  3424                           
  3425                           	psect	text11
  3426  12F2                     __ptext11:	
  3427 ;; *************** function _PWM_DutyCycle2 *****************
  3428 ;; Defined at:
  3429 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  valor           2    0[BANK1 ] int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;		None               void
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       2       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       2       0       0
  3446 ;;      Totals:         0       0       4       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    5
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           
  3458                           ;psect for function _PWM_DutyCycle2
  3459  12F2                     _PWM_DutyCycle2:	
  3460                           
  3461                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3465  12F2  1683               	bsf	3,5	;RP0=1, select bank1
  3466  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  3467  12F4  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3468  12F5  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3469  12F6  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3470  12F7  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3471  12F8  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3472  12F9  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3473  12FA  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3474  12FB  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3475  12FC  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3476  12FD  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  3477  12FE  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  3478  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  3479  1300  1303               	bcf	3,6	;RP1=0, select bank0
  3480  1301  009B               	movwf	27	;volatile
  3481                           
  3482                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3483  1302  1683               	bsf	3,5	;RP0=1, select bank1
  3484  1303  1303               	bcf	3,6	;RP1=0, select bank1
  3485  1304  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  3486  1305  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  3487  1306  3003               	movlw	3
  3488  1307                     u3615:	
  3489  1307  1003               	clrc
  3490  1308  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  3491  1309  3EFF               	addlw	-1
  3492  130A  1D03               	skipz
  3493  130B  2B07               	goto	u3615
  3494  130C  1003               	clrc
  3495  130D  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  3496  130E  380C               	iorlw	12
  3497  130F  1283               	bcf	3,5	;RP0=0, select bank0
  3498  1310  1303               	bcf	3,6	;RP1=0, select bank0
  3499  1311  009D               	movwf	29	;volatile
  3500  1312  0008               	return
  3501  1313                     __end_of_PWM_DutyCycle2:	
  3502                           
  3503                           	psect	text12
  3504  12D1                     __ptext12:	
  3505 ;; *************** function _PWM_DutyCycle1 *****************
  3506 ;; Defined at:
  3507 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  valor           2    0[BANK1 ] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       2       0       0
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          0       0       2       0       0
  3524 ;;      Totals:         0       0       4       0       0
  3525 ;;Total ram usage:        4 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    5
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _PWM_DutyCycle1
  3537  12D1                     _PWM_DutyCycle1:	
  3538                           
  3539                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3543  12D1  1683               	bsf	3,5	;RP0=1, select bank1
  3544  12D2  1303               	bcf	3,6	;RP1=0, select bank1
  3545  12D3  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3546  12D4  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3547  12D5  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3548  12D6  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3549  12D7  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3550  12D8  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3551  12D9  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3552  12DA  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3553  12DB  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3554  12DC  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  3555  12DD  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  3556  12DE  1283               	bcf	3,5	;RP0=0, select bank0
  3557  12DF  1303               	bcf	3,6	;RP1=0, select bank0
  3558  12E0  0095               	movwf	21	;volatile
  3559                           
  3560                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3561  12E1  1683               	bsf	3,5	;RP0=1, select bank1
  3562  12E2  1303               	bcf	3,6	;RP1=0, select bank1
  3563  12E3  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  3564  12E4  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  3565  12E5  3003               	movlw	3
  3566  12E6                     u3665:	
  3567  12E6  1003               	clrc
  3568  12E7  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  3569  12E8  3EFF               	addlw	-1
  3570  12E9  1D03               	skipz
  3571  12EA  2AE6               	goto	u3665
  3572  12EB  1003               	clrc
  3573  12EC  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  3574  12ED  380C               	iorlw	12
  3575  12EE  1283               	bcf	3,5	;RP0=0, select bank0
  3576  12EF  1303               	bcf	3,6	;RP1=0, select bank0
  3577  12F0  0097               	movwf	23	;volatile
  3578  12F1  0008               	return
  3579  12F2                     __end_of_PWM_DutyCycle1:	
  3580                           
  3581                           	psect	text13
  3582  13A8                     __ptext13:	
  3583 ;; *************** function _LCD_WriteString *****************
  3584 ;; Defined at:
  3585 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3588 ;;		 -> STR_4(6), display_rpm(10), STR_2(17), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;		None               void
  3593 ;; Registers used:
  3594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       2       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       2       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    6
  3607 ;; This function calls:
  3608 ;;		_LCD_WriteData
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _LCD_WriteString
  3616  13A8                     _LCD_WriteString:	
  3617  13A8                     l3041:	
  3618                           ;lcd.c: 63: while(*Str != '\0')
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3622                           
  3623  13A8  1683               	bsf	3,5	;RP0=1, select bank1
  3624  13A9  1303               	bcf	3,6	;RP1=0, select bank1
  3625  13AA  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3626  13AB  1283               	bcf	3,5	;RP0=0, select bank0
  3627  13AC  1303               	bcf	3,6	;RP1=0, select bank0
  3628  13AD  00FF               	movwf	127
  3629  13AE  1683               	bsf	3,5	;RP0=1, select bank1
  3630  13AF  1303               	bcf	3,6	;RP1=0, select bank1
  3631  13B0  084B               	movf	LCD_WriteString@Str^(0+128),w
  3632  13B1  0084               	movwf	4
  3633  13B2  1283               	bcf	3,5	;RP0=0, select bank0
  3634  13B3  1303               	bcf	3,6	;RP1=0, select bank0
  3635  13B4  160A  118A  2000  160A  118A  	fcall	stringtab
  3636  13B9  3800               	iorlw	0
  3637  13BA  1903               	btfsc	3,2
  3638  13BB  0008               	return
  3639                           
  3640                           ;lcd.c: 64: {
  3641                           ;lcd.c: 65: LCD_WriteData(*Str);
  3642  13BC  1683               	bsf	3,5	;RP0=1, select bank1
  3643  13BD  1303               	bcf	3,6	;RP1=0, select bank1
  3644  13BE  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3645  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  3646  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  3647  13C1  00FF               	movwf	127
  3648  13C2  1683               	bsf	3,5	;RP0=1, select bank1
  3649  13C3  1303               	bcf	3,6	;RP1=0, select bank1
  3650  13C4  084B               	movf	LCD_WriteString@Str^(0+128),w
  3651  13C5  0084               	movwf	4
  3652  13C6  1283               	bcf	3,5	;RP0=0, select bank0
  3653  13C7  1303               	bcf	3,6	;RP1=0, select bank0
  3654  13C8  160A  118A  2000  160A  118A  	fcall	stringtab
  3655  13CD  160A  118A  2245  160A  118A  	fcall	_LCD_WriteData
  3656                           
  3657                           ;lcd.c: 66: Str++;
  3658  13D2  3001               	movlw	1
  3659  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  3660  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  3661  13D5  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  3662  13D6  1803               	skipnc
  3663  13D7  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  3664  13D8  2BA8               	goto	l3041
  3665  13D9                     __end_of_LCD_WriteString:	
  3666                           
  3667                           	psect	text14
  3668  1245                     __ptext14:	
  3669 ;; *************** function _LCD_WriteData *****************
  3670 ;; Defined at:
  3671 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  Byte            1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  Byte            1    1[BANK1 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       1       0       0
  3687 ;;      Temps:          0       0       1       0       0
  3688 ;;      Totals:         0       0       2       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    5
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_LCD_WriteString
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _LCD_WriteData
  3701  1245                     _LCD_WriteData:	
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _LCD_WriteData: [wreg]
  3705                           ;LCD_WriteData@Byte stored from wreg
  3706  1245  1683               	bsf	3,5	;RP0=1, select bank1
  3707  1246  1303               	bcf	3,6	;RP1=0, select bank1
  3708  1247  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  3709                           
  3710                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  3711  1248  1283               	bcf	3,5	;RP0=0, select bank0
  3712  1249  1303               	bcf	3,6	;RP1=0, select bank0
  3713  124A  1409               	bsf	9,0	;volatile
  3714                           
  3715                           ;lcd.c: 51: PORTD = Byte;
  3716  124B  1683               	bsf	3,5	;RP0=1, select bank1
  3717  124C  1303               	bcf	3,6	;RP1=0, select bank1
  3718  124D  084A               	movf	LCD_WriteData@Byte^(0+128),w
  3719  124E  1283               	bcf	3,5	;RP0=0, select bank0
  3720  124F  1303               	bcf	3,6	;RP1=0, select bank0
  3721  1250  0088               	movwf	8	;volatile
  3722                           
  3723                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  3724  1251  1489               	bsf	9,1	;volatile
  3725                           
  3726                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3727  1252  303D               	movlw	61
  3728  1253  1683               	bsf	3,5	;RP0=1, select bank1
  3729  1254  1303               	bcf	3,6	;RP1=0, select bank1
  3730  1255  00C9               	movwf	??_LCD_WriteData^(0+128)
  3731  1256                     u4127:	
  3732  1256  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  3733  1257  2A56               	goto	u4127
  3734                           
  3735                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  3736  1258  1283               	bcf	3,5	;RP0=0, select bank0
  3737  1259  1303               	bcf	3,6	;RP1=0, select bank0
  3738  125A  1089               	bcf	9,1	;volatile
  3739  125B  0008               	return
  3740  125C                     __end_of_LCD_WriteData:	
  3741                           
  3742                           	psect	text15
  3743  159D                     __ptext15:	
  3744 ;; *************** function _LCD_Init *****************
  3745 ;; Defined at:
  3746 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;		None               void
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0
  3762 ;;      Temps:          0       0       2       0       0
  3763 ;;      Totals:         0       0       2       0       0
  3764 ;;Total ram usage:        2 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    6
  3767 ;; This function calls:
  3768 ;;		_LCD_WriteCmd
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _LCD_Init
  3776  159D                     _LCD_Init:	
  3777                           
  3778                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3782  159D  1683               	bsf	3,5	;RP0=1, select bank1
  3783  159E  1303               	bcf	3,6	;RP1=0, select bank1
  3784  159F  119F               	bcf	31,3	;volatile
  3785                           
  3786                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  3787  15A0  151F               	bsf	31,2	;volatile
  3788                           
  3789                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  3790  15A1  109F               	bcf	31,1	;volatile
  3791                           
  3792                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  3793  15A2  101F               	bcf	31,0	;volatile
  3794                           
  3795                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  3796  15A3  305A               	movlw	90
  3797  15A4  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3798  15A5  30C3               	movlw	195
  3799  15A6  00CB               	movwf	??_LCD_Init^(0+128)
  3800  15A7                     u4137:	
  3801  15A7  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3802  15A8  2DA7               	goto	u4137
  3803  15A9  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3804  15AA  2DA7               	goto	u4137
  3805                           
  3806                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  3807  15AB  3030               	movlw	48
  3808  15AC  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3809                           
  3810                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  3811  15B1  3018               	movlw	24
  3812  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  3813  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  3814  15B4  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3815  15B5  30EF               	movlw	239
  3816  15B6  00CB               	movwf	??_LCD_Init^(0+128)
  3817  15B7                     u4147:	
  3818  15B7  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3819  15B8  2DB7               	goto	u4147
  3820  15B9  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3821  15BA  2DB7               	goto	u4147
  3822                           
  3823                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  3824  15BB  3030               	movlw	48
  3825  15BC  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3826                           
  3827                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  3828  15C1  3099               	movlw	153
  3829  15C2  1683               	bsf	3,5	;RP0=1, select bank1
  3830  15C3  1303               	bcf	3,6	;RP1=0, select bank1
  3831  15C4  00CB               	movwf	??_LCD_Init^(0+128)
  3832  15C5                     u4157:	
  3833  15C5  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3834  15C6  2DC5               	goto	u4157
  3835                           
  3836                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  3837  15C7  3030               	movlw	48
  3838  15C8  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3839                           
  3840                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3841  15CD  303D               	movlw	61
  3842  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  3843  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  3844  15D0  00CB               	movwf	??_LCD_Init^(0+128)
  3845  15D1                     u4167:	
  3846  15D1  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3847  15D2  2DD1               	goto	u4167
  3848                           
  3849                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  3850  15D3  3038               	movlw	56
  3851  15D4  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3852                           
  3853                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3854  15D9  303D               	movlw	61
  3855  15DA  1683               	bsf	3,5	;RP0=1, select bank1
  3856  15DB  1303               	bcf	3,6	;RP1=0, select bank1
  3857  15DC  00CB               	movwf	??_LCD_Init^(0+128)
  3858  15DD                     u4177:	
  3859  15DD  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3860  15DE  2DDD               	goto	u4177
  3861                           
  3862                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  3863  15DF  3001               	movlw	1
  3864  15E0  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3865                           
  3866                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  3867  15E5  300C               	movlw	12
  3868  15E6  1683               	bsf	3,5	;RP0=1, select bank1
  3869  15E7  1303               	bcf	3,6	;RP1=0, select bank1
  3870  15E8  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  3871  15E9  30F7               	movlw	247
  3872  15EA  00CB               	movwf	??_LCD_Init^(0+128)
  3873  15EB                     u4187:	
  3874  15EB  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3875  15EC  2DEB               	goto	u4187
  3876  15ED  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  3877  15EE  2DEB               	goto	u4187
  3878                           
  3879                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  3880  15EF  300C               	movlw	12
  3881  15F0  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3882                           
  3883                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3884  15F5  303D               	movlw	61
  3885  15F6  1683               	bsf	3,5	;RP0=1, select bank1
  3886  15F7  1303               	bcf	3,6	;RP1=0, select bank1
  3887  15F8  00CB               	movwf	??_LCD_Init^(0+128)
  3888  15F9                     u4197:	
  3889  15F9  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3890  15FA  2DF9               	goto	u4197
  3891                           
  3892                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  3893  15FB  3006               	movlw	6
  3894  15FC  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  3895                           
  3896                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3897  1601  303D               	movlw	61
  3898  1602  1683               	bsf	3,5	;RP0=1, select bank1
  3899  1603  1303               	bcf	3,6	;RP1=0, select bank1
  3900  1604  00CB               	movwf	??_LCD_Init^(0+128)
  3901  1605                     u4207:	
  3902  1605  0BCB               	decfsz	??_LCD_Init^(0+128),f
  3903  1606  2E05               	goto	u4207
  3904  1607  0008               	return
  3905  1608                     __end_of_LCD_Init:	
  3906                           
  3907                           	psect	text16
  3908  12B1                     __ptext16:	
  3909 ;; *************** function _LCD_Cursor *****************
  3910 ;; Defined at:
  3911 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  Row             1    wreg     unsigned char 
  3914 ;;  Col             1    0[BANK1 ] unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  Row             1    2[BANK1 ] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;		None               void
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         0       0       1       0       0
  3927 ;;      Locals:         0       0       1       0       0
  3928 ;;      Temps:          0       0       1       0       0
  3929 ;;      Totals:         0       0       3       0       0
  3930 ;;Total ram usage:        3 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    5
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_main
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _LCD_Cursor
  3942  12B1                     _LCD_Cursor:	
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  3946                           ;LCD_Cursor@Row stored from wreg
  3947  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  3948  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  3949  12B3  00CB               	movwf	LCD_Cursor@Row^(0+128)
  3950                           
  3951                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  3952  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  3953  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  3954  12B6  1009               	bcf	9,0	;volatile
  3955                           
  3956                           ;lcd.c: 14: if (Row == 0)
  3957  12B7  1683               	bsf	3,5	;RP0=1, select bank1
  3958  12B8  1303               	bcf	3,6	;RP1=0, select bank1
  3959  12B9  08CB               	movf	LCD_Cursor@Row^(0+128),f
  3960  12BA  1D03               	skipz
  3961  12BB  2ABF               	goto	l3027
  3962                           
  3963                           ;lcd.c: 15: {
  3964                           ;lcd.c: 16: PORTD = 0x80 + Col;
  3965  12BC  0849               	movf	LCD_Cursor@Col^(0+128),w
  3966  12BD  3E80               	addlw	128
  3967  12BE  2AC3               	goto	L2
  3968  12BF                     l3027:	
  3969                           ;lcd.c: 17: }
  3970                           
  3971                           
  3972                           ;lcd.c: 18: else
  3973                           ;lcd.c: 19: {
  3974                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  3975  12BF  1683               	bsf	3,5	;RP0=1, select bank1
  3976  12C0  1303               	bcf	3,6	;RP1=0, select bank1
  3977  12C1  0849               	movf	LCD_Cursor@Col^(0+128),w
  3978  12C2  3EC0               	addlw	192
  3979  12C3                     L2:	
  3980  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  3981  12C4  1303               	bcf	3,6	;RP1=0, select bank0
  3982  12C5  0088               	movwf	8	;volatile
  3983                           
  3984                           ;lcd.c: 21: }
  3985                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  3986  12C6  1489               	bsf	9,1	;volatile
  3987                           
  3988                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3989  12C7  303D               	movlw	61
  3990  12C8  1683               	bsf	3,5	;RP0=1, select bank1
  3991  12C9  1303               	bcf	3,6	;RP1=0, select bank1
  3992  12CA  00CA               	movwf	??_LCD_Cursor^(0+128)
  3993  12CB                     u4217:	
  3994  12CB  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  3995  12CC  2ACB               	goto	u4217
  3996                           
  3997                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  3998  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  3999  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  4000  12CF  1089               	bcf	9,1	;volatile
  4001  12D0  0008               	return
  4002  12D1                     __end_of_LCD_Cursor:	
  4003                           
  4004                           	psect	text17
  4005  137F                     __ptext17:	
  4006 ;; *************** function _LCD_Clear *****************
  4007 ;; Defined at:
  4008 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;		None               void
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0
  4024 ;;      Temps:          0       0       2       0       0
  4025 ;;      Totals:         0       0       2       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    6
  4029 ;; This function calls:
  4030 ;;		_LCD_WriteCmd
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _LCD_Clear
  4038  137F                     _LCD_Clear:	
  4039                           
  4040                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4044  137F  3001               	movlw	1
  4045  1380  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  4046                           
  4047                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4048  1385  300C               	movlw	12
  4049  1386  1683               	bsf	3,5	;RP0=1, select bank1
  4050  1387  1303               	bcf	3,6	;RP1=0, select bank1
  4051  1388  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  4052  1389  30F7               	movlw	247
  4053  138A  00CB               	movwf	??_LCD_Clear^(0+128)
  4054  138B                     u4227:	
  4055  138B  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4056  138C  2B8B               	goto	u4227
  4057  138D  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4058  138E  2B8B               	goto	u4227
  4059                           
  4060                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4061  138F  300C               	movlw	12
  4062  1390  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  4063                           
  4064                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4065  1395  303D               	movlw	61
  4066  1396  1683               	bsf	3,5	;RP0=1, select bank1
  4067  1397  1303               	bcf	3,6	;RP1=0, select bank1
  4068  1398  00CB               	movwf	??_LCD_Clear^(0+128)
  4069  1399                     u4237:	
  4070  1399  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4071  139A  2B99               	goto	u4237
  4072                           
  4073                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4074  139B  3006               	movlw	6
  4075  139C  160A  118A  222E  160A  118A  	fcall	_LCD_WriteCmd
  4076                           
  4077                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4078  13A1  303D               	movlw	61
  4079  13A2  1683               	bsf	3,5	;RP0=1, select bank1
  4080  13A3  1303               	bcf	3,6	;RP1=0, select bank1
  4081  13A4  00CB               	movwf	??_LCD_Clear^(0+128)
  4082  13A5                     u4247:	
  4083  13A5  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  4084  13A6  2BA5               	goto	u4247
  4085  13A7  0008               	return
  4086  13A8                     __end_of_LCD_Clear:	
  4087                           
  4088                           	psect	text18
  4089  122E                     __ptext18:	
  4090 ;; *************** function _LCD_WriteCmd *****************
  4091 ;; Defined at:
  4092 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  Byte            1    wreg     unsigned char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  Byte            1    1[BANK1 ] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       0       0       0       0
  4107 ;;      Locals:         0       0       1       0       0
  4108 ;;      Temps:          0       0       1       0       0
  4109 ;;      Totals:         0       0       2       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    5
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_LCD_Clear
  4117 ;;		_LCD_Init
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _LCD_WriteCmd
  4123  122E                     _LCD_WriteCmd:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _LCD_WriteCmd: [wreg]
  4127                           ;LCD_WriteCmd@Byte stored from wreg
  4128  122E  1683               	bsf	3,5	;RP0=1, select bank1
  4129  122F  1303               	bcf	3,6	;RP1=0, select bank1
  4130  1230  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  4131                           
  4132                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4133  1231  1283               	bcf	3,5	;RP0=0, select bank0
  4134  1232  1303               	bcf	3,6	;RP1=0, select bank0
  4135  1233  1009               	bcf	9,0	;volatile
  4136                           
  4137                           ;lcd.c: 36: PORTD = Byte;
  4138  1234  1683               	bsf	3,5	;RP0=1, select bank1
  4139  1235  1303               	bcf	3,6	;RP1=0, select bank1
  4140  1236  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  4141  1237  1283               	bcf	3,5	;RP0=0, select bank0
  4142  1238  1303               	bcf	3,6	;RP1=0, select bank0
  4143  1239  0088               	movwf	8	;volatile
  4144                           
  4145                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4146  123A  1489               	bsf	9,1	;volatile
  4147                           
  4148                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4149  123B  303D               	movlw	61
  4150  123C  1683               	bsf	3,5	;RP0=1, select bank1
  4151  123D  1303               	bcf	3,6	;RP1=0, select bank1
  4152  123E  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  4153  123F                     u4257:	
  4154  123F  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  4155  1240  2A3F               	goto	u4257
  4156                           
  4157                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4158  1241  1283               	bcf	3,5	;RP0=0, select bank0
  4159  1242  1303               	bcf	3,6	;RP1=0, select bank0
  4160  1243  1089               	bcf	9,1	;volatile
  4161  1244  0008               	return
  4162  1245                     __end_of_LCD_WriteCmd:	
  4163                           
  4164                           	psect	text19
  4165  1208                     __ptext19:	
  4166 ;; *************** function _ADC_Init *****************
  4167 ;; Defined at:
  4168 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;		None               void
  4175 ;; Registers used:
  4176 ;;		None
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _ADC_Init
  4198  1208                     _ADC_Init:	
  4199                           
  4200                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _ADC_Init: []
  4204  1208  1683               	bsf	3,5	;RP0=1, select bank1
  4205  1209  1303               	bcf	3,6	;RP1=0, select bank1
  4206  120A  179F               	bsf	31,7	;volatile
  4207                           
  4208                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4209  120B  159F               	bsf	31,3	;volatile
  4210                           
  4211                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4212  120C  151F               	bsf	31,2	;volatile
  4213                           
  4214                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4215  120D  149F               	bsf	31,1	;volatile
  4216                           
  4217                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4218  120E  101F               	bcf	31,0	;volatile
  4219                           
  4220                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4221  120F  1283               	bcf	3,5	;RP0=0, select bank0
  4222  1210  1303               	bcf	3,6	;RP1=0, select bank0
  4223  1211  179F               	bsf	31,7	;volatile
  4224                           
  4225                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4226  1212  131F               	bcf	31,6	;volatile
  4227                           
  4228                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4229  1213  1683               	bsf	3,5	;RP0=1, select bank1
  4230  1214  1303               	bcf	3,6	;RP1=0, select bank1
  4231  1215  130C               	bcf	12,6	;volatile
  4232                           
  4233                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4234  1216  1283               	bcf	3,5	;RP0=0, select bank0
  4235  1217  1303               	bcf	3,6	;RP1=0, select bank0
  4236  1218  130C               	bcf	12,6	;volatile
  4237  1219  0008               	return
  4238  121A                     __end_of_ADC_Init:	
  4239                           
  4240                           	psect	text20
  4241  0BA8                     __ptext20:	
  4242 ;; *************** function _ISR *****************
  4243 ;; Defined at:
  4244 ;;		line 349 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;		None               void
  4251 ;; Registers used:
  4252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4258 ;;      Params:         0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0
  4260 ;;      Temps:          0       4       0       0       0
  4261 ;;      Totals:         0       4       0       0       0
  4262 ;;Total ram usage:        4 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    4
  4265 ;; This function calls:
  4266 ;;		_Fuzzy
  4267 ;;		_USART_ReceiveChar
  4268 ;;		_USART_WriteString
  4269 ;;		___lwtoft
  4270 ;;		_send
  4271 ;;		i1_PWM_DutyCycle2
  4272 ;;		i1_TIMER0_Set
  4273 ;;		i1___lwdiv
  4274 ;;		i1___wmul
  4275 ;; This function is called by:
  4276 ;;		Interrupt level 1
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _ISR
  4282  0BA8                     _ISR:	
  4283                           
  4284                           ;main.c: 352: if (PIR1bits.RCIF)
  4285  0BA8  1E8C               	btfss	12,5	;volatile
  4286  0BA9  2C6E               	goto	i1l3257
  4287                           
  4288                           ;main.c: 353: {
  4289                           ;main.c: 354: if (USART_ReceiveChar() == '0')
  4290  0BAA  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4291  0BAF  3A30               	xorlw	48
  4292  0BB0  1D03               	skipz
  4293  0BB1  2BC4               	goto	i1l3211
  4294                           
  4295                           ;main.c: 355: {
  4296                           ;main.c: 356: USART_WriteString("\n\rdesligado\n\r");
  4297  0BB2  3044               	movlw	(STR_1-__stringbase)& (0+255)
  4298  0BB3  160A  118A  2277  120A  158A  	fcall	_USART_WriteString
  4299                           
  4300                           ;main.c: 358: PWM_DutyCycle2(0);
  4301  0BB8  3000               	movlw	0
  4302  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0BBB  00BE               	movwf	i1PWM_DutyCycle2@valor
  4305  0BBC  3000               	movlw	0
  4306  0BBD  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  4307  0BBE  160A  118A  225C  120A  158A  	fcall	i1_PWM_DutyCycle2
  4308                           
  4309                           ;main.c: 359: return;
  4310  0BC3  2CE6               	goto	i1l180
  4311  0BC4                     i1l3211:	
  4312                           
  4313                           ;main.c: 360: }
  4314                           ;main.c: 362: if (USART_ReceiveChar() == '1')
  4315  0BC4  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4316  0BC9  3A31               	xorlw	49
  4317  0BCA  1D03               	skipz
  4318  0BCB  2BD2               	goto	i1l3215
  4319                           
  4320                           ;main.c: 363: {
  4321                           ;main.c: 364: setpointUI = 720;
  4322  0BCC  30D0               	movlw	208
  4323  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  4324  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  4325  0BCF  00C5               	movwf	_setpointUI^(0+128)
  4326  0BD0  3002               	movlw	2
  4327  0BD1  00C6               	movwf	(_setpointUI^(0+128)+1)
  4328  0BD2                     i1l3215:	
  4329                           
  4330                           ;main.c: 366: }
  4331                           ;main.c: 368: if (USART_ReceiveChar() == '2')
  4332  0BD2  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4333  0BD7  3A32               	xorlw	50
  4334  0BD8  1D03               	skipz
  4335  0BD9  2BE0               	goto	i1l3219
  4336                           
  4337                           ;main.c: 369: {
  4338                           ;main.c: 370: setpointUI = 1450;
  4339  0BDA  30AA               	movlw	170
  4340  0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  4341  0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  4342  0BDD  00C5               	movwf	_setpointUI^(0+128)
  4343  0BDE  3005               	movlw	5
  4344  0BDF  00C6               	movwf	(_setpointUI^(0+128)+1)
  4345  0BE0                     i1l3219:	
  4346                           
  4347                           ;main.c: 372: }
  4348                           ;main.c: 374: if (USART_ReceiveChar() == '3')
  4349  0BE0  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4350  0BE5  3A33               	xorlw	51
  4351  0BE6  1D03               	skipz
  4352  0BE7  2BEE               	goto	i1l3223
  4353                           
  4354                           ;main.c: 375: {
  4355                           ;main.c: 376: setpointUI = 2828;
  4356  0BE8  300C               	movlw	12
  4357  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  4359  0BEB  00C5               	movwf	_setpointUI^(0+128)
  4360  0BEC  300B               	movlw	11
  4361  0BED  00C6               	movwf	(_setpointUI^(0+128)+1)
  4362  0BEE                     i1l3223:	
  4363                           
  4364                           ;main.c: 378: }
  4365                           ;main.c: 380: if (USART_ReceiveChar() == '4')
  4366  0BEE  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4367  0BF3  3A34               	xorlw	52
  4368  0BF4  1D03               	skipz
  4369  0BF5  2BFC               	goto	i1l3227
  4370                           
  4371                           ;main.c: 381: {
  4372                           ;main.c: 382: setpointUI = 3256;
  4373  0BF6  30B8               	movlw	184
  4374  0BF7  1683               	bsf	3,5	;RP0=1, select bank1
  4375  0BF8  1303               	bcf	3,6	;RP1=0, select bank1
  4376  0BF9  00C5               	movwf	_setpointUI^(0+128)
  4377  0BFA  300C               	movlw	12
  4378  0BFB  00C6               	movwf	(_setpointUI^(0+128)+1)
  4379  0BFC                     i1l3227:	
  4380                           
  4381                           ;main.c: 384: }
  4382                           ;main.c: 386: if (USART_ReceiveChar() == '5')
  4383  0BFC  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4384  0C01  3A35               	xorlw	53
  4385  0C02  1D03               	skipz
  4386  0C03  2C0A               	goto	i1l3231
  4387                           
  4388                           ;main.c: 387: {
  4389                           ;main.c: 388: setpointUI = 4510;
  4390  0C04  309E               	movlw	158
  4391  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  4392  0C06  1303               	bcf	3,6	;RP1=0, select bank1
  4393  0C07  00C5               	movwf	_setpointUI^(0+128)
  4394  0C08  3011               	movlw	17
  4395  0C09  00C6               	movwf	(_setpointUI^(0+128)+1)
  4396  0C0A                     i1l3231:	
  4397                           
  4398                           ;main.c: 390: }
  4399                           ;main.c: 392: if (USART_ReceiveChar() == '6')
  4400  0C0A  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4401  0C0F  3A36               	xorlw	54
  4402  0C10  1D03               	skipz
  4403  0C11  2C18               	goto	i1l3235
  4404                           
  4405                           ;main.c: 393: {
  4406                           ;main.c: 394: setpointUI = 5760;
  4407  0C12  3080               	movlw	128
  4408  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  4409  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  4410  0C15  00C5               	movwf	_setpointUI^(0+128)
  4411  0C16  3016               	movlw	22
  4412  0C17  00C6               	movwf	(_setpointUI^(0+128)+1)
  4413  0C18                     i1l3235:	
  4414                           
  4415                           ;main.c: 396: }
  4416                           ;main.c: 398: if (USART_ReceiveChar() == '7')
  4417  0C18  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4418  0C1D  3A37               	xorlw	55
  4419  0C1E  1D03               	skipz
  4420  0C1F  2C26               	goto	i1l3239
  4421                           
  4422                           ;main.c: 399: {
  4423                           ;main.c: 400: setpointUI = 6890;
  4424  0C20  30EA               	movlw	234
  4425  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  4426  0C22  1303               	bcf	3,6	;RP1=0, select bank1
  4427  0C23  00C5               	movwf	_setpointUI^(0+128)
  4428  0C24  301A               	movlw	26
  4429  0C25  00C6               	movwf	(_setpointUI^(0+128)+1)
  4430  0C26                     i1l3239:	
  4431                           
  4432                           ;main.c: 402: }
  4433                           ;main.c: 404: if (USART_ReceiveChar() == '8')
  4434  0C26  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4435  0C2B  3A38               	xorlw	56
  4436  0C2C  1D03               	skipz
  4437  0C2D  2C34               	goto	i1l3243
  4438                           
  4439                           ;main.c: 405: {
  4440                           ;main.c: 406: setpointUI = 8100;
  4441  0C2E  30A4               	movlw	164
  4442  0C2F  1683               	bsf	3,5	;RP0=1, select bank1
  4443  0C30  1303               	bcf	3,6	;RP1=0, select bank1
  4444  0C31  00C5               	movwf	_setpointUI^(0+128)
  4445  0C32  301F               	movlw	31
  4446  0C33  00C6               	movwf	(_setpointUI^(0+128)+1)
  4447  0C34                     i1l3243:	
  4448                           
  4449                           ;main.c: 408: }
  4450                           ;main.c: 410: if (USART_ReceiveChar() == '9')
  4451  0C34  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4452  0C39  3A39               	xorlw	57
  4453  0C3A  1D03               	skipz
  4454  0C3B  2C42               	goto	i1l3247
  4455                           
  4456                           ;main.c: 411: {
  4457                           ;main.c: 412: setpointUI = 9000;
  4458  0C3C  3028               	movlw	40
  4459  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  4460  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  4461  0C3F  00C5               	movwf	_setpointUI^(0+128)
  4462  0C40  3023               	movlw	35
  4463  0C41  00C6               	movwf	(_setpointUI^(0+128)+1)
  4464  0C42                     i1l3247:	
  4465                           
  4466                           ;main.c: 414: }
  4467                           ;main.c: 418: Fuzzy();
  4468  0C42  120A  118A  206B  120A  158A  	fcall	_Fuzzy
  4469                           
  4470                           ;main.c: 419: tf = (setpointUI - 100);
  4471  0C47  1683               	bsf	3,5	;RP0=1, select bank1
  4472  0C48  1303               	bcf	3,6	;RP1=0, select bank1
  4473  0C49  0845               	movf	_setpointUI^(0+128),w
  4474  0C4A  3E9C               	addlw	156
  4475  0C4B  00F8               	movwf	___lwtoft@c
  4476  0C4C  0846               	movf	(_setpointUI+1)^(0+128),w
  4477  0C4D  1803               	skipnc
  4478  0C4E  3E01               	addlw	1
  4479  0C4F  3EFF               	addlw	255
  4480  0C50  00F9               	movwf	___lwtoft@c+1
  4481  0C51  160A  118A  221A  120A  158A  	fcall	___lwtoft
  4482  0C56  0878               	movf	?___lwtoft,w
  4483  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0C59  00ED               	movwf	_tf
  4486  0C5A  0879               	movf	?___lwtoft+1,w
  4487  0C5B  00EE               	movwf	_tf+1
  4488  0C5C  087A               	movf	?___lwtoft+2,w
  4489  0C5D  00EF               	movwf	_tf+2
  4490                           
  4491                           ;main.c: 422: if(USART_ReceiveChar() == 'X')
  4492  0C5E  120A  118A  27E6  120A  158A  	fcall	_USART_ReceiveChar
  4493  0C63  3A58               	xorlw	88
  4494  0C64  1D03               	skipz
  4495  0C65  2C6B               	goto	i1l3255
  4496                           
  4497                           ;main.c: 423: {
  4498                           ;main.c: 424: send();
  4499  0C66  160A  118A  2608  120A  158A  	fcall	_send
  4500  0C6B                     i1l3255:	
  4501                           
  4502                           ;main.c: 425: }
  4503                           ;main.c: 427: PIR1bits.RCIF = 0;
  4504  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4506  0C6D  128C               	bcf	12,5	;volatile
  4507  0C6E                     i1l3257:	
  4508                           
  4509                           ;main.c: 428: }
  4510                           ;main.c: 431: if (PIR1bits.ADIF)
  4511  0C6E  1B0C               	btfsc	12,6	;volatile
  4512                           
  4513                           ;main.c: 432: {
  4514                           ;main.c: 436: PIR1bits.ADIF = 0;
  4515  0C6F  130C               	bcf	12,6	;volatile
  4516                           
  4517                           ;main.c: 437: }
  4518                           ;main.c: 441: if (INTCONbits.T0IF)
  4519  0C70  1D0B               	btfss	11,2	;volatile
  4520  0C71  2CE2               	goto	i1l3285
  4521                           
  4522                           ;main.c: 442: {
  4523                           ;main.c: 444: TIMER0_Set(238);
  4524  0C72  30EE               	movlw	238
  4525  0C73  160A  118A  21C5  120A  158A  	fcall	i1_TIMER0_Set
  4526                           
  4527                           ;main.c: 447: if (contagens_tm0 < 499)
  4528  0C78  3001               	movlw	1
  4529  0C79  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0C7B  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  4532  0C7C  30F3               	movlw	243
  4533  0C7D  1903               	skipnz
  4534  0C7E  023D               	subwf	_contagens_tm0^(0+128),w
  4535  0C7F  1803               	skipnc
  4536  0C80  2C8B               	goto	i1l3269
  4537                           
  4538                           ;main.c: 448: {
  4539                           ;main.c: 450: contagens_tm0++;
  4540  0C81  3001               	movlw	1
  4541  0C82  07BD               	addwf	_contagens_tm0^(0+128),f
  4542  0C83  1803               	skipnc
  4543  0C84  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  4544  0C85  3000               	movlw	0
  4545  0C86  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  4546                           
  4547                           ;main.c: 453: PORTBbits.RB6 = 1;
  4548  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0C89  1706               	bsf	6,6	;volatile
  4551                           
  4552                           ;main.c: 454: }
  4553  0C8A  2CE1               	goto	i1l3283
  4554  0C8B                     i1l3269:	
  4555                           
  4556                           ;main.c: 455: else
  4557                           ;main.c: 456: {
  4558                           ;main.c: 458: contagens_tm0 = 0;
  4559  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  4560  0C8C  1303               	bcf	3,6	;RP1=0, select bank1
  4561  0C8D  01BD               	clrf	_contagens_tm0^(0+128)
  4562  0C8E  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  4563                           
  4564                           ;main.c: 461: pulsos = (TMR1H << 8) + TMR1L;
  4565  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0C91  080F               	movf	15,w	;volatile
  4568  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  4569  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  4570  0C94  01C2               	clrf	(_pulsos+1)^(0+128)
  4571  0C95  07C2               	addwf	(_pulsos+1)^(0+128),f
  4572  0C96  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0C97  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0C98  080E               	movf	14,w	;volatile
  4575  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0C9A  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0C9B  01C1               	clrf	_pulsos^(0+128)
  4578  0C9C  07C1               	addwf	_pulsos^(0+128),f
  4579                           
  4580                           ;main.c: 462: rpm = ((pulsos / pas_cooler) * 120);
  4581  0C9D  086F               	movf	(_pas_cooler+1)^(0+128),w
  4582  0C9E  01F1               	clrf	i1___lwdiv@divisor+1
  4583  0C9F  07F1               	addwf	i1___lwdiv@divisor+1,f
  4584  0CA0  086E               	movf	_pas_cooler^(0+128),w
  4585  0CA1  01F0               	clrf	i1___lwdiv@divisor
  4586  0CA2  07F0               	addwf	i1___lwdiv@divisor,f
  4587  0CA3  0842               	movf	(_pulsos+1)^(0+128),w
  4588  0CA4  01F3               	clrf	i1___lwdiv@dividend+1
  4589  0CA5  07F3               	addwf	i1___lwdiv@dividend+1,f
  4590  0CA6  0841               	movf	_pulsos^(0+128),w
  4591  0CA7  01F2               	clrf	i1___lwdiv@dividend
  4592  0CA8  07F2               	addwf	i1___lwdiv@dividend,f
  4593  0CA9  160A  118A  240F  120A  158A  	fcall	i1___lwdiv
  4594  0CAE  0871               	movf	?i1___lwdiv+1,w
  4595  0CAF  01F9               	clrf	i1___wmul@multiplier+1
  4596  0CB0  07F9               	addwf	i1___wmul@multiplier+1,f
  4597  0CB1  0870               	movf	?i1___lwdiv,w
  4598  0CB2  01F8               	clrf	i1___wmul@multiplier
  4599  0CB3  07F8               	addwf	i1___wmul@multiplier,f
  4600  0CB4  3078               	movlw	120
  4601  0CB5  00FA               	movwf	i1___wmul@multiplicand
  4602  0CB6  3000               	movlw	0
  4603  0CB7  00FB               	movwf	i1___wmul@multiplicand+1
  4604  0CB8  160A  118A  2313  120A  158A  	fcall	i1___wmul
  4605  0CBD  0879               	movf	?i1___wmul+1,w
  4606  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  4608  0CC0  01C4               	clrf	(_rpm+1)^(0+128)
  4609  0CC1  07C4               	addwf	(_rpm+1)^(0+128),f
  4610  0CC2  0878               	movf	?i1___wmul,w
  4611  0CC3  01C3               	clrf	_rpm^(0+128)
  4612  0CC4  07C3               	addwf	_rpm^(0+128),f
  4613                           
  4614                           ;main.c: 466: rpm = rpm / 40;
  4615  0CC5  3028               	movlw	40
  4616  0CC6  00F0               	movwf	i1___lwdiv@divisor
  4617  0CC7  3000               	movlw	0
  4618  0CC8  00F1               	movwf	i1___lwdiv@divisor+1
  4619  0CC9  0844               	movf	(_rpm+1)^(0+128),w
  4620  0CCA  01F3               	clrf	i1___lwdiv@dividend+1
  4621  0CCB  07F3               	addwf	i1___lwdiv@dividend+1,f
  4622  0CCC  0843               	movf	_rpm^(0+128),w
  4623  0CCD  01F2               	clrf	i1___lwdiv@dividend
  4624  0CCE  07F2               	addwf	i1___lwdiv@dividend,f
  4625  0CCF  160A  118A  240F  120A  158A  	fcall	i1___lwdiv
  4626  0CD4  0871               	movf	?i1___lwdiv+1,w
  4627  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  4628  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  4629  0CD7  01C4               	clrf	(_rpm+1)^(0+128)
  4630  0CD8  07C4               	addwf	(_rpm+1)^(0+128),f
  4631  0CD9  0870               	movf	?i1___lwdiv,w
  4632  0CDA  01C3               	clrf	_rpm^(0+128)
  4633  0CDB  07C3               	addwf	_rpm^(0+128),f
  4634                           
  4635                           ;main.c: 469: TMR1L = 0x00;
  4636  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  4638  0CDE  018E               	clrf	14	;volatile
  4639                           
  4640                           ;main.c: 470: TMR1H = 0x00;
  4641  0CDF  018F               	clrf	15	;volatile
  4642                           
  4643                           ;main.c: 473: PORTBbits.RB6 = 0;
  4644  0CE0  1306               	bcf	6,6	;volatile
  4645  0CE1                     i1l3283:	
  4646                           
  4647                           ;main.c: 474: }
  4648                           ;main.c: 477: INTCONbits.T0IF = 0;
  4649  0CE1  110B               	bcf	11,2	;volatile
  4650  0CE2                     i1l3285:	
  4651                           
  4652                           ;main.c: 478: }
  4653                           ;main.c: 481: if (PIR1bits.TMR1IF)
  4654  0CE2  180C               	btfsc	12,0	;volatile
  4655                           
  4656                           ;main.c: 482: {
  4657                           ;main.c: 486: PIR1bits.TMR1IF = 0;
  4658  0CE3  100C               	bcf	12,0	;volatile
  4659                           
  4660                           ;main.c: 487: }
  4661                           ;main.c: 490: if (PIR1bits.SSPIF)
  4662  0CE4  198C               	btfsc	12,3	;volatile
  4663                           
  4664                           ;main.c: 491: {
  4665                           ;main.c: 495: PIR1bits.SSPIF = 0;
  4666  0CE5  118C               	bcf	12,3	;volatile
  4667  0CE6                     i1l180:	
  4668  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0CE8  086C               	movf	??_ISR+3,w
  4671  0CE9  00FF               	movwf	127
  4672  0CEA  086B               	movf	??_ISR+2,w
  4673  0CEB  008A               	movwf	10
  4674  0CEC  086A               	movf	??_ISR+1,w
  4675  0CED  0084               	movwf	4
  4676  0CEE  0E69               	swapf	??_ISR^0,w
  4677  0CEF  0083               	movwf	3
  4678  0CF0  0EFE               	swapf	126,f
  4679  0CF1  0E7E               	swapf	126,w
  4680  0CF2  0009               	retfie
  4681  0CF3                     __end_of_ISR:	
  4682                           
  4683                           	psect	intentry
  4684  0004                     __pintentry:	
  4685                           ;incstack = 0
  4686                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4687                           
  4688  0004                     interrupt_function:	
  4689  007E                     saved_w	set	btemp
  4690  0004  00FE               	movwf	btemp
  4691  0005  0E03               	swapf	3,w
  4692  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0008  00E9               	movwf	??_ISR
  4695  0009  0804               	movf	4,w
  4696  000A  00EA               	movwf	??_ISR+1
  4697  000B  080A               	movf	10,w
  4698  000C  00EB               	movwf	??_ISR+2
  4699  000D  087F               	movf	btemp+1,w
  4700  000E  00EC               	movwf	??_ISR+3
  4701  000F  120A  158A  2BA8   	ljmp	_ISR
  4702                           
  4703                           	psect	text21
  4704  140F                     __ptext21:	
  4705 ;; *************** function i1___lwdiv *****************
  4706 ;; Defined at:
  4707 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  divisor         2    0[COMMON] unsigned int 
  4710 ;;  dividend        2    2[COMMON] unsigned int 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  __lwdiv         2    5[COMMON] unsigned int 
  4713 ;;  __lwdiv         1    7[COMMON] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    0[COMMON] unsigned int 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4723 ;;      Params:         4       0       0       0       0
  4724 ;;      Locals:         3       0       0       0       0
  4725 ;;      Temps:          1       0       0       0       0
  4726 ;;      Totals:         8       0       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_ISR
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function i1___lwdiv
  4738  140F                     i1___lwdiv:	
  4739                           
  4740                           ;incstack = 0
  4741                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4742  140F  01F5               	clrf	i1___lwdiv@quotient
  4743  1410  01F6               	clrf	i1___lwdiv@quotient+1
  4744  1411  0871               	movf	i1___lwdiv@divisor+1,w
  4745  1412  0470               	iorwf	i1___lwdiv@divisor,w
  4746  1413  1903               	skipnz
  4747  1414  2C46               	goto	i1l3191
  4748  1415  01F7               	clrf	i1___lwdiv@counter
  4749  1416  0AF7               	incf	i1___lwdiv@counter,f
  4750  1417                     i1l3179:	
  4751  1417  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  4752  1418  2C25               	goto	i1l3181
  4753  1419  3001               	movlw	1
  4754  141A                     u387_25:	
  4755  141A  1003               	clrc
  4756  141B  0DF0               	rlf	i1___lwdiv@divisor,f
  4757  141C  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4758  141D  3EFF               	addlw	-1
  4759  141E  1D03               	skipz
  4760  141F  2C1A               	goto	u387_25
  4761  1420  3001               	movlw	1
  4762  1421  00F4               	movwf	??i1___lwdiv
  4763  1422  0874               	movf	??i1___lwdiv,w
  4764  1423  07F7               	addwf	i1___lwdiv@counter,f
  4765  1424  2C17               	goto	i1l3179
  4766  1425                     i1l3181:	
  4767  1425  3001               	movlw	1
  4768  1426                     u389_25:	
  4769  1426  1003               	clrc
  4770  1427  0DF5               	rlf	i1___lwdiv@quotient,f
  4771  1428  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4772  1429  3EFF               	addlw	-1
  4773  142A  1D03               	skipz
  4774  142B  2C26               	goto	u389_25
  4775  142C  0871               	movf	i1___lwdiv@divisor+1,w
  4776  142D  0273               	subwf	i1___lwdiv@dividend+1,w
  4777  142E  1D03               	skipz
  4778  142F  2C32               	goto	u390_25
  4779  1430  0870               	movf	i1___lwdiv@divisor,w
  4780  1431  0272               	subwf	i1___lwdiv@dividend,w
  4781  1432                     u390_25:	
  4782  1432  1C03               	skipc
  4783  1433  2C3B               	goto	i1l3187
  4784  1434  0870               	movf	i1___lwdiv@divisor,w
  4785  1435  02F2               	subwf	i1___lwdiv@dividend,f
  4786  1436  0871               	movf	i1___lwdiv@divisor+1,w
  4787  1437  1C03               	skipc
  4788  1438  03F3               	decf	i1___lwdiv@dividend+1,f
  4789  1439  02F3               	subwf	i1___lwdiv@dividend+1,f
  4790  143A  1475               	bsf	i1___lwdiv@quotient,0
  4791  143B                     i1l3187:	
  4792  143B  3001               	movlw	1
  4793  143C                     u391_25:	
  4794  143C  1003               	clrc
  4795  143D  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4796  143E  0CF0               	rrf	i1___lwdiv@divisor,f
  4797  143F  3EFF               	addlw	-1
  4798  1440  1D03               	skipz
  4799  1441  2C3C               	goto	u391_25
  4800  1442  3001               	movlw	1
  4801  1443  02F7               	subwf	i1___lwdiv@counter,f
  4802  1444  1D03               	btfss	3,2
  4803  1445  2C25               	goto	i1l3181
  4804  1446                     i1l3191:	
  4805  1446  0876               	movf	i1___lwdiv@quotient+1,w
  4806  1447  01F1               	clrf	?i1___lwdiv+1
  4807  1448  07F1               	addwf	?i1___lwdiv+1,f
  4808  1449  0875               	movf	i1___lwdiv@quotient,w
  4809  144A  01F0               	clrf	?i1___lwdiv
  4810  144B  07F0               	addwf	?i1___lwdiv,f
  4811  144C  0008               	return
  4812  144D                     __end_ofi1___lwdiv:	
  4813                           
  4814                           	psect	text22
  4815  11C5                     __ptext22:	
  4816 ;; *************** function i1_TIMER0_Set *****************
  4817 ;; Defined at:
  4818 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  contagens       1    wreg     unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  contagens       1    0[COMMON] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		wreg
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       0       0       0       0
  4833 ;;      Locals:         1       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0
  4835 ;;      Totals:         1       0       0       0       0
  4836 ;;Total ram usage:        1 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_ISR
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function i1_TIMER0_Set
  4847  11C5                     i1_TIMER0_Set:	
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in i1_TIMER0_Set: [wreg]
  4851                           ;i1TIMER0_Set@contagens stored from wreg
  4852  11C5  00F0               	movwf	i1TIMER0_Set@contagens
  4853                           
  4854                           ;timers.c: 22: TMR0 = contagens;
  4855  11C6  0870               	movf	i1TIMER0_Set@contagens,w
  4856  11C7  1283               	bcf	3,5	;RP0=0, select bank0
  4857  11C8  1303               	bcf	3,6	;RP1=0, select bank0
  4858  11C9  0081               	movwf	1	;volatile
  4859  11CA  0008               	return
  4860  11CB                     __end_ofi1_TIMER0_Set:	
  4861                           
  4862                           	psect	text23
  4863  1608                     __ptext23:	
  4864 ;; *************** function _send *****************
  4865 ;; Defined at:
  4866 ;;		line 102 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  index           1    4[BANK0 ] unsigned char 
  4871 ;;  velocidade      2    2[BANK0 ] unsigned int 
  4872 ;;  checksum        1    1[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         0       0       0       0       0
  4883 ;;      Locals:         0       4       0       0       0
  4884 ;;      Temps:          0       1       0       0       0
  4885 ;;      Totals:         0       5       0       0       0
  4886 ;;Total ram usage:        5 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    1
  4889 ;; This function calls:
  4890 ;;		_USART_WriteChar
  4891 ;;		i1___wmul
  4892 ;; This function is called by:
  4893 ;;		_ISR
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _send
  4899  1608                     _send:	
  4900                           
  4901                           ;main.c: 106: buffer[0] = '#';
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4905  1608  3023               	movlw	35
  4906  1609  1283               	bcf	3,5	;RP0=0, select bank0
  4907  160A  1303               	bcf	3,6	;RP1=0, select bank0
  4908  160B  00A0               	movwf	??_send
  4909  160C  0820               	movf	??_send,w
  4910  160D  1683               	bsf	3,5	;RP0=1, select bank3
  4911  160E  1703               	bsf	3,6	;RP1=1, select bank3
  4912  160F  0090               	movwf	_buffer^(0+384)
  4913                           
  4914                           ;main.c: 107: buffer[1] = '$';
  4915  1610  3024               	movlw	36
  4916  1611  1283               	bcf	3,5	;RP0=0, select bank0
  4917  1612  1303               	bcf	3,6	;RP1=0, select bank0
  4918  1613  00A0               	movwf	??_send
  4919  1614  0820               	movf	??_send,w
  4920  1615  1683               	bsf	3,5	;RP0=1, select bank3
  4921  1616  1703               	bsf	3,6	;RP1=1, select bank3
  4922  1617  0091               	movwf	(_buffer^(0+384)+1)
  4923                           
  4924                           ;main.c: 108: buffer[2] = ':';
  4925  1618  303A               	movlw	58
  4926  1619  1283               	bcf	3,5	;RP0=0, select bank0
  4927  161A  1303               	bcf	3,6	;RP1=0, select bank0
  4928  161B  00A0               	movwf	??_send
  4929  161C  0820               	movf	??_send,w
  4930  161D  1683               	bsf	3,5	;RP0=1, select bank3
  4931  161E  1703               	bsf	3,6	;RP1=1, select bank3
  4932  161F  0092               	movwf	(_buffer^(0+384)+2)
  4933                           
  4934                           ;main.c: 111: unsigned int velocidade = rpm * 40;
  4935  1620  1683               	bsf	3,5	;RP0=1, select bank1
  4936  1621  1303               	bcf	3,6	;RP1=0, select bank1
  4937  1622  0844               	movf	(_rpm+1)^(0+128),w
  4938  1623  01F9               	clrf	i1___wmul@multiplier+1
  4939  1624  07F9               	addwf	i1___wmul@multiplier+1,f
  4940  1625  0843               	movf	_rpm^(0+128),w
  4941  1626  01F8               	clrf	i1___wmul@multiplier
  4942  1627  07F8               	addwf	i1___wmul@multiplier,f
  4943  1628  3028               	movlw	40
  4944  1629  00FA               	movwf	i1___wmul@multiplicand
  4945  162A  3000               	movlw	0
  4946  162B  00FB               	movwf	i1___wmul@multiplicand+1
  4947  162C  160A  118A  2313  160A  118A  	fcall	i1___wmul
  4948  1631  0879               	movf	?i1___wmul+1,w
  4949  1632  1283               	bcf	3,5	;RP0=0, select bank0
  4950  1633  1303               	bcf	3,6	;RP1=0, select bank0
  4951  1634  01A3               	clrf	send@velocidade+1
  4952  1635  07A3               	addwf	send@velocidade+1,f
  4953  1636  0878               	movf	?i1___wmul,w
  4954  1637  01A2               	clrf	send@velocidade
  4955  1638  07A2               	addwf	send@velocidade,f
  4956                           
  4957                           ;main.c: 112: buffer[3] = (velocidade >> 8) & 0xFF;
  4958  1639  0823               	movf	send@velocidade+1,w
  4959  163A  00A0               	movwf	??_send
  4960  163B  0820               	movf	??_send,w
  4961  163C  1683               	bsf	3,5	;RP0=1, select bank3
  4962  163D  1703               	bsf	3,6	;RP1=1, select bank3
  4963  163E  0093               	movwf	(_buffer^(0+384)+3)
  4964                           
  4965                           ;main.c: 113: buffer[4] = velocidade & 0xFF;
  4966  163F  1283               	bcf	3,5	;RP0=0, select bank0
  4967  1640  1303               	bcf	3,6	;RP1=0, select bank0
  4968  1641  0822               	movf	send@velocidade,w
  4969  1642  00A0               	movwf	??_send
  4970  1643  0820               	movf	??_send,w
  4971  1644  1683               	bsf	3,5	;RP0=1, select bank3
  4972  1645  1703               	bsf	3,6	;RP1=1, select bank3
  4973  1646  0094               	movwf	(_buffer^(0+384)+4)
  4974                           
  4975                           ;main.c: 114: buffer[5] = 0;
  4976  1647  0195               	clrf	(_buffer^(0+384)+5)
  4977                           
  4978                           ;main.c: 116: unsigned char checksum = 0x00;
  4979  1648  1283               	bcf	3,5	;RP0=0, select bank0
  4980  1649  1303               	bcf	3,6	;RP1=0, select bank0
  4981  164A  01A1               	clrf	send@checksum
  4982                           
  4983                           ;main.c: 117: for (unsigned char index = 0; index < 6; index++)
  4984  164B  01A4               	clrf	send@index
  4985  164C  3006               	movlw	6
  4986  164D  0224               	subwf	send@index,w
  4987  164E  1803               	btfsc	3,0
  4988  164F  2E6C               	goto	i1l2757
  4989  1650                     i1l2749:	
  4990                           
  4991                           ;main.c: 118: {
  4992                           ;main.c: 119: USART_WriteChar(buffer[index]);
  4993  1650  0824               	movf	send@index,w
  4994  1651  3E90               	addlw	_buffer& (0+255)
  4995  1652  0084               	movwf	4
  4996  1653  1783               	bsf	3,7	;select IRP bank3
  4997  1654  0800               	movf	0,w
  4998  1655  160A  118A  21CB  160A  118A  	fcall	_USART_WriteChar
  4999                           
  5000                           ;main.c: 120: checksum ^= buffer[index];
  5001  165A  1283               	bcf	3,5	;RP0=0, select bank0
  5002  165B  1303               	bcf	3,6	;RP1=0, select bank0
  5003  165C  0824               	movf	send@index,w
  5004  165D  3E90               	addlw	_buffer& (0+255)
  5005  165E  0084               	movwf	4
  5006  165F  1783               	bsf	3,7	;select IRP bank3
  5007  1660  0800               	movf	0,w
  5008  1661  00A0               	movwf	??_send
  5009  1662  0820               	movf	??_send,w
  5010  1663  06A1               	xorwf	send@checksum,f
  5011  1664  3001               	movlw	1
  5012  1665  00A0               	movwf	??_send
  5013  1666  0820               	movf	??_send,w
  5014  1667  07A4               	addwf	send@index,f
  5015  1668  3006               	movlw	6
  5016  1669  0224               	subwf	send@index,w
  5017  166A  1C03               	skipc
  5018  166B  2E50               	goto	i1l2749
  5019  166C                     i1l2757:	
  5020                           
  5021                           ;main.c: 121: }
  5022                           ;main.c: 122: buffer[6] = checksum;
  5023  166C  0821               	movf	send@checksum,w
  5024  166D  00A0               	movwf	??_send
  5025  166E  0820               	movf	??_send,w
  5026  166F  1683               	bsf	3,5	;RP0=1, select bank3
  5027  1670  1703               	bsf	3,6	;RP1=1, select bank3
  5028  1671  0096               	movwf	(_buffer^(0+384)+6)
  5029                           
  5030                           ;main.c: 123: USART_WriteChar(buffer[6]);
  5031  1672  0816               	movf	(_buffer^(0+384)+6),w
  5032  1673  160A  118A  21CB   	fcall	_USART_WriteChar
  5033  1676  0008               	return
  5034  1677                     __end_of_send:	
  5035                           
  5036                           	psect	text24
  5037  1313                     __ptext24:	
  5038 ;; *************** function i1___wmul *****************
  5039 ;; Defined at:
  5040 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  multiplier      2    8[COMMON] unsigned int 
  5043 ;;  multiplicand    2   10[COMMON] unsigned int 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  __wmul          2   12[COMMON] unsigned int 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2    8[COMMON] unsigned int 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         4       0       0       0       0
  5056 ;;      Locals:         2       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0
  5058 ;;      Totals:         6       0       0       0       0
  5059 ;;Total ram usage:        6 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_send
  5065 ;;		_ISR
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function i1___wmul
  5071  1313                     i1___wmul:	
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5075  1313  01FC               	clrf	i1___wmul@product
  5076  1314  01FD               	clrf	i1___wmul@product+1
  5077  1315                     i1l2721:	
  5078  1315  1C78               	btfss	i1___wmul@multiplier,0
  5079  1316  2B1D               	goto	i1l595
  5080  1317  087A               	movf	i1___wmul@multiplicand,w
  5081  1318  07FC               	addwf	i1___wmul@product,f
  5082  1319  1803               	skipnc
  5083  131A  0AFD               	incf	i1___wmul@product+1,f
  5084  131B  087B               	movf	i1___wmul@multiplicand+1,w
  5085  131C  07FD               	addwf	i1___wmul@product+1,f
  5086  131D                     i1l595:	
  5087  131D  3001               	movlw	1
  5088  131E                     u333_25:	
  5089  131E  1003               	clrc
  5090  131F  0DFA               	rlf	i1___wmul@multiplicand,f
  5091  1320  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5092  1321  3EFF               	addlw	-1
  5093  1322  1D03               	skipz
  5094  1323  2B1E               	goto	u333_25
  5095  1324  3001               	movlw	1
  5096  1325                     u334_25:	
  5097  1325  1003               	clrc
  5098  1326  0CF9               	rrf	i1___wmul@multiplier+1,f
  5099  1327  0CF8               	rrf	i1___wmul@multiplier,f
  5100  1328  3EFF               	addlw	-1
  5101  1329  1D03               	skipz
  5102  132A  2B25               	goto	u334_25
  5103  132B  0879               	movf	i1___wmul@multiplier+1,w
  5104  132C  0478               	iorwf	i1___wmul@multiplier,w
  5105  132D  1D03               	skipz
  5106  132E  2B15               	goto	i1l2721
  5107  132F  087D               	movf	i1___wmul@product+1,w
  5108  1330  01F9               	clrf	?i1___wmul+1
  5109  1331  07F9               	addwf	?i1___wmul+1,f
  5110  1332  087C               	movf	i1___wmul@product,w
  5111  1333  01F8               	clrf	?i1___wmul
  5112  1334  07F8               	addwf	?i1___wmul,f
  5113  1335  0008               	return
  5114  1336                     __end_ofi1___wmul:	
  5115                           
  5116                           	psect	text25
  5117  07E6                     __ptext25:	
  5118 ;; *************** function _USART_ReceiveChar *****************
  5119 ;; Defined at:
  5120 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  byte            1    4[COMMON] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      unsigned char 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5134 ;;      Params:         0       0       0       0       0
  5135 ;;      Locals:         1       0       0       0       0
  5136 ;;      Temps:          1       0       0       0       0
  5137 ;;      Totals:         2       0       0       0       0
  5138 ;;Total ram usage:        2 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    2
  5141 ;; This function calls:
  5142 ;;		_USART_WriteString
  5143 ;; This function is called by:
  5144 ;;		_ISR
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _USART_ReceiveChar
  5150  07E6                     _USART_ReceiveChar:	
  5151                           
  5152                           ;usart.c: 65: unsigned char byte;
  5153                           ;usart.c: 67: if (!OERR)
  5154                           
  5155                           ;incstack = 0
  5156                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5157  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5158  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  5159  07E8  1898               	btfsc	24,1	;volatile
  5160  07E9  2FEF               	goto	i1l2909
  5161                           
  5162                           ;usart.c: 68: {
  5163                           ;usart.c: 69: byte = RCREG;
  5164  07EA  081A               	movf	26,w	;volatile
  5165  07EB  00F3               	movwf	??_USART_ReceiveChar
  5166  07EC  0873               	movf	??_USART_ReceiveChar,w
  5167  07ED  00F4               	movwf	USART_ReceiveChar@byte
  5168  07EE  2FFB               	goto	i1l2917
  5169  07EF                     i1l2909:	
  5170                           ;usart.c: 71: }
  5171                           
  5172                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5173                           
  5174                           
  5175                           ;usart.c: 72: else
  5176                           ;usart.c: 73: {
  5177                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5178  07EF  300B               	movlw	(STR_5-__stringbase)& (0+255)
  5179  07F0  160A  118A  2277   	fcall	_USART_WriteString
  5180                           
  5181                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5182  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5183  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5184  07F5  1218               	bcf	24,4	;volatile
  5185                           
  5186                           ;usart.c: 77: byte = RCREG;
  5187  07F6  081A               	movf	26,w	;volatile
  5188  07F7  00F3               	movwf	??_USART_ReceiveChar
  5189  07F8  0873               	movf	??_USART_ReceiveChar,w
  5190  07F9  00F4               	movwf	USART_ReceiveChar@byte
  5191                           
  5192                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5193  07FA  1618               	bsf	24,4	;volatile
  5194  07FB                     i1l2917:	
  5195                           
  5196                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5197  07FB  128C               	bcf	12,5	;volatile
  5198                           
  5199                           ;usart.c: 80: }
  5200                           ;usart.c: 82: return(byte);
  5201  07FC  0874               	movf	USART_ReceiveChar@byte,w
  5202  07FD  0008               	return
  5203  07FE                     __end_of_USART_ReceiveChar:	
  5204                           
  5205                           	psect	text26
  5206  1277                     __ptext26:	
  5207 ;; *************** function _USART_WriteString *****************
  5208 ;; Defined at:
  5209 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  str             1    wreg     PTR const unsigned char 
  5212 ;;		 -> STR_5(40), STR_1(14), 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  str             1    2[COMMON] PTR const unsigned char 
  5215 ;;		 -> STR_5(40), STR_1(14), 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;		None               void
  5218 ;; Registers used:
  5219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5225 ;;      Params:         0       0       0       0       0
  5226 ;;      Locals:         1       0       0       0       0
  5227 ;;      Temps:          1       0       0       0       0
  5228 ;;      Totals:         2       0       0       0       0
  5229 ;;Total ram usage:        2 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    1
  5232 ;; This function calls:
  5233 ;;		_USART_WriteChar
  5234 ;; This function is called by:
  5235 ;;		_ISR
  5236 ;;		_USART_ReceiveChar
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _USART_WriteString
  5242  1277                     _USART_WriteString:	
  5243                           
  5244                           ;incstack = 0
  5245                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5246                           ;USART_WriteString@str stored from wreg
  5247  1277  00F2               	movwf	USART_WriteString@str
  5248  1278                     i1l2487:	
  5249                           ;usart.c: 54: while(*str != '\0')
  5250                           
  5251  1278  0872               	movf	USART_WriteString@str,w
  5252  1279  0084               	movwf	4
  5253  127A  160A  118A  200A  160A  118A  	fcall	stringdir
  5254  127F  3800               	iorlw	0
  5255  1280  1903               	btfsc	3,2
  5256  1281  0008               	return
  5257                           
  5258                           ;usart.c: 55: {
  5259                           ;usart.c: 56: USART_WriteChar(*str);
  5260  1282  0872               	movf	USART_WriteString@str,w
  5261  1283  0084               	movwf	4
  5262  1284  160A  118A  200A  160A  118A  	fcall	stringdir
  5263  1289  160A  118A  21CB  160A  118A  	fcall	_USART_WriteChar
  5264                           
  5265                           ;usart.c: 57: str++;
  5266  128E  3001               	movlw	1
  5267  128F  00F1               	movwf	??_USART_WriteString
  5268  1290  0871               	movf	??_USART_WriteString,w
  5269  1291  07F2               	addwf	USART_WriteString@str,f
  5270  1292  2A78               	goto	i1l2487
  5271  1293                     __end_of_USART_WriteString:	
  5272                           
  5273                           	psect	text27
  5274  11CB                     __ptext27:	
  5275 ;; *************** function _USART_WriteChar *****************
  5276 ;; Defined at:
  5277 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  byte            1    wreg     unsigned char 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  byte            1    0[COMMON] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;		None               void
  5284 ;; Registers used:
  5285 ;;		wreg
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5291 ;;      Params:         0       0       0       0       0
  5292 ;;      Locals:         1       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0
  5294 ;;      Totals:         1       0       0       0       0
  5295 ;;Total ram usage:        1 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_send
  5301 ;;		_USART_WriteString
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _USART_WriteChar
  5307  11CB                     _USART_WriteChar:	
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in _USART_WriteChar: [wreg]
  5311                           ;USART_WriteChar@byte stored from wreg
  5312  11CB  00F0               	movwf	USART_WriteChar@byte
  5313  11CC                     i1l224:	
  5314                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5315                           
  5316  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  5317  11CD  1303               	bcf	3,6	;RP1=0, select bank0
  5318  11CE  1E0C               	btfss	12,4	;volatile
  5319  11CF  29CC               	goto	i1l224
  5320                           
  5321                           ;usart.c: 47: TXREG = byte;
  5322  11D0  0870               	movf	USART_WriteChar@byte,w
  5323  11D1  0099               	movwf	25	;volatile
  5324  11D2  0008               	return
  5325  11D3                     __end_of_USART_WriteChar:	
  5326                           
  5327                           	psect	text28
  5328  006B                     __ptext28:	
  5329 ;; *************** function _Fuzzy *****************
  5330 ;; Defined at:
  5331 ;;		line 148 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  a               2   59[BANK0 ] int 
  5336 ;;  a               2   57[BANK0 ] int 
  5337 ;;  a               2   55[BANK0 ] int 
  5338 ;;  deltaRpm        3   70[BANK0 ] float 
  5339 ;;  aumenta         3   67[BANK0 ] float 
  5340 ;;  reduz           3   64[BANK0 ] float 
  5341 ;;  mantem          3   61[BANK0 ] float 
  5342 ;;  tip             3   52[BANK0 ] float 
  5343 ;;  freio           2   50[BANK0 ] unsigned int 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5353 ;;      Params:         0       0       0       0       0
  5354 ;;      Locals:         0      23       0       0       0
  5355 ;;      Temps:          0       0       0       0       0
  5356 ;;      Totals:         0      23       0       0       0
  5357 ;;Total ram usage:       23 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    3
  5360 ;; This function calls:
  5361 ;;		___ftadd
  5362 ;;		___ftdiv
  5363 ;;		___ftge
  5364 ;;		___ftmul
  5365 ;;		___ftneg
  5366 ;;		___fttol
  5367 ;;		___lwtoft
  5368 ;;		_max_val
  5369 ;;		_trapmf
  5370 ;;		_trimf
  5371 ;;		i1_PWM_DutyCycle2
  5372 ;; This function is called by:
  5373 ;;		_ISR
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _Fuzzy
  5379  006B                     _Fuzzy:	
  5380                           
  5381                           ;main.c: 159: setpoint = (float)setpointUI;
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5385  006B  1683               	bsf	3,5	;RP0=1, select bank1
  5386  006C  1303               	bcf	3,6	;RP1=0, select bank1
  5387  006D  0846               	movf	(_setpointUI+1)^(0+128),w
  5388  006E  01F9               	clrf	___lwtoft@c+1
  5389  006F  07F9               	addwf	___lwtoft@c+1,f
  5390  0070  0845               	movf	_setpointUI^(0+128),w
  5391  0071  01F8               	clrf	___lwtoft@c
  5392  0072  07F8               	addwf	___lwtoft@c,f
  5393  0073  160A  118A  221A  120A  118A  	fcall	___lwtoft
  5394  0078  0878               	movf	?___lwtoft,w
  5395  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5396  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5397  007B  00EB               	movwf	_setpoint^(0+128)
  5398  007C  0879               	movf	?___lwtoft+1,w
  5399  007D  00EC               	movwf	(_setpoint+1)^(0+128)
  5400  007E  087A               	movf	?___lwtoft+2,w
  5401  007F  00ED               	movwf	(_setpoint+2)^(0+128)
  5402                           
  5403                           ;main.c: 160: float deltaRpm = 0;
  5404  0080  3000               	movlw	0
  5405  0081  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0082  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0083  00E6               	movwf	Fuzzy@deltaRpm
  5408  0084  3000               	movlw	0
  5409  0085  00E7               	movwf	Fuzzy@deltaRpm+1
  5410  0086  3000               	movlw	0
  5411  0087  00E8               	movwf	Fuzzy@deltaRpm+2
  5412                           
  5413                           ;main.c: 163: unsigned int freio = 0;
  5414  0088  01D2               	clrf	Fuzzy@freio
  5415  0089  01D3               	clrf	Fuzzy@freio+1
  5416                           
  5417                           ;main.c: 169: float mantem = 0;
  5418  008A  3000               	movlw	0
  5419  008B  00DD               	movwf	Fuzzy@mantem
  5420  008C  3000               	movlw	0
  5421  008D  00DE               	movwf	Fuzzy@mantem+1
  5422  008E  3000               	movlw	0
  5423  008F  00DF               	movwf	Fuzzy@mantem+2
  5424                           
  5425                           ;main.c: 170: float reduz = 0;
  5426  0090  3000               	movlw	0
  5427  0091  00E0               	movwf	Fuzzy@reduz
  5428  0092  3000               	movlw	0
  5429  0093  00E1               	movwf	Fuzzy@reduz+1
  5430  0094  3000               	movlw	0
  5431  0095  00E2               	movwf	Fuzzy@reduz+2
  5432                           
  5433                           ;main.c: 171: float aumenta = 0;
  5434  0096  3000               	movlw	0
  5435  0097  00E3               	movwf	Fuzzy@aumenta
  5436  0098  3000               	movlw	0
  5437  0099  00E4               	movwf	Fuzzy@aumenta+1
  5438  009A  3000               	movlw	0
  5439  009B  00E5               	movwf	Fuzzy@aumenta+2
  5440                           
  5441                           ;main.c: 172: float tip;
  5442                           ;main.c: 173: fitemp = 0;
  5443  009C  3000               	movlw	0
  5444  009D  1683               	bsf	3,5	;RP0=1, select bank1
  5445  009E  1303               	bcf	3,6	;RP1=0, select bank1
  5446  009F  00A3               	movwf	_fitemp^(0+128)
  5447  00A0  3000               	movlw	0
  5448  00A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5449  00A2  3000               	movlw	0
  5450  00A3  00A5               	movwf	(_fitemp+2)^(0+128)
  5451                           
  5452                           ;main.c: 176: deltaRpm = (setpoint - tf);
  5453  00A4  086B               	movf	_setpoint^(0+128),w
  5454  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5455  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  5456  00A7  00A3               	movwf	___ftadd@f1
  5457  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  5458  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  5459  00AA  086C               	movf	(_setpoint+1)^(0+128),w
  5460  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  5461  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  5462  00AD  00A4               	movwf	___ftadd@f1+1
  5463  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  5464  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  5465  00B0  086D               	movf	(_setpoint+2)^(0+128),w
  5466  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  5467  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  5468  00B3  00A5               	movwf	___ftadd@f1+2
  5469  00B4  086D               	movf	_tf,w
  5470  00B5  00A0               	movwf	___ftneg@f1
  5471  00B6  086E               	movf	_tf+1,w
  5472  00B7  00A1               	movwf	___ftneg@f1+1
  5473  00B8  086F               	movf	_tf+2,w
  5474  00B9  00A2               	movwf	___ftneg@f1+2
  5475  00BA  160A  118A  21E3  120A  118A  	fcall	___ftneg
  5476  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5477  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5478  00C1  0820               	movf	?___ftneg,w
  5479  00C2  00A6               	movwf	___ftadd@f2
  5480  00C3  0821               	movf	?___ftneg+1,w
  5481  00C4  00A7               	movwf	___ftadd@f2+1
  5482  00C5  0822               	movf	?___ftneg+2,w
  5483  00C6  00A8               	movwf	___ftadd@f2+2
  5484  00C7  120A  158A  217B  120A  118A  	fcall	___ftadd
  5485  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  5486  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  5487  00CE  0823               	movf	?___ftadd,w
  5488  00CF  00E6               	movwf	Fuzzy@deltaRpm
  5489  00D0  0824               	movf	?___ftadd+1,w
  5490  00D1  00E7               	movwf	Fuzzy@deltaRpm+1
  5491  00D2  0825               	movf	?___ftadd+2,w
  5492  00D3  00E8               	movwf	Fuzzy@deltaRpm+2
  5493                           
  5494                           ;main.c: 177: deltaRpm = (deltaRpm/100);
  5495  00D4  3000               	movlw	0
  5496  00D5  00B0               	movwf	___ftdiv@f2
  5497  00D6  30C8               	movlw	200
  5498  00D7  00B1               	movwf	___ftdiv@f2+1
  5499  00D8  3042               	movlw	66
  5500  00D9  00B2               	movwf	___ftdiv@f2+2
  5501  00DA  0866               	movf	Fuzzy@deltaRpm,w
  5502  00DB  00B3               	movwf	___ftdiv@f1
  5503  00DC  0867               	movf	Fuzzy@deltaRpm+1,w
  5504  00DD  00B4               	movwf	___ftdiv@f1+1
  5505  00DE  0868               	movf	Fuzzy@deltaRpm+2,w
  5506  00DF  00B5               	movwf	___ftdiv@f1+2
  5507  00E0  160A  118A  2677  120A  118A  	fcall	___ftdiv
  5508  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5509  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5510  00E7  0830               	movf	?___ftdiv,w
  5511  00E8  00E6               	movwf	Fuzzy@deltaRpm
  5512  00E9  0831               	movf	?___ftdiv+1,w
  5513  00EA  00E7               	movwf	Fuzzy@deltaRpm+1
  5514  00EB  0832               	movf	?___ftdiv+2,w
  5515  00EC  00E8               	movwf	Fuzzy@deltaRpm+2
  5516                           
  5517                           ;main.c: 179: deltaV = deltaRpm;
  5518  00ED  0866               	movf	Fuzzy@deltaRpm,w
  5519  00EE  00B0               	movwf	___fttol@f1
  5520  00EF  0867               	movf	Fuzzy@deltaRpm+1,w
  5521  00F0  00B1               	movwf	___fttol@f1+1
  5522  00F1  0868               	movf	Fuzzy@deltaRpm+2,w
  5523  00F2  00B2               	movwf	___fttol@f1+2
  5524  00F3  120A  158A  2004  120A  118A  	fcall	___fttol
  5525  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  5526  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  5527  00FA  0831               	movf	?___fttol+1,w
  5528  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  5529  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  5530  00FD  01C0               	clrf	(_deltaV+1)^(0+128)
  5531  00FE  07C0               	addwf	(_deltaV+1)^(0+128),f
  5532  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  5533  0100  1303               	bcf	3,6	;RP1=0, select bank0
  5534  0101  0830               	movf	?___fttol,w
  5535  0102  1683               	bsf	3,5	;RP0=1, select bank1
  5536  0103  1303               	bcf	3,6	;RP1=0, select bank1
  5537  0104  01BF               	clrf	_deltaV^(0+128)
  5538  0105  07BF               	addwf	_deltaV^(0+128),f
  5539                           
  5540                           ;main.c: 181: if (deltaRpm <0)
  5541  0106  1283               	bcf	3,5	;RP0=0, select bank0
  5542  0107  1303               	bcf	3,6	;RP1=0, select bank0
  5543  0108  0866               	movf	Fuzzy@deltaRpm,w
  5544  0109  00B0               	movwf	___ftge@ff1
  5545  010A  0867               	movf	Fuzzy@deltaRpm+1,w
  5546  010B  00B1               	movwf	___ftge@ff1+1
  5547  010C  0868               	movf	Fuzzy@deltaRpm+2,w
  5548  010D  00B2               	movwf	___ftge@ff1+2
  5549  010E  3000               	movlw	0
  5550  010F  00B3               	movwf	___ftge@ff2
  5551  0110  3000               	movlw	0
  5552  0111  00B4               	movwf	___ftge@ff2+1
  5553  0112  3000               	movlw	0
  5554  0113  00B5               	movwf	___ftge@ff2+2
  5555  0114  160A  118A  24D6  120A  118A  	fcall	___ftge
  5556  0119  1803               	btfsc	3,0
  5557  011A  293F               	goto	i1l2791
  5558                           
  5559                           ;main.c: 182: {
  5560                           ;main.c: 183: if(PORTBbits.RB1 == 0)
  5561  011B  1283               	bcf	3,5	;RP0=0, select bank0
  5562  011C  1303               	bcf	3,6	;RP1=0, select bank0
  5563  011D  1886               	btfsc	6,1	;volatile
  5564  011E  2921               	goto	i1l149
  5565                           
  5566                           ;main.c: 184: {
  5567                           ;main.c: 185: PORTBbits.RB1 = 1;
  5568  011F  1486               	bsf	6,1	;volatile
  5569                           
  5570                           ;main.c: 186: }else{
  5571  0120  2922               	goto	i1l2787
  5572  0121                     i1l149:	
  5573                           
  5574                           ;main.c: 187: PORTBbits.RB1 = 0;
  5575  0121  1086               	bcf	6,1	;volatile
  5576  0122                     i1l2787:	
  5577                           
  5578                           ;main.c: 188: }
  5579                           ;main.c: 190: deltaRpm = deltaRpm*-1;
  5580  0122  3000               	movlw	0
  5581  0123  00F8               	movwf	___ftmul@f1
  5582  0124  3080               	movlw	128
  5583  0125  00F9               	movwf	___ftmul@f1+1
  5584  0126  30BF               	movlw	191
  5585  0127  00FA               	movwf	___ftmul@f1+2
  5586  0128  0866               	movf	Fuzzy@deltaRpm,w
  5587  0129  00FB               	movwf	___ftmul@f2
  5588  012A  0867               	movf	Fuzzy@deltaRpm+1,w
  5589  012B  00FC               	movwf	___ftmul@f2+1
  5590  012C  0868               	movf	Fuzzy@deltaRpm+2,w
  5591  012D  00FD               	movwf	___ftmul@f2+2
  5592  012E  160A  118A  272F  120A  118A  	fcall	___ftmul
  5593  0133  0878               	movf	?___ftmul,w
  5594  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0135  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0136  00E6               	movwf	Fuzzy@deltaRpm
  5597  0137  0879               	movf	?___ftmul+1,w
  5598  0138  00E7               	movwf	Fuzzy@deltaRpm+1
  5599  0139  087A               	movf	?___ftmul+2,w
  5600  013A  00E8               	movwf	Fuzzy@deltaRpm+2
  5601                           
  5602                           ;main.c: 191: freio = 1;
  5603  013B  3001               	movlw	1
  5604  013C  00D2               	movwf	Fuzzy@freio
  5605  013D  3000               	movlw	0
  5606  013E  00D3               	movwf	Fuzzy@freio+1
  5607  013F                     i1l2791:	
  5608                           
  5609                           ;main.c: 192: }
  5610                           ;main.c: 194: if (deltaRpm >90) deltaRpm = 90;
  5611  013F  3000               	movlw	0
  5612  0140  1283               	bcf	3,5	;RP0=0, select bank0
  5613  0141  1303               	bcf	3,6	;RP1=0, select bank0
  5614  0142  00B0               	movwf	___ftge@ff1
  5615  0143  30B4               	movlw	180
  5616  0144  00B1               	movwf	___ftge@ff1+1
  5617  0145  3042               	movlw	66
  5618  0146  00B2               	movwf	___ftge@ff1+2
  5619  0147  0866               	movf	Fuzzy@deltaRpm,w
  5620  0148  00B3               	movwf	___ftge@ff2
  5621  0149  0867               	movf	Fuzzy@deltaRpm+1,w
  5622  014A  00B4               	movwf	___ftge@ff2+1
  5623  014B  0868               	movf	Fuzzy@deltaRpm+2,w
  5624  014C  00B5               	movwf	___ftge@ff2+2
  5625  014D  160A  118A  24D6  120A  118A  	fcall	___ftge
  5626  0152  1803               	btfsc	3,0
  5627  0153  295C               	goto	i1l2795
  5628  0154  3000               	movlw	0
  5629  0155  1283               	bcf	3,5	;RP0=0, select bank0
  5630  0156  1303               	bcf	3,6	;RP1=0, select bank0
  5631  0157  00E6               	movwf	Fuzzy@deltaRpm
  5632  0158  30B4               	movlw	180
  5633  0159  00E7               	movwf	Fuzzy@deltaRpm+1
  5634  015A  3042               	movlw	66
  5635  015B  00E8               	movwf	Fuzzy@deltaRpm+2
  5636  015C                     i1l2795:	
  5637                           
  5638                           ;main.c: 197: if (deltaRpm < 25)
  5639  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5640  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5641  015E  0866               	movf	Fuzzy@deltaRpm,w
  5642  015F  00B0               	movwf	___ftge@ff1
  5643  0160  0867               	movf	Fuzzy@deltaRpm+1,w
  5644  0161  00B1               	movwf	___ftge@ff1+1
  5645  0162  0868               	movf	Fuzzy@deltaRpm+2,w
  5646  0163  00B2               	movwf	___ftge@ff1+2
  5647  0164  3000               	movlw	0
  5648  0165  00B3               	movwf	___ftge@ff2
  5649  0166  30C8               	movlw	200
  5650  0167  00B4               	movwf	___ftge@ff2+1
  5651  0168  3041               	movlw	65
  5652  0169  00B5               	movwf	___ftge@ff2+2
  5653  016A  160A  118A  24D6  120A  118A  	fcall	___ftge
  5654  016F  1803               	btfsc	3,0
  5655  0170  2AD1               	goto	i1l2819
  5656                           
  5657                           ;main.c: 198: {
  5658                           ;main.c: 202: fitemp = trapmf(deltaRpm, 0,0,13,32);
  5659  0171  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0172  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0173  0866               	movf	Fuzzy@deltaRpm,w
  5662  0174  00C0               	movwf	trapmf@x
  5663  0175  0867               	movf	Fuzzy@deltaRpm+1,w
  5664  0176  00C1               	movwf	trapmf@x+1
  5665  0177  0868               	movf	Fuzzy@deltaRpm+2,w
  5666  0178  00C2               	movwf	trapmf@x+2
  5667  0179  3000               	movlw	0
  5668  017A  00C3               	movwf	trapmf@a
  5669  017B  3000               	movlw	0
  5670  017C  00C4               	movwf	trapmf@a+1
  5671  017D  3000               	movlw	0
  5672  017E  00C5               	movwf	trapmf@a+2
  5673  017F  3000               	movlw	0
  5674  0180  00C6               	movwf	trapmf@b
  5675  0181  3000               	movlw	0
  5676  0182  00C7               	movwf	trapmf@b+1
  5677  0183  3000               	movlw	0
  5678  0184  00C8               	movwf	trapmf@b+2
  5679  0185  3000               	movlw	0
  5680  0186  00C9               	movwf	trapmf@c
  5681  0187  3050               	movlw	80
  5682  0188  00CA               	movwf	trapmf@c+1
  5683  0189  3041               	movlw	65
  5684  018A  00CB               	movwf	trapmf@c+2
  5685  018B  3000               	movlw	0
  5686  018C  00CC               	movwf	trapmf@d
  5687  018D  3000               	movlw	0
  5688  018E  00CD               	movwf	trapmf@d+1
  5689  018F  3042               	movlw	66
  5690  0190  00CE               	movwf	trapmf@d+2
  5691  0191  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5692  0196  1283               	bcf	3,5	;RP0=0, select bank0
  5693  0197  1303               	bcf	3,6	;RP1=0, select bank0
  5694  0198  0840               	movf	?_trapmf,w
  5695  0199  1683               	bsf	3,5	;RP0=1, select bank1
  5696  019A  1303               	bcf	3,6	;RP1=0, select bank1
  5697  019B  00A3               	movwf	_fitemp^(0+128)
  5698  019C  1283               	bcf	3,5	;RP0=0, select bank0
  5699  019D  1303               	bcf	3,6	;RP1=0, select bank0
  5700  019E  0841               	movf	?_trapmf+1,w
  5701  019F  1683               	bsf	3,5	;RP0=1, select bank1
  5702  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  5703  01A1  00A4               	movwf	(_fitemp+1)^(0+128)
  5704  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  5705  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  5706  01A4  0842               	movf	?_trapmf+2,w
  5707  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  5708  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  5709  01A7  00A5               	movwf	(_fitemp+2)^(0+128)
  5710                           
  5711                           ;main.c: 205: fop_rule1 = max_val(fitemp,0.1);
  5712  01A8  0823               	movf	_fitemp^(0+128),w
  5713  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5714  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  5715  01AB  00BC               	movwf	max_val@a
  5716  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  5717  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  5718  01AE  0824               	movf	(_fitemp+1)^(0+128),w
  5719  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  5720  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  5721  01B1  00BD               	movwf	max_val@a+1
  5722  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  5723  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  5724  01B4  0825               	movf	(_fitemp+2)^(0+128),w
  5725  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  5726  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  5727  01B7  00BE               	movwf	max_val@a+2
  5728  01B8  30CD               	movlw	205
  5729  01B9  00BF               	movwf	max_val@b
  5730  01BA  30CC               	movlw	204
  5731  01BB  00C0               	movwf	max_val@b+1
  5732  01BC  303D               	movlw	61
  5733  01BD  00C1               	movwf	max_val@b+2
  5734  01BE  160A  118A  2293  120A  118A  	fcall	_max_val
  5735  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  5736  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  5737  01C5  083C               	movf	?_max_val,w
  5738  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  5739  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  5740  01C8  00A6               	movwf	_fop_rule1^(0+128)
  5741  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  5742  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  5743  01CB  083D               	movf	?_max_val+1,w
  5744  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  5745  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  5746  01CE  00A7               	movwf	(_fop_rule1+1)^(0+128)
  5747  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  5748  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  5749  01D1  083E               	movf	?_max_val+2,w
  5750  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5751  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  5752  01D4  00A8               	movwf	(_fop_rule1+2)^(0+128)
  5753                           
  5754                           ;main.c: 208: x=0;
  5755  01D5  3000               	movlw	0
  5756  01D6  00B5               	movwf	_x^(0+128)
  5757  01D7  3000               	movlw	0
  5758  01D8  00B6               	movwf	(_x+1)^(0+128)
  5759  01D9  3000               	movlw	0
  5760  01DA  00B7               	movwf	(_x+2)^(0+128)
  5761                           
  5762                           ;main.c: 209: y=0;
  5763  01DB  3000               	movlw	0
  5764  01DC  00B8               	movwf	_y^(0+128)
  5765  01DD  3000               	movlw	0
  5766  01DE  00B9               	movwf	(_y+1)^(0+128)
  5767  01DF  3000               	movlw	0
  5768  01E0  00BA               	movwf	(_y+2)^(0+128)
  5769                           
  5770                           ;main.c: 210: for (int a=0; a<=90; a++)
  5771  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  5772  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  5773  01E3  01D7               	clrf	Fuzzy@a
  5774  01E4  01D8               	clrf	Fuzzy@a+1
  5775  01E5  0858               	movf	Fuzzy@a+1,w
  5776  01E6  3A80               	xorlw	128
  5777  01E7  00FF               	movwf	127
  5778  01E8  3080               	movlw	128
  5779  01E9  027F               	subwf	127,w
  5780  01EA  1D03               	skipz
  5781  01EB  29EE               	goto	u342_25
  5782  01EC  305B               	movlw	91
  5783  01ED  0257               	subwf	Fuzzy@a,w
  5784  01EE                     u342_25:	
  5785  01EE  1803               	btfsc	3,0
  5786  01EF  2AD1               	goto	i1l2819
  5787  01F0                     i1l2809:	
  5788                           
  5789                           ;main.c: 211: {
  5790                           ;main.c: 212: y = trapmf(x,0,0,13,32);
  5791  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  5792  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  5793  01F2  0835               	movf	_x^(0+128),w
  5794  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  5795  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  5796  01F5  00C0               	movwf	trapmf@x
  5797  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  5798  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  5799  01F8  0836               	movf	(_x+1)^(0+128),w
  5800  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5801  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  5802  01FB  00C1               	movwf	trapmf@x+1
  5803  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  5804  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  5805  01FE  0837               	movf	(_x+2)^(0+128),w
  5806  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0200  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0201  00C2               	movwf	trapmf@x+2
  5809  0202  3000               	movlw	0
  5810  0203  00C3               	movwf	trapmf@a
  5811  0204  3000               	movlw	0
  5812  0205  00C4               	movwf	trapmf@a+1
  5813  0206  3000               	movlw	0
  5814  0207  00C5               	movwf	trapmf@a+2
  5815  0208  3000               	movlw	0
  5816  0209  00C6               	movwf	trapmf@b
  5817  020A  3000               	movlw	0
  5818  020B  00C7               	movwf	trapmf@b+1
  5819  020C  3000               	movlw	0
  5820  020D  00C8               	movwf	trapmf@b+2
  5821  020E  3000               	movlw	0
  5822  020F  00C9               	movwf	trapmf@c
  5823  0210  3050               	movlw	80
  5824  0211  00CA               	movwf	trapmf@c+1
  5825  0212  3041               	movlw	65
  5826  0213  00CB               	movwf	trapmf@c+2
  5827  0214  3000               	movlw	0
  5828  0215  00CC               	movwf	trapmf@d
  5829  0216  3000               	movlw	0
  5830  0217  00CD               	movwf	trapmf@d+1
  5831  0218  3042               	movlw	66
  5832  0219  00CE               	movwf	trapmf@d+2
  5833  021A  120A  158A  24F3  120A  118A  	fcall	_trapmf
  5834  021F  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0220  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0221  0840               	movf	?_trapmf,w
  5837  0222  1683               	bsf	3,5	;RP0=1, select bank1
  5838  0223  1303               	bcf	3,6	;RP1=0, select bank1
  5839  0224  00B8               	movwf	_y^(0+128)
  5840  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0227  0841               	movf	?_trapmf+1,w
  5843  0228  1683               	bsf	3,5	;RP0=1, select bank1
  5844  0229  1303               	bcf	3,6	;RP1=0, select bank1
  5845  022A  00B9               	movwf	(_y+1)^(0+128)
  5846  022B  1283               	bcf	3,5	;RP0=0, select bank0
  5847  022C  1303               	bcf	3,6	;RP1=0, select bank0
  5848  022D  0842               	movf	?_trapmf+2,w
  5849  022E  1683               	bsf	3,5	;RP0=1, select bank1
  5850  022F  1303               	bcf	3,6	;RP1=0, select bank1
  5851  0230  00BA               	movwf	(_y+2)^(0+128)
  5852                           
  5853                           ;main.c: 214: if (y > fop_rule1)
  5854  0231  0826               	movf	_fop_rule1^(0+128),w
  5855  0232  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0233  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0234  00B0               	movwf	___ftge@ff1
  5858  0235  1683               	bsf	3,5	;RP0=1, select bank1
  5859  0236  1303               	bcf	3,6	;RP1=0, select bank1
  5860  0237  0827               	movf	(_fop_rule1+1)^(0+128),w
  5861  0238  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0239  1303               	bcf	3,6	;RP1=0, select bank0
  5863  023A  00B1               	movwf	___ftge@ff1+1
  5864  023B  1683               	bsf	3,5	;RP0=1, select bank1
  5865  023C  1303               	bcf	3,6	;RP1=0, select bank1
  5866  023D  0828               	movf	(_fop_rule1+2)^(0+128),w
  5867  023E  1283               	bcf	3,5	;RP0=0, select bank0
  5868  023F  1303               	bcf	3,6	;RP1=0, select bank0
  5869  0240  00B2               	movwf	___ftge@ff1+2
  5870  0241  1683               	bsf	3,5	;RP0=1, select bank1
  5871  0242  1303               	bcf	3,6	;RP1=0, select bank1
  5872  0243  0838               	movf	_y^(0+128),w
  5873  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0246  00B3               	movwf	___ftge@ff2
  5876  0247  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0248  1303               	bcf	3,6	;RP1=0, select bank1
  5878  0249  0839               	movf	(_y+1)^(0+128),w
  5879  024A  1283               	bcf	3,5	;RP0=0, select bank0
  5880  024B  1303               	bcf	3,6	;RP1=0, select bank0
  5881  024C  00B4               	movwf	___ftge@ff2+1
  5882  024D  1683               	bsf	3,5	;RP0=1, select bank1
  5883  024E  1303               	bcf	3,6	;RP1=0, select bank1
  5884  024F  083A               	movf	(_y+2)^(0+128),w
  5885  0250  1283               	bcf	3,5	;RP0=0, select bank0
  5886  0251  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0252  00B5               	movwf	___ftge@ff2+2
  5888  0253  160A  118A  24D6  120A  118A  	fcall	___ftge
  5889  0258  1803               	btfsc	3,0
  5890  0259  2A6A               	goto	i1l2813
  5891                           
  5892                           ;main.c: 215: {
  5893                           ;main.c: 216: reduz += fop_rule1;
  5894  025A  1683               	bsf	3,5	;RP0=1, select bank1
  5895  025B  1303               	bcf	3,6	;RP1=0, select bank1
  5896  025C  0826               	movf	_fop_rule1^(0+128),w
  5897  025D  1283               	bcf	3,5	;RP0=0, select bank0
  5898  025E  1303               	bcf	3,6	;RP1=0, select bank0
  5899  025F  00A3               	movwf	___ftadd@f1
  5900  0260  1683               	bsf	3,5	;RP0=1, select bank1
  5901  0261  1303               	bcf	3,6	;RP1=0, select bank1
  5902  0262  0827               	movf	(_fop_rule1+1)^(0+128),w
  5903  0263  1283               	bcf	3,5	;RP0=0, select bank0
  5904  0264  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0265  00A4               	movwf	___ftadd@f1+1
  5906  0266  1683               	bsf	3,5	;RP0=1, select bank1
  5907  0267  1303               	bcf	3,6	;RP1=0, select bank1
  5908  0268  0828               	movf	(_fop_rule1+2)^(0+128),w
  5909  0269  2A79               	goto	L3
  5910  026A                     i1l2813:	
  5911                           ;main.c: 217: }
  5912                           
  5913                           
  5914                           ;main.c: 218: else
  5915                           ;main.c: 219: {
  5916                           ;main.c: 220: reduz += y;
  5917  026A  1683               	bsf	3,5	;RP0=1, select bank1
  5918  026B  1303               	bcf	3,6	;RP1=0, select bank1
  5919  026C  0838               	movf	_y^(0+128),w
  5920  026D  1283               	bcf	3,5	;RP0=0, select bank0
  5921  026E  1303               	bcf	3,6	;RP1=0, select bank0
  5922  026F  00A3               	movwf	___ftadd@f1
  5923  0270  1683               	bsf	3,5	;RP0=1, select bank1
  5924  0271  1303               	bcf	3,6	;RP1=0, select bank1
  5925  0272  0839               	movf	(_y+1)^(0+128),w
  5926  0273  1283               	bcf	3,5	;RP0=0, select bank0
  5927  0274  1303               	bcf	3,6	;RP1=0, select bank0
  5928  0275  00A4               	movwf	___ftadd@f1+1
  5929  0276  1683               	bsf	3,5	;RP0=1, select bank1
  5930  0277  1303               	bcf	3,6	;RP1=0, select bank1
  5931  0278  083A               	movf	(_y+2)^(0+128),w
  5932  0279                     L3:	
  5933  0279  1283               	bcf	3,5	;RP0=0, select bank0
  5934  027A  1303               	bcf	3,6	;RP1=0, select bank0
  5935  027B  00A5               	movwf	___ftadd@f1+2
  5936  027C  0860               	movf	Fuzzy@reduz,w
  5937  027D  00A6               	movwf	___ftadd@f2
  5938  027E  0861               	movf	Fuzzy@reduz+1,w
  5939  027F  00A7               	movwf	___ftadd@f2+1
  5940  0280  0862               	movf	Fuzzy@reduz+2,w
  5941  0281  00A8               	movwf	___ftadd@f2+2
  5942  0282  120A  158A  217B  120A  118A  	fcall	___ftadd
  5943  0287  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0288  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0289  0823               	movf	?___ftadd,w
  5946  028A  00E0               	movwf	Fuzzy@reduz
  5947  028B  0824               	movf	?___ftadd+1,w
  5948  028C  00E1               	movwf	Fuzzy@reduz+1
  5949  028D  0825               	movf	?___ftadd+2,w
  5950  028E  00E2               	movwf	Fuzzy@reduz+2
  5951                           
  5952                           ;main.c: 221: }
  5953                           ;main.c: 223: x=x+1;
  5954  028F  3000               	movlw	0
  5955  0290  00A3               	movwf	___ftadd@f1
  5956  0291  3080               	movlw	128
  5957  0292  00A4               	movwf	___ftadd@f1+1
  5958  0293  303F               	movlw	63
  5959  0294  00A5               	movwf	___ftadd@f1+2
  5960  0295  1683               	bsf	3,5	;RP0=1, select bank1
  5961  0296  1303               	bcf	3,6	;RP1=0, select bank1
  5962  0297  0835               	movf	_x^(0+128),w
  5963  0298  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0299  1303               	bcf	3,6	;RP1=0, select bank0
  5965  029A  00A6               	movwf	___ftadd@f2
  5966  029B  1683               	bsf	3,5	;RP0=1, select bank1
  5967  029C  1303               	bcf	3,6	;RP1=0, select bank1
  5968  029D  0836               	movf	(_x+1)^(0+128),w
  5969  029E  1283               	bcf	3,5	;RP0=0, select bank0
  5970  029F  1303               	bcf	3,6	;RP1=0, select bank0
  5971  02A0  00A7               	movwf	___ftadd@f2+1
  5972  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  5973  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  5974  02A3  0837               	movf	(_x+2)^(0+128),w
  5975  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  5976  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  5977  02A6  00A8               	movwf	___ftadd@f2+2
  5978  02A7  120A  158A  217B  120A  118A  	fcall	___ftadd
  5979  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  5980  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  5981  02AE  0823               	movf	?___ftadd,w
  5982  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  5983  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  5984  02B1  00B5               	movwf	_x^(0+128)
  5985  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5986  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5987  02B4  0824               	movf	?___ftadd+1,w
  5988  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  5989  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  5990  02B7  00B6               	movwf	(_x+1)^(0+128)
  5991  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  5992  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  5993  02BA  0825               	movf	?___ftadd+2,w
  5994  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  5995  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  5996  02BD  00B7               	movwf	(_x+2)^(0+128)
  5997  02BE  3001               	movlw	1
  5998  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  5999  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  6000  02C1  07D7               	addwf	Fuzzy@a,f
  6001  02C2  1803               	skipnc
  6002  02C3  0AD8               	incf	Fuzzy@a+1,f
  6003  02C4  3000               	movlw	0
  6004  02C5  07D8               	addwf	Fuzzy@a+1,f
  6005  02C6  0858               	movf	Fuzzy@a+1,w
  6006  02C7  3A80               	xorlw	128
  6007  02C8  00FF               	movwf	127
  6008  02C9  3080               	movlw	128
  6009  02CA  027F               	subwf	127,w
  6010  02CB  1D03               	skipz
  6011  02CC  2ACF               	goto	u344_25
  6012  02CD  305B               	movlw	91
  6013  02CE  0257               	subwf	Fuzzy@a,w
  6014  02CF                     u344_25:	
  6015  02CF  1C03               	skipc
  6016  02D0  29F0               	goto	i1l2809
  6017  02D1                     i1l2819:	
  6018                           
  6019                           ;main.c: 224: }
  6020                           ;main.c: 226: }
  6021                           ;main.c: 232: if ((deltaRpm > 20) && (deltaRpm < 70))
  6022  02D1  3000               	movlw	0
  6023  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  6024  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  6025  02D4  00B0               	movwf	___ftge@ff1
  6026  02D5  30A0               	movlw	160
  6027  02D6  00B1               	movwf	___ftge@ff1+1
  6028  02D7  3041               	movlw	65
  6029  02D8  00B2               	movwf	___ftge@ff1+2
  6030  02D9  0866               	movf	Fuzzy@deltaRpm,w
  6031  02DA  00B3               	movwf	___ftge@ff2
  6032  02DB  0867               	movf	Fuzzy@deltaRpm+1,w
  6033  02DC  00B4               	movwf	___ftge@ff2+1
  6034  02DD  0868               	movf	Fuzzy@deltaRpm+2,w
  6035  02DE  00B5               	movwf	___ftge@ff2+2
  6036  02DF  160A  118A  24D6  120A  118A  	fcall	___ftge
  6037  02E4  1803               	btfsc	3,0
  6038  02E5  2C4F               	goto	i1l2845
  6039  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6040  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  6041  02E8  0866               	movf	Fuzzy@deltaRpm,w
  6042  02E9  00B0               	movwf	___ftge@ff1
  6043  02EA  0867               	movf	Fuzzy@deltaRpm+1,w
  6044  02EB  00B1               	movwf	___ftge@ff1+1
  6045  02EC  0868               	movf	Fuzzy@deltaRpm+2,w
  6046  02ED  00B2               	movwf	___ftge@ff1+2
  6047  02EE  3000               	movlw	0
  6048  02EF  00B3               	movwf	___ftge@ff2
  6049  02F0  308C               	movlw	140
  6050  02F1  00B4               	movwf	___ftge@ff2+1
  6051  02F2  3042               	movlw	66
  6052  02F3  00B5               	movwf	___ftge@ff2+2
  6053  02F4  160A  118A  24D6  120A  118A  	fcall	___ftge
  6054  02F9  1803               	btfsc	3,0
  6055  02FA  2C4F               	goto	i1l2845
  6056                           
  6057                           ;main.c: 233: {
  6058                           ;main.c: 236: fitemp = trimf(deltaRpm, 9, 45, 81);
  6059  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  6060  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  6061  02FD  0866               	movf	Fuzzy@deltaRpm,w
  6062  02FE  00C0               	movwf	trimf@x
  6063  02FF  0867               	movf	Fuzzy@deltaRpm+1,w
  6064  0300  00C1               	movwf	trimf@x+1
  6065  0301  0868               	movf	Fuzzy@deltaRpm+2,w
  6066  0302  00C2               	movwf	trimf@x+2
  6067  0303  3000               	movlw	0
  6068  0304  00C3               	movwf	trimf@a
  6069  0305  3010               	movlw	16
  6070  0306  00C4               	movwf	trimf@a+1
  6071  0307  3041               	movlw	65
  6072  0308  00C5               	movwf	trimf@a+2
  6073  0309  3000               	movlw	0
  6074  030A  00C6               	movwf	trimf@b
  6075  030B  3034               	movlw	52
  6076  030C  00C7               	movwf	trimf@b+1
  6077  030D  3042               	movlw	66
  6078  030E  00C8               	movwf	trimf@b+2
  6079  030F  3000               	movlw	0
  6080  0310  00C9               	movwf	trimf@c
  6081  0311  30A2               	movlw	162
  6082  0312  00CA               	movwf	trimf@c+1
  6083  0313  3042               	movlw	66
  6084  0314  00CB               	movwf	trimf@c+2
  6085  0315  120A  158A  2284  120A  118A  	fcall	_trimf
  6086  031A  1283               	bcf	3,5	;RP0=0, select bank0
  6087  031B  1303               	bcf	3,6	;RP1=0, select bank0
  6088  031C  0840               	movf	?_trimf,w
  6089  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6090  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6091  031F  00A3               	movwf	_fitemp^(0+128)
  6092  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6093  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6094  0322  0841               	movf	?_trimf+1,w
  6095  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0325  00A4               	movwf	(_fitemp+1)^(0+128)
  6098  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6099  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6100  0328  0842               	movf	?_trimf+2,w
  6101  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6102  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6103  032B  00A5               	movwf	(_fitemp+2)^(0+128)
  6104                           
  6105                           ;main.c: 239: fop_rule2 = max_val(fitemp,0.1);
  6106  032C  0823               	movf	_fitemp^(0+128),w
  6107  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6108  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6109  032F  00BC               	movwf	max_val@a
  6110  0330  1683               	bsf	3,5	;RP0=1, select bank1
  6111  0331  1303               	bcf	3,6	;RP1=0, select bank1
  6112  0332  0824               	movf	(_fitemp+1)^(0+128),w
  6113  0333  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0334  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0335  00BD               	movwf	max_val@a+1
  6116  0336  1683               	bsf	3,5	;RP0=1, select bank1
  6117  0337  1303               	bcf	3,6	;RP1=0, select bank1
  6118  0338  0825               	movf	(_fitemp+2)^(0+128),w
  6119  0339  1283               	bcf	3,5	;RP0=0, select bank0
  6120  033A  1303               	bcf	3,6	;RP1=0, select bank0
  6121  033B  00BE               	movwf	max_val@a+2
  6122  033C  30CD               	movlw	205
  6123  033D  00BF               	movwf	max_val@b
  6124  033E  30CC               	movlw	204
  6125  033F  00C0               	movwf	max_val@b+1
  6126  0340  303D               	movlw	61
  6127  0341  00C1               	movwf	max_val@b+2
  6128  0342  160A  118A  2293  120A  118A  	fcall	_max_val
  6129  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6130  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6131  0349  083C               	movf	?_max_val,w
  6132  034A  1683               	bsf	3,5	;RP0=1, select bank1
  6133  034B  1303               	bcf	3,6	;RP1=0, select bank1
  6134  034C  00A9               	movwf	_fop_rule2^(0+128)
  6135  034D  1283               	bcf	3,5	;RP0=0, select bank0
  6136  034E  1303               	bcf	3,6	;RP1=0, select bank0
  6137  034F  083D               	movf	?_max_val+1,w
  6138  0350  1683               	bsf	3,5	;RP0=1, select bank1
  6139  0351  1303               	bcf	3,6	;RP1=0, select bank1
  6140  0352  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6141  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0355  083E               	movf	?_max_val+2,w
  6144  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6145  0357  1303               	bcf	3,6	;RP1=0, select bank1
  6146  0358  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6147                           
  6148                           ;main.c: 242: x=0;
  6149  0359  3000               	movlw	0
  6150  035A  00B5               	movwf	_x^(0+128)
  6151  035B  3000               	movlw	0
  6152  035C  00B6               	movwf	(_x+1)^(0+128)
  6153  035D  3000               	movlw	0
  6154  035E  00B7               	movwf	(_x+2)^(0+128)
  6155                           
  6156                           ;main.c: 243: y=0;
  6157  035F  3000               	movlw	0
  6158  0360  00B8               	movwf	_y^(0+128)
  6159  0361  3000               	movlw	0
  6160  0362  00B9               	movwf	(_y+1)^(0+128)
  6161  0363  3000               	movlw	0
  6162  0364  00BA               	movwf	(_y+2)^(0+128)
  6163                           
  6164                           ;main.c: 244: for (int a=0; a<=90; a++)
  6165  0365  1283               	bcf	3,5	;RP0=0, select bank0
  6166  0366  1303               	bcf	3,6	;RP1=0, select bank0
  6167  0367  01D9               	clrf	Fuzzy@a_247
  6168  0368  01DA               	clrf	Fuzzy@a_247+1
  6169  0369  085A               	movf	Fuzzy@a_247+1,w
  6170  036A  3A80               	xorlw	128
  6171  036B  00FF               	movwf	127
  6172  036C  3080               	movlw	128
  6173  036D  027F               	subwf	127,w
  6174  036E  1D03               	skipz
  6175  036F  2B72               	goto	u347_25
  6176  0370  305B               	movlw	91
  6177  0371  0259               	subwf	Fuzzy@a_247,w
  6178  0372                     u347_25:	
  6179  0372  1803               	btfsc	3,0
  6180  0373  2C4F               	goto	i1l2845
  6181  0374                     i1l2835:	
  6182                           
  6183                           ;main.c: 245: {
  6184                           ;main.c: 246: y = trimf(x, 9, 45, 81);
  6185  0374  1683               	bsf	3,5	;RP0=1, select bank1
  6186  0375  1303               	bcf	3,6	;RP1=0, select bank1
  6187  0376  0835               	movf	_x^(0+128),w
  6188  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6189  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6190  0379  00C0               	movwf	trimf@x
  6191  037A  1683               	bsf	3,5	;RP0=1, select bank1
  6192  037B  1303               	bcf	3,6	;RP1=0, select bank1
  6193  037C  0836               	movf	(_x+1)^(0+128),w
  6194  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6195  037E  1303               	bcf	3,6	;RP1=0, select bank0
  6196  037F  00C1               	movwf	trimf@x+1
  6197  0380  1683               	bsf	3,5	;RP0=1, select bank1
  6198  0381  1303               	bcf	3,6	;RP1=0, select bank1
  6199  0382  0837               	movf	(_x+2)^(0+128),w
  6200  0383  1283               	bcf	3,5	;RP0=0, select bank0
  6201  0384  1303               	bcf	3,6	;RP1=0, select bank0
  6202  0385  00C2               	movwf	trimf@x+2
  6203  0386  3000               	movlw	0
  6204  0387  00C3               	movwf	trimf@a
  6205  0388  3010               	movlw	16
  6206  0389  00C4               	movwf	trimf@a+1
  6207  038A  3041               	movlw	65
  6208  038B  00C5               	movwf	trimf@a+2
  6209  038C  3000               	movlw	0
  6210  038D  00C6               	movwf	trimf@b
  6211  038E  3034               	movlw	52
  6212  038F  00C7               	movwf	trimf@b+1
  6213  0390  3042               	movlw	66
  6214  0391  00C8               	movwf	trimf@b+2
  6215  0392  3000               	movlw	0
  6216  0393  00C9               	movwf	trimf@c
  6217  0394  30A2               	movlw	162
  6218  0395  00CA               	movwf	trimf@c+1
  6219  0396  3042               	movlw	66
  6220  0397  00CB               	movwf	trimf@c+2
  6221  0398  120A  158A  2284  120A  118A  	fcall	_trimf
  6222  039D  1283               	bcf	3,5	;RP0=0, select bank0
  6223  039E  1303               	bcf	3,6	;RP1=0, select bank0
  6224  039F  0840               	movf	?_trimf,w
  6225  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  6226  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  6227  03A2  00B8               	movwf	_y^(0+128)
  6228  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  6229  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  6230  03A5  0841               	movf	?_trimf+1,w
  6231  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6232  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6233  03A8  00B9               	movwf	(_y+1)^(0+128)
  6234  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6235  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6236  03AB  0842               	movf	?_trimf+2,w
  6237  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6238  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6239  03AE  00BA               	movwf	(_y+2)^(0+128)
  6240                           
  6241                           ;main.c: 248: if (y >= fop_rule2)
  6242  03AF  0838               	movf	_y^(0+128),w
  6243  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  6244  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  6245  03B2  00B0               	movwf	___ftge@ff1
  6246  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  6247  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  6248  03B5  0839               	movf	(_y+1)^(0+128),w
  6249  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  6250  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  6251  03B8  00B1               	movwf	___ftge@ff1+1
  6252  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  6253  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  6254  03BB  083A               	movf	(_y+2)^(0+128),w
  6255  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6256  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6257  03BE  00B2               	movwf	___ftge@ff1+2
  6258  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  6259  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  6260  03C1  0829               	movf	_fop_rule2^(0+128),w
  6261  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  6262  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  6263  03C4  00B3               	movwf	___ftge@ff2
  6264  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  6265  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  6266  03C7  082A               	movf	(_fop_rule2+1)^(0+128),w
  6267  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  6268  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  6269  03CA  00B4               	movwf	___ftge@ff2+1
  6270  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  6271  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  6272  03CD  082B               	movf	(_fop_rule2+2)^(0+128),w
  6273  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  6274  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  6275  03D0  00B5               	movwf	___ftge@ff2+2
  6276  03D1  160A  118A  24D6  120A  118A  	fcall	___ftge
  6277  03D6  1C03               	btfss	3,0
  6278  03D7  2BE8               	goto	i1l2839
  6279                           
  6280                           ;main.c: 249: {
  6281                           ;main.c: 250: mantem += fop_rule2;
  6282  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  6283  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  6284  03DA  0829               	movf	_fop_rule2^(0+128),w
  6285  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  6286  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  6287  03DD  00A3               	movwf	___ftadd@f1
  6288  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  6289  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  6290  03E0  082A               	movf	(_fop_rule2+1)^(0+128),w
  6291  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  6292  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  6293  03E3  00A4               	movwf	___ftadd@f1+1
  6294  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  6295  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  6296  03E6  082B               	movf	(_fop_rule2+2)^(0+128),w
  6297  03E7  2BF7               	goto	L4
  6298  03E8                     i1l2839:	
  6299                           ;main.c: 251: }
  6300                           
  6301                           
  6302                           ;main.c: 252: else
  6303                           ;main.c: 253: {
  6304                           ;main.c: 254: mantem += y;
  6305  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6306  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6307  03EA  0838               	movf	_y^(0+128),w
  6308  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  6309  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  6310  03ED  00A3               	movwf	___ftadd@f1
  6311  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  6312  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  6313  03F0  0839               	movf	(_y+1)^(0+128),w
  6314  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6315  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6316  03F3  00A4               	movwf	___ftadd@f1+1
  6317  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  6318  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  6319  03F6  083A               	movf	(_y+2)^(0+128),w
  6320  03F7                     L4:	
  6321  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6322  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6323  03F9  00A5               	movwf	___ftadd@f1+2
  6324  03FA  085D               	movf	Fuzzy@mantem,w
  6325  03FB  00A6               	movwf	___ftadd@f2
  6326  03FC  085E               	movf	Fuzzy@mantem+1,w
  6327  03FD  00A7               	movwf	___ftadd@f2+1
  6328  03FE  085F               	movf	Fuzzy@mantem+2,w
  6329  03FF  00A8               	movwf	___ftadd@f2+2
  6330  0400  120A  158A  217B  120A  118A  	fcall	___ftadd
  6331  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0407  0823               	movf	?___ftadd,w
  6334  0408  00DD               	movwf	Fuzzy@mantem
  6335  0409  0824               	movf	?___ftadd+1,w
  6336  040A  00DE               	movwf	Fuzzy@mantem+1
  6337  040B  0825               	movf	?___ftadd+2,w
  6338  040C  00DF               	movwf	Fuzzy@mantem+2
  6339                           
  6340                           ;main.c: 255: }
  6341                           ;main.c: 257: x=x+1;
  6342  040D  3000               	movlw	0
  6343  040E  00A3               	movwf	___ftadd@f1
  6344  040F  3080               	movlw	128
  6345  0410  00A4               	movwf	___ftadd@f1+1
  6346  0411  303F               	movlw	63
  6347  0412  00A5               	movwf	___ftadd@f1+2
  6348  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6349  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6350  0415  0835               	movf	_x^(0+128),w
  6351  0416  1283               	bcf	3,5	;RP0=0, select bank0
  6352  0417  1303               	bcf	3,6	;RP1=0, select bank0
  6353  0418  00A6               	movwf	___ftadd@f2
  6354  0419  1683               	bsf	3,5	;RP0=1, select bank1
  6355  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6356  041B  0836               	movf	(_x+1)^(0+128),w
  6357  041C  1283               	bcf	3,5	;RP0=0, select bank0
  6358  041D  1303               	bcf	3,6	;RP1=0, select bank0
  6359  041E  00A7               	movwf	___ftadd@f2+1
  6360  041F  1683               	bsf	3,5	;RP0=1, select bank1
  6361  0420  1303               	bcf	3,6	;RP1=0, select bank1
  6362  0421  0837               	movf	(_x+2)^(0+128),w
  6363  0422  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0423  1303               	bcf	3,6	;RP1=0, select bank0
  6365  0424  00A8               	movwf	___ftadd@f2+2
  6366  0425  120A  158A  217B  120A  118A  	fcall	___ftadd
  6367  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6368  042B  1303               	bcf	3,6	;RP1=0, select bank0
  6369  042C  0823               	movf	?___ftadd,w
  6370  042D  1683               	bsf	3,5	;RP0=1, select bank1
  6371  042E  1303               	bcf	3,6	;RP1=0, select bank1
  6372  042F  00B5               	movwf	_x^(0+128)
  6373  0430  1283               	bcf	3,5	;RP0=0, select bank0
  6374  0431  1303               	bcf	3,6	;RP1=0, select bank0
  6375  0432  0824               	movf	?___ftadd+1,w
  6376  0433  1683               	bsf	3,5	;RP0=1, select bank1
  6377  0434  1303               	bcf	3,6	;RP1=0, select bank1
  6378  0435  00B6               	movwf	(_x+1)^(0+128)
  6379  0436  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0437  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0438  0825               	movf	?___ftadd+2,w
  6382  0439  1683               	bsf	3,5	;RP0=1, select bank1
  6383  043A  1303               	bcf	3,6	;RP1=0, select bank1
  6384  043B  00B7               	movwf	(_x+2)^(0+128)
  6385  043C  3001               	movlw	1
  6386  043D  1283               	bcf	3,5	;RP0=0, select bank0
  6387  043E  1303               	bcf	3,6	;RP1=0, select bank0
  6388  043F  07D9               	addwf	Fuzzy@a_247,f
  6389  0440  1803               	skipnc
  6390  0441  0ADA               	incf	Fuzzy@a_247+1,f
  6391  0442  3000               	movlw	0
  6392  0443  07DA               	addwf	Fuzzy@a_247+1,f
  6393  0444  085A               	movf	Fuzzy@a_247+1,w
  6394  0445  3A80               	xorlw	128
  6395  0446  00FF               	movwf	127
  6396  0447  3080               	movlw	128
  6397  0448  027F               	subwf	127,w
  6398  0449  1D03               	skipz
  6399  044A  2C4D               	goto	u349_25
  6400  044B  305B               	movlw	91
  6401  044C  0259               	subwf	Fuzzy@a_247,w
  6402  044D                     u349_25:	
  6403  044D  1C03               	skipc
  6404  044E  2B74               	goto	i1l2835
  6405  044F                     i1l2845:	
  6406                           
  6407                           ;main.c: 258: }
  6408                           ;main.c: 260: }
  6409                           ;main.c: 266: if (deltaRpm > 70 )
  6410  044F  3000               	movlw	0
  6411  0450  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0451  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0452  00B0               	movwf	___ftge@ff1
  6414  0453  308C               	movlw	140
  6415  0454  00B1               	movwf	___ftge@ff1+1
  6416  0455  3042               	movlw	66
  6417  0456  00B2               	movwf	___ftge@ff1+2
  6418  0457  0866               	movf	Fuzzy@deltaRpm,w
  6419  0458  00B3               	movwf	___ftge@ff2
  6420  0459  0867               	movf	Fuzzy@deltaRpm+1,w
  6421  045A  00B4               	movwf	___ftge@ff2+1
  6422  045B  0868               	movf	Fuzzy@deltaRpm+2,w
  6423  045C  00B5               	movwf	___ftge@ff2+2
  6424  045D  160A  118A  24D6  120A  118A  	fcall	___ftge
  6425  0462  1803               	btfsc	3,0
  6426  0463  2DC4               	goto	i1l2869
  6427                           
  6428                           ;main.c: 267: {
  6429                           ;main.c: 270: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  6430  0464  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0465  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0466  0866               	movf	Fuzzy@deltaRpm,w
  6433  0467  00C0               	movwf	trapmf@x
  6434  0468  0867               	movf	Fuzzy@deltaRpm+1,w
  6435  0469  00C1               	movwf	trapmf@x+1
  6436  046A  0868               	movf	Fuzzy@deltaRpm+2,w
  6437  046B  00C2               	movwf	trapmf@x+2
  6438  046C  3000               	movlw	0
  6439  046D  00C3               	movwf	trapmf@a
  6440  046E  3078               	movlw	120
  6441  046F  00C4               	movwf	trapmf@a+1
  6442  0470  3042               	movlw	66
  6443  0471  00C5               	movwf	trapmf@a+2
  6444  0472  3000               	movlw	0
  6445  0473  00C6               	movwf	trapmf@b
  6446  0474  309E               	movlw	158
  6447  0475  00C7               	movwf	trapmf@b+1
  6448  0476  3042               	movlw	66
  6449  0477  00C8               	movwf	trapmf@b+2
  6450  0478  3000               	movlw	0
  6451  0479  00C9               	movwf	trapmf@c
  6452  047A  30B4               	movlw	180
  6453  047B  00CA               	movwf	trapmf@c+1
  6454  047C  3042               	movlw	66
  6455  047D  00CB               	movwf	trapmf@c+2
  6456  047E  3000               	movlw	0
  6457  047F  00CC               	movwf	trapmf@d
  6458  0480  30B4               	movlw	180
  6459  0481  00CD               	movwf	trapmf@d+1
  6460  0482  3042               	movlw	66
  6461  0483  00CE               	movwf	trapmf@d+2
  6462  0484  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6463  0489  1283               	bcf	3,5	;RP0=0, select bank0
  6464  048A  1303               	bcf	3,6	;RP1=0, select bank0
  6465  048B  0840               	movf	?_trapmf,w
  6466  048C  1683               	bsf	3,5	;RP0=1, select bank1
  6467  048D  1303               	bcf	3,6	;RP1=0, select bank1
  6468  048E  00A3               	movwf	_fitemp^(0+128)
  6469  048F  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0490  1303               	bcf	3,6	;RP1=0, select bank0
  6471  0491  0841               	movf	?_trapmf+1,w
  6472  0492  1683               	bsf	3,5	;RP0=1, select bank1
  6473  0493  1303               	bcf	3,6	;RP1=0, select bank1
  6474  0494  00A4               	movwf	(_fitemp+1)^(0+128)
  6475  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6476  0496  1303               	bcf	3,6	;RP1=0, select bank0
  6477  0497  0842               	movf	?_trapmf+2,w
  6478  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0499  1303               	bcf	3,6	;RP1=0, select bank1
  6480  049A  00A5               	movwf	(_fitemp+2)^(0+128)
  6481                           
  6482                           ;main.c: 274: fop_rule3 = max_val(fitemp,0.1);
  6483  049B  0823               	movf	_fitemp^(0+128),w
  6484  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6485  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6486  049E  00BC               	movwf	max_val@a
  6487  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6488  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  6489  04A1  0824               	movf	(_fitemp+1)^(0+128),w
  6490  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6491  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6492  04A4  00BD               	movwf	max_val@a+1
  6493  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  6494  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  6495  04A7  0825               	movf	(_fitemp+2)^(0+128),w
  6496  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  6497  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  6498  04AA  00BE               	movwf	max_val@a+2
  6499  04AB  30CD               	movlw	205
  6500  04AC  00BF               	movwf	max_val@b
  6501  04AD  30CC               	movlw	204
  6502  04AE  00C0               	movwf	max_val@b+1
  6503  04AF  303D               	movlw	61
  6504  04B0  00C1               	movwf	max_val@b+2
  6505  04B1  160A  118A  2293  120A  118A  	fcall	_max_val
  6506  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  6507  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  6508  04B8  083C               	movf	?_max_val,w
  6509  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  6510  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  6511  04BB  00AC               	movwf	_fop_rule3^(0+128)
  6512  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6513  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6514  04BE  083D               	movf	?_max_val+1,w
  6515  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  6516  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  6517  04C1  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6518  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  6519  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  6520  04C4  083E               	movf	?_max_val+2,w
  6521  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  6522  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  6523  04C7  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6524                           
  6525                           ;main.c: 277: x=0;
  6526  04C8  3000               	movlw	0
  6527  04C9  00B5               	movwf	_x^(0+128)
  6528  04CA  3000               	movlw	0
  6529  04CB  00B6               	movwf	(_x+1)^(0+128)
  6530  04CC  3000               	movlw	0
  6531  04CD  00B7               	movwf	(_x+2)^(0+128)
  6532                           
  6533                           ;main.c: 278: y=0;
  6534  04CE  3000               	movlw	0
  6535  04CF  00B8               	movwf	_y^(0+128)
  6536  04D0  3000               	movlw	0
  6537  04D1  00B9               	movwf	(_y+1)^(0+128)
  6538  04D2  3000               	movlw	0
  6539  04D3  00BA               	movwf	(_y+2)^(0+128)
  6540                           
  6541                           ;main.c: 279: for (int a=0; a<=90; a++)
  6542  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  6543  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  6544  04D6  01DB               	clrf	Fuzzy@a_248
  6545  04D7  01DC               	clrf	Fuzzy@a_248+1
  6546  04D8  085C               	movf	Fuzzy@a_248+1,w
  6547  04D9  3A80               	xorlw	128
  6548  04DA  00FF               	movwf	127
  6549  04DB  3080               	movlw	128
  6550  04DC  027F               	subwf	127,w
  6551  04DD  1D03               	skipz
  6552  04DE  2CE1               	goto	u351_25
  6553  04DF  305B               	movlw	91
  6554  04E0  025B               	subwf	Fuzzy@a_248,w
  6555  04E1                     u351_25:	
  6556  04E1  1803               	btfsc	3,0
  6557  04E2  2DC4               	goto	i1l2869
  6558  04E3                     i1l2859:	
  6559                           
  6560                           ;main.c: 280: {
  6561                           ;main.c: 281: y = trapmf(x, 62, 79, 90, 90);
  6562  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  6563  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  6564  04E5  0835               	movf	_x^(0+128),w
  6565  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  6566  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  6567  04E8  00C0               	movwf	trapmf@x
  6568  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  6569  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  6570  04EB  0836               	movf	(_x+1)^(0+128),w
  6571  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  6572  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  6573  04EE  00C1               	movwf	trapmf@x+1
  6574  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  6575  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  6576  04F1  0837               	movf	(_x+2)^(0+128),w
  6577  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6578  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6579  04F4  00C2               	movwf	trapmf@x+2
  6580  04F5  3000               	movlw	0
  6581  04F6  00C3               	movwf	trapmf@a
  6582  04F7  3078               	movlw	120
  6583  04F8  00C4               	movwf	trapmf@a+1
  6584  04F9  3042               	movlw	66
  6585  04FA  00C5               	movwf	trapmf@a+2
  6586  04FB  3000               	movlw	0
  6587  04FC  00C6               	movwf	trapmf@b
  6588  04FD  309E               	movlw	158
  6589  04FE  00C7               	movwf	trapmf@b+1
  6590  04FF  3042               	movlw	66
  6591  0500  00C8               	movwf	trapmf@b+2
  6592  0501  3000               	movlw	0
  6593  0502  00C9               	movwf	trapmf@c
  6594  0503  30B4               	movlw	180
  6595  0504  00CA               	movwf	trapmf@c+1
  6596  0505  3042               	movlw	66
  6597  0506  00CB               	movwf	trapmf@c+2
  6598  0507  3000               	movlw	0
  6599  0508  00CC               	movwf	trapmf@d
  6600  0509  30B4               	movlw	180
  6601  050A  00CD               	movwf	trapmf@d+1
  6602  050B  3042               	movlw	66
  6603  050C  00CE               	movwf	trapmf@d+2
  6604  050D  120A  158A  24F3  120A  118A  	fcall	_trapmf
  6605  0512  1283               	bcf	3,5	;RP0=0, select bank0
  6606  0513  1303               	bcf	3,6	;RP1=0, select bank0
  6607  0514  0840               	movf	?_trapmf,w
  6608  0515  1683               	bsf	3,5	;RP0=1, select bank1
  6609  0516  1303               	bcf	3,6	;RP1=0, select bank1
  6610  0517  00B8               	movwf	_y^(0+128)
  6611  0518  1283               	bcf	3,5	;RP0=0, select bank0
  6612  0519  1303               	bcf	3,6	;RP1=0, select bank0
  6613  051A  0841               	movf	?_trapmf+1,w
  6614  051B  1683               	bsf	3,5	;RP0=1, select bank1
  6615  051C  1303               	bcf	3,6	;RP1=0, select bank1
  6616  051D  00B9               	movwf	(_y+1)^(0+128)
  6617  051E  1283               	bcf	3,5	;RP0=0, select bank0
  6618  051F  1303               	bcf	3,6	;RP1=0, select bank0
  6619  0520  0842               	movf	?_trapmf+2,w
  6620  0521  1683               	bsf	3,5	;RP0=1, select bank1
  6621  0522  1303               	bcf	3,6	;RP1=0, select bank1
  6622  0523  00BA               	movwf	(_y+2)^(0+128)
  6623                           
  6624                           ;main.c: 283: if (y >= fop_rule3)
  6625  0524  0838               	movf	_y^(0+128),w
  6626  0525  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0526  1303               	bcf	3,6	;RP1=0, select bank0
  6628  0527  00B0               	movwf	___ftge@ff1
  6629  0528  1683               	bsf	3,5	;RP0=1, select bank1
  6630  0529  1303               	bcf	3,6	;RP1=0, select bank1
  6631  052A  0839               	movf	(_y+1)^(0+128),w
  6632  052B  1283               	bcf	3,5	;RP0=0, select bank0
  6633  052C  1303               	bcf	3,6	;RP1=0, select bank0
  6634  052D  00B1               	movwf	___ftge@ff1+1
  6635  052E  1683               	bsf	3,5	;RP0=1, select bank1
  6636  052F  1303               	bcf	3,6	;RP1=0, select bank1
  6637  0530  083A               	movf	(_y+2)^(0+128),w
  6638  0531  1283               	bcf	3,5	;RP0=0, select bank0
  6639  0532  1303               	bcf	3,6	;RP1=0, select bank0
  6640  0533  00B2               	movwf	___ftge@ff1+2
  6641  0534  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0535  1303               	bcf	3,6	;RP1=0, select bank1
  6643  0536  082C               	movf	_fop_rule3^(0+128),w
  6644  0537  1283               	bcf	3,5	;RP0=0, select bank0
  6645  0538  1303               	bcf	3,6	;RP1=0, select bank0
  6646  0539  00B3               	movwf	___ftge@ff2
  6647  053A  1683               	bsf	3,5	;RP0=1, select bank1
  6648  053B  1303               	bcf	3,6	;RP1=0, select bank1
  6649  053C  082D               	movf	(_fop_rule3+1)^(0+128),w
  6650  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6651  053E  1303               	bcf	3,6	;RP1=0, select bank0
  6652  053F  00B4               	movwf	___ftge@ff2+1
  6653  0540  1683               	bsf	3,5	;RP0=1, select bank1
  6654  0541  1303               	bcf	3,6	;RP1=0, select bank1
  6655  0542  082E               	movf	(_fop_rule3+2)^(0+128),w
  6656  0543  1283               	bcf	3,5	;RP0=0, select bank0
  6657  0544  1303               	bcf	3,6	;RP1=0, select bank0
  6658  0545  00B5               	movwf	___ftge@ff2+2
  6659  0546  160A  118A  24D6  120A  118A  	fcall	___ftge
  6660  054B  1C03               	btfss	3,0
  6661  054C  2D5D               	goto	i1l2863
  6662                           
  6663                           ;main.c: 284: {
  6664                           ;main.c: 285: aumenta += fop_rule3;
  6665  054D  1683               	bsf	3,5	;RP0=1, select bank1
  6666  054E  1303               	bcf	3,6	;RP1=0, select bank1
  6667  054F  082C               	movf	_fop_rule3^(0+128),w
  6668  0550  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0551  1303               	bcf	3,6	;RP1=0, select bank0
  6670  0552  00A3               	movwf	___ftadd@f1
  6671  0553  1683               	bsf	3,5	;RP0=1, select bank1
  6672  0554  1303               	bcf	3,6	;RP1=0, select bank1
  6673  0555  082D               	movf	(_fop_rule3+1)^(0+128),w
  6674  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0557  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0558  00A4               	movwf	___ftadd@f1+1
  6677  0559  1683               	bsf	3,5	;RP0=1, select bank1
  6678  055A  1303               	bcf	3,6	;RP1=0, select bank1
  6679  055B  082E               	movf	(_fop_rule3+2)^(0+128),w
  6680  055C  2D6C               	goto	L5
  6681  055D                     i1l2863:	
  6682                           ;main.c: 286: }
  6683                           
  6684                           
  6685                           ;main.c: 287: else
  6686                           ;main.c: 288: {
  6687                           ;main.c: 289: aumenta += y;
  6688  055D  1683               	bsf	3,5	;RP0=1, select bank1
  6689  055E  1303               	bcf	3,6	;RP1=0, select bank1
  6690  055F  0838               	movf	_y^(0+128),w
  6691  0560  1283               	bcf	3,5	;RP0=0, select bank0
  6692  0561  1303               	bcf	3,6	;RP1=0, select bank0
  6693  0562  00A3               	movwf	___ftadd@f1
  6694  0563  1683               	bsf	3,5	;RP0=1, select bank1
  6695  0564  1303               	bcf	3,6	;RP1=0, select bank1
  6696  0565  0839               	movf	(_y+1)^(0+128),w
  6697  0566  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0567  1303               	bcf	3,6	;RP1=0, select bank0
  6699  0568  00A4               	movwf	___ftadd@f1+1
  6700  0569  1683               	bsf	3,5	;RP0=1, select bank1
  6701  056A  1303               	bcf	3,6	;RP1=0, select bank1
  6702  056B  083A               	movf	(_y+2)^(0+128),w
  6703  056C                     L5:	
  6704  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6705  056D  1303               	bcf	3,6	;RP1=0, select bank0
  6706  056E  00A5               	movwf	___ftadd@f1+2
  6707  056F  0863               	movf	Fuzzy@aumenta,w
  6708  0570  00A6               	movwf	___ftadd@f2
  6709  0571  0864               	movf	Fuzzy@aumenta+1,w
  6710  0572  00A7               	movwf	___ftadd@f2+1
  6711  0573  0865               	movf	Fuzzy@aumenta+2,w
  6712  0574  00A8               	movwf	___ftadd@f2+2
  6713  0575  120A  158A  217B  120A  118A  	fcall	___ftadd
  6714  057A  1283               	bcf	3,5	;RP0=0, select bank0
  6715  057B  1303               	bcf	3,6	;RP1=0, select bank0
  6716  057C  0823               	movf	?___ftadd,w
  6717  057D  00E3               	movwf	Fuzzy@aumenta
  6718  057E  0824               	movf	?___ftadd+1,w
  6719  057F  00E4               	movwf	Fuzzy@aumenta+1
  6720  0580  0825               	movf	?___ftadd+2,w
  6721  0581  00E5               	movwf	Fuzzy@aumenta+2
  6722                           
  6723                           ;main.c: 290: }
  6724                           ;main.c: 292: x=x+1;
  6725  0582  3000               	movlw	0
  6726  0583  00A3               	movwf	___ftadd@f1
  6727  0584  3080               	movlw	128
  6728  0585  00A4               	movwf	___ftadd@f1+1
  6729  0586  303F               	movlw	63
  6730  0587  00A5               	movwf	___ftadd@f1+2
  6731  0588  1683               	bsf	3,5	;RP0=1, select bank1
  6732  0589  1303               	bcf	3,6	;RP1=0, select bank1
  6733  058A  0835               	movf	_x^(0+128),w
  6734  058B  1283               	bcf	3,5	;RP0=0, select bank0
  6735  058C  1303               	bcf	3,6	;RP1=0, select bank0
  6736  058D  00A6               	movwf	___ftadd@f2
  6737  058E  1683               	bsf	3,5	;RP0=1, select bank1
  6738  058F  1303               	bcf	3,6	;RP1=0, select bank1
  6739  0590  0836               	movf	(_x+1)^(0+128),w
  6740  0591  1283               	bcf	3,5	;RP0=0, select bank0
  6741  0592  1303               	bcf	3,6	;RP1=0, select bank0
  6742  0593  00A7               	movwf	___ftadd@f2+1
  6743  0594  1683               	bsf	3,5	;RP0=1, select bank1
  6744  0595  1303               	bcf	3,6	;RP1=0, select bank1
  6745  0596  0837               	movf	(_x+2)^(0+128),w
  6746  0597  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0598  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0599  00A8               	movwf	___ftadd@f2+2
  6749  059A  120A  158A  217B  120A  118A  	fcall	___ftadd
  6750  059F  1283               	bcf	3,5	;RP0=0, select bank0
  6751  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  6752  05A1  0823               	movf	?___ftadd,w
  6753  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  6754  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  6755  05A4  00B5               	movwf	_x^(0+128)
  6756  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6757  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6758  05A7  0824               	movf	?___ftadd+1,w
  6759  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  6760  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  6761  05AA  00B6               	movwf	(_x+1)^(0+128)
  6762  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  6763  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  6764  05AD  0825               	movf	?___ftadd+2,w
  6765  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  6766  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  6767  05B0  00B7               	movwf	(_x+2)^(0+128)
  6768  05B1  3001               	movlw	1
  6769  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  6770  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  6771  05B4  07DB               	addwf	Fuzzy@a_248,f
  6772  05B5  1803               	skipnc
  6773  05B6  0ADC               	incf	Fuzzy@a_248+1,f
  6774  05B7  3000               	movlw	0
  6775  05B8  07DC               	addwf	Fuzzy@a_248+1,f
  6776  05B9  085C               	movf	Fuzzy@a_248+1,w
  6777  05BA  3A80               	xorlw	128
  6778  05BB  00FF               	movwf	127
  6779  05BC  3080               	movlw	128
  6780  05BD  027F               	subwf	127,w
  6781  05BE  1D03               	skipz
  6782  05BF  2DC2               	goto	u353_25
  6783  05C0  305B               	movlw	91
  6784  05C1  025B               	subwf	Fuzzy@a_248,w
  6785  05C2                     u353_25:	
  6786  05C2  1C03               	skipc
  6787  05C3  2CE3               	goto	i1l2859
  6788  05C4                     i1l2869:	
  6789                           
  6790                           ;main.c: 293: }
  6791                           ;main.c: 295: }
  6792                           ;main.c: 298: if (deltaRpm < 25)
  6793  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  6794  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  6795  05C6  0866               	movf	Fuzzy@deltaRpm,w
  6796  05C7  00B0               	movwf	___ftge@ff1
  6797  05C8  0867               	movf	Fuzzy@deltaRpm+1,w
  6798  05C9  00B1               	movwf	___ftge@ff1+1
  6799  05CA  0868               	movf	Fuzzy@deltaRpm+2,w
  6800  05CB  00B2               	movwf	___ftge@ff1+2
  6801  05CC  3000               	movlw	0
  6802  05CD  00B3               	movwf	___ftge@ff2
  6803  05CE  30C8               	movlw	200
  6804  05CF  00B4               	movwf	___ftge@ff2+1
  6805  05D0  3041               	movlw	65
  6806  05D1  00B5               	movwf	___ftge@ff2+2
  6807  05D2  160A  118A  24D6  120A  118A  	fcall	___ftge
  6808  05D7  1803               	btfsc	3,0
  6809  05D8  2DE1               	goto	i1l2873
  6810                           
  6811                           ;main.c: 299: {
  6812                           ;main.c: 300: tip = reduz;
  6813  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  6814  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  6815  05DB  0860               	movf	Fuzzy@reduz,w
  6816  05DC  00D4               	movwf	Fuzzy@tip
  6817  05DD  0861               	movf	Fuzzy@reduz+1,w
  6818  05DE  00D5               	movwf	Fuzzy@tip+1
  6819  05DF  0862               	movf	Fuzzy@reduz+2,w
  6820  05E0  2E1A               	goto	L7
  6821  05E1                     i1l2873:	
  6822                           ;main.c: 301: }else
  6823                           
  6824                           
  6825                           ;main.c: 302: if (deltaRpm >= 25 && deltaRpm < 75)
  6826  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6827  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6828  05E3  0866               	movf	Fuzzy@deltaRpm,w
  6829  05E4  00B0               	movwf	___ftge@ff1
  6830  05E5  0867               	movf	Fuzzy@deltaRpm+1,w
  6831  05E6  00B1               	movwf	___ftge@ff1+1
  6832  05E7  0868               	movf	Fuzzy@deltaRpm+2,w
  6833  05E8  00B2               	movwf	___ftge@ff1+2
  6834  05E9  3000               	movlw	0
  6835  05EA  00B3               	movwf	___ftge@ff2
  6836  05EB  30C8               	movlw	200
  6837  05EC  00B4               	movwf	___ftge@ff2+1
  6838  05ED  3041               	movlw	65
  6839  05EE  00B5               	movwf	___ftge@ff2+2
  6840  05EF  160A  118A  24D6  120A  118A  	fcall	___ftge
  6841  05F4  1C03               	btfss	3,0
  6842  05F5  2E13               	goto	i1l2879
  6843  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  6844  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  6845  05F8  0866               	movf	Fuzzy@deltaRpm,w
  6846  05F9  00B0               	movwf	___ftge@ff1
  6847  05FA  0867               	movf	Fuzzy@deltaRpm+1,w
  6848  05FB  00B1               	movwf	___ftge@ff1+1
  6849  05FC  0868               	movf	Fuzzy@deltaRpm+2,w
  6850  05FD  00B2               	movwf	___ftge@ff1+2
  6851  05FE  3000               	movlw	0
  6852  05FF  00B3               	movwf	___ftge@ff2
  6853  0600  3096               	movlw	150
  6854  0601  00B4               	movwf	___ftge@ff2+1
  6855  0602  3042               	movlw	66
  6856  0603  00B5               	movwf	___ftge@ff2+2
  6857  0604  160A  118A  24D6  120A  118A  	fcall	___ftge
  6858  0609  1803               	btfsc	3,0
  6859  060A  2E13               	goto	i1l2879
  6860                           
  6861                           ;main.c: 303: {
  6862                           ;main.c: 304: tip = mantem;
  6863  060B  1283               	bcf	3,5	;RP0=0, select bank0
  6864  060C  1303               	bcf	3,6	;RP1=0, select bank0
  6865  060D  085D               	movf	Fuzzy@mantem,w
  6866  060E  00D4               	movwf	Fuzzy@tip
  6867  060F  085E               	movf	Fuzzy@mantem+1,w
  6868  0610  00D5               	movwf	Fuzzy@tip+1
  6869  0611  085F               	movf	Fuzzy@mantem+2,w
  6870  0612  2E1A               	goto	L7
  6871  0613                     i1l2879:	
  6872                           ;main.c: 305: }else
  6873                           
  6874                           
  6875                           ;main.c: 306: {
  6876                           ;main.c: 307: tip = aumenta;
  6877  0613  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0614  1303               	bcf	3,6	;RP1=0, select bank0
  6879  0615  0863               	movf	Fuzzy@aumenta,w
  6880  0616  00D4               	movwf	Fuzzy@tip
  6881  0617  0864               	movf	Fuzzy@aumenta+1,w
  6882  0618  00D5               	movwf	Fuzzy@tip+1
  6883  0619  0865               	movf	Fuzzy@aumenta+2,w
  6884  061A                     L7:	
  6885  061A  00D6               	movwf	Fuzzy@tip+2
  6886                           
  6887                           ;main.c: 308: }
  6888                           ;main.c: 311: total_area = 90;
  6889  061B  3000               	movlw	0
  6890  061C  1683               	bsf	3,5	;RP0=1, select bank1
  6891  061D  1303               	bcf	3,6	;RP1=0, select bank1
  6892  061E  00B2               	movwf	_total_area^(0+128)
  6893  061F  30B4               	movlw	180
  6894  0620  00B3               	movwf	(_total_area+1)^(0+128)
  6895  0621  3042               	movlw	66
  6896  0622  00B4               	movwf	(_total_area+2)^(0+128)
  6897                           
  6898                           ;main.c: 312: sum = 0;
  6899  0623  3000               	movlw	0
  6900  0624  00AF               	movwf	_sum^(0+128)
  6901  0625  3000               	movlw	0
  6902  0626  00B0               	movwf	(_sum+1)^(0+128)
  6903  0627  3000               	movlw	0
  6904  0628  00B1               	movwf	(_sum+2)^(0+128)
  6905                           
  6906                           ;main.c: 313: sum = sum + tip;
  6907  0629  1283               	bcf	3,5	;RP0=0, select bank0
  6908  062A  1303               	bcf	3,6	;RP1=0, select bank0
  6909  062B  0854               	movf	Fuzzy@tip,w
  6910  062C  00A3               	movwf	___ftadd@f1
  6911  062D  0855               	movf	Fuzzy@tip+1,w
  6912  062E  00A4               	movwf	___ftadd@f1+1
  6913  062F  0856               	movf	Fuzzy@tip+2,w
  6914  0630  00A5               	movwf	___ftadd@f1+2
  6915  0631  1683               	bsf	3,5	;RP0=1, select bank1
  6916  0632  1303               	bcf	3,6	;RP1=0, select bank1
  6917  0633  082F               	movf	_sum^(0+128),w
  6918  0634  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0635  1303               	bcf	3,6	;RP1=0, select bank0
  6920  0636  00A6               	movwf	___ftadd@f2
  6921  0637  1683               	bsf	3,5	;RP0=1, select bank1
  6922  0638  1303               	bcf	3,6	;RP1=0, select bank1
  6923  0639  0830               	movf	(_sum+1)^(0+128),w
  6924  063A  1283               	bcf	3,5	;RP0=0, select bank0
  6925  063B  1303               	bcf	3,6	;RP1=0, select bank0
  6926  063C  00A7               	movwf	___ftadd@f2+1
  6927  063D  1683               	bsf	3,5	;RP0=1, select bank1
  6928  063E  1303               	bcf	3,6	;RP1=0, select bank1
  6929  063F  0831               	movf	(_sum+2)^(0+128),w
  6930  0640  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0641  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0642  00A8               	movwf	___ftadd@f2+2
  6933  0643  120A  158A  217B  120A  118A  	fcall	___ftadd
  6934  0648  1283               	bcf	3,5	;RP0=0, select bank0
  6935  0649  1303               	bcf	3,6	;RP1=0, select bank0
  6936  064A  0823               	movf	?___ftadd,w
  6937  064B  1683               	bsf	3,5	;RP0=1, select bank1
  6938  064C  1303               	bcf	3,6	;RP1=0, select bank1
  6939  064D  00AF               	movwf	_sum^(0+128)
  6940  064E  1283               	bcf	3,5	;RP0=0, select bank0
  6941  064F  1303               	bcf	3,6	;RP1=0, select bank0
  6942  0650  0824               	movf	?___ftadd+1,w
  6943  0651  1683               	bsf	3,5	;RP0=1, select bank1
  6944  0652  1303               	bcf	3,6	;RP1=0, select bank1
  6945  0653  00B0               	movwf	(_sum+1)^(0+128)
  6946  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6947  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6948  0656  0825               	movf	?___ftadd+2,w
  6949  0657  1683               	bsf	3,5	;RP0=1, select bank1
  6950  0658  1303               	bcf	3,6	;RP1=0, select bank1
  6951  0659  00B1               	movwf	(_sum+2)^(0+128)
  6952                           
  6953                           ;main.c: 316: ativa_fan = sum/total_area;
  6954  065A  0832               	movf	_total_area^(0+128),w
  6955  065B  1283               	bcf	3,5	;RP0=0, select bank0
  6956  065C  1303               	bcf	3,6	;RP1=0, select bank0
  6957  065D  00B0               	movwf	___ftdiv@f2
  6958  065E  1683               	bsf	3,5	;RP0=1, select bank1
  6959  065F  1303               	bcf	3,6	;RP1=0, select bank1
  6960  0660  0833               	movf	(_total_area+1)^(0+128),w
  6961  0661  1283               	bcf	3,5	;RP0=0, select bank0
  6962  0662  1303               	bcf	3,6	;RP1=0, select bank0
  6963  0663  00B1               	movwf	___ftdiv@f2+1
  6964  0664  1683               	bsf	3,5	;RP0=1, select bank1
  6965  0665  1303               	bcf	3,6	;RP1=0, select bank1
  6966  0666  0834               	movf	(_total_area+2)^(0+128),w
  6967  0667  1283               	bcf	3,5	;RP0=0, select bank0
  6968  0668  1303               	bcf	3,6	;RP1=0, select bank0
  6969  0669  00B2               	movwf	___ftdiv@f2+2
  6970  066A  1683               	bsf	3,5	;RP0=1, select bank1
  6971  066B  1303               	bcf	3,6	;RP1=0, select bank1
  6972  066C  082F               	movf	_sum^(0+128),w
  6973  066D  1283               	bcf	3,5	;RP0=0, select bank0
  6974  066E  1303               	bcf	3,6	;RP1=0, select bank0
  6975  066F  00B3               	movwf	___ftdiv@f1
  6976  0670  1683               	bsf	3,5	;RP0=1, select bank1
  6977  0671  1303               	bcf	3,6	;RP1=0, select bank1
  6978  0672  0830               	movf	(_sum+1)^(0+128),w
  6979  0673  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0674  1303               	bcf	3,6	;RP1=0, select bank0
  6981  0675  00B4               	movwf	___ftdiv@f1+1
  6982  0676  1683               	bsf	3,5	;RP0=1, select bank1
  6983  0677  1303               	bcf	3,6	;RP1=0, select bank1
  6984  0678  0831               	movf	(_sum+2)^(0+128),w
  6985  0679  1283               	bcf	3,5	;RP0=0, select bank0
  6986  067A  1303               	bcf	3,6	;RP1=0, select bank0
  6987  067B  00B5               	movwf	___ftdiv@f1+2
  6988  067C  160A  118A  2677  120A  118A  	fcall	___ftdiv
  6989  0681  1283               	bcf	3,5	;RP0=0, select bank0
  6990  0682  1303               	bcf	3,6	;RP1=0, select bank0
  6991  0683  0830               	movf	?___ftdiv,w
  6992  0684  1683               	bsf	3,5	;RP0=1, select bank1
  6993  0685  1303               	bcf	3,6	;RP1=0, select bank1
  6994  0686  00A0               	movwf	_ativa_fan^(0+128)
  6995  0687  1283               	bcf	3,5	;RP0=0, select bank0
  6996  0688  1303               	bcf	3,6	;RP1=0, select bank0
  6997  0689  0831               	movf	?___ftdiv+1,w
  6998  068A  1683               	bsf	3,5	;RP0=1, select bank1
  6999  068B  1303               	bcf	3,6	;RP1=0, select bank1
  7000  068C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7001  068D  1283               	bcf	3,5	;RP0=0, select bank0
  7002  068E  1303               	bcf	3,6	;RP1=0, select bank0
  7003  068F  0832               	movf	?___ftdiv+2,w
  7004  0690  1683               	bsf	3,5	;RP0=1, select bank1
  7005  0691  1303               	bcf	3,6	;RP1=0, select bank1
  7006  0692  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7007                           
  7008                           ;main.c: 319: ativa_fan = ativa_fan*100;
  7009  0693  3000               	movlw	0
  7010  0694  00F8               	movwf	___ftmul@f1
  7011  0695  30C8               	movlw	200
  7012  0696  00F9               	movwf	___ftmul@f1+1
  7013  0697  3042               	movlw	66
  7014  0698  00FA               	movwf	___ftmul@f1+2
  7015  0699  0820               	movf	_ativa_fan^(0+128),w
  7016  069A  00FB               	movwf	___ftmul@f2
  7017  069B  0821               	movf	(_ativa_fan+1)^(0+128),w
  7018  069C  00FC               	movwf	___ftmul@f2+1
  7019  069D  0822               	movf	(_ativa_fan+2)^(0+128),w
  7020  069E  00FD               	movwf	___ftmul@f2+2
  7021  069F  160A  118A  272F  120A  118A  	fcall	___ftmul
  7022  06A4  0878               	movf	?___ftmul,w
  7023  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  7024  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  7025  06A7  00A0               	movwf	_ativa_fan^(0+128)
  7026  06A8  0879               	movf	?___ftmul+1,w
  7027  06A9  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7028  06AA  087A               	movf	?___ftmul+2,w
  7029  06AB  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7030                           
  7031                           ;main.c: 323: if (freio = 1)
  7032  06AC  3001               	movlw	1
  7033  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  7034  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  7035  06AF  00D2               	movwf	Fuzzy@freio
  7036  06B0  3000               	movlw	0
  7037  06B1  00D3               	movwf	Fuzzy@freio+1
  7038                           
  7039                           ;main.c: 324: {
  7040                           ;main.c: 325: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  7041  06B2  3000               	movlw	0
  7042  06B3  00B0               	movwf	___ftge@ff1
  7043  06B4  3000               	movlw	0
  7044  06B5  00B1               	movwf	___ftge@ff1+1
  7045  06B6  3000               	movlw	0
  7046  06B7  00B2               	movwf	___ftge@ff1+2
  7047  06B8  086D               	movf	_tf,w
  7048  06B9  00A3               	movwf	___ftadd@f1
  7049  06BA  086E               	movf	_tf+1,w
  7050  06BB  00A4               	movwf	___ftadd@f1+1
  7051  06BC  086F               	movf	_tf+2,w
  7052  06BD  00A5               	movwf	___ftadd@f1+2
  7053  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  7054  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  7055  06C0  0840               	movf	(_deltaV+1)^(0+128),w
  7056  06C1  01F9               	clrf	___lwtoft@c+1
  7057  06C2  07F9               	addwf	___lwtoft@c+1,f
  7058  06C3  083F               	movf	_deltaV^(0+128),w
  7059  06C4  01F8               	clrf	___lwtoft@c
  7060  06C5  07F8               	addwf	___lwtoft@c,f
  7061  06C6  160A  118A  221A  120A  118A  	fcall	___lwtoft
  7062  06CB  0878               	movf	?___lwtoft,w
  7063  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  7064  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  7065  06CE  00A6               	movwf	___ftadd@f2
  7066  06CF  0879               	movf	?___lwtoft+1,w
  7067  06D0  00A7               	movwf	___ftadd@f2+1
  7068  06D1  087A               	movf	?___lwtoft+2,w
  7069  06D2  00A8               	movwf	___ftadd@f2+2
  7070  06D3  120A  158A  217B  120A  118A  	fcall	___ftadd
  7071  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  7072  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  7073  06DA  0823               	movf	?___ftadd,w
  7074  06DB  00B3               	movwf	___ftge@ff2
  7075  06DC  0824               	movf	?___ftadd+1,w
  7076  06DD  00B4               	movwf	___ftge@ff2+1
  7077  06DE  0825               	movf	?___ftadd+2,w
  7078  06DF  00B5               	movwf	___ftge@ff2+2
  7079  06E0  160A  118A  24D6  120A  118A  	fcall	___ftge
  7080  06E5  1803               	btfsc	3,0
  7081  06E6  0008               	return
  7082  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7083  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7084  06E9  086D               	movf	_tf,w
  7085  06EA  00A3               	movwf	___ftadd@f1
  7086  06EB  086E               	movf	_tf+1,w
  7087  06EC  00A4               	movwf	___ftadd@f1+1
  7088  06ED  086F               	movf	_tf+2,w
  7089  06EE  00A5               	movwf	___ftadd@f1+2
  7090  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  7091  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  7092  06F1  0840               	movf	(_deltaV+1)^(0+128),w
  7093  06F2  01F9               	clrf	___lwtoft@c+1
  7094  06F3  07F9               	addwf	___lwtoft@c+1,f
  7095  06F4  083F               	movf	_deltaV^(0+128),w
  7096  06F5  01F8               	clrf	___lwtoft@c
  7097  06F6  07F8               	addwf	___lwtoft@c,f
  7098  06F7  160A  118A  221A  120A  118A  	fcall	___lwtoft
  7099  06FC  0878               	movf	?___lwtoft,w
  7100  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  7101  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  7102  06FF  00A6               	movwf	___ftadd@f2
  7103  0700  0879               	movf	?___lwtoft+1,w
  7104  0701  00A7               	movwf	___ftadd@f2+1
  7105  0702  087A               	movf	?___lwtoft+2,w
  7106  0703  00A8               	movwf	___ftadd@f2+2
  7107  0704  120A  158A  217B  120A  118A  	fcall	___ftadd
  7108  0709  1283               	bcf	3,5	;RP0=0, select bank0
  7109  070A  1303               	bcf	3,6	;RP1=0, select bank0
  7110  070B  0823               	movf	?___ftadd,w
  7111  070C  00B0               	movwf	___ftge@ff1
  7112  070D  0824               	movf	?___ftadd+1,w
  7113  070E  00B1               	movwf	___ftge@ff1+1
  7114  070F  0825               	movf	?___ftadd+2,w
  7115  0710  00B2               	movwf	___ftge@ff1+2
  7116  0711  3000               	movlw	0
  7117  0712  00B3               	movwf	___ftge@ff2
  7118  0713  307F               	movlw	127
  7119  0714  00B4               	movwf	___ftge@ff2+1
  7120  0715  3044               	movlw	68
  7121  0716  00B5               	movwf	___ftge@ff2+2
  7122  0717  160A  118A  24D6  120A  118A  	fcall	___ftge
  7123  071C  1803               	btfsc	3,0
  7124  071D  0008               	return
  7125                           
  7126                           ;main.c: 326: {
  7127                           ;main.c: 327: PWM_DutyCycle2(tf + deltaV);
  7128  071E  1683               	bsf	3,5	;RP0=1, select bank1
  7129  071F  1303               	bcf	3,6	;RP1=0, select bank1
  7130  0720  0840               	movf	(_deltaV+1)^(0+128),w
  7131  0721  01F9               	clrf	___lwtoft@c+1
  7132  0722  07F9               	addwf	___lwtoft@c+1,f
  7133  0723  083F               	movf	_deltaV^(0+128),w
  7134  0724  01F8               	clrf	___lwtoft@c
  7135  0725  07F8               	addwf	___lwtoft@c,f
  7136  0726  160A  118A  221A  120A  118A  	fcall	___lwtoft
  7137  072B  0878               	movf	?___lwtoft,w
  7138  072C  1283               	bcf	3,5	;RP0=0, select bank0
  7139  072D  1303               	bcf	3,6	;RP1=0, select bank0
  7140  072E  00A6               	movwf	___ftadd@f2
  7141  072F  0879               	movf	?___lwtoft+1,w
  7142  0730  00A7               	movwf	___ftadd@f2+1
  7143  0731  087A               	movf	?___lwtoft+2,w
  7144  0732  00A8               	movwf	___ftadd@f2+2
  7145  0733  086D               	movf	_tf,w
  7146  0734  00A3               	movwf	___ftadd@f1
  7147  0735  086E               	movf	_tf+1,w
  7148  0736  00A4               	movwf	___ftadd@f1+1
  7149  0737  086F               	movf	_tf+2,w
  7150  0738  00A5               	movwf	___ftadd@f1+2
  7151  0739  120A  158A  217B  120A  118A  	fcall	___ftadd
  7152  073E  1283               	bcf	3,5	;RP0=0, select bank0
  7153  073F  1303               	bcf	3,6	;RP1=0, select bank0
  7154  0740  0823               	movf	?___ftadd,w
  7155  0741  00B0               	movwf	___fttol@f1
  7156  0742  0824               	movf	?___ftadd+1,w
  7157  0743  00B1               	movwf	___fttol@f1+1
  7158  0744  0825               	movf	?___ftadd+2,w
  7159  0745  00B2               	movwf	___fttol@f1+2
  7160  0746  120A  158A  2004  120A  118A  	fcall	___fttol
  7161  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7162  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7163  074D  0831               	movf	?___fttol+1,w
  7164  074E  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  7165  074F  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  7166  0750  0830               	movf	?___fttol,w
  7167  0751  01BE               	clrf	i1PWM_DutyCycle2@valor
  7168  0752  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  7169  0753  160A  118A  225C   	fcall	i1_PWM_DutyCycle2
  7170                           
  7171                           ;main.c: 328: }
  7172                           ;main.c: 329: }else
  7173  0756  0008               	return
  7174  0757                     __end_of_Fuzzy:	
  7175                           ;main.c: 332: {
  7176                           ;main.c: 333: PWM_DutyCycle2(tf - deltaV);
  7177                           
  7178                           ;main.c: 330: {
  7179                           ;main.c: 331: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  7180                           
  7181                           
  7182                           	psect	text29
  7183  125C                     __ptext29:	
  7184 ;; *************** function i1_PWM_DutyCycle2 *****************
  7185 ;; Defined at:
  7186 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  valor           2   30[BANK0 ] int 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;		None               void
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7200 ;;      Params:         0       2       0       0       0
  7201 ;;      Locals:         0       0       0       0       0
  7202 ;;      Temps:          2       0       0       0       0
  7203 ;;      Totals:         2       2       0       0       0
  7204 ;;Total ram usage:        4 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_Fuzzy
  7210 ;;		_ISR
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function i1_PWM_DutyCycle2
  7216  125C                     i1_PWM_DutyCycle2:	
  7217                           
  7218                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7219                           
  7220                           ;incstack = 0
  7221                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7222  125C  1283               	bcf	3,5	;RP0=0, select bank0
  7223  125D  1303               	bcf	3,6	;RP1=0, select bank0
  7224  125E  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  7225  125F  00FD               	movwf	??i1_PWM_DutyCycle2+1
  7226  1260  083E               	movf	i1PWM_DutyCycle2@valor,w
  7227  1261  00FC               	movwf	??i1_PWM_DutyCycle2
  7228  1262  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7229  1263  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7230  1264  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7231  1265  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7232  1266  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7233  1267  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7234  1268  087C               	movf	??i1_PWM_DutyCycle2,w
  7235  1269  009B               	movwf	27	;volatile
  7236                           
  7237                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7238  126A  083E               	movf	i1PWM_DutyCycle2@valor,w
  7239  126B  00FC               	movwf	??i1_PWM_DutyCycle2
  7240  126C  3003               	movlw	3
  7241  126D                     u331_25:	
  7242  126D  1003               	clrc
  7243  126E  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  7244  126F  3EFF               	addlw	-1
  7245  1270  1D03               	skipz
  7246  1271  2A6D               	goto	u331_25
  7247  1272  1003               	clrc
  7248  1273  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  7249  1274  380C               	iorlw	12
  7250  1275  009D               	movwf	29	;volatile
  7251  1276  0008               	return
  7252  1277                     __end_ofi1_PWM_DutyCycle2:	
  7253                           
  7254                           	psect	text30
  7255  0A84                     __ptext30:	
  7256 ;; *************** function _trimf *****************
  7257 ;; Defined at:
  7258 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  x               3   32[BANK0 ] float 
  7261 ;;  a               3   35[BANK0 ] float 
  7262 ;;  b               3   38[BANK0 ] float 
  7263 ;;  c               3   41[BANK0 ] float 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  ua              3   44[BANK0 ] float 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  3   32[BANK0 ] float 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2, status,0, pclath, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7275 ;;      Params:         0      12       0       0       0
  7276 ;;      Locals:         0       3       0       0       0
  7277 ;;      Temps:          0       0       0       0       0
  7278 ;;      Totals:         0      15       0       0       0
  7279 ;;Total ram usage:       15 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    2
  7282 ;; This function calls:
  7283 ;;		___ftadd
  7284 ;;		___ftdiv
  7285 ;;		___ftge
  7286 ;;		___ftneg
  7287 ;; This function is called by:
  7288 ;;		_Fuzzy
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           
  7293                           ;psect for function _trimf
  7294  0A84                     _trimf:	
  7295                           
  7296                           ;main.c: 65: float ua = 0;
  7297                           
  7298                           ;incstack = 0
  7299                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7300  0A84  3000               	movlw	0
  7301  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  7302  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  7303  0A87  00CC               	movwf	trimf@ua
  7304  0A88  3000               	movlw	0
  7305  0A89  00CD               	movwf	trimf@ua+1
  7306  0A8A  3000               	movlw	0
  7307  0A8B  00CE               	movwf	trimf@ua+2
  7308                           
  7309                           ;main.c: 67: if (x <= a)
  7310  0A8C  0843               	movf	trimf@a,w
  7311  0A8D  00B0               	movwf	___ftge@ff1
  7312  0A8E  0844               	movf	trimf@a+1,w
  7313  0A8F  00B1               	movwf	___ftge@ff1+1
  7314  0A90  0845               	movf	trimf@a+2,w
  7315  0A91  00B2               	movwf	___ftge@ff1+2
  7316  0A92  0840               	movf	trimf@x,w
  7317  0A93  00B3               	movwf	___ftge@ff2
  7318  0A94  0841               	movf	trimf@x+1,w
  7319  0A95  00B4               	movwf	___ftge@ff2+1
  7320  0A96  0842               	movf	trimf@x+2,w
  7321  0A97  00B5               	movwf	___ftge@ff2+2
  7322  0A98  160A  118A  24D6  120A  158A  	fcall	___ftge
  7323  0A9D  1803               	btfsc	3,0
  7324  0A9E  2B97               	goto	L12
  7325                           
  7326                           ;main.c: 69: else if ((a < x) && (x <= b))
  7327                           
  7328                           ;main.c: 68: ua = 0;
  7329  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  7330  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  7331  0AA1  0843               	movf	trimf@a,w
  7332  0AA2  00B0               	movwf	___ftge@ff1
  7333  0AA3  0844               	movf	trimf@a+1,w
  7334  0AA4  00B1               	movwf	___ftge@ff1+1
  7335  0AA5  0845               	movf	trimf@a+2,w
  7336  0AA6  00B2               	movwf	___ftge@ff1+2
  7337  0AA7  0840               	movf	trimf@x,w
  7338  0AA8  00B3               	movwf	___ftge@ff2
  7339  0AA9  0841               	movf	trimf@x+1,w
  7340  0AAA  00B4               	movwf	___ftge@ff2+1
  7341  0AAB  0842               	movf	trimf@x+2,w
  7342  0AAC  00B5               	movwf	___ftge@ff2+2
  7343  0AAD  160A  118A  24D6  120A  158A  	fcall	___ftge
  7344  0AB2  1803               	btfsc	3,0
  7345  0AB3  2AFD               	goto	i1l2429
  7346  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  7347  0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  7348  0AB6  0846               	movf	trimf@b,w
  7349  0AB7  00B0               	movwf	___ftge@ff1
  7350  0AB8  0847               	movf	trimf@b+1,w
  7351  0AB9  00B1               	movwf	___ftge@ff1+1
  7352  0ABA  0848               	movf	trimf@b+2,w
  7353  0ABB  00B2               	movwf	___ftge@ff1+2
  7354  0ABC  0840               	movf	trimf@x,w
  7355  0ABD  00B3               	movwf	___ftge@ff2
  7356  0ABE  0841               	movf	trimf@x+1,w
  7357  0ABF  00B4               	movwf	___ftge@ff2+1
  7358  0AC0  0842               	movf	trimf@x+2,w
  7359  0AC1  00B5               	movwf	___ftge@ff2+2
  7360  0AC2  160A  118A  24D6  120A  158A  	fcall	___ftge
  7361  0AC7  1C03               	btfss	3,0
  7362  0AC8  2AFD               	goto	i1l2429
  7363                           
  7364                           ;main.c: 70: ua = ((x - a) / (b - a));
  7365  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
  7366  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
  7367  0ACB  0846               	movf	trimf@b,w
  7368  0ACC  00A3               	movwf	___ftadd@f1
  7369  0ACD  0847               	movf	trimf@b+1,w
  7370  0ACE  00A4               	movwf	___ftadd@f1+1
  7371  0ACF  0848               	movf	trimf@b+2,w
  7372  0AD0  00A5               	movwf	___ftadd@f1+2
  7373  0AD1  0843               	movf	trimf@a,w
  7374  0AD2  00A0               	movwf	___ftneg@f1
  7375  0AD3  0844               	movf	trimf@a+1,w
  7376  0AD4  00A1               	movwf	___ftneg@f1+1
  7377  0AD5  0845               	movf	trimf@a+2,w
  7378  0AD6  00A2               	movwf	___ftneg@f1+2
  7379  0AD7  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7380  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  7381  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  7382  0ADE  0820               	movf	?___ftneg,w
  7383  0ADF  00A6               	movwf	___ftadd@f2
  7384  0AE0  0821               	movf	?___ftneg+1,w
  7385  0AE1  00A7               	movwf	___ftadd@f2+1
  7386  0AE2  0822               	movf	?___ftneg+2,w
  7387  0AE3  00A8               	movwf	___ftadd@f2+2
  7388  0AE4  120A  158A  217B  120A  158A  	fcall	___ftadd
  7389  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0AEB  0823               	movf	?___ftadd,w
  7392  0AEC  00B0               	movwf	___ftdiv@f2
  7393  0AED  0824               	movf	?___ftadd+1,w
  7394  0AEE  00B1               	movwf	___ftdiv@f2+1
  7395  0AEF  0825               	movf	?___ftadd+2,w
  7396  0AF0  00B2               	movwf	___ftdiv@f2+2
  7397  0AF1  0840               	movf	trimf@x,w
  7398  0AF2  00A3               	movwf	___ftadd@f1
  7399  0AF3  0841               	movf	trimf@x+1,w
  7400  0AF4  00A4               	movwf	___ftadd@f1+1
  7401  0AF5  0842               	movf	trimf@x+2,w
  7402  0AF6  00A5               	movwf	___ftadd@f1+2
  7403  0AF7  0843               	movf	trimf@a,w
  7404  0AF8  00A0               	movwf	___ftneg@f1
  7405  0AF9  0844               	movf	trimf@a+1,w
  7406  0AFA  00A1               	movwf	___ftneg@f1+1
  7407  0AFB  0845               	movf	trimf@a+2,w
  7408  0AFC  2B5A               	goto	L13
  7409  0AFD                     i1l2429:	
  7410                           
  7411                           ;main.c: 71: else if ((b < x) && (x <= c))
  7412  0AFD  1283               	bcf	3,5	;RP0=0, select bank0
  7413  0AFE  1303               	bcf	3,6	;RP1=0, select bank0
  7414  0AFF  0846               	movf	trimf@b,w
  7415  0B00  00B0               	movwf	___ftge@ff1
  7416  0B01  0847               	movf	trimf@b+1,w
  7417  0B02  00B1               	movwf	___ftge@ff1+1
  7418  0B03  0848               	movf	trimf@b+2,w
  7419  0B04  00B2               	movwf	___ftge@ff1+2
  7420  0B05  0840               	movf	trimf@x,w
  7421  0B06  00B3               	movwf	___ftge@ff2
  7422  0B07  0841               	movf	trimf@x+1,w
  7423  0B08  00B4               	movwf	___ftge@ff2+1
  7424  0B09  0842               	movf	trimf@x+2,w
  7425  0B0A  00B5               	movwf	___ftge@ff2+2
  7426  0B0B  160A  118A  24D6  120A  158A  	fcall	___ftge
  7427  0B10  1803               	btfsc	3,0
  7428  0B11  2B82               	goto	i1l2435
  7429  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  7430  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  7431  0B14  0849               	movf	trimf@c,w
  7432  0B15  00B0               	movwf	___ftge@ff1
  7433  0B16  084A               	movf	trimf@c+1,w
  7434  0B17  00B1               	movwf	___ftge@ff1+1
  7435  0B18  084B               	movf	trimf@c+2,w
  7436  0B19  00B2               	movwf	___ftge@ff1+2
  7437  0B1A  0840               	movf	trimf@x,w
  7438  0B1B  00B3               	movwf	___ftge@ff2
  7439  0B1C  0841               	movf	trimf@x+1,w
  7440  0B1D  00B4               	movwf	___ftge@ff2+1
  7441  0B1E  0842               	movf	trimf@x+2,w
  7442  0B1F  00B5               	movwf	___ftge@ff2+2
  7443  0B20  160A  118A  24D6  120A  158A  	fcall	___ftge
  7444  0B25  1C03               	btfss	3,0
  7445  0B26  2B82               	goto	i1l2435
  7446                           
  7447                           ;main.c: 72: ua = ((x - c) / (b - c));
  7448  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  7449  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  7450  0B29  0846               	movf	trimf@b,w
  7451  0B2A  00A3               	movwf	___ftadd@f1
  7452  0B2B  0847               	movf	trimf@b+1,w
  7453  0B2C  00A4               	movwf	___ftadd@f1+1
  7454  0B2D  0848               	movf	trimf@b+2,w
  7455  0B2E  00A5               	movwf	___ftadd@f1+2
  7456  0B2F  0849               	movf	trimf@c,w
  7457  0B30  00A0               	movwf	___ftneg@f1
  7458  0B31  084A               	movf	trimf@c+1,w
  7459  0B32  00A1               	movwf	___ftneg@f1+1
  7460  0B33  084B               	movf	trimf@c+2,w
  7461  0B34  00A2               	movwf	___ftneg@f1+2
  7462  0B35  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7463  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  7464  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  7465  0B3C  0820               	movf	?___ftneg,w
  7466  0B3D  00A6               	movwf	___ftadd@f2
  7467  0B3E  0821               	movf	?___ftneg+1,w
  7468  0B3F  00A7               	movwf	___ftadd@f2+1
  7469  0B40  0822               	movf	?___ftneg+2,w
  7470  0B41  00A8               	movwf	___ftadd@f2+2
  7471  0B42  120A  158A  217B  120A  158A  	fcall	___ftadd
  7472  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  7473  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  7474  0B49  0823               	movf	?___ftadd,w
  7475  0B4A  00B0               	movwf	___ftdiv@f2
  7476  0B4B  0824               	movf	?___ftadd+1,w
  7477  0B4C  00B1               	movwf	___ftdiv@f2+1
  7478  0B4D  0825               	movf	?___ftadd+2,w
  7479  0B4E  00B2               	movwf	___ftdiv@f2+2
  7480  0B4F  0840               	movf	trimf@x,w
  7481  0B50  00A3               	movwf	___ftadd@f1
  7482  0B51  0841               	movf	trimf@x+1,w
  7483  0B52  00A4               	movwf	___ftadd@f1+1
  7484  0B53  0842               	movf	trimf@x+2,w
  7485  0B54  00A5               	movwf	___ftadd@f1+2
  7486  0B55  0849               	movf	trimf@c,w
  7487  0B56  00A0               	movwf	___ftneg@f1
  7488  0B57  084A               	movf	trimf@c+1,w
  7489  0B58  00A1               	movwf	___ftneg@f1+1
  7490  0B59  084B               	movf	trimf@c+2,w
  7491  0B5A                     L13:	
  7492  0B5A  00A2               	movwf	___ftneg@f1+2
  7493  0B5B  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7494  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  7495  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  7496  0B62  0820               	movf	?___ftneg,w
  7497  0B63  00A6               	movwf	___ftadd@f2
  7498  0B64  0821               	movf	?___ftneg+1,w
  7499  0B65  00A7               	movwf	___ftadd@f2+1
  7500  0B66  0822               	movf	?___ftneg+2,w
  7501  0B67  00A8               	movwf	___ftadd@f2+2
  7502  0B68  120A  158A  217B  120A  158A  	fcall	___ftadd
  7503  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  7504  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  7505  0B6F  0823               	movf	?___ftadd,w
  7506  0B70  00B3               	movwf	___ftdiv@f1
  7507  0B71  0824               	movf	?___ftadd+1,w
  7508  0B72  00B4               	movwf	___ftdiv@f1+1
  7509  0B73  0825               	movf	?___ftadd+2,w
  7510  0B74  00B5               	movwf	___ftdiv@f1+2
  7511  0B75  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7512  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  7513  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  7514  0B7C  0830               	movf	?___ftdiv,w
  7515  0B7D  00CC               	movwf	trimf@ua
  7516  0B7E  0831               	movf	?___ftdiv+1,w
  7517  0B7F  00CD               	movwf	trimf@ua+1
  7518  0B80  0832               	movf	?___ftdiv+2,w
  7519  0B81  2B9E               	goto	L10
  7520  0B82                     i1l2435:	
  7521                           
  7522                           ;main.c: 73: else if (x > c)
  7523  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  7524  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  7525  0B84  0849               	movf	trimf@c,w
  7526  0B85  00B0               	movwf	___ftge@ff1
  7527  0B86  084A               	movf	trimf@c+1,w
  7528  0B87  00B1               	movwf	___ftge@ff1+1
  7529  0B88  084B               	movf	trimf@c+2,w
  7530  0B89  00B2               	movwf	___ftge@ff1+2
  7531  0B8A  0840               	movf	trimf@x,w
  7532  0B8B  00B3               	movwf	___ftge@ff2
  7533  0B8C  0841               	movf	trimf@x+1,w
  7534  0B8D  00B4               	movwf	___ftge@ff2+1
  7535  0B8E  0842               	movf	trimf@x+2,w
  7536  0B8F  00B5               	movwf	___ftge@ff2+2
  7537  0B90  160A  118A  24D6  120A  158A  	fcall	___ftge
  7538  0B95  1803               	btfsc	3,0
  7539  0B96  2B9F               	goto	i1l112
  7540  0B97                     L12:	
  7541                           
  7542                           ;main.c: 74: ua = 0;
  7543  0B97  3000               	movlw	0
  7544  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  7545  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  7546  0B9A  00CC               	movwf	trimf@ua
  7547  0B9B  3000               	movlw	0
  7548  0B9C  00CD               	movwf	trimf@ua+1
  7549  0B9D  3000               	movlw	0
  7550  0B9E                     L10:	
  7551  0B9E  00CE               	movwf	trimf@ua+2
  7552  0B9F                     i1l112:	
  7553                           
  7554                           ;main.c: 76: return(ua);
  7555  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  7556  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  7557  0BA1  084C               	movf	trimf@ua,w
  7558  0BA2  00C0               	movwf	?_trimf
  7559  0BA3  084D               	movf	trimf@ua+1,w
  7560  0BA4  00C1               	movwf	?_trimf+1
  7561  0BA5  084E               	movf	trimf@ua+2,w
  7562  0BA6  00C2               	movwf	?_trimf+2
  7563  0BA7  0008               	return
  7564  0BA8                     __end_of_trimf:	
  7565                           
  7566                           	psect	text31
  7567  0CF3                     __ptext31:	
  7568 ;; *************** function _trapmf *****************
  7569 ;; Defined at:
  7570 ;;		line 82 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  x               3   32[BANK0 ] float 
  7573 ;;  a               3   35[BANK0 ] float 
  7574 ;;  b               3   38[BANK0 ] float 
  7575 ;;  c               3   41[BANK0 ] float 
  7576 ;;  d               3   44[BANK0 ] float 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  ua              3   47[BANK0 ] float 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  3   32[BANK0 ] float 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0, pclath, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         0      15       0       0       0
  7589 ;;      Locals:         0       3       0       0       0
  7590 ;;      Temps:          0       0       0       0       0
  7591 ;;      Totals:         0      18       0       0       0
  7592 ;;Total ram usage:       18 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    2
  7595 ;; This function calls:
  7596 ;;		___ftadd
  7597 ;;		___ftdiv
  7598 ;;		___ftge
  7599 ;;		___ftneg
  7600 ;; This function is called by:
  7601 ;;		_Fuzzy
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function _trapmf
  7607  0CF3                     _trapmf:	
  7608                           
  7609                           ;main.c: 84: float ua = 0;
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7613  0CF3  3000               	movlw	0
  7614  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7615  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7616  0CF6  00CF               	movwf	trapmf@ua
  7617  0CF7  3000               	movlw	0
  7618  0CF8  00D0               	movwf	trapmf@ua+1
  7619  0CF9  3000               	movlw	0
  7620  0CFA  00D1               	movwf	trapmf@ua+2
  7621                           
  7622                           ;main.c: 86: if (x <= a)
  7623  0CFB  0843               	movf	trapmf@a,w
  7624  0CFC  00B0               	movwf	___ftge@ff1
  7625  0CFD  0844               	movf	trapmf@a+1,w
  7626  0CFE  00B1               	movwf	___ftge@ff1+1
  7627  0CFF  0845               	movf	trapmf@a+2,w
  7628  0D00  00B2               	movwf	___ftge@ff1+2
  7629  0D01  0840               	movf	trapmf@x,w
  7630  0D02  00B3               	movwf	___ftge@ff2
  7631  0D03  0841               	movf	trapmf@x+1,w
  7632  0D04  00B4               	movwf	___ftge@ff2+1
  7633  0D05  0842               	movf	trapmf@x+2,w
  7634  0D06  00B5               	movwf	___ftge@ff2+2
  7635  0D07  160A  118A  24D6  120A  158A  	fcall	___ftge
  7636  0D0C  1803               	btfsc	3,0
  7637  0D0D  2E38               	goto	L18
  7638                           
  7639                           ;main.c: 88: else if ((a < x) && (x <= b))
  7640                           
  7641                           ;main.c: 87: ua = 0;
  7642  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  7643  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  7644  0D10  0843               	movf	trapmf@a,w
  7645  0D11  00B0               	movwf	___ftge@ff1
  7646  0D12  0844               	movf	trapmf@a+1,w
  7647  0D13  00B1               	movwf	___ftge@ff1+1
  7648  0D14  0845               	movf	trapmf@a+2,w
  7649  0D15  00B2               	movwf	___ftge@ff1+2
  7650  0D16  0840               	movf	trapmf@x,w
  7651  0D17  00B3               	movwf	___ftge@ff2
  7652  0D18  0841               	movf	trapmf@x+1,w
  7653  0D19  00B4               	movwf	___ftge@ff2+1
  7654  0D1A  0842               	movf	trapmf@x+2,w
  7655  0D1B  00B5               	movwf	___ftge@ff2+2
  7656  0D1C  160A  118A  24D6  120A  158A  	fcall	___ftge
  7657  0D21  1803               	btfsc	3,0
  7658  0D22  2D6C               	goto	i1l2453
  7659  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  7660  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  7661  0D25  0846               	movf	trapmf@b,w
  7662  0D26  00B0               	movwf	___ftge@ff1
  7663  0D27  0847               	movf	trapmf@b+1,w
  7664  0D28  00B1               	movwf	___ftge@ff1+1
  7665  0D29  0848               	movf	trapmf@b+2,w
  7666  0D2A  00B2               	movwf	___ftge@ff1+2
  7667  0D2B  0840               	movf	trapmf@x,w
  7668  0D2C  00B3               	movwf	___ftge@ff2
  7669  0D2D  0841               	movf	trapmf@x+1,w
  7670  0D2E  00B4               	movwf	___ftge@ff2+1
  7671  0D2F  0842               	movf	trapmf@x+2,w
  7672  0D30  00B5               	movwf	___ftge@ff2+2
  7673  0D31  160A  118A  24D6  120A  158A  	fcall	___ftge
  7674  0D36  1C03               	btfss	3,0
  7675  0D37  2D6C               	goto	i1l2453
  7676                           
  7677                           ;main.c: 89: ua = ((x - a) / (b - a));
  7678  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  7679  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  7680  0D3A  0846               	movf	trapmf@b,w
  7681  0D3B  00A3               	movwf	___ftadd@f1
  7682  0D3C  0847               	movf	trapmf@b+1,w
  7683  0D3D  00A4               	movwf	___ftadd@f1+1
  7684  0D3E  0848               	movf	trapmf@b+2,w
  7685  0D3F  00A5               	movwf	___ftadd@f1+2
  7686  0D40  0843               	movf	trapmf@a,w
  7687  0D41  00A0               	movwf	___ftneg@f1
  7688  0D42  0844               	movf	trapmf@a+1,w
  7689  0D43  00A1               	movwf	___ftneg@f1+1
  7690  0D44  0845               	movf	trapmf@a+2,w
  7691  0D45  00A2               	movwf	___ftneg@f1+2
  7692  0D46  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7693  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7694  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7695  0D4D  0820               	movf	?___ftneg,w
  7696  0D4E  00A6               	movwf	___ftadd@f2
  7697  0D4F  0821               	movf	?___ftneg+1,w
  7698  0D50  00A7               	movwf	___ftadd@f2+1
  7699  0D51  0822               	movf	?___ftneg+2,w
  7700  0D52  00A8               	movwf	___ftadd@f2+2
  7701  0D53  120A  158A  217B  120A  158A  	fcall	___ftadd
  7702  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  7703  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  7704  0D5A  0823               	movf	?___ftadd,w
  7705  0D5B  00B0               	movwf	___ftdiv@f2
  7706  0D5C  0824               	movf	?___ftadd+1,w
  7707  0D5D  00B1               	movwf	___ftdiv@f2+1
  7708  0D5E  0825               	movf	?___ftadd+2,w
  7709  0D5F  00B2               	movwf	___ftdiv@f2+2
  7710  0D60  0840               	movf	trapmf@x,w
  7711  0D61  00A3               	movwf	___ftadd@f1
  7712  0D62  0841               	movf	trapmf@x+1,w
  7713  0D63  00A4               	movwf	___ftadd@f1+1
  7714  0D64  0842               	movf	trapmf@x+2,w
  7715  0D65  00A5               	movwf	___ftadd@f1+2
  7716  0D66  0843               	movf	trapmf@a,w
  7717  0D67  00A0               	movwf	___ftneg@f1
  7718  0D68  0844               	movf	trapmf@a+1,w
  7719  0D69  00A1               	movwf	___ftneg@f1+1
  7720  0D6A  0845               	movf	trapmf@a+2,w
  7721  0D6B  2DFB               	goto	L20
  7722  0D6C                     i1l2453:	
  7723                           
  7724                           ;main.c: 90: else if ((b <= x) && (x <= c))
  7725  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  7726  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  7727  0D6E  0840               	movf	trapmf@x,w
  7728  0D6F  00B0               	movwf	___ftge@ff1
  7729  0D70  0841               	movf	trapmf@x+1,w
  7730  0D71  00B1               	movwf	___ftge@ff1+1
  7731  0D72  0842               	movf	trapmf@x+2,w
  7732  0D73  00B2               	movwf	___ftge@ff1+2
  7733  0D74  0846               	movf	trapmf@b,w
  7734  0D75  00B3               	movwf	___ftge@ff2
  7735  0D76  0847               	movf	trapmf@b+1,w
  7736  0D77  00B4               	movwf	___ftge@ff2+1
  7737  0D78  0848               	movf	trapmf@b+2,w
  7738  0D79  00B5               	movwf	___ftge@ff2+2
  7739  0D7A  160A  118A  24D6  120A  158A  	fcall	___ftge
  7740  0D7F  1C03               	btfss	3,0
  7741  0D80  2D9E               	goto	i1l2459
  7742  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  7743  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  7744  0D83  0849               	movf	trapmf@c,w
  7745  0D84  00B0               	movwf	___ftge@ff1
  7746  0D85  084A               	movf	trapmf@c+1,w
  7747  0D86  00B1               	movwf	___ftge@ff1+1
  7748  0D87  084B               	movf	trapmf@c+2,w
  7749  0D88  00B2               	movwf	___ftge@ff1+2
  7750  0D89  0840               	movf	trapmf@x,w
  7751  0D8A  00B3               	movwf	___ftge@ff2
  7752  0D8B  0841               	movf	trapmf@x+1,w
  7753  0D8C  00B4               	movwf	___ftge@ff2+1
  7754  0D8D  0842               	movf	trapmf@x+2,w
  7755  0D8E  00B5               	movwf	___ftge@ff2+2
  7756  0D8F  160A  118A  24D6  120A  158A  	fcall	___ftge
  7757  0D94  1C03               	btfss	3,0
  7758  0D95  2D9E               	goto	i1l2459
  7759                           
  7760                           ;main.c: 91: ua = 1;
  7761  0D96  3000               	movlw	0
  7762  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  7763  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  7764  0D99  00CF               	movwf	trapmf@ua
  7765  0D9A  3080               	movlw	128
  7766  0D9B  00D0               	movwf	trapmf@ua+1
  7767  0D9C  303F               	movlw	63
  7768  0D9D  2E3F               	goto	L17
  7769  0D9E                     i1l2459:	
  7770                           
  7771                           ;main.c: 92: else if ((c < x) && (x <= d))
  7772  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  7773  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  7774  0DA0  0849               	movf	trapmf@c,w
  7775  0DA1  00B0               	movwf	___ftge@ff1
  7776  0DA2  084A               	movf	trapmf@c+1,w
  7777  0DA3  00B1               	movwf	___ftge@ff1+1
  7778  0DA4  084B               	movf	trapmf@c+2,w
  7779  0DA5  00B2               	movwf	___ftge@ff1+2
  7780  0DA6  0840               	movf	trapmf@x,w
  7781  0DA7  00B3               	movwf	___ftge@ff2
  7782  0DA8  0841               	movf	trapmf@x+1,w
  7783  0DA9  00B4               	movwf	___ftge@ff2+1
  7784  0DAA  0842               	movf	trapmf@x+2,w
  7785  0DAB  00B5               	movwf	___ftge@ff2+2
  7786  0DAC  160A  118A  24D6  120A  158A  	fcall	___ftge
  7787  0DB1  1803               	btfsc	3,0
  7788  0DB2  2E23               	goto	i1l2465
  7789  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  7790  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  7791  0DB5  084C               	movf	trapmf@d,w
  7792  0DB6  00B0               	movwf	___ftge@ff1
  7793  0DB7  084D               	movf	trapmf@d+1,w
  7794  0DB8  00B1               	movwf	___ftge@ff1+1
  7795  0DB9  084E               	movf	trapmf@d+2,w
  7796  0DBA  00B2               	movwf	___ftge@ff1+2
  7797  0DBB  0840               	movf	trapmf@x,w
  7798  0DBC  00B3               	movwf	___ftge@ff2
  7799  0DBD  0841               	movf	trapmf@x+1,w
  7800  0DBE  00B4               	movwf	___ftge@ff2+1
  7801  0DBF  0842               	movf	trapmf@x+2,w
  7802  0DC0  00B5               	movwf	___ftge@ff2+2
  7803  0DC1  160A  118A  24D6  120A  158A  	fcall	___ftge
  7804  0DC6  1C03               	btfss	3,0
  7805  0DC7  2E23               	goto	i1l2465
  7806                           
  7807                           ;main.c: 93: ua = ((d - x) / (d - c));
  7808  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7810  0DCA  084C               	movf	trapmf@d,w
  7811  0DCB  00A3               	movwf	___ftadd@f1
  7812  0DCC  084D               	movf	trapmf@d+1,w
  7813  0DCD  00A4               	movwf	___ftadd@f1+1
  7814  0DCE  084E               	movf	trapmf@d+2,w
  7815  0DCF  00A5               	movwf	___ftadd@f1+2
  7816  0DD0  0849               	movf	trapmf@c,w
  7817  0DD1  00A0               	movwf	___ftneg@f1
  7818  0DD2  084A               	movf	trapmf@c+1,w
  7819  0DD3  00A1               	movwf	___ftneg@f1+1
  7820  0DD4  084B               	movf	trapmf@c+2,w
  7821  0DD5  00A2               	movwf	___ftneg@f1+2
  7822  0DD6  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7823  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  7825  0DDD  0820               	movf	?___ftneg,w
  7826  0DDE  00A6               	movwf	___ftadd@f2
  7827  0DDF  0821               	movf	?___ftneg+1,w
  7828  0DE0  00A7               	movwf	___ftadd@f2+1
  7829  0DE1  0822               	movf	?___ftneg+2,w
  7830  0DE2  00A8               	movwf	___ftadd@f2+2
  7831  0DE3  120A  158A  217B  120A  158A  	fcall	___ftadd
  7832  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  7833  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  7834  0DEA  0823               	movf	?___ftadd,w
  7835  0DEB  00B0               	movwf	___ftdiv@f2
  7836  0DEC  0824               	movf	?___ftadd+1,w
  7837  0DED  00B1               	movwf	___ftdiv@f2+1
  7838  0DEE  0825               	movf	?___ftadd+2,w
  7839  0DEF  00B2               	movwf	___ftdiv@f2+2
  7840  0DF0  084C               	movf	trapmf@d,w
  7841  0DF1  00A3               	movwf	___ftadd@f1
  7842  0DF2  084D               	movf	trapmf@d+1,w
  7843  0DF3  00A4               	movwf	___ftadd@f1+1
  7844  0DF4  084E               	movf	trapmf@d+2,w
  7845  0DF5  00A5               	movwf	___ftadd@f1+2
  7846  0DF6  0840               	movf	trapmf@x,w
  7847  0DF7  00A0               	movwf	___ftneg@f1
  7848  0DF8  0841               	movf	trapmf@x+1,w
  7849  0DF9  00A1               	movwf	___ftneg@f1+1
  7850  0DFA  0842               	movf	trapmf@x+2,w
  7851  0DFB                     L20:	
  7852  0DFB  00A2               	movwf	___ftneg@f1+2
  7853  0DFC  160A  118A  21E3  120A  158A  	fcall	___ftneg
  7854  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  7855  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  7856  0E03  0820               	movf	?___ftneg,w
  7857  0E04  00A6               	movwf	___ftadd@f2
  7858  0E05  0821               	movf	?___ftneg+1,w
  7859  0E06  00A7               	movwf	___ftadd@f2+1
  7860  0E07  0822               	movf	?___ftneg+2,w
  7861  0E08  00A8               	movwf	___ftadd@f2+2
  7862  0E09  120A  158A  217B  120A  158A  	fcall	___ftadd
  7863  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  7864  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  7865  0E10  0823               	movf	?___ftadd,w
  7866  0E11  00B3               	movwf	___ftdiv@f1
  7867  0E12  0824               	movf	?___ftadd+1,w
  7868  0E13  00B4               	movwf	___ftdiv@f1+1
  7869  0E14  0825               	movf	?___ftadd+2,w
  7870  0E15  00B5               	movwf	___ftdiv@f1+2
  7871  0E16  160A  118A  2677  120A  158A  	fcall	___ftdiv
  7872  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  7873  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  7874  0E1D  0830               	movf	?___ftdiv,w
  7875  0E1E  00CF               	movwf	trapmf@ua
  7876  0E1F  0831               	movf	?___ftdiv+1,w
  7877  0E20  00D0               	movwf	trapmf@ua+1
  7878  0E21  0832               	movf	?___ftdiv+2,w
  7879  0E22  2E3F               	goto	L17
  7880  0E23                     i1l2465:	
  7881                           
  7882                           ;main.c: 94: else if (x > d)
  7883  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  7884  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  7885  0E25  084C               	movf	trapmf@d,w
  7886  0E26  00B0               	movwf	___ftge@ff1
  7887  0E27  084D               	movf	trapmf@d+1,w
  7888  0E28  00B1               	movwf	___ftge@ff1+1
  7889  0E29  084E               	movf	trapmf@d+2,w
  7890  0E2A  00B2               	movwf	___ftge@ff1+2
  7891  0E2B  0840               	movf	trapmf@x,w
  7892  0E2C  00B3               	movwf	___ftge@ff2
  7893  0E2D  0841               	movf	trapmf@x+1,w
  7894  0E2E  00B4               	movwf	___ftge@ff2+1
  7895  0E2F  0842               	movf	trapmf@x+2,w
  7896  0E30  00B5               	movwf	___ftge@ff2+2
  7897  0E31  160A  118A  24D6  120A  158A  	fcall	___ftge
  7898  0E36  1803               	btfsc	3,0
  7899  0E37  2E40               	goto	i1l122
  7900  0E38                     L18:	
  7901                           
  7902                           ;main.c: 95: ua = 0;
  7903  0E38  3000               	movlw	0
  7904  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  7905  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  7906  0E3B  00CF               	movwf	trapmf@ua
  7907  0E3C  3000               	movlw	0
  7908  0E3D  00D0               	movwf	trapmf@ua+1
  7909  0E3E  3000               	movlw	0
  7910  0E3F                     L17:	
  7911  0E3F  00D1               	movwf	trapmf@ua+2
  7912  0E40                     i1l122:	
  7913                           
  7914                           ;main.c: 97: return(ua);
  7915  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  7916  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  7917  0E42  084F               	movf	trapmf@ua,w
  7918  0E43  00C0               	movwf	?_trapmf
  7919  0E44  0850               	movf	trapmf@ua+1,w
  7920  0E45  00C1               	movwf	?_trapmf+1
  7921  0E46  0851               	movf	trapmf@ua+2,w
  7922  0E47  00C2               	movwf	?_trapmf+2
  7923  0E48  0008               	return
  7924  0E49                     __end_of_trapmf:	
  7925                           
  7926                           	psect	text32
  7927  11E3                     __ptext32:	
  7928 ;; *************** function ___ftneg *****************
  7929 ;; Defined at:
  7930 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  f1              3    0[BANK0 ] float 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  3    0[BANK0 ] float 
  7937 ;; Registers used:
  7938 ;;		wreg
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       3       0       0       0
  7945 ;;      Locals:         0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0
  7947 ;;      Totals:         0       3       0       0       0
  7948 ;;Total ram usage:        3 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_trimf
  7954 ;;		_trapmf
  7955 ;;		_Fuzzy
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function ___ftneg
  7961  11E3                     ___ftneg:	
  7962                           
  7963                           ;incstack = 0
  7964                           ; Regs used in ___ftneg: [wreg]
  7965  11E3  1283               	bcf	3,5	;RP0=0, select bank0
  7966  11E4  1303               	bcf	3,6	;RP1=0, select bank0
  7967  11E5  0822               	movf	___ftneg@f1+2,w
  7968  11E6  0421               	iorwf	___ftneg@f1+1,w
  7969  11E7  0420               	iorwf	___ftneg@f1,w
  7970  11E8  1903               	skipnz
  7971  11E9  0008               	return
  7972  11EA  3080               	movlw	128
  7973  11EB  06A2               	xorwf	___ftneg@f1+2,f
  7974  11EC  0008               	return
  7975  11ED                     __end_of___ftneg:	
  7976                           
  7977                           	psect	text33
  7978  1677                     __ptext33:	
  7979 ;; *************** function ___ftdiv *****************
  7980 ;; Defined at:
  7981 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  f2              3   16[BANK0 ] float 
  7984 ;;  f1              3   19[BANK0 ] float 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  f3              3   27[BANK0 ] float 
  7987 ;;  sign            1   31[BANK0 ] unsigned char 
  7988 ;;  exp             1   30[BANK0 ] unsigned char 
  7989 ;;  cntr            1   26[BANK0 ] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  3   16[BANK0 ] float 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0, pclath, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7999 ;;      Params:         0       6       0       0       0
  8000 ;;      Locals:         0       6       0       0       0
  8001 ;;      Temps:          0       4       0       0       0
  8002 ;;      Totals:         0      16       0       0       0
  8003 ;;Total ram usage:       16 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    1
  8006 ;; This function calls:
  8007 ;;		___ftpack
  8008 ;; This function is called by:
  8009 ;;		_trimf
  8010 ;;		_trapmf
  8011 ;;		_Fuzzy
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function ___ftdiv
  8017  1677                     ___ftdiv:	
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8021  1677  1283               	bcf	3,5	;RP0=0, select bank0
  8022  1678  1303               	bcf	3,6	;RP1=0, select bank0
  8023  1679  0833               	movf	___ftdiv@f1,w
  8024  167A  00B6               	movwf	??___ftdiv
  8025  167B  0834               	movf	___ftdiv@f1+1,w
  8026  167C  00B7               	movwf	??___ftdiv+1
  8027  167D  0835               	movf	___ftdiv@f1+2,w
  8028  167E  00B8               	movwf	??___ftdiv+2
  8029  167F  1003               	clrc
  8030  1680  0D37               	rlf	??___ftdiv+1,w
  8031  1681  0D38               	rlf	??___ftdiv+2,w
  8032  1682  00B9               	movwf	??___ftdiv+3
  8033  1683  0839               	movf	??___ftdiv+3,w
  8034  1684  00BE               	movwf	___ftdiv@exp
  8035  1685  08BE               	movf	___ftdiv@exp,f
  8036  1686  1D03               	skipz
  8037  1687  2E8F               	goto	i1l2353
  8038  1688  3000               	movlw	0
  8039  1689  00B0               	movwf	?___ftdiv
  8040  168A  3000               	movlw	0
  8041  168B  00B1               	movwf	?___ftdiv+1
  8042  168C  3000               	movlw	0
  8043  168D  00B2               	movwf	?___ftdiv+2
  8044  168E  0008               	return
  8045  168F                     i1l2353:	
  8046  168F  0830               	movf	___ftdiv@f2,w
  8047  1690  00B6               	movwf	??___ftdiv
  8048  1691  0831               	movf	___ftdiv@f2+1,w
  8049  1692  00B7               	movwf	??___ftdiv+1
  8050  1693  0832               	movf	___ftdiv@f2+2,w
  8051  1694  00B8               	movwf	??___ftdiv+2
  8052  1695  1003               	clrc
  8053  1696  0D37               	rlf	??___ftdiv+1,w
  8054  1697  0D38               	rlf	??___ftdiv+2,w
  8055  1698  00B9               	movwf	??___ftdiv+3
  8056  1699  0839               	movf	??___ftdiv+3,w
  8057  169A  00BF               	movwf	___ftdiv@sign
  8058  169B  08BF               	movf	___ftdiv@sign,f
  8059  169C  1D03               	skipz
  8060  169D  2EA5               	goto	i1l2359
  8061  169E  3000               	movlw	0
  8062  169F  00B0               	movwf	?___ftdiv
  8063  16A0  3000               	movlw	0
  8064  16A1  00B1               	movwf	?___ftdiv+1
  8065  16A2  3000               	movlw	0
  8066  16A3  00B2               	movwf	?___ftdiv+2
  8067  16A4  0008               	return
  8068  16A5                     i1l2359:	
  8069  16A5  3000               	movlw	0
  8070  16A6  00BB               	movwf	___ftdiv@f3
  8071  16A7  3000               	movlw	0
  8072  16A8  00BC               	movwf	___ftdiv@f3+1
  8073  16A9  3000               	movlw	0
  8074  16AA  00BD               	movwf	___ftdiv@f3+2
  8075  16AB  3089               	movlw	137
  8076  16AC  073F               	addwf	___ftdiv@sign,w
  8077  16AD  00B6               	movwf	??___ftdiv
  8078  16AE  0836               	movf	??___ftdiv,w
  8079  16AF  02BE               	subwf	___ftdiv@exp,f
  8080  16B0  0833               	movf	___ftdiv@f1,w
  8081  16B1  00B6               	movwf	??___ftdiv
  8082  16B2  0834               	movf	___ftdiv@f1+1,w
  8083  16B3  00B7               	movwf	??___ftdiv+1
  8084  16B4  0835               	movf	___ftdiv@f1+2,w
  8085  16B5  00B8               	movwf	??___ftdiv+2
  8086  16B6  3010               	movlw	16
  8087  16B7                     u250_25:	
  8088  16B7  1003               	clrc
  8089  16B8  0CB8               	rrf	??___ftdiv+2,f
  8090  16B9  0CB7               	rrf	??___ftdiv+1,f
  8091  16BA  0CB6               	rrf	??___ftdiv,f
  8092  16BB  3EFF               	addlw	-1
  8093  16BC  1D03               	skipz
  8094  16BD  2EB7               	goto	u250_25
  8095  16BE  0836               	movf	??___ftdiv,w
  8096  16BF  00B9               	movwf	??___ftdiv+3
  8097  16C0  0839               	movf	??___ftdiv+3,w
  8098  16C1  00BF               	movwf	___ftdiv@sign
  8099  16C2  0830               	movf	___ftdiv@f2,w
  8100  16C3  00B6               	movwf	??___ftdiv
  8101  16C4  0831               	movf	___ftdiv@f2+1,w
  8102  16C5  00B7               	movwf	??___ftdiv+1
  8103  16C6  0832               	movf	___ftdiv@f2+2,w
  8104  16C7  00B8               	movwf	??___ftdiv+2
  8105  16C8  3010               	movlw	16
  8106  16C9                     u251_25:	
  8107  16C9  1003               	clrc
  8108  16CA  0CB8               	rrf	??___ftdiv+2,f
  8109  16CB  0CB7               	rrf	??___ftdiv+1,f
  8110  16CC  0CB6               	rrf	??___ftdiv,f
  8111  16CD  3EFF               	addlw	-1
  8112  16CE  1D03               	skipz
  8113  16CF  2EC9               	goto	u251_25
  8114  16D0  0836               	movf	??___ftdiv,w
  8115  16D1  00B9               	movwf	??___ftdiv+3
  8116  16D2  0839               	movf	??___ftdiv+3,w
  8117  16D3  06BF               	xorwf	___ftdiv@sign,f
  8118  16D4  3080               	movlw	128
  8119  16D5  00B6               	movwf	??___ftdiv
  8120  16D6  0836               	movf	??___ftdiv,w
  8121  16D7  05BF               	andwf	___ftdiv@sign,f
  8122  16D8  17B4               	bsf	___ftdiv@f1+1,7
  8123  16D9  30FF               	movlw	255
  8124  16DA  05B3               	andwf	___ftdiv@f1,f
  8125  16DB  30FF               	movlw	255
  8126  16DC  05B4               	andwf	___ftdiv@f1+1,f
  8127  16DD  3000               	movlw	0
  8128  16DE  05B5               	andwf	___ftdiv@f1+2,f
  8129  16DF  17B1               	bsf	___ftdiv@f2+1,7
  8130  16E0  30FF               	movlw	255
  8131  16E1  05B0               	andwf	___ftdiv@f2,f
  8132  16E2  30FF               	movlw	255
  8133  16E3  05B1               	andwf	___ftdiv@f2+1,f
  8134  16E4  3000               	movlw	0
  8135  16E5  05B2               	andwf	___ftdiv@f2+2,f
  8136  16E6  3018               	movlw	24
  8137  16E7  00B6               	movwf	??___ftdiv
  8138  16E8  0836               	movf	??___ftdiv,w
  8139  16E9  00BA               	movwf	___ftdiv@cntr
  8140  16EA                     i1l2373:	
  8141  16EA  3001               	movlw	1
  8142  16EB                     u252_25:	
  8143  16EB  1003               	clrc
  8144  16EC  0DBB               	rlf	___ftdiv@f3,f
  8145  16ED  0DBC               	rlf	___ftdiv@f3+1,f
  8146  16EE  0DBD               	rlf	___ftdiv@f3+2,f
  8147  16EF  3EFF               	addlw	-1
  8148  16F0  1D03               	skipz
  8149  16F1  2EEB               	goto	u252_25
  8150  16F2  0832               	movf	___ftdiv@f2+2,w
  8151  16F3  0235               	subwf	___ftdiv@f1+2,w
  8152  16F4  1D03               	skipz
  8153  16F5  2EFC               	goto	u253_25
  8154  16F6  0831               	movf	___ftdiv@f2+1,w
  8155  16F7  0234               	subwf	___ftdiv@f1+1,w
  8156  16F8  1D03               	skipz
  8157  16F9  2EFC               	goto	u253_25
  8158  16FA  0830               	movf	___ftdiv@f2,w
  8159  16FB  0233               	subwf	___ftdiv@f1,w
  8160  16FC                     u253_25:	
  8161  16FC  1C03               	skipc
  8162  16FD  2F09               	goto	i1l2381
  8163  16FE  0830               	movf	___ftdiv@f2,w
  8164  16FF  02B3               	subwf	___ftdiv@f1,f
  8165  1700  0831               	movf	___ftdiv@f2+1,w
  8166  1701  1C03               	skipc
  8167  1702  0F31               	incfsz	___ftdiv@f2+1,w
  8168  1703  02B4               	subwf	___ftdiv@f1+1,f
  8169  1704  0832               	movf	___ftdiv@f2+2,w
  8170  1705  1C03               	skipc
  8171  1706  0A32               	incf	___ftdiv@f2+2,w
  8172  1707  02B5               	subwf	___ftdiv@f1+2,f
  8173  1708  143B               	bsf	___ftdiv@f3,0
  8174  1709                     i1l2381:	
  8175  1709  3001               	movlw	1
  8176  170A                     u254_25:	
  8177  170A  1003               	clrc
  8178  170B  0DB3               	rlf	___ftdiv@f1,f
  8179  170C  0DB4               	rlf	___ftdiv@f1+1,f
  8180  170D  0DB5               	rlf	___ftdiv@f1+2,f
  8181  170E  3EFF               	addlw	-1
  8182  170F  1D03               	skipz
  8183  1710  2F0A               	goto	u254_25
  8184  1711  3001               	movlw	1
  8185  1712  02BA               	subwf	___ftdiv@cntr,f
  8186  1713  1D03               	btfss	3,2
  8187  1714  2EEA               	goto	i1l2373
  8188  1715  083B               	movf	___ftdiv@f3,w
  8189  1716  00F0               	movwf	___ftpack@arg
  8190  1717  083C               	movf	___ftdiv@f3+1,w
  8191  1718  00F1               	movwf	___ftpack@arg+1
  8192  1719  083D               	movf	___ftdiv@f3+2,w
  8193  171A  00F2               	movwf	___ftpack@arg+2
  8194  171B  083E               	movf	___ftdiv@exp,w
  8195  171C  00B6               	movwf	??___ftdiv
  8196  171D  0836               	movf	??___ftdiv,w
  8197  171E  00F3               	movwf	___ftpack@exp
  8198  171F  083F               	movf	___ftdiv@sign,w
  8199  1720  00B7               	movwf	??___ftdiv+1
  8200  1721  0837               	movf	??___ftdiv+1,w
  8201  1722  00F4               	movwf	___ftpack@sign
  8202  1723  160A  118A  2535   	fcall	___ftpack
  8203  1726  0870               	movf	?___ftpack,w
  8204  1727  1283               	bcf	3,5	;RP0=0, select bank0
  8205  1728  1303               	bcf	3,6	;RP1=0, select bank0
  8206  1729  00B0               	movwf	?___ftdiv
  8207  172A  0871               	movf	?___ftpack+1,w
  8208  172B  00B1               	movwf	?___ftdiv+1
  8209  172C  0872               	movf	?___ftpack+2,w
  8210  172D  00B2               	movwf	?___ftdiv+2
  8211  172E  0008               	return
  8212  172F                     __end_of___ftdiv:	
  8213                           
  8214                           	psect	text34
  8215  097B                     __ptext34:	
  8216 ;; *************** function ___ftadd *****************
  8217 ;; Defined at:
  8218 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  f1              3    3[BANK0 ] float 
  8221 ;;  f2              3    6[BANK0 ] float 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  exp1            1   15[BANK0 ] unsigned char 
  8224 ;;  exp2            1   14[BANK0 ] unsigned char 
  8225 ;;  sign            1   13[BANK0 ] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  3    3[BANK0 ] float 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0, pclath, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         0       6       0       0       0
  8236 ;;      Locals:         0       3       0       0       0
  8237 ;;      Temps:          0       4       0       0       0
  8238 ;;      Totals:         0      13       0       0       0
  8239 ;;Total ram usage:       13 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    1
  8242 ;; This function calls:
  8243 ;;		___ftpack
  8244 ;; This function is called by:
  8245 ;;		_trimf
  8246 ;;		_trapmf
  8247 ;;		_Fuzzy
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function ___ftadd
  8253  097B                     ___ftadd:	
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8257  097B  1283               	bcf	3,5	;RP0=0, select bank0
  8258  097C  1303               	bcf	3,6	;RP1=0, select bank0
  8259  097D  0823               	movf	___ftadd@f1,w
  8260  097E  00A9               	movwf	??___ftadd
  8261  097F  0824               	movf	___ftadd@f1+1,w
  8262  0980  00AA               	movwf	??___ftadd+1
  8263  0981  0825               	movf	___ftadd@f1+2,w
  8264  0982  00AB               	movwf	??___ftadd+2
  8265  0983  1003               	clrc
  8266  0984  0D2A               	rlf	??___ftadd+1,w
  8267  0985  0D2B               	rlf	??___ftadd+2,w
  8268  0986  00AC               	movwf	??___ftadd+3
  8269  0987  082C               	movf	??___ftadd+3,w
  8270  0988  00AF               	movwf	___ftadd@exp1
  8271  0989  0826               	movf	___ftadd@f2,w
  8272  098A  00A9               	movwf	??___ftadd
  8273  098B  0827               	movf	___ftadd@f2+1,w
  8274  098C  00AA               	movwf	??___ftadd+1
  8275  098D  0828               	movf	___ftadd@f2+2,w
  8276  098E  00AB               	movwf	??___ftadd+2
  8277  098F  1003               	clrc
  8278  0990  0D2A               	rlf	??___ftadd+1,w
  8279  0991  0D2B               	rlf	??___ftadd+2,w
  8280  0992  00AC               	movwf	??___ftadd+3
  8281  0993  082C               	movf	??___ftadd+3,w
  8282  0994  00AE               	movwf	___ftadd@exp2
  8283  0995  082F               	movf	___ftadd@exp1,w
  8284  0996  1903               	btfsc	3,2
  8285  0997  29A4               	goto	i1l2283
  8286  0998  082E               	movf	___ftadd@exp2,w
  8287  0999  022F               	subwf	___ftadd@exp1,w
  8288  099A  1803               	skipnc
  8289  099B  29AB               	goto	i1l2287
  8290  099C  032F               	decf	___ftadd@exp1,w
  8291  099D  3AFF               	xorlw	255
  8292  099E  072E               	addwf	___ftadd@exp2,w
  8293  099F  00A9               	movwf	??___ftadd
  8294  09A0  3019               	movlw	25
  8295  09A1  0229               	subwf	??___ftadd,w
  8296  09A2  1C03               	skipc
  8297  09A3  29AB               	goto	i1l2287
  8298  09A4                     i1l2283:	
  8299  09A4  0826               	movf	___ftadd@f2,w
  8300  09A5  00A3               	movwf	?___ftadd
  8301  09A6  0827               	movf	___ftadd@f2+1,w
  8302  09A7  00A4               	movwf	?___ftadd+1
  8303  09A8  0828               	movf	___ftadd@f2+2,w
  8304  09A9  00A5               	movwf	?___ftadd+2
  8305  09AA  0008               	return
  8306  09AB                     i1l2287:	
  8307  09AB  082E               	movf	___ftadd@exp2,w
  8308  09AC  1903               	btfsc	3,2
  8309  09AD  0008               	return
  8310  09AE  082F               	movf	___ftadd@exp1,w
  8311  09AF  022E               	subwf	___ftadd@exp2,w
  8312  09B0  1803               	skipnc
  8313  09B1  29BA               	goto	i1l2293
  8314  09B2  032E               	decf	___ftadd@exp2,w
  8315  09B3  3AFF               	xorlw	255
  8316  09B4  072F               	addwf	___ftadd@exp1,w
  8317  09B5  00A9               	movwf	??___ftadd
  8318  09B6  3019               	movlw	25
  8319  09B7  0229               	subwf	??___ftadd,w
  8320  09B8  1803               	btfsc	3,0
  8321  09B9  0008               	return
  8322  09BA                     i1l2293:	
  8323  09BA  3006               	movlw	6
  8324  09BB  00A9               	movwf	??___ftadd
  8325  09BC  0829               	movf	??___ftadd,w
  8326  09BD  00AD               	movwf	___ftadd@sign
  8327  09BE  1BA5               	btfsc	___ftadd@f1+2,7
  8328  09BF  17AD               	bsf	___ftadd@sign,7
  8329  09C0  1BA8               	btfsc	___ftadd@f2+2,7
  8330  09C1  172D               	bsf	___ftadd@sign,6
  8331  09C2  17A4               	bsf	___ftadd@f1+1,7
  8332  09C3  30FF               	movlw	255
  8333  09C4  05A3               	andwf	___ftadd@f1,f
  8334  09C5  30FF               	movlw	255
  8335  09C6  05A4               	andwf	___ftadd@f1+1,f
  8336  09C7  3000               	movlw	0
  8337  09C8  05A5               	andwf	___ftadd@f1+2,f
  8338  09C9  17A7               	bsf	___ftadd@f2+1,7
  8339  09CA  30FF               	movlw	255
  8340  09CB  05A6               	andwf	___ftadd@f2,f
  8341  09CC  30FF               	movlw	255
  8342  09CD  05A7               	andwf	___ftadd@f2+1,f
  8343  09CE  3000               	movlw	0
  8344  09CF  05A8               	andwf	___ftadd@f2+2,f
  8345  09D0  082E               	movf	___ftadd@exp2,w
  8346  09D1  022F               	subwf	___ftadd@exp1,w
  8347  09D2  1803               	skipnc
  8348  09D3  29FA               	goto	i1l2315
  8349  09D4                     i1l2305:	
  8350  09D4  3001               	movlw	1
  8351  09D5                     u233_25:	
  8352  09D5  1003               	clrc
  8353  09D6  0DA6               	rlf	___ftadd@f2,f
  8354  09D7  0DA7               	rlf	___ftadd@f2+1,f
  8355  09D8  0DA8               	rlf	___ftadd@f2+2,f
  8356  09D9  3EFF               	addlw	-1
  8357  09DA  1D03               	skipz
  8358  09DB  29D5               	goto	u233_25
  8359  09DC  3001               	movlw	1
  8360  09DD  02AE               	subwf	___ftadd@exp2,f
  8361  09DE  082E               	movf	___ftadd@exp2,w
  8362  09DF  062F               	xorwf	___ftadd@exp1,w
  8363  09E0  1903               	skipnz
  8364  09E1  29F5               	goto	i1l2313
  8365  09E2  3001               	movlw	1
  8366  09E3  02AD               	subwf	___ftadd@sign,f
  8367  09E4  082D               	movf	___ftadd@sign,w
  8368  09E5  3907               	andlw	7
  8369  09E6  1903               	btfsc	3,2
  8370  09E7  29F5               	goto	i1l2313
  8371  09E8  29D4               	goto	i1l2305
  8372  09E9                     i1l2311:	
  8373  09E9  3001               	movlw	1
  8374  09EA                     u236_25:	
  8375  09EA  1003               	clrc
  8376  09EB  0CA5               	rrf	___ftadd@f1+2,f
  8377  09EC  0CA4               	rrf	___ftadd@f1+1,f
  8378  09ED  0CA3               	rrf	___ftadd@f1,f
  8379  09EE  3EFF               	addlw	-1
  8380  09EF  1D03               	skipz
  8381  09F0  29EA               	goto	u236_25
  8382  09F1  3001               	movlw	1
  8383  09F2  00A9               	movwf	??___ftadd
  8384  09F3  0829               	movf	??___ftadd,w
  8385  09F4  07AF               	addwf	___ftadd@exp1,f
  8386  09F5                     i1l2313:	
  8387  09F5  082F               	movf	___ftadd@exp1,w
  8388  09F6  062E               	xorwf	___ftadd@exp2,w
  8389  09F7  1903               	btfsc	3,2
  8390  09F8  2A23               	goto	i1l785
  8391  09F9  29E9               	goto	i1l2311
  8392  09FA                     i1l2315:	
  8393  09FA  082F               	movf	___ftadd@exp1,w
  8394  09FB  022E               	subwf	___ftadd@exp2,w
  8395  09FC  1803               	skipnc
  8396  09FD  2A23               	goto	i1l785
  8397  09FE                     i1l2317:	
  8398  09FE  3001               	movlw	1
  8399  09FF                     u239_25:	
  8400  09FF  1003               	clrc
  8401  0A00  0DA3               	rlf	___ftadd@f1,f
  8402  0A01  0DA4               	rlf	___ftadd@f1+1,f
  8403  0A02  0DA5               	rlf	___ftadd@f1+2,f
  8404  0A03  3EFF               	addlw	-1
  8405  0A04  1D03               	skipz
  8406  0A05  29FF               	goto	u239_25
  8407  0A06  3001               	movlw	1
  8408  0A07  02AF               	subwf	___ftadd@exp1,f
  8409  0A08  082E               	movf	___ftadd@exp2,w
  8410  0A09  062F               	xorwf	___ftadd@exp1,w
  8411  0A0A  1903               	skipnz
  8412  0A0B  2A1F               	goto	i1l2325
  8413  0A0C  3001               	movlw	1
  8414  0A0D  02AD               	subwf	___ftadd@sign,f
  8415  0A0E  082D               	movf	___ftadd@sign,w
  8416  0A0F  3907               	andlw	7
  8417  0A10  1903               	btfsc	3,2
  8418  0A11  2A1F               	goto	i1l2325
  8419  0A12  29FE               	goto	i1l2317
  8420  0A13                     i1l2323:	
  8421  0A13  3001               	movlw	1
  8422  0A14                     u242_25:	
  8423  0A14  1003               	clrc
  8424  0A15  0CA8               	rrf	___ftadd@f2+2,f
  8425  0A16  0CA7               	rrf	___ftadd@f2+1,f
  8426  0A17  0CA6               	rrf	___ftadd@f2,f
  8427  0A18  3EFF               	addlw	-1
  8428  0A19  1D03               	skipz
  8429  0A1A  2A14               	goto	u242_25
  8430  0A1B  3001               	movlw	1
  8431  0A1C  00A9               	movwf	??___ftadd
  8432  0A1D  0829               	movf	??___ftadd,w
  8433  0A1E  07AE               	addwf	___ftadd@exp2,f
  8434  0A1F                     i1l2325:	
  8435  0A1F  082F               	movf	___ftadd@exp1,w
  8436  0A20  062E               	xorwf	___ftadd@exp2,w
  8437  0A21  1D03               	skipz
  8438  0A22  2A13               	goto	i1l2323
  8439  0A23                     i1l785:	
  8440  0A23  1FAD               	btfss	___ftadd@sign,7
  8441  0A24  2A35               	goto	i1l2329
  8442  0A25  30FF               	movlw	255
  8443  0A26  06A3               	xorwf	___ftadd@f1,f
  8444  0A27  30FF               	movlw	255
  8445  0A28  06A4               	xorwf	___ftadd@f1+1,f
  8446  0A29  30FF               	movlw	255
  8447  0A2A  06A5               	xorwf	___ftadd@f1+2,f
  8448  0A2B  3001               	movlw	1
  8449  0A2C  07A3               	addwf	___ftadd@f1,f
  8450  0A2D  3000               	movlw	0
  8451  0A2E  1803               	skipnc
  8452  0A2F  3001               	movlw	1
  8453  0A30  07A4               	addwf	___ftadd@f1+1,f
  8454  0A31  3000               	movlw	0
  8455  0A32  1803               	skipnc
  8456  0A33  3001               	movlw	1
  8457  0A34  07A5               	addwf	___ftadd@f1+2,f
  8458  0A35                     i1l2329:	
  8459  0A35  1F2D               	btfss	___ftadd@sign,6
  8460  0A36  2A47               	goto	i1l2333
  8461  0A37  30FF               	movlw	255
  8462  0A38  06A6               	xorwf	___ftadd@f2,f
  8463  0A39  30FF               	movlw	255
  8464  0A3A  06A7               	xorwf	___ftadd@f2+1,f
  8465  0A3B  30FF               	movlw	255
  8466  0A3C  06A8               	xorwf	___ftadd@f2+2,f
  8467  0A3D  3001               	movlw	1
  8468  0A3E  07A6               	addwf	___ftadd@f2,f
  8469  0A3F  3000               	movlw	0
  8470  0A40  1803               	skipnc
  8471  0A41  3001               	movlw	1
  8472  0A42  07A7               	addwf	___ftadd@f2+1,f
  8473  0A43  3000               	movlw	0
  8474  0A44  1803               	skipnc
  8475  0A45  3001               	movlw	1
  8476  0A46  07A8               	addwf	___ftadd@f2+2,f
  8477  0A47                     i1l2333:	
  8478  0A47  01AD               	clrf	___ftadd@sign
  8479  0A48  0823               	movf	___ftadd@f1,w
  8480  0A49  07A6               	addwf	___ftadd@f2,f
  8481  0A4A  0824               	movf	___ftadd@f1+1,w
  8482  0A4B  1103               	clrz
  8483  0A4C  1803               	skipnc
  8484  0A4D  0A24               	incf	___ftadd@f1+1,w
  8485  0A4E  1D03               	btfss	3,2
  8486  0A4F  07A7               	addwf	___ftadd@f2+1,f
  8487  0A50  0825               	movf	___ftadd@f1+2,w
  8488  0A51  1103               	clrz
  8489  0A52  1803               	skipnc
  8490  0A53  0A25               	incf	___ftadd@f1+2,w
  8491  0A54  1D03               	btfss	3,2
  8492  0A55  07A8               	addwf	___ftadd@f2+2,f
  8493  0A56  1FA8               	btfss	___ftadd@f2+2,7
  8494  0A57  2A6A               	goto	i1l2343
  8495  0A58  30FF               	movlw	255
  8496  0A59  06A6               	xorwf	___ftadd@f2,f
  8497  0A5A  30FF               	movlw	255
  8498  0A5B  06A7               	xorwf	___ftadd@f2+1,f
  8499  0A5C  30FF               	movlw	255
  8500  0A5D  06A8               	xorwf	___ftadd@f2+2,f
  8501  0A5E  3001               	movlw	1
  8502  0A5F  07A6               	addwf	___ftadd@f2,f
  8503  0A60  3000               	movlw	0
  8504  0A61  1803               	skipnc
  8505  0A62  3001               	movlw	1
  8506  0A63  07A7               	addwf	___ftadd@f2+1,f
  8507  0A64  3000               	movlw	0
  8508  0A65  1803               	skipnc
  8509  0A66  3001               	movlw	1
  8510  0A67  07A8               	addwf	___ftadd@f2+2,f
  8511  0A68  01AD               	clrf	___ftadd@sign
  8512  0A69  0AAD               	incf	___ftadd@sign,f
  8513  0A6A                     i1l2343:	
  8514  0A6A  0826               	movf	___ftadd@f2,w
  8515  0A6B  00F0               	movwf	___ftpack@arg
  8516  0A6C  0827               	movf	___ftadd@f2+1,w
  8517  0A6D  00F1               	movwf	___ftpack@arg+1
  8518  0A6E  0828               	movf	___ftadd@f2+2,w
  8519  0A6F  00F2               	movwf	___ftpack@arg+2
  8520  0A70  082F               	movf	___ftadd@exp1,w
  8521  0A71  00A9               	movwf	??___ftadd
  8522  0A72  0829               	movf	??___ftadd,w
  8523  0A73  00F3               	movwf	___ftpack@exp
  8524  0A74  082D               	movf	___ftadd@sign,w
  8525  0A75  00AA               	movwf	??___ftadd+1
  8526  0A76  082A               	movf	??___ftadd+1,w
  8527  0A77  00F4               	movwf	___ftpack@sign
  8528  0A78  160A  118A  2535   	fcall	___ftpack
  8529  0A7B  0870               	movf	?___ftpack,w
  8530  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  8531  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  8532  0A7E  00A3               	movwf	?___ftadd
  8533  0A7F  0871               	movf	?___ftpack+1,w
  8534  0A80  00A4               	movwf	?___ftadd+1
  8535  0A81  0872               	movf	?___ftpack+2,w
  8536  0A82  00A5               	movwf	?___ftadd+2
  8537  0A83  0008               	return
  8538  0A84                     __end_of___ftadd:	
  8539                           
  8540                           	psect	text35
  8541  1293                     __ptext35:	
  8542 ;; *************** function _max_val *****************
  8543 ;; Defined at:
  8544 ;;		line 136 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  a               3   28[BANK0 ] float 
  8547 ;;  b               3   31[BANK0 ] float 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  3   28[BANK0 ] float 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, pclath, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8559 ;;      Params:         0       6       0       0       0
  8560 ;;      Locals:         0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0
  8562 ;;      Totals:         0       6       0       0       0
  8563 ;;Total ram usage:        6 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    1
  8566 ;; This function calls:
  8567 ;;		___ftge
  8568 ;; This function is called by:
  8569 ;;		_Fuzzy
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           
  8574                           ;psect for function _max_val
  8575  1293                     _max_val:	
  8576                           
  8577                           ;main.c: 138: if (a > b)
  8578                           
  8579                           ;incstack = 0
  8580                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8581  1293  1283               	bcf	3,5	;RP0=0, select bank0
  8582  1294  1303               	bcf	3,6	;RP1=0, select bank0
  8583  1295  083F               	movf	max_val@b,w
  8584  1296  00B0               	movwf	___ftge@ff1
  8585  1297  0840               	movf	max_val@b+1,w
  8586  1298  00B1               	movwf	___ftge@ff1+1
  8587  1299  0841               	movf	max_val@b+2,w
  8588  129A  00B2               	movwf	___ftge@ff1+2
  8589  129B  083C               	movf	max_val@a,w
  8590  129C  00B3               	movwf	___ftge@ff2
  8591  129D  083D               	movf	max_val@a+1,w
  8592  129E  00B4               	movwf	___ftge@ff2+1
  8593  129F  083E               	movf	max_val@a+2,w
  8594  12A0  00B5               	movwf	___ftge@ff2+2
  8595  12A1  160A  118A  24D6  160A  118A  	fcall	___ftge
  8596  12A6  1C03               	btfss	3,0
  8597  12A7  0008               	return
  8598                           
  8599                           ;main.c: 140: else
  8600                           ;main.c: 141: return b;
  8601                           
  8602                           ;main.c: 139: return a;
  8603  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  8604  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  8605  12AA  083F               	movf	max_val@b,w
  8606  12AB  00BC               	movwf	?_max_val
  8607  12AC  0840               	movf	max_val@b+1,w
  8608  12AD  00BD               	movwf	?_max_val+1
  8609  12AE  0841               	movf	max_val@b+2,w
  8610  12AF  00BE               	movwf	?_max_val+2
  8611  12B0  0008               	return
  8612  12B1                     __end_of_max_val:	
  8613                           
  8614                           	psect	text36
  8615  14D6                     __ptext36:	
  8616 ;; *************** function ___ftge *****************
  8617 ;; Defined at:
  8618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  ff1             3   16[BANK0 ] float 
  8621 ;;  ff2             3   19[BANK0 ] float 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;		None               void
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8633 ;;      Params:         0       6       0       0       0
  8634 ;;      Locals:         0       0       0       0       0
  8635 ;;      Temps:          0       6       0       0       0
  8636 ;;      Totals:         0      12       0       0       0
  8637 ;;Total ram usage:       12 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_trimf
  8643 ;;		_trapmf
  8644 ;;		_max_val
  8645 ;;		_Fuzzy
  8646 ;;		_min_val
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           
  8651                           ;psect for function ___ftge
  8652  14D6                     ___ftge:	
  8653                           
  8654                           ;incstack = 0
  8655                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8656  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  8657  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  8658  14D8  1FB2               	btfss	___ftge@ff1+2,7
  8659  14D9  2CFF               	goto	i1l2393
  8660  14DA  3000               	movlw	0
  8661  14DB  00B6               	movwf	??___ftge
  8662  14DC  3000               	movlw	0
  8663  14DD  00B7               	movwf	??___ftge+1
  8664  14DE  3080               	movlw	128
  8665  14DF  00B8               	movwf	??___ftge+2
  8666  14E0  0930               	comf	___ftge@ff1,w
  8667  14E1  00B9               	movwf	??___ftge+3
  8668  14E2  0931               	comf	___ftge@ff1+1,w
  8669  14E3  00BA               	movwf	??___ftge+4
  8670  14E4  0932               	comf	___ftge@ff1+2,w
  8671  14E5  00BB               	movwf	??___ftge+5
  8672  14E6  0AB9               	incf	??___ftge+3,f
  8673  14E7  1903               	skipnz
  8674  14E8  0ABA               	incf	??___ftge+4,f
  8675  14E9  1903               	skipnz
  8676  14EA  0ABB               	incf	??___ftge+5,f
  8677  14EB  0839               	movf	??___ftge+3,w
  8678  14EC  07B6               	addwf	??___ftge,f
  8679  14ED  083A               	movf	??___ftge+4,w
  8680  14EE  1803               	skipnc
  8681  14EF  0F3A               	incfsz	??___ftge+4,w
  8682  14F0  2CF2               	goto	u257_21
  8683  14F1  2CF3               	goto	u257_22
  8684  14F2                     u257_21:	
  8685  14F2  07B7               	addwf	??___ftge+1,f
  8686  14F3                     u257_22:	
  8687  14F3  083B               	movf	??___ftge+5,w
  8688  14F4  1803               	skipnc
  8689  14F5  0F3B               	incfsz	??___ftge+5,w
  8690  14F6  2CF8               	goto	u257_23
  8691  14F7  2CF9               	goto	u257_24
  8692  14F8                     u257_23:	
  8693  14F8  07B8               	addwf	??___ftge+2,f
  8694  14F9                     u257_24:	
  8695  14F9  0836               	movf	??___ftge,w
  8696  14FA  00B0               	movwf	___ftge@ff1
  8697  14FB  0837               	movf	??___ftge+1,w
  8698  14FC  00B1               	movwf	___ftge@ff1+1
  8699  14FD  0838               	movf	??___ftge+2,w
  8700  14FE  00B2               	movwf	___ftge@ff1+2
  8701  14FF                     i1l2393:	
  8702  14FF  1FB5               	btfss	___ftge@ff2+2,7
  8703  1500  2D26               	goto	i1l2397
  8704  1501  3000               	movlw	0
  8705  1502  00B6               	movwf	??___ftge
  8706  1503  3000               	movlw	0
  8707  1504  00B7               	movwf	??___ftge+1
  8708  1505  3080               	movlw	128
  8709  1506  00B8               	movwf	??___ftge+2
  8710  1507  0933               	comf	___ftge@ff2,w
  8711  1508  00B9               	movwf	??___ftge+3
  8712  1509  0934               	comf	___ftge@ff2+1,w
  8713  150A  00BA               	movwf	??___ftge+4
  8714  150B  0935               	comf	___ftge@ff2+2,w
  8715  150C  00BB               	movwf	??___ftge+5
  8716  150D  0AB9               	incf	??___ftge+3,f
  8717  150E  1903               	skipnz
  8718  150F  0ABA               	incf	??___ftge+4,f
  8719  1510  1903               	skipnz
  8720  1511  0ABB               	incf	??___ftge+5,f
  8721  1512  0839               	movf	??___ftge+3,w
  8722  1513  07B6               	addwf	??___ftge,f
  8723  1514  083A               	movf	??___ftge+4,w
  8724  1515  1803               	skipnc
  8725  1516  0F3A               	incfsz	??___ftge+4,w
  8726  1517  2D19               	goto	u259_21
  8727  1518  2D1A               	goto	u259_22
  8728  1519                     u259_21:	
  8729  1519  07B7               	addwf	??___ftge+1,f
  8730  151A                     u259_22:	
  8731  151A  083B               	movf	??___ftge+5,w
  8732  151B  1803               	skipnc
  8733  151C  0F3B               	incfsz	??___ftge+5,w
  8734  151D  2D1F               	goto	u259_23
  8735  151E  2D20               	goto	u259_24
  8736  151F                     u259_23:	
  8737  151F  07B8               	addwf	??___ftge+2,f
  8738  1520                     u259_24:	
  8739  1520  0836               	movf	??___ftge,w
  8740  1521  00B3               	movwf	___ftge@ff2
  8741  1522  0837               	movf	??___ftge+1,w
  8742  1523  00B4               	movwf	___ftge@ff2+1
  8743  1524  0838               	movf	??___ftge+2,w
  8744  1525  00B5               	movwf	___ftge@ff2+2
  8745  1526                     i1l2397:	
  8746  1526  3080               	movlw	128
  8747  1527  06B2               	xorwf	___ftge@ff1+2,f
  8748  1528  3080               	movlw	128
  8749  1529  06B5               	xorwf	___ftge@ff2+2,f
  8750  152A  0835               	movf	___ftge@ff2+2,w
  8751  152B  0232               	subwf	___ftge@ff1+2,w
  8752  152C  1D03               	skipz
  8753  152D  0008               	return
  8754  152E  0834               	movf	___ftge@ff2+1,w
  8755  152F  0231               	subwf	___ftge@ff1+1,w
  8756  1530  1D03               	skipz
  8757  1531  0008               	return
  8758  1532  0833               	movf	___ftge@ff2,w
  8759  1533  0230               	subwf	___ftge@ff1,w
  8760  1534  0008               	return
  8761  1535                     __end_of___ftge:	
  8762                           
  8763                           	psect	text37
  8764  121A                     __ptext37:	
  8765 ;; *************** function ___lwtoft *****************
  8766 ;; Defined at:
  8767 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  c               2    8[COMMON] unsigned int 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  3    8[COMMON] float 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, pclath, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         3       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0
  8783 ;;      Temps:          1       0       0       0       0
  8784 ;;      Totals:         4       0       0       0       0
  8785 ;;Total ram usage:        4 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    1
  8788 ;; This function calls:
  8789 ;;		___ftpack
  8790 ;; This function is called by:
  8791 ;;		_Fuzzy
  8792 ;;		_ISR
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           
  8797                           ;psect for function ___lwtoft
  8798  121A                     ___lwtoft:	
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8802  121A  0878               	movf	___lwtoft@c,w
  8803  121B  00F0               	movwf	___ftpack@arg
  8804  121C  0879               	movf	___lwtoft@c+1,w
  8805  121D  00F1               	movwf	___ftpack@arg+1
  8806  121E  01F2               	clrf	___ftpack@arg+2
  8807  121F  308E               	movlw	142
  8808  1220  00FB               	movwf	??___lwtoft
  8809  1221  087B               	movf	??___lwtoft,w
  8810  1222  00F3               	movwf	___ftpack@exp
  8811  1223  01F4               	clrf	___ftpack@sign
  8812  1224  160A  118A  2535   	fcall	___ftpack
  8813  1227  0870               	movf	?___ftpack,w
  8814  1228  00F8               	movwf	?___lwtoft
  8815  1229  0871               	movf	?___ftpack+1,w
  8816  122A  00F9               	movwf	?___lwtoft+1
  8817  122B  0872               	movf	?___ftpack+2,w
  8818  122C  00FA               	movwf	?___lwtoft+2
  8819  122D  0008               	return
  8820  122E                     __end_of___lwtoft:	
  8821                           
  8822                           	psect	text38
  8823  0804                     __ptext38:	
  8824 ;; *************** function ___fttol *****************
  8825 ;; Defined at:
  8826 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  f1              3   16[BANK0 ] float 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  lval            4   25[BANK0 ] unsigned long 
  8831 ;;  exp1            1   29[BANK0 ] unsigned char 
  8832 ;;  sign1           1   24[BANK0 ] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  4   16[BANK0 ] long 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8842 ;;      Params:         0       4       0       0       0
  8843 ;;      Locals:         0       6       0       0       0
  8844 ;;      Temps:          0       4       0       0       0
  8845 ;;      Totals:         0      14       0       0       0
  8846 ;;Total ram usage:       14 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_Fuzzy
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function ___fttol
  8857  0804                     ___fttol:	
  8858                           
  8859                           ;incstack = 0
  8860                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8861  0804  1283               	bcf	3,5	;RP0=0, select bank0
  8862  0805  1303               	bcf	3,6	;RP1=0, select bank0
  8863  0806  0830               	movf	___fttol@f1,w
  8864  0807  00B4               	movwf	??___fttol
  8865  0808  0831               	movf	___fttol@f1+1,w
  8866  0809  00B5               	movwf	??___fttol+1
  8867  080A  0832               	movf	___fttol@f1+2,w
  8868  080B  00B6               	movwf	??___fttol+2
  8869  080C  1003               	clrc
  8870  080D  0D35               	rlf	??___fttol+1,w
  8871  080E  0D36               	rlf	??___fttol+2,w
  8872  080F  00B7               	movwf	??___fttol+3
  8873  0810  0837               	movf	??___fttol+3,w
  8874  0811  00BD               	movwf	___fttol@exp1
  8875  0812  08BD               	movf	___fttol@exp1,f
  8876  0813  1D03               	skipz
  8877  0814  281E               	goto	i1l2625
  8878  0815  3000               	movlw	0
  8879  0816  00B3               	movwf	?___fttol+3
  8880  0817  3000               	movlw	0
  8881  0818  00B2               	movwf	?___fttol+2
  8882  0819  3000               	movlw	0
  8883  081A  00B1               	movwf	?___fttol+1
  8884  081B  3000               	movlw	0
  8885  081C  00B0               	movwf	?___fttol
  8886  081D  0008               	return
  8887  081E                     i1l2625:	
  8888  081E  0830               	movf	___fttol@f1,w
  8889  081F  00B4               	movwf	??___fttol
  8890  0820  0831               	movf	___fttol@f1+1,w
  8891  0821  00B5               	movwf	??___fttol+1
  8892  0822  0832               	movf	___fttol@f1+2,w
  8893  0823  00B6               	movwf	??___fttol+2
  8894  0824  3017               	movlw	23
  8895  0825                     u309_25:	
  8896  0825  1003               	clrc
  8897  0826  0CB6               	rrf	??___fttol+2,f
  8898  0827  0CB5               	rrf	??___fttol+1,f
  8899  0828  0CB4               	rrf	??___fttol,f
  8900  0829  3EFF               	addlw	-1
  8901  082A  1D03               	skipz
  8902  082B  2825               	goto	u309_25
  8903  082C  0834               	movf	??___fttol,w
  8904  082D  00B7               	movwf	??___fttol+3
  8905  082E  0837               	movf	??___fttol+3,w
  8906  082F  00B8               	movwf	___fttol@sign1
  8907  0830  17B1               	bsf	___fttol@f1+1,7
  8908  0831  30FF               	movlw	255
  8909  0832  05B0               	andwf	___fttol@f1,f
  8910  0833  30FF               	movlw	255
  8911  0834  05B1               	andwf	___fttol@f1+1,f
  8912  0835  3000               	movlw	0
  8913  0836  05B2               	andwf	___fttol@f1+2,f
  8914  0837  0830               	movf	___fttol@f1,w
  8915  0838  00B9               	movwf	___fttol@lval
  8916  0839  0831               	movf	___fttol@f1+1,w
  8917  083A  00BA               	movwf	___fttol@lval+1
  8918  083B  0832               	movf	___fttol@f1+2,w
  8919  083C  00BB               	movwf	___fttol@lval+2
  8920  083D  01BC               	clrf	___fttol@lval+3
  8921  083E  308E               	movlw	142
  8922  083F  02BD               	subwf	___fttol@exp1,f
  8923  0840  1FBD               	btfss	___fttol@exp1,7
  8924  0841  2860               	goto	i1l2645
  8925  0842  083D               	movf	___fttol@exp1,w
  8926  0843  3A80               	xorlw	128
  8927  0844  3E8F               	addlw	143
  8928  0845  1803               	skipnc
  8929  0846  2850               	goto	i1l2643
  8930  0847  3000               	movlw	0
  8931  0848  00B3               	movwf	?___fttol+3
  8932  0849  3000               	movlw	0
  8933  084A  00B2               	movwf	?___fttol+2
  8934  084B  3000               	movlw	0
  8935  084C  00B1               	movwf	?___fttol+1
  8936  084D  3000               	movlw	0
  8937  084E  00B0               	movwf	?___fttol
  8938  084F  0008               	return
  8939  0850                     i1l2643:	
  8940  0850  3001               	movlw	1
  8941  0851                     u312_25:	
  8942  0851  1003               	clrc
  8943  0852  0CBC               	rrf	___fttol@lval+3,f
  8944  0853  0CBB               	rrf	___fttol@lval+2,f
  8945  0854  0CBA               	rrf	___fttol@lval+1,f
  8946  0855  0CB9               	rrf	___fttol@lval,f
  8947  0856  3EFF               	addlw	-1
  8948  0857  1D03               	skipz
  8949  0858  2851               	goto	u312_25
  8950  0859  3001               	movlw	1
  8951  085A  00B4               	movwf	??___fttol
  8952  085B  0834               	movf	??___fttol,w
  8953  085C  07BD               	addwf	___fttol@exp1,f
  8954  085D  1903               	btfsc	3,2
  8955  085E  287B               	goto	i1l2655
  8956  085F  2850               	goto	i1l2643
  8957  0860                     i1l2645:	
  8958  0860  3018               	movlw	24
  8959  0861  023D               	subwf	___fttol@exp1,w
  8960  0862  1C03               	skipc
  8961  0863  2878               	goto	i1l2653
  8962  0864  3000               	movlw	0
  8963  0865  00B3               	movwf	?___fttol+3
  8964  0866  3000               	movlw	0
  8965  0867  00B2               	movwf	?___fttol+2
  8966  0868  3000               	movlw	0
  8967  0869  00B1               	movwf	?___fttol+1
  8968  086A  3000               	movlw	0
  8969  086B  00B0               	movwf	?___fttol
  8970  086C  0008               	return
  8971  086D                     i1l2651:	
  8972  086D  3001               	movlw	1
  8973  086E  00B4               	movwf	??___fttol
  8974  086F                     u315_25:	
  8975  086F  1003               	clrc
  8976  0870  0DB9               	rlf	___fttol@lval,f
  8977  0871  0DBA               	rlf	___fttol@lval+1,f
  8978  0872  0DBB               	rlf	___fttol@lval+2,f
  8979  0873  0DBC               	rlf	___fttol@lval+3,f
  8980  0874  0BB4               	decfsz	??___fttol,f
  8981  0875  286F               	goto	u315_25
  8982  0876  3001               	movlw	1
  8983  0877  02BD               	subwf	___fttol@exp1,f
  8984  0878                     i1l2653:	
  8985  0878  08BD               	movf	___fttol@exp1,f
  8986  0879  1D03               	skipz
  8987  087A  286D               	goto	i1l2651
  8988  087B                     i1l2655:	
  8989  087B  0838               	movf	___fttol@sign1,w
  8990  087C  1903               	btfsc	3,2
  8991  087D  2889               	goto	i1l2659
  8992  087E  09B9               	comf	___fttol@lval,f
  8993  087F  09BA               	comf	___fttol@lval+1,f
  8994  0880  09BB               	comf	___fttol@lval+2,f
  8995  0881  09BC               	comf	___fttol@lval+3,f
  8996  0882  0AB9               	incf	___fttol@lval,f
  8997  0883  1903               	skipnz
  8998  0884  0ABA               	incf	___fttol@lval+1,f
  8999  0885  1903               	skipnz
  9000  0886  0ABB               	incf	___fttol@lval+2,f
  9001  0887  1903               	skipnz
  9002  0888  0ABC               	incf	___fttol@lval+3,f
  9003  0889                     i1l2659:	
  9004  0889  083C               	movf	___fttol@lval+3,w
  9005  088A  00B3               	movwf	?___fttol+3
  9006  088B  083B               	movf	___fttol@lval+2,w
  9007  088C  00B2               	movwf	?___fttol+2
  9008  088D  083A               	movf	___fttol@lval+1,w
  9009  088E  00B1               	movwf	?___fttol+1
  9010  088F  0839               	movf	___fttol@lval,w
  9011  0890  00B0               	movwf	?___fttol
  9012  0891  0008               	return
  9013  0892                     __end_of___fttol:	
  9014                           
  9015                           	psect	text39
  9016  172F                     __ptext39:	
  9017 ;; *************** function ___ftmul *****************
  9018 ;; Defined at:
  9019 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  f1              3    8[COMMON] float 
  9022 ;;  f2              3   11[COMMON] float 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9025 ;;  sign            1    9[BANK0 ] unsigned char 
  9026 ;;  cntr            1    8[BANK0 ] unsigned char 
  9027 ;;  exp             1    4[BANK0 ] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  3    8[COMMON] float 
  9030 ;; Registers used:
  9031 ;;		wreg, status,2, status,0, pclath, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9037 ;;      Params:         6       0       0       0       0
  9038 ;;      Locals:         0       6       0       0       0
  9039 ;;      Temps:          0       4       0       0       0
  9040 ;;      Totals:         6      10       0       0       0
  9041 ;;Total ram usage:       16 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:    1
  9044 ;; This function calls:
  9045 ;;		___ftpack
  9046 ;; This function is called by:
  9047 ;;		_Fuzzy
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           
  9052                           ;psect for function ___ftmul
  9053  172F                     ___ftmul:	
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9057  172F  0878               	movf	___ftmul@f1,w
  9058  1730  1283               	bcf	3,5	;RP0=0, select bank0
  9059  1731  1303               	bcf	3,6	;RP1=0, select bank0
  9060  1732  00A0               	movwf	??___ftmul
  9061  1733  0879               	movf	___ftmul@f1+1,w
  9062  1734  00A1               	movwf	??___ftmul+1
  9063  1735  087A               	movf	___ftmul@f1+2,w
  9064  1736  00A2               	movwf	??___ftmul+2
  9065  1737  1003               	clrc
  9066  1738  0D21               	rlf	??___ftmul+1,w
  9067  1739  0D22               	rlf	??___ftmul+2,w
  9068  173A  00A3               	movwf	??___ftmul+3
  9069  173B  0823               	movf	??___ftmul+3,w
  9070  173C  00A4               	movwf	___ftmul@exp
  9071  173D  08A4               	movf	___ftmul@exp,f
  9072  173E  1D03               	skipz
  9073  173F  2F47               	goto	i1l2575
  9074  1740  3000               	movlw	0
  9075  1741  00F8               	movwf	?___ftmul
  9076  1742  3000               	movlw	0
  9077  1743  00F9               	movwf	?___ftmul+1
  9078  1744  3000               	movlw	0
  9079  1745  00FA               	movwf	?___ftmul+2
  9080  1746  0008               	return
  9081  1747                     i1l2575:	
  9082  1747  087B               	movf	___ftmul@f2,w
  9083  1748  00A0               	movwf	??___ftmul
  9084  1749  087C               	movf	___ftmul@f2+1,w
  9085  174A  00A1               	movwf	??___ftmul+1
  9086  174B  087D               	movf	___ftmul@f2+2,w
  9087  174C  00A2               	movwf	??___ftmul+2
  9088  174D  1003               	clrc
  9089  174E  0D21               	rlf	??___ftmul+1,w
  9090  174F  0D22               	rlf	??___ftmul+2,w
  9091  1750  00A3               	movwf	??___ftmul+3
  9092  1751  0823               	movf	??___ftmul+3,w
  9093  1752  00A9               	movwf	___ftmul@sign
  9094  1753  08A9               	movf	___ftmul@sign,f
  9095  1754  1D03               	skipz
  9096  1755  2F5D               	goto	i1l2581
  9097  1756  3000               	movlw	0
  9098  1757  00F8               	movwf	?___ftmul
  9099  1758  3000               	movlw	0
  9100  1759  00F9               	movwf	?___ftmul+1
  9101  175A  3000               	movlw	0
  9102  175B  00FA               	movwf	?___ftmul+2
  9103  175C  0008               	return
  9104  175D                     i1l2581:	
  9105  175D  0829               	movf	___ftmul@sign,w
  9106  175E  3E7B               	addlw	123
  9107  175F  00A0               	movwf	??___ftmul
  9108  1760  0820               	movf	??___ftmul,w
  9109  1761  07A4               	addwf	___ftmul@exp,f
  9110  1762  0878               	movf	___ftmul@f1,w
  9111  1763  00A0               	movwf	??___ftmul
  9112  1764  0879               	movf	___ftmul@f1+1,w
  9113  1765  00A1               	movwf	??___ftmul+1
  9114  1766  087A               	movf	___ftmul@f1+2,w
  9115  1767  00A2               	movwf	??___ftmul+2
  9116  1768  3010               	movlw	16
  9117  1769                     u296_25:	
  9118  1769  1003               	clrc
  9119  176A  0CA2               	rrf	??___ftmul+2,f
  9120  176B  0CA1               	rrf	??___ftmul+1,f
  9121  176C  0CA0               	rrf	??___ftmul,f
  9122  176D  3EFF               	addlw	-1
  9123  176E  1D03               	skipz
  9124  176F  2F69               	goto	u296_25
  9125  1770  0820               	movf	??___ftmul,w
  9126  1771  00A3               	movwf	??___ftmul+3
  9127  1772  0823               	movf	??___ftmul+3,w
  9128  1773  00A9               	movwf	___ftmul@sign
  9129  1774  087B               	movf	___ftmul@f2,w
  9130  1775  00A0               	movwf	??___ftmul
  9131  1776  087C               	movf	___ftmul@f2+1,w
  9132  1777  00A1               	movwf	??___ftmul+1
  9133  1778  087D               	movf	___ftmul@f2+2,w
  9134  1779  00A2               	movwf	??___ftmul+2
  9135  177A  3010               	movlw	16
  9136  177B                     u297_25:	
  9137  177B  1003               	clrc
  9138  177C  0CA2               	rrf	??___ftmul+2,f
  9139  177D  0CA1               	rrf	??___ftmul+1,f
  9140  177E  0CA0               	rrf	??___ftmul,f
  9141  177F  3EFF               	addlw	-1
  9142  1780  1D03               	skipz
  9143  1781  2F7B               	goto	u297_25
  9144  1782  0820               	movf	??___ftmul,w
  9145  1783  00A3               	movwf	??___ftmul+3
  9146  1784  0823               	movf	??___ftmul+3,w
  9147  1785  06A9               	xorwf	___ftmul@sign,f
  9148  1786  3080               	movlw	128
  9149  1787  00A0               	movwf	??___ftmul
  9150  1788  0820               	movf	??___ftmul,w
  9151  1789  05A9               	andwf	___ftmul@sign,f
  9152  178A  17F9               	bsf	___ftmul@f1+1,7
  9153  178B  17FC               	bsf	___ftmul@f2+1,7
  9154  178C  30FF               	movlw	255
  9155  178D  05FB               	andwf	___ftmul@f2,f
  9156  178E  30FF               	movlw	255
  9157  178F  05FC               	andwf	___ftmul@f2+1,f
  9158  1790  3000               	movlw	0
  9159  1791  05FD               	andwf	___ftmul@f2+2,f
  9160  1792  3000               	movlw	0
  9161  1793  00A5               	movwf	___ftmul@f3_as_product
  9162  1794  3000               	movlw	0
  9163  1795  00A6               	movwf	___ftmul@f3_as_product+1
  9164  1796  3000               	movlw	0
  9165  1797  00A7               	movwf	___ftmul@f3_as_product+2
  9166  1798  3007               	movlw	7
  9167  1799  00A0               	movwf	??___ftmul
  9168  179A  0820               	movf	??___ftmul,w
  9169  179B  00A8               	movwf	___ftmul@cntr
  9170  179C                     i1l2593:	
  9171  179C  1C78               	btfss	___ftmul@f1,0
  9172  179D  2FAC               	goto	i1l2597
  9173  179E  087B               	movf	___ftmul@f2,w
  9174  179F  07A5               	addwf	___ftmul@f3_as_product,f
  9175  17A0  087C               	movf	___ftmul@f2+1,w
  9176  17A1  1103               	clrz
  9177  17A2  1803               	skipnc
  9178  17A3  0A7C               	incf	___ftmul@f2+1,w
  9179  17A4  1D03               	btfss	3,2
  9180  17A5  07A6               	addwf	___ftmul@f3_as_product+1,f
  9181  17A6  087D               	movf	___ftmul@f2+2,w
  9182  17A7  1103               	clrz
  9183  17A8  1803               	skipnc
  9184  17A9  0A7D               	incf	___ftmul@f2+2,w
  9185  17AA  1D03               	btfss	3,2
  9186  17AB  07A7               	addwf	___ftmul@f3_as_product+2,f
  9187  17AC                     i1l2597:	
  9188  17AC  3001               	movlw	1
  9189  17AD                     u300_25:	
  9190  17AD  1003               	clrc
  9191  17AE  0CFA               	rrf	___ftmul@f1+2,f
  9192  17AF  0CF9               	rrf	___ftmul@f1+1,f
  9193  17B0  0CF8               	rrf	___ftmul@f1,f
  9194  17B1  3EFF               	addlw	-1
  9195  17B2  1D03               	skipz
  9196  17B3  2FAD               	goto	u300_25
  9197  17B4  3001               	movlw	1
  9198  17B5                     u301_25:	
  9199  17B5  1003               	clrc
  9200  17B6  0DFB               	rlf	___ftmul@f2,f
  9201  17B7  0DFC               	rlf	___ftmul@f2+1,f
  9202  17B8  0DFD               	rlf	___ftmul@f2+2,f
  9203  17B9  3EFF               	addlw	-1
  9204  17BA  1D03               	skipz
  9205  17BB  2FB5               	goto	u301_25
  9206  17BC  3001               	movlw	1
  9207  17BD  02A8               	subwf	___ftmul@cntr,f
  9208  17BE  1D03               	btfss	3,2
  9209  17BF  2F9C               	goto	i1l2593
  9210  17C0  3009               	movlw	9
  9211  17C1  00A0               	movwf	??___ftmul
  9212  17C2  0820               	movf	??___ftmul,w
  9213  17C3  00A8               	movwf	___ftmul@cntr
  9214  17C4                     i1l2605:	
  9215  17C4  1C78               	btfss	___ftmul@f1,0
  9216  17C5  2FD4               	goto	i1l2609
  9217  17C6  087B               	movf	___ftmul@f2,w
  9218  17C7  07A5               	addwf	___ftmul@f3_as_product,f
  9219  17C8  087C               	movf	___ftmul@f2+1,w
  9220  17C9  1103               	clrz
  9221  17CA  1803               	skipnc
  9222  17CB  0A7C               	incf	___ftmul@f2+1,w
  9223  17CC  1D03               	btfss	3,2
  9224  17CD  07A6               	addwf	___ftmul@f3_as_product+1,f
  9225  17CE  087D               	movf	___ftmul@f2+2,w
  9226  17CF  1103               	clrz
  9227  17D0  1803               	skipnc
  9228  17D1  0A7D               	incf	___ftmul@f2+2,w
  9229  17D2  1D03               	btfss	3,2
  9230  17D3  07A7               	addwf	___ftmul@f3_as_product+2,f
  9231  17D4                     i1l2609:	
  9232  17D4  3001               	movlw	1
  9233  17D5                     u305_25:	
  9234  17D5  1003               	clrc
  9235  17D6  0CFA               	rrf	___ftmul@f1+2,f
  9236  17D7  0CF9               	rrf	___ftmul@f1+1,f
  9237  17D8  0CF8               	rrf	___ftmul@f1,f
  9238  17D9  3EFF               	addlw	-1
  9239  17DA  1D03               	skipz
  9240  17DB  2FD5               	goto	u305_25
  9241  17DC  3001               	movlw	1
  9242  17DD                     u306_25:	
  9243  17DD  1003               	clrc
  9244  17DE  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9245  17DF  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9246  17E0  0CA5               	rrf	___ftmul@f3_as_product,f
  9247  17E1  3EFF               	addlw	-1
  9248  17E2  1D03               	skipz
  9249  17E3  2FDD               	goto	u306_25
  9250  17E4  3001               	movlw	1
  9251  17E5  02A8               	subwf	___ftmul@cntr,f
  9252  17E6  1D03               	btfss	3,2
  9253  17E7  2FC4               	goto	i1l2605
  9254  17E8  0825               	movf	___ftmul@f3_as_product,w
  9255  17E9  00F0               	movwf	___ftpack@arg
  9256  17EA  0826               	movf	___ftmul@f3_as_product+1,w
  9257  17EB  00F1               	movwf	___ftpack@arg+1
  9258  17EC  0827               	movf	___ftmul@f3_as_product+2,w
  9259  17ED  00F2               	movwf	___ftpack@arg+2
  9260  17EE  0824               	movf	___ftmul@exp,w
  9261  17EF  00A0               	movwf	??___ftmul
  9262  17F0  0820               	movf	??___ftmul,w
  9263  17F1  00F3               	movwf	___ftpack@exp
  9264  17F2  0829               	movf	___ftmul@sign,w
  9265  17F3  00A1               	movwf	??___ftmul+1
  9266  17F4  0821               	movf	??___ftmul+1,w
  9267  17F5  00F4               	movwf	___ftpack@sign
  9268  17F6  160A  118A  2535   	fcall	___ftpack
  9269  17F9  0870               	movf	?___ftpack,w
  9270  17FA  00F8               	movwf	?___ftmul
  9271  17FB  0871               	movf	?___ftpack+1,w
  9272  17FC  00F9               	movwf	?___ftmul+1
  9273  17FD  0872               	movf	?___ftpack+2,w
  9274  17FE  00FA               	movwf	?___ftmul+2
  9275  17FF  0008               	return
  9276  1800                     __end_of___ftmul:	
  9277                           
  9278                           	psect	text40
  9279  1535                     __ptext40:	
  9280 ;; *************** function ___ftpack *****************
  9281 ;; Defined at:
  9282 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;  arg             3    0[COMMON] unsigned um
  9285 ;;  exp             1    3[COMMON] unsigned char 
  9286 ;;  sign            1    4[COMMON] unsigned char 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  3    0[COMMON] float 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9298 ;;      Params:         5       0       0       0       0
  9299 ;;      Locals:         0       0       0       0       0
  9300 ;;      Temps:          3       0       0       0       0
  9301 ;;      Totals:         8       0       0       0       0
  9302 ;;Total ram usage:        8 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		___ftadd
  9308 ;;		___ftdiv
  9309 ;;		___ftmul
  9310 ;;		___lwtoft
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function ___ftpack
  9316  1535                     ___ftpack:	
  9317                           
  9318                           ;incstack = 0
  9319                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9320  1535  0873               	movf	___ftpack@exp,w
  9321  1536  1903               	btfsc	3,2
  9322  1537  2D3D               	goto	i1l2245
  9323  1538  0872               	movf	___ftpack@arg+2,w
  9324  1539  0471               	iorwf	___ftpack@arg+1,w
  9325  153A  0470               	iorwf	___ftpack@arg,w
  9326  153B  1D03               	skipz
  9327  153C  2D50               	goto	i1l2251
  9328  153D                     i1l2245:	
  9329  153D  3000               	movlw	0
  9330  153E  00F0               	movwf	?___ftpack
  9331  153F  3000               	movlw	0
  9332  1540  00F1               	movwf	?___ftpack+1
  9333  1541  3000               	movlw	0
  9334  1542  00F2               	movwf	?___ftpack+2
  9335  1543  0008               	return
  9336  1544                     i1l2249:	
  9337  1544  3001               	movlw	1
  9338  1545  00F5               	movwf	??___ftpack
  9339  1546  0875               	movf	??___ftpack,w
  9340  1547  07F3               	addwf	___ftpack@exp,f
  9341  1548  3001               	movlw	1
  9342  1549                     u214_25:	
  9343  1549  1003               	clrc
  9344  154A  0CF2               	rrf	___ftpack@arg+2,f
  9345  154B  0CF1               	rrf	___ftpack@arg+1,f
  9346  154C  0CF0               	rrf	___ftpack@arg,f
  9347  154D  3EFF               	addlw	-1
  9348  154E  1D03               	skipz
  9349  154F  2D49               	goto	u214_25
  9350  1550                     i1l2251:	
  9351  1550  30FE               	movlw	254
  9352  1551  0572               	andwf	___ftpack@arg+2,w
  9353  1552  1903               	btfsc	3,2
  9354  1553  2D6B               	goto	i1l756
  9355  1554  2D44               	goto	i1l2249
  9356  1555                     i1l2253:	
  9357  1555  3001               	movlw	1
  9358  1556  00F5               	movwf	??___ftpack
  9359  1557  0875               	movf	??___ftpack,w
  9360  1558  07F3               	addwf	___ftpack@exp,f
  9361  1559  3001               	movlw	1
  9362  155A  07F0               	addwf	___ftpack@arg,f
  9363  155B  3000               	movlw	0
  9364  155C  1803               	skipnc
  9365  155D  3001               	movlw	1
  9366  155E  07F1               	addwf	___ftpack@arg+1,f
  9367  155F  3000               	movlw	0
  9368  1560  1803               	skipnc
  9369  1561  3001               	movlw	1
  9370  1562  07F2               	addwf	___ftpack@arg+2,f
  9371  1563  3001               	movlw	1
  9372  1564                     u216_25:	
  9373  1564  1003               	clrc
  9374  1565  0CF2               	rrf	___ftpack@arg+2,f
  9375  1566  0CF1               	rrf	___ftpack@arg+1,f
  9376  1567  0CF0               	rrf	___ftpack@arg,f
  9377  1568  3EFF               	addlw	-1
  9378  1569  1D03               	skipz
  9379  156A  2D64               	goto	u216_25
  9380  156B                     i1l756:	
  9381  156B  30FF               	movlw	255
  9382  156C  0572               	andwf	___ftpack@arg+2,w
  9383  156D  1903               	btfsc	3,2
  9384  156E  2D7A               	goto	i1l2261
  9385  156F  2D55               	goto	i1l2253
  9386  1570                     i1l2259:	
  9387  1570  3001               	movlw	1
  9388  1571  02F3               	subwf	___ftpack@exp,f
  9389  1572  3001               	movlw	1
  9390  1573                     u218_25:	
  9391  1573  1003               	clrc
  9392  1574  0DF0               	rlf	___ftpack@arg,f
  9393  1575  0DF1               	rlf	___ftpack@arg+1,f
  9394  1576  0DF2               	rlf	___ftpack@arg+2,f
  9395  1577  3EFF               	addlw	-1
  9396  1578  1D03               	skipz
  9397  1579  2D73               	goto	u218_25
  9398  157A                     i1l2261:	
  9399  157A  1FF1               	btfss	___ftpack@arg+1,7
  9400  157B  2D70               	goto	i1l2259
  9401  157C  1873               	btfsc	___ftpack@exp,0
  9402  157D  2D84               	goto	i1l762
  9403  157E  30FF               	movlw	255
  9404  157F  05F0               	andwf	___ftpack@arg,f
  9405  1580  307F               	movlw	127
  9406  1581  05F1               	andwf	___ftpack@arg+1,f
  9407  1582  30FF               	movlw	255
  9408  1583  05F2               	andwf	___ftpack@arg+2,f
  9409  1584                     i1l762:	
  9410  1584  1003               	clrc
  9411  1585  0CF3               	rrf	___ftpack@exp,f
  9412  1586  0873               	movf	___ftpack@exp,w
  9413  1587  00F5               	movwf	??___ftpack
  9414  1588  01F6               	clrf	??___ftpack+1
  9415  1589  01F7               	clrf	??___ftpack+2
  9416  158A  3010               	movlw	16
  9417  158B                     u221_25:	
  9418  158B  1003               	clrc
  9419  158C  0DF5               	rlf	??___ftpack,f
  9420  158D  0DF6               	rlf	??___ftpack+1,f
  9421  158E  0DF7               	rlf	??___ftpack+2,f
  9422  158F  3EFF               	addlw	-1
  9423  1590  1D03               	skipz
  9424  1591  2D8B               	goto	u221_25
  9425  1592  0875               	movf	??___ftpack,w
  9426  1593  04F0               	iorwf	___ftpack@arg,f
  9427  1594  0876               	movf	??___ftpack+1,w
  9428  1595  04F1               	iorwf	___ftpack@arg+1,f
  9429  1596  0877               	movf	??___ftpack+2,w
  9430  1597  04F2               	iorwf	___ftpack@arg+2,f
  9431  1598  0874               	movf	___ftpack@sign,w
  9432  1599  1903               	btfsc	3,2
  9433  159A  0008               	return
  9434  159B  17F2               	bsf	___ftpack@arg+2,7
  9435  159C  0008               	return
  9436  159D                     __end_of___ftpack:	
  9437  007E                     btemp	set	126	;btemp
  9438  007E                     wtemp	set	126
  9439  007E                     wtemp0	set	126
  9440  0080                     wtemp1	set	128
  9441  0082                     wtemp2	set	130
  9442  0084                     wtemp3	set	132
  9443  0086                     wtemp4	set	134
  9444  0088                     wtemp5	set	136
  9445  007F                     wtemp6	set	127
  9446  007E                     ttemp	set	126
  9447  007E                     ttemp0	set	126
  9448  0081                     ttemp1	set	129
  9449  0084                     ttemp2	set	132
  9450  0087                     ttemp3	set	135
  9451  007F                     ttemp4	set	127
  9452  007E                     ltemp	set	126
  9453  007E                     ltemp0	set	126
  9454  0082                     ltemp1	set	130
  9455  0086                     ltemp2	set	134
  9456  0080                     ltemp3	set	128


Data Sizes:
    Strings     82
    Constant    10
    Data        10
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     34      80
    BANK3            96      0      19
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1244$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[6]), display_rpm(BANK3[10]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_5(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_DutyCycle2
    _ISR->i1___wmul
    _send->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3670
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2179
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     372
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     442
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   60841
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                           ___lwtoft
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     377
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     196
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwtoft
     ___ftpack
   _send
     _USART_WriteChar
     i1___wmul
       i1___lwdiv (ARG)
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      13       9       19.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C1      12        0.0%
ABS                  0      0      C1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 01:47:23 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C9     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _tf 006D                          fsr 0004         ___wmul@multiplicand 00CB  
        ??i1_PWM_DutyCycle2 007C            i1___wmul@product 007C                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00BD                ___ftadd@sign 002D  
                       l199 0921                         l650 0769                         l476 0E76  
                       l494 0F3B                         l595 1366                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0BA8                         _rpm 00C3  
                       fsr0 0004                         _pwm 01A1                         _sum 00AF  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 00CD                __CFG_LVP$OFF 0000                        ?_ISR 0070  
              ___ftdiv@cntr 003A                ___ftdiv@sign 003F                        l3101 0F2D  
        LCD_WriteString@Str 00CB                        l3111 0F5E                        l3041 13A8  
                      l3027 12BF                        l3141 0FAD                        l3109 0F5A  
                      l3061 0E7B                        l3135 0F9E                        l3119 0F6F  
                      l3127 0F85                        l3063 0E86                        l3055 0E72  
                      l3151 0E50                        l2513 1206                        l3129 0F89  
                      l3153 0FF9                        l3067 0E98                        l3149 0FB1  
                      l3093 0F0C                        l3077 0ED6                        l2703 13FD  
                      l2519 135E                        l3079 0EED                        l2561 07CF  
                      l3089 0F06                        l2547 078A                        l2539 077A  
                      l2707 1408                        l2565 07DD                        l2557 07C2  
                      l2549 079A                        l2681 147B                        l2673 1457  
                      l2675 1465                        l2685 1486                        l2697 13E1  
                      l2699 13EF                        STR_1 1053                        STR_2 1042  
                      STR_3 1067                        STR_4 1061                        STR_5 101A  
                      u3215 1466                        u3225 1472                        u3235 147C  
                      u4107 091A                        u4117 0974                        u4207 1605  
                      u4127 1256                        u4217 12CB                        u4137 15A7  
                      u3265 13E4                        u4227 138B                        u4147 15B7  
                      u3195 145A                        u4237 1399                        u4157 15C5  
                      u3285 13F5                        u4247 13A5                        u4167 15D1  
                      u3615 1307                        u3295 13FE                        u2815 1367  
                      u4257 123F                        u4177 15DD                        u2905 07B1  
                      u2825 136E                        u4187 15EB                        u2915 07C3  
                      u3635 1498                        u4197 15F9                        u3725 0F23  
                      u3665 12E6                        u2875 078E                        u3765 0F4A  
                      u2895 079C                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 0892                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 1608  
                      btemp 007E            __end_of_ADC_Init 121A                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 1245                ___ftmul@cntr 0028  
              ___ftmul@sign 0029     __end_of_USART_WriteChar 11D3                       ??_ISR 0069  
              ___fttol@exp1 003D                ___fttol@lval 0039                 ?_TIMER0_Set 0070  
          __end_of_LCD_Init 1608             __end_of___aldiv 07E6                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 0A84                       ?_send 0070  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 172F             __end_of___ftneg 11ED  
           __end_of___ftmul 1800                       _T1CON 0010             __end_of___fttol 0892  
           __end_of___lwdiv 148D                       i1l112 0B9F                       i1l122 0E40  
                     i1l224 11CC                       i1l180 0CE6                       i1l149 0121  
           __end_of___lwmod 140F                       i1l762 1584                       i1l595 131D  
                     i1l756 156B                       i1l785 0A23                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019               __CFG_PWRTE$ON 0000  
                     _Fuzzy 006B             __end_of_dpowers 101A             __end_of_max_val 12B1  
           __end_of_isdigit 1208               ___ftpack@sign 0074                       _trimf 0A84  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 135A            __end_ofi1___wmul 1336                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
       i1___wmul@multiplier 0078                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F             __end_of_sprintf 1000  
        __size_ofi1___lwdiv 003E              ??_LCD_WriteCmd 00C9              ?_LCD_WriteData 0070  
               ?_USART_Init 00D8       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 097B                __end_of_send 1677                      ??_main 00E8  
             ___fttol@sign1 0038                      ??_send 0020                ?_TIMER0_Init 0070  
         __end_of_LCD_Clear 13A8                  Fuzzy@a_247 0059                  Fuzzy@a_248 005B  
                    ?_Fuzzy 0070                  Fuzzy@freio 0052                  Fuzzy@reduz 0060  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
          __end_of___ftpack 159D                      ?_trimf 0040                      i1l2311 09E9  
                    i1l2313 09F5                      i1l2305 09D4                      i1l2251 1550  
                    i1l2323 0A13                      i1l2315 09FA                      i1l3211 0BC4  
                    i1l2261 157A                      i1l2253 1555                      i1l2245 153D  
                    i1l2333 0A47                      i1l2325 0A1F                      i1l2317 09FE  
                    i1l2343 0A6A                      i1l3231 0C0A                      i1l3223 0BEE  
                    i1l3215 0BD2                      i1l2249 1544                      i1l2329 0A35  
                    i1l2353 168F                      i1l2259 1570                      i1l2283 09A4  
                    i1l2435 0B82                      i1l3243 0C34                      i1l3235 0C18  
                    i1l3227 0BFC                      i1l3219 0BE0                      i1l2605 17C4  
                    i1l2293 09BA                      i1l2381 1709                      i1l2373 16EA  
                    i1l2453 0D6C                      i1l2429 0AFD                      i1l3181 1425  
                    i1l2287 09AB                      i1l2359 16A5                      i1l3191 1446  
                    i1l3255 0C6B                      i1l3247 0C42                      i1l3239 0C26  
                    i1l2609 17D4                      i1l2625 081E                      i1l2393 14FF  
                    i1l2465 0E23                      i1l2721 1315                      i1l3257 0C6E  
                    i1l2651 086D                      i1l2643 0850                      i1l2459 0D9E  
                    i1l3187 143B                      i1l3179 1417                      i1l3283 0CE1  
                    i1l2581 175D                      i1l2653 0878                      i1l2645 0860  
                    i1l2397 1526                      i1l2813 026A                      i1l3269 0C8B  
                    i1l3285 0CE2                      i1l2575 1747                      i1l2655 087B  
                    i1l2487 1278                      i1l2593 179C                      i1l2809 01F0  
                    i1l2659 0889                      i1l2835 0374                      i1l2819 02D1  
                    i1l2597 17AC                      i1l2845 044F                      i1l2917 07FB  
                    i1l2909 07EF                      i1l2757 166C                      i1l2749 1650  
                    i1l2863 055D                      i1l2839 03E8                      i1l2791 013F  
                    i1l2873 05E1                      i1l2859 04E3                      i1l2795 015C  
                    i1l2787 0122                      u300_25 17AD                      i1l2869 05C4  
                    i1l2879 0613                      u221_25 158B                      u301_25 17B5  
                    u214_25 1549                      u216_25 1564                      u312_25 0851  
                    u305_25 17D5                      u233_25 09D5                      u218_25 1573  
                    u306_25 17DD                      u242_25 0A14                      u250_25 16B7  
                    u315_25 086F                      u251_25 16C9                      u331_25 126D  
                    u236_25 09EA                      u252_25 16EB                      u309_25 0825  
                    u253_25 16FC                      u333_25 131E                      u254_25 170A  
                    u342_25 01EE                      u334_25 1325                      u239_25 09FF  
                    u351_25 04E1                      u344_25 02CF                      u257_21 14F2  
                    u257_22 14F3                      u257_23 14F8                      u257_24 14F9  
                    u353_25 05C2            __end_of___lwtoft 122E                      u259_21 1519  
                    u259_22 151A                      u259_23 151F                      u259_24 1520  
                    u347_25 0372                      u349_25 044D         __size_of_TIMER0_Set 0008  
                    u390_25 1432                      u391_25 143C                      u296_25 1769  
                    u297_25 177B                      u387_25 141A                      u389_25 1426  
                    _SSPADD 0093                      _SSPBUF 0013                      Fuzzy@a 0057  
          LCD_WriteCmd@Byte 00CA                      ___ftge 14D6                   ??___aldiv 00D1  
                    ___wmul 135A                   ??___ftadd 0029              _PWM_DutyCycle1 12D1  
            _PWM_DutyCycle2 12F2            ?_USART_WriteChar 0070                   ??___ftdiv 0036  
                 ??___ftneg 007C                      _deltaV 00BF                   ??___ftmul 0020  
                 ??___fttol 0034                   ??___lwdiv 00CD                   ??___lwmod 00D5  
                    _buffer 0190                      _fitemp 00A3       USART_ReceiveChar@byte 0074  
                    _trapmf 0CF3                      _pulsos 00C1                      _status 00C7  
     ___ftmul@f3_as_product 0025                   ??_max_val 007C           __end_ofi1___lwdiv 144D  
                 ??_isdigit 00C9                   ?_ADC_Init 0070                      saved_w 007E  
       __size_of_USART_Init 0049                      trimf@a 0043                      trimf@b 0046  
                    trimf@c 0049                      trimf@x 0040                   ??_sprintf 00DA  
             ?i1_TIMER0_Set 0070     __end_of__initialization 0067                   ?_LCD_Init 0070  
                ___ftadd@f1 0023                  ___ftadd@f2 0026             ??_LCD_WriteData 00C9  
                ___ftge@ff1 0030                  ___ftge@ff2 0033                  ___ftdiv@f1 0033  
                ___ftdiv@f2 0030                  ___ftdiv@f3 003B                  ___ftneg@f1 0020  
    __end_of_PWM_DutyCycle1 12F2      __end_of_PWM_DutyCycle2 1313                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___fttol@f1 0030              __pcstackCOMMON 0070  
             __end_of_Fuzzy 0757                __pidataBANK0 0801                __pidataBANK1 11C0  
              __pidataBANK3 07FE               LCD_Cursor@Col 00C9               LCD_Cursor@Row 00CB  
              ??_LCD_Cursor 00CA             _LCD_WriteString 13A8               __end_of_trimf 0BA8  
                ___lwtoft@c 0078                   ?_PWM_Init 0070                   ?i1___wmul 0078  
            _OPTION_REGbits 0081                  ??_ADC_Init 00C9        __end_of_LCD_WriteCmd 1245  
                   ??_Fuzzy 007E   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
              sprintf@width 00E4                     ??_trimf 007C                  __pbssBANK1 00A0  
                __pbssBANK3 0190          __end_of_LCD_Cursor 12D1                  ??_LCD_Init 00CB  
             Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C9             ?_PWM_DutyCycle2 00C9  
                __pmaintext 0892                 Fuzzy@mantem 005D                     ?___ftge 0030  
                   ?___wmul 00C9                  __pintentry 0004                ??_TIMER0_Set 00C9  
                   _CCP1CON 0017                     _CCP2CON 001D                   ?___ftpack 0070  
                   ?_trapmf 0040                  ??_PWM_Init 00C9                  ??i1___wmul 007C  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 11DB     __end_of_LCD_WriteString 13D9  
                 _ADCResult 00BB                ??_USART_Init 00DC           LCD_WriteData@Byte 00CA  
                   ___aldiv 0757             __size_of___ftge 005F                     ___ftadd 097B  
                   ___ftdiv 1677                     ___ftneg 11E3             __size_of___wmul 0025  
                   ___ftmul 172F                     ___fttol 0804                     ___lwdiv 144D  
                   ___lwmod 13D9                  ??___ftpack 0075                     __ptext1 0E49  
                   __ptext2 11F8                     __ptext3 135A                     __ptext4 13D9  
                   __ptext5 144D                     __ptext6 148D                     __ptext7 0757  
                   __ptext8 11D3                     __ptext9 11ED                  _pas_cooler 00EE  
                ??___lwtoft 007B             __size_of_trapmf 0156                __size_of_ISR 014B  
                 _T1CONbits 0010                     _dpowers 1010           i1___lwdiv@divisor 0070  
                 _T2CONbits 0012                     _max_val 1293                     _isdigit 11F8  
         i1___lwdiv@counter 0077            ___aldiv@dividend 00CD                   _LCD_Clear 137F  
        __end_of_USART_Init 14D6                     _sprintf 0E49                     clrloop0 11DC  
      end_of_initialization 0067                   _RCSTAbits 0018            ___aldiv@quotient 00D4  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 11CB       i1___wmul@multiplicand 007A       __size_of_LCD_WriteCmd 0017  
                 _PORTBbits 0006                   _PORTEbits 0009                  _setpointUI 00C5  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 125C           __size_of_ADC_Init 0012  
                 i1___lwdiv 140F         PWM_DutyCycle1@valor 00C9                  _total_area 00B2  
       PWM_DutyCycle2@valor 00C9                 _CCP1CONbits 0017                 ___ftdiv@exp 003E  
               _CCP2CONbits 001D                   _TXSTAbits 0098            ?_LCD_WriteString 00CB  
         __size_of_LCD_Init 006B                _LCD_WriteCmd 122E                 ___ftmul@exp 0024  
            __end_of___ftge 1535              __end_of___wmul 137F              __end_of_trapmf 0E49  
  __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024         start_initialization 0015  
         __size_ofi1___wmul 0023                 __end_of_ISR 0CF3                  ?i1___lwdiv 0070  
          ??_PWM_DutyCycle1 00CB            ??_PWM_DutyCycle2 00CB       __end_of_LCD_WriteData 125C  
         _USART_ReceiveChar 07E6                    ??___ftge 0036          ?_USART_ReceiveChar 0070  
                  ??___wmul 00CD                 __pdataBANK0 006D                 __pdataBANK1 00EB  
               __pdataBANK3 01A1                send@checksum 0021                    ??_trapmf 007C  
            send@velocidade 0022         ??_USART_ReceiveChar 0073           __size_of___ftpack 0068  
                 ___latbits 0002           __size_of___lwtoft 0014               __pcstackBANK0 0020  
             __pcstackBANK1 00C9                 ??_LCD_Clear 00CB         __end_of__stringdata 106C  
              _isdigit$1440 00C9                 sprintf@_val 00DF                 sprintf@flag 00E3  
               sprintf@prec 00DE   __end_of_USART_ReceiveChar 07FE       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 00CB         TIMER0_Set@contagens 00C9                Fuzzy@aumenta 0063  
                  ?___aldiv 00C9                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0078                    ?___fttol 0030  
                  ?___lwdiv 00C9                    ?___lwmod 00D1                   __pstrings 1000  
                 _ativa_fan 00A0               ??_TIMER0_Init 00C9          USART_Init@BaudRate 00D8  
                  ?_max_val 003C                    ?_isdigit 0070                    _ADC_Init 1208  
                 _fop_rule1 00A6                   _fop_rule2 00A9                   _fop_rule3 00AC  
            __size_of_Fuzzy 06EC            ___lwdiv@quotient 00CE                 ??i1___lwdiv 0074  
                  ?_sprintf 00D7              __size_of_trimf 0124           ??_USART_WriteChar 0070  
              i1_TIMER0_Set 11C5             ___aldiv@divisor 00C9           interrupt_function 0004  
           ___aldiv@counter 00D2                    _LCD_Init 159D              ___wmul@product 00CD  
                 clear_ram0 11DB                    _PIE1bits 008C                    _PIE2bits 008D  
                  _PIR1bits 000C                    _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 1277  
               _display_rpm 0197                  _ADCON0bits 001F                 __stringbase 100F  
                _ADCON1bits 009F                 __stringdata 101A                    _PWM_Init 1336  
         ___wmul@multiplier 00C9                    i1___wmul 1313         __end_of_TIMER0_Init 11F8  
__size_of_USART_ReceiveChar 0018                  _EECON1bits 018C                    Fuzzy@tip 0054  
          __size_of___aldiv 008F            __size_of___ftadd 0109            __size_of___ftdiv 00B8  
          __size_of___ftneg 000A            __size_of___ftmul 00D1            __size_of___fttol 008E  
          __size_of___lwdiv 0040            __size_of___lwmod 0036                    ___ftpack 1535  
        __end_of__stringtab 1010                    ___lwtoft 121A                   send@index 0024  
          __size_of_max_val 001E            __size_of_isdigit 0010             ___lwdiv@divisor 00C9  
           ___lwdiv@counter 00D0           _USART_WriteString 1277                    __ptext10 1336  
                  __ptext11 12F2                    __ptext20 0BA8                    __ptext12 12D1  
                  __ptext21 140F                    __ptext13 13A8                    __ptext30 0A84  
                  __ptext22 11C5                    __ptext14 1245                    __ptext31 0CF3  
                  __ptext23 1608                    __ptext15 159D                    __ptext40 1535  
                  __ptext32 11E3                    __ptext24 1313                    __ptext16 12B1  
                  __ptext33 1677                    __ptext25 07E6                    __ptext17 137F  
                  __ptext34 097B                    __ptext26 1277                    __ptext18 122E  
                  __ptext35 1293                    __ptext27 11CB                    __ptext19 1208  
                  __ptext36 14D6                    __ptext28 006B                    __ptext37 121A  
                  __ptext29 125C                    __ptext38 0804                    __ptext39 172F  
        ?_USART_WriteString 0070            __size_of_sprintf 01B7          i1___lwdiv@dividend 0072  
             __size_of_main 00E9               __size_of_send 006F         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071                    _setpoint 00EB                  _LCD_Cursor 12B1  
  __size_of_LCD_WriteString 0031          i1___lwdiv@quotient 0075                 _TIMER0_Init 11ED  
                _INTCONbits 000B   __end_of_USART_WriteString 1293                    max_val@a 003C  
                  max_val@b 003F                    isdigit@c 00CA                    intlevel1 0000  
                 sprintf@ap 00DD                   sprintf@sp 00E6            ___lwmod@dividend 00D3  
                 stringcode 100A        USART_WriteString@str 0072                  _TIMER0_Set 11D3  
                  trapmf@ua 004F             _USART_WriteChar 11CB                    sprintf@c 00E7  
                  sprintf@f 00D7             ___lwmod@divisor 00D1             ___lwmod@counter 00D6  
                  stringdir 100A                    stringtab 1000                ___aldiv@sign 00D3  
    __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E  
                _SSPCONbits 0014                  _USART_Init 148D  
