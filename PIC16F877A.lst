

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 12:41:17 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  10BB                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  10BB  3407               	retlw	7
   607  10BC  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  10C3                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  10C3  3400               	retlw	0
   614  10C4  34A0               	retlw	160
   615  10C5  3441               	retlw	65
   616                           
   617                           ;initializer for _tf
   618  10C6  3400               	retlw	0
   619  10C7  34A0               	retlw	160
   620  10C8  3441               	retlw	65
   621                           
   622                           	psect	stringtext
   623  1800                     __pstringtext:	
   624  1800                     stringtab:	
   625  1800                     __stringtab:	
   626                           
   627                           ;	String table - string pointers are 2 bytes each
   628  1800  1BFF               	btfsc	btemp+1,7
   629  1801  280A               	ljmp	stringcode
   630  1802  1383               	bcf	3,7
   631  1803  187F               	btfsc	btemp+1,0
   632  1804  1783               	bsf	3,7
   633  1805  0800               	movf	0,w
   634  1806  0A84               	incf	4,f
   635  1807  1903               	skipnz
   636  1808  0AFF               	incf	btemp+1,f
   637  1809  0008               	return
   638  180A                     stringcode:	
   639  180A  087F               	movf	btemp+1,w
   640  180B  397F               	andlw	127
   641  180C  008A               	movwf	10
   642  180D  0804               	movf	4,w
   643  180E  0A84               	incf	4,f
   644  180F  1903               	skipnz
   645  1810  0AFF               	incf	btemp+1,f
   646  1811  0082               	movwf	2
   647  1812                     __stringbase:	
   648  1812                     __end_of__stringtab:	
   649  1812                     _dpowers:	
   650  1812  3401               	retlw	1
   651  1813  3400               	retlw	0
   652  1814  340A               	retlw	10
   653  1815  3400               	retlw	0
   654  1816  3464               	retlw	100
   655  1817  3400               	retlw	0
   656  1818  34E8               	retlw	232
   657  1819  3403               	retlw	3
   658  181A  3410               	retlw	16
   659  181B  3427               	retlw	39
   660  181C                     __end_of_dpowers:	
   661  000E                     _TMR1	set	14
   662  001F                     _ADCON0bits	set	31
   663  001E                     _ADRESH	set	30
   664  0017                     _CCP1CON	set	23
   665  0017                     _CCP1CONbits	set	23
   666  001D                     _CCP2CON	set	29
   667  001D                     _CCP2CONbits	set	29
   668  0015                     _CCPR1L	set	21
   669  001B                     _CCPR2L	set	27
   670  000B                     _INTCONbits	set	11
   671  000C                     _PIR1bits	set	12
   672  000D                     _PIR2bits	set	13
   673  0005                     _PORTA	set	5
   674  0006                     _PORTB	set	6
   675  0006                     _PORTBbits	set	6
   676  0007                     _PORTC	set	7
   677  0008                     _PORTD	set	8
   678  0009                     _PORTE	set	9
   679  0009                     _PORTEbits	set	9
   680  001A                     _RCREG	set	26
   681  0018                     _RCSTAbits	set	24
   682  0013                     _SSPBUF	set	19
   683  0014                     _SSPCONbits	set	20
   684  0010                     _T1CON	set	16
   685  0010                     _T1CONbits	set	16
   686  0012                     _T2CONbits	set	18
   687  0001                     _TMR0	set	1
   688  000F                     _TMR1H	set	15
   689  000E                     _TMR1L	set	14
   690  0019                     _TXREG	set	25
   691  00C1                     _OERR	set	193
   692  009F                     _ADCON1bits	set	159
   693  009E                     _ADRESL	set	158
   694  0081                     _OPTION_REGbits	set	129
   695  008C                     _PIE1bits	set	140
   696  008D                     _PIE2bits	set	141
   697  0092                     _PR2	set	146
   698  0099                     _SPBRG	set	153
   699  0093                     _SSPADD	set	147
   700  0091                     _SSPCON2	set	145
   701  0091                     _SSPCON2bits	set	145
   702  0094                     _SSPSTATbits	set	148
   703  0085                     _TRISA	set	133
   704  0086                     _TRISB	set	134
   705  0087                     _TRISC	set	135
   706  0088                     _TRISD	set	136
   707  0089                     _TRISE	set	137
   708  0098                     _TXSTAbits	set	152
   709  010D                     _EEADR	set	269
   710  010C                     _EEDATA	set	268
   711  018C                     _EECON1bits	set	396
   712  018D                     _EECON2	set	397
   713  181C                     __stringdata:	
   714  181C                     STR_19:	
   715  181C  340A               	retlw	10
   716  181D  340D               	retlw	13
   717  181E  3420               	retlw	32	;' '
   718  181F  342D               	retlw	45	;'-'
   719  1820  342D               	retlw	45	;'-'
   720  1821  342D               	retlw	45	;'-'
   721  1822  342D               	retlw	45	;'-'
   722  1823  342D               	retlw	45	;'-'
   723  1824  342D               	retlw	45	;'-'
   724  1825  342D               	retlw	45	;'-'
   725  1826  3420               	retlw	32	;' '
   726  1827  3445               	retlw	69	;'E'
   727  1828  3453               	retlw	83	;'S'
   728  1829  3454               	retlw	84	;'T'
   729  182A  344F               	retlw	79	;'O'
   730  182B  3455               	retlw	85	;'U'
   731  182C  3452               	retlw	82	;'R'
   732  182D  344F               	retlw	79	;'O'
   733  182E  3420               	retlw	32	;' '
   734  182F  3444               	retlw	68	;'D'
   735  1830  3445               	retlw	69	;'E'
   736  1831  3420               	retlw	32	;' '
   737  1832  3450               	retlw	80	;'P'
   738  1833  3449               	retlw	73	;'I'
   739  1834  344C               	retlw	76	;'L'
   740  1835  3448               	retlw	72	;'H'
   741  1836  3441               	retlw	65	;'A'
   742  1837  3420               	retlw	32	;' '
   743  1838  342D               	retlw	45	;'-'
   744  1839  342D               	retlw	45	;'-'
   745  183A  342D               	retlw	45	;'-'
   746  183B  342D               	retlw	45	;'-'
   747  183C  342D               	retlw	45	;'-'
   748  183D  342D               	retlw	45	;'-'
   749  183E  342D               	retlw	45	;'-'
   750  183F  3420               	retlw	32	;' '
   751  1840  340A               	retlw	10
   752  1841  340D               	retlw	13
   753  1842  3420               	retlw	32	;' '
   754  1843  3400               	retlw	0
   755  1844                     STR_11:	
   756  1844  3449               	retlw	73	;'I'
   757  1845  346E               	retlw	110	;'n'
   758  1846  3469               	retlw	105	;'i'
   759  1847  3463               	retlw	99	;'c'
   760  1848  3469               	retlw	105	;'i'
   761  1849  3461               	retlw	97	;'a'
   762  184A  346C               	retlw	108	;'l'
   763  184B  3469               	retlw	105	;'i'
   764  184C  347A               	retlw	122	;'z'
   765  184D  3461               	retlw	97	;'a'
   766  184E  346E               	retlw	110	;'n'
   767  184F  3464               	retlw	100	;'d'
   768  1850  346F               	retlw	111	;'o'
   769  1851  3420               	retlw	32	;' '
   770  1852  346F               	retlw	111	;'o'
   771  1853  3420               	retlw	32	;' '
   772  1854  3450               	retlw	80	;'P'
   773  1855  3449               	retlw	73	;'I'
   774  1856  3443               	retlw	67	;'C'
   775  1857  3431               	retlw	49	;'1'
   776  1858  3436               	retlw	54	;'6'
   777  1859  3446               	retlw	70	;'F'
   778  185A  3438               	retlw	56	;'8'
   779  185B  3437               	retlw	55	;'7'
   780  185C  3437               	retlw	55	;'7'
   781  185D  3441               	retlw	65	;'A'
   782  185E  340A               	retlw	10
   783  185F  340D               	retlw	13
   784  1860  3400               	retlw	0
   785  1861                     STR_12:	
   786  1861  3455               	retlw	85	;'U'
   787  1862  3453               	retlw	83	;'S'
   788  1863  3441               	retlw	65	;'A'
   789  1864  3452               	retlw	82	;'R'
   790  1865  3454               	retlw	84	;'T'
   791  1866  343A               	retlw	58	;':'
   792  1867  3420               	retlw	32	;' '
   793  1868  3431               	retlw	49	;'1'
   794  1869  3431               	retlw	49	;'1'
   795  186A  3435               	retlw	53	;'5'
   796  186B  342E               	retlw	46	;'.'
   797  186C  3432               	retlw	50	;'2'
   798  186D  3430               	retlw	48	;'0'
   799  186E  3430               	retlw	48	;'0'
   800  186F  3462               	retlw	98	;'b'
   801  1870  3470               	retlw	112	;'p'
   802  1871  3473               	retlw	115	;'s'
   803  1872  340A               	retlw	10
   804  1873  340D               	retlw	13
   805  1874  3400               	retlw	0
   806  1875                     STR_13:	
   807  1875  3449               	retlw	73	;'I'
   808  1876  346E               	retlw	110	;'n'
   809  1877  3469               	retlw	105	;'i'
   810  1878  3463               	retlw	99	;'c'
   811  1879  3469               	retlw	105	;'i'
   812  187A  3461               	retlw	97	;'a'
   813  187B  346C               	retlw	108	;'l'
   814  187C  3469               	retlw	105	;'i'
   815  187D  347A               	retlw	122	;'z'
   816  187E  3461               	retlw	97	;'a'
   817  187F  346E               	retlw	110	;'n'
   818  1880  3464               	retlw	100	;'d'
   819  1881  346F               	retlw	111	;'o'
   820  1882  342E               	retlw	46	;'.'
   821  1883  342E               	retlw	46	;'.'
   822  1884  342E               	retlw	46	;'.'
   823  1885  3400               	retlw	0
   824  1886                     STR_9:	
   825  1886  340A               	retlw	10
   826  1887  340D               	retlw	13
   827  1888  3470               	retlw	112	;'p'
   828  1889  3477               	retlw	119	;'w'
   829  188A  346D               	retlw	109	;'m'
   830  188B  3420               	retlw	32	;' '
   831  188C  343D               	retlw	61	;'='
   832  188D  3420               	retlw	32	;' '
   833  188E  3431               	retlw	49	;'1'
   834  188F  3430               	retlw	48	;'0'
   835  1890  3430               	retlw	48	;'0'
   836  1891  3430               	retlw	48	;'0'
   837  1892  340A               	retlw	10
   838  1893  340D               	retlw	13
   839  1894  3400               	retlw	0
   840  1895                     STR_10:	
   841  1895  340A               	retlw	10
   842  1896  340D               	retlw	13
   843  1897  3470               	retlw	112	;'p'
   844  1898  3477               	retlw	119	;'w'
   845  1899  346D               	retlw	109	;'m'
   846  189A  3420               	retlw	32	;' '
   847  189B  343D               	retlw	61	;'='
   848  189C  3420               	retlw	32	;' '
   849  189D  3431               	retlw	49	;'1'
   850  189E  3430               	retlw	48	;'0'
   851  189F  3432               	retlw	50	;'2'
   852  18A0  3433               	retlw	51	;'3'
   853  18A1  340A               	retlw	10
   854  18A2  340D               	retlw	13
   855  18A3  3400               	retlw	0
   856  18A4                     STR_6:	
   857  18A4  340A               	retlw	10
   858  18A5  340D               	retlw	13
   859  18A6  3470               	retlw	112	;'p'
   860  18A7  3477               	retlw	119	;'w'
   861  18A8  346D               	retlw	109	;'m'
   862  18A9  3420               	retlw	32	;' '
   863  18AA  343D               	retlw	61	;'='
   864  18AB  3420               	retlw	32	;' '
   865  18AC  3435               	retlw	53	;'5'
   866  18AD  3431               	retlw	49	;'1'
   867  18AE  3432               	retlw	50	;'2'
   868  18AF  340A               	retlw	10
   869  18B0  340D               	retlw	13
   870  18B1  3400               	retlw	0
   871  18B2                     STR_5:	
   872  18B2  340A               	retlw	10
   873  18B3  340D               	retlw	13
   874  18B4  3470               	retlw	112	;'p'
   875  18B5  3477               	retlw	119	;'w'
   876  18B6  346D               	retlw	109	;'m'
   877  18B7  3420               	retlw	32	;' '
   878  18B8  343D               	retlw	61	;'='
   879  18B9  3420               	retlw	32	;' '
   880  18BA  3432               	retlw	50	;'2'
   881  18BB  3435               	retlw	53	;'5'
   882  18BC  3436               	retlw	54	;'6'
   883  18BD  340A               	retlw	10
   884  18BE  340D               	retlw	13
   885  18BF  3400               	retlw	0
   886  18C0                     STR_8:	
   887  18C0  340A               	retlw	10
   888  18C1  340D               	retlw	13
   889  18C2  3470               	retlw	112	;'p'
   890  18C3  3477               	retlw	119	;'w'
   891  18C4  346D               	retlw	109	;'m'
   892  18C5  3420               	retlw	32	;' '
   893  18C6  343D               	retlw	61	;'='
   894  18C7  3420               	retlw	32	;' '
   895  18C8  3438               	retlw	56	;'8'
   896  18C9  3439               	retlw	57	;'9'
   897  18CA  3436               	retlw	54	;'6'
   898  18CB  340A               	retlw	10
   899  18CC  340D               	retlw	13
   900  18CD  3400               	retlw	0
   901  18CE                     STR_4:	
   902  18CE  340A               	retlw	10
   903  18CF  340D               	retlw	13
   904  18D0  3470               	retlw	112	;'p'
   905  18D1  3477               	retlw	119	;'w'
   906  18D2  346D               	retlw	109	;'m'
   907  18D3  3420               	retlw	32	;' '
   908  18D4  343D               	retlw	61	;'='
   909  18D5  3420               	retlw	32	;' '
   910  18D6  3431               	retlw	49	;'1'
   911  18D7  3432               	retlw	50	;'2'
   912  18D8  3438               	retlw	56	;'8'
   913  18D9  340A               	retlw	10
   914  18DA  340D               	retlw	13
   915  18DB  3400               	retlw	0
   916  18DC                     STR_7:	
   917  18DC  340A               	retlw	10
   918  18DD  340D               	retlw	13
   919  18DE  3470               	retlw	112	;'p'
   920  18DF  3477               	retlw	119	;'w'
   921  18E0  346D               	retlw	109	;'m'
   922  18E1  3420               	retlw	32	;' '
   923  18E2  343D               	retlw	61	;'='
   924  18E3  3420               	retlw	32	;' '
   925  18E4  3437               	retlw	55	;'7'
   926  18E5  3436               	retlw	54	;'6'
   927  18E6  3438               	retlw	56	;'8'
   928  18E7  340A               	retlw	10
   929  18E8  340D               	retlw	13
   930  18E9  3400               	retlw	0
   931  18EA                     STR_1:	
   932  18EA  340A               	retlw	10
   933  18EB  340D               	retlw	13
   934  18EC  3464               	retlw	100	;'d'
   935  18ED  3465               	retlw	101	;'e'
   936  18EE  3473               	retlw	115	;'s'
   937  18EF  346C               	retlw	108	;'l'
   938  18F0  3469               	retlw	105	;'i'
   939  18F1  3467               	retlw	103	;'g'
   940  18F2  3461               	retlw	97	;'a'
   941  18F3  3464               	retlw	100	;'d'
   942  18F4  346F               	retlw	111	;'o'
   943  18F5  340A               	retlw	10
   944  18F6  340D               	retlw	13
   945  18F7  3400               	retlw	0
   946  18F8                     STR_2:	
   947  18F8  340A               	retlw	10
   948  18F9  340D               	retlw	13
   949  18FA  3470               	retlw	112	;'p'
   950  18FB  3477               	retlw	119	;'w'
   951  18FC  346D               	retlw	109	;'m'
   952  18FD  3420               	retlw	32	;' '
   953  18FE  343D               	retlw	61	;'='
   954  18FF  3420               	retlw	32	;' '
   955  1900  3433               	retlw	51	;'3'
   956  1901  3432               	retlw	50	;'2'
   957  1902  340A               	retlw	10
   958  1903  340D               	retlw	13
   959  1904  3400               	retlw	0
   960  1905                     STR_3:	
   961  1905  340A               	retlw	10
   962  1906  340D               	retlw	13
   963  1907  3470               	retlw	112	;'p'
   964  1908  3477               	retlw	119	;'w'
   965  1909  346D               	retlw	109	;'m'
   966  190A  3420               	retlw	32	;' '
   967  190B  343D               	retlw	61	;'='
   968  190C  3420               	retlw	32	;' '
   969  190D  3436               	retlw	54	;'6'
   970  190E  3434               	retlw	52	;'4'
   971  190F  340A               	retlw	10
   972  1910  340D               	retlw	13
   973  1911  3400               	retlw	0
   974  1912                     STR_17:	
   975  1912  3452               	retlw	82	;'R'
   976  1913  3450               	retlw	80	;'P'
   977  1914  344D               	retlw	77	;'M'
   978  1915  343A               	retlw	58	;':'
   979  1916  3420               	retlw	32	;' '
   980  1917  3400               	retlw	0
   981  1918                     STR_18:	
   982  1918  3450               	retlw	80	;'P'
   983  1919  3457               	retlw	87	;'W'
   984  191A  344D               	retlw	77	;'M'
   985  191B  343A               	retlw	58	;':'
   986  191C  3420               	retlw	32	;' '
   987  191D  3400               	retlw	0
   988  191E                     STR_14:	
   989  191E  3425               	retlw	37	;'%'
   990  191F  3430               	retlw	48	;'0'
   991  1920  3434               	retlw	52	;'4'
   992  1921  3464               	retlw	100	;'d'
   993  1922  3400               	retlw	0
   994  1923                     __end_of__stringdata:	
   995                           
   996                           ; #config settings
   997  0000                     
   998                           	psect	cinit
   999  0019                     start_initialization:	
  1000  0019                     __initialization:	
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003  0019  1383               	bcf	3,7	;select IRP bank0
  1004  001A  30A0               	movlw	low __pbssBANK1
  1005  001B  0084               	movwf	4
  1006  001C  30C7               	movlw	low (__pbssBANK1+39)
  1007  001D  120A  118A  27F7  120A  118A  	fcall	clear_ram0
  1008                           
  1009                           ; Clear objects allocated to BANK3
  1010  0022  1783               	bsf	3,7	;select IRP bank2
  1011  0023  3090               	movlw	low __pbssBANK3
  1012  0024  0084               	movwf	4
  1013  0025  30B2               	movlw	low (__pbssBANK3+34)
  1014  0026  120A  118A  27F7  120A  118A  	fcall	clear_ram0
  1015                           
  1016                           ; Initialize objects allocated to BANK3
  1017  002B  1683               	bsf	3,5	;RP0=1, select bank3
  1018  002C  1703               	bsf	3,6	;RP1=1, select bank3
  1019  002D  160A  118A  20C3  120A  118A  	fcall	__pidataBANK3	;fetch initializer
  1020  0032  00BD               	movwf	__pdataBANK3& (0+127)
  1021  0033  160A  118A  20C4  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
  1022  0038  00BE               	movwf	(__pdataBANK3+1)& (0+127)
  1023  0039  160A  118A  20C5  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
  1024  003E  00BF               	movwf	(__pdataBANK3+2)& (0+127)
  1025  003F  160A  118A  20C6  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
  1026  0044  00C0               	movwf	(__pdataBANK3+3)& (0+127)
  1027  0045  160A  118A  20C7  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
  1028  004A  00C1               	movwf	(__pdataBANK3+4)& (0+127)
  1029  004B  160A  118A  20C8  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
  1030  0050  00C2               	movwf	(__pdataBANK3+5)& (0+127)
  1031                           
  1032                           ; Initialize objects allocated to BANK1
  1033  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0053  160A  118A  20BB  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1036  0058  00E5               	movwf	__pdataBANK1& (0+127)
  1037  0059  160A  118A  20BC   	fcall	__pidataBANK1+1	;fetch initializer
  1038  005C  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1039  005D                     end_of_initialization:	
  1040                           ;End of C runtime variable initialization code
  1041                           
  1042  005D                     __end_of__initialization:	
  1043  005D  0183               	clrf	3
  1044  005E  120A  158A  2923   	ljmp	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssBANK1
  1047  00A0                     __pbssBANK1:	
  1048  00A0                     _fitemp:	
  1049  00A0                     	ds	3
  1050  00A3                     _fop_rule1:	
  1051  00A3                     	ds	3
  1052  00A6                     _fop_rule2:	
  1053  00A6                     	ds	3
  1054  00A9                     _fop_rule3:	
  1055  00A9                     	ds	3
  1056  00AC                     _sum:	
  1057  00AC                     	ds	3
  1058  00AF                     _temp:	
  1059  00AF                     	ds	3
  1060  00B2                     _total_area:	
  1061  00B2                     	ds	3
  1062  00B5                     _x:	
  1063  00B5                     	ds	3
  1064  00B8                     _y:	
  1065  00B8                     	ds	3
  1066  00BB                     _ADCResult:	
  1067  00BB                     	ds	2
  1068  00BD                     _contagens_tm0:	
  1069  00BD                     	ds	2
  1070  00BF                     _deltaV:	
  1071  00BF                     	ds	2
  1072  00C1                     _pulsos:	
  1073  00C1                     	ds	2
  1074  00C3                     _pwm:	
  1075  00C3                     	ds	2
  1076  00C5                     _rpm:	
  1077  00C5                     	ds	2
  1078                           
  1079                           	psect	dataBANK1
  1080  00E5                     __pdataBANK1:	
  1081  00E5                     _pas_cooler:	
  1082  00E5                     	ds	2
  1083                           
  1084                           	psect	bssBANK3
  1085  0190                     __pbssBANK3:	
  1086  0190                     _ativa_fan:	
  1087  0190                     	ds	3
  1088  0193                     _derro:	
  1089  0193                     	ds	3
  1090  0196                     _contador_rb6:	
  1091  0196                     	ds	2
  1092  0198                     _status:	
  1093  0198                     	ds	2
  1094  019A                     _temp_lida:	
  1095  019A                     	ds	2
  1096  019C                     _tempo_rb6:	
  1097  019C                     	ds	2
  1098  019E                     _display_pwm:	
  1099  019E                     	ds	10
  1100  01A8                     _display_rpm:	
  1101  01A8                     	ds	10
  1102                           
  1103                           	psect	dataBANK3
  1104  01BD                     __pdataBANK3:	
  1105  01BD                     _setpoint:	
  1106  01BD                     	ds	3
  1107  01C0                     _tf:	
  1108  01C0                     	ds	3
  1109                           
  1110                           	psect	clrtext
  1111  07F7                     clear_ram0:	
  1112                           ;	Called with FSR containing the base address, and
  1113                           ;	W with the last address+1
  1114                           
  1115  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1116  07F8                     clrloop0:	
  1117  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1118  07F9  0A84               	incf	4,f	;increment pointer
  1119  07FA  0604               	xorwf	4,w	;XOR with final address
  1120  07FB  1903               	btfsc	3,2	;have we reached the end yet?
  1121  07FC  3400               	retlw	0	;all done for this memory range, return
  1122  07FD  0604               	xorwf	4,w	;XOR again to restore value
  1123  07FE  2FF8               	goto	clrloop0	;do the next byte
  1124                           
  1125                           	psect	cstackBANK3
  1126  01B2                     __pcstackBANK3:	
  1127  01B2                     sprintf@ap:	
  1128                           
  1129                           ; 1 bytes @ 0x0
  1130  01B2                     	ds	1
  1131  01B3                     sprintf@prec:	
  1132                           
  1133                           ; 1 bytes @ 0x1
  1134  01B3                     	ds	1
  1135  01B4                     sprintf@_val:	
  1136                           
  1137                           ; 4 bytes @ 0x2
  1138  01B4                     	ds	4
  1139  01B8                     sprintf@flag:	
  1140                           
  1141                           ; 1 bytes @ 0x6
  1142  01B8                     	ds	1
  1143  01B9                     sprintf@width:	
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  01B9                     	ds	2
  1147  01BB                     sprintf@sp:	
  1148                           
  1149                           ; 1 bytes @ 0x9
  1150  01BB                     	ds	1
  1151  01BC                     sprintf@c:	
  1152                           
  1153                           ; 1 bytes @ 0xA
  1154  01BC                     	ds	1
  1155                           
  1156                           	psect	cstackBANK1
  1157  00C7                     __pcstackBANK1:	
  1158  00C7                     ??_ISR:	
  1159                           
  1160                           ; 0 bytes @ 0x0
  1161  00C7                     	ds	4
  1162  00CB                     ?_PWM_DutyCycle2:	
  1163  00CB                     ??_TIMER0_Set:	
  1164                           ; 0 bytes @ 0x4
  1165                           
  1166  00CB                     ??_TIMER0_Init:	
  1167                           ; 0 bytes @ 0x4
  1168                           
  1169  00CB                     ??_ADC_Init:	
  1170                           ; 0 bytes @ 0x4
  1171                           
  1172  00CB                     ??_PWM_Init:	
  1173                           ; 0 bytes @ 0x4
  1174                           
  1175  00CB                     ?_LCD_Cursor:	
  1176                           ; 0 bytes @ 0x4
  1177                           
  1178  00CB                     ?_PWM_DutyCycle1:	
  1179                           ; 0 bytes @ 0x4
  1180                           
  1181  00CB                     ??_isdigit:	
  1182                           ; 0 bytes @ 0x4
  1183                           
  1184  00CB                     ??_USART_WriteChar:	
  1185                           ; 0 bytes @ 0x4
  1186                           
  1187  00CB                     ??_LCD_WriteCmd:	
  1188                           ; 0 bytes @ 0x4
  1189                           
  1190  00CB                     ??_LCD_WriteData:	
  1191                           ; 0 bytes @ 0x4
  1192                           
  1193  00CB                     ?___wmul:	
  1194                           ; 0 bytes @ 0x4
  1195                           
  1196  00CB                     ?___lwdiv:	
  1197                           ; 2 bytes @ 0x4
  1198                           
  1199  00CB                     ?___aldiv:	
  1200                           ; 2 bytes @ 0x4
  1201                           
  1202  00CB                     USART_WriteChar@byte:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205  00CB                     TIMER0_Set@contagens:	
  1206                           ; 1 bytes @ 0x4
  1207                           
  1208  00CB                     LCD_Cursor@Col:	
  1209                           ; 1 bytes @ 0x4
  1210                           
  1211  00CB                     _isdigit$1449:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214  00CB                     PWM_DutyCycle1@valor:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217  00CB                     PWM_DutyCycle2@valor:	
  1218                           ; 2 bytes @ 0x4
  1219                           
  1220  00CB                     ___wmul@multiplier:	
  1221                           ; 2 bytes @ 0x4
  1222                           
  1223  00CB                     ___lwdiv@divisor:	
  1224                           ; 2 bytes @ 0x4
  1225                           
  1226  00CB                     ___aldiv@divisor:	
  1227                           ; 2 bytes @ 0x4
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x4
  1231  00CB                     	ds	1
  1232  00CC                     ?_USART_WriteString:	
  1233  00CC                     ??_LCD_Cursor:	
  1234                           ; 0 bytes @ 0x5
  1235                           
  1236  00CC                     LCD_WriteCmd@Byte:	
  1237                           ; 0 bytes @ 0x5
  1238                           
  1239  00CC                     LCD_WriteData@Byte:	
  1240                           ; 1 bytes @ 0x5
  1241                           
  1242  00CC                     isdigit@c:	
  1243                           ; 1 bytes @ 0x5
  1244                           
  1245  00CC                     USART_WriteString@str:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x5
  1250  00CC                     	ds	1
  1251  00CD                     ??_PWM_DutyCycle2:	
  1252  00CD                     ??_LCD_Init:	
  1253                           ; 0 bytes @ 0x6
  1254                           
  1255  00CD                     ?_LCD_WriteString:	
  1256                           ; 0 bytes @ 0x6
  1257                           
  1258  00CD                     ??_PWM_DutyCycle1:	
  1259                           ; 0 bytes @ 0x6
  1260                           
  1261  00CD                     ??_LCD_Clear:	
  1262                           ; 0 bytes @ 0x6
  1263                           
  1264  00CD                     LCD_Cursor@Row:	
  1265                           ; 0 bytes @ 0x6
  1266                           
  1267  00CD                     LCD_WriteString@Str:	
  1268                           ; 1 bytes @ 0x6
  1269                           
  1270  00CD                     ___wmul@multiplicand:	
  1271                           ; 2 bytes @ 0x6
  1272                           
  1273  00CD                     ___lwdiv@dividend:	
  1274                           ; 2 bytes @ 0x6
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  00CD                     	ds	1
  1279  00CE                     ??_USART_WriteString:	
  1280                           
  1281                           ; 0 bytes @ 0x7
  1282  00CE                     	ds	1
  1283  00CF                     ??_LCD_WriteString:	
  1284  00CF                     ??___wmul:	
  1285                           ; 0 bytes @ 0x8
  1286                           
  1287  00CF                     ??___lwdiv:	
  1288                           ; 0 bytes @ 0x8
  1289                           
  1290  00CF                     ___wmul@product:	
  1291                           ; 0 bytes @ 0x8
  1292                           
  1293  00CF                     ___aldiv@dividend:	
  1294                           ; 2 bytes @ 0x8
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x8
  1298  00CF                     	ds	1
  1299  00D0                     ___lwdiv@counter:	
  1300                           
  1301                           ; 1 bytes @ 0x9
  1302  00D0                     	ds	1
  1303  00D1                     ___lwdiv@quotient:	
  1304                           
  1305                           ; 2 bytes @ 0xA
  1306  00D1                     	ds	2
  1307  00D3                     ??___aldiv:	
  1308  00D3                     ?___lwmod:	
  1309                           ; 0 bytes @ 0xC
  1310                           
  1311  00D3                     ___lwmod@divisor:	
  1312                           ; 2 bytes @ 0xC
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0xC
  1316  00D3                     	ds	1
  1317  00D4                     ___aldiv@counter:	
  1318                           
  1319                           ; 1 bytes @ 0xD
  1320  00D4                     	ds	1
  1321  00D5                     ___aldiv@sign:	
  1322  00D5                     ___lwmod@dividend:	
  1323                           ; 1 bytes @ 0xE
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0xE
  1327  00D5                     	ds	1
  1328  00D6                     ___aldiv@quotient:	
  1329                           
  1330                           ; 4 bytes @ 0xF
  1331  00D6                     	ds	1
  1332  00D7                     ??___lwmod:	
  1333                           
  1334                           ; 0 bytes @ 0x10
  1335  00D7                     	ds	1
  1336  00D8                     ___lwmod@counter:	
  1337                           
  1338                           ; 1 bytes @ 0x11
  1339  00D8                     	ds	1
  1340  00D9                     ?_sprintf:	
  1341  00D9                     sprintf@f:	
  1342                           ; 2 bytes @ 0x12
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x12
  1346  00D9                     	ds	1
  1347  00DA                     ?_USART_Init:	
  1348  00DA                     USART_Init@BaudRate:	
  1349                           ; 0 bytes @ 0x13
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x13
  1353  00DA                     	ds	3
  1354  00DD                     ??_sprintf:	
  1355                           
  1356                           ; 0 bytes @ 0x16
  1357  00DD                     	ds	1
  1358  00DE                     ??_USART_Init:	
  1359                           
  1360                           ; 0 bytes @ 0x17
  1361  00DE                     	ds	4
  1362  00E2                     ??_main:	
  1363                           
  1364                           ; 0 bytes @ 0x1B
  1365  00E2                     	ds	3
  1366                           
  1367                           	psect	cstackCOMMON
  1368  0070                     __pcstackCOMMON:	
  1369  0070                     ?_TIMER0_Set:	
  1370  0070                     ?_TIMER0_Init:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ?_ADC_Init:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0070                     ?_PWM_Init:	
  1377                           ; 0 bytes @ 0x0
  1378                           
  1379  0070                     ?_LCD_Init:	
  1380                           ; 0 bytes @ 0x0
  1381                           
  1382  0070                     ?_LCD_Clear:	
  1383                           ; 0 bytes @ 0x0
  1384                           
  1385  0070                     ?_isdigit:	
  1386                           ; 0 bytes @ 0x0
  1387                           
  1388  0070                     ?_Fuzzy:	
  1389                           ; 1 bit 
  1390                           
  1391  0070                     ?_ISR:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0070                     ?_main:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0070                     ?_USART_WriteChar:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0070                     ?_LCD_WriteCmd:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0070                     ?_LCD_WriteData:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0070                     ?___ftge:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0070                     ?i1_USART_WriteChar:	
  1410                           ; 1 bit 
  1411                           
  1412  0070                     ??i1_USART_WriteChar:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0070                     ?i1_TIMER0_Set:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0070                     ??i1_TIMER0_Set:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0070                     ?i1_PWM_DutyCycle2:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0070                     ?_USART_ReceiveChar:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0070                     ?i1___lwdiv:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?___ftpack:	
  1431                           ; 2 bytes @ 0x0
  1432                           
  1433  0070                     ?___ftneg:	
  1434                           ; 3 bytes @ 0x0
  1435                           
  1436  0070                     ?___fttol:	
  1437                           ; 3 bytes @ 0x0
  1438                           
  1439  0070                     i1USART_WriteChar@byte:	
  1440                           ; 4 bytes @ 0x0
  1441                           
  1442  0070                     i1TIMER0_Set@contagens:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     i1PWM_DutyCycle2@valor:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     i1___lwdiv@divisor:	
  1449                           ; 2 bytes @ 0x0
  1450                           
  1451  0070                     ___ftpack@arg:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0070                     ___ftge@ff1:	
  1455                           ; 3 bytes @ 0x0
  1456                           
  1457  0070                     ___ftneg@f1:	
  1458                           ; 3 bytes @ 0x0
  1459                           
  1460  0070                     ___fttol@f1:	
  1461                           ; 3 bytes @ 0x0
  1462                           
  1463                           
  1464                           ; 3 bytes @ 0x0
  1465  0070                     	ds	1
  1466  0071                     ?i1_USART_WriteString:	
  1467  0071                     i1USART_WriteString@str:	
  1468                           ; 0 bytes @ 0x1
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x1
  1472  0071                     	ds	1
  1473  0072                     ??i1_PWM_DutyCycle2:	
  1474  0072                     i1___lwdiv@dividend:	
  1475                           ; 0 bytes @ 0x2
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0x2
  1479  0072                     	ds	1
  1480  0073                     ??_USART_ReceiveChar:	
  1481  0073                     ??___ftneg:	
  1482                           ; 0 bytes @ 0x3
  1483                           
  1484  0073                     ??i1_USART_WriteString:	
  1485                           ; 0 bytes @ 0x3
  1486                           
  1487  0073                     ___ftpack@exp:	
  1488                           ; 0 bytes @ 0x3
  1489                           
  1490  0073                     ___ftge@ff2:	
  1491                           ; 1 bytes @ 0x3
  1492                           
  1493                           
  1494                           ; 3 bytes @ 0x3
  1495  0073                     	ds	1
  1496  0074                     ??___fttol:	
  1497  0074                     ??i1___lwdiv:	
  1498                           ; 0 bytes @ 0x4
  1499                           
  1500  0074                     USART_ReceiveChar@byte:	
  1501                           ; 0 bytes @ 0x4
  1502                           
  1503  0074                     ___ftpack@sign:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x4
  1508  0074                     	ds	1
  1509  0075                     ??___ftpack:	
  1510  0075                     i1___lwdiv@quotient:	
  1511                           ; 0 bytes @ 0x5
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x5
  1515  0075                     	ds	1
  1516  0076                     ??___ftge:	
  1517                           
  1518                           ; 0 bytes @ 0x6
  1519  0076                     	ds	1
  1520  0077                     i1___lwdiv@counter:	
  1521                           
  1522                           ; 1 bytes @ 0x7
  1523  0077                     	ds	1
  1524  0078                     ?i1___wmul:	
  1525  0078                     ?___ftmul:	
  1526                           ; 2 bytes @ 0x8
  1527                           
  1528  0078                     ?___lwtoft:	
  1529                           ; 3 bytes @ 0x8
  1530                           
  1531  0078                     ___fttol@sign1:	
  1532                           ; 3 bytes @ 0x8
  1533                           
  1534  0078                     ___lwtoft@c:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537  0078                     i1___wmul@multiplier:	
  1538                           ; 2 bytes @ 0x8
  1539                           
  1540  0078                     ___ftmul@f1:	
  1541                           ; 2 bytes @ 0x8
  1542                           
  1543                           
  1544                           ; 3 bytes @ 0x8
  1545  0078                     	ds	1
  1546  0079                     ___fttol@lval:	
  1547                           
  1548                           ; 4 bytes @ 0x9
  1549  0079                     	ds	1
  1550  007A                     i1___wmul@multiplicand:	
  1551                           
  1552                           ; 2 bytes @ 0xA
  1553  007A                     	ds	1
  1554  007B                     ??___lwtoft:	
  1555  007B                     ___ftmul@f2:	
  1556                           ; 0 bytes @ 0xB
  1557                           
  1558                           
  1559                           ; 3 bytes @ 0xB
  1560  007B                     	ds	1
  1561  007C                     ??_max_val:	
  1562  007C                     ??i1___wmul:	
  1563                           ; 0 bytes @ 0xC
  1564                           
  1565  007C                     i1___wmul@product:	
  1566                           ; 0 bytes @ 0xC
  1567                           
  1568                           
  1569                           ; 2 bytes @ 0xC
  1570  007C                     	ds	1
  1571  007D                     ___fttol@exp1:	
  1572                           
  1573                           ; 1 bytes @ 0xD
  1574  007D                     	ds	1
  1575  007E                     ??_trimf:	
  1576  007E                     ??_trapmf:	
  1577                           ; 0 bytes @ 0xE
  1578                           
  1579  007E                     ??_Fuzzy:	
  1580                           ; 0 bytes @ 0xE
  1581                           
  1582                           
  1583                           	psect	cstackBANK0
  1584  0020                     __pcstackBANK0:	
  1585                           ; 0 bytes @ 0xE
  1586                           
  1587  0020                     ??___ftmul:	
  1588  0020                     ?_max_val:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0020                     max_val@a:	
  1592                           ; 3 bytes @ 0x0
  1593                           
  1594                           
  1595                           ; 3 bytes @ 0x0
  1596  0020                     	ds	3
  1597  0023                     max_val@b:	
  1598                           
  1599                           ; 3 bytes @ 0x3
  1600  0023                     	ds	1
  1601  0024                     ___ftmul@exp:	
  1602                           
  1603                           ; 1 bytes @ 0x4
  1604  0024                     	ds	1
  1605  0025                     ___ftmul@f3_as_product:	
  1606                           
  1607                           ; 3 bytes @ 0x5
  1608  0025                     	ds	3
  1609  0028                     ___ftmul@cntr:	
  1610                           
  1611                           ; 1 bytes @ 0x8
  1612  0028                     	ds	1
  1613  0029                     ___ftmul@sign:	
  1614                           
  1615                           ; 1 bytes @ 0x9
  1616  0029                     	ds	1
  1617  002A                     ?___ftadd:	
  1618  002A                     ___ftadd@f1:	
  1619                           ; 3 bytes @ 0xA
  1620                           
  1621                           
  1622                           ; 3 bytes @ 0xA
  1623  002A                     	ds	3
  1624  002D                     ___ftadd@f2:	
  1625                           
  1626                           ; 3 bytes @ 0xD
  1627  002D                     	ds	3
  1628  0030                     ??___ftadd:	
  1629                           
  1630                           ; 0 bytes @ 0x10
  1631  0030                     	ds	4
  1632  0034                     ___ftadd@sign:	
  1633                           
  1634                           ; 1 bytes @ 0x14
  1635  0034                     	ds	1
  1636  0035                     ___ftadd@exp2:	
  1637                           
  1638                           ; 1 bytes @ 0x15
  1639  0035                     	ds	1
  1640  0036                     ___ftadd@exp1:	
  1641                           
  1642                           ; 1 bytes @ 0x16
  1643  0036                     	ds	1
  1644  0037                     ?___ftdiv:	
  1645  0037                     ___ftdiv@f2:	
  1646                           ; 3 bytes @ 0x17
  1647                           
  1648                           
  1649                           ; 3 bytes @ 0x17
  1650  0037                     	ds	3
  1651  003A                     ___ftdiv@f1:	
  1652                           
  1653                           ; 3 bytes @ 0x1A
  1654  003A                     	ds	3
  1655  003D                     ??___ftdiv:	
  1656                           
  1657                           ; 0 bytes @ 0x1D
  1658  003D                     	ds	4
  1659  0041                     ___ftdiv@cntr:	
  1660                           
  1661                           ; 1 bytes @ 0x21
  1662  0041                     	ds	1
  1663  0042                     ___ftdiv@f3:	
  1664                           
  1665                           ; 3 bytes @ 0x22
  1666  0042                     	ds	3
  1667  0045                     ___ftdiv@exp:	
  1668                           
  1669                           ; 1 bytes @ 0x25
  1670  0045                     	ds	1
  1671  0046                     ___ftdiv@sign:	
  1672                           
  1673                           ; 1 bytes @ 0x26
  1674  0046                     	ds	1
  1675  0047                     ?_trimf:	
  1676  0047                     ?_trapmf:	
  1677                           ; 3 bytes @ 0x27
  1678                           
  1679  0047                     trimf@x:	
  1680                           ; 3 bytes @ 0x27
  1681                           
  1682  0047                     trapmf@x:	
  1683                           ; 3 bytes @ 0x27
  1684                           
  1685                           
  1686                           ; 3 bytes @ 0x27
  1687  0047                     	ds	3
  1688  004A                     trimf@a:	
  1689  004A                     trapmf@a:	
  1690                           ; 3 bytes @ 0x2A
  1691                           
  1692                           
  1693                           ; 3 bytes @ 0x2A
  1694  004A                     	ds	3
  1695  004D                     trimf@b:	
  1696  004D                     trapmf@b:	
  1697                           ; 3 bytes @ 0x2D
  1698                           
  1699                           
  1700                           ; 3 bytes @ 0x2D
  1701  004D                     	ds	3
  1702  0050                     trimf@c:	
  1703  0050                     trapmf@c:	
  1704                           ; 3 bytes @ 0x30
  1705                           
  1706                           
  1707                           ; 3 bytes @ 0x30
  1708  0050                     	ds	3
  1709  0053                     trimf@ua:	
  1710  0053                     trapmf@d:	
  1711                           ; 3 bytes @ 0x33
  1712                           
  1713                           
  1714                           ; 3 bytes @ 0x33
  1715  0053                     	ds	3
  1716  0056                     trapmf@ua:	
  1717                           
  1718                           ; 3 bytes @ 0x36
  1719  0056                     	ds	3
  1720  0059                     Fuzzy@a:	
  1721                           
  1722                           ; 2 bytes @ 0x39
  1723  0059                     	ds	2
  1724  005B                     Fuzzy@a_232:	
  1725                           
  1726                           ; 2 bytes @ 0x3B
  1727  005B                     	ds	2
  1728  005D                     Fuzzy@a_233:	
  1729                           
  1730                           ; 2 bytes @ 0x3D
  1731  005D                     	ds	2
  1732  005F                     Fuzzy@a_234:	
  1733                           
  1734                           ; 2 bytes @ 0x3F
  1735  005F                     	ds	2
  1736  0061                     Fuzzy@a_235:	
  1737                           
  1738                           ; 2 bytes @ 0x41
  1739  0061                     	ds	2
  1740  0063                     Fuzzy@tip:	
  1741                           
  1742                           ; 3 bytes @ 0x43
  1743  0063                     	ds	3
  1744  0066                     Fuzzy@mantem:	
  1745                           
  1746                           ; 3 bytes @ 0x46
  1747  0066                     	ds	3
  1748  0069                     Fuzzy@reduz:	
  1749                           
  1750                           ; 3 bytes @ 0x49
  1751  0069                     	ds	3
  1752  006C                     Fuzzy@aumenta:	
  1753                           
  1754                           ; 3 bytes @ 0x4C
  1755  006C                     	ds	3
  1756                           
  1757                           	psect	maintext
  1758  0923                     __pmaintext:	
  1759 ;;
  1760 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1761 ;;
  1762 ;; *************** function _main *****************
  1763 ;; Defined at:
  1764 ;;		line 467 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 17F/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       3       0       0
  1781 ;;      Totals:         0       0       3       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels required when called:    7
  1784 ;; This function calls:
  1785 ;;		_ADC_Init
  1786 ;;		_LCD_Clear
  1787 ;;		_LCD_Cursor
  1788 ;;		_LCD_Init
  1789 ;;		_LCD_WriteString
  1790 ;;		_PWM_DutyCycle1
  1791 ;;		_PWM_DutyCycle2
  1792 ;;		_PWM_Init
  1793 ;;		_TIMER0_Init
  1794 ;;		_TIMER0_Set
  1795 ;;		_USART_Init
  1796 ;;		_USART_WriteString
  1797 ;;		_sprintf
  1798 ;; This function is called by:
  1799 ;;		Startup code after reset
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _main
  1805  0923                     _main:	
  1806                           
  1807                           ;main.c: 469: TRISA = 0b00000001;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811  0923  3001               	movlw	1
  1812  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0926  0085               	movwf	5	;volatile
  1815                           
  1816                           ;main.c: 470: PORTA = 0b00000001;
  1817  0927  3001               	movlw	1
  1818  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1820  092A  0085               	movwf	5	;volatile
  1821                           
  1822                           ;main.c: 471: TRISB = 0b00000000;
  1823  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1824  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1825  092D  0186               	clrf	6	;volatile
  1826                           
  1827                           ;main.c: 472: PORTB = 0b00000000;
  1828  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1829  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0930  0186               	clrf	6	;volatile
  1831                           
  1832                           ;main.c: 473: TRISC = 0b10000001;
  1833  0931  3081               	movlw	129
  1834  0932  1683               	bsf	3,5	;RP0=1, select bank1
  1835  0933  1303               	bcf	3,6	;RP1=0, select bank1
  1836  0934  0087               	movwf	7	;volatile
  1837                           
  1838                           ;main.c: 474: PORTC = 0b11000000;
  1839  0935  30C0               	movlw	192
  1840  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0938  0087               	movwf	7	;volatile
  1843                           
  1844                           ;main.c: 475: TRISD = 0b00000000;
  1845  0939  1683               	bsf	3,5	;RP0=1, select bank1
  1846  093A  1303               	bcf	3,6	;RP1=0, select bank1
  1847  093B  0188               	clrf	8	;volatile
  1848                           
  1849                           ;main.c: 476: PORTD = 0b00000000;
  1850  093C  1283               	bcf	3,5	;RP0=0, select bank0
  1851  093D  1303               	bcf	3,6	;RP1=0, select bank0
  1852  093E  0188               	clrf	8	;volatile
  1853                           
  1854                           ;main.c: 477: TRISE = 0b00000000;
  1855  093F  1683               	bsf	3,5	;RP0=1, select bank1
  1856  0940  1303               	bcf	3,6	;RP1=0, select bank1
  1857  0941  0189               	clrf	9	;volatile
  1858                           
  1859                           ;main.c: 478: PORTE = 0b00000000;
  1860  0942  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0943  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0944  0189               	clrf	9	;volatile
  1863                           
  1864                           ;main.c: 481: T1CON = 0x03;
  1865  0945  3003               	movlw	3
  1866  0946  0090               	movwf	16	;volatile
  1867                           
  1868                           ;main.c: 482: TMR1L = 0x00;
  1869  0947  018E               	clrf	14	;volatile
  1870                           
  1871                           ;main.c: 483: TMR1H = 0x00;
  1872  0948  018F               	clrf	15	;volatile
  1873                           
  1874                           ;main.c: 486: USART_Init(115200);
  1875  0949  3000               	movlw	0
  1876  094A  1683               	bsf	3,5	;RP0=1, select bank1
  1877  094B  1303               	bcf	3,6	;RP1=0, select bank1
  1878  094C  00DD               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1879  094D  3001               	movlw	1
  1880  094E  00DC               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1881  094F  30C2               	movlw	194
  1882  0950  00DB               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1883  0951  3000               	movlw	0
  1884  0952  00DA               	movwf	USART_Init@BaudRate^(0+128)
  1885  0953  120A  158A  2009  120A  158A  	fcall	_USART_Init
  1886                           
  1887                           ;main.c: 487: TIMER0_Init();
  1888  0958  160A  118A  20D9  120A  158A  	fcall	_TIMER0_Init
  1889                           
  1890                           ;main.c: 488: ADC_Init();
  1891  095D  160A  118A  2101  120A  158A  	fcall	_ADC_Init
  1892                           
  1893                           ;main.c: 489: PWM_Init();
  1894  0962  160A  118A  2251  120A  158A  	fcall	_PWM_Init
  1895                           
  1896                           ;main.c: 490: LCD_Init();
  1897  0967  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1898                           
  1899                           ;main.c: 493: INTCONbits.PEIE = 1;
  1900  096C  170B               	bsf	11,6	;volatile
  1901                           
  1902                           ;main.c: 494: INTCONbits.GIE = 1;
  1903  096D  178B               	bsf	11,7	;volatile
  1904                           
  1905                           ;main.c: 497: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1906  096E  3044               	movlw	low (STR_11| (0+32768))
  1907  096F  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0970  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0971  00CC               	movwf	USART_WriteString@str^(0+128)
  1910  0972  3098               	movlw	high (STR_11| (0+32768))
  1911  0973  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1912  0974  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  1913                           
  1914                           ;main.c: 498: USART_WriteString("USART: 115.200bps\n\r");
  1915  0979  3061               	movlw	low (STR_12| (0+32768))
  1916  097A  1683               	bsf	3,5	;RP0=1, select bank1
  1917  097B  1303               	bcf	3,6	;RP1=0, select bank1
  1918  097C  00CC               	movwf	USART_WriteString@str^(0+128)
  1919  097D  3098               	movlw	high (STR_12| (0+32768))
  1920  097E  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1921  097F  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  1922                           
  1923                           ;main.c: 501: LCD_Init();
  1924  0984  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1925                           
  1926                           ;main.c: 502: LCD_Cursor(0,0);
  1927  0989  1683               	bsf	3,5	;RP0=1, select bank1
  1928  098A  1303               	bcf	3,6	;RP1=0, select bank1
  1929  098B  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1930  098C  3000               	movlw	0
  1931  098D  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  1932                           
  1933                           ;main.c: 503: LCD_WriteString("Inicializando...");
  1934  0992  3075               	movlw	low (STR_13| (0+32768))
  1935  0993  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0994  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0995  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1938  0996  3098               	movlw	high (STR_13| (0+32768))
  1939  0997  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  1940  0998  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  1941                           
  1942                           ;main.c: 506: PWM_DutyCycle1(0);
  1943  099D  3000               	movlw	0
  1944  099E  1683               	bsf	3,5	;RP0=1, select bank1
  1945  099F  1303               	bcf	3,6	;RP1=0, select bank1
  1946  09A0  00CB               	movwf	PWM_DutyCycle1@valor^(0+128)
  1947  09A1  3000               	movlw	0
  1948  09A2  00CC               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1949  09A3  160A  118A  21C9  120A  158A  	fcall	_PWM_DutyCycle1
  1950                           
  1951                           ;main.c: 507: PWM_DutyCycle2(0);
  1952  09A8  3000               	movlw	0
  1953  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  1954  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  1955  09AB  00CB               	movwf	PWM_DutyCycle2@valor^(0+128)
  1956  09AC  3000               	movlw	0
  1957  09AD  00CC               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1958  09AE  160A  118A  21EA  120A  158A  	fcall	_PWM_DutyCycle2
  1959                           
  1960                           ;main.c: 510: TIMER0_Set(238);
  1961  09B3  30EE               	movlw	238
  1962  09B4  120A  158A  2001  120A  158A  	fcall	_TIMER0_Set
  1963                           
  1964                           ;main.c: 513: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1965  09B9  3018               	movlw	24
  1966  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  1967  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  1968  09BC  00E4               	movwf	(??_main^(0+128)+2)
  1969  09BD  3061               	movlw	97
  1970  09BE  00E3               	movwf	(??_main^(0+128)+1)
  1971  09BF  306E               	movlw	110
  1972  09C0  00E2               	movwf	??_main^(0+128)
  1973  09C1                     u4527:	
  1974  09C1  0BE2               	decfsz	??_main^(0+128),f
  1975  09C2  29C1               	goto	u4527
  1976  09C3  0BE3               	decfsz	(??_main^(0+128)+1),f
  1977  09C4  29C1               	goto	u4527
  1978  09C5  0BE4               	decfsz	(??_main^(0+128)+2),f
  1979  09C6  29C1               	goto	u4527
  1980  09C7  0000               	nop
  1981  09C8                     l202:	
  1982                           ;main.c: 516: while(1)
  1983                           
  1984                           
  1985                           ;main.c: 517: {
  1986                           ;main.c: 521: sprintf(display_rpm,"%04d", rpm);
  1987  09C8  301E               	movlw	low (STR_14| (0+32768))
  1988  09C9  1683               	bsf	3,5	;RP0=1, select bank1
  1989  09CA  1303               	bcf	3,6	;RP1=0, select bank1
  1990  09CB  00D9               	movwf	sprintf@f^(0+128)
  1991  09CC  3099               	movlw	high (STR_14| (0+32768))
  1992  09CD  00DA               	movwf	(sprintf@f^(0+128)+1)
  1993  09CE  0846               	movf	(_rpm+1)^(0+128),w
  1994  09CF  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  1995  09D0  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  1996  09D1  0845               	movf	_rpm^(0+128),w
  1997  09D2  01DB               	clrf	(?_sprintf^(0+128)+2)
  1998  09D3  07DB               	addwf	(?_sprintf^(0+128)+2),f
  1999  09D4  30A8               	movlw	_display_rpm& (0+255)
  2000  09D5  120A  158A  255F  120A  158A  	fcall	_sprintf
  2001                           
  2002                           ;main.c: 522: sprintf(display_pwm,"%04d", pwm);
  2003  09DA  301E               	movlw	low (STR_14| (0+32768))
  2004  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  2005  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  2006  09DD  00D9               	movwf	sprintf@f^(0+128)
  2007  09DE  3099               	movlw	high (STR_14| (0+32768))
  2008  09DF  00DA               	movwf	(sprintf@f^(0+128)+1)
  2009  09E0  0844               	movf	(_pwm+1)^(0+128),w
  2010  09E1  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  2011  09E2  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  2012  09E3  0843               	movf	_pwm^(0+128),w
  2013  09E4  01DB               	clrf	(?_sprintf^(0+128)+2)
  2014  09E5  07DB               	addwf	(?_sprintf^(0+128)+2),f
  2015  09E6  309E               	movlw	_display_pwm& (0+255)
  2016  09E7  120A  158A  255F  120A  158A  	fcall	_sprintf
  2017                           
  2018                           ;main.c: 526: USART_WriteString(display_rpm);
  2019  09EC  30A8               	movlw	_display_rpm& (0+255)
  2020  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  2021  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  2022  09EF  00CC               	movwf	USART_WriteString@str^(0+128)
  2023  09F0  3001               	movlw	1
  2024  09F1  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  2025  09F2  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  2026                           
  2027                           ;main.c: 527: USART_WriteString("\n\r");
  2028  09F7  3092               	movlw	low ((STR_9+12)| (0+32768))
  2029  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  2030  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  2031  09FA  00CC               	movwf	USART_WriteString@str^(0+128)
  2032  09FB  3098               	movlw	high ((STR_9+12)| (0+32768))
  2033  09FC  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  2034  09FD  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  2035                           
  2036                           ;main.c: 530: LCD_Clear();
  2037  0A02  160A  118A  229A  120A  158A  	fcall	_LCD_Clear
  2038                           
  2039                           ;main.c: 531: LCD_Cursor(0,0);
  2040  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0A09  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2043  0A0A  3000               	movlw	0
  2044  0A0B  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2045                           
  2046                           ;main.c: 532: LCD_WriteString("RPM: ");
  2047  0A10  3012               	movlw	low (STR_17| (0+32768))
  2048  0A11  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0A12  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0A13  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2051  0A14  3099               	movlw	high (STR_17| (0+32768))
  2052  0A15  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2053  0A16  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2054                           
  2055                           ;main.c: 533: LCD_Cursor(0,6);
  2056  0A1B  3006               	movlw	6
  2057  0A1C  1683               	bsf	3,5	;RP0=1, select bank1
  2058  0A1D  1303               	bcf	3,6	;RP1=0, select bank1
  2059  0A1E  00E2               	movwf	??_main^(0+128)
  2060  0A1F  0862               	movf	??_main^(0+128),w
  2061  0A20  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2062  0A21  3000               	movlw	0
  2063  0A22  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2064                           
  2065                           ;main.c: 534: LCD_WriteString(display_rpm);
  2066  0A27  30A8               	movlw	_display_rpm& (0+255)
  2067  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0A2A  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2070  0A2B  3001               	movlw	1
  2071  0A2C  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2072  0A2D  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2073                           
  2074                           ;main.c: 535: LCD_Cursor(1,0);
  2075  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0A34  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2078  0A35  3001               	movlw	1
  2079  0A36  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2080                           
  2081                           ;main.c: 536: LCD_WriteString("PWM: ");
  2082  0A3B  3018               	movlw	low (STR_18| (0+32768))
  2083  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  2085  0A3E  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2086  0A3F  3099               	movlw	high (STR_18| (0+32768))
  2087  0A40  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2088  0A41  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2089                           
  2090                           ;main.c: 537: LCD_Cursor(1,6);
  2091  0A46  3006               	movlw	6
  2092  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0A49  00E2               	movwf	??_main^(0+128)
  2095  0A4A  0862               	movf	??_main^(0+128),w
  2096  0A4B  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2097  0A4C  3001               	movlw	1
  2098  0A4D  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2099                           
  2100                           ;main.c: 538: LCD_WriteString(display_pwm);
  2101  0A52  309E               	movlw	_display_pwm& (0+255)
  2102  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0A55  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2105  0A56  3001               	movlw	1
  2106  0A57  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2107  0A58  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2108                           
  2109                           ;main.c: 540: _delay((unsigned long)((200)*(18432000/4000.0)));
  2110  0A5D  3005               	movlw	5
  2111  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0A60  00E4               	movwf	(??_main^(0+128)+2)
  2114  0A61  30AD               	movlw	173
  2115  0A62  00E3               	movwf	(??_main^(0+128)+1)
  2116  0A63  30E0               	movlw	224
  2117  0A64  00E2               	movwf	??_main^(0+128)
  2118  0A65                     u4537:	
  2119  0A65  0BE2               	decfsz	??_main^(0+128),f
  2120  0A66  2A65               	goto	u4537
  2121  0A67  0BE3               	decfsz	(??_main^(0+128)+1),f
  2122  0A68  2A65               	goto	u4537
  2123  0A69  0BE4               	decfsz	(??_main^(0+128)+2),f
  2124  0A6A  2A65               	goto	u4537
  2125  0A6B  29C8               	goto	l202
  2126  0A6C                     __end_of_main:	
  2127                           
  2128                           	psect	text1
  2129  0D5F                     __ptext1:	
  2130 ;; *************** function _sprintf *****************
  2131 ;; Defined at:
  2132 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  sp              1    wreg     PTR unsigned char 
  2135 ;;		 -> display_pwm(10), display_rpm(10), 
  2136 ;;  f               2   18[BANK1 ] PTR const unsigned char 
  2137 ;;		 -> STR_15(5), STR_14(5), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  2140 ;;		 -> display_pwm(10), display_rpm(10), 
  2141 ;;  _val            4    2[BANK3 ] struct .
  2142 ;;  width           2    7[BANK3 ] int 
  2143 ;;  c               1   10[BANK3 ] char 
  2144 ;;  flag            1    6[BANK3 ] unsigned char 
  2145 ;;  prec            1    1[BANK3 ] char 
  2146 ;;  ap              1    0[BANK3 ] PTR void [1]
  2147 ;;		 -> ?_sprintf(2), 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2   18[BANK1 ] int 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       4       0       0
  2158 ;;      Locals:         0       0       0      11       0
  2159 ;;      Temps:          0       0       3       0       0
  2160 ;;      Totals:         0       0       7      11       0
  2161 ;;Total ram usage:       18 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    6
  2164 ;; This function calls:
  2165 ;;		___lwdiv
  2166 ;;		___lwmod
  2167 ;;		___wmul
  2168 ;;		_isdigit
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _sprintf
  2176  0D5F                     _sprintf:	
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2180                           ;sprintf@sp stored from wreg
  2181  0D5F  1683               	bsf	3,5	;RP0=1, select bank3
  2182  0D60  1703               	bsf	3,6	;RP1=1, select bank3
  2183  0D61  00BB               	movwf	sprintf@sp^(0+384)
  2184                           
  2185                           ;doprnt.c: 494: va_list ap;
  2186                           ;doprnt.c: 499: signed char c;
  2187                           ;doprnt.c: 501: int width;
  2188                           ;doprnt.c: 506: signed char prec;
  2189                           ;doprnt.c: 508: unsigned char flag;
  2190                           ;doprnt.c: 527: union {
  2191                           ;doprnt.c: 528: unsigned int _val;
  2192                           ;doprnt.c: 529: struct {
  2193                           ;doprnt.c: 530: const char * _cp;
  2194                           ;doprnt.c: 531: unsigned _len;
  2195                           ;doprnt.c: 532: } _str;
  2196                           ;doprnt.c: 533: } _val;
  2197                           ;doprnt.c: 542: *ap = __va_start();
  2198  0D62  30DB               	movlw	(?_sprintf+2)& (0+255)
  2199  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0D65  00DD               	movwf	??_sprintf^(0+128)
  2202  0D66  085D               	movf	??_sprintf^(0+128),w
  2203  0D67  1683               	bsf	3,5	;RP0=1, select bank3
  2204  0D68  1703               	bsf	3,6	;RP1=1, select bank3
  2205  0D69  00B2               	movwf	sprintf@ap^(0+384)
  2206  0D6A                     l3532:	
  2207                           ;doprnt.c: 545: while(c = *f++) {
  2208                           
  2209  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0D6C  085A               	movf	(sprintf@f+1)^(0+128),w
  2212  0D6D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2213  0D6E  0859               	movf	sprintf@f^(0+128),w
  2214  0D6F  00DD               	movwf	??_sprintf^(0+128)
  2215  0D70  0AD9               	incf	sprintf@f^(0+128),f
  2216  0D71  1903               	skipnz
  2217  0D72  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2218  0D73  085E               	movf	(??_sprintf+1)^(0+128),w
  2219  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0D76  00FF               	movwf	127
  2222  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0D79  085D               	movf	??_sprintf^(0+128),w
  2225  0D7A  0084               	movwf	4
  2226  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0D7D  160A  158A  2000  120A  158A  	fcall	stringtab
  2229  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0D84  00DF               	movwf	(??_sprintf+2)^(0+128)
  2232  0D85  085F               	movf	(??_sprintf+2)^(0+128),w
  2233  0D86  1683               	bsf	3,5	;RP0=1, select bank3
  2234  0D87  1703               	bsf	3,6	;RP1=1, select bank3
  2235  0D88  00BC               	movwf	sprintf@c^(0+384)
  2236  0D89  08BC               	movf	sprintf@c^(0+384),f
  2237  0D8A  1903               	btfsc	3,2
  2238  0D8B  2FF9               	goto	l3534
  2239                           
  2240                           ;doprnt.c: 547: if(c != '%')
  2241  0D8C  083C               	movf	sprintf@c^(0+384),w
  2242  0D8D  3A25               	xorlw	37
  2243  0D8E  1903               	skipnz
  2244  0D8F  2DA4               	goto	l3438
  2245                           
  2246                           ;doprnt.c: 549: {
  2247                           ;doprnt.c: 550: ((*sp++ = (c)));
  2248  0D90  083C               	movf	sprintf@c^(0+384),w
  2249  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0D93  00DD               	movwf	??_sprintf^(0+128)
  2252  0D94  1683               	bsf	3,5	;RP0=1, select bank3
  2253  0D95  1703               	bsf	3,6	;RP1=1, select bank3
  2254  0D96  083B               	movf	sprintf@sp^(0+384),w
  2255  0D97  0084               	movwf	4
  2256  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0D9A  085D               	movf	??_sprintf^(0+128),w
  2259  0D9B  1783               	bsf	3,7	;select IRP bank2
  2260  0D9C  0080               	movwf	0
  2261  0D9D  3001               	movlw	1
  2262  0D9E  00DD               	movwf	??_sprintf^(0+128)
  2263  0D9F  085D               	movf	??_sprintf^(0+128),w
  2264  0DA0  1683               	bsf	3,5	;RP0=1, select bank3
  2265  0DA1  1703               	bsf	3,6	;RP1=1, select bank3
  2266  0DA2  07BB               	addwf	sprintf@sp^(0+384),f
  2267                           
  2268                           ;doprnt.c: 551: continue;
  2269  0DA3  2D6A               	goto	l3532
  2270  0DA4                     l3438:	
  2271                           
  2272                           ;doprnt.c: 552: }
  2273                           ;doprnt.c: 555: width = 0;
  2274  0DA4  01B9               	clrf	sprintf@width^(0+384)
  2275  0DA5  01BA               	clrf	(sprintf@width+1)^(0+384)
  2276                           
  2277                           ;doprnt.c: 557: flag = 0;
  2278  0DA6  01B8               	clrf	sprintf@flag^(0+384)
  2279                           
  2280                           ;doprnt.c: 560: switch(*f) {
  2281                           
  2282                           ;doprnt.c: 559: for(;;) {
  2283  0DA7  2DB1               	goto	l3442
  2284  0DA8                     l479:	
  2285                           ;doprnt.c: 588: case '0':
  2286                           
  2287                           
  2288                           ;doprnt.c: 589: flag |= 0x04;
  2289  0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  2290  0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  2291  0DAA  1538               	bsf	sprintf@flag^(0+384),2
  2292                           
  2293                           ;doprnt.c: 590: f++;
  2294  0DAB  3001               	movlw	1
  2295  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  2297  0DAE  07D9               	addwf	sprintf@f^(0+128),f
  2298  0DAF  1803               	skipnc
  2299  0DB0  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2300  0DB1                     l3442:	
  2301                           ;doprnt.c: 593: }
  2302                           
  2303                           ;doprnt.c: 591: continue;
  2304                           
  2305  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0DB3  085A               	movf	(sprintf@f+1)^(0+128),w
  2308  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0DB6  00FF               	movwf	127
  2311  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2312  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2313  0DB9  0859               	movf	sprintf@f^(0+128),w
  2314  0DBA  0084               	movwf	4
  2315  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0DBD  160A  158A  2000  120A  158A  	fcall	stringtab
  2318                           
  2319                           ; Switch size 1, requested type "space"
  2320                           ; Number of cases is 1, Range of values is 48 to 48
  2321                           ; switch strategies available:
  2322                           ; Name         Instructions Cycles
  2323                           ; simple_byte            4     3 (average)
  2324                           ; direct_byte           14    11 (fixed)
  2325                           ; jumptable            263     9 (fixed)
  2326                           ;	Chosen strategy is simple_byte
  2327  0DC2  3A30               	xorlw	48	; case 48
  2328  0DC3  1903               	skipnz
  2329  0DC4  2DA8               	goto	l479
  2330  0DC5  2DC6               	goto	l3444
  2331  0DC6                     l3444:	
  2332                           ;doprnt.c: 595: }
  2333                           
  2334                           ;doprnt.c: 594: break;
  2335                           
  2336                           
  2337                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2338  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0DC8  085A               	movf	(sprintf@f+1)^(0+128),w
  2341  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0DCB  00FF               	movwf	127
  2344  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2345  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2346  0DCE  0859               	movf	sprintf@f^(0+128),w
  2347  0DCF  0084               	movwf	4
  2348  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0DD2  160A  158A  2000  120A  158A  	fcall	stringtab
  2351  0DD7  160A  118A  20F1  120A  158A  	fcall	_isdigit
  2352  0DDC  1C03               	btfss	3,0
  2353  0DDD  2E4A               	goto	l3458
  2354                           
  2355                           ;doprnt.c: 607: width = 0;
  2356  0DDE  1683               	bsf	3,5	;RP0=1, select bank3
  2357  0DDF  1703               	bsf	3,6	;RP1=1, select bank3
  2358  0DE0  01B9               	clrf	sprintf@width^(0+384)
  2359  0DE1  01BA               	clrf	(sprintf@width+1)^(0+384)
  2360  0DE2                     l3448:	
  2361                           ;doprnt.c: 608: do {
  2362                           
  2363                           
  2364                           ;doprnt.c: 609: width *= 10;
  2365  0DE2  300A               	movlw	10
  2366  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  2368  0DE5  00CB               	movwf	___wmul@multiplier^(0+128)
  2369  0DE6  3000               	movlw	0
  2370  0DE7  00CC               	movwf	(___wmul@multiplier^(0+128)+1)
  2371  0DE8  1683               	bsf	3,5	;RP0=1, select bank3
  2372  0DE9  1703               	bsf	3,6	;RP1=1, select bank3
  2373  0DEA  083A               	movf	(sprintf@width+1)^(0+384),w
  2374  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0DED  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
  2377  0DEE  07CE               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2378  0DEF  1683               	bsf	3,5	;RP0=1, select bank3
  2379  0DF0  1703               	bsf	3,6	;RP1=1, select bank3
  2380  0DF1  0839               	movf	sprintf@width^(0+384),w
  2381  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  2383  0DF4  01CD               	clrf	___wmul@multiplicand^(0+128)
  2384  0DF5  07CD               	addwf	___wmul@multiplicand^(0+128),f
  2385  0DF6  160A  118A  2275  120A  158A  	fcall	___wmul
  2386  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0DFD  084C               	movf	(?___wmul+1)^(0+128),w
  2389  0DFE  1683               	bsf	3,5	;RP0=1, select bank3
  2390  0DFF  1703               	bsf	3,6	;RP1=1, select bank3
  2391  0E00  01BA               	clrf	(sprintf@width+1)^(0+384)
  2392  0E01  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2393  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0E04  084B               	movf	?___wmul^(0+128),w
  2396  0E05  1683               	bsf	3,5	;RP0=1, select bank3
  2397  0E06  1703               	bsf	3,6	;RP1=1, select bank3
  2398  0E07  01B9               	clrf	sprintf@width^(0+384)
  2399  0E08  07B9               	addwf	sprintf@width^(0+384),f
  2400                           
  2401                           ;doprnt.c: 610: width += *f++ - '0';
  2402  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0E0B  085A               	movf	(sprintf@f+1)^(0+128),w
  2405  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0E0E  00FF               	movwf	127
  2408  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0E11  0859               	movf	sprintf@f^(0+128),w
  2411  0E12  0084               	movwf	4
  2412  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0E15  160A  158A  2000  120A  158A  	fcall	stringtab
  2415  0E1A  3ED0               	addlw	208
  2416  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0E1D  00DD               	movwf	??_sprintf^(0+128)
  2419  0E1E  30FF               	movlw	255
  2420  0E1F  1803               	skipnc
  2421  0E20  3000               	movlw	0
  2422  0E21  00DE               	movwf	(??_sprintf^(0+128)+1)
  2423  0E22  085D               	movf	??_sprintf^(0+128),w
  2424  0E23  1683               	bsf	3,5	;RP0=1, select bank3
  2425  0E24  1703               	bsf	3,6	;RP1=1, select bank3
  2426  0E25  07B9               	addwf	sprintf@width^(0+384),f
  2427  0E26  1803               	skipnc
  2428  0E27  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2429  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2430  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2431  0E2A  085E               	movf	(??_sprintf+1)^(0+128),w
  2432  0E2B  1683               	bsf	3,5	;RP0=1, select bank3
  2433  0E2C  1703               	bsf	3,6	;RP1=1, select bank3
  2434  0E2D  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2435  0E2E  3001               	movlw	1
  2436  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0E31  07D9               	addwf	sprintf@f^(0+128),f
  2439  0E32  1803               	skipnc
  2440  0E33  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2441                           
  2442                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2443  0E34  085A               	movf	(sprintf@f+1)^(0+128),w
  2444  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0E37  00FF               	movwf	127
  2447  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0E3A  0859               	movf	sprintf@f^(0+128),w
  2450  0E3B  0084               	movwf	4
  2451  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0E3E  160A  158A  2000  120A  158A  	fcall	stringtab
  2454  0E43  160A  118A  20F1  120A  158A  	fcall	_isdigit
  2455  0E48  1803               	btfsc	3,0
  2456  0E49  2DE2               	goto	l3448
  2457  0E4A                     l3458:	
  2458                           ;doprnt.c: 831: }
  2459                           
  2460                           ;doprnt.c: 822: continue;
  2461                           
  2462                           ;doprnt.c: 811: default:
  2463                           
  2464                           ;doprnt.c: 707: case 'i':
  2465                           ;doprnt.c: 708: break;
  2466                           
  2467                           ;doprnt.c: 706: case 'd':
  2468                           
  2469                           ;doprnt.c: 647: goto alldone;
  2470                           
  2471                           ;doprnt.c: 646: case 0:
  2472                           
  2473                           ;doprnt.c: 617: }
  2474                           ;doprnt.c: 644: switch(c = *f++) {
  2475                           
  2476  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0E4C  085A               	movf	(sprintf@f+1)^(0+128),w
  2479  0E4D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2480  0E4E  0859               	movf	sprintf@f^(0+128),w
  2481  0E4F  00DD               	movwf	??_sprintf^(0+128)
  2482  0E50  0AD9               	incf	sprintf@f^(0+128),f
  2483  0E51  1903               	skipnz
  2484  0E52  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2485  0E53  085E               	movf	(??_sprintf+1)^(0+128),w
  2486  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0E56  00FF               	movwf	127
  2489  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0E59  085D               	movf	??_sprintf^(0+128),w
  2492  0E5A  0084               	movwf	4
  2493  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0E5D  160A  158A  2000  120A  158A  	fcall	stringtab
  2496  0E62  1683               	bsf	3,5	;RP0=1, select bank3
  2497  0E63  1703               	bsf	3,6	;RP1=1, select bank3
  2498  0E64  00BC               	movwf	sprintf@c^(0+384)
  2499                           
  2500                           ; Switch size 1, requested type "space"
  2501                           ; Number of cases is 3, Range of values is 0 to 105
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte           10     6 (average)
  2505                           ; jumptable            260     6 (fixed)
  2506                           ;	Chosen strategy is simple_byte
  2507  0E65  3A00               	xorlw	0	; case 0
  2508  0E66  1903               	skipnz
  2509  0E67  2FF9               	goto	l3534
  2510  0E68  3A64               	xorlw	100	; case 100
  2511  0E69  1903               	skipnz
  2512  0E6A  2E6F               	goto	l3460
  2513  0E6B  3A0D               	xorlw	13	; case 105
  2514  0E6C  1903               	skipnz
  2515  0E6D  2E6F               	goto	l3460
  2516  0E6E  2D6A               	goto	l3532
  2517  0E6F                     l3460:	
  2518                           
  2519                           ;doprnt.c: 1262: {
  2520                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2521  0E6F  1683               	bsf	3,5	;RP0=1, select bank3
  2522  0E70  1703               	bsf	3,6	;RP1=1, select bank3
  2523  0E71  0832               	movf	sprintf@ap^(0+384),w
  2524  0E72  0084               	movwf	4
  2525  0E73  1383               	bcf	3,7	;select IRP bank0
  2526  0E74  0800               	movf	0,w
  2527  0E75  00B4               	movwf	sprintf@_val^(0+384)
  2528  0E76  0A84               	incf	4,f
  2529  0E77  0800               	movf	0,w
  2530  0E78  00B5               	movwf	(sprintf@_val+1)^(0+384)
  2531  0E79  3002               	movlw	2
  2532  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0E7C  00DD               	movwf	??_sprintf^(0+128)
  2535  0E7D  085D               	movf	??_sprintf^(0+128),w
  2536  0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  2537  0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  2538  0E80  07B2               	addwf	sprintf@ap^(0+384),f
  2539                           
  2540                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2541  0E81  1FB5               	btfss	(sprintf@_val+1)^(0+384),7
  2542  0E82  2E90               	goto	l3470
  2543                           
  2544                           ;doprnt.c: 1271: flag |= 0x03;
  2545  0E83  3003               	movlw	3
  2546  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0E86  00DD               	movwf	??_sprintf^(0+128)
  2549  0E87  085D               	movf	??_sprintf^(0+128),w
  2550  0E88  1683               	bsf	3,5	;RP0=1, select bank3
  2551  0E89  1703               	bsf	3,6	;RP1=1, select bank3
  2552  0E8A  04B8               	iorwf	sprintf@flag^(0+384),f
  2553                           
  2554                           ;doprnt.c: 1272: _val._val = -_val._val;
  2555  0E8B  09B4               	comf	sprintf@_val^(0+384),f
  2556  0E8C  09B5               	comf	(sprintf@_val+1)^(0+384),f
  2557  0E8D  0AB4               	incf	sprintf@_val^(0+384),f
  2558  0E8E  1903               	skipnz
  2559  0E8F  0AB5               	incf	(sprintf@_val+1)^(0+384),f
  2560  0E90                     l3470:	
  2561                           
  2562                           ;doprnt.c: 1273: }
  2563                           ;doprnt.c: 1275: }
  2564                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2565  0E90  01BC               	clrf	sprintf@c^(0+384)
  2566  0E91  0ABC               	incf	sprintf@c^(0+384),f
  2567  0E92  083C               	movf	sprintf@c^(0+384),w
  2568  0E93  3A05               	xorlw	5
  2569  0E94  1903               	btfsc	3,2
  2570  0E95  2ECF               	goto	l3482
  2571  0E96                     l3474:	
  2572                           
  2573                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2574  0E96  083C               	movf	sprintf@c^(0+384),w
  2575  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  2576  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  2577  0E99  00DD               	movwf	??_sprintf^(0+128)
  2578  0E9A  075D               	addwf	??_sprintf^(0+128),w
  2579  0E9B  3E12               	addlw	low (_dpowers| (0+32768))
  2580  0E9C  0084               	movwf	4
  2581  0E9D  3098               	movlw	high (_dpowers| (0+32768))
  2582  0E9E  1803               	skipnc
  2583  0E9F  3E01               	addlw	1
  2584  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0EA2  00FF               	movwf	127
  2587  0EA3  160A  158A  2000  120A  158A  	fcall	stringtab
  2588  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0EAA  00DE               	movwf	(??_sprintf+1)^(0+128)
  2591  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0EAD  160A  158A  2000  120A  158A  	fcall	stringtab
  2594  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  2596  0EB4  00DF               	movwf	((??_sprintf+1)^(0+128)+1)
  2597  0EB5  085F               	movf	(??_sprintf+2)^(0+128),w
  2598  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  2599  0EB7  1703               	bsf	3,6	;RP1=1, select bank3
  2600  0EB8  0235               	subwf	(sprintf@_val+1)^(0+384),w
  2601  0EB9  1D03               	skipz
  2602  0EBA  2EC1               	goto	u4385
  2603  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0EBD  085E               	movf	(??_sprintf+1)^(0+128),w
  2606  0EBE  1683               	bsf	3,5	;RP0=1, select bank3
  2607  0EBF  1703               	bsf	3,6	;RP1=1, select bank3
  2608  0EC0  0234               	subwf	sprintf@_val^(0+384),w
  2609  0EC1                     u4385:	
  2610  0EC1  1C03               	btfss	3,0
  2611  0EC2  2ECF               	goto	l3482
  2612                           
  2613                           ;doprnt.c: 1316: break;
  2614  0EC3  3001               	movlw	1
  2615  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  2617  0EC6  00DD               	movwf	??_sprintf^(0+128)
  2618  0EC7  085D               	movf	??_sprintf^(0+128),w
  2619  0EC8  1683               	bsf	3,5	;RP0=1, select bank3
  2620  0EC9  1703               	bsf	3,6	;RP1=1, select bank3
  2621  0ECA  07BC               	addwf	sprintf@c^(0+384),f
  2622  0ECB  083C               	movf	sprintf@c^(0+384),w
  2623  0ECC  3A05               	xorlw	5
  2624  0ECD  1D03               	skipz
  2625  0ECE  2E96               	goto	l3474
  2626  0ECF                     l3482:	
  2627                           
  2628                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2629  0ECF  083A               	movf	(sprintf@width+1)^(0+384),w
  2630  0ED0  0439               	iorwf	sprintf@width^(0+384),w
  2631  0ED1  1903               	skipnz
  2632  0ED2  2EDD               	goto	l497
  2633  0ED3  0838               	movf	sprintf@flag^(0+384),w
  2634  0ED4  3903               	andlw	3
  2635  0ED5  1903               	btfsc	3,2
  2636  0ED6  2EDD               	goto	l497
  2637                           
  2638                           ;doprnt.c: 1355: width--;
  2639  0ED7  30FF               	movlw	255
  2640  0ED8  07B9               	addwf	sprintf@width^(0+384),f
  2641  0ED9  1803               	skipnc
  2642  0EDA  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2643  0EDB  30FF               	movlw	255
  2644  0EDC  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2645  0EDD                     l497:	
  2646                           
  2647                           ;doprnt.c: 1390: if(width > c)
  2648  0EDD  083C               	movf	sprintf@c^(0+384),w
  2649  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0EE0  00DD               	movwf	??_sprintf^(0+128)
  2652  0EE1  01DE               	clrf	(??_sprintf^(0+128)+1)
  2653  0EE2  1BDD               	btfsc	??_sprintf^(0+128),7
  2654  0EE3  03DE               	decf	(??_sprintf^(0+128)+1),f
  2655  0EE4  085E               	movf	(??_sprintf+1)^(0+128),w
  2656  0EE5  3A80               	xorlw	128
  2657  0EE6  00DF               	movwf	(??_sprintf+2)^(0+128)
  2658  0EE7  1683               	bsf	3,5	;RP0=1, select bank3
  2659  0EE8  1703               	bsf	3,6	;RP1=1, select bank3
  2660  0EE9  083A               	movf	(sprintf@width+1)^(0+384),w
  2661  0EEA  3A80               	xorlw	128
  2662  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0EED  025F               	subwf	(??_sprintf+2)^(0+128),w
  2665  0EEE  1D03               	skipz
  2666  0EEF  2EF6               	goto	u4425
  2667  0EF0  1683               	bsf	3,5	;RP0=1, select bank3
  2668  0EF1  1703               	bsf	3,6	;RP1=1, select bank3
  2669  0EF2  0839               	movf	sprintf@width^(0+384),w
  2670  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0EF5  025D               	subwf	??_sprintf^(0+128),w
  2673  0EF6                     u4425:	
  2674  0EF6  1803               	skipnc
  2675  0EF7  2F0E               	goto	l3490
  2676                           
  2677                           ;doprnt.c: 1391: width -= c;
  2678  0EF8  1683               	bsf	3,5	;RP0=1, select bank3
  2679  0EF9  1703               	bsf	3,6	;RP1=1, select bank3
  2680  0EFA  083C               	movf	sprintf@c^(0+384),w
  2681  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0EFD  00DD               	movwf	??_sprintf^(0+128)
  2684  0EFE  01DE               	clrf	(??_sprintf^(0+128)+1)
  2685  0EFF  1BDD               	btfsc	??_sprintf^(0+128),7
  2686  0F00  03DE               	decf	(??_sprintf^(0+128)+1),f
  2687  0F01  085D               	movf	??_sprintf^(0+128),w
  2688  0F02  1683               	bsf	3,5	;RP0=1, select bank3
  2689  0F03  1703               	bsf	3,6	;RP1=1, select bank3
  2690  0F04  02B9               	subwf	sprintf@width^(0+384),f
  2691  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0F06  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0F07  085E               	movf	(??_sprintf+1)^(0+128),w
  2694  0F08  1683               	bsf	3,5	;RP0=1, select bank3
  2695  0F09  1703               	bsf	3,6	;RP1=1, select bank3
  2696  0F0A  1C03               	skipc
  2697  0F0B  03BA               	decf	(sprintf@width+1)^(0+384),f
  2698  0F0C  02BA               	subwf	(sprintf@width+1)^(0+384),f
  2699  0F0D  2F12               	goto	l3492
  2700  0F0E                     l3490:	
  2701                           
  2702                           ;doprnt.c: 1392: else
  2703                           ;doprnt.c: 1393: width = 0;
  2704  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2705  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2706  0F10  01B9               	clrf	sprintf@width^(0+384)
  2707  0F11  01BA               	clrf	(sprintf@width+1)^(0+384)
  2708  0F12                     l3492:	
  2709                           
  2710                           ;doprnt.c: 1396: if(flag & 0x04) {
  2711  0F12  1D38               	btfss	sprintf@flag^(0+384),2
  2712  0F13  2F49               	goto	l3508
  2713                           
  2714                           ;doprnt.c: 1401: if(flag & 0x03)
  2715  0F14  0838               	movf	sprintf@flag^(0+384),w
  2716  0F15  3903               	andlw	3
  2717  0F16  1903               	btfsc	3,2
  2718  0F17  2F2B               	goto	l3500
  2719                           
  2720                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2721  0F18  302D               	movlw	45
  2722  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0F1B  00DD               	movwf	??_sprintf^(0+128)
  2725  0F1C  1683               	bsf	3,5	;RP0=1, select bank3
  2726  0F1D  1703               	bsf	3,6	;RP1=1, select bank3
  2727  0F1E  083B               	movf	sprintf@sp^(0+384),w
  2728  0F1F  0084               	movwf	4
  2729  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0F22  085D               	movf	??_sprintf^(0+128),w
  2732  0F23  1783               	bsf	3,7	;select IRP bank2
  2733  0F24  0080               	movwf	0
  2734  0F25  3001               	movlw	1
  2735  0F26  00DD               	movwf	??_sprintf^(0+128)
  2736  0F27  085D               	movf	??_sprintf^(0+128),w
  2737  0F28  1683               	bsf	3,5	;RP0=1, select bank3
  2738  0F29  1703               	bsf	3,6	;RP1=1, select bank3
  2739  0F2A  07BB               	addwf	sprintf@sp^(0+384),f
  2740  0F2B                     l3500:	
  2741                           
  2742                           ;doprnt.c: 1424: if(width)
  2743  0F2B  083A               	movf	(sprintf@width+1)^(0+384),w
  2744  0F2C  0439               	iorwf	sprintf@width^(0+384),w
  2745  0F2D  1903               	skipnz
  2746  0F2E  2F81               	goto	l3522
  2747                           
  2748                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2749                           
  2750                           ;doprnt.c: 1425: do
  2751  0F2F  3030               	movlw	48
  2752  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2753  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2754  0F32  00DD               	movwf	??_sprintf^(0+128)
  2755  0F33  1683               	bsf	3,5	;RP0=1, select bank3
  2756  0F34  1703               	bsf	3,6	;RP1=1, select bank3
  2757  0F35  083B               	movf	sprintf@sp^(0+384),w
  2758  0F36  0084               	movwf	4
  2759  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  2761  0F39  085D               	movf	??_sprintf^(0+128),w
  2762  0F3A  1783               	bsf	3,7	;select IRP bank2
  2763  0F3B  0080               	movwf	0
  2764  0F3C  3001               	movlw	1
  2765  0F3D  00DD               	movwf	??_sprintf^(0+128)
  2766  0F3E  085D               	movf	??_sprintf^(0+128),w
  2767  0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2768  0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2769  0F41  07BB               	addwf	sprintf@sp^(0+384),f
  2770                           
  2771                           ;doprnt.c: 1427: while(--width);
  2772  0F42  30FF               	movlw	255
  2773  0F43  07B9               	addwf	sprintf@width^(0+384),f
  2774  0F44  1803               	skipnc
  2775  0F45  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2776  0F46  30FF               	movlw	255
  2777  0F47  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2778  0F48  2F2B               	goto	l3500
  2779  0F49                     l3508:	
  2780                           ;doprnt.c: 1429: } else
  2781                           
  2782                           
  2783                           ;doprnt.c: 1431: {
  2784                           ;doprnt.c: 1433: if(width
  2785                           ;doprnt.c: 1437: )
  2786  0F49  083A               	movf	(sprintf@width+1)^(0+384),w
  2787  0F4A  0439               	iorwf	sprintf@width^(0+384),w
  2788  0F4B  1903               	skipnz
  2789  0F4C  2F6A               	goto	l3516
  2790  0F4D                     l3510:	
  2791                           ;doprnt.c: 1438: do
  2792                           
  2793                           
  2794                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2795  0F4D  3020               	movlw	32
  2796  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0F50  00DD               	movwf	??_sprintf^(0+128)
  2799  0F51  1683               	bsf	3,5	;RP0=1, select bank3
  2800  0F52  1703               	bsf	3,6	;RP1=1, select bank3
  2801  0F53  083B               	movf	sprintf@sp^(0+384),w
  2802  0F54  0084               	movwf	4
  2803  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0F57  085D               	movf	??_sprintf^(0+128),w
  2806  0F58  1783               	bsf	3,7	;select IRP bank2
  2807  0F59  0080               	movwf	0
  2808  0F5A  3001               	movlw	1
  2809  0F5B  00DD               	movwf	??_sprintf^(0+128)
  2810  0F5C  085D               	movf	??_sprintf^(0+128),w
  2811  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  2812  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  2813  0F5F  07BB               	addwf	sprintf@sp^(0+384),f
  2814                           
  2815                           ;doprnt.c: 1440: while(--width);
  2816  0F60  30FF               	movlw	255
  2817  0F61  07B9               	addwf	sprintf@width^(0+384),f
  2818  0F62  1803               	skipnc
  2819  0F63  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2820  0F64  30FF               	movlw	255
  2821  0F65  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2822  0F66  083A               	movf	(sprintf@width+1)^(0+384),w
  2823  0F67  0439               	iorwf	sprintf@width^(0+384),w
  2824  0F68  1D03               	skipz
  2825  0F69  2F4D               	goto	l3510
  2826  0F6A                     l3516:	
  2827                           
  2828                           ;doprnt.c: 1447: if(flag & 0x03)
  2829  0F6A  0838               	movf	sprintf@flag^(0+384),w
  2830  0F6B  3903               	andlw	3
  2831  0F6C  1903               	btfsc	3,2
  2832  0F6D  2F81               	goto	l3522
  2833                           
  2834                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2835  0F6E  302D               	movlw	45
  2836  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0F71  00DD               	movwf	??_sprintf^(0+128)
  2839  0F72  1683               	bsf	3,5	;RP0=1, select bank3
  2840  0F73  1703               	bsf	3,6	;RP1=1, select bank3
  2841  0F74  083B               	movf	sprintf@sp^(0+384),w
  2842  0F75  0084               	movwf	4
  2843  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0F78  085D               	movf	??_sprintf^(0+128),w
  2846  0F79  1783               	bsf	3,7	;select IRP bank2
  2847  0F7A  0080               	movwf	0
  2848  0F7B  3001               	movlw	1
  2849  0F7C  00DD               	movwf	??_sprintf^(0+128)
  2850  0F7D  085D               	movf	??_sprintf^(0+128),w
  2851  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2852  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2853  0F80  07BB               	addwf	sprintf@sp^(0+384),f
  2854  0F81                     l3522:	
  2855                           
  2856                           ;doprnt.c: 1478: }
  2857                           ;doprnt.c: 1481: prec = c;
  2858  0F81  083C               	movf	sprintf@c^(0+384),w
  2859  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2860  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2861  0F84  00DD               	movwf	??_sprintf^(0+128)
  2862  0F85  085D               	movf	??_sprintf^(0+128),w
  2863  0F86  1683               	bsf	3,5	;RP0=1, select bank3
  2864  0F87  1703               	bsf	3,6	;RP1=1, select bank3
  2865  0F88  00B3               	movwf	sprintf@prec^(0+384)
  2866  0F89                     l3530:	
  2867                           ;doprnt.c: 1483: while(prec--) {
  2868                           
  2869  0F89  30FF               	movlw	-1
  2870  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0F8C  00DD               	movwf	??_sprintf^(0+128)
  2873  0F8D  085D               	movf	??_sprintf^(0+128),w
  2874  0F8E  1683               	bsf	3,5	;RP0=1, select bank3
  2875  0F8F  1703               	bsf	3,6	;RP1=1, select bank3
  2876  0F90  07B3               	addwf	sprintf@prec^(0+384),f
  2877  0F91  0833               	movf	sprintf@prec^(0+384),w
  2878  0F92  3AFF               	xorlw	-1
  2879  0F93  1903               	btfsc	3,2
  2880  0F94  2D6A               	goto	l3532
  2881                           
  2882                           ;doprnt.c: 1487: {
  2883                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2884  0F95  300A               	movlw	10
  2885  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2887  0F98  00D3               	movwf	___lwmod@divisor^(0+128)
  2888  0F99  3000               	movlw	0
  2889  0F9A  00D4               	movwf	(___lwmod@divisor^(0+128)+1)
  2890  0F9B  1683               	bsf	3,5	;RP0=1, select bank3
  2891  0F9C  1703               	bsf	3,6	;RP1=1, select bank3
  2892  0F9D  0833               	movf	sprintf@prec^(0+384),w
  2893  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2895  0FA0  00DD               	movwf	??_sprintf^(0+128)
  2896  0FA1  075D               	addwf	??_sprintf^(0+128),w
  2897  0FA2  3E12               	addlw	low (_dpowers| (0+32768))
  2898  0FA3  0084               	movwf	4
  2899  0FA4  3098               	movlw	high (_dpowers| (0+32768))
  2900  0FA5  1803               	skipnc
  2901  0FA6  3E01               	addlw	1
  2902  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0FA9  00FF               	movwf	127
  2905  0FAA  160A  158A  2000  120A  158A  	fcall	stringtab
  2906  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0FB1  00CB               	movwf	___lwdiv@divisor^(0+128)
  2909  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0FB4  160A  158A  2000  120A  158A  	fcall	stringtab
  2912  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0FBB  00CC               	movwf	(___lwdiv@divisor+1)^(0+128)
  2915  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  2916  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  2917  0FBE  0835               	movf	(sprintf@_val+1)^(0+384),w
  2918  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0FC1  01CE               	clrf	(___lwdiv@dividend+1)^(0+128)
  2921  0FC2  07CE               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2922  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2923  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2924  0FC5  0834               	movf	sprintf@_val^(0+384),w
  2925  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0FC8  01CD               	clrf	___lwdiv@dividend^(0+128)
  2928  0FC9  07CD               	addwf	___lwdiv@dividend^(0+128),f
  2929  0FCA  160A  118A  2399  120A  158A  	fcall	___lwdiv
  2930  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2932  0FD1  084C               	movf	(?___lwdiv+1)^(0+128),w
  2933  0FD2  01D6               	clrf	(___lwmod@dividend+1)^(0+128)
  2934  0FD3  07D6               	addwf	(___lwmod@dividend+1)^(0+128),f
  2935  0FD4  084B               	movf	?___lwdiv^(0+128),w
  2936  0FD5  01D5               	clrf	___lwmod@dividend^(0+128)
  2937  0FD6  07D5               	addwf	___lwmod@dividend^(0+128),f
  2938  0FD7  160A  118A  2325  120A  158A  	fcall	___lwmod
  2939  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0FDE  0853               	movf	?___lwmod^(0+128),w
  2942  0FDF  3E30               	addlw	48
  2943  0FE0  00DE               	movwf	(??_sprintf+1)^(0+128)
  2944  0FE1  085E               	movf	(??_sprintf+1)^(0+128),w
  2945  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  2946  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  2947  0FE4  00BC               	movwf	sprintf@c^(0+384)
  2948                           
  2949                           ;doprnt.c: 1532: }
  2950                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2951  0FE5  083C               	movf	sprintf@c^(0+384),w
  2952  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2953  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2954  0FE8  00DD               	movwf	??_sprintf^(0+128)
  2955  0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  2956  0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  2957  0FEB  083B               	movf	sprintf@sp^(0+384),w
  2958  0FEC  0084               	movwf	4
  2959  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  2960  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  2961  0FEF  085D               	movf	??_sprintf^(0+128),w
  2962  0FF0  1783               	bsf	3,7	;select IRP bank2
  2963  0FF1  0080               	movwf	0
  2964  0FF2  3001               	movlw	1
  2965  0FF3  00DD               	movwf	??_sprintf^(0+128)
  2966  0FF4  085D               	movf	??_sprintf^(0+128),w
  2967  0FF5  1683               	bsf	3,5	;RP0=1, select bank3
  2968  0FF6  1703               	bsf	3,6	;RP1=1, select bank3
  2969  0FF7  07BB               	addwf	sprintf@sp^(0+384),f
  2970  0FF8  2F89               	goto	l3530
  2971  0FF9                     l3534:	
  2972                           ;doprnt.c: 1534: }
  2973                           ;doprnt.c: 1542: }
  2974                           ;doprnt.c: 1544: alldone:
  2975                           
  2976                           
  2977                           ;doprnt.c: 1547: *sp = 0;
  2978  0FF9  1683               	bsf	3,5	;RP0=1, select bank3
  2979  0FFA  1703               	bsf	3,6	;RP1=1, select bank3
  2980  0FFB  083B               	movf	sprintf@sp^(0+384),w
  2981  0FFC  0084               	movwf	4
  2982  0FFD  1783               	bsf	3,7	;select IRP bank2
  2983  0FFE  0180               	clrf	0
  2984  0FFF  0008               	return
  2985  1000                     __end_of_sprintf:	
  2986                           ;doprnt.c: 1549: return 0;
  2987                           ;	Return value of _sprintf is never used
  2988                           
  2989                           
  2990                           	psect	text2
  2991  10F1                     __ptext2:	
  2992 ;; *************** function _isdigit *****************
  2993 ;; Defined at:
  2994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  c               1    5[BANK1 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       0       2       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       0       2       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    5
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_sprintf
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _isdigit
  3024  10F1                     _isdigit:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3028                           ;isdigit@c stored from wreg
  3029  10F1  1683               	bsf	3,5	;RP0=1, select bank1
  3030  10F2  1303               	bcf	3,6	;RP1=0, select bank1
  3031  10F3  00CC               	movwf	isdigit@c^(0+128)
  3032  10F4  01CB               	clrf	_isdigit$1449^(0+128)
  3033  10F5  303A               	movlw	58
  3034  10F6  024C               	subwf	isdigit@c^(0+128),w
  3035  10F7  1803               	skipnc
  3036  10F8  28FF               	goto	l3366
  3037  10F9  3030               	movlw	48
  3038  10FA  024C               	subwf	isdigit@c^(0+128),w
  3039  10FB  1C03               	skipc
  3040  10FC  28FF               	goto	l3366
  3041  10FD  01CB               	clrf	_isdigit$1449^(0+128)
  3042  10FE  0ACB               	incf	_isdigit$1449^(0+128),f
  3043  10FF                     l3366:	
  3044  10FF  0C4B               	rrf	_isdigit$1449^(0+128),w
  3045  1100  0008               	return
  3046  1101                     __end_of_isdigit:	
  3047                           
  3048                           	psect	text3
  3049  1275                     __ptext3:	
  3050 ;; *************** function ___wmul *****************
  3051 ;; Defined at:
  3052 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  multiplier      2    4[BANK1 ] unsigned int 
  3055 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  product         2    8[BANK1 ] unsigned int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2    4[BANK1 ] unsigned int 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       4       0       0
  3068 ;;      Locals:         0       0       2       0       0
  3069 ;;      Temps:          0       0       0       0       0
  3070 ;;      Totals:         0       0       6       0       0
  3071 ;;Total ram usage:        6 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    5
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_sprintf
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function ___wmul
  3083  1275                     ___wmul:	
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3087  1275  1683               	bsf	3,5	;RP0=1, select bank1
  3088  1276  1303               	bcf	3,6	;RP1=0, select bank1
  3089  1277  01CF               	clrf	___wmul@product^(0+128)
  3090  1278  01D0               	clrf	(___wmul@product+1)^(0+128)
  3091  1279                     l3372:	
  3092  1279  1C4B               	btfss	___wmul@multiplier^(0+128),0
  3093  127A  2A81               	goto	l598
  3094  127B  084D               	movf	___wmul@multiplicand^(0+128),w
  3095  127C  07CF               	addwf	___wmul@product^(0+128),f
  3096  127D  1803               	skipnc
  3097  127E  0AD0               	incf	(___wmul@product+1)^(0+128),f
  3098  127F  084E               	movf	(___wmul@multiplicand+1)^(0+128),w
  3099  1280  07D0               	addwf	(___wmul@product+1)^(0+128),f
  3100  1281                     l598:	
  3101  1281  3001               	movlw	1
  3102  1282                     u4175:	
  3103  1282  1003               	clrc
  3104  1283  0DCD               	rlf	___wmul@multiplicand^(0+128),f
  3105  1284  0DCE               	rlf	(___wmul@multiplicand+1)^(0+128),f
  3106  1285  3EFF               	addlw	-1
  3107  1286  1D03               	skipz
  3108  1287  2A82               	goto	u4175
  3109  1288  3001               	movlw	1
  3110  1289                     u4185:	
  3111  1289  1003               	clrc
  3112  128A  0CCC               	rrf	(___wmul@multiplier+1)^(0+128),f
  3113  128B  0CCB               	rrf	___wmul@multiplier^(0+128),f
  3114  128C  3EFF               	addlw	-1
  3115  128D  1D03               	skipz
  3116  128E  2A89               	goto	u4185
  3117  128F  084C               	movf	(___wmul@multiplier+1)^(0+128),w
  3118  1290  044B               	iorwf	___wmul@multiplier^(0+128),w
  3119  1291  1D03               	skipz
  3120  1292  2A79               	goto	l3372
  3121  1293  0850               	movf	(___wmul@product+1)^(0+128),w
  3122  1294  01CC               	clrf	(?___wmul+1)^(0+128)
  3123  1295  07CC               	addwf	(?___wmul+1)^(0+128),f
  3124  1296  084F               	movf	___wmul@product^(0+128),w
  3125  1297  01CB               	clrf	?___wmul^(0+128)
  3126  1298  07CB               	addwf	?___wmul^(0+128),f
  3127  1299  0008               	return
  3128  129A                     __end_of___wmul:	
  3129                           
  3130                           	psect	text4
  3131  1325                     __ptext4:	
  3132 ;; *************** function ___lwmod *****************
  3133 ;; Defined at:
  3134 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  divisor         2   12[BANK1 ] unsigned int 
  3137 ;;  dividend        2   14[BANK1 ] unsigned int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  counter         1   17[BANK1 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2   12[BANK1 ] unsigned int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       4       0       0
  3150 ;;      Locals:         0       0       1       0       0
  3151 ;;      Temps:          0       0       1       0       0
  3152 ;;      Totals:         0       0       6       0       0
  3153 ;;Total ram usage:        6 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    5
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_sprintf
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function ___lwmod
  3165  1325                     ___lwmod:	
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3169  1325  1683               	bsf	3,5	;RP0=1, select bank1
  3170  1326  1303               	bcf	3,6	;RP1=0, select bank1
  3171  1327  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3172  1328  0453               	iorwf	___lwmod@divisor^(0+128),w
  3173  1329  1903               	skipnz
  3174  132A  2B54               	goto	l3426
  3175  132B  01D8               	clrf	___lwmod@counter^(0+128)
  3176  132C  0AD8               	incf	___lwmod@counter^(0+128),f
  3177  132D                     l3416:	
  3178  132D  1BD4               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3179  132E  2B3B               	goto	l3418
  3180  132F  3001               	movlw	1
  3181  1330                     u4285:	
  3182  1330  1003               	clrc
  3183  1331  0DD3               	rlf	___lwmod@divisor^(0+128),f
  3184  1332  0DD4               	rlf	(___lwmod@divisor+1)^(0+128),f
  3185  1333  3EFF               	addlw	-1
  3186  1334  1D03               	skipz
  3187  1335  2B30               	goto	u4285
  3188  1336  3001               	movlw	1
  3189  1337  00D7               	movwf	??___lwmod^(0+128)
  3190  1338  0857               	movf	??___lwmod^(0+128),w
  3191  1339  07D8               	addwf	___lwmod@counter^(0+128),f
  3192  133A  2B2D               	goto	l3416
  3193  133B                     l3418:	
  3194  133B  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3195  133C  0256               	subwf	(___lwmod@dividend+1)^(0+128),w
  3196  133D  1D03               	skipz
  3197  133E  2B41               	goto	u4305
  3198  133F  0853               	movf	___lwmod@divisor^(0+128),w
  3199  1340  0255               	subwf	___lwmod@dividend^(0+128),w
  3200  1341                     u4305:	
  3201  1341  1C03               	skipc
  3202  1342  2B49               	goto	l3422
  3203  1343  0853               	movf	___lwmod@divisor^(0+128),w
  3204  1344  02D5               	subwf	___lwmod@dividend^(0+128),f
  3205  1345  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3206  1346  1C03               	skipc
  3207  1347  03D6               	decf	(___lwmod@dividend+1)^(0+128),f
  3208  1348  02D6               	subwf	(___lwmod@dividend+1)^(0+128),f
  3209  1349                     l3422:	
  3210  1349  3001               	movlw	1
  3211  134A                     u4315:	
  3212  134A  1003               	clrc
  3213  134B  0CD4               	rrf	(___lwmod@divisor+1)^(0+128),f
  3214  134C  0CD3               	rrf	___lwmod@divisor^(0+128),f
  3215  134D  3EFF               	addlw	-1
  3216  134E  1D03               	skipz
  3217  134F  2B4A               	goto	u4315
  3218  1350  3001               	movlw	1
  3219  1351  02D8               	subwf	___lwmod@counter^(0+128),f
  3220  1352  1D03               	btfss	3,2
  3221  1353  2B3B               	goto	l3418
  3222  1354                     l3426:	
  3223  1354  0856               	movf	(___lwmod@dividend+1)^(0+128),w
  3224  1355  01D4               	clrf	(?___lwmod+1)^(0+128)
  3225  1356  07D4               	addwf	(?___lwmod+1)^(0+128),f
  3226  1357  0855               	movf	___lwmod@dividend^(0+128),w
  3227  1358  01D3               	clrf	?___lwmod^(0+128)
  3228  1359  07D3               	addwf	?___lwmod^(0+128),f
  3229  135A  0008               	return
  3230  135B                     __end_of___lwmod:	
  3231                           
  3232                           	psect	text5
  3233  1399                     __ptext5:	
  3234 ;; *************** function ___lwdiv *****************
  3235 ;; Defined at:
  3236 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  divisor         2    4[BANK1 ] unsigned int 
  3239 ;;  dividend        2    6[BANK1 ] unsigned int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  quotient        2   10[BANK1 ] unsigned int 
  3242 ;;  counter         1    9[BANK1 ] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    4[BANK1 ] unsigned int 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       4       0       0
  3253 ;;      Locals:         0       0       3       0       0
  3254 ;;      Temps:          0       0       1       0       0
  3255 ;;      Totals:         0       0       8       0       0
  3256 ;;Total ram usage:        8 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    5
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_sprintf
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function ___lwdiv
  3268  1399                     ___lwdiv:	
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3272  1399  1683               	bsf	3,5	;RP0=1, select bank1
  3273  139A  1303               	bcf	3,6	;RP1=0, select bank1
  3274  139B  01D1               	clrf	___lwdiv@quotient^(0+128)
  3275  139C  01D2               	clrf	(___lwdiv@quotient+1)^(0+128)
  3276  139D  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3277  139E  044B               	iorwf	___lwdiv@divisor^(0+128),w
  3278  139F  1903               	skipnz
  3279  13A0  2BD2               	goto	l3404
  3280  13A1  01D0               	clrf	___lwdiv@counter^(0+128)
  3281  13A2  0AD0               	incf	___lwdiv@counter^(0+128),f
  3282  13A3                     l3392:	
  3283  13A3  1BCC               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3284  13A4  2BB1               	goto	l3394
  3285  13A5  3001               	movlw	1
  3286  13A6                     u4215:	
  3287  13A6  1003               	clrc
  3288  13A7  0DCB               	rlf	___lwdiv@divisor^(0+128),f
  3289  13A8  0DCC               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3290  13A9  3EFF               	addlw	-1
  3291  13AA  1D03               	skipz
  3292  13AB  2BA6               	goto	u4215
  3293  13AC  3001               	movlw	1
  3294  13AD  00CF               	movwf	??___lwdiv^(0+128)
  3295  13AE  084F               	movf	??___lwdiv^(0+128),w
  3296  13AF  07D0               	addwf	___lwdiv@counter^(0+128),f
  3297  13B0  2BA3               	goto	l3392
  3298  13B1                     l3394:	
  3299  13B1  3001               	movlw	1
  3300  13B2                     u4235:	
  3301  13B2  1003               	clrc
  3302  13B3  0DD1               	rlf	___lwdiv@quotient^(0+128),f
  3303  13B4  0DD2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3304  13B5  3EFF               	addlw	-1
  3305  13B6  1D03               	skipz
  3306  13B7  2BB2               	goto	u4235
  3307  13B8  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3308  13B9  024E               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3309  13BA  1D03               	skipz
  3310  13BB  2BBE               	goto	u4245
  3311  13BC  084B               	movf	___lwdiv@divisor^(0+128),w
  3312  13BD  024D               	subwf	___lwdiv@dividend^(0+128),w
  3313  13BE                     u4245:	
  3314  13BE  1C03               	skipc
  3315  13BF  2BC7               	goto	l3400
  3316  13C0  084B               	movf	___lwdiv@divisor^(0+128),w
  3317  13C1  02CD               	subwf	___lwdiv@dividend^(0+128),f
  3318  13C2  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3319  13C3  1C03               	skipc
  3320  13C4  03CE               	decf	(___lwdiv@dividend+1)^(0+128),f
  3321  13C5  02CE               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3322  13C6  1451               	bsf	___lwdiv@quotient^(0+128),0
  3323  13C7                     l3400:	
  3324  13C7  3001               	movlw	1
  3325  13C8                     u4255:	
  3326  13C8  1003               	clrc
  3327  13C9  0CCC               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3328  13CA  0CCB               	rrf	___lwdiv@divisor^(0+128),f
  3329  13CB  3EFF               	addlw	-1
  3330  13CC  1D03               	skipz
  3331  13CD  2BC8               	goto	u4255
  3332  13CE  3001               	movlw	1
  3333  13CF  02D0               	subwf	___lwdiv@counter^(0+128),f
  3334  13D0  1D03               	btfss	3,2
  3335  13D1  2BB1               	goto	l3394
  3336  13D2                     l3404:	
  3337  13D2  0852               	movf	(___lwdiv@quotient+1)^(0+128),w
  3338  13D3  01CC               	clrf	(?___lwdiv+1)^(0+128)
  3339  13D4  07CC               	addwf	(?___lwdiv+1)^(0+128),f
  3340  13D5  0851               	movf	___lwdiv@quotient^(0+128),w
  3341  13D6  01CB               	clrf	?___lwdiv^(0+128)
  3342  13D7  07CB               	addwf	?___lwdiv^(0+128),f
  3343  13D8  0008               	return
  3344  13D9                     __end_of___lwdiv:	
  3345                           
  3346                           	psect	text6
  3347  12F4                     __ptext6:	
  3348 ;; *************** function _USART_WriteString *****************
  3349 ;; Defined at:
  3350 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3353 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3354 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3355 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3356 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       0       2       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       2       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    6
  3375 ;; This function calls:
  3376 ;;		_USART_WriteChar
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _USART_WriteString
  3384  12F4                     _USART_WriteString:	
  3385  12F4                     l2894:	
  3386                           ;usart.c: 54: while(*str != '\0')
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3390                           
  3391  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  3392  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  3393  12F6  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3394  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  3395  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  3396  12F9  00FF               	movwf	127
  3397  12FA  1683               	bsf	3,5	;RP0=1, select bank1
  3398  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  3399  12FC  084C               	movf	USART_WriteString@str^(0+128),w
  3400  12FD  0084               	movwf	4
  3401  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  3402  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  3403  1300  160A  158A  2000  160A  118A  	fcall	stringtab
  3404  1305  3800               	iorlw	0
  3405  1306  1903               	btfsc	3,2
  3406  1307  0008               	return
  3407                           
  3408                           ;usart.c: 55: {
  3409                           ;usart.c: 56: USART_WriteChar(*str);
  3410  1308  1683               	bsf	3,5	;RP0=1, select bank1
  3411  1309  1303               	bcf	3,6	;RP1=0, select bank1
  3412  130A  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3413  130B  1283               	bcf	3,5	;RP0=0, select bank0
  3414  130C  1303               	bcf	3,6	;RP1=0, select bank0
  3415  130D  00FF               	movwf	127
  3416  130E  1683               	bsf	3,5	;RP0=1, select bank1
  3417  130F  1303               	bcf	3,6	;RP1=0, select bank1
  3418  1310  084C               	movf	USART_WriteString@str^(0+128),w
  3419  1311  0084               	movwf	4
  3420  1312  1283               	bcf	3,5	;RP0=0, select bank0
  3421  1313  1303               	bcf	3,6	;RP1=0, select bank0
  3422  1314  160A  158A  2000  160A  118A  	fcall	stringtab
  3423  1319  160A  118A  20E4  160A  118A  	fcall	_USART_WriteChar
  3424                           
  3425                           ;usart.c: 57: str++;
  3426  131E  3001               	movlw	1
  3427  131F  1683               	bsf	3,5	;RP0=1, select bank1
  3428  1320  1303               	bcf	3,6	;RP1=0, select bank1
  3429  1321  07CC               	addwf	USART_WriteString@str^(0+128),f
  3430  1322  1803               	skipnc
  3431  1323  0ACD               	incf	(USART_WriteString@str+1)^(0+128),f
  3432  1324  2AF4               	goto	l2894
  3433  1325                     __end_of_USART_WriteString:	
  3434                           
  3435                           	psect	text7
  3436  10E4                     __ptext7:	
  3437 ;; *************** function _USART_WriteChar *****************
  3438 ;; Defined at:
  3439 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  byte            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  byte            1    4[BANK1 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;		None               void
  3446 ;; Registers used:
  3447 ;;		wreg
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         0       0       1       0       0
  3455 ;;      Temps:          0       0       0       0       0
  3456 ;;      Totals:         0       0       1       0       0
  3457 ;;Total ram usage:        1 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    5
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_USART_WriteString
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _USART_WriteChar
  3469  10E4                     _USART_WriteChar:	
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _USART_WriteChar: [wreg]
  3473                           ;USART_WriteChar@byte stored from wreg
  3474  10E4  1683               	bsf	3,5	;RP0=1, select bank1
  3475  10E5  1303               	bcf	3,6	;RP1=0, select bank1
  3476  10E6  00CB               	movwf	USART_WriteChar@byte^(0+128)
  3477  10E7                     l227:	
  3478                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3479                           
  3480  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  3481  10E8  1E0C               	btfss	12,4	;volatile
  3482  10E9  28E7               	goto	l227
  3483                           
  3484                           ;usart.c: 47: TXREG = byte;
  3485  10EA  1683               	bsf	3,5	;RP0=1, select bank1
  3486  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3487  10EC  084B               	movf	USART_WriteChar@byte^(0+128),w
  3488  10ED  1283               	bcf	3,5	;RP0=0, select bank0
  3489  10EE  1303               	bcf	3,6	;RP1=0, select bank0
  3490  10EF  0099               	movwf	25	;volatile
  3491  10F0  0008               	return
  3492  10F1                     __end_of_USART_WriteChar:	
  3493                           
  3494                           	psect	text8
  3495  0809                     __ptext8:	
  3496 ;; *************** function _USART_Init *****************
  3497 ;; Defined at:
  3498 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  BaudRate        4   19[BANK1 ] long 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       4       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          0       0       4       0       0
  3515 ;;      Totals:         0       0       8       0       0
  3516 ;;Total ram usage:        8 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    6
  3519 ;; This function calls:
  3520 ;;		___aldiv
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _USART_Init
  3528  0809                     _USART_Init:	
  3529                           
  3530                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3534  0809  1683               	bsf	3,5	;RP0=1, select bank1
  3535  080A  1303               	bcf	3,6	;RP1=0, select bank1
  3536  080B  085A               	movf	USART_Init@BaudRate^(0+128),w
  3537  080C  00DE               	movwf	??_USART_Init^(0+128)
  3538  080D  085B               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3539  080E  00DF               	movwf	(??_USART_Init^(0+128)+1)
  3540  080F  085C               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3541  0810  00E0               	movwf	(??_USART_Init^(0+128)+2)
  3542  0811  085D               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3543  0812  00E1               	movwf	(??_USART_Init^(0+128)+3)
  3544  0813  3004               	movlw	4
  3545  0814                     u3625:	
  3546  0814  1003               	clrc
  3547  0815  0DDE               	rlf	??_USART_Init^(0+128),f
  3548  0816  0DDF               	rlf	(??_USART_Init^(0+128)+1),f
  3549  0817  0DE0               	rlf	(??_USART_Init^(0+128)+2),f
  3550  0818  0DE1               	rlf	(??_USART_Init^(0+128)+3),f
  3551  0819  3EFF               	addlw	-1
  3552  081A  1D03               	skipz
  3553  081B  2814               	goto	u3625
  3554  081C  0861               	movf	(??_USART_Init+3)^(0+128),w
  3555  081D  00CE               	movwf	(___aldiv@divisor+3)^(0+128)
  3556  081E  0860               	movf	(??_USART_Init+2)^(0+128),w
  3557  081F  00CD               	movwf	(___aldiv@divisor+2)^(0+128)
  3558  0820  085F               	movf	(??_USART_Init+1)^(0+128),w
  3559  0821  00CC               	movwf	(___aldiv@divisor+1)^(0+128)
  3560  0822  085E               	movf	??_USART_Init^(0+128),w
  3561  0823  00CB               	movwf	___aldiv@divisor^(0+128)
  3562  0824  3001               	movlw	1
  3563  0825  00D2               	movwf	(___aldiv@dividend+3)^(0+128)
  3564  0826  3019               	movlw	25
  3565  0827  00D1               	movwf	(___aldiv@dividend+2)^(0+128)
  3566  0828  3040               	movlw	64
  3567  0829  00D0               	movwf	(___aldiv@dividend+1)^(0+128)
  3568  082A  3000               	movlw	0
  3569  082B  00CF               	movwf	___aldiv@dividend^(0+128)
  3570  082C  160A  118A  2595   	fcall	___aldiv
  3571  082F  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0830  1303               	bcf	3,6	;RP1=0, select bank1
  3573  0831  084B               	movf	?___aldiv^(0+128),w
  3574  0832  3EFF               	addlw	255
  3575  0833  0099               	movwf	25	;volatile
  3576                           
  3577                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3578  0834  1398               	bcf	24,7	;volatile
  3579                           
  3580                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3581  0835  1318               	bcf	24,6	;volatile
  3582                           
  3583                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3584  0836  1698               	bsf	24,5	;volatile
  3585                           
  3586                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3587  0837  1218               	bcf	24,4	;volatile
  3588                           
  3589                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3590  0838  1518               	bsf	24,2	;volatile
  3591                           
  3592                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3593  0839  1498               	bsf	24,1	;volatile
  3594                           
  3595                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3596  083A  1018               	bcf	24,0	;volatile
  3597                           
  3598                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3599  083B  1283               	bcf	3,5	;RP0=0, select bank0
  3600  083C  1303               	bcf	3,6	;RP1=0, select bank0
  3601  083D  1798               	bsf	24,7	;volatile
  3602                           
  3603                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3604  083E  1318               	bcf	24,6	;volatile
  3605                           
  3606                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3607  083F  1298               	bcf	24,5	;volatile
  3608                           
  3609                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3610  0840  1618               	bsf	24,4	;volatile
  3611                           
  3612                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3613  0841  1198               	bcf	24,3	;volatile
  3614                           
  3615                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3616  0842  1118               	bcf	24,2	;volatile
  3617                           
  3618                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3619  0843  1098               	bcf	24,1	;volatile
  3620                           
  3621                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3622  0844  1018               	bcf	24,0	;volatile
  3623                           
  3624                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3625  0845  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0846  1303               	bcf	3,6	;RP1=0, select bank1
  3627  0847  120C               	bcf	12,4	;volatile
  3628                           
  3629                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3630  0848  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0849  1303               	bcf	3,6	;RP1=0, select bank0
  3632  084A  120C               	bcf	12,4	;volatile
  3633                           
  3634                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3635  084B  1683               	bsf	3,5	;RP0=1, select bank1
  3636  084C  1303               	bcf	3,6	;RP1=0, select bank1
  3637  084D  168C               	bsf	12,5	;volatile
  3638                           
  3639                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3640  084E  1283               	bcf	3,5	;RP0=0, select bank0
  3641  084F  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0850  128C               	bcf	12,5	;volatile
  3643  0851  0008               	return
  3644  0852                     __end_of_USART_Init:	
  3645                           
  3646                           	psect	text9
  3647  1595                     __ptext9:	
  3648 ;; *************** function ___aldiv *****************
  3649 ;; Defined at:
  3650 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  divisor         4    4[BANK1 ] long 
  3653 ;;  dividend        4    8[BANK1 ] long 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  quotient        4   15[BANK1 ] long 
  3656 ;;  sign            1   14[BANK1 ] unsigned char 
  3657 ;;  counter         1   13[BANK1 ] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  4    4[BANK1 ] long 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       8       0       0
  3668 ;;      Locals:         0       0       6       0       0
  3669 ;;      Temps:          0       0       1       0       0
  3670 ;;      Totals:         0       0      15       0       0
  3671 ;;Total ram usage:       15 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    5
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_USART_Init
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function ___aldiv
  3683  1595                     ___aldiv:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3687  1595  1683               	bsf	3,5	;RP0=1, select bank1
  3688  1596  1303               	bcf	3,6	;RP1=0, select bank1
  3689  1597  01D5               	clrf	___aldiv@sign^(0+128)
  3690  1598  1FCE               	btfss	(___aldiv@divisor+3)^(0+128),7
  3691  1599  2DA7               	goto	l653
  3692  159A  09CB               	comf	___aldiv@divisor^(0+128),f
  3693  159B  09CC               	comf	(___aldiv@divisor+1)^(0+128),f
  3694  159C  09CD               	comf	(___aldiv@divisor+2)^(0+128),f
  3695  159D  09CE               	comf	(___aldiv@divisor+3)^(0+128),f
  3696  159E  0ACB               	incf	___aldiv@divisor^(0+128),f
  3697  159F  1903               	skipnz
  3698  15A0  0ACC               	incf	(___aldiv@divisor+1)^(0+128),f
  3699  15A1  1903               	skipnz
  3700  15A2  0ACD               	incf	(___aldiv@divisor+2)^(0+128),f
  3701  15A3  1903               	skipnz
  3702  15A4  0ACE               	incf	(___aldiv@divisor+3)^(0+128),f
  3703  15A5  01D5               	clrf	___aldiv@sign^(0+128)
  3704  15A6  0AD5               	incf	___aldiv@sign^(0+128),f
  3705  15A7                     l653:	
  3706  15A7  1FD2               	btfss	(___aldiv@dividend+3)^(0+128),7
  3707  15A8  2DB8               	goto	l2544
  3708  15A9  09CF               	comf	___aldiv@dividend^(0+128),f
  3709  15AA  09D0               	comf	(___aldiv@dividend+1)^(0+128),f
  3710  15AB  09D1               	comf	(___aldiv@dividend+2)^(0+128),f
  3711  15AC  09D2               	comf	(___aldiv@dividend+3)^(0+128),f
  3712  15AD  0ACF               	incf	___aldiv@dividend^(0+128),f
  3713  15AE  1903               	skipnz
  3714  15AF  0AD0               	incf	(___aldiv@dividend+1)^(0+128),f
  3715  15B0  1903               	skipnz
  3716  15B1  0AD1               	incf	(___aldiv@dividend+2)^(0+128),f
  3717  15B2  1903               	skipnz
  3718  15B3  0AD2               	incf	(___aldiv@dividend+3)^(0+128),f
  3719  15B4  3001               	movlw	1
  3720  15B5  00D3               	movwf	??___aldiv^(0+128)
  3721  15B6  0853               	movf	??___aldiv^(0+128),w
  3722  15B7  06D5               	xorwf	___aldiv@sign^(0+128),f
  3723  15B8                     l2544:	
  3724  15B8  3000               	movlw	0
  3725  15B9  00D9               	movwf	(___aldiv@quotient+3)^(0+128)
  3726  15BA  3000               	movlw	0
  3727  15BB  00D8               	movwf	(___aldiv@quotient+2)^(0+128)
  3728  15BC  3000               	movlw	0
  3729  15BD  00D7               	movwf	(___aldiv@quotient+1)^(0+128)
  3730  15BE  3000               	movlw	0
  3731  15BF  00D6               	movwf	___aldiv@quotient^(0+128)
  3732  15C0  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3733  15C1  044D               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3734  15C2  044C               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3735  15C3  044B               	iorwf	___aldiv@divisor^(0+128),w
  3736  15C4  1903               	skipnz
  3737  15C5  2E0D               	goto	l2566
  3738  15C6  01D4               	clrf	___aldiv@counter^(0+128)
  3739  15C7  0AD4               	incf	___aldiv@counter^(0+128),f
  3740  15C8                     l2552:	
  3741  15C8  1BCE               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3742  15C9  2DD8               	goto	l2554
  3743  15CA  3001               	movlw	1
  3744  15CB  00D3               	movwf	??___aldiv^(0+128)
  3745  15CC                     u2895:	
  3746  15CC  1003               	clrc
  3747  15CD  0DCB               	rlf	___aldiv@divisor^(0+128),f
  3748  15CE  0DCC               	rlf	(___aldiv@divisor+1)^(0+128),f
  3749  15CF  0DCD               	rlf	(___aldiv@divisor+2)^(0+128),f
  3750  15D0  0DCE               	rlf	(___aldiv@divisor+3)^(0+128),f
  3751  15D1  0BD3               	decfsz	??___aldiv^(0+128),f
  3752  15D2  2DCC               	goto	u2895
  3753  15D3  3001               	movlw	1
  3754  15D4  00D3               	movwf	??___aldiv^(0+128)
  3755  15D5  0853               	movf	??___aldiv^(0+128),w
  3756  15D6  07D4               	addwf	___aldiv@counter^(0+128),f
  3757  15D7  2DC8               	goto	l2552
  3758  15D8                     l2554:	
  3759  15D8  3001               	movlw	1
  3760  15D9  00D3               	movwf	??___aldiv^(0+128)
  3761  15DA                     u2915:	
  3762  15DA  1003               	clrc
  3763  15DB  0DD6               	rlf	___aldiv@quotient^(0+128),f
  3764  15DC  0DD7               	rlf	(___aldiv@quotient+1)^(0+128),f
  3765  15DD  0DD8               	rlf	(___aldiv@quotient+2)^(0+128),f
  3766  15DE  0DD9               	rlf	(___aldiv@quotient+3)^(0+128),f
  3767  15DF  0BD3               	decfsz	??___aldiv^(0+128),f
  3768  15E0  2DDA               	goto	u2915
  3769  15E1  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3770  15E2  0252               	subwf	(___aldiv@dividend+3)^(0+128),w
  3771  15E3  1D03               	skipz
  3772  15E4  2DEF               	goto	u2925
  3773  15E5  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3774  15E6  0251               	subwf	(___aldiv@dividend+2)^(0+128),w
  3775  15E7  1D03               	skipz
  3776  15E8  2DEF               	goto	u2925
  3777  15E9  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3778  15EA  0250               	subwf	(___aldiv@dividend+1)^(0+128),w
  3779  15EB  1D03               	skipz
  3780  15EC  2DEF               	goto	u2925
  3781  15ED  084B               	movf	___aldiv@divisor^(0+128),w
  3782  15EE  024F               	subwf	___aldiv@dividend^(0+128),w
  3783  15EF                     u2925:	
  3784  15EF  1C03               	skipc
  3785  15F0  2E00               	goto	l2562
  3786  15F1  084B               	movf	___aldiv@divisor^(0+128),w
  3787  15F2  02CF               	subwf	___aldiv@dividend^(0+128),f
  3788  15F3  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3789  15F4  1C03               	skipc
  3790  15F5  0F4C               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3791  15F6  02D0               	subwf	(___aldiv@dividend+1)^(0+128),f
  3792  15F7  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3793  15F8  1C03               	skipc
  3794  15F9  0F4D               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3795  15FA  02D1               	subwf	(___aldiv@dividend+2)^(0+128),f
  3796  15FB  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3797  15FC  1C03               	skipc
  3798  15FD  0F4E               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3799  15FE  02D2               	subwf	(___aldiv@dividend+3)^(0+128),f
  3800  15FF  1456               	bsf	___aldiv@quotient^(0+128),0
  3801  1600                     l2562:	
  3802  1600  3001               	movlw	1
  3803  1601                     u2935:	
  3804  1601  1003               	clrc
  3805  1602  0CCE               	rrf	(___aldiv@divisor+3)^(0+128),f
  3806  1603  0CCD               	rrf	(___aldiv@divisor+2)^(0+128),f
  3807  1604  0CCC               	rrf	(___aldiv@divisor+1)^(0+128),f
  3808  1605  0CCB               	rrf	___aldiv@divisor^(0+128),f
  3809  1606  3EFF               	addlw	-1
  3810  1607  1D03               	skipz
  3811  1608  2E01               	goto	u2935
  3812  1609  3001               	movlw	1
  3813  160A  02D4               	subwf	___aldiv@counter^(0+128),f
  3814  160B  1D03               	btfss	3,2
  3815  160C  2DD8               	goto	l2554
  3816  160D                     l2566:	
  3817  160D  0855               	movf	___aldiv@sign^(0+128),w
  3818  160E  1903               	btfsc	3,2
  3819  160F  2E1B               	goto	l2570
  3820  1610  09D6               	comf	___aldiv@quotient^(0+128),f
  3821  1611  09D7               	comf	(___aldiv@quotient+1)^(0+128),f
  3822  1612  09D8               	comf	(___aldiv@quotient+2)^(0+128),f
  3823  1613  09D9               	comf	(___aldiv@quotient+3)^(0+128),f
  3824  1614  0AD6               	incf	___aldiv@quotient^(0+128),f
  3825  1615  1903               	skipnz
  3826  1616  0AD7               	incf	(___aldiv@quotient+1)^(0+128),f
  3827  1617  1903               	skipnz
  3828  1618  0AD8               	incf	(___aldiv@quotient+2)^(0+128),f
  3829  1619  1903               	skipnz
  3830  161A  0AD9               	incf	(___aldiv@quotient+3)^(0+128),f
  3831  161B                     l2570:	
  3832  161B  0859               	movf	(___aldiv@quotient+3)^(0+128),w
  3833  161C  00CE               	movwf	(?___aldiv+3)^(0+128)
  3834  161D  0858               	movf	(___aldiv@quotient+2)^(0+128),w
  3835  161E  00CD               	movwf	(?___aldiv+2)^(0+128)
  3836  161F  0857               	movf	(___aldiv@quotient+1)^(0+128),w
  3837  1620  00CC               	movwf	(?___aldiv+1)^(0+128)
  3838  1621  0856               	movf	___aldiv@quotient^(0+128),w
  3839  1622  00CB               	movwf	?___aldiv^(0+128)
  3840  1623  0008               	return
  3841  1624                     __end_of___aldiv:	
  3842                           
  3843                           	psect	text10
  3844  0801                     __ptext10:	
  3845 ;; *************** function _TIMER0_Set *****************
  3846 ;; Defined at:
  3847 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  contagens       1    wreg     unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  contagens       1    4[BANK1 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;		None               void
  3854 ;; Registers used:
  3855 ;;		wreg
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       1       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       1       0       0
  3865 ;;Total ram usage:        1 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _TIMER0_Set
  3877  0801                     _TIMER0_Set:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _TIMER0_Set: [wreg]
  3881                           ;TIMER0_Set@contagens stored from wreg
  3882  0801  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0802  1303               	bcf	3,6	;RP1=0, select bank1
  3884  0803  00CB               	movwf	TIMER0_Set@contagens^(0+128)
  3885                           
  3886                           ;timers.c: 22: TMR0 = contagens;
  3887  0804  084B               	movf	TIMER0_Set@contagens^(0+128),w
  3888  0805  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0806  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0807  0081               	movwf	1	;volatile
  3891  0808  0008               	return
  3892  0809                     __end_of_TIMER0_Set:	
  3893                           
  3894                           	psect	text11
  3895  10D9                     __ptext11:	
  3896 ;; *************** function _TIMER0_Init *****************
  3897 ;; Defined at:
  3898 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		None
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    5
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _TIMER0_Init
  3928  10D9                     _TIMER0_Init:	
  3929                           
  3930                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _TIMER0_Init: []
  3934  10D9  1683               	bsf	3,5	;RP0=1, select bank1
  3935  10DA  1303               	bcf	3,6	;RP1=0, select bank1
  3936  10DB  1281               	bcf	1,5	;volatile
  3937                           
  3938                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3939  10DC  1201               	bcf	1,4	;volatile
  3940                           
  3941                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3942  10DD  1181               	bcf	1,3	;volatile
  3943                           
  3944                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3945  10DE  1501               	bsf	1,2	;volatile
  3946                           
  3947                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3948  10DF  1481               	bsf	1,1	;volatile
  3949                           
  3950                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3951  10E0  1401               	bsf	1,0	;volatile
  3952                           
  3953                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3954  10E1  110B               	bcf	11,2	;volatile
  3955                           
  3956                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3957  10E2  168B               	bsf	11,5	;volatile
  3958  10E3  0008               	return
  3959  10E4                     __end_of_TIMER0_Init:	
  3960                           
  3961                           	psect	text12
  3962  1251                     __ptext12:	
  3963 ;; *************** function _PWM_Init *****************
  3964 ;; Defined at:
  3965 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;		None               void
  3972 ;; Registers used:
  3973 ;;		wreg
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3979 ;;      Params:         0       0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0
  3982 ;;      Totals:         0       0       0       0       0
  3983 ;;Total ram usage:        0 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    5
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _PWM_Init
  3995  1251                     _PWM_Init:	
  3996                           
  3997                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3998                           
  3999                           ;incstack = 0
  4000                           ; Regs used in _PWM_Init: [wreg]
  4001  1251  1283               	bcf	3,5	;RP0=0, select bank0
  4002  1252  1303               	bcf	3,6	;RP1=0, select bank0
  4003  1253  1492               	bsf	18,1	;volatile
  4004                           
  4005                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  4006  1254  1012               	bcf	18,0	;volatile
  4007                           
  4008                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  4009  1255  1312               	bcf	18,6	;volatile
  4010                           
  4011                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  4012  1256  1292               	bcf	18,5	;volatile
  4013                           
  4014                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  4015  1257  1212               	bcf	18,4	;volatile
  4016                           
  4017                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  4018  1258  1192               	bcf	18,3	;volatile
  4019                           
  4020                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  4021  1259  1512               	bsf	18,2	;volatile
  4022                           
  4023                           ;pwm.c: 27: PR2 = 255;
  4024  125A  30FF               	movlw	255
  4025  125B  1683               	bsf	3,5	;RP0=1, select bank1
  4026  125C  1303               	bcf	3,6	;RP1=0, select bank1
  4027  125D  0092               	movwf	18	;volatile
  4028                           
  4029                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  4030  125E  1283               	bcf	3,5	;RP0=0, select bank0
  4031  125F  1303               	bcf	3,6	;RP1=0, select bank0
  4032  1260  1597               	bsf	23,3	;volatile
  4033                           
  4034                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  4035  1261  1517               	bsf	23,2	;volatile
  4036                           
  4037                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  4038  1262  1497               	bsf	23,1	;volatile
  4039                           
  4040                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  4041  1263  1417               	bsf	23,0	;volatile
  4042                           
  4043                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  4044  1264  1683               	bsf	3,5	;RP0=1, select bank1
  4045  1265  1303               	bcf	3,6	;RP1=0, select bank1
  4046  1266  150C               	bsf	12,2	;volatile
  4047                           
  4048                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  4049  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4050  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4051  1269  110C               	bcf	12,2	;volatile
  4052                           
  4053                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  4054  126A  159D               	bsf	29,3	;volatile
  4055                           
  4056                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  4057  126B  151D               	bsf	29,2	;volatile
  4058                           
  4059                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  4060  126C  149D               	bsf	29,1	;volatile
  4061                           
  4062                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  4063  126D  141D               	bsf	29,0	;volatile
  4064                           
  4065                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  4066  126E  1683               	bsf	3,5	;RP0=1, select bank1
  4067  126F  1303               	bcf	3,6	;RP1=0, select bank1
  4068  1270  140D               	bsf	13,0	;volatile
  4069                           
  4070                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  4071  1271  1283               	bcf	3,5	;RP0=0, select bank0
  4072  1272  1303               	bcf	3,6	;RP1=0, select bank0
  4073  1273  100D               	bcf	13,0	;volatile
  4074  1274  0008               	return
  4075  1275                     __end_of_PWM_Init:	
  4076                           
  4077                           	psect	text13
  4078  11EA                     __ptext13:	
  4079 ;; *************** function _PWM_DutyCycle2 *****************
  4080 ;; Defined at:
  4081 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  valor           2    4[BANK1 ] int 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       2       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       2       0       0
  4098 ;;      Totals:         0       0       4       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    5
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _PWM_DutyCycle2
  4111  11EA                     _PWM_DutyCycle2:	
  4112                           
  4113                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  4117  11EA  1683               	bsf	3,5	;RP0=1, select bank1
  4118  11EB  1303               	bcf	3,6	;RP1=0, select bank1
  4119  11EC  084C               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  4120  11ED  00CE               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  4121  11EE  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4122  11EF  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4123  11F0  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4124  11F1  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4125  11F2  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4126  11F3  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4127  11F4  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4128  11F5  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4129  11F6  084D               	movf	??_PWM_DutyCycle2^(0+128),w
  4130  11F7  1283               	bcf	3,5	;RP0=0, select bank0
  4131  11F8  1303               	bcf	3,6	;RP1=0, select bank0
  4132  11F9  009B               	movwf	27	;volatile
  4133                           
  4134                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4135  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  4136  11FB  1303               	bcf	3,6	;RP1=0, select bank1
  4137  11FC  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4138  11FD  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4139  11FE  3003               	movlw	3
  4140  11FF                     u3595:	
  4141  11FF  1003               	clrc
  4142  1200  0DCD               	rlf	??_PWM_DutyCycle2^(0+128),f
  4143  1201  3EFF               	addlw	-1
  4144  1202  1D03               	skipz
  4145  1203  29FF               	goto	u3595
  4146  1204  1003               	clrc
  4147  1205  0D4D               	rlf	??_PWM_DutyCycle2^(0+128),w
  4148  1206  380C               	iorlw	12
  4149  1207  1283               	bcf	3,5	;RP0=0, select bank0
  4150  1208  1303               	bcf	3,6	;RP1=0, select bank0
  4151  1209  009D               	movwf	29	;volatile
  4152  120A  0008               	return
  4153  120B                     __end_of_PWM_DutyCycle2:	
  4154                           
  4155                           	psect	text14
  4156  11C9                     __ptext14:	
  4157 ;; *************** function _PWM_DutyCycle1 *****************
  4158 ;; Defined at:
  4159 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  valor           2    4[BANK1 ] int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       2       0       0
  4174 ;;      Locals:         0       0       0       0       0
  4175 ;;      Temps:          0       0       2       0       0
  4176 ;;      Totals:         0       0       4       0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    5
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _PWM_DutyCycle1
  4189  11C9                     _PWM_DutyCycle1:	
  4190                           
  4191                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4195  11C9  1683               	bsf	3,5	;RP0=1, select bank1
  4196  11CA  1303               	bcf	3,6	;RP1=0, select bank1
  4197  11CB  084C               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4198  11CC  00CE               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4199  11CD  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4200  11CE  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4201  11CF  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4202  11D0  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4203  11D1  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4204  11D2  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4205  11D3  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4206  11D4  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4207  11D5  084D               	movf	??_PWM_DutyCycle1^(0+128),w
  4208  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  4209  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  4210  11D8  0095               	movwf	21	;volatile
  4211                           
  4212                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4213  11D9  1683               	bsf	3,5	;RP0=1, select bank1
  4214  11DA  1303               	bcf	3,6	;RP1=0, select bank1
  4215  11DB  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4216  11DC  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4217  11DD  3003               	movlw	3
  4218  11DE                     u3655:	
  4219  11DE  1003               	clrc
  4220  11DF  0DCD               	rlf	??_PWM_DutyCycle1^(0+128),f
  4221  11E0  3EFF               	addlw	-1
  4222  11E1  1D03               	skipz
  4223  11E2  29DE               	goto	u3655
  4224  11E3  1003               	clrc
  4225  11E4  0D4D               	rlf	??_PWM_DutyCycle1^(0+128),w
  4226  11E5  380C               	iorlw	12
  4227  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  4228  11E7  1303               	bcf	3,6	;RP1=0, select bank0
  4229  11E8  0097               	movwf	23	;volatile
  4230  11E9  0008               	return
  4231  11EA                     __end_of_PWM_DutyCycle1:	
  4232                           
  4233                           	psect	text15
  4234  12C3                     __ptext15:	
  4235 ;; *************** function _LCD_WriteString *****************
  4236 ;; Defined at:
  4237 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4240 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4241 ;;		 -> STR_13(17), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         0       0       2       0       0
  4254 ;;      Locals:         0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0
  4256 ;;      Totals:         0       0       2       0       0
  4257 ;;Total ram usage:        2 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    6
  4260 ;; This function calls:
  4261 ;;		_LCD_WriteData
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _LCD_WriteString
  4269  12C3                     _LCD_WriteString:	
  4270  12C3                     l3014:	
  4271                           ;lcd.c: 63: while(*Str != '\0')
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4275                           
  4276  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  4277  12C4  1303               	bcf	3,6	;RP1=0, select bank1
  4278  12C5  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4279  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  4280  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  4281  12C8  00FF               	movwf	127
  4282  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  4283  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  4284  12CB  084D               	movf	LCD_WriteString@Str^(0+128),w
  4285  12CC  0084               	movwf	4
  4286  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  4287  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  4288  12CF  160A  158A  2000  160A  118A  	fcall	stringtab
  4289  12D4  3800               	iorlw	0
  4290  12D5  1903               	btfsc	3,2
  4291  12D6  0008               	return
  4292                           
  4293                           ;lcd.c: 64: {
  4294                           ;lcd.c: 65: LCD_WriteData(*Str);
  4295  12D7  1683               	bsf	3,5	;RP0=1, select bank1
  4296  12D8  1303               	bcf	3,6	;RP1=0, select bank1
  4297  12D9  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4298  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  4299  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  4300  12DC  00FF               	movwf	127
  4301  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  4302  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  4303  12DF  084D               	movf	LCD_WriteString@Str^(0+128),w
  4304  12E0  0084               	movwf	4
  4305  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  4306  12E2  1303               	bcf	3,6	;RP1=0, select bank0
  4307  12E3  160A  158A  2000  160A  118A  	fcall	stringtab
  4308  12E8  160A  118A  213E  160A  118A  	fcall	_LCD_WriteData
  4309                           
  4310                           ;lcd.c: 66: Str++;
  4311  12ED  3001               	movlw	1
  4312  12EE  1683               	bsf	3,5	;RP0=1, select bank1
  4313  12EF  1303               	bcf	3,6	;RP1=0, select bank1
  4314  12F0  07CD               	addwf	LCD_WriteString@Str^(0+128),f
  4315  12F1  1803               	skipnc
  4316  12F2  0ACE               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4317  12F3  2AC3               	goto	l3014
  4318  12F4                     __end_of_LCD_WriteString:	
  4319                           
  4320                           	psect	text16
  4321  113E                     __ptext16:	
  4322 ;; *************** function _LCD_WriteData *****************
  4323 ;; Defined at:
  4324 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  Byte            1    wreg     unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  Byte            1    5[BANK1 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;		None               void
  4331 ;; Registers used:
  4332 ;;		wreg
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       0       1       0       0
  4340 ;;      Temps:          0       0       1       0       0
  4341 ;;      Totals:         0       0       2       0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    5
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_LCD_WriteString
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _LCD_WriteData
  4354  113E                     _LCD_WriteData:	
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _LCD_WriteData: [wreg]
  4358                           ;LCD_WriteData@Byte stored from wreg
  4359  113E  1683               	bsf	3,5	;RP0=1, select bank1
  4360  113F  1303               	bcf	3,6	;RP1=0, select bank1
  4361  1140  00CC               	movwf	LCD_WriteData@Byte^(0+128)
  4362                           
  4363                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4364  1141  1283               	bcf	3,5	;RP0=0, select bank0
  4365  1142  1303               	bcf	3,6	;RP1=0, select bank0
  4366  1143  1409               	bsf	9,0	;volatile
  4367                           
  4368                           ;lcd.c: 51: PORTD = Byte;
  4369  1144  1683               	bsf	3,5	;RP0=1, select bank1
  4370  1145  1303               	bcf	3,6	;RP1=0, select bank1
  4371  1146  084C               	movf	LCD_WriteData@Byte^(0+128),w
  4372  1147  1283               	bcf	3,5	;RP0=0, select bank0
  4373  1148  1303               	bcf	3,6	;RP1=0, select bank0
  4374  1149  0088               	movwf	8	;volatile
  4375                           
  4376                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4377  114A  1489               	bsf	9,1	;volatile
  4378                           
  4379                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4380  114B  303D               	movlw	61
  4381  114C  1683               	bsf	3,5	;RP0=1, select bank1
  4382  114D  1303               	bcf	3,6	;RP1=0, select bank1
  4383  114E  00CB               	movwf	??_LCD_WriteData^(0+128)
  4384  114F                     u4547:	
  4385  114F  0BCB               	decfsz	??_LCD_WriteData^(0+128),f
  4386  1150  294F               	goto	u4547
  4387                           
  4388                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4389  1151  1283               	bcf	3,5	;RP0=0, select bank0
  4390  1152  1303               	bcf	3,6	;RP1=0, select bank0
  4391  1153  1089               	bcf	9,1	;volatile
  4392  1154  0008               	return
  4393  1155                     __end_of_LCD_WriteData:	
  4394                           
  4395                           	psect	text17
  4396  149E                     __ptext17:	
  4397 ;; *************** function _LCD_Init *****************
  4398 ;; Defined at:
  4399 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       2       0       0
  4416 ;;      Totals:         0       0       2       0       0
  4417 ;;Total ram usage:        2 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    6
  4420 ;; This function calls:
  4421 ;;		_LCD_WriteCmd
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _LCD_Init
  4429  149E                     _LCD_Init:	
  4430                           
  4431                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4435  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4436  149F  1303               	bcf	3,6	;RP1=0, select bank1
  4437  14A0  119F               	bcf	31,3	;volatile
  4438                           
  4439                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4440  14A1  151F               	bsf	31,2	;volatile
  4441                           
  4442                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4443  14A2  109F               	bcf	31,1	;volatile
  4444                           
  4445                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4446  14A3  101F               	bcf	31,0	;volatile
  4447                           
  4448                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4449  14A4  305A               	movlw	90
  4450  14A5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4451  14A6  30C3               	movlw	195
  4452  14A7  00CD               	movwf	??_LCD_Init^(0+128)
  4453  14A8                     u4557:	
  4454  14A8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4455  14A9  2CA8               	goto	u4557
  4456  14AA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4457  14AB  2CA8               	goto	u4557
  4458                           
  4459                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4460  14AC  3030               	movlw	48
  4461  14AD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4462                           
  4463                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4464  14B2  3018               	movlw	24
  4465  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  4466  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  4467  14B5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4468  14B6  30EF               	movlw	239
  4469  14B7  00CD               	movwf	??_LCD_Init^(0+128)
  4470  14B8                     u4567:	
  4471  14B8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4472  14B9  2CB8               	goto	u4567
  4473  14BA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4474  14BB  2CB8               	goto	u4567
  4475                           
  4476                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4477  14BC  3030               	movlw	48
  4478  14BD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4479                           
  4480                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4481  14C2  3099               	movlw	153
  4482  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  4483  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  4484  14C5  00CD               	movwf	??_LCD_Init^(0+128)
  4485  14C6                     u4577:	
  4486  14C6  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4487  14C7  2CC6               	goto	u4577
  4488                           
  4489                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4490  14C8  3030               	movlw	48
  4491  14C9  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4492                           
  4493                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4494  14CE  303D               	movlw	61
  4495  14CF  1683               	bsf	3,5	;RP0=1, select bank1
  4496  14D0  1303               	bcf	3,6	;RP1=0, select bank1
  4497  14D1  00CD               	movwf	??_LCD_Init^(0+128)
  4498  14D2                     u4587:	
  4499  14D2  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4500  14D3  2CD2               	goto	u4587
  4501                           
  4502                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4503  14D4  3038               	movlw	56
  4504  14D5  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4505                           
  4506                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4507  14DA  303D               	movlw	61
  4508  14DB  1683               	bsf	3,5	;RP0=1, select bank1
  4509  14DC  1303               	bcf	3,6	;RP1=0, select bank1
  4510  14DD  00CD               	movwf	??_LCD_Init^(0+128)
  4511  14DE                     u4597:	
  4512  14DE  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4513  14DF  2CDE               	goto	u4597
  4514                           
  4515                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4516  14E0  3001               	movlw	1
  4517  14E1  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4518                           
  4519                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4520  14E6  300C               	movlw	12
  4521  14E7  1683               	bsf	3,5	;RP0=1, select bank1
  4522  14E8  1303               	bcf	3,6	;RP1=0, select bank1
  4523  14E9  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4524  14EA  30F7               	movlw	247
  4525  14EB  00CD               	movwf	??_LCD_Init^(0+128)
  4526  14EC                     u4607:	
  4527  14EC  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4528  14ED  2CEC               	goto	u4607
  4529  14EE  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4530  14EF  2CEC               	goto	u4607
  4531                           
  4532                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4533  14F0  300C               	movlw	12
  4534  14F1  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4535                           
  4536                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4537  14F6  303D               	movlw	61
  4538  14F7  1683               	bsf	3,5	;RP0=1, select bank1
  4539  14F8  1303               	bcf	3,6	;RP1=0, select bank1
  4540  14F9  00CD               	movwf	??_LCD_Init^(0+128)
  4541  14FA                     u4617:	
  4542  14FA  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4543  14FB  2CFA               	goto	u4617
  4544                           
  4545                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4546  14FC  3006               	movlw	6
  4547  14FD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4548                           
  4549                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4550  1502  303D               	movlw	61
  4551  1503  1683               	bsf	3,5	;RP0=1, select bank1
  4552  1504  1303               	bcf	3,6	;RP1=0, select bank1
  4553  1505  00CD               	movwf	??_LCD_Init^(0+128)
  4554  1506                     u4627:	
  4555  1506  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4556  1507  2D06               	goto	u4627
  4557  1508  0008               	return
  4558  1509                     __end_of_LCD_Init:	
  4559                           
  4560                           	psect	text18
  4561  11A9                     __ptext18:	
  4562 ;; *************** function _LCD_Cursor *****************
  4563 ;; Defined at:
  4564 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  Row             1    wreg     unsigned char 
  4567 ;;  Col             1    4[BANK1 ] unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  Row             1    6[BANK1 ] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;		None               void
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       1       0       0
  4580 ;;      Locals:         0       0       1       0       0
  4581 ;;      Temps:          0       0       1       0       0
  4582 ;;      Totals:         0       0       3       0       0
  4583 ;;Total ram usage:        3 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    5
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _LCD_Cursor
  4595  11A9                     _LCD_Cursor:	
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4599                           ;LCD_Cursor@Row stored from wreg
  4600  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  4601  11AA  1303               	bcf	3,6	;RP1=0, select bank1
  4602  11AB  00CD               	movwf	LCD_Cursor@Row^(0+128)
  4603                           
  4604                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4605  11AC  1283               	bcf	3,5	;RP0=0, select bank0
  4606  11AD  1303               	bcf	3,6	;RP1=0, select bank0
  4607  11AE  1009               	bcf	9,0	;volatile
  4608                           
  4609                           ;lcd.c: 14: if (Row == 0)
  4610  11AF  1683               	bsf	3,5	;RP0=1, select bank1
  4611  11B0  1303               	bcf	3,6	;RP1=0, select bank1
  4612  11B1  08CD               	movf	LCD_Cursor@Row^(0+128),f
  4613  11B2  1D03               	skipz
  4614  11B3  29B7               	goto	l3000
  4615                           
  4616                           ;lcd.c: 15: {
  4617                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4618  11B4  084B               	movf	LCD_Cursor@Col^(0+128),w
  4619  11B5  3E80               	addlw	128
  4620  11B6  29BB               	goto	L2
  4621  11B7                     l3000:	
  4622                           ;lcd.c: 17: }
  4623                           
  4624                           
  4625                           ;lcd.c: 18: else
  4626                           ;lcd.c: 19: {
  4627                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4628  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  4629  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  4630  11B9  084B               	movf	LCD_Cursor@Col^(0+128),w
  4631  11BA  3EC0               	addlw	192
  4632  11BB                     L2:	
  4633  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  4634  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  4635  11BD  0088               	movwf	8	;volatile
  4636                           
  4637                           ;lcd.c: 21: }
  4638                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4639  11BE  1489               	bsf	9,1	;volatile
  4640                           
  4641                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4642  11BF  303D               	movlw	61
  4643  11C0  1683               	bsf	3,5	;RP0=1, select bank1
  4644  11C1  1303               	bcf	3,6	;RP1=0, select bank1
  4645  11C2  00CC               	movwf	??_LCD_Cursor^(0+128)
  4646  11C3                     u4637:	
  4647  11C3  0BCC               	decfsz	??_LCD_Cursor^(0+128),f
  4648  11C4  29C3               	goto	u4637
  4649                           
  4650                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4651  11C5  1283               	bcf	3,5	;RP0=0, select bank0
  4652  11C6  1303               	bcf	3,6	;RP1=0, select bank0
  4653  11C7  1089               	bcf	9,1	;volatile
  4654  11C8  0008               	return
  4655  11C9                     __end_of_LCD_Cursor:	
  4656                           
  4657                           	psect	text19
  4658  129A                     __ptext19:	
  4659 ;; *************** function _LCD_Clear *****************
  4660 ;; Defined at:
  4661 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;		None               void
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0
  4677 ;;      Temps:          0       0       2       0       0
  4678 ;;      Totals:         0       0       2       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    6
  4682 ;; This function calls:
  4683 ;;		_LCD_WriteCmd
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _LCD_Clear
  4691  129A                     _LCD_Clear:	
  4692                           
  4693                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4697  129A  3001               	movlw	1
  4698  129B  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4699                           
  4700                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4701  12A0  300C               	movlw	12
  4702  12A1  1683               	bsf	3,5	;RP0=1, select bank1
  4703  12A2  1303               	bcf	3,6	;RP1=0, select bank1
  4704  12A3  00CE               	movwf	(??_LCD_Clear^(0+128)+1)
  4705  12A4  30F7               	movlw	247
  4706  12A5  00CD               	movwf	??_LCD_Clear^(0+128)
  4707  12A6                     u4647:	
  4708  12A6  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4709  12A7  2AA6               	goto	u4647
  4710  12A8  0BCE               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4711  12A9  2AA6               	goto	u4647
  4712                           
  4713                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4714  12AA  300C               	movlw	12
  4715  12AB  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4716                           
  4717                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4718  12B0  303D               	movlw	61
  4719  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  4720  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  4721  12B3  00CD               	movwf	??_LCD_Clear^(0+128)
  4722  12B4                     u4657:	
  4723  12B4  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4724  12B5  2AB4               	goto	u4657
  4725                           
  4726                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4727  12B6  3006               	movlw	6
  4728  12B7  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4729                           
  4730                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4731  12BC  303D               	movlw	61
  4732  12BD  1683               	bsf	3,5	;RP0=1, select bank1
  4733  12BE  1303               	bcf	3,6	;RP1=0, select bank1
  4734  12BF  00CD               	movwf	??_LCD_Clear^(0+128)
  4735  12C0                     u4667:	
  4736  12C0  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4737  12C1  2AC0               	goto	u4667
  4738  12C2  0008               	return
  4739  12C3                     __end_of_LCD_Clear:	
  4740                           
  4741                           	psect	text20
  4742  1127                     __ptext20:	
  4743 ;; *************** function _LCD_WriteCmd *****************
  4744 ;; Defined at:
  4745 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  Byte            1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  Byte            1    5[BANK1 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		wreg
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         0       0       0       0       0
  4760 ;;      Locals:         0       0       1       0       0
  4761 ;;      Temps:          0       0       1       0       0
  4762 ;;      Totals:         0       0       2       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    5
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_LCD_Clear
  4770 ;;		_LCD_Init
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _LCD_WriteCmd
  4776  1127                     _LCD_WriteCmd:	
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _LCD_WriteCmd: [wreg]
  4780                           ;LCD_WriteCmd@Byte stored from wreg
  4781  1127  1683               	bsf	3,5	;RP0=1, select bank1
  4782  1128  1303               	bcf	3,6	;RP1=0, select bank1
  4783  1129  00CC               	movwf	LCD_WriteCmd@Byte^(0+128)
  4784                           
  4785                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4786  112A  1283               	bcf	3,5	;RP0=0, select bank0
  4787  112B  1303               	bcf	3,6	;RP1=0, select bank0
  4788  112C  1009               	bcf	9,0	;volatile
  4789                           
  4790                           ;lcd.c: 36: PORTD = Byte;
  4791  112D  1683               	bsf	3,5	;RP0=1, select bank1
  4792  112E  1303               	bcf	3,6	;RP1=0, select bank1
  4793  112F  084C               	movf	LCD_WriteCmd@Byte^(0+128),w
  4794  1130  1283               	bcf	3,5	;RP0=0, select bank0
  4795  1131  1303               	bcf	3,6	;RP1=0, select bank0
  4796  1132  0088               	movwf	8	;volatile
  4797                           
  4798                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4799  1133  1489               	bsf	9,1	;volatile
  4800                           
  4801                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4802  1134  303D               	movlw	61
  4803  1135  1683               	bsf	3,5	;RP0=1, select bank1
  4804  1136  1303               	bcf	3,6	;RP1=0, select bank1
  4805  1137  00CB               	movwf	??_LCD_WriteCmd^(0+128)
  4806  1138                     u4677:	
  4807  1138  0BCB               	decfsz	??_LCD_WriteCmd^(0+128),f
  4808  1139  2938               	goto	u4677
  4809                           
  4810                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4811  113A  1283               	bcf	3,5	;RP0=0, select bank0
  4812  113B  1303               	bcf	3,6	;RP1=0, select bank0
  4813  113C  1089               	bcf	9,1	;volatile
  4814  113D  0008               	return
  4815  113E                     __end_of_LCD_WriteCmd:	
  4816                           
  4817                           	psect	text21
  4818  1101                     __ptext21:	
  4819 ;; *************** function _ADC_Init *****************
  4820 ;; Defined at:
  4821 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		None
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4835 ;;      Params:         0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    5
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _ADC_Init
  4851  1101                     _ADC_Init:	
  4852                           
  4853                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _ADC_Init: []
  4857  1101  1683               	bsf	3,5	;RP0=1, select bank1
  4858  1102  1303               	bcf	3,6	;RP1=0, select bank1
  4859  1103  179F               	bsf	31,7	;volatile
  4860                           
  4861                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4862  1104  159F               	bsf	31,3	;volatile
  4863                           
  4864                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4865  1105  151F               	bsf	31,2	;volatile
  4866                           
  4867                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4868  1106  149F               	bsf	31,1	;volatile
  4869                           
  4870                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4871  1107  101F               	bcf	31,0	;volatile
  4872                           
  4873                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4874  1108  1283               	bcf	3,5	;RP0=0, select bank0
  4875  1109  1303               	bcf	3,6	;RP1=0, select bank0
  4876  110A  179F               	bsf	31,7	;volatile
  4877                           
  4878                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4879  110B  131F               	bcf	31,6	;volatile
  4880                           
  4881                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4882  110C  1683               	bsf	3,5	;RP0=1, select bank1
  4883  110D  1303               	bcf	3,6	;RP1=0, select bank1
  4884  110E  130C               	bcf	12,6	;volatile
  4885                           
  4886                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4887  110F  1283               	bcf	3,5	;RP0=0, select bank0
  4888  1110  1303               	bcf	3,6	;RP1=0, select bank0
  4889  1111  130C               	bcf	12,6	;volatile
  4890  1112  0008               	return
  4891  1113                     __end_of_ADC_Init:	
  4892                           
  4893                           	psect	text22
  4894  0BC2                     __ptext22:	
  4895 ;; *************** function _ISR *****************
  4896 ;; Defined at:
  4897 ;;		line 304 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0
  4913 ;;      Temps:          0       0       4       0       0
  4914 ;;      Totals:         0       0       4       0       0
  4915 ;;Total ram usage:        4 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		_Fuzzy
  4920 ;;		_USART_ReceiveChar
  4921 ;;		___lwtoft
  4922 ;;		i1_PWM_DutyCycle2
  4923 ;;		i1_TIMER0_Set
  4924 ;;		i1_USART_WriteString
  4925 ;;		i1___lwdiv
  4926 ;;		i1___wmul
  4927 ;; This function is called by:
  4928 ;;		Interrupt level 1
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _ISR
  4934  0BC2                     _ISR:	
  4935                           
  4936                           ;main.c: 307: if (PIR1bits.RCIF)
  4937  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0BC4  1E8C               	btfss	12,5	;volatile
  4940  0BC5  2CED               	goto	i1l3266
  4941                           
  4942                           ;main.c: 308: {
  4943                           ;main.c: 309: if (USART_ReceiveChar() == '0')
  4944  0BC6  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  4945  0BCB  3A30               	xorlw	48
  4946  0BCC  1D03               	skipz
  4947  0BCD  2BE7               	goto	i1l3196
  4948                           
  4949                           ;main.c: 310: {
  4950                           ;main.c: 311: USART_WriteString("\n\rdesligado\n\r");
  4951  0BCE  30EA               	movlw	low (STR_1| (0+32768))
  4952  0BCF  00F1               	movwf	i1USART_WriteString@str
  4953  0BD0  3098               	movlw	high (STR_1| (0+32768))
  4954  0BD1  00F2               	movwf	i1USART_WriteString@str+1
  4955  0BD2  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  4956                           
  4957                           ;main.c: 312: pwm = 0;
  4958  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  4960  0BD9  01C3               	clrf	_pwm^(0+128)
  4961  0BDA  01C4               	clrf	(_pwm+1)^(0+128)
  4962                           
  4963                           ;main.c: 313: PWM_DutyCycle2(pwm);
  4964  0BDB  0844               	movf	(_pwm+1)^(0+128),w
  4965  0BDC  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4966  0BDD  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4967  0BDE  0843               	movf	_pwm^(0+128),w
  4968  0BDF  01F0               	clrf	i1PWM_DutyCycle2@valor
  4969  0BE0  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4970  0BE1  160A  118A  2155  120A  158A  	fcall	i1_PWM_DutyCycle2
  4971                           
  4972                           ;main.c: 314: return;
  4973  0BE6  2D4E               	goto	i1l180
  4974  0BE7                     i1l3196:	
  4975                           
  4976                           ;main.c: 315: }
  4977                           ;main.c: 317: if (USART_ReceiveChar() == '1')
  4978  0BE7  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  4979  0BEC  3A31               	xorlw	49
  4980  0BED  1D03               	skipz
  4981  0BEE  2BFE               	goto	i1l3202
  4982                           
  4983                           ;main.c: 318: {
  4984                           ;main.c: 319: USART_WriteString("\n\rpwm = 32\n\r");
  4985  0BEF  30F8               	movlw	low (STR_2| (0+32768))
  4986  0BF0  00F1               	movwf	i1USART_WriteString@str
  4987  0BF1  3098               	movlw	high (STR_2| (0+32768))
  4988  0BF2  00F2               	movwf	i1USART_WriteString@str+1
  4989  0BF3  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  4990                           
  4991                           ;main.c: 320: pwm = 32;
  4992  0BF8  3020               	movlw	32
  4993  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  4994  0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0BFB  00C3               	movwf	_pwm^(0+128)
  4996  0BFC  3000               	movlw	0
  4997  0BFD  00C4               	movwf	(_pwm^(0+128)+1)
  4998  0BFE                     i1l3202:	
  4999                           
  5000                           ;main.c: 322: }
  5001                           ;main.c: 324: if (USART_ReceiveChar() == '2')
  5002  0BFE  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5003  0C03  3A32               	xorlw	50
  5004  0C04  1D03               	skipz
  5005  0C05  2C15               	goto	i1l3208
  5006                           
  5007                           ;main.c: 325: {
  5008                           ;main.c: 326: USART_WriteString("\n\rpwm = 64\n\r");
  5009  0C06  3005               	movlw	low (STR_3| (0+32768))
  5010  0C07  00F1               	movwf	i1USART_WriteString@str
  5011  0C08  3099               	movlw	high (STR_3| (0+32768))
  5012  0C09  00F2               	movwf	i1USART_WriteString@str+1
  5013  0C0A  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5014                           
  5015                           ;main.c: 327: pwm = 64;
  5016  0C0F  3040               	movlw	64
  5017  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0C12  00C3               	movwf	_pwm^(0+128)
  5020  0C13  3000               	movlw	0
  5021  0C14  00C4               	movwf	(_pwm^(0+128)+1)
  5022  0C15                     i1l3208:	
  5023                           
  5024                           ;main.c: 329: }
  5025                           ;main.c: 331: if (USART_ReceiveChar() == '3')
  5026  0C15  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5027  0C1A  3A33               	xorlw	51
  5028  0C1B  1D03               	skipz
  5029  0C1C  2C33               	goto	i1l3218
  5030                           
  5031                           ;main.c: 332: {
  5032                           ;main.c: 333: USART_WriteString("\n\rpwm = 128\n\r");
  5033  0C1D  30CE               	movlw	low (STR_4| (0+32768))
  5034  0C1E  00F1               	movwf	i1USART_WriteString@str
  5035  0C1F  3098               	movlw	high (STR_4| (0+32768))
  5036  0C20  00F2               	movwf	i1USART_WriteString@str+1
  5037  0C21  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5038                           
  5039                           ;main.c: 334: pwm = 128;
  5040  0C26  3080               	movlw	128
  5041  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0C29  00C3               	movwf	_pwm^(0+128)
  5044  0C2A  3000               	movlw	0
  5045  0C2B  00C4               	movwf	(_pwm^(0+128)+1)
  5046                           
  5047                           ;main.c: 336: if(PORTBbits.RB0 == 0)
  5048  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0C2E  1806               	btfsc	6,0	;volatile
  5051  0C2F  2C32               	goto	i1l184
  5052                           
  5053                           ;main.c: 337: {
  5054                           ;main.c: 338: PORTBbits.RB0 = 1;
  5055  0C30  1406               	bsf	6,0	;volatile
  5056                           
  5057                           ;main.c: 339: }else{
  5058  0C31  2C33               	goto	i1l3218
  5059  0C32                     i1l184:	
  5060                           
  5061                           ;main.c: 340: PORTBbits.RB0 = 0;
  5062  0C32  1006               	bcf	6,0	;volatile
  5063  0C33                     i1l3218:	
  5064                           
  5065                           ;main.c: 341: }
  5066                           ;main.c: 342: }
  5067                           ;main.c: 344: if (USART_ReceiveChar() == '4')
  5068  0C33  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5069  0C38  3A34               	xorlw	52
  5070  0C39  1D03               	skipz
  5071  0C3A  2C5D               	goto	i1l3230
  5072                           
  5073                           ;main.c: 345: {
  5074                           ;main.c: 346: USART_WriteString("\n\rpwm = 256\n\r");
  5075  0C3B  30B2               	movlw	low (STR_5| (0+32768))
  5076  0C3C  00F1               	movwf	i1USART_WriteString@str
  5077  0C3D  3098               	movlw	high (STR_5| (0+32768))
  5078  0C3E  00F2               	movwf	i1USART_WriteString@str+1
  5079  0C3F  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5080                           
  5081                           ;main.c: 347: pwm = 256;
  5082  0C44  3000               	movlw	0
  5083  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  5084  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  5085  0C47  00C3               	movwf	_pwm^(0+128)
  5086  0C48  3001               	movlw	1
  5087  0C49  00C4               	movwf	(_pwm^(0+128)+1)
  5088                           
  5089                           ;main.c: 348: PWM_DutyCycle2(pwm);
  5090  0C4A  0844               	movf	(_pwm+1)^(0+128),w
  5091  0C4B  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  5092  0C4C  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  5093  0C4D  0843               	movf	_pwm^(0+128),w
  5094  0C4E  01F0               	clrf	i1PWM_DutyCycle2@valor
  5095  0C4F  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  5096  0C50  160A  118A  2155  120A  158A  	fcall	i1_PWM_DutyCycle2
  5097                           
  5098                           ;main.c: 349: if(PORTBbits.RB1 == 0)
  5099  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0C57  1886               	btfsc	6,1	;volatile
  5102  0C58  2C5B               	goto	i1l187
  5103                           
  5104                           ;main.c: 350: {
  5105                           ;main.c: 351: PORTBbits.RB1 = 1;
  5106  0C59  1486               	bsf	6,1	;volatile
  5107                           
  5108                           ;main.c: 352: }else{
  5109  0C5A  2D4E               	goto	i1l180
  5110  0C5B                     i1l187:	
  5111                           
  5112                           ;main.c: 353: PORTBbits.RB1 = 0;
  5113  0C5B  1086               	bcf	6,1	;volatile
  5114                           
  5115                           ;main.c: 354: }
  5116                           ;main.c: 355: return;
  5117  0C5C  2D4E               	goto	i1l180
  5118  0C5D                     i1l3230:	
  5119                           
  5120                           ;main.c: 356: }
  5121                           ;main.c: 358: if (USART_ReceiveChar() == '5')
  5122  0C5D  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5123  0C62  3A35               	xorlw	53
  5124  0C63  1D03               	skipz
  5125  0C64  2C74               	goto	i1l3236
  5126                           
  5127                           ;main.c: 359: {
  5128                           ;main.c: 360: USART_WriteString("\n\rpwm = 512\n\r");
  5129  0C65  30A4               	movlw	low (STR_6| (0+32768))
  5130  0C66  00F1               	movwf	i1USART_WriteString@str
  5131  0C67  3098               	movlw	high (STR_6| (0+32768))
  5132  0C68  00F2               	movwf	i1USART_WriteString@str+1
  5133  0C69  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5134                           
  5135                           ;main.c: 361: pwm = 512;
  5136  0C6E  3000               	movlw	0
  5137  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  5139  0C71  00C3               	movwf	_pwm^(0+128)
  5140  0C72  3002               	movlw	2
  5141  0C73  00C4               	movwf	(_pwm^(0+128)+1)
  5142  0C74                     i1l3236:	
  5143                           
  5144                           ;main.c: 363: }
  5145                           ;main.c: 365: if (USART_ReceiveChar() == '6')
  5146  0C74  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5147  0C79  3A36               	xorlw	54
  5148  0C7A  1D03               	skipz
  5149  0C7B  2C8B               	goto	i1l3242
  5150                           
  5151                           ;main.c: 366: {
  5152                           ;main.c: 367: USART_WriteString("\n\rpwm = 768\n\r");
  5153  0C7C  30DC               	movlw	low (STR_7| (0+32768))
  5154  0C7D  00F1               	movwf	i1USART_WriteString@str
  5155  0C7E  3098               	movlw	high (STR_7| (0+32768))
  5156  0C7F  00F2               	movwf	i1USART_WriteString@str+1
  5157  0C80  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5158                           
  5159                           ;main.c: 368: pwm = 768;
  5160  0C85  3000               	movlw	0
  5161  0C86  1683               	bsf	3,5	;RP0=1, select bank1
  5162  0C87  1303               	bcf	3,6	;RP1=0, select bank1
  5163  0C88  00C3               	movwf	_pwm^(0+128)
  5164  0C89  3003               	movlw	3
  5165  0C8A  00C4               	movwf	(_pwm^(0+128)+1)
  5166  0C8B                     i1l3242:	
  5167                           
  5168                           ;main.c: 370: }
  5169                           ;main.c: 372: if (USART_ReceiveChar() == '7')
  5170  0C8B  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5171  0C90  3A37               	xorlw	55
  5172  0C91  1D03               	skipz
  5173  0C92  2CA2               	goto	i1l3248
  5174                           
  5175                           ;main.c: 373: {
  5176                           ;main.c: 374: USART_WriteString("\n\rpwm = 896\n\r");
  5177  0C93  30C0               	movlw	low (STR_8| (0+32768))
  5178  0C94  00F1               	movwf	i1USART_WriteString@str
  5179  0C95  3098               	movlw	high (STR_8| (0+32768))
  5180  0C96  00F2               	movwf	i1USART_WriteString@str+1
  5181  0C97  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5182                           
  5183                           ;main.c: 375: pwm = 896;
  5184  0C9C  3080               	movlw	128
  5185  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  5186  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  5187  0C9F  00C3               	movwf	_pwm^(0+128)
  5188  0CA0  3003               	movlw	3
  5189  0CA1  00C4               	movwf	(_pwm^(0+128)+1)
  5190  0CA2                     i1l3248:	
  5191                           
  5192                           ;main.c: 377: }
  5193                           ;main.c: 379: if (USART_ReceiveChar() == '8')
  5194  0CA2  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5195  0CA7  3A38               	xorlw	56
  5196  0CA8  1D03               	skipz
  5197  0CA9  2CB9               	goto	i1l3254
  5198                           
  5199                           ;main.c: 380: {
  5200                           ;main.c: 381: USART_WriteString("\n\rpwm = 1000\n\r");
  5201  0CAA  3086               	movlw	low (STR_9| (0+32768))
  5202  0CAB  00F1               	movwf	i1USART_WriteString@str
  5203  0CAC  3098               	movlw	high (STR_9| (0+32768))
  5204  0CAD  00F2               	movwf	i1USART_WriteString@str+1
  5205  0CAE  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5206                           
  5207                           ;main.c: 382: pwm = 1000;
  5208  0CB3  30E8               	movlw	232
  5209  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  5210  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  5211  0CB6  00C3               	movwf	_pwm^(0+128)
  5212  0CB7  3003               	movlw	3
  5213  0CB8  00C4               	movwf	(_pwm^(0+128)+1)
  5214  0CB9                     i1l3254:	
  5215                           
  5216                           ;main.c: 384: }
  5217                           ;main.c: 386: if (USART_ReceiveChar() == '9')
  5218  0CB9  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5219  0CBE  3A39               	xorlw	57
  5220  0CBF  1D03               	skipz
  5221  0CC0  2CD0               	goto	i1l3260
  5222                           
  5223                           ;main.c: 387: {
  5224                           ;main.c: 388: USART_WriteString("\n\rpwm = 1023\n\r");
  5225  0CC1  3095               	movlw	low (STR_10| (0+32768))
  5226  0CC2  00F1               	movwf	i1USART_WriteString@str
  5227  0CC3  3098               	movlw	high (STR_10| (0+32768))
  5228  0CC4  00F2               	movwf	i1USART_WriteString@str+1
  5229  0CC5  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5230                           
  5231                           ;main.c: 389: pwm = 1023;
  5232  0CCA  30FF               	movlw	255
  5233  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  5234  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  5235  0CCD  00C3               	movwf	_pwm^(0+128)
  5236  0CCE  3003               	movlw	3
  5237  0CCF  00C4               	movwf	(_pwm^(0+128)+1)
  5238  0CD0                     i1l3260:	
  5239                           
  5240                           ;main.c: 391: }
  5241                           ;main.c: 395: Fuzzy();
  5242  0CD0  120A  118A  2061  120A  158A  	fcall	_Fuzzy
  5243                           
  5244                           ;main.c: 396: tf = pwm;
  5245  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  5246  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  5247  0CD7  0844               	movf	(_pwm+1)^(0+128),w
  5248  0CD8  01F9               	clrf	___lwtoft@c+1
  5249  0CD9  07F9               	addwf	___lwtoft@c+1,f
  5250  0CDA  0843               	movf	_pwm^(0+128),w
  5251  0CDB  01F8               	clrf	___lwtoft@c
  5252  0CDC  07F8               	addwf	___lwtoft@c,f
  5253  0CDD  160A  118A  2113  120A  158A  	fcall	___lwtoft
  5254  0CE2  0878               	movf	?___lwtoft,w
  5255  0CE3  1683               	bsf	3,5	;RP0=1, select bank3
  5256  0CE4  1703               	bsf	3,6	;RP1=1, select bank3
  5257  0CE5  00C0               	movwf	_tf^(0+384)
  5258  0CE6  0879               	movf	?___lwtoft+1,w
  5259  0CE7  00C1               	movwf	(_tf+1)^(0+384)
  5260  0CE8  087A               	movf	?___lwtoft+2,w
  5261  0CE9  00C2               	movwf	(_tf+2)^(0+384)
  5262                           
  5263                           ;main.c: 398: PIR1bits.RCIF = 0;
  5264  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0CEC  128C               	bcf	12,5	;volatile
  5267  0CED                     i1l3266:	
  5268                           
  5269                           ;main.c: 399: }
  5270                           ;main.c: 402: if (PIR1bits.ADIF)
  5271  0CED  1B0C               	btfsc	12,6	;volatile
  5272                           
  5273                           ;main.c: 403: {
  5274                           ;main.c: 407: PIR1bits.ADIF = 0;
  5275  0CEE  130C               	bcf	12,6	;volatile
  5276                           
  5277                           ;main.c: 408: }
  5278                           ;main.c: 412: if (INTCONbits.T0IF)
  5279  0CEF  1D0B               	btfss	11,2	;volatile
  5280  0CF0  2D4A               	goto	i1l3292
  5281                           
  5282                           ;main.c: 413: {
  5283                           ;main.c: 415: TIMER0_Set(238);
  5284  0CF1  30EE               	movlw	238
  5285  0CF2  160A  118A  20BD  120A  158A  	fcall	i1_TIMER0_Set
  5286                           
  5287                           ;main.c: 418: if (contagens_tm0 < 499)
  5288  0CF7  3001               	movlw	1
  5289  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0CFA  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  5292  0CFB  30F3               	movlw	243
  5293  0CFC  1903               	skipnz
  5294  0CFD  023D               	subwf	_contagens_tm0^(0+128),w
  5295  0CFE  1803               	skipnc
  5296  0CFF  2D0A               	goto	i1l3278
  5297                           
  5298                           ;main.c: 419: {
  5299                           ;main.c: 421: contagens_tm0++;
  5300  0D00  3001               	movlw	1
  5301  0D01  07BD               	addwf	_contagens_tm0^(0+128),f
  5302  0D02  1803               	skipnc
  5303  0D03  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  5304  0D04  3000               	movlw	0
  5305  0D05  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  5306                           
  5307                           ;main.c: 424: PORTBbits.RB6 = 1;
  5308  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  5309  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  5310  0D08  1706               	bsf	6,6	;volatile
  5311                           
  5312                           ;main.c: 425: }
  5313  0D09  2D49               	goto	i1l3290
  5314  0D0A                     i1l3278:	
  5315                           
  5316                           ;main.c: 426: else
  5317                           ;main.c: 427: {
  5318                           ;main.c: 429: contagens_tm0 = 0;
  5319  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  5320  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  5321  0D0C  01BD               	clrf	_contagens_tm0^(0+128)
  5322  0D0D  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  5323                           
  5324                           ;main.c: 432: pulsos = (TMR1H << 8) + TMR1L;
  5325  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0D10  080F               	movf	15,w	;volatile
  5328  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  5330  0D13  01C2               	clrf	(_pulsos+1)^(0+128)
  5331  0D14  07C2               	addwf	(_pulsos+1)^(0+128),f
  5332  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0D17  080E               	movf	14,w	;volatile
  5335  0D18  1683               	bsf	3,5	;RP0=1, select bank1
  5336  0D19  1303               	bcf	3,6	;RP1=0, select bank1
  5337  0D1A  01C1               	clrf	_pulsos^(0+128)
  5338  0D1B  07C1               	addwf	_pulsos^(0+128),f
  5339                           
  5340                           ;main.c: 433: rpm = ((pulsos / pas_cooler) * 120);
  5341  0D1C  0866               	movf	(_pas_cooler+1)^(0+128),w
  5342  0D1D  01F1               	clrf	i1___lwdiv@divisor+1
  5343  0D1E  07F1               	addwf	i1___lwdiv@divisor+1,f
  5344  0D1F  0865               	movf	_pas_cooler^(0+128),w
  5345  0D20  01F0               	clrf	i1___lwdiv@divisor
  5346  0D21  07F0               	addwf	i1___lwdiv@divisor,f
  5347  0D22  0842               	movf	(_pulsos+1)^(0+128),w
  5348  0D23  01F3               	clrf	i1___lwdiv@dividend+1
  5349  0D24  07F3               	addwf	i1___lwdiv@dividend+1,f
  5350  0D25  0841               	movf	_pulsos^(0+128),w
  5351  0D26  01F2               	clrf	i1___lwdiv@dividend
  5352  0D27  07F2               	addwf	i1___lwdiv@dividend,f
  5353  0D28  160A  118A  235B  120A  158A  	fcall	i1___lwdiv
  5354  0D2D  0871               	movf	?i1___lwdiv+1,w
  5355  0D2E  01F9               	clrf	i1___wmul@multiplier+1
  5356  0D2F  07F9               	addwf	i1___wmul@multiplier+1,f
  5357  0D30  0870               	movf	?i1___lwdiv,w
  5358  0D31  01F8               	clrf	i1___wmul@multiplier
  5359  0D32  07F8               	addwf	i1___wmul@multiplier,f
  5360  0D33  3078               	movlw	120
  5361  0D34  00FA               	movwf	i1___wmul@multiplicand
  5362  0D35  3000               	movlw	0
  5363  0D36  00FB               	movwf	i1___wmul@multiplicand+1
  5364  0D37  160A  118A  222E  120A  158A  	fcall	i1___wmul
  5365  0D3C  0879               	movf	?i1___wmul+1,w
  5366  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  5367  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  5368  0D3F  01C6               	clrf	(_rpm+1)^(0+128)
  5369  0D40  07C6               	addwf	(_rpm+1)^(0+128),f
  5370  0D41  0878               	movf	?i1___wmul,w
  5371  0D42  01C5               	clrf	_rpm^(0+128)
  5372  0D43  07C5               	addwf	_rpm^(0+128),f
  5373                           
  5374                           ;main.c: 436: TMR1L = 0x00;
  5375  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0D46  018E               	clrf	14	;volatile
  5378                           
  5379                           ;main.c: 437: TMR1H = 0x00;
  5380  0D47  018F               	clrf	15	;volatile
  5381                           
  5382                           ;main.c: 440: PORTBbits.RB6 = 0;
  5383  0D48  1306               	bcf	6,6	;volatile
  5384  0D49                     i1l3290:	
  5385                           
  5386                           ;main.c: 441: }
  5387                           ;main.c: 444: INTCONbits.T0IF = 0;
  5388  0D49  110B               	bcf	11,2	;volatile
  5389  0D4A                     i1l3292:	
  5390                           
  5391                           ;main.c: 445: }
  5392                           ;main.c: 448: if (PIR1bits.TMR1IF)
  5393  0D4A  180C               	btfsc	12,0	;volatile
  5394                           
  5395                           ;main.c: 449: {
  5396                           ;main.c: 453: PIR1bits.TMR1IF = 0;
  5397  0D4B  100C               	bcf	12,0	;volatile
  5398                           
  5399                           ;main.c: 454: }
  5400                           ;main.c: 457: if (PIR1bits.SSPIF)
  5401  0D4C  198C               	btfsc	12,3	;volatile
  5402                           
  5403                           ;main.c: 458: {
  5404                           ;main.c: 462: PIR1bits.SSPIF = 0;
  5405  0D4D  118C               	bcf	12,3	;volatile
  5406  0D4E                     i1l180:	
  5407  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  5408  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  5409  0D50  084A               	movf	(??_ISR+3)^(0+128),w
  5410  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0D53  00FF               	movwf	127
  5413  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  5414  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  5415  0D56  0849               	movf	(??_ISR+2)^(0+128),w
  5416  0D57  008A               	movwf	10
  5417  0D58  0848               	movf	(??_ISR+1)^(0+128),w
  5418  0D59  0084               	movwf	4
  5419  0D5A  0E47               	swapf	??_ISR^(0+128),w
  5420  0D5B  0083               	movwf	3
  5421  0D5C  0EFE               	swapf	126,f
  5422  0D5D  0E7E               	swapf	126,w
  5423  0D5E  0009               	retfie
  5424  0D5F                     __end_of_ISR:	
  5425                           
  5426                           	psect	intentry
  5427  0004                     __pintentry:	
  5428                           ;incstack = 0
  5429                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5430                           
  5431  0004                     interrupt_function:	
  5432  007E                     saved_w	set	btemp
  5433  0004  00FE               	movwf	btemp
  5434  0005  0E03               	swapf	3,w
  5435  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5437  0008  00C7               	movwf	??_ISR^(0+128)
  5438  0009  0804               	movf	4,w
  5439  000A  00C8               	movwf	(??_ISR+1)^(0+128)
  5440  000B  080A               	movf	10,w
  5441  000C  00C9               	movwf	(??_ISR+2)^(0+128)
  5442  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5443  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5444  000F  087F               	movf	btemp+1,w
  5445  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5446  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5447  0012  00CA               	movwf	(??_ISR+3)^(0+128)
  5448  0013  120A  158A  2BC2   	ljmp	_ISR
  5449                           
  5450                           	psect	text23
  5451  122E                     __ptext23:	
  5452 ;; *************** function i1___wmul *****************
  5453 ;; Defined at:
  5454 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  multiplier      2    8[COMMON] unsigned int 
  5457 ;;  multiplicand    2   10[COMMON] unsigned int 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  __wmul          2   12[COMMON] unsigned int 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2    8[COMMON] unsigned int 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5469 ;;      Params:         4       0       0       0       0
  5470 ;;      Locals:         2       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0
  5472 ;;      Totals:         6       0       0       0       0
  5473 ;;Total ram usage:        6 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_ISR
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function i1___wmul
  5484  122E                     i1___wmul:	
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5488  122E  01FC               	clrf	i1___wmul@product
  5489  122F  01FD               	clrf	i1___wmul@product+1
  5490  1230                     i1l3142:	
  5491  1230  1C78               	btfss	i1___wmul@multiplier,0
  5492  1231  2A38               	goto	i1l598
  5493  1232  087A               	movf	i1___wmul@multiplicand,w
  5494  1233  07FC               	addwf	i1___wmul@product,f
  5495  1234  1803               	skipnc
  5496  1235  0AFD               	incf	i1___wmul@product+1,f
  5497  1236  087B               	movf	i1___wmul@multiplicand+1,w
  5498  1237  07FD               	addwf	i1___wmul@product+1,f
  5499  1238                     i1l598:	
  5500  1238  3001               	movlw	1
  5501  1239                     u386_25:	
  5502  1239  1003               	clrc
  5503  123A  0DFA               	rlf	i1___wmul@multiplicand,f
  5504  123B  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5505  123C  3EFF               	addlw	-1
  5506  123D  1D03               	skipz
  5507  123E  2A39               	goto	u386_25
  5508  123F  3001               	movlw	1
  5509  1240                     u387_25:	
  5510  1240  1003               	clrc
  5511  1241  0CF9               	rrf	i1___wmul@multiplier+1,f
  5512  1242  0CF8               	rrf	i1___wmul@multiplier,f
  5513  1243  3EFF               	addlw	-1
  5514  1244  1D03               	skipz
  5515  1245  2A40               	goto	u387_25
  5516  1246  0879               	movf	i1___wmul@multiplier+1,w
  5517  1247  0478               	iorwf	i1___wmul@multiplier,w
  5518  1248  1D03               	skipz
  5519  1249  2A30               	goto	i1l3142
  5520  124A  087D               	movf	i1___wmul@product+1,w
  5521  124B  01F9               	clrf	?i1___wmul+1
  5522  124C  07F9               	addwf	?i1___wmul+1,f
  5523  124D  087C               	movf	i1___wmul@product,w
  5524  124E  01F8               	clrf	?i1___wmul
  5525  124F  07F8               	addwf	?i1___wmul,f
  5526  1250  0008               	return
  5527  1251                     __end_ofi1___wmul:	
  5528                           
  5529                           	psect	text24
  5530  135B                     __ptext24:	
  5531 ;; *************** function i1___lwdiv *****************
  5532 ;; Defined at:
  5533 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  divisor         2    0[COMMON] unsigned int 
  5536 ;;  dividend        2    2[COMMON] unsigned int 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5539 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  2    0[COMMON] unsigned int 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5549 ;;      Params:         4       0       0       0       0
  5550 ;;      Locals:         3       0       0       0       0
  5551 ;;      Temps:          1       0       0       0       0
  5552 ;;      Totals:         8       0       0       0       0
  5553 ;;Total ram usage:        8 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_ISR
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function i1___lwdiv
  5564  135B                     i1___lwdiv:	
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5568  135B  01F5               	clrf	i1___lwdiv@quotient
  5569  135C  01F6               	clrf	i1___lwdiv@quotient+1
  5570  135D  0871               	movf	i1___lwdiv@divisor+1,w
  5571  135E  0470               	iorwf	i1___lwdiv@divisor,w
  5572  135F  1903               	skipnz
  5573  1360  2B92               	goto	i1l3174
  5574  1361  01F7               	clrf	i1___lwdiv@counter
  5575  1362  0AF7               	incf	i1___lwdiv@counter,f
  5576  1363                     i1l3162:	
  5577  1363  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5578  1364  2B71               	goto	i1l3164
  5579  1365  3001               	movlw	1
  5580  1366                     u390_25:	
  5581  1366  1003               	clrc
  5582  1367  0DF0               	rlf	i1___lwdiv@divisor,f
  5583  1368  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5584  1369  3EFF               	addlw	-1
  5585  136A  1D03               	skipz
  5586  136B  2B66               	goto	u390_25
  5587  136C  3001               	movlw	1
  5588  136D  00F4               	movwf	??i1___lwdiv
  5589  136E  0874               	movf	??i1___lwdiv,w
  5590  136F  07F7               	addwf	i1___lwdiv@counter,f
  5591  1370  2B63               	goto	i1l3162
  5592  1371                     i1l3164:	
  5593  1371  3001               	movlw	1
  5594  1372                     u392_25:	
  5595  1372  1003               	clrc
  5596  1373  0DF5               	rlf	i1___lwdiv@quotient,f
  5597  1374  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5598  1375  3EFF               	addlw	-1
  5599  1376  1D03               	skipz
  5600  1377  2B72               	goto	u392_25
  5601  1378  0871               	movf	i1___lwdiv@divisor+1,w
  5602  1379  0273               	subwf	i1___lwdiv@dividend+1,w
  5603  137A  1D03               	skipz
  5604  137B  2B7E               	goto	u393_25
  5605  137C  0870               	movf	i1___lwdiv@divisor,w
  5606  137D  0272               	subwf	i1___lwdiv@dividend,w
  5607  137E                     u393_25:	
  5608  137E  1C03               	skipc
  5609  137F  2B87               	goto	i1l3170
  5610  1380  0870               	movf	i1___lwdiv@divisor,w
  5611  1381  02F2               	subwf	i1___lwdiv@dividend,f
  5612  1382  0871               	movf	i1___lwdiv@divisor+1,w
  5613  1383  1C03               	skipc
  5614  1384  03F3               	decf	i1___lwdiv@dividend+1,f
  5615  1385  02F3               	subwf	i1___lwdiv@dividend+1,f
  5616  1386  1475               	bsf	i1___lwdiv@quotient,0
  5617  1387                     i1l3170:	
  5618  1387  3001               	movlw	1
  5619  1388                     u394_25:	
  5620  1388  1003               	clrc
  5621  1389  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5622  138A  0CF0               	rrf	i1___lwdiv@divisor,f
  5623  138B  3EFF               	addlw	-1
  5624  138C  1D03               	skipz
  5625  138D  2B88               	goto	u394_25
  5626  138E  3001               	movlw	1
  5627  138F  02F7               	subwf	i1___lwdiv@counter,f
  5628  1390  1D03               	btfss	3,2
  5629  1391  2B71               	goto	i1l3164
  5630  1392                     i1l3174:	
  5631  1392  0876               	movf	i1___lwdiv@quotient+1,w
  5632  1393  01F1               	clrf	?i1___lwdiv+1
  5633  1394  07F1               	addwf	?i1___lwdiv+1,f
  5634  1395  0875               	movf	i1___lwdiv@quotient,w
  5635  1396  01F0               	clrf	?i1___lwdiv
  5636  1397  07F0               	addwf	?i1___lwdiv,f
  5637  1398  0008               	return
  5638  1399                     __end_ofi1___lwdiv:	
  5639                           
  5640                           	psect	text25
  5641  10BD                     __ptext25:	
  5642 ;; *************** function i1_TIMER0_Set *****************
  5643 ;; Defined at:
  5644 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  contagens       1    wreg     unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  contagens       1    0[COMMON] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;		None               void
  5651 ;; Registers used:
  5652 ;;		wreg
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5658 ;;      Params:         0       0       0       0       0
  5659 ;;      Locals:         1       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0
  5661 ;;      Totals:         1       0       0       0       0
  5662 ;;Total ram usage:        1 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_ISR
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function i1_TIMER0_Set
  5673  10BD                     i1_TIMER0_Set:	
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in i1_TIMER0_Set: [wreg]
  5677                           ;i1TIMER0_Set@contagens stored from wreg
  5678  10BD  00F0               	movwf	i1TIMER0_Set@contagens
  5679                           
  5680                           ;timers.c: 22: TMR0 = contagens;
  5681  10BE  0870               	movf	i1TIMER0_Set@contagens,w
  5682  10BF  1283               	bcf	3,5	;RP0=0, select bank0
  5683  10C0  1303               	bcf	3,6	;RP1=0, select bank0
  5684  10C1  0081               	movwf	1	;volatile
  5685  10C2  0008               	return
  5686  10C3                     __end_ofi1_TIMER0_Set:	
  5687                           
  5688                           	psect	text26
  5689  1170                     __ptext26:	
  5690 ;; *************** function _USART_ReceiveChar *****************
  5691 ;; Defined at:
  5692 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  byte            1    4[COMMON] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       0       0       0       0
  5707 ;;      Locals:         1       0       0       0       0
  5708 ;;      Temps:          1       0       0       0       0
  5709 ;;      Totals:         2       0       0       0       0
  5710 ;;Total ram usage:        2 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    2
  5713 ;; This function calls:
  5714 ;;		i1_USART_WriteString
  5715 ;; This function is called by:
  5716 ;;		_ISR
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function _USART_ReceiveChar
  5722  1170                     _USART_ReceiveChar:	
  5723                           
  5724                           ;usart.c: 65: unsigned char byte;
  5725                           ;usart.c: 67: if (!OERR)
  5726                           
  5727                           ;incstack = 0
  5728                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5729  1170  1283               	bcf	3,5	;RP0=0, select bank0
  5730  1171  1303               	bcf	3,6	;RP1=0, select bank0
  5731  1172  1898               	btfsc	24,1	;volatile
  5732  1173  2979               	goto	i1l2874
  5733                           
  5734                           ;usart.c: 68: {
  5735                           ;usart.c: 69: byte = RCREG;
  5736  1174  081A               	movf	26,w	;volatile
  5737  1175  00F3               	movwf	??_USART_ReceiveChar
  5738  1176  0873               	movf	??_USART_ReceiveChar,w
  5739  1177  00F4               	movwf	USART_ReceiveChar@byte
  5740  1178  2988               	goto	i1l2882
  5741  1179                     i1l2874:	
  5742                           ;usart.c: 71: }
  5743                           
  5744                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5745                           
  5746                           
  5747                           ;usart.c: 72: else
  5748                           ;usart.c: 73: {
  5749                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5750  1179  301C               	movlw	low (STR_19| (0+32768))
  5751  117A  00F1               	movwf	i1USART_WriteString@str
  5752  117B  3098               	movlw	high (STR_19| (0+32768))
  5753  117C  00F2               	movwf	i1USART_WriteString@str+1
  5754  117D  160A  118A  220B   	fcall	i1_USART_WriteString
  5755                           
  5756                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5757  1180  1283               	bcf	3,5	;RP0=0, select bank0
  5758  1181  1303               	bcf	3,6	;RP1=0, select bank0
  5759  1182  1218               	bcf	24,4	;volatile
  5760                           
  5761                           ;usart.c: 77: byte = RCREG;
  5762  1183  081A               	movf	26,w	;volatile
  5763  1184  00F3               	movwf	??_USART_ReceiveChar
  5764  1185  0873               	movf	??_USART_ReceiveChar,w
  5765  1186  00F4               	movwf	USART_ReceiveChar@byte
  5766                           
  5767                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5768  1187  1618               	bsf	24,4	;volatile
  5769  1188                     i1l2882:	
  5770                           
  5771                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5772  1188  128C               	bcf	12,5	;volatile
  5773                           
  5774                           ;usart.c: 80: }
  5775                           ;usart.c: 82: return(byte);
  5776  1189  0874               	movf	USART_ReceiveChar@byte,w
  5777  118A  0008               	return
  5778  118B                     __end_of_USART_ReceiveChar:	
  5779                           
  5780                           	psect	text27
  5781  120B                     __ptext27:	
  5782 ;; *************** function i1_USART_WriteString *****************
  5783 ;; Defined at:
  5784 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  str             2    1[COMMON] PTR const unsigned char 
  5787 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5788 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5789 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5790 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         2       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0
  5805 ;;      Totals:         2       0       0       0       0
  5806 ;;Total ram usage:        2 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		i1_USART_WriteChar
  5811 ;; This function is called by:
  5812 ;;		_ISR
  5813 ;;		_USART_ReceiveChar
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function i1_USART_WriteString
  5819  120B                     i1_USART_WriteString:	
  5820  120B                     i1l2726:	
  5821                           ;usart.c: 54: while(*str != '\0')
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5825                           
  5826  120B  0872               	movf	i1USART_WriteString@str+1,w
  5827  120C  1283               	bcf	3,5	;RP0=0, select bank0
  5828  120D  1303               	bcf	3,6	;RP1=0, select bank0
  5829  120E  00FF               	movwf	127
  5830  120F  0871               	movf	i1USART_WriteString@str,w
  5831  1210  0084               	movwf	4
  5832  1211  160A  158A  2000  160A  118A  	fcall	stringtab
  5833  1216  3800               	iorlw	0
  5834  1217  1903               	btfsc	3,2
  5835  1218  0008               	return
  5836                           
  5837                           ;usart.c: 55: {
  5838                           ;usart.c: 56: USART_WriteChar(*str);
  5839  1219  0872               	movf	i1USART_WriteString@str+1,w
  5840  121A  1283               	bcf	3,5	;RP0=0, select bank0
  5841  121B  1303               	bcf	3,6	;RP1=0, select bank0
  5842  121C  00FF               	movwf	127
  5843  121D  0871               	movf	i1USART_WriteString@str,w
  5844  121E  0084               	movwf	4
  5845  121F  160A  158A  2000  160A  118A  	fcall	stringtab
  5846  1224  160A  118A  20D1  160A  118A  	fcall	i1_USART_WriteChar
  5847                           
  5848                           ;usart.c: 57: str++;
  5849  1229  3001               	movlw	1
  5850  122A  07F1               	addwf	i1USART_WriteString@str,f
  5851  122B  1803               	skipnc
  5852  122C  0AF2               	incf	i1USART_WriteString@str+1,f
  5853  122D  2A0B               	goto	i1l2726
  5854  122E                     __end_ofi1_USART_WriteString:	
  5855                           
  5856                           	psect	text28
  5857  10D1                     __ptext28:	
  5858 ;; *************** function i1_USART_WriteChar *****************
  5859 ;; Defined at:
  5860 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  byte            1    wreg     unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  byte            1    0[COMMON] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       0       0       0       0
  5875 ;;      Locals:         1       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         1       0       0       0       0
  5878 ;;Total ram usage:        1 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		i1_USART_WriteString
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function i1_USART_WriteChar
  5889  10D1                     i1_USART_WriteChar:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in i1_USART_WriteChar: [wreg]
  5893                           ;i1USART_WriteChar@byte stored from wreg
  5894  10D1  00F0               	movwf	i1USART_WriteChar@byte
  5895  10D2                     i1l227:	
  5896                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5897                           
  5898  10D2  1283               	bcf	3,5	;RP0=0, select bank0
  5899  10D3  1303               	bcf	3,6	;RP1=0, select bank0
  5900  10D4  1E0C               	btfss	12,4	;volatile
  5901  10D5  28D2               	goto	i1l227
  5902                           
  5903                           ;usart.c: 47: TXREG = byte;
  5904  10D6  0870               	movf	i1USART_WriteChar@byte,w
  5905  10D7  0099               	movwf	25	;volatile
  5906  10D8  0008               	return
  5907  10D9                     __end_ofi1_USART_WriteChar:	
  5908                           
  5909                           	psect	text29
  5910  0061                     __ptext29:	
  5911 ;; *************** function _Fuzzy *****************
  5912 ;; Defined at:
  5913 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  a               2   61[BANK0 ] int 
  5918 ;;  a               2   59[BANK0 ] int 
  5919 ;;  a               2   57[BANK0 ] int 
  5920 ;;  a               2   65[BANK0 ] int 
  5921 ;;  a               2   63[BANK0 ] int 
  5922 ;;  aumenta         3   76[BANK0 ] float 
  5923 ;;  reduz           3   73[BANK0 ] float 
  5924 ;;  mantem          3   70[BANK0 ] float 
  5925 ;;  tip             3   67[BANK0 ] float 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0      22       0       0       0
  5937 ;;      Temps:          0       0       0       0       0
  5938 ;;      Totals:         0      22       0       0       0
  5939 ;;Total ram usage:       22 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    3
  5942 ;; This function calls:
  5943 ;;		___ftadd
  5944 ;;		___ftdiv
  5945 ;;		___ftge
  5946 ;;		___ftmul
  5947 ;;		___ftneg
  5948 ;;		___fttol
  5949 ;;		___lwtoft
  5950 ;;		_max_val
  5951 ;;		_trapmf
  5952 ;;		_trimf
  5953 ;;		i1_PWM_DutyCycle2
  5954 ;; This function is called by:
  5955 ;;		_ISR
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _Fuzzy
  5961  0061                     _Fuzzy:	
  5962                           
  5963                           ;main.c: 140: setpoint = (float)pwm;
  5964                           
  5965                           ;incstack = 0
  5966                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5967  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5968  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5969  0063  0844               	movf	(_pwm+1)^(0+128),w
  5970  0064  01F9               	clrf	___lwtoft@c+1
  5971  0065  07F9               	addwf	___lwtoft@c+1,f
  5972  0066  0843               	movf	_pwm^(0+128),w
  5973  0067  01F8               	clrf	___lwtoft@c
  5974  0068  07F8               	addwf	___lwtoft@c,f
  5975  0069  160A  118A  2113  120A  118A  	fcall	___lwtoft
  5976  006E  0878               	movf	?___lwtoft,w
  5977  006F  1683               	bsf	3,5	;RP0=1, select bank3
  5978  0070  1703               	bsf	3,6	;RP1=1, select bank3
  5979  0071  00BD               	movwf	_setpoint^(0+384)
  5980  0072  0879               	movf	?___lwtoft+1,w
  5981  0073  00BE               	movwf	(_setpoint+1)^(0+384)
  5982  0074  087A               	movf	?___lwtoft+2,w
  5983  0075  00BF               	movwf	(_setpoint+2)^(0+384)
  5984                           
  5985                           ;main.c: 142: float mantem;
  5986                           ;main.c: 143: float reduz;
  5987                           ;main.c: 144: float aumenta;
  5988                           ;main.c: 145: float tip;
  5989                           ;main.c: 147: fitemp =0;
  5990  0076  3000               	movlw	0
  5991  0077  1683               	bsf	3,5	;RP0=1, select bank1
  5992  0078  1303               	bcf	3,6	;RP1=0, select bank1
  5993  0079  00A0               	movwf	_fitemp^(0+128)
  5994  007A  3000               	movlw	0
  5995  007B  00A1               	movwf	(_fitemp+1)^(0+128)
  5996  007C  3000               	movlw	0
  5997  007D  00A2               	movwf	(_fitemp+2)^(0+128)
  5998                           
  5999                           ;main.c: 150: temp = (setpoint - tf);
  6000  007E  1683               	bsf	3,5	;RP0=1, select bank3
  6001  007F  1703               	bsf	3,6	;RP1=1, select bank3
  6002  0080  083D               	movf	_setpoint^(0+384),w
  6003  0081  1283               	bcf	3,5	;RP0=0, select bank0
  6004  0082  1303               	bcf	3,6	;RP1=0, select bank0
  6005  0083  00AA               	movwf	___ftadd@f1
  6006  0084  1683               	bsf	3,5	;RP0=1, select bank3
  6007  0085  1703               	bsf	3,6	;RP1=1, select bank3
  6008  0086  083E               	movf	(_setpoint+1)^(0+384),w
  6009  0087  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0088  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0089  00AB               	movwf	___ftadd@f1+1
  6012  008A  1683               	bsf	3,5	;RP0=1, select bank3
  6013  008B  1703               	bsf	3,6	;RP1=1, select bank3
  6014  008C  083F               	movf	(_setpoint+2)^(0+384),w
  6015  008D  1283               	bcf	3,5	;RP0=0, select bank0
  6016  008E  1303               	bcf	3,6	;RP1=0, select bank0
  6017  008F  00AC               	movwf	___ftadd@f1+2
  6018  0090  1683               	bsf	3,5	;RP0=1, select bank3
  6019  0091  1703               	bsf	3,6	;RP1=1, select bank3
  6020  0092  0840               	movf	_tf^(0+384),w
  6021  0093  00F0               	movwf	___ftneg@f1
  6022  0094  0841               	movf	(_tf+1)^(0+384),w
  6023  0095  00F1               	movwf	___ftneg@f1+1
  6024  0096  0842               	movf	(_tf+2)^(0+384),w
  6025  0097  00F2               	movwf	___ftneg@f1+2
  6026  0098  160A  118A  20C9  120A  118A  	fcall	___ftneg
  6027  009D  0870               	movf	?___ftneg,w
  6028  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6029  009F  1303               	bcf	3,6	;RP1=0, select bank0
  6030  00A0  00AD               	movwf	___ftadd@f2
  6031  00A1  0871               	movf	?___ftneg+1,w
  6032  00A2  00AE               	movwf	___ftadd@f2+1
  6033  00A3  0872               	movf	?___ftneg+2,w
  6034  00A4  00AF               	movwf	___ftadd@f2+2
  6035  00A5  120A  118A  26EE  120A  118A  	fcall	___ftadd
  6036  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  6037  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  6038  00AC  082A               	movf	?___ftadd,w
  6039  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  6040  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  6041  00AF  00AF               	movwf	_temp^(0+128)
  6042  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6043  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  6044  00B2  082B               	movf	?___ftadd+1,w
  6045  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  6046  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  6047  00B5  00B0               	movwf	(_temp+1)^(0+128)
  6048  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  6049  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  6050  00B8  082C               	movf	?___ftadd+2,w
  6051  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  6052  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  6053  00BB  00B1               	movwf	(_temp+2)^(0+128)
  6054                           
  6055                           ;main.c: 151: deltaV = temp;
  6056  00BC  082F               	movf	_temp^(0+128),w
  6057  00BD  00F0               	movwf	___fttol@f1
  6058  00BE  0830               	movf	(_temp+1)^(0+128),w
  6059  00BF  00F1               	movwf	___fttol@f1+1
  6060  00C0  0831               	movf	(_temp+2)^(0+128),w
  6061  00C1  00F2               	movwf	___fttol@f1+2
  6062  00C2  160A  118A  2509  120A  118A  	fcall	___fttol
  6063  00C7  0871               	movf	?___fttol+1,w
  6064  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  6065  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  6066  00CA  01C0               	clrf	(_deltaV+1)^(0+128)
  6067  00CB  07C0               	addwf	(_deltaV+1)^(0+128),f
  6068  00CC  0870               	movf	?___fttol,w
  6069  00CD  01BF               	clrf	_deltaV^(0+128)
  6070  00CE  07BF               	addwf	_deltaV^(0+128),f
  6071                           
  6072                           ;main.c: 153: if (temp >100) temp = 100;
  6073  00CF  3000               	movlw	0
  6074  00D0  00F0               	movwf	___ftge@ff1
  6075  00D1  30C8               	movlw	200
  6076  00D2  00F1               	movwf	___ftge@ff1+1
  6077  00D3  3042               	movlw	66
  6078  00D4  00F2               	movwf	___ftge@ff1+2
  6079  00D5  082F               	movf	_temp^(0+128),w
  6080  00D6  00F3               	movwf	___ftge@ff2
  6081  00D7  0830               	movf	(_temp+1)^(0+128),w
  6082  00D8  00F4               	movwf	___ftge@ff2+1
  6083  00D9  0831               	movf	(_temp+2)^(0+128),w
  6084  00DA  00F5               	movwf	___ftge@ff2+2
  6085  00DB  160A  118A  23D9  120A  118A  	fcall	___ftge
  6086  00E0  1803               	btfsc	3,0
  6087  00E1  28EA               	goto	i1l2744
  6088  00E2  3000               	movlw	0
  6089  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  6090  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  6091  00E5  00AF               	movwf	_temp^(0+128)
  6092  00E6  30C8               	movlw	200
  6093  00E7  00B0               	movwf	(_temp+1)^(0+128)
  6094  00E8  3042               	movlw	66
  6095  00E9  00B1               	movwf	(_temp+2)^(0+128)
  6096  00EA                     i1l2744:	
  6097                           
  6098                           ;main.c: 154: if (temp <0) temp = 0;
  6099  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6100  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  6101  00EC  082F               	movf	_temp^(0+128),w
  6102  00ED  00F0               	movwf	___ftge@ff1
  6103  00EE  0830               	movf	(_temp+1)^(0+128),w
  6104  00EF  00F1               	movwf	___ftge@ff1+1
  6105  00F0  0831               	movf	(_temp+2)^(0+128),w
  6106  00F1  00F2               	movwf	___ftge@ff1+2
  6107  00F2  3000               	movlw	0
  6108  00F3  00F3               	movwf	___ftge@ff2
  6109  00F4  3000               	movlw	0
  6110  00F5  00F4               	movwf	___ftge@ff2+1
  6111  00F6  3000               	movlw	0
  6112  00F7  00F5               	movwf	___ftge@ff2+2
  6113  00F8  160A  118A  23D9  120A  118A  	fcall	___ftge
  6114  00FD  1803               	btfsc	3,0
  6115  00FE  2907               	goto	i1l2748
  6116  00FF  3000               	movlw	0
  6117  0100  1683               	bsf	3,5	;RP0=1, select bank1
  6118  0101  1303               	bcf	3,6	;RP1=0, select bank1
  6119  0102  00AF               	movwf	_temp^(0+128)
  6120  0103  3000               	movlw	0
  6121  0104  00B0               	movwf	(_temp+1)^(0+128)
  6122  0105  3000               	movlw	0
  6123  0106  00B1               	movwf	(_temp+2)^(0+128)
  6124  0107                     i1l2748:	
  6125                           
  6126                           ;main.c: 157: if (temp < 25)
  6127  0107  1683               	bsf	3,5	;RP0=1, select bank1
  6128  0108  1303               	bcf	3,6	;RP1=0, select bank1
  6129  0109  082F               	movf	_temp^(0+128),w
  6130  010A  00F0               	movwf	___ftge@ff1
  6131  010B  0830               	movf	(_temp+1)^(0+128),w
  6132  010C  00F1               	movwf	___ftge@ff1+1
  6133  010D  0831               	movf	(_temp+2)^(0+128),w
  6134  010E  00F2               	movwf	___ftge@ff1+2
  6135  010F  3000               	movlw	0
  6136  0110  00F3               	movwf	___ftge@ff2
  6137  0111  30C8               	movlw	200
  6138  0112  00F4               	movwf	___ftge@ff2+1
  6139  0113  3041               	movlw	65
  6140  0114  00F5               	movwf	___ftge@ff2+2
  6141  0115  160A  118A  23D9  120A  118A  	fcall	___ftge
  6142  011A  1803               	btfsc	3,0
  6143  011B  2A70               	goto	i1l2772
  6144                           
  6145                           ;main.c: 158: {
  6146                           ;main.c: 161: fitemp = trapmf(temp, 0,0,13,32);
  6147  011C  1683               	bsf	3,5	;RP0=1, select bank1
  6148  011D  1303               	bcf	3,6	;RP1=0, select bank1
  6149  011E  082F               	movf	_temp^(0+128),w
  6150  011F  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0120  1303               	bcf	3,6	;RP1=0, select bank0
  6152  0121  00C7               	movwf	trapmf@x
  6153  0122  1683               	bsf	3,5	;RP0=1, select bank1
  6154  0123  1303               	bcf	3,6	;RP1=0, select bank1
  6155  0124  0830               	movf	(_temp+1)^(0+128),w
  6156  0125  1283               	bcf	3,5	;RP0=0, select bank0
  6157  0126  1303               	bcf	3,6	;RP1=0, select bank0
  6158  0127  00C8               	movwf	trapmf@x+1
  6159  0128  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0129  1303               	bcf	3,6	;RP1=0, select bank1
  6161  012A  0831               	movf	(_temp+2)^(0+128),w
  6162  012B  1283               	bcf	3,5	;RP0=0, select bank0
  6163  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6164  012D  00C9               	movwf	trapmf@x+2
  6165  012E  3000               	movlw	0
  6166  012F  00CA               	movwf	trapmf@a
  6167  0130  3000               	movlw	0
  6168  0131  00CB               	movwf	trapmf@a+1
  6169  0132  3000               	movlw	0
  6170  0133  00CC               	movwf	trapmf@a+2
  6171  0134  3000               	movlw	0
  6172  0135  00CD               	movwf	trapmf@b
  6173  0136  3000               	movlw	0
  6174  0137  00CE               	movwf	trapmf@b+1
  6175  0138  3000               	movlw	0
  6176  0139  00CF               	movwf	trapmf@b+2
  6177  013A  3000               	movlw	0
  6178  013B  00D0               	movwf	trapmf@c
  6179  013C  3050               	movlw	80
  6180  013D  00D1               	movwf	trapmf@c+1
  6181  013E  3041               	movlw	65
  6182  013F  00D2               	movwf	trapmf@c+2
  6183  0140  3000               	movlw	0
  6184  0141  00D3               	movwf	trapmf@d
  6185  0142  3000               	movlw	0
  6186  0143  00D4               	movwf	trapmf@d+1
  6187  0144  3042               	movlw	66
  6188  0145  00D5               	movwf	trapmf@d+2
  6189  0146  120A  158A  226C  120A  118A  	fcall	_trapmf
  6190  014B  1283               	bcf	3,5	;RP0=0, select bank0
  6191  014C  1303               	bcf	3,6	;RP1=0, select bank0
  6192  014D  0847               	movf	?_trapmf,w
  6193  014E  1683               	bsf	3,5	;RP0=1, select bank1
  6194  014F  1303               	bcf	3,6	;RP1=0, select bank1
  6195  0150  00A0               	movwf	_fitemp^(0+128)
  6196  0151  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0152  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0153  0848               	movf	?_trapmf+1,w
  6199  0154  1683               	bsf	3,5	;RP0=1, select bank1
  6200  0155  1303               	bcf	3,6	;RP1=0, select bank1
  6201  0156  00A1               	movwf	(_fitemp+1)^(0+128)
  6202  0157  1283               	bcf	3,5	;RP0=0, select bank0
  6203  0158  1303               	bcf	3,6	;RP1=0, select bank0
  6204  0159  0849               	movf	?_trapmf+2,w
  6205  015A  1683               	bsf	3,5	;RP0=1, select bank1
  6206  015B  1303               	bcf	3,6	;RP1=0, select bank1
  6207  015C  00A2               	movwf	(_fitemp+2)^(0+128)
  6208                           
  6209                           ;main.c: 164: fop_rule1 = max_val(fitemp,0.1);
  6210  015D  0820               	movf	_fitemp^(0+128),w
  6211  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6212  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0160  00A0               	movwf	max_val@a
  6214  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6215  0162  1303               	bcf	3,6	;RP1=0, select bank1
  6216  0163  0821               	movf	(_fitemp+1)^(0+128),w
  6217  0164  1283               	bcf	3,5	;RP0=0, select bank0
  6218  0165  1303               	bcf	3,6	;RP1=0, select bank0
  6219  0166  00A1               	movwf	max_val@a+1
  6220  0167  1683               	bsf	3,5	;RP0=1, select bank1
  6221  0168  1303               	bcf	3,6	;RP1=0, select bank1
  6222  0169  0822               	movf	(_fitemp+2)^(0+128),w
  6223  016A  1283               	bcf	3,5	;RP0=0, select bank0
  6224  016B  1303               	bcf	3,6	;RP1=0, select bank0
  6225  016C  00A2               	movwf	max_val@a+2
  6226  016D  30CD               	movlw	205
  6227  016E  00A3               	movwf	max_val@b
  6228  016F  30CC               	movlw	204
  6229  0170  00A4               	movwf	max_val@b+1
  6230  0171  303D               	movlw	61
  6231  0172  00A5               	movwf	max_val@b+2
  6232  0173  160A  118A  218B  120A  118A  	fcall	_max_val
  6233  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6235  017A  0820               	movf	?_max_val,w
  6236  017B  1683               	bsf	3,5	;RP0=1, select bank1
  6237  017C  1303               	bcf	3,6	;RP1=0, select bank1
  6238  017D  00A3               	movwf	_fop_rule1^(0+128)
  6239  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6240  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6241  0180  0821               	movf	?_max_val+1,w
  6242  0181  1683               	bsf	3,5	;RP0=1, select bank1
  6243  0182  1303               	bcf	3,6	;RP1=0, select bank1
  6244  0183  00A4               	movwf	(_fop_rule1+1)^(0+128)
  6245  0184  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0185  1303               	bcf	3,6	;RP1=0, select bank0
  6247  0186  0822               	movf	?_max_val+2,w
  6248  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6249  0188  1303               	bcf	3,6	;RP1=0, select bank1
  6250  0189  00A5               	movwf	(_fop_rule1+2)^(0+128)
  6251                           
  6252                           ;main.c: 167: x=0;
  6253  018A  3000               	movlw	0
  6254  018B  00B5               	movwf	_x^(0+128)
  6255  018C  3000               	movlw	0
  6256  018D  00B6               	movwf	(_x+1)^(0+128)
  6257  018E  3000               	movlw	0
  6258  018F  00B7               	movwf	(_x+2)^(0+128)
  6259                           
  6260                           ;main.c: 168: y=0;
  6261  0190  3000               	movlw	0
  6262  0191  00B8               	movwf	_y^(0+128)
  6263  0192  3000               	movlw	0
  6264  0193  00B9               	movwf	(_y+1)^(0+128)
  6265  0194  3000               	movlw	0
  6266  0195  00BA               	movwf	(_y+2)^(0+128)
  6267                           
  6268                           ;main.c: 169: for (int a=0; a<=90; a++)
  6269  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0197  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0198  01D9               	clrf	Fuzzy@a
  6272  0199  01DA               	clrf	Fuzzy@a+1
  6273  019A  085A               	movf	Fuzzy@a+1,w
  6274  019B  3A80               	xorlw	128
  6275  019C  00FF               	movwf	127
  6276  019D  3080               	movlw	128
  6277  019E  027F               	subwf	127,w
  6278  019F  1D03               	skipz
  6279  01A0  29A3               	goto	u338_25
  6280  01A1  305B               	movlw	91
  6281  01A2  0259               	subwf	Fuzzy@a,w
  6282  01A3                     u338_25:	
  6283  01A3  1803               	btfsc	3,0
  6284  01A4  2A70               	goto	i1l2772
  6285  01A5                     i1l2762:	
  6286                           
  6287                           ;main.c: 170: {
  6288                           ;main.c: 171: y = trapmf(x,0,0,13,32);
  6289  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  6290  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  6291  01A7  0835               	movf	_x^(0+128),w
  6292  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6293  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  6294  01AA  00C7               	movwf	trapmf@x
  6295  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6296  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  6297  01AD  0836               	movf	(_x+1)^(0+128),w
  6298  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  6299  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  6300  01B0  00C8               	movwf	trapmf@x+1
  6301  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  6302  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  6303  01B3  0837               	movf	(_x+2)^(0+128),w
  6304  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  6305  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  6306  01B6  00C9               	movwf	trapmf@x+2
  6307  01B7  3000               	movlw	0
  6308  01B8  00CA               	movwf	trapmf@a
  6309  01B9  3000               	movlw	0
  6310  01BA  00CB               	movwf	trapmf@a+1
  6311  01BB  3000               	movlw	0
  6312  01BC  00CC               	movwf	trapmf@a+2
  6313  01BD  3000               	movlw	0
  6314  01BE  00CD               	movwf	trapmf@b
  6315  01BF  3000               	movlw	0
  6316  01C0  00CE               	movwf	trapmf@b+1
  6317  01C1  3000               	movlw	0
  6318  01C2  00CF               	movwf	trapmf@b+2
  6319  01C3  3000               	movlw	0
  6320  01C4  00D0               	movwf	trapmf@c
  6321  01C5  3050               	movlw	80
  6322  01C6  00D1               	movwf	trapmf@c+1
  6323  01C7  3041               	movlw	65
  6324  01C8  00D2               	movwf	trapmf@c+2
  6325  01C9  3000               	movlw	0
  6326  01CA  00D3               	movwf	trapmf@d
  6327  01CB  3000               	movlw	0
  6328  01CC  00D4               	movwf	trapmf@d+1
  6329  01CD  3042               	movlw	66
  6330  01CE  00D5               	movwf	trapmf@d+2
  6331  01CF  120A  158A  226C  120A  118A  	fcall	_trapmf
  6332  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6333  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  6334  01D6  0847               	movf	?_trapmf,w
  6335  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  6336  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  6337  01D9  00B8               	movwf	_y^(0+128)
  6338  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6339  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6340  01DC  0848               	movf	?_trapmf+1,w
  6341  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  6342  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  6343  01DF  00B9               	movwf	(_y+1)^(0+128)
  6344  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6345  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  6346  01E2  0849               	movf	?_trapmf+2,w
  6347  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6348  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  6349  01E5  00BA               	movwf	(_y+2)^(0+128)
  6350                           
  6351                           ;main.c: 173: if (y > fop_rule1)
  6352  01E6  0823               	movf	_fop_rule1^(0+128),w
  6353  01E7  00F0               	movwf	___ftge@ff1
  6354  01E8  0824               	movf	(_fop_rule1+1)^(0+128),w
  6355  01E9  00F1               	movwf	___ftge@ff1+1
  6356  01EA  0825               	movf	(_fop_rule1+2)^(0+128),w
  6357  01EB  00F2               	movwf	___ftge@ff1+2
  6358  01EC  0838               	movf	_y^(0+128),w
  6359  01ED  00F3               	movwf	___ftge@ff2
  6360  01EE  0839               	movf	(_y+1)^(0+128),w
  6361  01EF  00F4               	movwf	___ftge@ff2+1
  6362  01F0  083A               	movf	(_y+2)^(0+128),w
  6363  01F1  00F5               	movwf	___ftge@ff2+2
  6364  01F2  160A  118A  23D9  120A  118A  	fcall	___ftge
  6365  01F7  1803               	btfsc	3,0
  6366  01F8  2A09               	goto	i1l2766
  6367                           
  6368                           ;main.c: 174: {
  6369                           ;main.c: 175: mantem += fop_rule1;
  6370  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  6371  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  6372  01FB  0823               	movf	_fop_rule1^(0+128),w
  6373  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  6374  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  6375  01FE  00AA               	movwf	___ftadd@f1
  6376  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  6377  0200  1303               	bcf	3,6	;RP1=0, select bank1
  6378  0201  0824               	movf	(_fop_rule1+1)^(0+128),w
  6379  0202  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0203  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0204  00AB               	movwf	___ftadd@f1+1
  6382  0205  1683               	bsf	3,5	;RP0=1, select bank1
  6383  0206  1303               	bcf	3,6	;RP1=0, select bank1
  6384  0207  0825               	movf	(_fop_rule1+2)^(0+128),w
  6385  0208  2A18               	goto	L3
  6386  0209                     i1l2766:	
  6387                           ;main.c: 176: }
  6388                           
  6389                           
  6390                           ;main.c: 177: else
  6391                           ;main.c: 178: {
  6392                           ;main.c: 179: mantem += y;
  6393  0209  1683               	bsf	3,5	;RP0=1, select bank1
  6394  020A  1303               	bcf	3,6	;RP1=0, select bank1
  6395  020B  0838               	movf	_y^(0+128),w
  6396  020C  1283               	bcf	3,5	;RP0=0, select bank0
  6397  020D  1303               	bcf	3,6	;RP1=0, select bank0
  6398  020E  00AA               	movwf	___ftadd@f1
  6399  020F  1683               	bsf	3,5	;RP0=1, select bank1
  6400  0210  1303               	bcf	3,6	;RP1=0, select bank1
  6401  0211  0839               	movf	(_y+1)^(0+128),w
  6402  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6403  0213  1303               	bcf	3,6	;RP1=0, select bank0
  6404  0214  00AB               	movwf	___ftadd@f1+1
  6405  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6406  0216  1303               	bcf	3,6	;RP1=0, select bank1
  6407  0217  083A               	movf	(_y+2)^(0+128),w
  6408  0218                     L3:	
  6409  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6410  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6411  021A  00AC               	movwf	___ftadd@f1+2
  6412  021B  0866               	movf	Fuzzy@mantem,w
  6413  021C  00AD               	movwf	___ftadd@f2
  6414  021D  0867               	movf	Fuzzy@mantem+1,w
  6415  021E  00AE               	movwf	___ftadd@f2+1
  6416  021F  0868               	movf	Fuzzy@mantem+2,w
  6417  0220  00AF               	movwf	___ftadd@f2+2
  6418  0221  120A  118A  26EE  120A  118A  	fcall	___ftadd
  6419  0226  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0227  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0228  082A               	movf	?___ftadd,w
  6422  0229  00E6               	movwf	Fuzzy@mantem
  6423  022A  082B               	movf	?___ftadd+1,w
  6424  022B  00E7               	movwf	Fuzzy@mantem+1
  6425  022C  082C               	movf	?___ftadd+2,w
  6426  022D  00E8               	movwf	Fuzzy@mantem+2
  6427                           
  6428                           ;main.c: 180: }
  6429                           ;main.c: 182: x=x+1;
  6430  022E  3000               	movlw	0
  6431  022F  00AA               	movwf	___ftadd@f1
  6432  0230  3080               	movlw	128
  6433  0231  00AB               	movwf	___ftadd@f1+1
  6434  0232  303F               	movlw	63
  6435  0233  00AC               	movwf	___ftadd@f1+2
  6436  0234  1683               	bsf	3,5	;RP0=1, select bank1
  6437  0235  1303               	bcf	3,6	;RP1=0, select bank1
  6438  0236  0835               	movf	_x^(0+128),w
  6439  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0238  1303               	bcf	3,6	;RP1=0, select bank0
  6441  0239  00AD               	movwf	___ftadd@f2
  6442  023A  1683               	bsf	3,5	;RP0=1, select bank1
  6443  023B  1303               	bcf	3,6	;RP1=0, select bank1
  6444  023C  0836               	movf	(_x+1)^(0+128),w
  6445  023D  1283               	bcf	3,5	;RP0=0, select bank0
  6446  023E  1303               	bcf	3,6	;RP1=0, select bank0
  6447  023F  00AE               	movwf	___ftadd@f2+1
  6448  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6449  0241  1303               	bcf	3,6	;RP1=0, select bank1
  6450  0242  0837               	movf	(_x+2)^(0+128),w
  6451  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0244  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0245  00AF               	movwf	___ftadd@f2+2
  6454  0246  120A  118A  26EE  120A  118A  	fcall	___ftadd
  6455  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6456  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6457  024D  082A               	movf	?___ftadd,w
  6458  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6459  024F  1303               	bcf	3,6	;RP1=0, select bank1
  6460  0250  00B5               	movwf	_x^(0+128)
  6461  0251  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0252  1303               	bcf	3,6	;RP1=0, select bank0
  6463  0253  082B               	movf	?___ftadd+1,w
  6464  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6465  0255  1303               	bcf	3,6	;RP1=0, select bank1
  6466  0256  00B6               	movwf	(_x+1)^(0+128)
  6467  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6468  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6469  0259  082C               	movf	?___ftadd+2,w
  6470  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6471  025B  1303               	bcf	3,6	;RP1=0, select bank1
  6472  025C  00B7               	movwf	(_x+2)^(0+128)
  6473  025D  3001               	movlw	1
  6474  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6475  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0260  07D9               	addwf	Fuzzy@a,f
  6477  0261  1803               	skipnc
  6478  0262  0ADA               	incf	Fuzzy@a+1,f
  6479  0263  3000               	movlw	0
  6480  0264  07DA               	addwf	Fuzzy@a+1,f
  6481  0265  085A               	movf	Fuzzy@a+1,w
  6482  0266  3A80               	xorlw	128
  6483  0267  00FF               	movwf	127
  6484  0268  3080               	movlw	128
  6485  0269  027F               	subwf	127,w
  6486  026A  1D03               	skipz
  6487  026B  2A6E               	goto	u340_25
  6488  026C  305B               	movlw	91
  6489  026D  0259               	subwf	Fuzzy@a,w
  6490  026E                     u340_25:	
  6491  026E  1C03               	skipc
  6492  026F  29A5               	goto	i1l2762
  6493  0270                     i1l2772:	
  6494                           
  6495                           ;main.c: 183: }
  6496                           ;main.c: 185: }
  6497                           ;main.c: 191: if ((temp > 20) && (temp < 70))
  6498  0270  3000               	movlw	0
  6499  0271  00F0               	movwf	___ftge@ff1
  6500  0272  30A0               	movlw	160
  6501  0273  00F1               	movwf	___ftge@ff1+1
  6502  0274  3041               	movlw	65
  6503  0275  00F2               	movwf	___ftge@ff1+2
  6504  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6505  0277  1303               	bcf	3,6	;RP1=0, select bank1
  6506  0278  082F               	movf	_temp^(0+128),w
  6507  0279  00F3               	movwf	___ftge@ff2
  6508  027A  0830               	movf	(_temp+1)^(0+128),w
  6509  027B  00F4               	movwf	___ftge@ff2+1
  6510  027C  0831               	movf	(_temp+2)^(0+128),w
  6511  027D  00F5               	movwf	___ftge@ff2+2
  6512  027E  160A  118A  23D9  120A  118A  	fcall	___ftge
  6513  0283  1803               	btfsc	3,0
  6514  0284  2BE2               	goto	i1l2798
  6515  0285  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0286  1303               	bcf	3,6	;RP1=0, select bank1
  6517  0287  082F               	movf	_temp^(0+128),w
  6518  0288  00F0               	movwf	___ftge@ff1
  6519  0289  0830               	movf	(_temp+1)^(0+128),w
  6520  028A  00F1               	movwf	___ftge@ff1+1
  6521  028B  0831               	movf	(_temp+2)^(0+128),w
  6522  028C  00F2               	movwf	___ftge@ff1+2
  6523  028D  3000               	movlw	0
  6524  028E  00F3               	movwf	___ftge@ff2
  6525  028F  308C               	movlw	140
  6526  0290  00F4               	movwf	___ftge@ff2+1
  6527  0291  3042               	movlw	66
  6528  0292  00F5               	movwf	___ftge@ff2+2
  6529  0293  160A  118A  23D9  120A  118A  	fcall	___ftge
  6530  0298  1803               	btfsc	3,0
  6531  0299  2BE2               	goto	i1l2798
  6532                           
  6533                           ;main.c: 192: {
  6534                           ;main.c: 194: fitemp = trimf(temp, 9, 45, 81);
  6535  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6536  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6537  029C  082F               	movf	_temp^(0+128),w
  6538  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6539  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6540  029F  00C7               	movwf	trimf@x
  6541  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6542  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6543  02A2  0830               	movf	(_temp+1)^(0+128),w
  6544  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6545  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6546  02A5  00C8               	movwf	trimf@x+1
  6547  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6548  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  6549  02A8  0831               	movf	(_temp+2)^(0+128),w
  6550  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6551  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6552  02AB  00C9               	movwf	trimf@x+2
  6553  02AC  3000               	movlw	0
  6554  02AD  00CA               	movwf	trimf@a
  6555  02AE  3010               	movlw	16
  6556  02AF  00CB               	movwf	trimf@a+1
  6557  02B0  3041               	movlw	65
  6558  02B1  00CC               	movwf	trimf@a+2
  6559  02B2  3000               	movlw	0
  6560  02B3  00CD               	movwf	trimf@b
  6561  02B4  3034               	movlw	52
  6562  02B5  00CE               	movwf	trimf@b+1
  6563  02B6  3042               	movlw	66
  6564  02B7  00CF               	movwf	trimf@b+2
  6565  02B8  3000               	movlw	0
  6566  02B9  00D0               	movwf	trimf@c
  6567  02BA  30A2               	movlw	162
  6568  02BB  00D1               	movwf	trimf@c+1
  6569  02BC  3042               	movlw	66
  6570  02BD  00D2               	movwf	trimf@c+2
  6571  02BE  160A  118A  26DC  120A  118A  	fcall	_trimf
  6572  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  6573  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  6574  02C5  0847               	movf	?_trimf,w
  6575  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6576  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  6577  02C8  00A0               	movwf	_fitemp^(0+128)
  6578  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6579  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  6580  02CB  0848               	movf	?_trimf+1,w
  6581  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  6582  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  6583  02CE  00A1               	movwf	(_fitemp+1)^(0+128)
  6584  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6585  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  6586  02D1  0849               	movf	?_trimf+2,w
  6587  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  6588  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  6589  02D4  00A2               	movwf	(_fitemp+2)^(0+128)
  6590                           
  6591                           ;main.c: 197: fop_rule2 = max_val(fitemp,0.1);
  6592  02D5  0820               	movf	_fitemp^(0+128),w
  6593  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  6594  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  6595  02D8  00A0               	movwf	max_val@a
  6596  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6597  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6598  02DB  0821               	movf	(_fitemp+1)^(0+128),w
  6599  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6600  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6601  02DE  00A1               	movwf	max_val@a+1
  6602  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6603  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  6604  02E1  0822               	movf	(_fitemp+2)^(0+128),w
  6605  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6606  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  6607  02E4  00A2               	movwf	max_val@a+2
  6608  02E5  30CD               	movlw	205
  6609  02E6  00A3               	movwf	max_val@b
  6610  02E7  30CC               	movlw	204
  6611  02E8  00A4               	movwf	max_val@b+1
  6612  02E9  303D               	movlw	61
  6613  02EA  00A5               	movwf	max_val@b+2
  6614  02EB  160A  118A  218B  120A  118A  	fcall	_max_val
  6615  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6616  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6617  02F2  0820               	movf	?_max_val,w
  6618  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6619  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  6620  02F5  00A6               	movwf	_fop_rule2^(0+128)
  6621  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6622  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6623  02F8  0821               	movf	?_max_val+1,w
  6624  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  6625  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6626  02FB  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6627  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6628  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6629  02FE  0822               	movf	?_max_val+2,w
  6630  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  6631  0300  1303               	bcf	3,6	;RP1=0, select bank1
  6632  0301  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6633                           
  6634                           ;main.c: 200: x=0;
  6635  0302  3000               	movlw	0
  6636  0303  00B5               	movwf	_x^(0+128)
  6637  0304  3000               	movlw	0
  6638  0305  00B6               	movwf	(_x+1)^(0+128)
  6639  0306  3000               	movlw	0
  6640  0307  00B7               	movwf	(_x+2)^(0+128)
  6641                           
  6642                           ;main.c: 201: y=0;
  6643  0308  3000               	movlw	0
  6644  0309  00B8               	movwf	_y^(0+128)
  6645  030A  3000               	movlw	0
  6646  030B  00B9               	movwf	(_y+1)^(0+128)
  6647  030C  3000               	movlw	0
  6648  030D  00BA               	movwf	(_y+2)^(0+128)
  6649                           
  6650                           ;main.c: 202: for (int a=0; a<=90; a++)
  6651  030E  1283               	bcf	3,5	;RP0=0, select bank0
  6652  030F  1303               	bcf	3,6	;RP1=0, select bank0
  6653  0310  01DB               	clrf	Fuzzy@a_232
  6654  0311  01DC               	clrf	Fuzzy@a_232+1
  6655  0312  085C               	movf	Fuzzy@a_232+1,w
  6656  0313  3A80               	xorlw	128
  6657  0314  00FF               	movwf	127
  6658  0315  3080               	movlw	128
  6659  0316  027F               	subwf	127,w
  6660  0317  1D03               	skipz
  6661  0318  2B1B               	goto	u343_25
  6662  0319  305B               	movlw	91
  6663  031A  025B               	subwf	Fuzzy@a_232,w
  6664  031B                     u343_25:	
  6665  031B  1803               	btfsc	3,0
  6666  031C  2BE2               	goto	i1l2798
  6667  031D                     i1l2788:	
  6668                           
  6669                           ;main.c: 203: {
  6670                           ;main.c: 204: y = trimf(x, 9, 45, 81);
  6671  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6672  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6673  031F  0835               	movf	_x^(0+128),w
  6674  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0322  00C7               	movwf	trimf@x
  6677  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6678  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6679  0325  0836               	movf	(_x+1)^(0+128),w
  6680  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6681  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6682  0328  00C8               	movwf	trimf@x+1
  6683  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6684  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6685  032B  0837               	movf	(_x+2)^(0+128),w
  6686  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6687  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6688  032E  00C9               	movwf	trimf@x+2
  6689  032F  3000               	movlw	0
  6690  0330  00CA               	movwf	trimf@a
  6691  0331  3010               	movlw	16
  6692  0332  00CB               	movwf	trimf@a+1
  6693  0333  3041               	movlw	65
  6694  0334  00CC               	movwf	trimf@a+2
  6695  0335  3000               	movlw	0
  6696  0336  00CD               	movwf	trimf@b
  6697  0337  3034               	movlw	52
  6698  0338  00CE               	movwf	trimf@b+1
  6699  0339  3042               	movlw	66
  6700  033A  00CF               	movwf	trimf@b+2
  6701  033B  3000               	movlw	0
  6702  033C  00D0               	movwf	trimf@c
  6703  033D  30A2               	movlw	162
  6704  033E  00D1               	movwf	trimf@c+1
  6705  033F  3042               	movlw	66
  6706  0340  00D2               	movwf	trimf@c+2
  6707  0341  160A  118A  26DC  120A  118A  	fcall	_trimf
  6708  0346  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0347  1303               	bcf	3,6	;RP1=0, select bank0
  6710  0348  0847               	movf	?_trimf,w
  6711  0349  1683               	bsf	3,5	;RP0=1, select bank1
  6712  034A  1303               	bcf	3,6	;RP1=0, select bank1
  6713  034B  00B8               	movwf	_y^(0+128)
  6714  034C  1283               	bcf	3,5	;RP0=0, select bank0
  6715  034D  1303               	bcf	3,6	;RP1=0, select bank0
  6716  034E  0848               	movf	?_trimf+1,w
  6717  034F  1683               	bsf	3,5	;RP0=1, select bank1
  6718  0350  1303               	bcf	3,6	;RP1=0, select bank1
  6719  0351  00B9               	movwf	(_y+1)^(0+128)
  6720  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6721  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6722  0354  0849               	movf	?_trimf+2,w
  6723  0355  1683               	bsf	3,5	;RP0=1, select bank1
  6724  0356  1303               	bcf	3,6	;RP1=0, select bank1
  6725  0357  00BA               	movwf	(_y+2)^(0+128)
  6726                           
  6727                           ;main.c: 206: if (y >= fop_rule2)
  6728  0358  0838               	movf	_y^(0+128),w
  6729  0359  00F0               	movwf	___ftge@ff1
  6730  035A  0839               	movf	(_y+1)^(0+128),w
  6731  035B  00F1               	movwf	___ftge@ff1+1
  6732  035C  083A               	movf	(_y+2)^(0+128),w
  6733  035D  00F2               	movwf	___ftge@ff1+2
  6734  035E  0826               	movf	_fop_rule2^(0+128),w
  6735  035F  00F3               	movwf	___ftge@ff2
  6736  0360  0827               	movf	(_fop_rule2+1)^(0+128),w
  6737  0361  00F4               	movwf	___ftge@ff2+1
  6738  0362  0828               	movf	(_fop_rule2+2)^(0+128),w
  6739  0363  00F5               	movwf	___ftge@ff2+2
  6740  0364  160A  118A  23D9  120A  118A  	fcall	___ftge
  6741  0369  1C03               	btfss	3,0
  6742  036A  2B7B               	goto	i1l2792
  6743                           
  6744                           ;main.c: 207: {
  6745                           ;main.c: 208: reduz += fop_rule2;
  6746  036B  1683               	bsf	3,5	;RP0=1, select bank1
  6747  036C  1303               	bcf	3,6	;RP1=0, select bank1
  6748  036D  0826               	movf	_fop_rule2^(0+128),w
  6749  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6750  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6751  0370  00AA               	movwf	___ftadd@f1
  6752  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6753  0372  1303               	bcf	3,6	;RP1=0, select bank1
  6754  0373  0827               	movf	(_fop_rule2+1)^(0+128),w
  6755  0374  1283               	bcf	3,5	;RP0=0, select bank0
  6756  0375  1303               	bcf	3,6	;RP1=0, select bank0
  6757  0376  00AB               	movwf	___ftadd@f1+1
  6758  0377  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0378  1303               	bcf	3,6	;RP1=0, select bank1
  6760  0379  0828               	movf	(_fop_rule2+2)^(0+128),w
  6761  037A  2B8A               	goto	L4
  6762  037B                     i1l2792:	
  6763                           ;main.c: 209: }
  6764                           
  6765                           
  6766                           ;main.c: 210: else
  6767                           ;main.c: 211: {
  6768                           ;main.c: 212: reduz += y;
  6769  037B  1683               	bsf	3,5	;RP0=1, select bank1
  6770  037C  1303               	bcf	3,6	;RP1=0, select bank1
  6771  037D  0838               	movf	_y^(0+128),w
  6772  037E  1283               	bcf	3,5	;RP0=0, select bank0
  6773  037F  1303               	bcf	3,6	;RP1=0, select bank0
  6774  0380  00AA               	movwf	___ftadd@f1
  6775  0381  1683               	bsf	3,5	;RP0=1, select bank1
  6776  0382  1303               	bcf	3,6	;RP1=0, select bank1
  6777  0383  0839               	movf	(_y+1)^(0+128),w
  6778  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6780  0386  00AB               	movwf	___ftadd@f1+1
  6781  0387  1683               	bsf	3,5	;RP0=1, select bank1
  6782  0388  1303               	bcf	3,6	;RP1=0, select bank1
  6783  0389  083A               	movf	(_y+2)^(0+128),w
  6784  038A                     L4:	
  6785  038A  1283               	bcf	3,5	;RP0=0, select bank0
  6786  038B  1303               	bcf	3,6	;RP1=0, select bank0
  6787  038C  00AC               	movwf	___ftadd@f1+2
  6788  038D  0869               	movf	Fuzzy@reduz,w
  6789  038E  00AD               	movwf	___ftadd@f2
  6790  038F  086A               	movf	Fuzzy@reduz+1,w
  6791  0390  00AE               	movwf	___ftadd@f2+1
  6792  0391  086B               	movf	Fuzzy@reduz+2,w
  6793  0392  00AF               	movwf	___ftadd@f2+2
  6794  0393  120A  118A  26EE  120A  118A  	fcall	___ftadd
  6795  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6796  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6797  039A  082A               	movf	?___ftadd,w
  6798  039B  00E9               	movwf	Fuzzy@reduz
  6799  039C  082B               	movf	?___ftadd+1,w
  6800  039D  00EA               	movwf	Fuzzy@reduz+1
  6801  039E  082C               	movf	?___ftadd+2,w
  6802  039F  00EB               	movwf	Fuzzy@reduz+2
  6803                           
  6804                           ;main.c: 213: }
  6805                           ;main.c: 215: x=x+1;
  6806  03A0  3000               	movlw	0
  6807  03A1  00AA               	movwf	___ftadd@f1
  6808  03A2  3080               	movlw	128
  6809  03A3  00AB               	movwf	___ftadd@f1+1
  6810  03A4  303F               	movlw	63
  6811  03A5  00AC               	movwf	___ftadd@f1+2
  6812  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6813  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6814  03A8  0835               	movf	_x^(0+128),w
  6815  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6816  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6817  03AB  00AD               	movwf	___ftadd@f2
  6818  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6819  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6820  03AE  0836               	movf	(_x+1)^(0+128),w
  6821  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  6822  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  6823  03B1  00AE               	movwf	___ftadd@f2+1
  6824  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  6825  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  6826  03B4  0837               	movf	(_x+2)^(0+128),w
  6827  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  6828  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  6829  03B7  00AF               	movwf	___ftadd@f2+2
  6830  03B8  120A  118A  26EE  120A  118A  	fcall	___ftadd
  6831  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6832  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6833  03BF  082A               	movf	?___ftadd,w
  6834  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  6835  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  6836  03C2  00B5               	movwf	_x^(0+128)
  6837  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6838  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6839  03C5  082B               	movf	?___ftadd+1,w
  6840  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6841  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6842  03C8  00B6               	movwf	(_x+1)^(0+128)
  6843  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6844  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6845  03CB  082C               	movf	?___ftadd+2,w
  6846  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  6847  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  6848  03CE  00B7               	movwf	(_x+2)^(0+128)
  6849  03CF  3001               	movlw	1
  6850  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  6851  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  6852  03D2  07DB               	addwf	Fuzzy@a_232,f
  6853  03D3  1803               	skipnc
  6854  03D4  0ADC               	incf	Fuzzy@a_232+1,f
  6855  03D5  3000               	movlw	0
  6856  03D6  07DC               	addwf	Fuzzy@a_232+1,f
  6857  03D7  085C               	movf	Fuzzy@a_232+1,w
  6858  03D8  3A80               	xorlw	128
  6859  03D9  00FF               	movwf	127
  6860  03DA  3080               	movlw	128
  6861  03DB  027F               	subwf	127,w
  6862  03DC  1D03               	skipz
  6863  03DD  2BE0               	goto	u345_25
  6864  03DE  305B               	movlw	91
  6865  03DF  025B               	subwf	Fuzzy@a_232,w
  6866  03E0                     u345_25:	
  6867  03E0  1C03               	skipc
  6868  03E1  2B1D               	goto	i1l2788
  6869  03E2                     i1l2798:	
  6870                           
  6871                           ;main.c: 216: }
  6872                           ;main.c: 218: }
  6873                           ;main.c: 224: if (temp > 70 )
  6874  03E2  3000               	movlw	0
  6875  03E3  00F0               	movwf	___ftge@ff1
  6876  03E4  308C               	movlw	140
  6877  03E5  00F1               	movwf	___ftge@ff1+1
  6878  03E6  3042               	movlw	66
  6879  03E7  00F2               	movwf	___ftge@ff1+2
  6880  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6881  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6882  03EA  082F               	movf	_temp^(0+128),w
  6883  03EB  00F3               	movwf	___ftge@ff2
  6884  03EC  0830               	movf	(_temp+1)^(0+128),w
  6885  03ED  00F4               	movwf	___ftge@ff2+1
  6886  03EE  0831               	movf	(_temp+2)^(0+128),w
  6887  03EF  00F5               	movwf	___ftge@ff2+2
  6888  03F0  160A  118A  23D9  120A  118A  	fcall	___ftge
  6889  03F5  1803               	btfsc	3,0
  6890  03F6  2D4B               	goto	i1l2822
  6891                           
  6892                           ;main.c: 225: {
  6893                           ;main.c: 227: fitemp = trapmf(temp, 62, 79, 90, 90);
  6894  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  6895  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  6896  03F9  082F               	movf	_temp^(0+128),w
  6897  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  6898  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  6899  03FC  00C7               	movwf	trapmf@x
  6900  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  6901  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  6902  03FF  0830               	movf	(_temp+1)^(0+128),w
  6903  0400  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0401  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0402  00C8               	movwf	trapmf@x+1
  6906  0403  1683               	bsf	3,5	;RP0=1, select bank1
  6907  0404  1303               	bcf	3,6	;RP1=0, select bank1
  6908  0405  0831               	movf	(_temp+2)^(0+128),w
  6909  0406  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0407  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0408  00C9               	movwf	trapmf@x+2
  6912  0409  3000               	movlw	0
  6913  040A  00CA               	movwf	trapmf@a
  6914  040B  3078               	movlw	120
  6915  040C  00CB               	movwf	trapmf@a+1
  6916  040D  3042               	movlw	66
  6917  040E  00CC               	movwf	trapmf@a+2
  6918  040F  3000               	movlw	0
  6919  0410  00CD               	movwf	trapmf@b
  6920  0411  309E               	movlw	158
  6921  0412  00CE               	movwf	trapmf@b+1
  6922  0413  3042               	movlw	66
  6923  0414  00CF               	movwf	trapmf@b+2
  6924  0415  3000               	movlw	0
  6925  0416  00D0               	movwf	trapmf@c
  6926  0417  30B4               	movlw	180
  6927  0418  00D1               	movwf	trapmf@c+1
  6928  0419  3042               	movlw	66
  6929  041A  00D2               	movwf	trapmf@c+2
  6930  041B  3000               	movlw	0
  6931  041C  00D3               	movwf	trapmf@d
  6932  041D  30B4               	movlw	180
  6933  041E  00D4               	movwf	trapmf@d+1
  6934  041F  3042               	movlw	66
  6935  0420  00D5               	movwf	trapmf@d+2
  6936  0421  120A  158A  226C  120A  118A  	fcall	_trapmf
  6937  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6938  0427  1303               	bcf	3,6	;RP1=0, select bank0
  6939  0428  0847               	movf	?_trapmf,w
  6940  0429  1683               	bsf	3,5	;RP0=1, select bank1
  6941  042A  1303               	bcf	3,6	;RP1=0, select bank1
  6942  042B  00A0               	movwf	_fitemp^(0+128)
  6943  042C  1283               	bcf	3,5	;RP0=0, select bank0
  6944  042D  1303               	bcf	3,6	;RP1=0, select bank0
  6945  042E  0848               	movf	?_trapmf+1,w
  6946  042F  1683               	bsf	3,5	;RP0=1, select bank1
  6947  0430  1303               	bcf	3,6	;RP1=0, select bank1
  6948  0431  00A1               	movwf	(_fitemp+1)^(0+128)
  6949  0432  1283               	bcf	3,5	;RP0=0, select bank0
  6950  0433  1303               	bcf	3,6	;RP1=0, select bank0
  6951  0434  0849               	movf	?_trapmf+2,w
  6952  0435  1683               	bsf	3,5	;RP0=1, select bank1
  6953  0436  1303               	bcf	3,6	;RP1=0, select bank1
  6954  0437  00A2               	movwf	(_fitemp+2)^(0+128)
  6955                           
  6956                           ;main.c: 231: fop_rule3 = max_val(fitemp,0.1);
  6957  0438  0820               	movf	_fitemp^(0+128),w
  6958  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6959  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6960  043B  00A0               	movwf	max_val@a
  6961  043C  1683               	bsf	3,5	;RP0=1, select bank1
  6962  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6963  043E  0821               	movf	(_fitemp+1)^(0+128),w
  6964  043F  1283               	bcf	3,5	;RP0=0, select bank0
  6965  0440  1303               	bcf	3,6	;RP1=0, select bank0
  6966  0441  00A1               	movwf	max_val@a+1
  6967  0442  1683               	bsf	3,5	;RP0=1, select bank1
  6968  0443  1303               	bcf	3,6	;RP1=0, select bank1
  6969  0444  0822               	movf	(_fitemp+2)^(0+128),w
  6970  0445  1283               	bcf	3,5	;RP0=0, select bank0
  6971  0446  1303               	bcf	3,6	;RP1=0, select bank0
  6972  0447  00A2               	movwf	max_val@a+2
  6973  0448  30CD               	movlw	205
  6974  0449  00A3               	movwf	max_val@b
  6975  044A  30CC               	movlw	204
  6976  044B  00A4               	movwf	max_val@b+1
  6977  044C  303D               	movlw	61
  6978  044D  00A5               	movwf	max_val@b+2
  6979  044E  160A  118A  218B  120A  118A  	fcall	_max_val
  6980  0453  1283               	bcf	3,5	;RP0=0, select bank0
  6981  0454  1303               	bcf	3,6	;RP1=0, select bank0
  6982  0455  0820               	movf	?_max_val,w
  6983  0456  1683               	bsf	3,5	;RP0=1, select bank1
  6984  0457  1303               	bcf	3,6	;RP1=0, select bank1
  6985  0458  00A9               	movwf	_fop_rule3^(0+128)
  6986  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6987  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6988  045B  0821               	movf	?_max_val+1,w
  6989  045C  1683               	bsf	3,5	;RP0=1, select bank1
  6990  045D  1303               	bcf	3,6	;RP1=0, select bank1
  6991  045E  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6992  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6993  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6994  0461  0822               	movf	?_max_val+2,w
  6995  0462  1683               	bsf	3,5	;RP0=1, select bank1
  6996  0463  1303               	bcf	3,6	;RP1=0, select bank1
  6997  0464  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6998                           
  6999                           ;main.c: 234: x=0;
  7000  0465  3000               	movlw	0
  7001  0466  00B5               	movwf	_x^(0+128)
  7002  0467  3000               	movlw	0
  7003  0468  00B6               	movwf	(_x+1)^(0+128)
  7004  0469  3000               	movlw	0
  7005  046A  00B7               	movwf	(_x+2)^(0+128)
  7006                           
  7007                           ;main.c: 235: y=0;
  7008  046B  3000               	movlw	0
  7009  046C  00B8               	movwf	_y^(0+128)
  7010  046D  3000               	movlw	0
  7011  046E  00B9               	movwf	(_y+1)^(0+128)
  7012  046F  3000               	movlw	0
  7013  0470  00BA               	movwf	(_y+2)^(0+128)
  7014                           
  7015                           ;main.c: 236: for (int a=0; a<=90; a++)
  7016  0471  1283               	bcf	3,5	;RP0=0, select bank0
  7017  0472  1303               	bcf	3,6	;RP1=0, select bank0
  7018  0473  01DD               	clrf	Fuzzy@a_233
  7019  0474  01DE               	clrf	Fuzzy@a_233+1
  7020  0475  085E               	movf	Fuzzy@a_233+1,w
  7021  0476  3A80               	xorlw	128
  7022  0477  00FF               	movwf	127
  7023  0478  3080               	movlw	128
  7024  0479  027F               	subwf	127,w
  7025  047A  1D03               	skipz
  7026  047B  2C7E               	goto	u347_25
  7027  047C  305B               	movlw	91
  7028  047D  025D               	subwf	Fuzzy@a_233,w
  7029  047E                     u347_25:	
  7030  047E  1803               	btfsc	3,0
  7031  047F  2D4B               	goto	i1l2822
  7032  0480                     i1l2812:	
  7033                           
  7034                           ;main.c: 237: {
  7035                           ;main.c: 238: y = trapmf(x, 62, 79, 90, 90);
  7036  0480  1683               	bsf	3,5	;RP0=1, select bank1
  7037  0481  1303               	bcf	3,6	;RP1=0, select bank1
  7038  0482  0835               	movf	_x^(0+128),w
  7039  0483  1283               	bcf	3,5	;RP0=0, select bank0
  7040  0484  1303               	bcf	3,6	;RP1=0, select bank0
  7041  0485  00C7               	movwf	trapmf@x
  7042  0486  1683               	bsf	3,5	;RP0=1, select bank1
  7043  0487  1303               	bcf	3,6	;RP1=0, select bank1
  7044  0488  0836               	movf	(_x+1)^(0+128),w
  7045  0489  1283               	bcf	3,5	;RP0=0, select bank0
  7046  048A  1303               	bcf	3,6	;RP1=0, select bank0
  7047  048B  00C8               	movwf	trapmf@x+1
  7048  048C  1683               	bsf	3,5	;RP0=1, select bank1
  7049  048D  1303               	bcf	3,6	;RP1=0, select bank1
  7050  048E  0837               	movf	(_x+2)^(0+128),w
  7051  048F  1283               	bcf	3,5	;RP0=0, select bank0
  7052  0490  1303               	bcf	3,6	;RP1=0, select bank0
  7053  0491  00C9               	movwf	trapmf@x+2
  7054  0492  3000               	movlw	0
  7055  0493  00CA               	movwf	trapmf@a
  7056  0494  3078               	movlw	120
  7057  0495  00CB               	movwf	trapmf@a+1
  7058  0496  3042               	movlw	66
  7059  0497  00CC               	movwf	trapmf@a+2
  7060  0498  3000               	movlw	0
  7061  0499  00CD               	movwf	trapmf@b
  7062  049A  309E               	movlw	158
  7063  049B  00CE               	movwf	trapmf@b+1
  7064  049C  3042               	movlw	66
  7065  049D  00CF               	movwf	trapmf@b+2
  7066  049E  3000               	movlw	0
  7067  049F  00D0               	movwf	trapmf@c
  7068  04A0  30B4               	movlw	180
  7069  04A1  00D1               	movwf	trapmf@c+1
  7070  04A2  3042               	movlw	66
  7071  04A3  00D2               	movwf	trapmf@c+2
  7072  04A4  3000               	movlw	0
  7073  04A5  00D3               	movwf	trapmf@d
  7074  04A6  30B4               	movlw	180
  7075  04A7  00D4               	movwf	trapmf@d+1
  7076  04A8  3042               	movlw	66
  7077  04A9  00D5               	movwf	trapmf@d+2
  7078  04AA  120A  158A  226C  120A  118A  	fcall	_trapmf
  7079  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  7080  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  7081  04B1  0847               	movf	?_trapmf,w
  7082  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  7083  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  7084  04B4  00B8               	movwf	_y^(0+128)
  7085  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  7086  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  7087  04B7  0848               	movf	?_trapmf+1,w
  7088  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  7089  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  7090  04BA  00B9               	movwf	(_y+1)^(0+128)
  7091  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  7092  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  7093  04BD  0849               	movf	?_trapmf+2,w
  7094  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  7095  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  7096  04C0  00BA               	movwf	(_y+2)^(0+128)
  7097                           
  7098                           ;main.c: 240: if (y >= fop_rule3)
  7099  04C1  0838               	movf	_y^(0+128),w
  7100  04C2  00F0               	movwf	___ftge@ff1
  7101  04C3  0839               	movf	(_y+1)^(0+128),w
  7102  04C4  00F1               	movwf	___ftge@ff1+1
  7103  04C5  083A               	movf	(_y+2)^(0+128),w
  7104  04C6  00F2               	movwf	___ftge@ff1+2
  7105  04C7  0829               	movf	_fop_rule3^(0+128),w
  7106  04C8  00F3               	movwf	___ftge@ff2
  7107  04C9  082A               	movf	(_fop_rule3+1)^(0+128),w
  7108  04CA  00F4               	movwf	___ftge@ff2+1
  7109  04CB  082B               	movf	(_fop_rule3+2)^(0+128),w
  7110  04CC  00F5               	movwf	___ftge@ff2+2
  7111  04CD  160A  118A  23D9  120A  118A  	fcall	___ftge
  7112  04D2  1C03               	btfss	3,0
  7113  04D3  2CE4               	goto	i1l2816
  7114                           
  7115                           ;main.c: 241: {
  7116                           ;main.c: 242: aumenta += fop_rule3;
  7117  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  7118  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  7119  04D6  0829               	movf	_fop_rule3^(0+128),w
  7120  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  7121  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  7122  04D9  00AA               	movwf	___ftadd@f1
  7123  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  7124  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  7125  04DC  082A               	movf	(_fop_rule3+1)^(0+128),w
  7126  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  7127  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  7128  04DF  00AB               	movwf	___ftadd@f1+1
  7129  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  7130  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  7131  04E2  082B               	movf	(_fop_rule3+2)^(0+128),w
  7132  04E3  2CF3               	goto	L5
  7133  04E4                     i1l2816:	
  7134                           ;main.c: 243: }
  7135                           
  7136                           
  7137                           ;main.c: 244: else
  7138                           ;main.c: 245: {
  7139                           ;main.c: 246: aumenta += y;
  7140  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  7141  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  7142  04E6  0838               	movf	_y^(0+128),w
  7143  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  7144  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  7145  04E9  00AA               	movwf	___ftadd@f1
  7146  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  7147  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  7148  04EC  0839               	movf	(_y+1)^(0+128),w
  7149  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  7150  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  7151  04EF  00AB               	movwf	___ftadd@f1+1
  7152  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  7153  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  7154  04F2  083A               	movf	(_y+2)^(0+128),w
  7155  04F3                     L5:	
  7156  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  7157  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  7158  04F5  00AC               	movwf	___ftadd@f1+2
  7159  04F6  086C               	movf	Fuzzy@aumenta,w
  7160  04F7  00AD               	movwf	___ftadd@f2
  7161  04F8  086D               	movf	Fuzzy@aumenta+1,w
  7162  04F9  00AE               	movwf	___ftadd@f2+1
  7163  04FA  086E               	movf	Fuzzy@aumenta+2,w
  7164  04FB  00AF               	movwf	___ftadd@f2+2
  7165  04FC  120A  118A  26EE  120A  118A  	fcall	___ftadd
  7166  0501  1283               	bcf	3,5	;RP0=0, select bank0
  7167  0502  1303               	bcf	3,6	;RP1=0, select bank0
  7168  0503  082A               	movf	?___ftadd,w
  7169  0504  00EC               	movwf	Fuzzy@aumenta
  7170  0505  082B               	movf	?___ftadd+1,w
  7171  0506  00ED               	movwf	Fuzzy@aumenta+1
  7172  0507  082C               	movf	?___ftadd+2,w
  7173  0508  00EE               	movwf	Fuzzy@aumenta+2
  7174                           
  7175                           ;main.c: 247: }
  7176                           ;main.c: 249: x=x+1;
  7177  0509  3000               	movlw	0
  7178  050A  00AA               	movwf	___ftadd@f1
  7179  050B  3080               	movlw	128
  7180  050C  00AB               	movwf	___ftadd@f1+1
  7181  050D  303F               	movlw	63
  7182  050E  00AC               	movwf	___ftadd@f1+2
  7183  050F  1683               	bsf	3,5	;RP0=1, select bank1
  7184  0510  1303               	bcf	3,6	;RP1=0, select bank1
  7185  0511  0835               	movf	_x^(0+128),w
  7186  0512  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0513  1303               	bcf	3,6	;RP1=0, select bank0
  7188  0514  00AD               	movwf	___ftadd@f2
  7189  0515  1683               	bsf	3,5	;RP0=1, select bank1
  7190  0516  1303               	bcf	3,6	;RP1=0, select bank1
  7191  0517  0836               	movf	(_x+1)^(0+128),w
  7192  0518  1283               	bcf	3,5	;RP0=0, select bank0
  7193  0519  1303               	bcf	3,6	;RP1=0, select bank0
  7194  051A  00AE               	movwf	___ftadd@f2+1
  7195  051B  1683               	bsf	3,5	;RP0=1, select bank1
  7196  051C  1303               	bcf	3,6	;RP1=0, select bank1
  7197  051D  0837               	movf	(_x+2)^(0+128),w
  7198  051E  1283               	bcf	3,5	;RP0=0, select bank0
  7199  051F  1303               	bcf	3,6	;RP1=0, select bank0
  7200  0520  00AF               	movwf	___ftadd@f2+2
  7201  0521  120A  118A  26EE  120A  118A  	fcall	___ftadd
  7202  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7203  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7204  0528  082A               	movf	?___ftadd,w
  7205  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7206  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7207  052B  00B5               	movwf	_x^(0+128)
  7208  052C  1283               	bcf	3,5	;RP0=0, select bank0
  7209  052D  1303               	bcf	3,6	;RP1=0, select bank0
  7210  052E  082B               	movf	?___ftadd+1,w
  7211  052F  1683               	bsf	3,5	;RP0=1, select bank1
  7212  0530  1303               	bcf	3,6	;RP1=0, select bank1
  7213  0531  00B6               	movwf	(_x+1)^(0+128)
  7214  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7215  0533  1303               	bcf	3,6	;RP1=0, select bank0
  7216  0534  082C               	movf	?___ftadd+2,w
  7217  0535  1683               	bsf	3,5	;RP0=1, select bank1
  7218  0536  1303               	bcf	3,6	;RP1=0, select bank1
  7219  0537  00B7               	movwf	(_x+2)^(0+128)
  7220  0538  3001               	movlw	1
  7221  0539  1283               	bcf	3,5	;RP0=0, select bank0
  7222  053A  1303               	bcf	3,6	;RP1=0, select bank0
  7223  053B  07DD               	addwf	Fuzzy@a_233,f
  7224  053C  1803               	skipnc
  7225  053D  0ADE               	incf	Fuzzy@a_233+1,f
  7226  053E  3000               	movlw	0
  7227  053F  07DE               	addwf	Fuzzy@a_233+1,f
  7228  0540  085E               	movf	Fuzzy@a_233+1,w
  7229  0541  3A80               	xorlw	128
  7230  0542  00FF               	movwf	127
  7231  0543  3080               	movlw	128
  7232  0544  027F               	subwf	127,w
  7233  0545  1D03               	skipz
  7234  0546  2D49               	goto	u349_25
  7235  0547  305B               	movlw	91
  7236  0548  025D               	subwf	Fuzzy@a_233,w
  7237  0549                     u349_25:	
  7238  0549  1C03               	skipc
  7239  054A  2C80               	goto	i1l2812
  7240  054B                     i1l2822:	
  7241                           
  7242                           ;main.c: 250: }
  7243                           ;main.c: 252: }
  7244                           ;main.c: 255: for (int a=0; a<1; a++)
  7245  054B  1283               	bcf	3,5	;RP0=0, select bank0
  7246  054C  1303               	bcf	3,6	;RP1=0, select bank0
  7247  054D  01DF               	clrf	Fuzzy@a_234
  7248  054E  01E0               	clrf	Fuzzy@a_234+1
  7249  054F  0860               	movf	Fuzzy@a_234+1,w
  7250  0550  3A80               	xorlw	128
  7251  0551  00FF               	movwf	127
  7252  0552  3080               	movlw	128
  7253  0553  027F               	subwf	127,w
  7254  0554  1D03               	skipz
  7255  0555  2D58               	goto	u350_25
  7256  0556  3001               	movlw	1
  7257  0557  025F               	subwf	Fuzzy@a_234,w
  7258  0558                     u350_25:	
  7259  0558  1803               	btfsc	3,0
  7260  0559  2DC2               	goto	i1l2842
  7261  055A                     i1l2828:	
  7262                           
  7263                           ;main.c: 256: {
  7264                           ;main.c: 257: if (temp < 25)
  7265  055A  1683               	bsf	3,5	;RP0=1, select bank1
  7266  055B  1303               	bcf	3,6	;RP1=0, select bank1
  7267  055C  082F               	movf	_temp^(0+128),w
  7268  055D  00F0               	movwf	___ftge@ff1
  7269  055E  0830               	movf	(_temp+1)^(0+128),w
  7270  055F  00F1               	movwf	___ftge@ff1+1
  7271  0560  0831               	movf	(_temp+2)^(0+128),w
  7272  0561  00F2               	movwf	___ftge@ff1+2
  7273  0562  3000               	movlw	0
  7274  0563  00F3               	movwf	___ftge@ff2
  7275  0564  30C8               	movlw	200
  7276  0565  00F4               	movwf	___ftge@ff2+1
  7277  0566  3041               	movlw	65
  7278  0567  00F5               	movwf	___ftge@ff2+2
  7279  0568  160A  118A  23D9  120A  118A  	fcall	___ftge
  7280  056D  1803               	btfsc	3,0
  7281  056E  2D77               	goto	i1l2832
  7282                           
  7283                           ;main.c: 258: {
  7284                           ;main.c: 259: tip = mantem;
  7285  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7286  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7287  0571  0866               	movf	Fuzzy@mantem,w
  7288  0572  00E3               	movwf	Fuzzy@tip
  7289  0573  0867               	movf	Fuzzy@mantem+1,w
  7290  0574  00E4               	movwf	Fuzzy@tip+1
  7291  0575  0868               	movf	Fuzzy@mantem+2,w
  7292  0576  2DB0               	goto	L7
  7293  0577                     i1l2832:	
  7294                           ;main.c: 260: }else
  7295                           
  7296                           
  7297                           ;main.c: 261: if (temp >= 25 && temp < 75)
  7298  0577  1683               	bsf	3,5	;RP0=1, select bank1
  7299  0578  1303               	bcf	3,6	;RP1=0, select bank1
  7300  0579  082F               	movf	_temp^(0+128),w
  7301  057A  00F0               	movwf	___ftge@ff1
  7302  057B  0830               	movf	(_temp+1)^(0+128),w
  7303  057C  00F1               	movwf	___ftge@ff1+1
  7304  057D  0831               	movf	(_temp+2)^(0+128),w
  7305  057E  00F2               	movwf	___ftge@ff1+2
  7306  057F  3000               	movlw	0
  7307  0580  00F3               	movwf	___ftge@ff2
  7308  0581  30C8               	movlw	200
  7309  0582  00F4               	movwf	___ftge@ff2+1
  7310  0583  3041               	movlw	65
  7311  0584  00F5               	movwf	___ftge@ff2+2
  7312  0585  160A  118A  23D9  120A  118A  	fcall	___ftge
  7313  058A  1C03               	btfss	3,0
  7314  058B  2DA9               	goto	i1l2838
  7315  058C  1683               	bsf	3,5	;RP0=1, select bank1
  7316  058D  1303               	bcf	3,6	;RP1=0, select bank1
  7317  058E  082F               	movf	_temp^(0+128),w
  7318  058F  00F0               	movwf	___ftge@ff1
  7319  0590  0830               	movf	(_temp+1)^(0+128),w
  7320  0591  00F1               	movwf	___ftge@ff1+1
  7321  0592  0831               	movf	(_temp+2)^(0+128),w
  7322  0593  00F2               	movwf	___ftge@ff1+2
  7323  0594  3000               	movlw	0
  7324  0595  00F3               	movwf	___ftge@ff2
  7325  0596  3096               	movlw	150
  7326  0597  00F4               	movwf	___ftge@ff2+1
  7327  0598  3042               	movlw	66
  7328  0599  00F5               	movwf	___ftge@ff2+2
  7329  059A  160A  118A  23D9  120A  118A  	fcall	___ftge
  7330  059F  1803               	btfsc	3,0
  7331  05A0  2DA9               	goto	i1l2838
  7332                           
  7333                           ;main.c: 262: {
  7334                           ;main.c: 263: tip = reduz;
  7335  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  7336  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  7337  05A3  0869               	movf	Fuzzy@reduz,w
  7338  05A4  00E3               	movwf	Fuzzy@tip
  7339  05A5  086A               	movf	Fuzzy@reduz+1,w
  7340  05A6  00E4               	movwf	Fuzzy@tip+1
  7341  05A7  086B               	movf	Fuzzy@reduz+2,w
  7342  05A8  2DB0               	goto	L7
  7343  05A9                     i1l2838:	
  7344                           ;main.c: 264: }else
  7345                           
  7346                           
  7347                           ;main.c: 265: {
  7348                           ;main.c: 266: tip = aumenta;
  7349  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  7350  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  7351  05AB  086C               	movf	Fuzzy@aumenta,w
  7352  05AC  00E3               	movwf	Fuzzy@tip
  7353  05AD  086D               	movf	Fuzzy@aumenta+1,w
  7354  05AE  00E4               	movwf	Fuzzy@tip+1
  7355  05AF  086E               	movf	Fuzzy@aumenta+2,w
  7356  05B0                     L7:	
  7357  05B0  00E5               	movwf	Fuzzy@tip+2
  7358  05B1  3001               	movlw	1
  7359  05B2  07DF               	addwf	Fuzzy@a_234,f
  7360  05B3  1803               	skipnc
  7361  05B4  0AE0               	incf	Fuzzy@a_234+1,f
  7362  05B5  3000               	movlw	0
  7363  05B6  07E0               	addwf	Fuzzy@a_234+1,f
  7364  05B7  0860               	movf	Fuzzy@a_234+1,w
  7365  05B8  3A80               	xorlw	128
  7366  05B9  00FF               	movwf	127
  7367  05BA  3080               	movlw	128
  7368  05BB  027F               	subwf	127,w
  7369  05BC  1D03               	skipz
  7370  05BD  2DC0               	goto	u354_25
  7371  05BE  3001               	movlw	1
  7372  05BF  025F               	subwf	Fuzzy@a_234,w
  7373  05C0                     u354_25:	
  7374  05C0  1C03               	skipc
  7375  05C1  2D5A               	goto	i1l2828
  7376  05C2                     i1l2842:	
  7377                           
  7378                           ;main.c: 267: }
  7379                           ;main.c: 268: }
  7380                           ;main.c: 271: x = 0;
  7381  05C2  3000               	movlw	0
  7382  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  7383  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  7384  05C5  00B5               	movwf	_x^(0+128)
  7385  05C6  3000               	movlw	0
  7386  05C7  00B6               	movwf	(_x+1)^(0+128)
  7387  05C8  3000               	movlw	0
  7388  05C9  00B7               	movwf	(_x+2)^(0+128)
  7389                           
  7390                           ;main.c: 272: total_area = 0;
  7391  05CA  3000               	movlw	0
  7392  05CB  00B2               	movwf	_total_area^(0+128)
  7393  05CC  3000               	movlw	0
  7394  05CD  00B3               	movwf	(_total_area+1)^(0+128)
  7395  05CE  3000               	movlw	0
  7396  05CF  00B4               	movwf	(_total_area+2)^(0+128)
  7397                           
  7398                           ;main.c: 273: sum = 0;
  7399  05D0  3000               	movlw	0
  7400  05D1  00AC               	movwf	_sum^(0+128)
  7401  05D2  3000               	movlw	0
  7402  05D3  00AD               	movwf	(_sum+1)^(0+128)
  7403  05D4  3000               	movlw	0
  7404  05D5  00AE               	movwf	(_sum+2)^(0+128)
  7405                           
  7406                           ;main.c: 274: for (int a=0; a<1; a++)
  7407  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  7408  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  7409  05D8  01E1               	clrf	Fuzzy@a_235
  7410  05D9  01E2               	clrf	Fuzzy@a_235+1
  7411  05DA  0862               	movf	Fuzzy@a_235+1,w
  7412  05DB  3A80               	xorlw	128
  7413  05DC  00FF               	movwf	127
  7414  05DD  3080               	movlw	128
  7415  05DE  027F               	subwf	127,w
  7416  05DF  1D03               	skipz
  7417  05E0  2DE3               	goto	u355_25
  7418  05E1  3001               	movlw	1
  7419  05E2  0261               	subwf	Fuzzy@a_235,w
  7420  05E3                     u355_25:	
  7421  05E3  1803               	btfsc	3,0
  7422  05E4  2E9C               	goto	i1l2856
  7423  05E5                     i1l2850:	
  7424                           
  7425                           ;main.c: 275: {
  7426                           ;main.c: 276: total_area = total_area + tip;
  7427  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  7428  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  7429  05E7  0863               	movf	Fuzzy@tip,w
  7430  05E8  00AA               	movwf	___ftadd@f1
  7431  05E9  0864               	movf	Fuzzy@tip+1,w
  7432  05EA  00AB               	movwf	___ftadd@f1+1
  7433  05EB  0865               	movf	Fuzzy@tip+2,w
  7434  05EC  00AC               	movwf	___ftadd@f1+2
  7435  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  7436  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  7437  05EF  0832               	movf	_total_area^(0+128),w
  7438  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  7439  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  7440  05F2  00AD               	movwf	___ftadd@f2
  7441  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  7442  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  7443  05F5  0833               	movf	(_total_area+1)^(0+128),w
  7444  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7445  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7446  05F8  00AE               	movwf	___ftadd@f2+1
  7447  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  7448  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  7449  05FB  0834               	movf	(_total_area+2)^(0+128),w
  7450  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  7451  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  7452  05FE  00AF               	movwf	___ftadd@f2+2
  7453  05FF  120A  118A  26EE  120A  118A  	fcall	___ftadd
  7454  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7455  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7456  0606  082A               	movf	?___ftadd,w
  7457  0607  1683               	bsf	3,5	;RP0=1, select bank1
  7458  0608  1303               	bcf	3,6	;RP1=0, select bank1
  7459  0609  00B2               	movwf	_total_area^(0+128)
  7460  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7461  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7462  060C  082B               	movf	?___ftadd+1,w
  7463  060D  1683               	bsf	3,5	;RP0=1, select bank1
  7464  060E  1303               	bcf	3,6	;RP1=0, select bank1
  7465  060F  00B3               	movwf	(_total_area+1)^(0+128)
  7466  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7467  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7468  0612  082C               	movf	?___ftadd+2,w
  7469  0613  1683               	bsf	3,5	;RP0=1, select bank1
  7470  0614  1303               	bcf	3,6	;RP1=0, select bank1
  7471  0615  00B4               	movwf	(_total_area+2)^(0+128)
  7472                           
  7473                           ;main.c: 277: sum = sum + (x * tip);
  7474  0616  082C               	movf	_sum^(0+128),w
  7475  0617  1283               	bcf	3,5	;RP0=0, select bank0
  7476  0618  1303               	bcf	3,6	;RP1=0, select bank0
  7477  0619  00AA               	movwf	___ftadd@f1
  7478  061A  1683               	bsf	3,5	;RP0=1, select bank1
  7479  061B  1303               	bcf	3,6	;RP1=0, select bank1
  7480  061C  082D               	movf	(_sum+1)^(0+128),w
  7481  061D  1283               	bcf	3,5	;RP0=0, select bank0
  7482  061E  1303               	bcf	3,6	;RP1=0, select bank0
  7483  061F  00AB               	movwf	___ftadd@f1+1
  7484  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7485  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7486  0622  082E               	movf	(_sum+2)^(0+128),w
  7487  0623  1283               	bcf	3,5	;RP0=0, select bank0
  7488  0624  1303               	bcf	3,6	;RP1=0, select bank0
  7489  0625  00AC               	movwf	___ftadd@f1+2
  7490  0626  0863               	movf	Fuzzy@tip,w
  7491  0627  00F8               	movwf	___ftmul@f1
  7492  0628  0864               	movf	Fuzzy@tip+1,w
  7493  0629  00F9               	movwf	___ftmul@f1+1
  7494  062A  0865               	movf	Fuzzy@tip+2,w
  7495  062B  00FA               	movwf	___ftmul@f1+2
  7496  062C  1683               	bsf	3,5	;RP0=1, select bank1
  7497  062D  1303               	bcf	3,6	;RP1=0, select bank1
  7498  062E  0835               	movf	_x^(0+128),w
  7499  062F  00FB               	movwf	___ftmul@f2
  7500  0630  0836               	movf	(_x+1)^(0+128),w
  7501  0631  00FC               	movwf	___ftmul@f2+1
  7502  0632  0837               	movf	(_x+2)^(0+128),w
  7503  0633  00FD               	movwf	___ftmul@f2+2
  7504  0634  120A  158A  2052  120A  118A  	fcall	___ftmul
  7505  0639  0878               	movf	?___ftmul,w
  7506  063A  1283               	bcf	3,5	;RP0=0, select bank0
  7507  063B  1303               	bcf	3,6	;RP1=0, select bank0
  7508  063C  00AD               	movwf	___ftadd@f2
  7509  063D  0879               	movf	?___ftmul+1,w
  7510  063E  00AE               	movwf	___ftadd@f2+1
  7511  063F  087A               	movf	?___ftmul+2,w
  7512  0640  00AF               	movwf	___ftadd@f2+2
  7513  0641  120A  118A  26EE  120A  118A  	fcall	___ftadd
  7514  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7515  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7516  0648  082A               	movf	?___ftadd,w
  7517  0649  1683               	bsf	3,5	;RP0=1, select bank1
  7518  064A  1303               	bcf	3,6	;RP1=0, select bank1
  7519  064B  00AC               	movwf	_sum^(0+128)
  7520  064C  1283               	bcf	3,5	;RP0=0, select bank0
  7521  064D  1303               	bcf	3,6	;RP1=0, select bank0
  7522  064E  082B               	movf	?___ftadd+1,w
  7523  064F  1683               	bsf	3,5	;RP0=1, select bank1
  7524  0650  1303               	bcf	3,6	;RP1=0, select bank1
  7525  0651  00AD               	movwf	(_sum+1)^(0+128)
  7526  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7527  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7528  0654  082C               	movf	?___ftadd+2,w
  7529  0655  1683               	bsf	3,5	;RP0=1, select bank1
  7530  0656  1303               	bcf	3,6	;RP1=0, select bank1
  7531  0657  00AE               	movwf	(_sum+2)^(0+128)
  7532                           
  7533                           ;main.c: 279: x=x+1;
  7534  0658  3000               	movlw	0
  7535  0659  1283               	bcf	3,5	;RP0=0, select bank0
  7536  065A  1303               	bcf	3,6	;RP1=0, select bank0
  7537  065B  00AA               	movwf	___ftadd@f1
  7538  065C  3080               	movlw	128
  7539  065D  00AB               	movwf	___ftadd@f1+1
  7540  065E  303F               	movlw	63
  7541  065F  00AC               	movwf	___ftadd@f1+2
  7542  0660  1683               	bsf	3,5	;RP0=1, select bank1
  7543  0661  1303               	bcf	3,6	;RP1=0, select bank1
  7544  0662  0835               	movf	_x^(0+128),w
  7545  0663  1283               	bcf	3,5	;RP0=0, select bank0
  7546  0664  1303               	bcf	3,6	;RP1=0, select bank0
  7547  0665  00AD               	movwf	___ftadd@f2
  7548  0666  1683               	bsf	3,5	;RP0=1, select bank1
  7549  0667  1303               	bcf	3,6	;RP1=0, select bank1
  7550  0668  0836               	movf	(_x+1)^(0+128),w
  7551  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7552  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7553  066B  00AE               	movwf	___ftadd@f2+1
  7554  066C  1683               	bsf	3,5	;RP0=1, select bank1
  7555  066D  1303               	bcf	3,6	;RP1=0, select bank1
  7556  066E  0837               	movf	(_x+2)^(0+128),w
  7557  066F  1283               	bcf	3,5	;RP0=0, select bank0
  7558  0670  1303               	bcf	3,6	;RP1=0, select bank0
  7559  0671  00AF               	movwf	___ftadd@f2+2
  7560  0672  120A  118A  26EE  120A  118A  	fcall	___ftadd
  7561  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7562  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7563  0679  082A               	movf	?___ftadd,w
  7564  067A  1683               	bsf	3,5	;RP0=1, select bank1
  7565  067B  1303               	bcf	3,6	;RP1=0, select bank1
  7566  067C  00B5               	movwf	_x^(0+128)
  7567  067D  1283               	bcf	3,5	;RP0=0, select bank0
  7568  067E  1303               	bcf	3,6	;RP1=0, select bank0
  7569  067F  082B               	movf	?___ftadd+1,w
  7570  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7571  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7572  0682  00B6               	movwf	(_x+1)^(0+128)
  7573  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7574  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7575  0685  082C               	movf	?___ftadd+2,w
  7576  0686  1683               	bsf	3,5	;RP0=1, select bank1
  7577  0687  1303               	bcf	3,6	;RP1=0, select bank1
  7578  0688  00B7               	movwf	(_x+2)^(0+128)
  7579  0689  3001               	movlw	1
  7580  068A  1283               	bcf	3,5	;RP0=0, select bank0
  7581  068B  1303               	bcf	3,6	;RP1=0, select bank0
  7582  068C  07E1               	addwf	Fuzzy@a_235,f
  7583  068D  1803               	skipnc
  7584  068E  0AE2               	incf	Fuzzy@a_235+1,f
  7585  068F  3000               	movlw	0
  7586  0690  07E2               	addwf	Fuzzy@a_235+1,f
  7587  0691  0862               	movf	Fuzzy@a_235+1,w
  7588  0692  3A80               	xorlw	128
  7589  0693  00FF               	movwf	127
  7590  0694  3080               	movlw	128
  7591  0695  027F               	subwf	127,w
  7592  0696  1D03               	skipz
  7593  0697  2E9A               	goto	u356_25
  7594  0698  3001               	movlw	1
  7595  0699  0261               	subwf	Fuzzy@a_235,w
  7596  069A                     u356_25:	
  7597  069A  1C03               	skipc
  7598  069B  2DE5               	goto	i1l2850
  7599  069C                     i1l2856:	
  7600                           
  7601                           ;main.c: 280: }
  7602                           ;main.c: 283: ativa_fan = sum/total_area;
  7603  069C  1683               	bsf	3,5	;RP0=1, select bank1
  7604  069D  1303               	bcf	3,6	;RP1=0, select bank1
  7605  069E  0832               	movf	_total_area^(0+128),w
  7606  069F  1283               	bcf	3,5	;RP0=0, select bank0
  7607  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  7608  06A1  00B7               	movwf	___ftdiv@f2
  7609  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  7610  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  7611  06A4  0833               	movf	(_total_area+1)^(0+128),w
  7612  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7613  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7614  06A7  00B8               	movwf	___ftdiv@f2+1
  7615  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  7616  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  7617  06AA  0834               	movf	(_total_area+2)^(0+128),w
  7618  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  7619  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  7620  06AD  00B9               	movwf	___ftdiv@f2+2
  7621  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  7622  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  7623  06B0  082C               	movf	_sum^(0+128),w
  7624  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  7625  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  7626  06B3  00BA               	movwf	___ftdiv@f1
  7627  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  7628  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  7629  06B6  082D               	movf	(_sum+1)^(0+128),w
  7630  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7631  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7632  06B9  00BB               	movwf	___ftdiv@f1+1
  7633  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  7634  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  7635  06BC  082E               	movf	(_sum+2)^(0+128),w
  7636  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7637  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7638  06BF  00BC               	movwf	___ftdiv@f1+2
  7639  06C0  160A  118A  2624  120A  118A  	fcall	___ftdiv
  7640  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  7641  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  7642  06C7  0837               	movf	?___ftdiv,w
  7643  06C8  1683               	bsf	3,5	;RP0=1, select bank3
  7644  06C9  1703               	bsf	3,6	;RP1=1, select bank3
  7645  06CA  0090               	movwf	_ativa_fan^(0+384)
  7646  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  7647  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  7648  06CD  0838               	movf	?___ftdiv+1,w
  7649  06CE  1683               	bsf	3,5	;RP0=1, select bank3
  7650  06CF  1703               	bsf	3,6	;RP1=1, select bank3
  7651  06D0  0091               	movwf	(_ativa_fan+1)^(0+384)
  7652  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  7653  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  7654  06D3  0839               	movf	?___ftdiv+2,w
  7655  06D4  1683               	bsf	3,5	;RP0=1, select bank3
  7656  06D5  1703               	bsf	3,6	;RP1=1, select bank3
  7657  06D6  0092               	movwf	(_ativa_fan+2)^(0+384)
  7658                           
  7659                           ;main.c: 287: if (deltaV >0 && deltaV < 1020)
  7660  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  7661  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  7662  06D9  0840               	movf	(_deltaV+1)^(0+128),w
  7663  06DA  043F               	iorwf	_deltaV^(0+128),w
  7664  06DB  1903               	skipnz
  7665  06DC  0008               	return
  7666  06DD  3003               	movlw	3
  7667  06DE  0240               	subwf	(_deltaV+1)^(0+128),w
  7668  06DF  30FC               	movlw	252
  7669  06E0  1903               	skipnz
  7670  06E1  023F               	subwf	_deltaV^(0+128),w
  7671  06E2  1803               	skipnc
  7672  06E3  0008               	return
  7673                           
  7674                           ;main.c: 288: {
  7675                           ;main.c: 289: PWM_DutyCycle2(deltaV);
  7676  06E4  0840               	movf	(_deltaV+1)^(0+128),w
  7677  06E5  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7678  06E6  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7679  06E7  083F               	movf	_deltaV^(0+128),w
  7680  06E8  01F0               	clrf	i1PWM_DutyCycle2@valor
  7681  06E9  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7682  06EA  160A  118A  2155   	fcall	i1_PWM_DutyCycle2
  7683  06ED  0008               	return
  7684  06EE                     __end_of_Fuzzy:	
  7685                           
  7686                           	psect	text30
  7687  1155                     __ptext30:	
  7688 ;; *************** function i1_PWM_DutyCycle2 *****************
  7689 ;; Defined at:
  7690 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;  valor           2    0[COMMON] int 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;		None               void
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7704 ;;      Params:         2       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0
  7706 ;;      Temps:          2       0       0       0       0
  7707 ;;      Totals:         4       0       0       0       0
  7708 ;;Total ram usage:        4 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_Fuzzy
  7714 ;;		_ISR
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           
  7719                           ;psect for function i1_PWM_DutyCycle2
  7720  1155                     i1_PWM_DutyCycle2:	
  7721                           
  7722                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7723                           
  7724                           ;incstack = 0
  7725                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7726  1155  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7727  1156  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7728  1157  0870               	movf	i1PWM_DutyCycle2@valor,w
  7729  1158  00F2               	movwf	??i1_PWM_DutyCycle2
  7730  1159  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7731  115A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7732  115B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7733  115C  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7734  115D  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7735  115E  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7736  115F  0872               	movf	??i1_PWM_DutyCycle2,w
  7737  1160  1283               	bcf	3,5	;RP0=0, select bank0
  7738  1161  1303               	bcf	3,6	;RP1=0, select bank0
  7739  1162  009B               	movwf	27	;volatile
  7740                           
  7741                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7742  1163  0870               	movf	i1PWM_DutyCycle2@valor,w
  7743  1164  00F2               	movwf	??i1_PWM_DutyCycle2
  7744  1165  3003               	movlw	3
  7745  1166                     u334_25:	
  7746  1166  1003               	clrc
  7747  1167  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7748  1168  3EFF               	addlw	-1
  7749  1169  1D03               	skipz
  7750  116A  2966               	goto	u334_25
  7751  116B  1003               	clrc
  7752  116C  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7753  116D  380C               	iorlw	12
  7754  116E  009D               	movwf	29	;volatile
  7755  116F  0008               	return
  7756  1170                     __end_ofi1_PWM_DutyCycle2:	
  7757                           
  7758                           	psect	text31
  7759  16DC                     __ptext31:	
  7760 ;; *************** function _trimf *****************
  7761 ;; Defined at:
  7762 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  x               3   39[BANK0 ] float 
  7765 ;;  a               3   42[BANK0 ] float 
  7766 ;;  b               3   45[BANK0 ] float 
  7767 ;;  c               3   48[BANK0 ] float 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  ua              3   51[BANK0 ] float 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  3   39[BANK0 ] float 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0, pclath, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7779 ;;      Params:         0      12       0       0       0
  7780 ;;      Locals:         0       3       0       0       0
  7781 ;;      Temps:          0       0       0       0       0
  7782 ;;      Totals:         0      15       0       0       0
  7783 ;;Total ram usage:       15 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    2
  7786 ;; This function calls:
  7787 ;;		___ftadd
  7788 ;;		___ftdiv
  7789 ;;		___ftge
  7790 ;;		___ftneg
  7791 ;; This function is called by:
  7792 ;;		_Fuzzy
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function _trimf
  7798  16DC                     _trimf:	
  7799                           
  7800                           ;main.c: 70: float ua = 0;
  7801                           
  7802                           ;incstack = 0
  7803                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7804  16DC  3000               	movlw	0
  7805  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  7806  16DE  1303               	bcf	3,6	;RP1=0, select bank0
  7807  16DF  00D3               	movwf	trimf@ua
  7808  16E0  3000               	movlw	0
  7809  16E1  00D4               	movwf	trimf@ua+1
  7810  16E2  3000               	movlw	0
  7811  16E3  00D5               	movwf	trimf@ua+2
  7812                           
  7813                           ;main.c: 72: if (x <= a)
  7814  16E4  084A               	movf	trimf@a,w
  7815  16E5  00F0               	movwf	___ftge@ff1
  7816  16E6  084B               	movf	trimf@a+1,w
  7817  16E7  00F1               	movwf	___ftge@ff1+1
  7818  16E8  084C               	movf	trimf@a+2,w
  7819  16E9  00F2               	movwf	___ftge@ff1+2
  7820  16EA  0847               	movf	trimf@x,w
  7821  16EB  00F3               	movwf	___ftge@ff2
  7822  16EC  0848               	movf	trimf@x+1,w
  7823  16ED  00F4               	movwf	___ftge@ff2+1
  7824  16EE  0849               	movf	trimf@x+2,w
  7825  16EF  00F5               	movwf	___ftge@ff2+2
  7826  16F0  160A  118A  23D9  160A  118A  	fcall	___ftge
  7827  16F5  1803               	btfsc	3,0
  7828  16F6  2FEF               	goto	L12
  7829                           
  7830                           ;main.c: 74: else if ((a < x) && (x <= b))
  7831                           
  7832                           ;main.c: 73: ua = 0;
  7833  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7834  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  7835  16F9  084A               	movf	trimf@a,w
  7836  16FA  00F0               	movwf	___ftge@ff1
  7837  16FB  084B               	movf	trimf@a+1,w
  7838  16FC  00F1               	movwf	___ftge@ff1+1
  7839  16FD  084C               	movf	trimf@a+2,w
  7840  16FE  00F2               	movwf	___ftge@ff1+2
  7841  16FF  0847               	movf	trimf@x,w
  7842  1700  00F3               	movwf	___ftge@ff2
  7843  1701  0848               	movf	trimf@x+1,w
  7844  1702  00F4               	movwf	___ftge@ff2+1
  7845  1703  0849               	movf	trimf@x+2,w
  7846  1704  00F5               	movwf	___ftge@ff2+2
  7847  1705  160A  118A  23D9  160A  118A  	fcall	___ftge
  7848  170A  1803               	btfsc	3,0
  7849  170B  2F55               	goto	i1l2438
  7850  170C  1283               	bcf	3,5	;RP0=0, select bank0
  7851  170D  1303               	bcf	3,6	;RP1=0, select bank0
  7852  170E  084D               	movf	trimf@b,w
  7853  170F  00F0               	movwf	___ftge@ff1
  7854  1710  084E               	movf	trimf@b+1,w
  7855  1711  00F1               	movwf	___ftge@ff1+1
  7856  1712  084F               	movf	trimf@b+2,w
  7857  1713  00F2               	movwf	___ftge@ff1+2
  7858  1714  0847               	movf	trimf@x,w
  7859  1715  00F3               	movwf	___ftge@ff2
  7860  1716  0848               	movf	trimf@x+1,w
  7861  1717  00F4               	movwf	___ftge@ff2+1
  7862  1718  0849               	movf	trimf@x+2,w
  7863  1719  00F5               	movwf	___ftge@ff2+2
  7864  171A  160A  118A  23D9  160A  118A  	fcall	___ftge
  7865  171F  1C03               	btfss	3,0
  7866  1720  2F55               	goto	i1l2438
  7867                           
  7868                           ;main.c: 75: ua = ((x - a) / (b - a));
  7869  1721  1283               	bcf	3,5	;RP0=0, select bank0
  7870  1722  1303               	bcf	3,6	;RP1=0, select bank0
  7871  1723  084D               	movf	trimf@b,w
  7872  1724  00AA               	movwf	___ftadd@f1
  7873  1725  084E               	movf	trimf@b+1,w
  7874  1726  00AB               	movwf	___ftadd@f1+1
  7875  1727  084F               	movf	trimf@b+2,w
  7876  1728  00AC               	movwf	___ftadd@f1+2
  7877  1729  084A               	movf	trimf@a,w
  7878  172A  00F0               	movwf	___ftneg@f1
  7879  172B  084B               	movf	trimf@a+1,w
  7880  172C  00F1               	movwf	___ftneg@f1+1
  7881  172D  084C               	movf	trimf@a+2,w
  7882  172E  00F2               	movwf	___ftneg@f1+2
  7883  172F  160A  118A  20C9  160A  118A  	fcall	___ftneg
  7884  1734  0870               	movf	?___ftneg,w
  7885  1735  1283               	bcf	3,5	;RP0=0, select bank0
  7886  1736  1303               	bcf	3,6	;RP1=0, select bank0
  7887  1737  00AD               	movwf	___ftadd@f2
  7888  1738  0871               	movf	?___ftneg+1,w
  7889  1739  00AE               	movwf	___ftadd@f2+1
  7890  173A  0872               	movf	?___ftneg+2,w
  7891  173B  00AF               	movwf	___ftadd@f2+2
  7892  173C  120A  118A  26EE  160A  118A  	fcall	___ftadd
  7893  1741  1283               	bcf	3,5	;RP0=0, select bank0
  7894  1742  1303               	bcf	3,6	;RP1=0, select bank0
  7895  1743  082A               	movf	?___ftadd,w
  7896  1744  00B7               	movwf	___ftdiv@f2
  7897  1745  082B               	movf	?___ftadd+1,w
  7898  1746  00B8               	movwf	___ftdiv@f2+1
  7899  1747  082C               	movf	?___ftadd+2,w
  7900  1748  00B9               	movwf	___ftdiv@f2+2
  7901  1749  0847               	movf	trimf@x,w
  7902  174A  00AA               	movwf	___ftadd@f1
  7903  174B  0848               	movf	trimf@x+1,w
  7904  174C  00AB               	movwf	___ftadd@f1+1
  7905  174D  0849               	movf	trimf@x+2,w
  7906  174E  00AC               	movwf	___ftadd@f1+2
  7907  174F  084A               	movf	trimf@a,w
  7908  1750  00F0               	movwf	___ftneg@f1
  7909  1751  084B               	movf	trimf@a+1,w
  7910  1752  00F1               	movwf	___ftneg@f1+1
  7911  1753  084C               	movf	trimf@a+2,w
  7912  1754  2FB2               	goto	L13
  7913  1755                     i1l2438:	
  7914                           
  7915                           ;main.c: 76: else if ((b < x) && (x <= c))
  7916  1755  1283               	bcf	3,5	;RP0=0, select bank0
  7917  1756  1303               	bcf	3,6	;RP1=0, select bank0
  7918  1757  084D               	movf	trimf@b,w
  7919  1758  00F0               	movwf	___ftge@ff1
  7920  1759  084E               	movf	trimf@b+1,w
  7921  175A  00F1               	movwf	___ftge@ff1+1
  7922  175B  084F               	movf	trimf@b+2,w
  7923  175C  00F2               	movwf	___ftge@ff1+2
  7924  175D  0847               	movf	trimf@x,w
  7925  175E  00F3               	movwf	___ftge@ff2
  7926  175F  0848               	movf	trimf@x+1,w
  7927  1760  00F4               	movwf	___ftge@ff2+1
  7928  1761  0849               	movf	trimf@x+2,w
  7929  1762  00F5               	movwf	___ftge@ff2+2
  7930  1763  160A  118A  23D9  160A  118A  	fcall	___ftge
  7931  1768  1803               	btfsc	3,0
  7932  1769  2FDA               	goto	i1l2444
  7933  176A  1283               	bcf	3,5	;RP0=0, select bank0
  7934  176B  1303               	bcf	3,6	;RP1=0, select bank0
  7935  176C  0850               	movf	trimf@c,w
  7936  176D  00F0               	movwf	___ftge@ff1
  7937  176E  0851               	movf	trimf@c+1,w
  7938  176F  00F1               	movwf	___ftge@ff1+1
  7939  1770  0852               	movf	trimf@c+2,w
  7940  1771  00F2               	movwf	___ftge@ff1+2
  7941  1772  0847               	movf	trimf@x,w
  7942  1773  00F3               	movwf	___ftge@ff2
  7943  1774  0848               	movf	trimf@x+1,w
  7944  1775  00F4               	movwf	___ftge@ff2+1
  7945  1776  0849               	movf	trimf@x+2,w
  7946  1777  00F5               	movwf	___ftge@ff2+2
  7947  1778  160A  118A  23D9  160A  118A  	fcall	___ftge
  7948  177D  1C03               	btfss	3,0
  7949  177E  2FDA               	goto	i1l2444
  7950                           
  7951                           ;main.c: 77: ua = ((x - c) / (b - c));
  7952  177F  1283               	bcf	3,5	;RP0=0, select bank0
  7953  1780  1303               	bcf	3,6	;RP1=0, select bank0
  7954  1781  084D               	movf	trimf@b,w
  7955  1782  00AA               	movwf	___ftadd@f1
  7956  1783  084E               	movf	trimf@b+1,w
  7957  1784  00AB               	movwf	___ftadd@f1+1
  7958  1785  084F               	movf	trimf@b+2,w
  7959  1786  00AC               	movwf	___ftadd@f1+2
  7960  1787  0850               	movf	trimf@c,w
  7961  1788  00F0               	movwf	___ftneg@f1
  7962  1789  0851               	movf	trimf@c+1,w
  7963  178A  00F1               	movwf	___ftneg@f1+1
  7964  178B  0852               	movf	trimf@c+2,w
  7965  178C  00F2               	movwf	___ftneg@f1+2
  7966  178D  160A  118A  20C9  160A  118A  	fcall	___ftneg
  7967  1792  0870               	movf	?___ftneg,w
  7968  1793  1283               	bcf	3,5	;RP0=0, select bank0
  7969  1794  1303               	bcf	3,6	;RP1=0, select bank0
  7970  1795  00AD               	movwf	___ftadd@f2
  7971  1796  0871               	movf	?___ftneg+1,w
  7972  1797  00AE               	movwf	___ftadd@f2+1
  7973  1798  0872               	movf	?___ftneg+2,w
  7974  1799  00AF               	movwf	___ftadd@f2+2
  7975  179A  120A  118A  26EE  160A  118A  	fcall	___ftadd
  7976  179F  1283               	bcf	3,5	;RP0=0, select bank0
  7977  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  7978  17A1  082A               	movf	?___ftadd,w
  7979  17A2  00B7               	movwf	___ftdiv@f2
  7980  17A3  082B               	movf	?___ftadd+1,w
  7981  17A4  00B8               	movwf	___ftdiv@f2+1
  7982  17A5  082C               	movf	?___ftadd+2,w
  7983  17A6  00B9               	movwf	___ftdiv@f2+2
  7984  17A7  0847               	movf	trimf@x,w
  7985  17A8  00AA               	movwf	___ftadd@f1
  7986  17A9  0848               	movf	trimf@x+1,w
  7987  17AA  00AB               	movwf	___ftadd@f1+1
  7988  17AB  0849               	movf	trimf@x+2,w
  7989  17AC  00AC               	movwf	___ftadd@f1+2
  7990  17AD  0850               	movf	trimf@c,w
  7991  17AE  00F0               	movwf	___ftneg@f1
  7992  17AF  0851               	movf	trimf@c+1,w
  7993  17B0  00F1               	movwf	___ftneg@f1+1
  7994  17B1  0852               	movf	trimf@c+2,w
  7995  17B2                     L13:	
  7996  17B2  00F2               	movwf	___ftneg@f1+2
  7997  17B3  160A  118A  20C9  160A  118A  	fcall	___ftneg
  7998  17B8  0870               	movf	?___ftneg,w
  7999  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  8000  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  8001  17BB  00AD               	movwf	___ftadd@f2
  8002  17BC  0871               	movf	?___ftneg+1,w
  8003  17BD  00AE               	movwf	___ftadd@f2+1
  8004  17BE  0872               	movf	?___ftneg+2,w
  8005  17BF  00AF               	movwf	___ftadd@f2+2
  8006  17C0  120A  118A  26EE  160A  118A  	fcall	___ftadd
  8007  17C5  1283               	bcf	3,5	;RP0=0, select bank0
  8008  17C6  1303               	bcf	3,6	;RP1=0, select bank0
  8009  17C7  082A               	movf	?___ftadd,w
  8010  17C8  00BA               	movwf	___ftdiv@f1
  8011  17C9  082B               	movf	?___ftadd+1,w
  8012  17CA  00BB               	movwf	___ftdiv@f1+1
  8013  17CB  082C               	movf	?___ftadd+2,w
  8014  17CC  00BC               	movwf	___ftdiv@f1+2
  8015  17CD  160A  118A  2624  160A  118A  	fcall	___ftdiv
  8016  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  8017  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  8018  17D4  0837               	movf	?___ftdiv,w
  8019  17D5  00D3               	movwf	trimf@ua
  8020  17D6  0838               	movf	?___ftdiv+1,w
  8021  17D7  00D4               	movwf	trimf@ua+1
  8022  17D8  0839               	movf	?___ftdiv+2,w
  8023  17D9  2FF6               	goto	L10
  8024  17DA                     i1l2444:	
  8025                           
  8026                           ;main.c: 78: else if (x > c)
  8027  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  8028  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  8029  17DC  0850               	movf	trimf@c,w
  8030  17DD  00F0               	movwf	___ftge@ff1
  8031  17DE  0851               	movf	trimf@c+1,w
  8032  17DF  00F1               	movwf	___ftge@ff1+1
  8033  17E0  0852               	movf	trimf@c+2,w
  8034  17E1  00F2               	movwf	___ftge@ff1+2
  8035  17E2  0847               	movf	trimf@x,w
  8036  17E3  00F3               	movwf	___ftge@ff2
  8037  17E4  0848               	movf	trimf@x+1,w
  8038  17E5  00F4               	movwf	___ftge@ff2+1
  8039  17E6  0849               	movf	trimf@x+2,w
  8040  17E7  00F5               	movwf	___ftge@ff2+2
  8041  17E8  160A  118A  23D9  160A  118A  	fcall	___ftge
  8042  17ED  1803               	btfsc	3,0
  8043  17EE  2FF7               	goto	i1l118
  8044  17EF                     L12:	
  8045                           
  8046                           ;main.c: 79: ua = 0;
  8047  17EF  3000               	movlw	0
  8048  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  8049  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  8050  17F2  00D3               	movwf	trimf@ua
  8051  17F3  3000               	movlw	0
  8052  17F4  00D4               	movwf	trimf@ua+1
  8053  17F5  3000               	movlw	0
  8054  17F6                     L10:	
  8055  17F6  00D5               	movwf	trimf@ua+2
  8056  17F7                     i1l118:	
  8057                           
  8058                           ;main.c: 81: return(ua);
  8059  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  8060  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  8061  17F9  0853               	movf	trimf@ua,w
  8062  17FA  00C7               	movwf	?_trimf
  8063  17FB  0854               	movf	trimf@ua+1,w
  8064  17FC  00C8               	movwf	?_trimf+1
  8065  17FD  0855               	movf	trimf@ua+2,w
  8066  17FE  00C9               	movwf	?_trimf+2
  8067  17FF  0008               	return
  8068  1800                     __end_of_trimf:	
  8069                           
  8070                           	psect	text32
  8071  0A6C                     __ptext32:	
  8072 ;; *************** function _trapmf *****************
  8073 ;; Defined at:
  8074 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  x               3   39[BANK0 ] float 
  8077 ;;  a               3   42[BANK0 ] float 
  8078 ;;  b               3   45[BANK0 ] float 
  8079 ;;  c               3   48[BANK0 ] float 
  8080 ;;  d               3   51[BANK0 ] float 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  ua              3   54[BANK0 ] float 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  3   39[BANK0 ] float 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0, pclath, cstack
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8092 ;;      Params:         0      15       0       0       0
  8093 ;;      Locals:         0       3       0       0       0
  8094 ;;      Temps:          0       0       0       0       0
  8095 ;;      Totals:         0      18       0       0       0
  8096 ;;Total ram usage:       18 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    2
  8099 ;; This function calls:
  8100 ;;		___ftadd
  8101 ;;		___ftdiv
  8102 ;;		___ftge
  8103 ;;		___ftneg
  8104 ;; This function is called by:
  8105 ;;		_Fuzzy
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function _trapmf
  8111  0A6C                     _trapmf:	
  8112                           
  8113                           ;main.c: 89: float ua = 0;
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  8117  0A6C  3000               	movlw	0
  8118  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  8119  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  8120  0A6F  00D6               	movwf	trapmf@ua
  8121  0A70  3000               	movlw	0
  8122  0A71  00D7               	movwf	trapmf@ua+1
  8123  0A72  3000               	movlw	0
  8124  0A73  00D8               	movwf	trapmf@ua+2
  8125                           
  8126                           ;main.c: 91: if (x <= a)
  8127  0A74  084A               	movf	trapmf@a,w
  8128  0A75  00F0               	movwf	___ftge@ff1
  8129  0A76  084B               	movf	trapmf@a+1,w
  8130  0A77  00F1               	movwf	___ftge@ff1+1
  8131  0A78  084C               	movf	trapmf@a+2,w
  8132  0A79  00F2               	movwf	___ftge@ff1+2
  8133  0A7A  0847               	movf	trapmf@x,w
  8134  0A7B  00F3               	movwf	___ftge@ff2
  8135  0A7C  0848               	movf	trapmf@x+1,w
  8136  0A7D  00F4               	movwf	___ftge@ff2+1
  8137  0A7E  0849               	movf	trapmf@x+2,w
  8138  0A7F  00F5               	movwf	___ftge@ff2+2
  8139  0A80  160A  118A  23D9  120A  158A  	fcall	___ftge
  8140  0A85  1803               	btfsc	3,0
  8141  0A86  2BB1               	goto	L18
  8142                           
  8143                           ;main.c: 93: else if ((a < x) && (x <= b))
  8144                           
  8145                           ;main.c: 92: ua = 0;
  8146  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  8147  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  8148  0A89  084A               	movf	trapmf@a,w
  8149  0A8A  00F0               	movwf	___ftge@ff1
  8150  0A8B  084B               	movf	trapmf@a+1,w
  8151  0A8C  00F1               	movwf	___ftge@ff1+1
  8152  0A8D  084C               	movf	trapmf@a+2,w
  8153  0A8E  00F2               	movwf	___ftge@ff1+2
  8154  0A8F  0847               	movf	trapmf@x,w
  8155  0A90  00F3               	movwf	___ftge@ff2
  8156  0A91  0848               	movf	trapmf@x+1,w
  8157  0A92  00F4               	movwf	___ftge@ff2+1
  8158  0A93  0849               	movf	trapmf@x+2,w
  8159  0A94  00F5               	movwf	___ftge@ff2+2
  8160  0A95  160A  118A  23D9  120A  158A  	fcall	___ftge
  8161  0A9A  1803               	btfsc	3,0
  8162  0A9B  2AE5               	goto	i1l2462
  8163  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  8164  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  8165  0A9E  084D               	movf	trapmf@b,w
  8166  0A9F  00F0               	movwf	___ftge@ff1
  8167  0AA0  084E               	movf	trapmf@b+1,w
  8168  0AA1  00F1               	movwf	___ftge@ff1+1
  8169  0AA2  084F               	movf	trapmf@b+2,w
  8170  0AA3  00F2               	movwf	___ftge@ff1+2
  8171  0AA4  0847               	movf	trapmf@x,w
  8172  0AA5  00F3               	movwf	___ftge@ff2
  8173  0AA6  0848               	movf	trapmf@x+1,w
  8174  0AA7  00F4               	movwf	___ftge@ff2+1
  8175  0AA8  0849               	movf	trapmf@x+2,w
  8176  0AA9  00F5               	movwf	___ftge@ff2+2
  8177  0AAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8178  0AAF  1C03               	btfss	3,0
  8179  0AB0  2AE5               	goto	i1l2462
  8180                           
  8181                           ;main.c: 94: ua = ((x - a) / (b - a));
  8182  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8183  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  8184  0AB3  084D               	movf	trapmf@b,w
  8185  0AB4  00AA               	movwf	___ftadd@f1
  8186  0AB5  084E               	movf	trapmf@b+1,w
  8187  0AB6  00AB               	movwf	___ftadd@f1+1
  8188  0AB7  084F               	movf	trapmf@b+2,w
  8189  0AB8  00AC               	movwf	___ftadd@f1+2
  8190  0AB9  084A               	movf	trapmf@a,w
  8191  0ABA  00F0               	movwf	___ftneg@f1
  8192  0ABB  084B               	movf	trapmf@a+1,w
  8193  0ABC  00F1               	movwf	___ftneg@f1+1
  8194  0ABD  084C               	movf	trapmf@a+2,w
  8195  0ABE  00F2               	movwf	___ftneg@f1+2
  8196  0ABF  160A  118A  20C9  120A  158A  	fcall	___ftneg
  8197  0AC4  0870               	movf	?___ftneg,w
  8198  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8199  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8200  0AC7  00AD               	movwf	___ftadd@f2
  8201  0AC8  0871               	movf	?___ftneg+1,w
  8202  0AC9  00AE               	movwf	___ftadd@f2+1
  8203  0ACA  0872               	movf	?___ftneg+2,w
  8204  0ACB  00AF               	movwf	___ftadd@f2+2
  8205  0ACC  120A  118A  26EE  120A  158A  	fcall	___ftadd
  8206  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8207  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8208  0AD3  082A               	movf	?___ftadd,w
  8209  0AD4  00B7               	movwf	___ftdiv@f2
  8210  0AD5  082B               	movf	?___ftadd+1,w
  8211  0AD6  00B8               	movwf	___ftdiv@f2+1
  8212  0AD7  082C               	movf	?___ftadd+2,w
  8213  0AD8  00B9               	movwf	___ftdiv@f2+2
  8214  0AD9  0847               	movf	trapmf@x,w
  8215  0ADA  00AA               	movwf	___ftadd@f1
  8216  0ADB  0848               	movf	trapmf@x+1,w
  8217  0ADC  00AB               	movwf	___ftadd@f1+1
  8218  0ADD  0849               	movf	trapmf@x+2,w
  8219  0ADE  00AC               	movwf	___ftadd@f1+2
  8220  0ADF  084A               	movf	trapmf@a,w
  8221  0AE0  00F0               	movwf	___ftneg@f1
  8222  0AE1  084B               	movf	trapmf@a+1,w
  8223  0AE2  00F1               	movwf	___ftneg@f1+1
  8224  0AE3  084C               	movf	trapmf@a+2,w
  8225  0AE4  2B74               	goto	L20
  8226  0AE5                     i1l2462:	
  8227                           
  8228                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8229  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0AE7  0847               	movf	trapmf@x,w
  8232  0AE8  00F0               	movwf	___ftge@ff1
  8233  0AE9  0848               	movf	trapmf@x+1,w
  8234  0AEA  00F1               	movwf	___ftge@ff1+1
  8235  0AEB  0849               	movf	trapmf@x+2,w
  8236  0AEC  00F2               	movwf	___ftge@ff1+2
  8237  0AED  084D               	movf	trapmf@b,w
  8238  0AEE  00F3               	movwf	___ftge@ff2
  8239  0AEF  084E               	movf	trapmf@b+1,w
  8240  0AF0  00F4               	movwf	___ftge@ff2+1
  8241  0AF1  084F               	movf	trapmf@b+2,w
  8242  0AF2  00F5               	movwf	___ftge@ff2+2
  8243  0AF3  160A  118A  23D9  120A  158A  	fcall	___ftge
  8244  0AF8  1C03               	btfss	3,0
  8245  0AF9  2B17               	goto	i1l2468
  8246  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8247  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8248  0AFC  0850               	movf	trapmf@c,w
  8249  0AFD  00F0               	movwf	___ftge@ff1
  8250  0AFE  0851               	movf	trapmf@c+1,w
  8251  0AFF  00F1               	movwf	___ftge@ff1+1
  8252  0B00  0852               	movf	trapmf@c+2,w
  8253  0B01  00F2               	movwf	___ftge@ff1+2
  8254  0B02  0847               	movf	trapmf@x,w
  8255  0B03  00F3               	movwf	___ftge@ff2
  8256  0B04  0848               	movf	trapmf@x+1,w
  8257  0B05  00F4               	movwf	___ftge@ff2+1
  8258  0B06  0849               	movf	trapmf@x+2,w
  8259  0B07  00F5               	movwf	___ftge@ff2+2
  8260  0B08  160A  118A  23D9  120A  158A  	fcall	___ftge
  8261  0B0D  1C03               	btfss	3,0
  8262  0B0E  2B17               	goto	i1l2468
  8263                           
  8264                           ;main.c: 96: ua = 1;
  8265  0B0F  3000               	movlw	0
  8266  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0B12  00D6               	movwf	trapmf@ua
  8269  0B13  3080               	movlw	128
  8270  0B14  00D7               	movwf	trapmf@ua+1
  8271  0B15  303F               	movlw	63
  8272  0B16  2BB8               	goto	L17
  8273  0B17                     i1l2468:	
  8274                           
  8275                           ;main.c: 97: else if ((c < x) && (x <= d))
  8276  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  8277  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  8278  0B19  0850               	movf	trapmf@c,w
  8279  0B1A  00F0               	movwf	___ftge@ff1
  8280  0B1B  0851               	movf	trapmf@c+1,w
  8281  0B1C  00F1               	movwf	___ftge@ff1+1
  8282  0B1D  0852               	movf	trapmf@c+2,w
  8283  0B1E  00F2               	movwf	___ftge@ff1+2
  8284  0B1F  0847               	movf	trapmf@x,w
  8285  0B20  00F3               	movwf	___ftge@ff2
  8286  0B21  0848               	movf	trapmf@x+1,w
  8287  0B22  00F4               	movwf	___ftge@ff2+1
  8288  0B23  0849               	movf	trapmf@x+2,w
  8289  0B24  00F5               	movwf	___ftge@ff2+2
  8290  0B25  160A  118A  23D9  120A  158A  	fcall	___ftge
  8291  0B2A  1803               	btfsc	3,0
  8292  0B2B  2B9C               	goto	i1l2474
  8293  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  8294  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  8295  0B2E  0853               	movf	trapmf@d,w
  8296  0B2F  00F0               	movwf	___ftge@ff1
  8297  0B30  0854               	movf	trapmf@d+1,w
  8298  0B31  00F1               	movwf	___ftge@ff1+1
  8299  0B32  0855               	movf	trapmf@d+2,w
  8300  0B33  00F2               	movwf	___ftge@ff1+2
  8301  0B34  0847               	movf	trapmf@x,w
  8302  0B35  00F3               	movwf	___ftge@ff2
  8303  0B36  0848               	movf	trapmf@x+1,w
  8304  0B37  00F4               	movwf	___ftge@ff2+1
  8305  0B38  0849               	movf	trapmf@x+2,w
  8306  0B39  00F5               	movwf	___ftge@ff2+2
  8307  0B3A  160A  118A  23D9  120A  158A  	fcall	___ftge
  8308  0B3F  1C03               	btfss	3,0
  8309  0B40  2B9C               	goto	i1l2474
  8310                           
  8311                           ;main.c: 98: ua = ((d - x) / (d - c));
  8312  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  8313  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  8314  0B43  0853               	movf	trapmf@d,w
  8315  0B44  00AA               	movwf	___ftadd@f1
  8316  0B45  0854               	movf	trapmf@d+1,w
  8317  0B46  00AB               	movwf	___ftadd@f1+1
  8318  0B47  0855               	movf	trapmf@d+2,w
  8319  0B48  00AC               	movwf	___ftadd@f1+2
  8320  0B49  0850               	movf	trapmf@c,w
  8321  0B4A  00F0               	movwf	___ftneg@f1
  8322  0B4B  0851               	movf	trapmf@c+1,w
  8323  0B4C  00F1               	movwf	___ftneg@f1+1
  8324  0B4D  0852               	movf	trapmf@c+2,w
  8325  0B4E  00F2               	movwf	___ftneg@f1+2
  8326  0B4F  160A  118A  20C9  120A  158A  	fcall	___ftneg
  8327  0B54  0870               	movf	?___ftneg,w
  8328  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8329  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  8330  0B57  00AD               	movwf	___ftadd@f2
  8331  0B58  0871               	movf	?___ftneg+1,w
  8332  0B59  00AE               	movwf	___ftadd@f2+1
  8333  0B5A  0872               	movf	?___ftneg+2,w
  8334  0B5B  00AF               	movwf	___ftadd@f2+2
  8335  0B5C  120A  118A  26EE  120A  158A  	fcall	___ftadd
  8336  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8337  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8338  0B63  082A               	movf	?___ftadd,w
  8339  0B64  00B7               	movwf	___ftdiv@f2
  8340  0B65  082B               	movf	?___ftadd+1,w
  8341  0B66  00B8               	movwf	___ftdiv@f2+1
  8342  0B67  082C               	movf	?___ftadd+2,w
  8343  0B68  00B9               	movwf	___ftdiv@f2+2
  8344  0B69  0853               	movf	trapmf@d,w
  8345  0B6A  00AA               	movwf	___ftadd@f1
  8346  0B6B  0854               	movf	trapmf@d+1,w
  8347  0B6C  00AB               	movwf	___ftadd@f1+1
  8348  0B6D  0855               	movf	trapmf@d+2,w
  8349  0B6E  00AC               	movwf	___ftadd@f1+2
  8350  0B6F  0847               	movf	trapmf@x,w
  8351  0B70  00F0               	movwf	___ftneg@f1
  8352  0B71  0848               	movf	trapmf@x+1,w
  8353  0B72  00F1               	movwf	___ftneg@f1+1
  8354  0B73  0849               	movf	trapmf@x+2,w
  8355  0B74                     L20:	
  8356  0B74  00F2               	movwf	___ftneg@f1+2
  8357  0B75  160A  118A  20C9  120A  158A  	fcall	___ftneg
  8358  0B7A  0870               	movf	?___ftneg,w
  8359  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  8360  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  8361  0B7D  00AD               	movwf	___ftadd@f2
  8362  0B7E  0871               	movf	?___ftneg+1,w
  8363  0B7F  00AE               	movwf	___ftadd@f2+1
  8364  0B80  0872               	movf	?___ftneg+2,w
  8365  0B81  00AF               	movwf	___ftadd@f2+2
  8366  0B82  120A  118A  26EE  120A  158A  	fcall	___ftadd
  8367  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8368  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  8369  0B89  082A               	movf	?___ftadd,w
  8370  0B8A  00BA               	movwf	___ftdiv@f1
  8371  0B8B  082B               	movf	?___ftadd+1,w
  8372  0B8C  00BB               	movwf	___ftdiv@f1+1
  8373  0B8D  082C               	movf	?___ftadd+2,w
  8374  0B8E  00BC               	movwf	___ftdiv@f1+2
  8375  0B8F  160A  118A  2624  120A  158A  	fcall	___ftdiv
  8376  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  8377  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  8378  0B96  0837               	movf	?___ftdiv,w
  8379  0B97  00D6               	movwf	trapmf@ua
  8380  0B98  0838               	movf	?___ftdiv+1,w
  8381  0B99  00D7               	movwf	trapmf@ua+1
  8382  0B9A  0839               	movf	?___ftdiv+2,w
  8383  0B9B  2BB8               	goto	L17
  8384  0B9C                     i1l2474:	
  8385                           
  8386                           ;main.c: 99: else if (x > d)
  8387  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8388  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8389  0B9E  0853               	movf	trapmf@d,w
  8390  0B9F  00F0               	movwf	___ftge@ff1
  8391  0BA0  0854               	movf	trapmf@d+1,w
  8392  0BA1  00F1               	movwf	___ftge@ff1+1
  8393  0BA2  0855               	movf	trapmf@d+2,w
  8394  0BA3  00F2               	movwf	___ftge@ff1+2
  8395  0BA4  0847               	movf	trapmf@x,w
  8396  0BA5  00F3               	movwf	___ftge@ff2
  8397  0BA6  0848               	movf	trapmf@x+1,w
  8398  0BA7  00F4               	movwf	___ftge@ff2+1
  8399  0BA8  0849               	movf	trapmf@x+2,w
  8400  0BA9  00F5               	movwf	___ftge@ff2+2
  8401  0BAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8402  0BAF  1803               	btfsc	3,0
  8403  0BB0  2BB9               	goto	i1l128
  8404  0BB1                     L18:	
  8405                           
  8406                           ;main.c: 100: ua = 0;
  8407  0BB1  3000               	movlw	0
  8408  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  8409  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  8410  0BB4  00D6               	movwf	trapmf@ua
  8411  0BB5  3000               	movlw	0
  8412  0BB6  00D7               	movwf	trapmf@ua+1
  8413  0BB7  3000               	movlw	0
  8414  0BB8                     L17:	
  8415  0BB8  00D8               	movwf	trapmf@ua+2
  8416  0BB9                     i1l128:	
  8417                           
  8418                           ;main.c: 102: return(ua);
  8419  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8420  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8421  0BBB  0856               	movf	trapmf@ua,w
  8422  0BBC  00C7               	movwf	?_trapmf
  8423  0BBD  0857               	movf	trapmf@ua+1,w
  8424  0BBE  00C8               	movwf	?_trapmf+1
  8425  0BBF  0858               	movf	trapmf@ua+2,w
  8426  0BC0  00C9               	movwf	?_trapmf+2
  8427  0BC1  0008               	return
  8428  0BC2                     __end_of_trapmf:	
  8429                           
  8430                           	psect	text33
  8431  10C9                     __ptext33:	
  8432 ;; *************** function ___ftneg *****************
  8433 ;; Defined at:
  8434 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  f1              3    0[COMMON] float 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  3    0[COMMON] float 
  8441 ;; Registers used:
  8442 ;;		wreg
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8448 ;;      Params:         3       0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0
  8451 ;;      Totals:         3       0       0       0       0
  8452 ;;Total ram usage:        3 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; This function calls:
  8455 ;;		Nothing
  8456 ;; This function is called by:
  8457 ;;		_trimf
  8458 ;;		_trapmf
  8459 ;;		_Fuzzy
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function ___ftneg
  8465  10C9                     ___ftneg:	
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in ___ftneg: [wreg]
  8469  10C9  0872               	movf	___ftneg@f1+2,w
  8470  10CA  0471               	iorwf	___ftneg@f1+1,w
  8471  10CB  0470               	iorwf	___ftneg@f1,w
  8472  10CC  1903               	skipnz
  8473  10CD  0008               	return
  8474  10CE  3080               	movlw	128
  8475  10CF  06F2               	xorwf	___ftneg@f1+2,f
  8476  10D0  0008               	return
  8477  10D1                     __end_of___ftneg:	
  8478                           
  8479                           	psect	text34
  8480  1624                     __ptext34:	
  8481 ;; *************** function ___ftdiv *****************
  8482 ;; Defined at:
  8483 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  f2              3   23[BANK0 ] float 
  8486 ;;  f1              3   26[BANK0 ] float 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  f3              3   34[BANK0 ] float 
  8489 ;;  sign            1   38[BANK0 ] unsigned char 
  8490 ;;  exp             1   37[BANK0 ] unsigned char 
  8491 ;;  cntr            1   33[BANK0 ] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  3   23[BANK0 ] float 
  8494 ;; Registers used:
  8495 ;;		wreg, status,2, status,0, pclath, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8501 ;;      Params:         0       6       0       0       0
  8502 ;;      Locals:         0       6       0       0       0
  8503 ;;      Temps:          0       4       0       0       0
  8504 ;;      Totals:         0      16       0       0       0
  8505 ;;Total ram usage:       16 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    1
  8508 ;; This function calls:
  8509 ;;		___ftpack
  8510 ;; This function is called by:
  8511 ;;		_trimf
  8512 ;;		_trapmf
  8513 ;;		_Fuzzy
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function ___ftdiv
  8519  1624                     ___ftdiv:	
  8520                           
  8521                           ;incstack = 0
  8522                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8523  1624  1283               	bcf	3,5	;RP0=0, select bank0
  8524  1625  1303               	bcf	3,6	;RP1=0, select bank0
  8525  1626  083A               	movf	___ftdiv@f1,w
  8526  1627  00BD               	movwf	??___ftdiv
  8527  1628  083B               	movf	___ftdiv@f1+1,w
  8528  1629  00BE               	movwf	??___ftdiv+1
  8529  162A  083C               	movf	___ftdiv@f1+2,w
  8530  162B  00BF               	movwf	??___ftdiv+2
  8531  162C  1003               	clrc
  8532  162D  0D3E               	rlf	??___ftdiv+1,w
  8533  162E  0D3F               	rlf	??___ftdiv+2,w
  8534  162F  00C0               	movwf	??___ftdiv+3
  8535  1630  0840               	movf	??___ftdiv+3,w
  8536  1631  00C5               	movwf	___ftdiv@exp
  8537  1632  08C5               	movf	___ftdiv@exp,f
  8538  1633  1D03               	skipz
  8539  1634  2E3C               	goto	i1l2358
  8540  1635  3000               	movlw	0
  8541  1636  00B7               	movwf	?___ftdiv
  8542  1637  3000               	movlw	0
  8543  1638  00B8               	movwf	?___ftdiv+1
  8544  1639  3000               	movlw	0
  8545  163A  00B9               	movwf	?___ftdiv+2
  8546  163B  0008               	return
  8547  163C                     i1l2358:	
  8548  163C  0837               	movf	___ftdiv@f2,w
  8549  163D  00BD               	movwf	??___ftdiv
  8550  163E  0838               	movf	___ftdiv@f2+1,w
  8551  163F  00BE               	movwf	??___ftdiv+1
  8552  1640  0839               	movf	___ftdiv@f2+2,w
  8553  1641  00BF               	movwf	??___ftdiv+2
  8554  1642  1003               	clrc
  8555  1643  0D3E               	rlf	??___ftdiv+1,w
  8556  1644  0D3F               	rlf	??___ftdiv+2,w
  8557  1645  00C0               	movwf	??___ftdiv+3
  8558  1646  0840               	movf	??___ftdiv+3,w
  8559  1647  00C6               	movwf	___ftdiv@sign
  8560  1648  08C6               	movf	___ftdiv@sign,f
  8561  1649  1D03               	skipz
  8562  164A  2E52               	goto	i1l2364
  8563  164B  3000               	movlw	0
  8564  164C  00B7               	movwf	?___ftdiv
  8565  164D  3000               	movlw	0
  8566  164E  00B8               	movwf	?___ftdiv+1
  8567  164F  3000               	movlw	0
  8568  1650  00B9               	movwf	?___ftdiv+2
  8569  1651  0008               	return
  8570  1652                     i1l2364:	
  8571  1652  3000               	movlw	0
  8572  1653  00C2               	movwf	___ftdiv@f3
  8573  1654  3000               	movlw	0
  8574  1655  00C3               	movwf	___ftdiv@f3+1
  8575  1656  3000               	movlw	0
  8576  1657  00C4               	movwf	___ftdiv@f3+2
  8577  1658  3089               	movlw	137
  8578  1659  0746               	addwf	___ftdiv@sign,w
  8579  165A  00BD               	movwf	??___ftdiv
  8580  165B  083D               	movf	??___ftdiv,w
  8581  165C  02C5               	subwf	___ftdiv@exp,f
  8582  165D  083A               	movf	___ftdiv@f1,w
  8583  165E  00BD               	movwf	??___ftdiv
  8584  165F  083B               	movf	___ftdiv@f1+1,w
  8585  1660  00BE               	movwf	??___ftdiv+1
  8586  1661  083C               	movf	___ftdiv@f1+2,w
  8587  1662  00BF               	movwf	??___ftdiv+2
  8588  1663  3010               	movlw	16
  8589  1664                     u251_25:	
  8590  1664  1003               	clrc
  8591  1665  0CBF               	rrf	??___ftdiv+2,f
  8592  1666  0CBE               	rrf	??___ftdiv+1,f
  8593  1667  0CBD               	rrf	??___ftdiv,f
  8594  1668  3EFF               	addlw	-1
  8595  1669  1D03               	skipz
  8596  166A  2E64               	goto	u251_25
  8597  166B  083D               	movf	??___ftdiv,w
  8598  166C  00C0               	movwf	??___ftdiv+3
  8599  166D  0840               	movf	??___ftdiv+3,w
  8600  166E  00C6               	movwf	___ftdiv@sign
  8601  166F  0837               	movf	___ftdiv@f2,w
  8602  1670  00BD               	movwf	??___ftdiv
  8603  1671  0838               	movf	___ftdiv@f2+1,w
  8604  1672  00BE               	movwf	??___ftdiv+1
  8605  1673  0839               	movf	___ftdiv@f2+2,w
  8606  1674  00BF               	movwf	??___ftdiv+2
  8607  1675  3010               	movlw	16
  8608  1676                     u252_25:	
  8609  1676  1003               	clrc
  8610  1677  0CBF               	rrf	??___ftdiv+2,f
  8611  1678  0CBE               	rrf	??___ftdiv+1,f
  8612  1679  0CBD               	rrf	??___ftdiv,f
  8613  167A  3EFF               	addlw	-1
  8614  167B  1D03               	skipz
  8615  167C  2E76               	goto	u252_25
  8616  167D  083D               	movf	??___ftdiv,w
  8617  167E  00C0               	movwf	??___ftdiv+3
  8618  167F  0840               	movf	??___ftdiv+3,w
  8619  1680  06C6               	xorwf	___ftdiv@sign,f
  8620  1681  3080               	movlw	128
  8621  1682  00BD               	movwf	??___ftdiv
  8622  1683  083D               	movf	??___ftdiv,w
  8623  1684  05C6               	andwf	___ftdiv@sign,f
  8624  1685  17BB               	bsf	___ftdiv@f1+1,7
  8625  1686  30FF               	movlw	255
  8626  1687  05BA               	andwf	___ftdiv@f1,f
  8627  1688  30FF               	movlw	255
  8628  1689  05BB               	andwf	___ftdiv@f1+1,f
  8629  168A  3000               	movlw	0
  8630  168B  05BC               	andwf	___ftdiv@f1+2,f
  8631  168C  17B8               	bsf	___ftdiv@f2+1,7
  8632  168D  30FF               	movlw	255
  8633  168E  05B7               	andwf	___ftdiv@f2,f
  8634  168F  30FF               	movlw	255
  8635  1690  05B8               	andwf	___ftdiv@f2+1,f
  8636  1691  3000               	movlw	0
  8637  1692  05B9               	andwf	___ftdiv@f2+2,f
  8638  1693  3018               	movlw	24
  8639  1694  00BD               	movwf	??___ftdiv
  8640  1695  083D               	movf	??___ftdiv,w
  8641  1696  00C1               	movwf	___ftdiv@cntr
  8642  1697                     i1l2378:	
  8643  1697  3001               	movlw	1
  8644  1698                     u253_25:	
  8645  1698  1003               	clrc
  8646  1699  0DC2               	rlf	___ftdiv@f3,f
  8647  169A  0DC3               	rlf	___ftdiv@f3+1,f
  8648  169B  0DC4               	rlf	___ftdiv@f3+2,f
  8649  169C  3EFF               	addlw	-1
  8650  169D  1D03               	skipz
  8651  169E  2E98               	goto	u253_25
  8652  169F  0839               	movf	___ftdiv@f2+2,w
  8653  16A0  023C               	subwf	___ftdiv@f1+2,w
  8654  16A1  1D03               	skipz
  8655  16A2  2EA9               	goto	u254_25
  8656  16A3  0838               	movf	___ftdiv@f2+1,w
  8657  16A4  023B               	subwf	___ftdiv@f1+1,w
  8658  16A5  1D03               	skipz
  8659  16A6  2EA9               	goto	u254_25
  8660  16A7  0837               	movf	___ftdiv@f2,w
  8661  16A8  023A               	subwf	___ftdiv@f1,w
  8662  16A9                     u254_25:	
  8663  16A9  1C03               	skipc
  8664  16AA  2EB6               	goto	i1l2386
  8665  16AB  0837               	movf	___ftdiv@f2,w
  8666  16AC  02BA               	subwf	___ftdiv@f1,f
  8667  16AD  0838               	movf	___ftdiv@f2+1,w
  8668  16AE  1C03               	skipc
  8669  16AF  0F38               	incfsz	___ftdiv@f2+1,w
  8670  16B0  02BB               	subwf	___ftdiv@f1+1,f
  8671  16B1  0839               	movf	___ftdiv@f2+2,w
  8672  16B2  1C03               	skipc
  8673  16B3  0A39               	incf	___ftdiv@f2+2,w
  8674  16B4  02BC               	subwf	___ftdiv@f1+2,f
  8675  16B5  1442               	bsf	___ftdiv@f3,0
  8676  16B6                     i1l2386:	
  8677  16B6  3001               	movlw	1
  8678  16B7                     u255_25:	
  8679  16B7  1003               	clrc
  8680  16B8  0DBA               	rlf	___ftdiv@f1,f
  8681  16B9  0DBB               	rlf	___ftdiv@f1+1,f
  8682  16BA  0DBC               	rlf	___ftdiv@f1+2,f
  8683  16BB  3EFF               	addlw	-1
  8684  16BC  1D03               	skipz
  8685  16BD  2EB7               	goto	u255_25
  8686  16BE  3001               	movlw	1
  8687  16BF  02C1               	subwf	___ftdiv@cntr,f
  8688  16C0  1D03               	btfss	3,2
  8689  16C1  2E97               	goto	i1l2378
  8690  16C2  0842               	movf	___ftdiv@f3,w
  8691  16C3  00F0               	movwf	___ftpack@arg
  8692  16C4  0843               	movf	___ftdiv@f3+1,w
  8693  16C5  00F1               	movwf	___ftpack@arg+1
  8694  16C6  0844               	movf	___ftdiv@f3+2,w
  8695  16C7  00F2               	movwf	___ftpack@arg+2
  8696  16C8  0845               	movf	___ftdiv@exp,w
  8697  16C9  00BD               	movwf	??___ftdiv
  8698  16CA  083D               	movf	??___ftdiv,w
  8699  16CB  00F3               	movwf	___ftpack@exp
  8700  16CC  0846               	movf	___ftdiv@sign,w
  8701  16CD  00BE               	movwf	??___ftdiv+1
  8702  16CE  083E               	movf	??___ftdiv+1,w
  8703  16CF  00F4               	movwf	___ftpack@sign
  8704  16D0  160A  118A  2436   	fcall	___ftpack
  8705  16D3  0870               	movf	?___ftpack,w
  8706  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  8707  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  8708  16D6  00B7               	movwf	?___ftdiv
  8709  16D7  0871               	movf	?___ftpack+1,w
  8710  16D8  00B8               	movwf	?___ftdiv+1
  8711  16D9  0872               	movf	?___ftpack+2,w
  8712  16DA  00B9               	movwf	?___ftdiv+2
  8713  16DB  0008               	return
  8714  16DC                     __end_of___ftdiv:	
  8715                           
  8716                           	psect	text35
  8717  06EE                     __ptext35:	
  8718 ;; *************** function ___ftadd *****************
  8719 ;; Defined at:
  8720 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;  f1              3   10[BANK0 ] float 
  8723 ;;  f2              3   13[BANK0 ] float 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  exp1            1   22[BANK0 ] unsigned char 
  8726 ;;  exp2            1   21[BANK0 ] unsigned char 
  8727 ;;  sign            1   20[BANK0 ] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  3   10[BANK0 ] float 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0, pclath, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8737 ;;      Params:         0       6       0       0       0
  8738 ;;      Locals:         0       3       0       0       0
  8739 ;;      Temps:          0       4       0       0       0
  8740 ;;      Totals:         0      13       0       0       0
  8741 ;;Total ram usage:       13 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    1
  8744 ;; This function calls:
  8745 ;;		___ftpack
  8746 ;; This function is called by:
  8747 ;;		_trimf
  8748 ;;		_trapmf
  8749 ;;		_Fuzzy
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           
  8754                           ;psect for function ___ftadd
  8755  06EE                     ___ftadd:	
  8756                           
  8757                           ;incstack = 0
  8758                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8759  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  8760  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  8761  06F0  082A               	movf	___ftadd@f1,w
  8762  06F1  00B0               	movwf	??___ftadd
  8763  06F2  082B               	movf	___ftadd@f1+1,w
  8764  06F3  00B1               	movwf	??___ftadd+1
  8765  06F4  082C               	movf	___ftadd@f1+2,w
  8766  06F5  00B2               	movwf	??___ftadd+2
  8767  06F6  1003               	clrc
  8768  06F7  0D31               	rlf	??___ftadd+1,w
  8769  06F8  0D32               	rlf	??___ftadd+2,w
  8770  06F9  00B3               	movwf	??___ftadd+3
  8771  06FA  0833               	movf	??___ftadd+3,w
  8772  06FB  00B6               	movwf	___ftadd@exp1
  8773  06FC  082D               	movf	___ftadd@f2,w
  8774  06FD  00B0               	movwf	??___ftadd
  8775  06FE  082E               	movf	___ftadd@f2+1,w
  8776  06FF  00B1               	movwf	??___ftadd+1
  8777  0700  082F               	movf	___ftadd@f2+2,w
  8778  0701  00B2               	movwf	??___ftadd+2
  8779  0702  1003               	clrc
  8780  0703  0D31               	rlf	??___ftadd+1,w
  8781  0704  0D32               	rlf	??___ftadd+2,w
  8782  0705  00B3               	movwf	??___ftadd+3
  8783  0706  0833               	movf	??___ftadd+3,w
  8784  0707  00B5               	movwf	___ftadd@exp2
  8785  0708  0836               	movf	___ftadd@exp1,w
  8786  0709  1903               	btfsc	3,2
  8787  070A  2F17               	goto	i1l2288
  8788  070B  0835               	movf	___ftadd@exp2,w
  8789  070C  0236               	subwf	___ftadd@exp1,w
  8790  070D  1803               	skipnc
  8791  070E  2F1E               	goto	i1l2292
  8792  070F  0336               	decf	___ftadd@exp1,w
  8793  0710  3AFF               	xorlw	255
  8794  0711  0735               	addwf	___ftadd@exp2,w
  8795  0712  00B0               	movwf	??___ftadd
  8796  0713  3019               	movlw	25
  8797  0714  0230               	subwf	??___ftadd,w
  8798  0715  1C03               	skipc
  8799  0716  2F1E               	goto	i1l2292
  8800  0717                     i1l2288:	
  8801  0717  082D               	movf	___ftadd@f2,w
  8802  0718  00AA               	movwf	?___ftadd
  8803  0719  082E               	movf	___ftadd@f2+1,w
  8804  071A  00AB               	movwf	?___ftadd+1
  8805  071B  082F               	movf	___ftadd@f2+2,w
  8806  071C  00AC               	movwf	?___ftadd+2
  8807  071D  0008               	return
  8808  071E                     i1l2292:	
  8809  071E  0835               	movf	___ftadd@exp2,w
  8810  071F  1903               	btfsc	3,2
  8811  0720  0008               	return
  8812  0721  0836               	movf	___ftadd@exp1,w
  8813  0722  0235               	subwf	___ftadd@exp2,w
  8814  0723  1803               	skipnc
  8815  0724  2F2D               	goto	i1l2298
  8816  0725  0335               	decf	___ftadd@exp2,w
  8817  0726  3AFF               	xorlw	255
  8818  0727  0736               	addwf	___ftadd@exp1,w
  8819  0728  00B0               	movwf	??___ftadd
  8820  0729  3019               	movlw	25
  8821  072A  0230               	subwf	??___ftadd,w
  8822  072B  1803               	btfsc	3,0
  8823  072C  0008               	return
  8824  072D                     i1l2298:	
  8825  072D  3006               	movlw	6
  8826  072E  00B0               	movwf	??___ftadd
  8827  072F  0830               	movf	??___ftadd,w
  8828  0730  00B4               	movwf	___ftadd@sign
  8829  0731  1BAC               	btfsc	___ftadd@f1+2,7
  8830  0732  17B4               	bsf	___ftadd@sign,7
  8831  0733  1BAF               	btfsc	___ftadd@f2+2,7
  8832  0734  1734               	bsf	___ftadd@sign,6
  8833  0735  17AB               	bsf	___ftadd@f1+1,7
  8834  0736  30FF               	movlw	255
  8835  0737  05AA               	andwf	___ftadd@f1,f
  8836  0738  30FF               	movlw	255
  8837  0739  05AB               	andwf	___ftadd@f1+1,f
  8838  073A  3000               	movlw	0
  8839  073B  05AC               	andwf	___ftadd@f1+2,f
  8840  073C  17AE               	bsf	___ftadd@f2+1,7
  8841  073D  30FF               	movlw	255
  8842  073E  05AD               	andwf	___ftadd@f2,f
  8843  073F  30FF               	movlw	255
  8844  0740  05AE               	andwf	___ftadd@f2+1,f
  8845  0741  3000               	movlw	0
  8846  0742  05AF               	andwf	___ftadd@f2+2,f
  8847  0743  0835               	movf	___ftadd@exp2,w
  8848  0744  0236               	subwf	___ftadd@exp1,w
  8849  0745  1803               	skipnc
  8850  0746  2F6D               	goto	i1l2320
  8851  0747                     i1l2310:	
  8852  0747  3001               	movlw	1
  8853  0748                     u234_25:	
  8854  0748  1003               	clrc
  8855  0749  0DAD               	rlf	___ftadd@f2,f
  8856  074A  0DAE               	rlf	___ftadd@f2+1,f
  8857  074B  0DAF               	rlf	___ftadd@f2+2,f
  8858  074C  3EFF               	addlw	-1
  8859  074D  1D03               	skipz
  8860  074E  2F48               	goto	u234_25
  8861  074F  3001               	movlw	1
  8862  0750  02B5               	subwf	___ftadd@exp2,f
  8863  0751  0835               	movf	___ftadd@exp2,w
  8864  0752  0636               	xorwf	___ftadd@exp1,w
  8865  0753  1903               	skipnz
  8866  0754  2F68               	goto	i1l2318
  8867  0755  3001               	movlw	1
  8868  0756  02B4               	subwf	___ftadd@sign,f
  8869  0757  0834               	movf	___ftadd@sign,w
  8870  0758  3907               	andlw	7
  8871  0759  1903               	btfsc	3,2
  8872  075A  2F68               	goto	i1l2318
  8873  075B  2F47               	goto	i1l2310
  8874  075C                     i1l2316:	
  8875  075C  3001               	movlw	1
  8876  075D                     u237_25:	
  8877  075D  1003               	clrc
  8878  075E  0CAC               	rrf	___ftadd@f1+2,f
  8879  075F  0CAB               	rrf	___ftadd@f1+1,f
  8880  0760  0CAA               	rrf	___ftadd@f1,f
  8881  0761  3EFF               	addlw	-1
  8882  0762  1D03               	skipz
  8883  0763  2F5D               	goto	u237_25
  8884  0764  3001               	movlw	1
  8885  0765  00B0               	movwf	??___ftadd
  8886  0766  0830               	movf	??___ftadd,w
  8887  0767  07B6               	addwf	___ftadd@exp1,f
  8888  0768                     i1l2318:	
  8889  0768  0836               	movf	___ftadd@exp1,w
  8890  0769  0635               	xorwf	___ftadd@exp2,w
  8891  076A  1903               	btfsc	3,2
  8892  076B  2F96               	goto	i1l788
  8893  076C  2F5C               	goto	i1l2316
  8894  076D                     i1l2320:	
  8895  076D  0836               	movf	___ftadd@exp1,w
  8896  076E  0235               	subwf	___ftadd@exp2,w
  8897  076F  1803               	skipnc
  8898  0770  2F96               	goto	i1l788
  8899  0771                     i1l2322:	
  8900  0771  3001               	movlw	1
  8901  0772                     u240_25:	
  8902  0772  1003               	clrc
  8903  0773  0DAA               	rlf	___ftadd@f1,f
  8904  0774  0DAB               	rlf	___ftadd@f1+1,f
  8905  0775  0DAC               	rlf	___ftadd@f1+2,f
  8906  0776  3EFF               	addlw	-1
  8907  0777  1D03               	skipz
  8908  0778  2F72               	goto	u240_25
  8909  0779  3001               	movlw	1
  8910  077A  02B6               	subwf	___ftadd@exp1,f
  8911  077B  0835               	movf	___ftadd@exp2,w
  8912  077C  0636               	xorwf	___ftadd@exp1,w
  8913  077D  1903               	skipnz
  8914  077E  2F92               	goto	i1l2330
  8915  077F  3001               	movlw	1
  8916  0780  02B4               	subwf	___ftadd@sign,f
  8917  0781  0834               	movf	___ftadd@sign,w
  8918  0782  3907               	andlw	7
  8919  0783  1903               	btfsc	3,2
  8920  0784  2F92               	goto	i1l2330
  8921  0785  2F71               	goto	i1l2322
  8922  0786                     i1l2328:	
  8923  0786  3001               	movlw	1
  8924  0787                     u243_25:	
  8925  0787  1003               	clrc
  8926  0788  0CAF               	rrf	___ftadd@f2+2,f
  8927  0789  0CAE               	rrf	___ftadd@f2+1,f
  8928  078A  0CAD               	rrf	___ftadd@f2,f
  8929  078B  3EFF               	addlw	-1
  8930  078C  1D03               	skipz
  8931  078D  2F87               	goto	u243_25
  8932  078E  3001               	movlw	1
  8933  078F  00B0               	movwf	??___ftadd
  8934  0790  0830               	movf	??___ftadd,w
  8935  0791  07B5               	addwf	___ftadd@exp2,f
  8936  0792                     i1l2330:	
  8937  0792  0836               	movf	___ftadd@exp1,w
  8938  0793  0635               	xorwf	___ftadd@exp2,w
  8939  0794  1D03               	skipz
  8940  0795  2F86               	goto	i1l2328
  8941  0796                     i1l788:	
  8942  0796  1FB4               	btfss	___ftadd@sign,7
  8943  0797  2FA8               	goto	i1l2334
  8944  0798  30FF               	movlw	255
  8945  0799  06AA               	xorwf	___ftadd@f1,f
  8946  079A  30FF               	movlw	255
  8947  079B  06AB               	xorwf	___ftadd@f1+1,f
  8948  079C  30FF               	movlw	255
  8949  079D  06AC               	xorwf	___ftadd@f1+2,f
  8950  079E  3001               	movlw	1
  8951  079F  07AA               	addwf	___ftadd@f1,f
  8952  07A0  3000               	movlw	0
  8953  07A1  1803               	skipnc
  8954  07A2  3001               	movlw	1
  8955  07A3  07AB               	addwf	___ftadd@f1+1,f
  8956  07A4  3000               	movlw	0
  8957  07A5  1803               	skipnc
  8958  07A6  3001               	movlw	1
  8959  07A7  07AC               	addwf	___ftadd@f1+2,f
  8960  07A8                     i1l2334:	
  8961  07A8  1F34               	btfss	___ftadd@sign,6
  8962  07A9  2FBA               	goto	i1l2338
  8963  07AA  30FF               	movlw	255
  8964  07AB  06AD               	xorwf	___ftadd@f2,f
  8965  07AC  30FF               	movlw	255
  8966  07AD  06AE               	xorwf	___ftadd@f2+1,f
  8967  07AE  30FF               	movlw	255
  8968  07AF  06AF               	xorwf	___ftadd@f2+2,f
  8969  07B0  3001               	movlw	1
  8970  07B1  07AD               	addwf	___ftadd@f2,f
  8971  07B2  3000               	movlw	0
  8972  07B3  1803               	skipnc
  8973  07B4  3001               	movlw	1
  8974  07B5  07AE               	addwf	___ftadd@f2+1,f
  8975  07B6  3000               	movlw	0
  8976  07B7  1803               	skipnc
  8977  07B8  3001               	movlw	1
  8978  07B9  07AF               	addwf	___ftadd@f2+2,f
  8979  07BA                     i1l2338:	
  8980  07BA  01B4               	clrf	___ftadd@sign
  8981  07BB  082A               	movf	___ftadd@f1,w
  8982  07BC  07AD               	addwf	___ftadd@f2,f
  8983  07BD  082B               	movf	___ftadd@f1+1,w
  8984  07BE  1103               	clrz
  8985  07BF  1803               	skipnc
  8986  07C0  0A2B               	incf	___ftadd@f1+1,w
  8987  07C1  1D03               	btfss	3,2
  8988  07C2  07AE               	addwf	___ftadd@f2+1,f
  8989  07C3  082C               	movf	___ftadd@f1+2,w
  8990  07C4  1103               	clrz
  8991  07C5  1803               	skipnc
  8992  07C6  0A2C               	incf	___ftadd@f1+2,w
  8993  07C7  1D03               	btfss	3,2
  8994  07C8  07AF               	addwf	___ftadd@f2+2,f
  8995  07C9  1FAF               	btfss	___ftadd@f2+2,7
  8996  07CA  2FDD               	goto	i1l2348
  8997  07CB  30FF               	movlw	255
  8998  07CC  06AD               	xorwf	___ftadd@f2,f
  8999  07CD  30FF               	movlw	255
  9000  07CE  06AE               	xorwf	___ftadd@f2+1,f
  9001  07CF  30FF               	movlw	255
  9002  07D0  06AF               	xorwf	___ftadd@f2+2,f
  9003  07D1  3001               	movlw	1
  9004  07D2  07AD               	addwf	___ftadd@f2,f
  9005  07D3  3000               	movlw	0
  9006  07D4  1803               	skipnc
  9007  07D5  3001               	movlw	1
  9008  07D6  07AE               	addwf	___ftadd@f2+1,f
  9009  07D7  3000               	movlw	0
  9010  07D8  1803               	skipnc
  9011  07D9  3001               	movlw	1
  9012  07DA  07AF               	addwf	___ftadd@f2+2,f
  9013  07DB  01B4               	clrf	___ftadd@sign
  9014  07DC  0AB4               	incf	___ftadd@sign,f
  9015  07DD                     i1l2348:	
  9016  07DD  082D               	movf	___ftadd@f2,w
  9017  07DE  00F0               	movwf	___ftpack@arg
  9018  07DF  082E               	movf	___ftadd@f2+1,w
  9019  07E0  00F1               	movwf	___ftpack@arg+1
  9020  07E1  082F               	movf	___ftadd@f2+2,w
  9021  07E2  00F2               	movwf	___ftpack@arg+2
  9022  07E3  0836               	movf	___ftadd@exp1,w
  9023  07E4  00B0               	movwf	??___ftadd
  9024  07E5  0830               	movf	??___ftadd,w
  9025  07E6  00F3               	movwf	___ftpack@exp
  9026  07E7  0834               	movf	___ftadd@sign,w
  9027  07E8  00B1               	movwf	??___ftadd+1
  9028  07E9  0831               	movf	??___ftadd+1,w
  9029  07EA  00F4               	movwf	___ftpack@sign
  9030  07EB  160A  118A  2436   	fcall	___ftpack
  9031  07EE  0870               	movf	?___ftpack,w
  9032  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  9033  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  9034  07F1  00AA               	movwf	?___ftadd
  9035  07F2  0871               	movf	?___ftpack+1,w
  9036  07F3  00AB               	movwf	?___ftadd+1
  9037  07F4  0872               	movf	?___ftpack+2,w
  9038  07F5  00AC               	movwf	?___ftadd+2
  9039  07F6  0008               	return
  9040  07F7                     __end_of___ftadd:	
  9041                           
  9042                           	psect	text36
  9043  118B                     __ptext36:	
  9044 ;; *************** function _max_val *****************
  9045 ;; Defined at:
  9046 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  a               3    0[BANK0 ] float 
  9049 ;;  b               3    3[BANK0 ] float 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  3    0[BANK0 ] float 
  9054 ;; Registers used:
  9055 ;;		wreg, status,2, status,0, pclath, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9061 ;;      Params:         0       6       0       0       0
  9062 ;;      Locals:         0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0
  9064 ;;      Totals:         0       6       0       0       0
  9065 ;;Total ram usage:        6 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    1
  9068 ;; This function calls:
  9069 ;;		___ftge
  9070 ;; This function is called by:
  9071 ;;		_Fuzzy
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _max_val
  9077  118B                     _max_val:	
  9078                           
  9079                           ;main.c: 119: if (a > b)
  9080                           
  9081                           ;incstack = 0
  9082                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  9083  118B  1283               	bcf	3,5	;RP0=0, select bank0
  9084  118C  1303               	bcf	3,6	;RP1=0, select bank0
  9085  118D  0823               	movf	max_val@b,w
  9086  118E  00F0               	movwf	___ftge@ff1
  9087  118F  0824               	movf	max_val@b+1,w
  9088  1190  00F1               	movwf	___ftge@ff1+1
  9089  1191  0825               	movf	max_val@b+2,w
  9090  1192  00F2               	movwf	___ftge@ff1+2
  9091  1193  0820               	movf	max_val@a,w
  9092  1194  00F3               	movwf	___ftge@ff2
  9093  1195  0821               	movf	max_val@a+1,w
  9094  1196  00F4               	movwf	___ftge@ff2+1
  9095  1197  0822               	movf	max_val@a+2,w
  9096  1198  00F5               	movwf	___ftge@ff2+2
  9097  1199  160A  118A  23D9  160A  118A  	fcall	___ftge
  9098  119E  1C03               	btfss	3,0
  9099  119F  0008               	return
  9100                           
  9101                           ;main.c: 121: else
  9102                           ;main.c: 122: return b;
  9103                           
  9104                           ;main.c: 120: return a;
  9105  11A0  1283               	bcf	3,5	;RP0=0, select bank0
  9106  11A1  1303               	bcf	3,6	;RP1=0, select bank0
  9107  11A2  0823               	movf	max_val@b,w
  9108  11A3  00A0               	movwf	?_max_val
  9109  11A4  0824               	movf	max_val@b+1,w
  9110  11A5  00A1               	movwf	?_max_val+1
  9111  11A6  0825               	movf	max_val@b+2,w
  9112  11A7  00A2               	movwf	?_max_val+2
  9113  11A8  0008               	return
  9114  11A9                     __end_of_max_val:	
  9115                           
  9116                           	psect	text37
  9117  13D9                     __ptext37:	
  9118 ;; *************** function ___ftge *****************
  9119 ;; Defined at:
  9120 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  ff1             3    0[COMMON] float 
  9123 ;;  ff2             3    3[COMMON] float 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;		None
  9126 ;; Return value:  Size  Location     Type
  9127 ;;		None               void
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9135 ;;      Params:         6       0       0       0       0
  9136 ;;      Locals:         0       0       0       0       0
  9137 ;;      Temps:          6       0       0       0       0
  9138 ;;      Totals:        12       0       0       0       0
  9139 ;;Total ram usage:       12 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_trimf
  9145 ;;		_trapmf
  9146 ;;		_max_val
  9147 ;;		_Fuzzy
  9148 ;;		_min_val
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function ___ftge
  9154  13D9                     ___ftge:	
  9155                           
  9156                           ;incstack = 0
  9157                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9158  13D9  1FF2               	btfss	___ftge@ff1+2,7
  9159  13DA  2C00               	goto	i1l2398
  9160  13DB  3000               	movlw	0
  9161  13DC  00F6               	movwf	??___ftge
  9162  13DD  3000               	movlw	0
  9163  13DE  00F7               	movwf	??___ftge+1
  9164  13DF  3080               	movlw	128
  9165  13E0  00F8               	movwf	??___ftge+2
  9166  13E1  0970               	comf	___ftge@ff1,w
  9167  13E2  00F9               	movwf	??___ftge+3
  9168  13E3  0971               	comf	___ftge@ff1+1,w
  9169  13E4  00FA               	movwf	??___ftge+4
  9170  13E5  0972               	comf	___ftge@ff1+2,w
  9171  13E6  00FB               	movwf	??___ftge+5
  9172  13E7  0AF9               	incf	??___ftge+3,f
  9173  13E8  1903               	skipnz
  9174  13E9  0AFA               	incf	??___ftge+4,f
  9175  13EA  1903               	skipnz
  9176  13EB  0AFB               	incf	??___ftge+5,f
  9177  13EC  0879               	movf	??___ftge+3,w
  9178  13ED  07F6               	addwf	??___ftge,f
  9179  13EE  087A               	movf	??___ftge+4,w
  9180  13EF  1803               	skipnc
  9181  13F0  0F7A               	incfsz	??___ftge+4,w
  9182  13F1  2BF3               	goto	u258_21
  9183  13F2  2BF4               	goto	u258_22
  9184  13F3                     u258_21:	
  9185  13F3  07F7               	addwf	??___ftge+1,f
  9186  13F4                     u258_22:	
  9187  13F4  087B               	movf	??___ftge+5,w
  9188  13F5  1803               	skipnc
  9189  13F6  0F7B               	incfsz	??___ftge+5,w
  9190  13F7  2BF9               	goto	u258_23
  9191  13F8  2BFA               	goto	u258_24
  9192  13F9                     u258_23:	
  9193  13F9  07F8               	addwf	??___ftge+2,f
  9194  13FA                     u258_24:	
  9195  13FA  0876               	movf	??___ftge,w
  9196  13FB  00F0               	movwf	___ftge@ff1
  9197  13FC  0877               	movf	??___ftge+1,w
  9198  13FD  00F1               	movwf	___ftge@ff1+1
  9199  13FE  0878               	movf	??___ftge+2,w
  9200  13FF  00F2               	movwf	___ftge@ff1+2
  9201  1400                     i1l2398:	
  9202  1400  1FF5               	btfss	___ftge@ff2+2,7
  9203  1401  2C27               	goto	i1l2402
  9204  1402  3000               	movlw	0
  9205  1403  00F6               	movwf	??___ftge
  9206  1404  3000               	movlw	0
  9207  1405  00F7               	movwf	??___ftge+1
  9208  1406  3080               	movlw	128
  9209  1407  00F8               	movwf	??___ftge+2
  9210  1408  0973               	comf	___ftge@ff2,w
  9211  1409  00F9               	movwf	??___ftge+3
  9212  140A  0974               	comf	___ftge@ff2+1,w
  9213  140B  00FA               	movwf	??___ftge+4
  9214  140C  0975               	comf	___ftge@ff2+2,w
  9215  140D  00FB               	movwf	??___ftge+5
  9216  140E  0AF9               	incf	??___ftge+3,f
  9217  140F  1903               	skipnz
  9218  1410  0AFA               	incf	??___ftge+4,f
  9219  1411  1903               	skipnz
  9220  1412  0AFB               	incf	??___ftge+5,f
  9221  1413  0879               	movf	??___ftge+3,w
  9222  1414  07F6               	addwf	??___ftge,f
  9223  1415  087A               	movf	??___ftge+4,w
  9224  1416  1803               	skipnc
  9225  1417  0F7A               	incfsz	??___ftge+4,w
  9226  1418  2C1A               	goto	u260_21
  9227  1419  2C1B               	goto	u260_22
  9228  141A                     u260_21:	
  9229  141A  07F7               	addwf	??___ftge+1,f
  9230  141B                     u260_22:	
  9231  141B  087B               	movf	??___ftge+5,w
  9232  141C  1803               	skipnc
  9233  141D  0F7B               	incfsz	??___ftge+5,w
  9234  141E  2C20               	goto	u260_23
  9235  141F  2C21               	goto	u260_24
  9236  1420                     u260_23:	
  9237  1420  07F8               	addwf	??___ftge+2,f
  9238  1421                     u260_24:	
  9239  1421  0876               	movf	??___ftge,w
  9240  1422  00F3               	movwf	___ftge@ff2
  9241  1423  0877               	movf	??___ftge+1,w
  9242  1424  00F4               	movwf	___ftge@ff2+1
  9243  1425  0878               	movf	??___ftge+2,w
  9244  1426  00F5               	movwf	___ftge@ff2+2
  9245  1427                     i1l2402:	
  9246  1427  3080               	movlw	128
  9247  1428  06F2               	xorwf	___ftge@ff1+2,f
  9248  1429  3080               	movlw	128
  9249  142A  06F5               	xorwf	___ftge@ff2+2,f
  9250  142B  0875               	movf	___ftge@ff2+2,w
  9251  142C  0272               	subwf	___ftge@ff1+2,w
  9252  142D  1D03               	skipz
  9253  142E  0008               	return
  9254  142F  0874               	movf	___ftge@ff2+1,w
  9255  1430  0271               	subwf	___ftge@ff1+1,w
  9256  1431  1D03               	skipz
  9257  1432  0008               	return
  9258  1433  0873               	movf	___ftge@ff2,w
  9259  1434  0270               	subwf	___ftge@ff1,w
  9260  1435  0008               	return
  9261  1436                     __end_of___ftge:	
  9262                           
  9263                           	psect	text38
  9264  1113                     __ptext38:	
  9265 ;; *************** function ___lwtoft *****************
  9266 ;; Defined at:
  9267 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  c               2    8[COMMON] unsigned int 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  3    8[COMMON] float 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, pclath, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9281 ;;      Params:         3       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0
  9283 ;;      Temps:          1       0       0       0       0
  9284 ;;      Totals:         4       0       0       0       0
  9285 ;;Total ram usage:        4 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    1
  9288 ;; This function calls:
  9289 ;;		___ftpack
  9290 ;; This function is called by:
  9291 ;;		_Fuzzy
  9292 ;;		_ISR
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function ___lwtoft
  9298  1113                     ___lwtoft:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9302  1113  0878               	movf	___lwtoft@c,w
  9303  1114  00F0               	movwf	___ftpack@arg
  9304  1115  0879               	movf	___lwtoft@c+1,w
  9305  1116  00F1               	movwf	___ftpack@arg+1
  9306  1117  01F2               	clrf	___ftpack@arg+2
  9307  1118  308E               	movlw	142
  9308  1119  00FB               	movwf	??___lwtoft
  9309  111A  087B               	movf	??___lwtoft,w
  9310  111B  00F3               	movwf	___ftpack@exp
  9311  111C  01F4               	clrf	___ftpack@sign
  9312  111D  160A  118A  2436   	fcall	___ftpack
  9313  1120  0870               	movf	?___ftpack,w
  9314  1121  00F8               	movwf	?___lwtoft
  9315  1122  0871               	movf	?___ftpack+1,w
  9316  1123  00F9               	movwf	?___lwtoft+1
  9317  1124  0872               	movf	?___ftpack+2,w
  9318  1125  00FA               	movwf	?___lwtoft+2
  9319  1126  0008               	return
  9320  1127                     __end_of___lwtoft:	
  9321                           
  9322                           	psect	text39
  9323  1509                     __ptext39:	
  9324 ;; *************** function ___fttol *****************
  9325 ;; Defined at:
  9326 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  f1              3    0[COMMON] float 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  lval            4    9[COMMON] unsigned long 
  9331 ;;  exp1            1   13[COMMON] unsigned char 
  9332 ;;  sign1           1    8[COMMON] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  4    0[COMMON] long 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9342 ;;      Params:         4       0       0       0       0
  9343 ;;      Locals:         6       0       0       0       0
  9344 ;;      Temps:          4       0       0       0       0
  9345 ;;      Totals:        14       0       0       0       0
  9346 ;;Total ram usage:       14 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_Fuzzy
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           
  9356                           ;psect for function ___fttol
  9357  1509                     ___fttol:	
  9358                           
  9359                           ;incstack = 0
  9360                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9361  1509  0870               	movf	___fttol@f1,w
  9362  150A  00F4               	movwf	??___fttol
  9363  150B  0871               	movf	___fttol@f1+1,w
  9364  150C  00F5               	movwf	??___fttol+1
  9365  150D  0872               	movf	___fttol@f1+2,w
  9366  150E  00F6               	movwf	??___fttol+2
  9367  150F  1003               	clrc
  9368  1510  0D75               	rlf	??___fttol+1,w
  9369  1511  0D76               	rlf	??___fttol+2,w
  9370  1512  00F7               	movwf	??___fttol+3
  9371  1513  0877               	movf	??___fttol+3,w
  9372  1514  00FD               	movwf	___fttol@exp1
  9373  1515  08FD               	movf	___fttol@exp1,f
  9374  1516  1D03               	skipz
  9375  1517  2D21               	goto	i1l2630
  9376  1518  3000               	movlw	0
  9377  1519  00F3               	movwf	?___fttol+3
  9378  151A  3000               	movlw	0
  9379  151B  00F2               	movwf	?___fttol+2
  9380  151C  3000               	movlw	0
  9381  151D  00F1               	movwf	?___fttol+1
  9382  151E  3000               	movlw	0
  9383  151F  00F0               	movwf	?___fttol
  9384  1520  0008               	return
  9385  1521                     i1l2630:	
  9386  1521  0870               	movf	___fttol@f1,w
  9387  1522  00F4               	movwf	??___fttol
  9388  1523  0871               	movf	___fttol@f1+1,w
  9389  1524  00F5               	movwf	??___fttol+1
  9390  1525  0872               	movf	___fttol@f1+2,w
  9391  1526  00F6               	movwf	??___fttol+2
  9392  1527  3017               	movlw	23
  9393  1528                     u311_25:	
  9394  1528  1003               	clrc
  9395  1529  0CF6               	rrf	??___fttol+2,f
  9396  152A  0CF5               	rrf	??___fttol+1,f
  9397  152B  0CF4               	rrf	??___fttol,f
  9398  152C  3EFF               	addlw	-1
  9399  152D  1D03               	skipz
  9400  152E  2D28               	goto	u311_25
  9401  152F  0874               	movf	??___fttol,w
  9402  1530  00F7               	movwf	??___fttol+3
  9403  1531  0877               	movf	??___fttol+3,w
  9404  1532  00F8               	movwf	___fttol@sign1
  9405  1533  17F1               	bsf	___fttol@f1+1,7
  9406  1534  30FF               	movlw	255
  9407  1535  05F0               	andwf	___fttol@f1,f
  9408  1536  30FF               	movlw	255
  9409  1537  05F1               	andwf	___fttol@f1+1,f
  9410  1538  3000               	movlw	0
  9411  1539  05F2               	andwf	___fttol@f1+2,f
  9412  153A  0870               	movf	___fttol@f1,w
  9413  153B  00F9               	movwf	___fttol@lval
  9414  153C  0871               	movf	___fttol@f1+1,w
  9415  153D  00FA               	movwf	___fttol@lval+1
  9416  153E  0872               	movf	___fttol@f1+2,w
  9417  153F  00FB               	movwf	___fttol@lval+2
  9418  1540  01FC               	clrf	___fttol@lval+3
  9419  1541  308E               	movlw	142
  9420  1542  02FD               	subwf	___fttol@exp1,f
  9421  1543  1FFD               	btfss	___fttol@exp1,7
  9422  1544  2D63               	goto	i1l2650
  9423  1545  087D               	movf	___fttol@exp1,w
  9424  1546  3A80               	xorlw	128
  9425  1547  3E8F               	addlw	143
  9426  1548  1803               	skipnc
  9427  1549  2D53               	goto	i1l2648
  9428  154A  3000               	movlw	0
  9429  154B  00F3               	movwf	?___fttol+3
  9430  154C  3000               	movlw	0
  9431  154D  00F2               	movwf	?___fttol+2
  9432  154E  3000               	movlw	0
  9433  154F  00F1               	movwf	?___fttol+1
  9434  1550  3000               	movlw	0
  9435  1551  00F0               	movwf	?___fttol
  9436  1552  0008               	return
  9437  1553                     i1l2648:	
  9438  1553  3001               	movlw	1
  9439  1554                     u314_25:	
  9440  1554  1003               	clrc
  9441  1555  0CFC               	rrf	___fttol@lval+3,f
  9442  1556  0CFB               	rrf	___fttol@lval+2,f
  9443  1557  0CFA               	rrf	___fttol@lval+1,f
  9444  1558  0CF9               	rrf	___fttol@lval,f
  9445  1559  3EFF               	addlw	-1
  9446  155A  1D03               	skipz
  9447  155B  2D54               	goto	u314_25
  9448  155C  3001               	movlw	1
  9449  155D  00F4               	movwf	??___fttol
  9450  155E  0874               	movf	??___fttol,w
  9451  155F  07FD               	addwf	___fttol@exp1,f
  9452  1560  1903               	btfsc	3,2
  9453  1561  2D7E               	goto	i1l2660
  9454  1562  2D53               	goto	i1l2648
  9455  1563                     i1l2650:	
  9456  1563  3018               	movlw	24
  9457  1564  027D               	subwf	___fttol@exp1,w
  9458  1565  1C03               	skipc
  9459  1566  2D7B               	goto	i1l2658
  9460  1567  3000               	movlw	0
  9461  1568  00F3               	movwf	?___fttol+3
  9462  1569  3000               	movlw	0
  9463  156A  00F2               	movwf	?___fttol+2
  9464  156B  3000               	movlw	0
  9465  156C  00F1               	movwf	?___fttol+1
  9466  156D  3000               	movlw	0
  9467  156E  00F0               	movwf	?___fttol
  9468  156F  0008               	return
  9469  1570                     i1l2656:	
  9470  1570  3001               	movlw	1
  9471  1571  00F4               	movwf	??___fttol
  9472  1572                     u317_25:	
  9473  1572  1003               	clrc
  9474  1573  0DF9               	rlf	___fttol@lval,f
  9475  1574  0DFA               	rlf	___fttol@lval+1,f
  9476  1575  0DFB               	rlf	___fttol@lval+2,f
  9477  1576  0DFC               	rlf	___fttol@lval+3,f
  9478  1577  0BF4               	decfsz	??___fttol,f
  9479  1578  2D72               	goto	u317_25
  9480  1579  3001               	movlw	1
  9481  157A  02FD               	subwf	___fttol@exp1,f
  9482  157B                     i1l2658:	
  9483  157B  08FD               	movf	___fttol@exp1,f
  9484  157C  1D03               	skipz
  9485  157D  2D70               	goto	i1l2656
  9486  157E                     i1l2660:	
  9487  157E  0878               	movf	___fttol@sign1,w
  9488  157F  1903               	btfsc	3,2
  9489  1580  2D8C               	goto	i1l2664
  9490  1581  09F9               	comf	___fttol@lval,f
  9491  1582  09FA               	comf	___fttol@lval+1,f
  9492  1583  09FB               	comf	___fttol@lval+2,f
  9493  1584  09FC               	comf	___fttol@lval+3,f
  9494  1585  0AF9               	incf	___fttol@lval,f
  9495  1586  1903               	skipnz
  9496  1587  0AFA               	incf	___fttol@lval+1,f
  9497  1588  1903               	skipnz
  9498  1589  0AFB               	incf	___fttol@lval+2,f
  9499  158A  1903               	skipnz
  9500  158B  0AFC               	incf	___fttol@lval+3,f
  9501  158C                     i1l2664:	
  9502  158C  087C               	movf	___fttol@lval+3,w
  9503  158D  00F3               	movwf	?___fttol+3
  9504  158E  087B               	movf	___fttol@lval+2,w
  9505  158F  00F2               	movwf	?___fttol+2
  9506  1590  087A               	movf	___fttol@lval+1,w
  9507  1591  00F1               	movwf	?___fttol+1
  9508  1592  0879               	movf	___fttol@lval,w
  9509  1593  00F0               	movwf	?___fttol
  9510  1594  0008               	return
  9511  1595                     __end_of___fttol:	
  9512                           
  9513                           	psect	text40
  9514  0852                     __ptext40:	
  9515 ;; *************** function ___ftmul *****************
  9516 ;; Defined at:
  9517 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  f1              3    8[COMMON] float 
  9520 ;;  f2              3   11[COMMON] float 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9523 ;;  sign            1    9[BANK0 ] unsigned char 
  9524 ;;  cntr            1    8[BANK0 ] unsigned char 
  9525 ;;  exp             1    4[BANK0 ] unsigned char 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  3    8[COMMON] float 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0, pclath, cstack
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9535 ;;      Params:         6       0       0       0       0
  9536 ;;      Locals:         0       6       0       0       0
  9537 ;;      Temps:          0       4       0       0       0
  9538 ;;      Totals:         6      10       0       0       0
  9539 ;;Total ram usage:       16 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    1
  9542 ;; This function calls:
  9543 ;;		___ftpack
  9544 ;; This function is called by:
  9545 ;;		_Fuzzy
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           
  9550                           ;psect for function ___ftmul
  9551  0852                     ___ftmul:	
  9552                           
  9553                           ;incstack = 0
  9554                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9555  0852  0878               	movf	___ftmul@f1,w
  9556  0853  1283               	bcf	3,5	;RP0=0, select bank0
  9557  0854  1303               	bcf	3,6	;RP1=0, select bank0
  9558  0855  00A0               	movwf	??___ftmul
  9559  0856  0879               	movf	___ftmul@f1+1,w
  9560  0857  00A1               	movwf	??___ftmul+1
  9561  0858  087A               	movf	___ftmul@f1+2,w
  9562  0859  00A2               	movwf	??___ftmul+2
  9563  085A  1003               	clrc
  9564  085B  0D21               	rlf	??___ftmul+1,w
  9565  085C  0D22               	rlf	??___ftmul+2,w
  9566  085D  00A3               	movwf	??___ftmul+3
  9567  085E  0823               	movf	??___ftmul+3,w
  9568  085F  00A4               	movwf	___ftmul@exp
  9569  0860  08A4               	movf	___ftmul@exp,f
  9570  0861  1D03               	skipz
  9571  0862  286A               	goto	i1l2580
  9572  0863  3000               	movlw	0
  9573  0864  00F8               	movwf	?___ftmul
  9574  0865  3000               	movlw	0
  9575  0866  00F9               	movwf	?___ftmul+1
  9576  0867  3000               	movlw	0
  9577  0868  00FA               	movwf	?___ftmul+2
  9578  0869  0008               	return
  9579  086A                     i1l2580:	
  9580  086A  087B               	movf	___ftmul@f2,w
  9581  086B  00A0               	movwf	??___ftmul
  9582  086C  087C               	movf	___ftmul@f2+1,w
  9583  086D  00A1               	movwf	??___ftmul+1
  9584  086E  087D               	movf	___ftmul@f2+2,w
  9585  086F  00A2               	movwf	??___ftmul+2
  9586  0870  1003               	clrc
  9587  0871  0D21               	rlf	??___ftmul+1,w
  9588  0872  0D22               	rlf	??___ftmul+2,w
  9589  0873  00A3               	movwf	??___ftmul+3
  9590  0874  0823               	movf	??___ftmul+3,w
  9591  0875  00A9               	movwf	___ftmul@sign
  9592  0876  08A9               	movf	___ftmul@sign,f
  9593  0877  1D03               	skipz
  9594  0878  2880               	goto	i1l2586
  9595  0879  3000               	movlw	0
  9596  087A  00F8               	movwf	?___ftmul
  9597  087B  3000               	movlw	0
  9598  087C  00F9               	movwf	?___ftmul+1
  9599  087D  3000               	movlw	0
  9600  087E  00FA               	movwf	?___ftmul+2
  9601  087F  0008               	return
  9602  0880                     i1l2586:	
  9603  0880  0829               	movf	___ftmul@sign,w
  9604  0881  3E7B               	addlw	123
  9605  0882  00A0               	movwf	??___ftmul
  9606  0883  0820               	movf	??___ftmul,w
  9607  0884  07A4               	addwf	___ftmul@exp,f
  9608  0885  0878               	movf	___ftmul@f1,w
  9609  0886  00A0               	movwf	??___ftmul
  9610  0887  0879               	movf	___ftmul@f1+1,w
  9611  0888  00A1               	movwf	??___ftmul+1
  9612  0889  087A               	movf	___ftmul@f1+2,w
  9613  088A  00A2               	movwf	??___ftmul+2
  9614  088B  3010               	movlw	16
  9615  088C                     u298_25:	
  9616  088C  1003               	clrc
  9617  088D  0CA2               	rrf	??___ftmul+2,f
  9618  088E  0CA1               	rrf	??___ftmul+1,f
  9619  088F  0CA0               	rrf	??___ftmul,f
  9620  0890  3EFF               	addlw	-1
  9621  0891  1D03               	skipz
  9622  0892  288C               	goto	u298_25
  9623  0893  0820               	movf	??___ftmul,w
  9624  0894  00A3               	movwf	??___ftmul+3
  9625  0895  0823               	movf	??___ftmul+3,w
  9626  0896  00A9               	movwf	___ftmul@sign
  9627  0897  087B               	movf	___ftmul@f2,w
  9628  0898  00A0               	movwf	??___ftmul
  9629  0899  087C               	movf	___ftmul@f2+1,w
  9630  089A  00A1               	movwf	??___ftmul+1
  9631  089B  087D               	movf	___ftmul@f2+2,w
  9632  089C  00A2               	movwf	??___ftmul+2
  9633  089D  3010               	movlw	16
  9634  089E                     u299_25:	
  9635  089E  1003               	clrc
  9636  089F  0CA2               	rrf	??___ftmul+2,f
  9637  08A0  0CA1               	rrf	??___ftmul+1,f
  9638  08A1  0CA0               	rrf	??___ftmul,f
  9639  08A2  3EFF               	addlw	-1
  9640  08A3  1D03               	skipz
  9641  08A4  289E               	goto	u299_25
  9642  08A5  0820               	movf	??___ftmul,w
  9643  08A6  00A3               	movwf	??___ftmul+3
  9644  08A7  0823               	movf	??___ftmul+3,w
  9645  08A8  06A9               	xorwf	___ftmul@sign,f
  9646  08A9  3080               	movlw	128
  9647  08AA  00A0               	movwf	??___ftmul
  9648  08AB  0820               	movf	??___ftmul,w
  9649  08AC  05A9               	andwf	___ftmul@sign,f
  9650  08AD  17F9               	bsf	___ftmul@f1+1,7
  9651  08AE  17FC               	bsf	___ftmul@f2+1,7
  9652  08AF  30FF               	movlw	255
  9653  08B0  05FB               	andwf	___ftmul@f2,f
  9654  08B1  30FF               	movlw	255
  9655  08B2  05FC               	andwf	___ftmul@f2+1,f
  9656  08B3  3000               	movlw	0
  9657  08B4  05FD               	andwf	___ftmul@f2+2,f
  9658  08B5  3000               	movlw	0
  9659  08B6  00A5               	movwf	___ftmul@f3_as_product
  9660  08B7  3000               	movlw	0
  9661  08B8  00A6               	movwf	___ftmul@f3_as_product+1
  9662  08B9  3000               	movlw	0
  9663  08BA  00A7               	movwf	___ftmul@f3_as_product+2
  9664  08BB  3007               	movlw	7
  9665  08BC  00A0               	movwf	??___ftmul
  9666  08BD  0820               	movf	??___ftmul,w
  9667  08BE  00A8               	movwf	___ftmul@cntr
  9668  08BF                     i1l2598:	
  9669  08BF  1C78               	btfss	___ftmul@f1,0
  9670  08C0  28CF               	goto	i1l2602
  9671  08C1  087B               	movf	___ftmul@f2,w
  9672  08C2  07A5               	addwf	___ftmul@f3_as_product,f
  9673  08C3  087C               	movf	___ftmul@f2+1,w
  9674  08C4  1103               	clrz
  9675  08C5  1803               	skipnc
  9676  08C6  0A7C               	incf	___ftmul@f2+1,w
  9677  08C7  1D03               	btfss	3,2
  9678  08C8  07A6               	addwf	___ftmul@f3_as_product+1,f
  9679  08C9  087D               	movf	___ftmul@f2+2,w
  9680  08CA  1103               	clrz
  9681  08CB  1803               	skipnc
  9682  08CC  0A7D               	incf	___ftmul@f2+2,w
  9683  08CD  1D03               	btfss	3,2
  9684  08CE  07A7               	addwf	___ftmul@f3_as_product+2,f
  9685  08CF                     i1l2602:	
  9686  08CF  3001               	movlw	1
  9687  08D0                     u302_25:	
  9688  08D0  1003               	clrc
  9689  08D1  0CFA               	rrf	___ftmul@f1+2,f
  9690  08D2  0CF9               	rrf	___ftmul@f1+1,f
  9691  08D3  0CF8               	rrf	___ftmul@f1,f
  9692  08D4  3EFF               	addlw	-1
  9693  08D5  1D03               	skipz
  9694  08D6  28D0               	goto	u302_25
  9695  08D7  3001               	movlw	1
  9696  08D8                     u303_25:	
  9697  08D8  1003               	clrc
  9698  08D9  0DFB               	rlf	___ftmul@f2,f
  9699  08DA  0DFC               	rlf	___ftmul@f2+1,f
  9700  08DB  0DFD               	rlf	___ftmul@f2+2,f
  9701  08DC  3EFF               	addlw	-1
  9702  08DD  1D03               	skipz
  9703  08DE  28D8               	goto	u303_25
  9704  08DF  3001               	movlw	1
  9705  08E0  02A8               	subwf	___ftmul@cntr,f
  9706  08E1  1D03               	btfss	3,2
  9707  08E2  28BF               	goto	i1l2598
  9708  08E3  3009               	movlw	9
  9709  08E4  00A0               	movwf	??___ftmul
  9710  08E5  0820               	movf	??___ftmul,w
  9711  08E6  00A8               	movwf	___ftmul@cntr
  9712  08E7                     i1l2610:	
  9713  08E7  1C78               	btfss	___ftmul@f1,0
  9714  08E8  28F7               	goto	i1l2614
  9715  08E9  087B               	movf	___ftmul@f2,w
  9716  08EA  07A5               	addwf	___ftmul@f3_as_product,f
  9717  08EB  087C               	movf	___ftmul@f2+1,w
  9718  08EC  1103               	clrz
  9719  08ED  1803               	skipnc
  9720  08EE  0A7C               	incf	___ftmul@f2+1,w
  9721  08EF  1D03               	btfss	3,2
  9722  08F0  07A6               	addwf	___ftmul@f3_as_product+1,f
  9723  08F1  087D               	movf	___ftmul@f2+2,w
  9724  08F2  1103               	clrz
  9725  08F3  1803               	skipnc
  9726  08F4  0A7D               	incf	___ftmul@f2+2,w
  9727  08F5  1D03               	btfss	3,2
  9728  08F6  07A7               	addwf	___ftmul@f3_as_product+2,f
  9729  08F7                     i1l2614:	
  9730  08F7  3001               	movlw	1
  9731  08F8                     u307_25:	
  9732  08F8  1003               	clrc
  9733  08F9  0CFA               	rrf	___ftmul@f1+2,f
  9734  08FA  0CF9               	rrf	___ftmul@f1+1,f
  9735  08FB  0CF8               	rrf	___ftmul@f1,f
  9736  08FC  3EFF               	addlw	-1
  9737  08FD  1D03               	skipz
  9738  08FE  28F8               	goto	u307_25
  9739  08FF  3001               	movlw	1
  9740  0900                     u308_25:	
  9741  0900  1003               	clrc
  9742  0901  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9743  0902  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9744  0903  0CA5               	rrf	___ftmul@f3_as_product,f
  9745  0904  3EFF               	addlw	-1
  9746  0905  1D03               	skipz
  9747  0906  2900               	goto	u308_25
  9748  0907  3001               	movlw	1
  9749  0908  02A8               	subwf	___ftmul@cntr,f
  9750  0909  1D03               	btfss	3,2
  9751  090A  28E7               	goto	i1l2610
  9752  090B  0825               	movf	___ftmul@f3_as_product,w
  9753  090C  00F0               	movwf	___ftpack@arg
  9754  090D  0826               	movf	___ftmul@f3_as_product+1,w
  9755  090E  00F1               	movwf	___ftpack@arg+1
  9756  090F  0827               	movf	___ftmul@f3_as_product+2,w
  9757  0910  00F2               	movwf	___ftpack@arg+2
  9758  0911  0824               	movf	___ftmul@exp,w
  9759  0912  00A0               	movwf	??___ftmul
  9760  0913  0820               	movf	??___ftmul,w
  9761  0914  00F3               	movwf	___ftpack@exp
  9762  0915  0829               	movf	___ftmul@sign,w
  9763  0916  00A1               	movwf	??___ftmul+1
  9764  0917  0821               	movf	??___ftmul+1,w
  9765  0918  00F4               	movwf	___ftpack@sign
  9766  0919  160A  118A  2436   	fcall	___ftpack
  9767  091C  0870               	movf	?___ftpack,w
  9768  091D  00F8               	movwf	?___ftmul
  9769  091E  0871               	movf	?___ftpack+1,w
  9770  091F  00F9               	movwf	?___ftmul+1
  9771  0920  0872               	movf	?___ftpack+2,w
  9772  0921  00FA               	movwf	?___ftmul+2
  9773  0922  0008               	return
  9774  0923                     __end_of___ftmul:	
  9775                           
  9776                           	psect	text41
  9777  1436                     __ptext41:	
  9778 ;; *************** function ___ftpack *****************
  9779 ;; Defined at:
  9780 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  arg             3    0[COMMON] unsigned um
  9783 ;;  exp             1    3[COMMON] unsigned char 
  9784 ;;  sign            1    4[COMMON] unsigned char 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  3    0[COMMON] float 
  9789 ;; Registers used:
  9790 ;;		wreg, status,2, status,0
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9796 ;;      Params:         5       0       0       0       0
  9797 ;;      Locals:         0       0       0       0       0
  9798 ;;      Temps:          3       0       0       0       0
  9799 ;;      Totals:         8       0       0       0       0
  9800 ;;Total ram usage:        8 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		___ftadd
  9806 ;;		___ftdiv
  9807 ;;		___ftmul
  9808 ;;		___lwtoft
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           
  9813                           ;psect for function ___ftpack
  9814  1436                     ___ftpack:	
  9815                           
  9816                           ;incstack = 0
  9817                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9818  1436  0873               	movf	___ftpack@exp,w
  9819  1437  1903               	btfsc	3,2
  9820  1438  2C3E               	goto	i1l2254
  9821  1439  0872               	movf	___ftpack@arg+2,w
  9822  143A  0471               	iorwf	___ftpack@arg+1,w
  9823  143B  0470               	iorwf	___ftpack@arg,w
  9824  143C  1D03               	skipz
  9825  143D  2C51               	goto	i1l2260
  9826  143E                     i1l2254:	
  9827  143E  3000               	movlw	0
  9828  143F  00F0               	movwf	?___ftpack
  9829  1440  3000               	movlw	0
  9830  1441  00F1               	movwf	?___ftpack+1
  9831  1442  3000               	movlw	0
  9832  1443  00F2               	movwf	?___ftpack+2
  9833  1444  0008               	return
  9834  1445                     i1l2258:	
  9835  1445  3001               	movlw	1
  9836  1446  00F5               	movwf	??___ftpack
  9837  1447  0875               	movf	??___ftpack,w
  9838  1448  07F3               	addwf	___ftpack@exp,f
  9839  1449  3001               	movlw	1
  9840  144A                     u216_25:	
  9841  144A  1003               	clrc
  9842  144B  0CF2               	rrf	___ftpack@arg+2,f
  9843  144C  0CF1               	rrf	___ftpack@arg+1,f
  9844  144D  0CF0               	rrf	___ftpack@arg,f
  9845  144E  3EFF               	addlw	-1
  9846  144F  1D03               	skipz
  9847  1450  2C4A               	goto	u216_25
  9848  1451                     i1l2260:	
  9849  1451  30FE               	movlw	254
  9850  1452  0572               	andwf	___ftpack@arg+2,w
  9851  1453  1903               	btfsc	3,2
  9852  1454  2C6C               	goto	i1l759
  9853  1455  2C45               	goto	i1l2258
  9854  1456                     i1l2262:	
  9855  1456  3001               	movlw	1
  9856  1457  00F5               	movwf	??___ftpack
  9857  1458  0875               	movf	??___ftpack,w
  9858  1459  07F3               	addwf	___ftpack@exp,f
  9859  145A  3001               	movlw	1
  9860  145B  07F0               	addwf	___ftpack@arg,f
  9861  145C  3000               	movlw	0
  9862  145D  1803               	skipnc
  9863  145E  3001               	movlw	1
  9864  145F  07F1               	addwf	___ftpack@arg+1,f
  9865  1460  3000               	movlw	0
  9866  1461  1803               	skipnc
  9867  1462  3001               	movlw	1
  9868  1463  07F2               	addwf	___ftpack@arg+2,f
  9869  1464  3001               	movlw	1
  9870  1465                     u218_25:	
  9871  1465  1003               	clrc
  9872  1466  0CF2               	rrf	___ftpack@arg+2,f
  9873  1467  0CF1               	rrf	___ftpack@arg+1,f
  9874  1468  0CF0               	rrf	___ftpack@arg,f
  9875  1469  3EFF               	addlw	-1
  9876  146A  1D03               	skipz
  9877  146B  2C65               	goto	u218_25
  9878  146C                     i1l759:	
  9879  146C  30FF               	movlw	255
  9880  146D  0572               	andwf	___ftpack@arg+2,w
  9881  146E  1903               	btfsc	3,2
  9882  146F  2C7B               	goto	i1l2270
  9883  1470  2C56               	goto	i1l2262
  9884  1471                     i1l2268:	
  9885  1471  3001               	movlw	1
  9886  1472  02F3               	subwf	___ftpack@exp,f
  9887  1473  3001               	movlw	1
  9888  1474                     u220_25:	
  9889  1474  1003               	clrc
  9890  1475  0DF0               	rlf	___ftpack@arg,f
  9891  1476  0DF1               	rlf	___ftpack@arg+1,f
  9892  1477  0DF2               	rlf	___ftpack@arg+2,f
  9893  1478  3EFF               	addlw	-1
  9894  1479  1D03               	skipz
  9895  147A  2C74               	goto	u220_25
  9896  147B                     i1l2270:	
  9897  147B  1FF1               	btfss	___ftpack@arg+1,7
  9898  147C  2C71               	goto	i1l2268
  9899  147D  1873               	btfsc	___ftpack@exp,0
  9900  147E  2C85               	goto	i1l765
  9901  147F  30FF               	movlw	255
  9902  1480  05F0               	andwf	___ftpack@arg,f
  9903  1481  307F               	movlw	127
  9904  1482  05F1               	andwf	___ftpack@arg+1,f
  9905  1483  30FF               	movlw	255
  9906  1484  05F2               	andwf	___ftpack@arg+2,f
  9907  1485                     i1l765:	
  9908  1485  1003               	clrc
  9909  1486  0CF3               	rrf	___ftpack@exp,f
  9910  1487  0873               	movf	___ftpack@exp,w
  9911  1488  00F5               	movwf	??___ftpack
  9912  1489  01F6               	clrf	??___ftpack+1
  9913  148A  01F7               	clrf	??___ftpack+2
  9914  148B  3010               	movlw	16
  9915  148C                     u223_25:	
  9916  148C  1003               	clrc
  9917  148D  0DF5               	rlf	??___ftpack,f
  9918  148E  0DF6               	rlf	??___ftpack+1,f
  9919  148F  0DF7               	rlf	??___ftpack+2,f
  9920  1490  3EFF               	addlw	-1
  9921  1491  1D03               	skipz
  9922  1492  2C8C               	goto	u223_25
  9923  1493  0875               	movf	??___ftpack,w
  9924  1494  04F0               	iorwf	___ftpack@arg,f
  9925  1495  0876               	movf	??___ftpack+1,w
  9926  1496  04F1               	iorwf	___ftpack@arg+1,f
  9927  1497  0877               	movf	??___ftpack+2,w
  9928  1498  04F2               	iorwf	___ftpack@arg+2,f
  9929  1499  0874               	movf	___ftpack@sign,w
  9930  149A  1903               	btfsc	3,2
  9931  149B  0008               	return
  9932  149C  17F2               	bsf	___ftpack@arg+2,7
  9933  149D  0008               	return
  9934  149E                     __end_of___ftpack:	
  9935  007E                     btemp	set	126	;btemp
  9936  007E                     wtemp	set	126
  9937  007E                     wtemp0	set	126
  9938  0080                     wtemp1	set	128
  9939  0082                     wtemp2	set	130
  9940  0084                     wtemp3	set	132
  9941  0086                     wtemp4	set	134
  9942  0088                     wtemp5	set	136
  9943  007F                     wtemp6	set	127
  9944  007E                     ttemp	set	126
  9945  007E                     ttemp0	set	126
  9946  0081                     ttemp1	set	129
  9947  0084                     ttemp2	set	132
  9948  0087                     ttemp3	set	135
  9949  007F                     ttemp4	set	127
  9950  007E                     ltemp	set	126
  9951  007E                     ltemp0	set	126
  9952  0082                     ltemp1	set	130
  9953  0086                     ltemp2	set	134
  9954  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        8
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      71
    BANK3            96     11      51
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5324
                                             27 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2900
                                             18 BANK1      7     3      4
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55017
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51587
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      33       9       53.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 12:41:17 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00CB       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 01C0                            fsr 0004           ___wmul@multiplicand 00CD  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BD                  ___ftadd@sign 0034  
                         l202 09C8                           l227 10E7                           l653 15A7  
                         l479 0DA8                           l497 0EDD                           l598 1281  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0BC2  
                         _rpm 00C5                           fsr0 0004                           _pwm 00C3  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CF                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
                        l3000 11B7            LCD_WriteString@Str 00CD                          l3014 12C3  
                        l3400 13C7                          l3404 13D2                          l3500 0F2B  
                        l3422 1349                          l3510 0F4D                          l2552 15C8  
                        l2544 15B8                          l3416 132D                          l2570 161B  
                        l2562 1600                          l2554 15D8                          l3418 133B  
                        l3426 1354                          l3530 0F89                          l3522 0F81  
                        l3442 0DB1                          l3372 1279                          l3516 0F6A  
                        l3508 0F49                          l3460 0E6F                          l3444 0DC6  
                        l3532 0D6A                          l2566 160D                          l3366 10FF  
                        l3470 0E90                          l3534 0FF9                          l3438 0DA4  
                        l3392 13A3                          l3448 0DE2                          l3394 13B1  
                        l3490 0F0E                          l3482 0ECF                          l3474 0E96  
                        l3458 0E4A                          l3492 0F12                          l2894 12F4  
                        STR_1 18EA                          STR_2 18F8                          STR_3 1905  
                        STR_4 18CE                          STR_5 18B2                          STR_6 18A4  
                        STR_7 18DC                          STR_8 18C0                          STR_9 1886  
                        u4215 13A6                          u4305 1341                          u4235 13B2  
                        u4315 134A                          u4245 13BE                          u4255 13C8  
                        u4175 1282                          u3625 0814                          u4185 1289  
                        u4425 0EF6                          u2915 15DA                          u2925 15EF  
                        u4285 1330                          u4607 14EC                          u3655 11DE  
                        u2935 1601                          u4527 09C1                          u4617 14FA  
                        u4385 0EC1                          u4537 0A65                          u4627 1506  
                        u4547 114F                          u3595 11FF                          u4637 11C3  
                        u4557 14A8                          u4647 12A6                          u4567 14B8  
                        u2895 15CC                          u4657 12B4                          u4577 14C6  
                        u4667 12C0                          u4587 14D2                          u4677 1138  
                        u4597 14DE                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0923                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 1113                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 113E                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 10F1                         ??_ISR 00C7  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1509               __end_of___aldiv 1624                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 07F7                         STR_10 1895  
                       STR_11 1844                         STR_12 1861                         STR_13 1875  
                       STR_14 191E                         STR_15 191E                         STR_16 1892  
                       STR_17 1912                 __CFG_WDTE$OFF 0000                         STR_18 1918  
                       STR_19 181C               __end_of___ftdiv 16DC               __end_of___ftneg 10D1  
             __end_of___ftmul 0923                         _T1CON 0010               __end_of___fttol 1595  
             __end_of___lwdiv 13D9                         i1l118 17F7                         i1l128 0BB9  
                       i1l227 10D2                         i1l180 0D4E                         i1l184 0C32  
             __end_of___lwmod 135B                         i1l187 0C5B                         i1l765 1485  
                       i1l598 1238                         i1l759 146C                         i1l788 0796  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0061                         _derro 0193  
             __end_of_dpowers 181C               __end_of_max_val 11A9               __end_of_isdigit 1101  
               ___ftpack@sign 0074                         _trimf 16DC                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 1275  
            __end_ofi1___wmul 1251                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 1000            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00CB                ?_LCD_WriteData 0070                   ?_USART_Init 00DA  
       i1TIMER0_Set@contagens 0070               __initialization 0019                  __end_of_main 0A6C  
                      ??_main 00E2                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 12C3                    Fuzzy@a_232 005B                    Fuzzy@a_233 005D  
                  Fuzzy@a_234 005F                    Fuzzy@a_235 0061                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0069                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 149E                        ?_trimf 0047  
                      i1l2310 0747                        i1l2320 076D                        i1l2402 1427  
                      i1l2330 0792                        i1l2322 0771                        i1l3202 0BFE  
                      i1l2260 1451                        i1l2316 075C                        i1l2270 147B  
                      i1l2262 1456                        i1l2254 143E                        i1l2334 07A8  
                      i1l2318 0768                        i1l3142 1230                        i1l3230 0C5D  
                      i1l2328 0786                        i1l3208 0C15                        i1l2258 1445  
                      i1l2610 08E7                        i1l2602 08CF                        i1l2338 07BA  
                      i1l3170 1387                        i1l3162 1363                        i1l3242 0C8B  
                      i1l3218 0C33                        i1l2268 1471                        i1l2348 07DD  
                      i1l2292 071E                        i1l2364 1652                        i1l2444 17DA  
                      i1l3164 1371                        i1l3260 0CD0                        i1l3236 0C74  
                      i1l2614 08F7                        i1l2630 1521                        i1l2358 163C  
                      i1l2462 0AE5                        i1l2438 1755                        i1l3174 1392  
                      i1l3254 0CB9                        i1l2288 0717                        i1l3248 0CA2  
                      i1l2650 1563                        i1l2298 072D                        i1l2386 16B6  
                      i1l2378 1697                        i1l2474 0B9C                        i1l3290 0D49  
                      i1l3266 0CED                        i1l2580 086A                        i1l2660 157E  
                      i1l2468 0B17                        i1l2812 0480                        i1l3292 0D4A  
                      i1l3196 0BE7                        i1l2398 1400                        i1l2822 054B  
                      i1l2726 120B                        i1l3278 0D0A                        i1l2664 158C  
                      i1l2656 1570                        i1l2648 1553                        i1l2832 0577  
                      i1l2816 04E4                        i1l2744 00EA                        i1l2586 0880  
                      i1l2658 157B                        i1l2850 05E5                        i1l2842 05C2  
                      i1l2762 01A5                        i1l2828 055A                        i1l2772 0270  
                      i1l2748 0107                        i1l2598 08BF                        i1l2838 05A9  
                      i1l2766 0209                        i1l2856 069C                        i1l2792 037B  
                      i1l2882 1188                        i1l2874 1179                        i1l2788 031D  
                      u220_25 1474                        i1l2798 03E2                        u302_25 08D0  
                      u223_25 148C                        u303_25 08D8                        u311_25 1528  
                      u216_25 144A                        u240_25 0772                        u218_25 1465  
                      u314_25 1554                        u234_25 0748                        u307_25 08F8  
                      u243_25 0787                        u251_25 1664                        u260_21 141A  
                      u260_22 141B                        u260_23 1420                        u260_24 1421  
                      u308_25 0900                        u252_25 1676                        u340_25 026E  
                      u317_25 1572                        u237_25 075D                        u253_25 1698  
                      u254_25 16A9                        u334_25 1166                        u350_25 0558  
                      u255_25 16B7                        u343_25 031B                        u345_25 03E0  
                      u258_21 13F3              __end_of___lwtoft 1127                        u258_22 13F4  
                      u258_23 13F9                        u258_24 13FA                        u354_25 05C0  
                      u338_25 01A3                        u355_25 05E3                        u347_25 047E  
                      u356_25 069A                        u349_25 0549           __size_of_TIMER0_Set 0008  
                      u390_25 1366                        u392_25 1372                        u393_25 137E  
                      u298_25 088C                        u394_25 1388                        u386_25 1239  
                      u299_25 089E                        u387_25 1240                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 0059              LCD_WriteCmd@Byte 00CC  
         i1_USART_WriteString 120B                        ___ftge 13D9                     ??___aldiv 00D3  
                      ___wmul 1275                     ??___ftadd 0030                _PWM_DutyCycle1 11C9  
              _PWM_DutyCycle2 11EA              ?_USART_WriteChar 0070                     ??___ftdiv 003D  
                   ??___ftneg 0073                        _deltaV 00BF                     ??___ftmul 0020  
                   ??___fttol 0074                     ??___lwdiv 00CF                     ??___lwmod 00D7  
                      _fitemp 00A0         USART_ReceiveChar@byte 0074                        _trapmf 0A6C  
                      _pulsos 00C1                        _status 0198         ___ftmul@f3_as_product 0025  
                   ??_max_val 007C             __end_ofi1___lwdiv 1399                     ??_isdigit 00CB  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 004A                        trimf@b 004D  
                      trimf@c 0050                        trimf@x 0047                     ??_sprintf 00DD  
               ?i1_TIMER0_Set 0070       __end_of__initialization 005D                     ?_LCD_Init 0070  
                  ___ftadd@f1 002A                    ___ftadd@f2 002D               ??_LCD_WriteData 00CB  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 0037                    ___ftdiv@f3 0042                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 11EA        __end_of_PWM_DutyCycle2 120B                    ___ftmul@f1 0078  
                  ___ftmul@f2 007B                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 06EE                  __pidataBANK1 10BB                  __pidataBANK3 10C3  
               LCD_Cursor@Col 00CB                 LCD_Cursor@Row 00CD                  ??_LCD_Cursor 00CC  
             _LCD_WriteString 12C3                 __end_of_trimf 1800                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00CB          __end_of_LCD_WriteCmd 113E         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 01B9                       ??_trimf 007E                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 11C9                    ??_LCD_Init 00CD  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CB               ?_PWM_DutyCycle2 00CB  
                  __pmaintext 0923                   Fuzzy@mantem 0066                       ?___ftge 0070  
                     ?___wmul 00CB                    __pintentry 0004                  ??_TIMER0_Set 00CB  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0047                    ??_PWM_Init 00CB                    ??i1___wmul 007C  
                   ?___lwtoft 0078          __size_of_TIMER0_Init 000B                       _SSPCON2 0091  
                  __stringtab 1800            __end_of_TIMER0_Set 0809       __end_of_LCD_WriteString 12F4  
                   _ADCResult 00BB                  ??_USART_Init 00DE             LCD_WriteData@Byte 00CC  
                     ___aldiv 1595               __size_of___ftge 005D                       ___ftadd 06EE  
                     ___ftdiv 1624                       ___ftneg 10C9               __size_of___wmul 0025  
                     ___ftmul 0852                       ___fttol 1509                       ___lwdiv 1399  
                     ___lwmod 1325                    ??___ftpack 0075                       __ptext1 0D5F  
                     __ptext2 10F1                       __ptext3 1275                       __ptext4 1325  
                     __ptext5 1399                       __ptext6 12F4                       __ptext7 10E4  
                     __ptext8 0809                       __ptext9 1595                    _pas_cooler 00E5  
                  ??___lwtoft 007B               __size_of_trapmf 0156                  __size_of_ISR 019D  
                   _T1CONbits 0010                       _dpowers 1812             i1___lwdiv@divisor 0070  
                   _T2CONbits 0012                       _max_val 118B                       _isdigit 10F1  
           i1___lwdiv@counter 0077              ___aldiv@dividend 00CF                     _LCD_Clear 129A  
          __end_of_USART_Init 0852                       _sprintf 0D5F                       clrloop0 07F8  
        end_of_initialization 005D                     _RCSTAbits 0018              ___aldiv@quotient 00D6  
                     trapmf@a 004A                       trapmf@b 004D                       trapmf@c 0050  
                     trapmf@d 0053                       trapmf@x 0047                       trimf@ua 0053  
                __pstringtext 1800          __end_ofi1_TIMER0_Set 10C3         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1155             __size_of_ADC_Init 0012  
                   i1___lwdiv 135B                  _contador_rb6 0196           PWM_DutyCycle1@valor 00CB  
                  _total_area 00B2           PWM_DutyCycle2@valor 00CB                   _CCP1CONbits 0017  
                 ___ftdiv@exp 0045                   _CCP2CONbits 001D                     _TXSTAbits 0098  
            ?_LCD_WriteString 00CD             __size_of_LCD_Init 006B                  _LCD_WriteCmd 1127  
                 ___ftmul@exp 0024                __end_of___ftge 1436                __end_of___wmul 129A  
           i1_USART_WriteChar 10D1            ?i1_USART_WriteChar 0070                __end_of_trapmf 0BC2  
    __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024           start_initialization 0019  
           __size_ofi1___wmul 0023                   __end_of_ISR 0D5F           ??i1_USART_WriteChar 0070  
                  ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CD              ??_PWM_DutyCycle2 00CD  
       __end_of_LCD_WriteData 1155             _USART_ReceiveChar 1170                      ??___ftge 0076  
          ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 10D9                      ??___wmul 00CF  
                 __pdataBANK1 00E5                   __pdataBANK3 01BD   __end_ofi1_USART_WriteString 122E  
                    ??_trapmf 007E           ??_USART_ReceiveChar 0073             __size_of___ftpack 0068  
                   ___latbits 0002             __size_of___lwtoft 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00C7                 __pcstackBANK3 01B2                   ??_LCD_Clear 00CD  
         __end_of__stringdata 1923                  _isdigit$1449 00CB                   sprintf@_val 01B4  
                 sprintf@flag 01B8                   sprintf@prec 01B3     __end_of_USART_ReceiveChar 118B  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CD           TIMER0_Set@contagens 00CB  
                Fuzzy@aumenta 006C                      ?___aldiv 00CB                      ?___ftadd 002A  
                    ?___ftdiv 0037                      ?___ftneg 0070                      ?___ftmul 0078  
                    ?___fttol 0070                      ?___lwdiv 00CB                      ?___lwmod 00D3  
                   _ativa_fan 0190                 ??_TIMER0_Init 00CB            USART_Init@BaudRate 00DA  
                    ?_max_val 0020                      ?_isdigit 0070                      _ADC_Init 1101  
                   _fop_rule1 00A3                     _fop_rule2 00A6                     _fop_rule3 00A9  
              __size_of_Fuzzy 068D              ___lwdiv@quotient 00D1                   ??i1___lwdiv 0074  
                    ?_sprintf 00D9                __size_of_trimf 0124             ??_USART_WriteChar 00CB  
                i1_TIMER0_Set 10BD               ___aldiv@divisor 00CB             interrupt_function 0004  
             ___aldiv@counter 00D4                      _LCD_Init 149E                ___wmul@product 00CF  
                   clear_ram0 07F7                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 019A  
    __end_ofi1_PWM_DutyCycle2 1170                     _tempo_rb6 019C    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 01A8                   _display_pwm 019E                    _ADCON0bits 001F  
                 __stringbase 1812                    _ADCON1bits 009F                   __stringdata 181C  
                    _PWM_Init 1251             ___wmul@multiplier 00CB                      i1___wmul 122E  
         __end_of_TIMER0_Init 10E4    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@tip 0063              __size_of___aldiv 008F              __size_of___ftadd 0109  
            __size_of___ftdiv 00B8              __size_of___ftneg 0008              __size_of___ftmul 00D1  
            __size_of___fttol 008C              __size_of___lwdiv 0040              __size_of___lwmod 0036  
                    ___ftpack 1436            __end_of__stringtab 1812                      ___lwtoft 1113  
            __size_of_max_val 001E              __size_of_isdigit 0010               ___lwdiv@divisor 00CB  
             ___lwdiv@counter 00D0             _USART_WriteString 12F4                      __ptext10 0801  
                    __ptext11 10D9                      __ptext20 1127                      __ptext12 1251  
                    __ptext21 1101                      __ptext13 11EA                      __ptext30 1155  
                    __ptext22 0BC2                      __ptext14 11C9                      __ptext31 16DC  
                    __ptext23 122E                      __ptext15 12C3                      __ptext40 0852  
                    __ptext32 0A6C                      __ptext24 135B                      __ptext16 113E  
                    __ptext41 1436                      __ptext33 10C9                      __ptext25 10BD  
                    __ptext17 149E                      __ptext34 1624                      __ptext26 1170  
                    __ptext18 11A9                      __ptext35 06EE                      __ptext27 120B  
                    __ptext19 129A                      __ptext36 118B                      __ptext28 10D1  
                    __ptext37 13D9                      __ptext29 0061                      __ptext38 1113  
                    __ptext39 1509            ?_USART_WriteString 00CC              __size_of_sprintf 02A1  
          i1___lwdiv@dividend 0072                 __size_of_main 0149           USART_WriteChar@byte 00CB  
         ??_USART_WriteString 00CE        i1USART_WriteString@str 0071                      _setpoint 01BD  
                  _LCD_Cursor 11A9      __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075  
                 _TIMER0_Init 10D9                    _INTCONbits 000B     __end_of_USART_WriteString 1325  
                    max_val@a 0020                      max_val@b 0023                      isdigit@c 00CC  
                    intlevel1 0000                     sprintf@ap 01B2                     sprintf@sp 01BB  
            ___lwmod@dividend 00D5                     stringcode 180A          USART_WriteString@str 00CC  
                  _TIMER0_Set 0801                      trapmf@ua 0056               _USART_WriteChar 10E4  
                    sprintf@c 01BC                      sprintf@f 00D9               ___lwmod@divisor 00D3  
             ___lwmod@counter 00D8                      stringtab 1800                  ___aldiv@sign 00D5  
      __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091  
       i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014                    _USART_Init 0809  
