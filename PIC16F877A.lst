

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 15:47:31 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599                           
   600                           	psect	idataBANK1
   601  1258                     __pidataBANK1:	
   602                           
   603                           ;initializer for _setpoint
   604  1258  3400               	retlw	0
   605  1259  34A0               	retlw	160
   606  125A  3441               	retlw	65
   607                           
   608                           ;initializer for _pas_cooler
   609  125B  3407               	retlw	7
   610  125C  3400               	retlw	0
   611                           
   612                           	psect	strings
   613  0800                     __pstrings:	
   614  0800                     stringtab:	
   615  0800                     __stringtab:	
   616                           
   617                           ;	String table - string pointers are 1 byte each
   618  0800  1BFF               	btfsc	btemp+1,7
   619  0801  280A               	ljmp	stringcode
   620  0802  1383               	bcf	3,7
   621  0803  187F               	btfsc	btemp+1,0
   622  0804  1783               	bsf	3,7
   623  0805  0800               	movf	0,w
   624  0806  0A84               	incf	4,f
   625  0807  1903               	skipnz
   626  0808  0AFF               	incf	btemp+1,f
   627  0809  0008               	return
   628  080A                     stringcode:	
   629  080A                     stringdir:	
   630  080A  3008               	movlw	high stringdir
   631  080B  008A               	movwf	10
   632  080C  0804               	movf	4,w
   633  080D  0A84               	incf	4,f
   634  080E  0782               	addwf	2,f
   635  080F                     __stringbase:	
   636  080F  3400               	retlw	0
   637  0810                     __end_of__stringtab:	
   638  0810                     _dpowers:	
   639  0810  3401               	retlw	1
   640  0811  3400               	retlw	0
   641  0812  340A               	retlw	10
   642  0813  3400               	retlw	0
   643  0814  3464               	retlw	100
   644  0815  3400               	retlw	0
   645  0816  34E8               	retlw	232
   646  0817  3403               	retlw	3
   647  0818  3410               	retlw	16
   648  0819  3427               	retlw	39
   649  081A                     __end_of_dpowers:	
   650  000E                     _TMR1	set	14
   651  001F                     _ADCON0bits	set	31
   652  001E                     _ADRESH	set	30
   653  0017                     _CCP1CON	set	23
   654  0017                     _CCP1CONbits	set	23
   655  001D                     _CCP2CON	set	29
   656  001D                     _CCP2CONbits	set	29
   657  0015                     _CCPR1L	set	21
   658  001B                     _CCPR2L	set	27
   659  000B                     _INTCONbits	set	11
   660  000C                     _PIR1bits	set	12
   661  000D                     _PIR2bits	set	13
   662  0005                     _PORTA	set	5
   663  0006                     _PORTB	set	6
   664  0006                     _PORTBbits	set	6
   665  0007                     _PORTC	set	7
   666  0008                     _PORTD	set	8
   667  0009                     _PORTE	set	9
   668  0009                     _PORTEbits	set	9
   669  001A                     _RCREG	set	26
   670  0018                     _RCSTAbits	set	24
   671  0013                     _SSPBUF	set	19
   672  0014                     _SSPCONbits	set	20
   673  0010                     _T1CON	set	16
   674  0010                     _T1CONbits	set	16
   675  0012                     _T2CONbits	set	18
   676  0001                     _TMR0	set	1
   677  000F                     _TMR1H	set	15
   678  000E                     _TMR1L	set	14
   679  0019                     _TXREG	set	25
   680  00C1                     _OERR	set	193
   681  009F                     _ADCON1bits	set	159
   682  009E                     _ADRESL	set	158
   683  0081                     _OPTION_REGbits	set	129
   684  008C                     _PIE1bits	set	140
   685  008D                     _PIE2bits	set	141
   686  0092                     _PR2	set	146
   687  0099                     _SPBRG	set	153
   688  0093                     _SSPADD	set	147
   689  0091                     _SSPCON2	set	145
   690  0091                     _SSPCON2bits	set	145
   691  0094                     _SSPSTATbits	set	148
   692  0085                     _TRISA	set	133
   693  0086                     _TRISB	set	134
   694  0087                     _TRISC	set	135
   695  0088                     _TRISD	set	136
   696  0089                     _TRISE	set	137
   697  0098                     _TXSTAbits	set	152
   698  010D                     _EEADR	set	269
   699  010C                     _EEDATA	set	268
   700  018C                     _EECON1bits	set	396
   701  018D                     _EECON2	set	397
   702  081A                     __stringdata:	
   703  081A                     STR_19:	
   704  081A  340A               	retlw	10
   705  081B  340D               	retlw	13
   706  081C  3420               	retlw	32	;' '
   707  081D  342D               	retlw	45	;'-'
   708  081E  342D               	retlw	45	;'-'
   709  081F  342D               	retlw	45	;'-'
   710  0820  342D               	retlw	45	;'-'
   711  0821  342D               	retlw	45	;'-'
   712  0822  342D               	retlw	45	;'-'
   713  0823  342D               	retlw	45	;'-'
   714  0824  3420               	retlw	32	;' '
   715  0825  3445               	retlw	69	;'E'
   716  0826  3453               	retlw	83	;'S'
   717  0827  3454               	retlw	84	;'T'
   718  0828  344F               	retlw	79	;'O'
   719  0829  3455               	retlw	85	;'U'
   720  082A  3452               	retlw	82	;'R'
   721  082B  344F               	retlw	79	;'O'
   722  082C  3420               	retlw	32	;' '
   723  082D  3444               	retlw	68	;'D'
   724  082E  3445               	retlw	69	;'E'
   725  082F  3420               	retlw	32	;' '
   726  0830  3450               	retlw	80	;'P'
   727  0831  3449               	retlw	73	;'I'
   728  0832  344C               	retlw	76	;'L'
   729  0833  3448               	retlw	72	;'H'
   730  0834  3441               	retlw	65	;'A'
   731  0835  3420               	retlw	32	;' '
   732  0836  342D               	retlw	45	;'-'
   733  0837  342D               	retlw	45	;'-'
   734  0838  342D               	retlw	45	;'-'
   735  0839  342D               	retlw	45	;'-'
   736  083A  342D               	retlw	45	;'-'
   737  083B  342D               	retlw	45	;'-'
   738  083C  342D               	retlw	45	;'-'
   739  083D  3420               	retlw	32	;' '
   740  083E  340A               	retlw	10
   741  083F  340D               	retlw	13
   742  0840  3420               	retlw	32	;' '
   743  0841  3400               	retlw	0
   744  0842                     STR_11:	
   745  0842  3449               	retlw	73	;'I'
   746  0843  346E               	retlw	110	;'n'
   747  0844  3469               	retlw	105	;'i'
   748  0845  3463               	retlw	99	;'c'
   749  0846  3469               	retlw	105	;'i'
   750  0847  3461               	retlw	97	;'a'
   751  0848  346C               	retlw	108	;'l'
   752  0849  3469               	retlw	105	;'i'
   753  084A  347A               	retlw	122	;'z'
   754  084B  3461               	retlw	97	;'a'
   755  084C  346E               	retlw	110	;'n'
   756  084D  3464               	retlw	100	;'d'
   757  084E  346F               	retlw	111	;'o'
   758  084F  3420               	retlw	32	;' '
   759  0850  346F               	retlw	111	;'o'
   760  0851  3420               	retlw	32	;' '
   761  0852  3450               	retlw	80	;'P'
   762  0853  3449               	retlw	73	;'I'
   763  0854  3443               	retlw	67	;'C'
   764  0855  3431               	retlw	49	;'1'
   765  0856  3436               	retlw	54	;'6'
   766  0857  3446               	retlw	70	;'F'
   767  0858  3438               	retlw	56	;'8'
   768  0859  3437               	retlw	55	;'7'
   769  085A  3437               	retlw	55	;'7'
   770  085B  3441               	retlw	65	;'A'
   771  085C  340A               	retlw	10
   772  085D  340D               	retlw	13
   773  085E  3400               	retlw	0
   774  085F                     STR_12:	
   775  085F  3455               	retlw	85	;'U'
   776  0860  3453               	retlw	83	;'S'
   777  0861  3441               	retlw	65	;'A'
   778  0862  3452               	retlw	82	;'R'
   779  0863  3454               	retlw	84	;'T'
   780  0864  343A               	retlw	58	;':'
   781  0865  3420               	retlw	32	;' '
   782  0866  3431               	retlw	49	;'1'
   783  0867  3431               	retlw	49	;'1'
   784  0868  3435               	retlw	53	;'5'
   785  0869  342E               	retlw	46	;'.'
   786  086A  3432               	retlw	50	;'2'
   787  086B  3430               	retlw	48	;'0'
   788  086C  3430               	retlw	48	;'0'
   789  086D  3462               	retlw	98	;'b'
   790  086E  3470               	retlw	112	;'p'
   791  086F  3473               	retlw	115	;'s'
   792  0870  340A               	retlw	10
   793  0871  340D               	retlw	13
   794  0872  3400               	retlw	0
   795  0873                     STR_13:	
   796  0873  3449               	retlw	73	;'I'
   797  0874  346E               	retlw	110	;'n'
   798  0875  3469               	retlw	105	;'i'
   799  0876  3463               	retlw	99	;'c'
   800  0877  3469               	retlw	105	;'i'
   801  0878  3461               	retlw	97	;'a'
   802  0879  346C               	retlw	108	;'l'
   803  087A  3469               	retlw	105	;'i'
   804  087B  347A               	retlw	122	;'z'
   805  087C  3461               	retlw	97	;'a'
   806  087D  346E               	retlw	110	;'n'
   807  087E  3464               	retlw	100	;'d'
   808  087F  346F               	retlw	111	;'o'
   809  0880  342E               	retlw	46	;'.'
   810  0881  342E               	retlw	46	;'.'
   811  0882  342E               	retlw	46	;'.'
   812  0883  3400               	retlw	0
   813  0884                     STR_10:	
   814  0884  340A               	retlw	10
   815  0885  340D               	retlw	13
   816  0886  3470               	retlw	112	;'p'
   817  0887  3477               	retlw	119	;'w'
   818  0888  346D               	retlw	109	;'m'
   819  0889  3420               	retlw	32	;' '
   820  088A  343D               	retlw	61	;'='
   821  088B  3420               	retlw	32	;' '
   822  088C  3431               	retlw	49	;'1'
   823  088D  3430               	retlw	48	;'0'
   824  088E  3432               	retlw	50	;'2'
   825  088F  3433               	retlw	51	;'3'
   826  0890  340A               	retlw	10
   827  0891  340D               	retlw	13
   828  0892  3400               	retlw	0
   829  0893                     STR_8:	
   830  0893  340A               	retlw	10
   831  0894  340D               	retlw	13
   832  0895  3470               	retlw	112	;'p'
   833  0896  3477               	retlw	119	;'w'
   834  0897  346D               	retlw	109	;'m'
   835  0898  3420               	retlw	32	;' '
   836  0899  343D               	retlw	61	;'='
   837  089A  3420               	retlw	32	;' '
   838  089B  3438               	retlw	56	;'8'
   839  089C  3439               	retlw	57	;'9'
   840  089D  3436               	retlw	54	;'6'
   841  089E  340A               	retlw	10
   842  089F  340D               	retlw	13
   843  08A0  3400               	retlw	0
   844  08A1                     STR_7:	
   845  08A1  340A               	retlw	10
   846  08A2  340D               	retlw	13
   847  08A3  3470               	retlw	112	;'p'
   848  08A4  3477               	retlw	119	;'w'
   849  08A5  346D               	retlw	109	;'m'
   850  08A6  3420               	retlw	32	;' '
   851  08A7  343D               	retlw	61	;'='
   852  08A8  3420               	retlw	32	;' '
   853  08A9  3437               	retlw	55	;'7'
   854  08AA  3436               	retlw	54	;'6'
   855  08AB  3438               	retlw	56	;'8'
   856  08AC  340A               	retlw	10
   857  08AD  340D               	retlw	13
   858  08AE  3400               	retlw	0
   859  08AF                     STR_1:	
   860  08AF  340A               	retlw	10
   861  08B0  340D               	retlw	13
   862  08B1  3464               	retlw	100	;'d'
   863  08B2  3465               	retlw	101	;'e'
   864  08B3  3473               	retlw	115	;'s'
   865  08B4  346C               	retlw	108	;'l'
   866  08B5  3469               	retlw	105	;'i'
   867  08B6  3467               	retlw	103	;'g'
   868  08B7  3461               	retlw	97	;'a'
   869  08B8  3464               	retlw	100	;'d'
   870  08B9  346F               	retlw	111	;'o'
   871  08BA  340A               	retlw	10
   872  08BB  340D               	retlw	13
   873  08BC  3400               	retlw	0
   874  08BD                     STR_2:	
   875  08BD  340A               	retlw	10
   876  08BE  340D               	retlw	13
   877  08BF  3470               	retlw	112	;'p'
   878  08C0  3477               	retlw	119	;'w'
   879  08C1  346D               	retlw	109	;'m'
   880  08C2  3420               	retlw	32	;' '
   881  08C3  343D               	retlw	61	;'='
   882  08C4  3420               	retlw	32	;' '
   883  08C5  340A               	retlw	10
   884  08C6  340D               	retlw	13
   885  08C7  3400               	retlw	0
   886  08C8                     STR_18:	
   887  08C8  3444               	retlw	68	;'D'
   888  08C9  3465               	retlw	101	;'e'
   889  08CA  346C               	retlw	108	;'l'
   890  08CB  3474               	retlw	116	;'t'
   891  08CC  3461               	retlw	97	;'a'
   892  08CD  343A               	retlw	58	;':'
   893  08CE  3420               	retlw	32	;' '
   894  08CF  3400               	retlw	0
   895  08D0                     STR_17:	
   896  08D0  3452               	retlw	82	;'R'
   897  08D1  3450               	retlw	80	;'P'
   898  08D2  344D               	retlw	77	;'M'
   899  08D3  343A               	retlw	58	;':'
   900  08D4  3420               	retlw	32	;' '
   901  08D5  3400               	retlw	0
   902  08D6                     STR_14:	
   903  08D6  3425               	retlw	37	;'%'
   904  08D7  3430               	retlw	48	;'0'
   905  08D8  3434               	retlw	52	;'4'
   906  08D9  3464               	retlw	100	;'d'
   907  08DA  3400               	retlw	0
   908  08DB                     __end_of__stringdata:	
   909                           
   910                           ; #config settings
   911  0000                     
   912                           	psect	cinit
   913  0015                     start_initialization:	
   914  0015                     __initialization:	
   915                           
   916                           ; Clear objects allocated to BANK0
   917  0015  1383               	bcf	3,7	;select IRP bank0
   918  0016  305F               	movlw	low __pbssBANK0
   919  0017  0084               	movwf	4
   920  0018  306F               	movlw	low (__pbssBANK0+16)
   921  0019  160A  118A  227B  120A  118A  	fcall	clear_ram0
   922                           
   923                           ; Clear objects allocated to BANK1
   924  001E  30A0               	movlw	low __pbssBANK1
   925  001F  0084               	movwf	4
   926  0020  30C7               	movlw	low (__pbssBANK1+39)
   927  0021  160A  118A  227B  120A  118A  	fcall	clear_ram0
   928                           
   929                           ; Clear objects allocated to BANK3
   930  0026  1783               	bsf	3,7	;select IRP bank2
   931  0027  3090               	movlw	low __pbssBANK3
   932  0028  0084               	movwf	4
   933  0029  30A7               	movlw	low (__pbssBANK3+23)
   934  002A  160A  118A  227B  120A  118A  	fcall	clear_ram0
   935                           
   936                           ; Initialize objects allocated to BANK1
   937  002F  1683               	bsf	3,5	;RP0=1, select bank1
   938  0030  1303               	bcf	3,6	;RP1=0, select bank1
   939  0031  160A  118A  2258  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   940  0036  00E9               	movwf	__pdataBANK1& (0+127)
   941  0037  160A  118A  2259  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   942  003C  00EA               	movwf	(__pdataBANK1+1)& (0+127)
   943  003D  160A  118A  225A  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   944  0042  00EB               	movwf	(__pdataBANK1+2)& (0+127)
   945  0043  160A  118A  225B  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   946  0048  00EC               	movwf	(__pdataBANK1+3)& (0+127)
   947  0049  160A  118A  225C   	fcall	__pidataBANK1+4	;fetch initializer
   948  004C  00ED               	movwf	(__pdataBANK1+4)& (0+127)
   949  004D                     end_of_initialization:	
   950                           ;End of C runtime variable initialization code
   951                           
   952  004D                     __end_of__initialization:	
   953  004D  0183               	clrf	3
   954  004E  120A  158A  2D1F   	ljmp	_main	;jump to C main() function
   955                           
   956                           	psect	bssBANK0
   957  005F                     __pbssBANK0:	
   958  005F                     _fitemp:	
   959  005F                     	ds	3
   960  0062                     _temp:	
   961  0062                     	ds	3
   962  0065                     _x:	
   963  0065                     	ds	3
   964  0068                     _y:	
   965  0068                     	ds	3
   966  006B                     _deltaV:	
   967  006B                     	ds	2
   968  006D                     _pwm:	
   969  006D                     	ds	2
   970                           
   971                           	psect	bssBANK1
   972  00A0                     __pbssBANK1:	
   973  00A0                     _ativa_fan:	
   974  00A0                     	ds	3
   975  00A3                     _fop_rule1:	
   976  00A3                     	ds	3
   977  00A6                     _fop_rule2:	
   978  00A6                     	ds	3
   979  00A9                     _fop_rule3:	
   980  00A9                     	ds	3
   981  00AC                     _sum:	
   982  00AC                     	ds	3
   983  00AF                     _tf:	
   984  00AF                     	ds	3
   985  00B2                     _total_area:	
   986  00B2                     	ds	3
   987  00B5                     _ADCResult:	
   988  00B5                     	ds	2
   989  00B7                     _contador_rb6:	
   990  00B7                     	ds	2
   991  00B9                     _contagens_tm0:	
   992  00B9                     	ds	2
   993  00BB                     _pulsos:	
   994  00BB                     	ds	2
   995  00BD                     _rpm:	
   996  00BD                     	ds	2
   997  00BF                     _setpointUI:	
   998  00BF                     	ds	2
   999  00C1                     _status:	
  1000  00C1                     	ds	2
  1001  00C3                     _temp_lida:	
  1002  00C3                     	ds	2
  1003  00C5                     _tempo_rb6:	
  1004  00C5                     	ds	2
  1005                           
  1006                           	psect	dataBANK1
  1007  00E9                     __pdataBANK1:	
  1008  00E9                     _setpoint:	
  1009  00E9                     	ds	3
  1010  00EC                     _pas_cooler:	
  1011  00EC                     	ds	2
  1012                           
  1013                           	psect	bssBANK3
  1014  0190                     __pbssBANK3:	
  1015  0190                     _derro:	
  1016  0190                     	ds	3
  1017  0193                     _display_pwm:	
  1018  0193                     	ds	10
  1019  019D                     _display_rpm:	
  1020  019D                     	ds	10
  1021                           
  1022                           	psect	clrtext
  1023  127B                     clear_ram0:	
  1024                           ;	Called with FSR containing the base address, and
  1025                           ;	W with the last address+1
  1026                           
  1027  127B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1028  127C                     clrloop0:	
  1029  127C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1030  127D  0A84               	incf	4,f	;increment pointer
  1031  127E  0604               	xorwf	4,w	;XOR with final address
  1032  127F  1903               	btfsc	3,2	;have we reached the end yet?
  1033  1280  3400               	retlw	0	;all done for this memory range, return
  1034  1281  0604               	xorwf	4,w	;XOR again to restore value
  1035  1282  2A7C               	goto	clrloop0	;do the next byte
  1036                           
  1037                           	psect	cstackBANK1
  1038  00C7                     __pcstackBANK1:	
  1039  00C7                     ?_PWM_DutyCycle2:	
  1040  00C7                     ??_TIMER0_Set:	
  1041                           ; 0 bytes @ 0x0
  1042                           
  1043  00C7                     ??_TIMER0_Init:	
  1044                           ; 0 bytes @ 0x0
  1045                           
  1046  00C7                     ??_ADC_Init:	
  1047                           ; 0 bytes @ 0x0
  1048                           
  1049  00C7                     ??_PWM_Init:	
  1050                           ; 0 bytes @ 0x0
  1051                           
  1052  00C7                     ?_LCD_Cursor:	
  1053                           ; 0 bytes @ 0x0
  1054                           
  1055  00C7                     ?_PWM_DutyCycle1:	
  1056                           ; 0 bytes @ 0x0
  1057                           
  1058  00C7                     ??_isdigit:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  00C7                     ??_USART_WriteChar:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  00C7                     ??_LCD_WriteCmd:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  00C7                     ??_LCD_WriteData:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  00C7                     ?___wmul:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  00C7                     ?___lwdiv:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076  00C7                     ?___aldiv:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079  00C7                     USART_WriteChar@byte:	
  1080                           ; 4 bytes @ 0x0
  1081                           
  1082  00C7                     TIMER0_Set@contagens:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  00C7                     LCD_Cursor@Col:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  00C7                     _isdigit$1448:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  00C7                     PWM_DutyCycle1@valor:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  00C7                     PWM_DutyCycle2@valor:	
  1095                           ; 2 bytes @ 0x0
  1096                           
  1097  00C7                     ___wmul@multiplier:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100  00C7                     ___lwdiv@divisor:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103  00C7                     ___aldiv@divisor:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x0
  1108  00C7                     	ds	1
  1109  00C8                     ?_USART_WriteString:	
  1110  00C8                     ??_LCD_Cursor:	
  1111                           ; 0 bytes @ 0x1
  1112                           
  1113  00C8                     LCD_WriteCmd@Byte:	
  1114                           ; 0 bytes @ 0x1
  1115                           
  1116  00C8                     LCD_WriteData@Byte:	
  1117                           ; 1 bytes @ 0x1
  1118                           
  1119  00C8                     isdigit@c:	
  1120                           ; 1 bytes @ 0x1
  1121                           
  1122  00C8                     USART_WriteString@str:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x1
  1127  00C8                     	ds	1
  1128  00C9                     ??_PWM_DutyCycle2:	
  1129  00C9                     ??_LCD_Init:	
  1130                           ; 0 bytes @ 0x2
  1131                           
  1132  00C9                     ?_LCD_WriteString:	
  1133                           ; 0 bytes @ 0x2
  1134                           
  1135  00C9                     ??_PWM_DutyCycle1:	
  1136                           ; 0 bytes @ 0x2
  1137                           
  1138  00C9                     ??_LCD_Clear:	
  1139                           ; 0 bytes @ 0x2
  1140                           
  1141  00C9                     LCD_Cursor@Row:	
  1142                           ; 0 bytes @ 0x2
  1143                           
  1144  00C9                     LCD_WriteString@Str:	
  1145                           ; 1 bytes @ 0x2
  1146                           
  1147  00C9                     ___wmul@multiplicand:	
  1148                           ; 2 bytes @ 0x2
  1149                           
  1150  00C9                     ___lwdiv@dividend:	
  1151                           ; 2 bytes @ 0x2
  1152                           
  1153                           
  1154                           ; 2 bytes @ 0x2
  1155  00C9                     	ds	1
  1156  00CA                     ??_USART_WriteString:	
  1157                           
  1158                           ; 0 bytes @ 0x3
  1159  00CA                     	ds	1
  1160  00CB                     ??_LCD_WriteString:	
  1161  00CB                     ??___wmul:	
  1162                           ; 0 bytes @ 0x4
  1163                           
  1164  00CB                     ??___lwdiv:	
  1165                           ; 0 bytes @ 0x4
  1166                           
  1167  00CB                     ___wmul@product:	
  1168                           ; 0 bytes @ 0x4
  1169                           
  1170  00CB                     ___aldiv@dividend:	
  1171                           ; 2 bytes @ 0x4
  1172                           
  1173                           
  1174                           ; 4 bytes @ 0x4
  1175  00CB                     	ds	1
  1176  00CC                     ___lwdiv@quotient:	
  1177                           
  1178                           ; 2 bytes @ 0x5
  1179  00CC                     	ds	2
  1180  00CE                     ___lwdiv@counter:	
  1181                           
  1182                           ; 1 bytes @ 0x7
  1183  00CE                     	ds	1
  1184  00CF                     ??___aldiv:	
  1185  00CF                     ?___lwmod:	
  1186                           ; 0 bytes @ 0x8
  1187                           
  1188  00CF                     ___lwmod@divisor:	
  1189                           ; 2 bytes @ 0x8
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x8
  1193  00CF                     	ds	1
  1194  00D0                     ___aldiv@counter:	
  1195                           
  1196                           ; 1 bytes @ 0x9
  1197  00D0                     	ds	1
  1198  00D1                     ___aldiv@sign:	
  1199  00D1                     ___lwmod@dividend:	
  1200                           ; 1 bytes @ 0xA
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0xA
  1204  00D1                     	ds	1
  1205  00D2                     ___aldiv@quotient:	
  1206                           
  1207                           ; 4 bytes @ 0xB
  1208  00D2                     	ds	1
  1209  00D3                     ??___lwmod:	
  1210                           
  1211                           ; 0 bytes @ 0xC
  1212  00D3                     	ds	1
  1213  00D4                     ___lwmod@counter:	
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216  00D4                     	ds	1
  1217  00D5                     ?_sprintf:	
  1218  00D5                     sprintf@f:	
  1219                           ; 2 bytes @ 0xE
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0xE
  1223  00D5                     	ds	1
  1224  00D6                     ?_USART_Init:	
  1225  00D6                     USART_Init@BaudRate:	
  1226                           ; 0 bytes @ 0xF
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0xF
  1230  00D6                     	ds	2
  1231  00D8                     ??_sprintf:	
  1232                           
  1233                           ; 0 bytes @ 0x11
  1234  00D8                     	ds	2
  1235  00DA                     ??_USART_Init:	
  1236                           
  1237                           ; 0 bytes @ 0x13
  1238  00DA                     	ds	1
  1239  00DB                     sprintf@ap:	
  1240                           
  1241                           ; 1 bytes @ 0x14
  1242  00DB                     	ds	1
  1243  00DC                     sprintf@prec:	
  1244                           
  1245                           ; 1 bytes @ 0x15
  1246  00DC                     	ds	1
  1247  00DD                     sprintf@_val:	
  1248                           
  1249                           ; 4 bytes @ 0x16
  1250  00DD                     	ds	4
  1251  00E1                     sprintf@flag:	
  1252                           
  1253                           ; 1 bytes @ 0x1A
  1254  00E1                     	ds	1
  1255  00E2                     sprintf@width:	
  1256                           
  1257                           ; 2 bytes @ 0x1B
  1258  00E2                     	ds	2
  1259  00E4                     sprintf@sp:	
  1260                           
  1261                           ; 1 bytes @ 0x1D
  1262  00E4                     	ds	1
  1263  00E5                     sprintf@c:	
  1264                           
  1265                           ; 1 bytes @ 0x1E
  1266  00E5                     	ds	1
  1267  00E6                     ??_main:	
  1268                           
  1269                           ; 0 bytes @ 0x1F
  1270  00E6                     	ds	3
  1271                           
  1272                           	psect	cstackCOMMON
  1273  0070                     __pcstackCOMMON:	
  1274  0070                     ?_TIMER0_Set:	
  1275  0070                     ?_TIMER0_Init:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0070                     ?_ADC_Init:	
  1279                           ; 0 bytes @ 0x0
  1280                           
  1281  0070                     ?_PWM_Init:	
  1282                           ; 0 bytes @ 0x0
  1283                           
  1284  0070                     ?_LCD_Init:	
  1285                           ; 0 bytes @ 0x0
  1286                           
  1287  0070                     ?_LCD_Clear:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_isdigit:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ?_Fuzzy:	
  1294                           ; 1 bit 
  1295                           
  1296  0070                     ?_ISR:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_main:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ?_USART_WriteChar:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_LCD_WriteCmd:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0070                     ?_LCD_WriteData:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?___ftge:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?i1_USART_WriteChar:	
  1315                           ; 1 bit 
  1316                           
  1317  0070                     ??i1_USART_WriteChar:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?i1_TIMER0_Set:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ??i1_TIMER0_Set:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_PWM_DutyCycle2:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_USART_ReceiveChar:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?i1___lwdiv:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?___ftpack:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338  0070                     ?___ftneg:	
  1339                           ; 3 bytes @ 0x0
  1340                           
  1341  0070                     ?___fttol:	
  1342                           ; 3 bytes @ 0x0
  1343                           
  1344  0070                     i1USART_WriteChar@byte:	
  1345                           ; 4 bytes @ 0x0
  1346                           
  1347  0070                     i1TIMER0_Set@contagens:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     i1PWM_DutyCycle2@valor:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     i1___lwdiv@divisor:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356  0070                     ___ftpack@arg:	
  1357                           ; 2 bytes @ 0x0
  1358                           
  1359  0070                     ___ftge@ff1:	
  1360                           ; 3 bytes @ 0x0
  1361                           
  1362  0070                     ___ftneg@f1:	
  1363                           ; 3 bytes @ 0x0
  1364                           
  1365  0070                     ___fttol@f1:	
  1366                           ; 3 bytes @ 0x0
  1367                           
  1368                           
  1369                           ; 3 bytes @ 0x0
  1370  0070                     	ds	1
  1371  0071                     ?i1_USART_WriteString:	
  1372  0071                     i1USART_WriteString@str:	
  1373                           ; 0 bytes @ 0x1
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x1
  1377  0071                     	ds	1
  1378  0072                     ??i1_PWM_DutyCycle2:	
  1379  0072                     i1___lwdiv@dividend:	
  1380                           ; 0 bytes @ 0x2
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x2
  1384  0072                     	ds	1
  1385  0073                     ??_USART_ReceiveChar:	
  1386  0073                     ??___ftneg:	
  1387                           ; 0 bytes @ 0x3
  1388                           
  1389  0073                     ??i1_USART_WriteString:	
  1390                           ; 0 bytes @ 0x3
  1391                           
  1392  0073                     ___ftpack@exp:	
  1393                           ; 0 bytes @ 0x3
  1394                           
  1395  0073                     ___ftge@ff2:	
  1396                           ; 1 bytes @ 0x3
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x3
  1400  0073                     	ds	1
  1401  0074                     ??___fttol:	
  1402  0074                     ??i1___lwdiv:	
  1403                           ; 0 bytes @ 0x4
  1404                           
  1405  0074                     USART_ReceiveChar@byte:	
  1406                           ; 0 bytes @ 0x4
  1407                           
  1408  0074                     ___ftpack@sign:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411                           
  1412                           ; 1 bytes @ 0x4
  1413  0074                     	ds	1
  1414  0075                     ??___ftpack:	
  1415  0075                     i1___lwdiv@quotient:	
  1416                           ; 0 bytes @ 0x5
  1417                           
  1418                           
  1419                           ; 2 bytes @ 0x5
  1420  0075                     	ds	1
  1421  0076                     ??___ftge:	
  1422                           
  1423                           ; 0 bytes @ 0x6
  1424  0076                     	ds	1
  1425  0077                     i1___lwdiv@counter:	
  1426                           
  1427                           ; 1 bytes @ 0x7
  1428  0077                     	ds	1
  1429  0078                     ?i1___wmul:	
  1430  0078                     ?___ftadd:	
  1431                           ; 2 bytes @ 0x8
  1432                           
  1433  0078                     ?___lwtoft:	
  1434                           ; 3 bytes @ 0x8
  1435                           
  1436  0078                     ___fttol@sign1:	
  1437                           ; 3 bytes @ 0x8
  1438                           
  1439  0078                     ___lwtoft@c:	
  1440                           ; 1 bytes @ 0x8
  1441                           
  1442  0078                     i1___wmul@multiplier:	
  1443                           ; 2 bytes @ 0x8
  1444                           
  1445  0078                     ___ftadd@f1:	
  1446                           ; 2 bytes @ 0x8
  1447                           
  1448                           
  1449                           ; 3 bytes @ 0x8
  1450  0078                     	ds	1
  1451  0079                     ___fttol@lval:	
  1452                           
  1453                           ; 4 bytes @ 0x9
  1454  0079                     	ds	1
  1455  007A                     i1___wmul@multiplicand:	
  1456                           
  1457                           ; 2 bytes @ 0xA
  1458  007A                     	ds	1
  1459  007B                     ??___lwtoft:	
  1460  007B                     ___ftadd@f2:	
  1461                           ; 0 bytes @ 0xB
  1462                           
  1463                           
  1464                           ; 3 bytes @ 0xB
  1465  007B                     	ds	1
  1466  007C                     ??_max_val:	
  1467  007C                     ??i1___wmul:	
  1468                           ; 0 bytes @ 0xC
  1469                           
  1470  007C                     i1___wmul@product:	
  1471                           ; 0 bytes @ 0xC
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0xC
  1475  007C                     	ds	1
  1476  007D                     ___fttol@exp1:	
  1477                           
  1478                           ; 1 bytes @ 0xD
  1479  007D                     	ds	1
  1480  007E                     ??_trimf:	
  1481  007E                     ??_trapmf:	
  1482                           ; 0 bytes @ 0xE
  1483                           
  1484  007E                     ??_Fuzzy:	
  1485                           ; 0 bytes @ 0xE
  1486                           
  1487                           
  1488                           	psect	cstackBANK0
  1489  0020                     __pcstackBANK0:	
  1490                           ; 0 bytes @ 0xE
  1491                           
  1492  0020                     ??___ftadd:	
  1493  0020                     ?_max_val:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0020                     max_val@a:	
  1497                           ; 3 bytes @ 0x0
  1498                           
  1499                           
  1500                           ; 3 bytes @ 0x0
  1501  0020                     	ds	3
  1502  0023                     max_val@b:	
  1503                           
  1504                           ; 3 bytes @ 0x3
  1505  0023                     	ds	1
  1506  0024                     ___ftadd@sign:	
  1507                           
  1508                           ; 1 bytes @ 0x4
  1509  0024                     	ds	1
  1510  0025                     ___ftadd@exp2:	
  1511                           
  1512                           ; 1 bytes @ 0x5
  1513  0025                     	ds	1
  1514  0026                     ___ftadd@exp1:	
  1515                           
  1516                           ; 1 bytes @ 0x6
  1517  0026                     	ds	1
  1518  0027                     ?___ftdiv:	
  1519  0027                     ___ftdiv@f2:	
  1520                           ; 3 bytes @ 0x7
  1521                           
  1522                           
  1523                           ; 3 bytes @ 0x7
  1524  0027                     	ds	3
  1525  002A                     ___ftdiv@f1:	
  1526                           
  1527                           ; 3 bytes @ 0xA
  1528  002A                     	ds	3
  1529  002D                     ??___ftdiv:	
  1530                           
  1531                           ; 0 bytes @ 0xD
  1532  002D                     	ds	4
  1533  0031                     ___ftdiv@cntr:	
  1534                           
  1535                           ; 1 bytes @ 0x11
  1536  0031                     	ds	1
  1537  0032                     ___ftdiv@f3:	
  1538                           
  1539                           ; 3 bytes @ 0x12
  1540  0032                     	ds	3
  1541  0035                     ___ftdiv@exp:	
  1542                           
  1543                           ; 1 bytes @ 0x15
  1544  0035                     	ds	1
  1545  0036                     ___ftdiv@sign:	
  1546                           
  1547                           ; 1 bytes @ 0x16
  1548  0036                     	ds	1
  1549  0037                     ?_trimf:	
  1550  0037                     ?_trapmf:	
  1551                           ; 3 bytes @ 0x17
  1552                           
  1553  0037                     ?___ftmul:	
  1554                           ; 3 bytes @ 0x17
  1555                           
  1556  0037                     trimf@x:	
  1557                           ; 3 bytes @ 0x17
  1558                           
  1559  0037                     trapmf@x:	
  1560                           ; 3 bytes @ 0x17
  1561                           
  1562  0037                     ___ftmul@f1:	
  1563                           ; 3 bytes @ 0x17
  1564                           
  1565                           
  1566                           ; 3 bytes @ 0x17
  1567  0037                     	ds	3
  1568  003A                     trimf@a:	
  1569  003A                     trapmf@a:	
  1570                           ; 3 bytes @ 0x1A
  1571                           
  1572  003A                     ___ftmul@f2:	
  1573                           ; 3 bytes @ 0x1A
  1574                           
  1575                           
  1576                           ; 3 bytes @ 0x1A
  1577  003A                     	ds	3
  1578  003D                     ??___ftmul:	
  1579  003D                     trimf@b:	
  1580                           ; 0 bytes @ 0x1D
  1581                           
  1582  003D                     trapmf@b:	
  1583                           ; 3 bytes @ 0x1D
  1584                           
  1585                           
  1586                           ; 3 bytes @ 0x1D
  1587  003D                     	ds	3
  1588  0040                     trimf@c:	
  1589  0040                     trapmf@c:	
  1590                           ; 3 bytes @ 0x20
  1591                           
  1592                           
  1593                           ; 3 bytes @ 0x20
  1594  0040                     	ds	1
  1595  0041                     ___ftmul@exp:	
  1596                           
  1597                           ; 1 bytes @ 0x21
  1598  0041                     	ds	1
  1599  0042                     ___ftmul@f3_as_product:	
  1600                           
  1601                           ; 3 bytes @ 0x22
  1602  0042                     	ds	1
  1603  0043                     trimf@ua:	
  1604  0043                     trapmf@d:	
  1605                           ; 3 bytes @ 0x23
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0x23
  1609  0043                     	ds	2
  1610  0045                     ___ftmul@cntr:	
  1611                           
  1612                           ; 1 bytes @ 0x25
  1613  0045                     	ds	1
  1614  0046                     ___ftmul@sign:	
  1615  0046                     trapmf@ua:	
  1616                           ; 1 bytes @ 0x26
  1617                           
  1618                           
  1619                           ; 3 bytes @ 0x26
  1620  0046                     	ds	3
  1621  0049                     Fuzzy@tip:	
  1622                           
  1623                           ; 3 bytes @ 0x29
  1624  0049                     	ds	3
  1625  004C                     Fuzzy@a:	
  1626                           
  1627                           ; 2 bytes @ 0x2C
  1628  004C                     	ds	2
  1629  004E                     Fuzzy@a_233:	
  1630                           
  1631                           ; 2 bytes @ 0x2E
  1632  004E                     	ds	2
  1633  0050                     Fuzzy@a_234:	
  1634                           
  1635                           ; 2 bytes @ 0x30
  1636  0050                     	ds	2
  1637  0052                     Fuzzy@mantem:	
  1638                           
  1639                           ; 3 bytes @ 0x32
  1640  0052                     	ds	3
  1641  0055                     Fuzzy@reduz:	
  1642                           
  1643                           ; 3 bytes @ 0x35
  1644  0055                     	ds	3
  1645  0058                     Fuzzy@aumenta:	
  1646                           
  1647                           ; 3 bytes @ 0x38
  1648  0058                     	ds	3
  1649  005B                     ??_ISR:	
  1650                           
  1651                           ; 0 bytes @ 0x3B
  1652  005B                     	ds	4
  1653                           
  1654                           	psect	maintext
  1655  0D1F                     __pmaintext:	
  1656 ;;
  1657 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1658 ;;
  1659 ;; *************** function _main *****************
  1660 ;; Defined at:
  1661 ;;		line 458 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 17F/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       0       3       0       0
  1678 ;;      Totals:         0       0       3       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels required when called:    7
  1681 ;; This function calls:
  1682 ;;		_ADC_Init
  1683 ;;		_LCD_Clear
  1684 ;;		_LCD_Cursor
  1685 ;;		_LCD_Init
  1686 ;;		_LCD_WriteString
  1687 ;;		_PWM_DutyCycle1
  1688 ;;		_PWM_DutyCycle2
  1689 ;;		_PWM_Init
  1690 ;;		_TIMER0_Init
  1691 ;;		_TIMER0_Set
  1692 ;;		_USART_Init
  1693 ;;		_USART_WriteString
  1694 ;;		_sprintf
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _main
  1702  0D1F                     _main:	
  1703                           
  1704                           ;main.c: 460: TRISA = 0b00000001;
  1705                           
  1706                           ;incstack = 0
  1707                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1708  0D1F  3001               	movlw	1
  1709  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  1711  0D22  0085               	movwf	5	;volatile
  1712                           
  1713                           ;main.c: 461: PORTA = 0b00000001;
  1714  0D23  3001               	movlw	1
  1715  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0D26  0085               	movwf	5	;volatile
  1718                           
  1719                           ;main.c: 462: TRISB = 0b00000000;
  1720  0D27  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0D28  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0D29  0186               	clrf	6	;volatile
  1723                           
  1724                           ;main.c: 463: PORTB = 0b00000000;
  1725  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0D2C  0186               	clrf	6	;volatile
  1728                           
  1729                           ;main.c: 464: TRISC = 0b10000001;
  1730  0D2D  3081               	movlw	129
  1731  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0D30  0087               	movwf	7	;volatile
  1734                           
  1735                           ;main.c: 465: PORTC = 0b11000000;
  1736  0D31  30C0               	movlw	192
  1737  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0D34  0087               	movwf	7	;volatile
  1740                           
  1741                           ;main.c: 466: TRISD = 0b00000000;
  1742  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0D37  0188               	clrf	8	;volatile
  1745                           
  1746                           ;main.c: 467: PORTD = 0b00000000;
  1747  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0D3A  0188               	clrf	8	;volatile
  1750                           
  1751                           ;main.c: 468: TRISE = 0b00000000;
  1752  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0D3C  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0D3D  0189               	clrf	9	;volatile
  1755                           
  1756                           ;main.c: 469: PORTE = 0b00000000;
  1757  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0D40  0189               	clrf	9	;volatile
  1760                           
  1761                           ;main.c: 472: T1CON = 0x03;
  1762  0D41  3003               	movlw	3
  1763  0D42  0090               	movwf	16	;volatile
  1764                           
  1765                           ;main.c: 473: TMR1L = 0x00;
  1766  0D43  018E               	clrf	14	;volatile
  1767                           
  1768                           ;main.c: 474: TMR1H = 0x00;
  1769  0D44  018F               	clrf	15	;volatile
  1770                           
  1771                           ;main.c: 477: USART_Init(115200);
  1772  0D45  3000               	movlw	0
  1773  0D46  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0D47  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0D48  00D9               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1776  0D49  3001               	movlw	1
  1777  0D4A  00D8               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1778  0D4B  30C2               	movlw	194
  1779  0D4C  00D7               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1780  0D4D  3000               	movlw	0
  1781  0D4E  00D6               	movwf	USART_Init@BaudRate^(0+128)
  1782  0D4F  160A  118A  256C  120A  158A  	fcall	_USART_Init
  1783                           
  1784                           ;main.c: 478: TIMER0_Init();
  1785  0D54  160A  118A  2283  120A  158A  	fcall	_TIMER0_Init
  1786                           
  1787                           ;main.c: 479: ADC_Init();
  1788  0D59  160A  118A  22AB  120A  158A  	fcall	_ADC_Init
  1789                           
  1790                           ;main.c: 480: PWM_Init();
  1791  0D5E  160A  118A  23E4  120A  158A  	fcall	_PWM_Init
  1792                           
  1793                           ;main.c: 481: LCD_Init();
  1794  0D63  160A  118A  267A  120A  158A  	fcall	_LCD_Init
  1795                           
  1796                           ;main.c: 484: INTCONbits.PEIE = 1;
  1797  0D68  170B               	bsf	11,6	;volatile
  1798                           
  1799                           ;main.c: 485: INTCONbits.GIE = 1;
  1800  0D69  178B               	bsf	11,7	;volatile
  1801                           
  1802                           ;main.c: 488: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1803  0D6A  3033               	movlw	low (STR_11-__stringbase)
  1804  0D6B  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0D6C  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0D6D  00C8               	movwf	USART_WriteString@str^(0+128)
  1807  0D6E  3080               	movlw	128
  1808  0D6F  00C9               	movwf	(USART_WriteString@str+1)^(0+128)
  1809  0D70  160A  118A  2487  120A  158A  	fcall	_USART_WriteString
  1810                           
  1811                           ;main.c: 489: USART_WriteString("USART: 115.200bps\n\r");
  1812  0D75  3050               	movlw	low (STR_12-__stringbase)
  1813  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0D78  00C8               	movwf	USART_WriteString@str^(0+128)
  1816  0D79  3080               	movlw	128
  1817  0D7A  00C9               	movwf	(USART_WriteString@str+1)^(0+128)
  1818  0D7B  160A  118A  2487  120A  158A  	fcall	_USART_WriteString
  1819                           
  1820                           ;main.c: 492: LCD_Init();
  1821  0D80  160A  118A  267A  120A  158A  	fcall	_LCD_Init
  1822                           
  1823                           ;main.c: 493: LCD_Cursor(0,0);
  1824  0D85  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0D86  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0D87  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1827  0D88  3000               	movlw	0
  1828  0D89  160A  118A  233C  120A  158A  	fcall	_LCD_Cursor
  1829                           
  1830                           ;main.c: 494: LCD_WriteString("Inicializando...");
  1831  0D8E  3064               	movlw	low (STR_13-__stringbase)
  1832  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1833  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1834  0D91  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1835  0D92  3080               	movlw	128
  1836  0D93  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1837  0D94  160A  118A  2456  120A  158A  	fcall	_LCD_WriteString
  1838                           
  1839                           ;main.c: 497: PWM_DutyCycle1(0);
  1840  0D99  3000               	movlw	0
  1841  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  1842  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  1843  0D9C  00C7               	movwf	PWM_DutyCycle1@valor^(0+128)
  1844  0D9D  3000               	movlw	0
  1845  0D9E  00C8               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1846  0D9F  160A  118A  235C  120A  158A  	fcall	_PWM_DutyCycle1
  1847                           
  1848                           ;main.c: 498: PWM_DutyCycle2(0);
  1849  0DA4  3000               	movlw	0
  1850  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0DA7  00C7               	movwf	PWM_DutyCycle2@valor^(0+128)
  1853  0DA8  3000               	movlw	0
  1854  0DA9  00C8               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1855  0DAA  160A  118A  237D  120A  158A  	fcall	_PWM_DutyCycle2
  1856                           
  1857                           ;main.c: 501: TIMER0_Set(238);
  1858  0DAF  30EE               	movlw	238
  1859  0DB0  160A  118A  2273  120A  158A  	fcall	_TIMER0_Set
  1860                           
  1861                           ;main.c: 504: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1862  0DB5  3018               	movlw	24
  1863  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0DB8  00E8               	movwf	(??_main^(0+128)+2)
  1866  0DB9  3061               	movlw	97
  1867  0DBA  00E7               	movwf	(??_main^(0+128)+1)
  1868  0DBB  306E               	movlw	110
  1869  0DBC  00E6               	movwf	??_main^(0+128)
  1870  0DBD                     u4047:	
  1871  0DBD  0BE6               	decfsz	??_main^(0+128),f
  1872  0DBE  2DBD               	goto	u4047
  1873  0DBF  0BE7               	decfsz	(??_main^(0+128)+1),f
  1874  0DC0  2DBD               	goto	u4047
  1875  0DC1  0BE8               	decfsz	(??_main^(0+128)+2),f
  1876  0DC2  2DBD               	goto	u4047
  1877  0DC3  0000               	nop
  1878  0DC4                     l198:	
  1879                           ;main.c: 507: while(1)
  1880                           
  1881                           
  1882                           ;main.c: 508: {
  1883                           ;main.c: 512: sprintf(display_rpm,"%04d", rpm);
  1884  0DC4  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1885  0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0DC6  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0DC7  00E6               	movwf	??_main^(0+128)
  1888  0DC8  0866               	movf	??_main^(0+128),w
  1889  0DC9  00D5               	movwf	sprintf@f^(0+128)
  1890  0DCA  083E               	movf	(_rpm+1)^(0+128),w
  1891  0DCB  01D7               	clrf	((?_sprintf+1)^(0+128)+1)
  1892  0DCC  07D7               	addwf	((?_sprintf+1)^(0+128)+1),f
  1893  0DCD  083D               	movf	_rpm^(0+128),w
  1894  0DCE  01D6               	clrf	(?_sprintf^(0+128)+1)
  1895  0DCF  07D6               	addwf	(?_sprintf^(0+128)+1),f
  1896  0DD0  309D               	movlw	_display_rpm& (0+255)
  1897  0DD1  120A  118A  2572  120A  158A  	fcall	_sprintf
  1898                           
  1899                           ;main.c: 513: sprintf(display_pwm,"%04d", deltaV);
  1900  0DD6  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1901  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0DD9  00E6               	movwf	??_main^(0+128)
  1904  0DDA  0866               	movf	??_main^(0+128),w
  1905  0DDB  00D5               	movwf	sprintf@f^(0+128)
  1906  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0DDE  086C               	movf	_deltaV+1,w
  1909  0DDF  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0DE0  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0DE1  01D7               	clrf	((?_sprintf+1)^(0+128)+1)
  1912  0DE2  07D7               	addwf	((?_sprintf+1)^(0+128)+1),f
  1913  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0DE5  086B               	movf	_deltaV,w
  1916  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1917  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0DE8  01D6               	clrf	(?_sprintf^(0+128)+1)
  1919  0DE9  07D6               	addwf	(?_sprintf^(0+128)+1),f
  1920  0DEA  3093               	movlw	_display_pwm& (0+255)
  1921  0DEB  120A  118A  2572  120A  158A  	fcall	_sprintf
  1922                           
  1923                           ;main.c: 517: USART_WriteString(display_rpm);
  1924  0DF0  309D               	movlw	_display_rpm& (0+255)
  1925  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0DF3  00C8               	movwf	USART_WriteString@str^(0+128)
  1928  0DF4  3001               	movlw	1
  1929  0DF5  00C9               	movwf	(USART_WriteString@str+1)^(0+128)
  1930  0DF6  160A  118A  2487  120A  158A  	fcall	_USART_WriteString
  1931                           
  1932                           ;main.c: 518: USART_WriteString("\n\r");
  1933  0DFB  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1934  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0DFD  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0DFE  00C8               	movwf	USART_WriteString@str^(0+128)
  1937  0DFF  3080               	movlw	128
  1938  0E00  00C9               	movwf	(USART_WriteString@str+1)^(0+128)
  1939  0E01  160A  118A  2487  120A  158A  	fcall	_USART_WriteString
  1940                           
  1941                           ;main.c: 521: LCD_Clear();
  1942  0E06  160A  118A  242D  120A  158A  	fcall	_LCD_Clear
  1943                           
  1944                           ;main.c: 522: LCD_Cursor(0,0);
  1945  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0E0D  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1948  0E0E  3000               	movlw	0
  1949  0E0F  160A  118A  233C  120A  158A  	fcall	_LCD_Cursor
  1950                           
  1951                           ;main.c: 523: LCD_WriteString("RPM: ");
  1952  0E14  30C1               	movlw	low (STR_17-__stringbase)
  1953  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0E16  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0E17  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1956  0E18  3080               	movlw	128
  1957  0E19  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1958  0E1A  160A  118A  2456  120A  158A  	fcall	_LCD_WriteString
  1959                           
  1960                           ;main.c: 524: LCD_Cursor(0,6);
  1961  0E1F  3006               	movlw	6
  1962  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0E21  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0E22  00E6               	movwf	??_main^(0+128)
  1965  0E23  0866               	movf	??_main^(0+128),w
  1966  0E24  00C7               	movwf	LCD_Cursor@Col^(0+128)
  1967  0E25  3000               	movlw	0
  1968  0E26  160A  118A  233C  120A  158A  	fcall	_LCD_Cursor
  1969                           
  1970                           ;main.c: 525: LCD_WriteString(display_rpm);
  1971  0E2B  309D               	movlw	_display_rpm& (0+255)
  1972  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0E2E  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1975  0E2F  3001               	movlw	1
  1976  0E30  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1977  0E31  160A  118A  2456  120A  158A  	fcall	_LCD_WriteString
  1978                           
  1979                           ;main.c: 526: LCD_Cursor(1,0);
  1980  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  1981  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  1982  0E38  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1983  0E39  3001               	movlw	1
  1984  0E3A  160A  118A  233C  120A  158A  	fcall	_LCD_Cursor
  1985                           
  1986                           ;main.c: 527: LCD_WriteString("Delta: ");
  1987  0E3F  30B9               	movlw	low (STR_18-__stringbase)
  1988  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0E42  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1991  0E43  3080               	movlw	128
  1992  0E44  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1993  0E45  160A  118A  2456  120A  158A  	fcall	_LCD_WriteString
  1994                           
  1995                           ;main.c: 528: LCD_Cursor(1,6);
  1996  0E4A  3006               	movlw	6
  1997  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0E4D  00E6               	movwf	??_main^(0+128)
  2000  0E4E  0866               	movf	??_main^(0+128),w
  2001  0E4F  00C7               	movwf	LCD_Cursor@Col^(0+128)
  2002  0E50  3001               	movlw	1
  2003  0E51  160A  118A  233C  120A  158A  	fcall	_LCD_Cursor
  2004                           
  2005                           ;main.c: 529: LCD_WriteString(display_pwm);
  2006  0E56  3093               	movlw	_display_pwm& (0+255)
  2007  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0E59  00C9               	movwf	LCD_WriteString@Str^(0+128)
  2010  0E5A  3001               	movlw	1
  2011  0E5B  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2012  0E5C  160A  118A  2456  120A  158A  	fcall	_LCD_WriteString
  2013                           
  2014                           ;main.c: 531: _delay((unsigned long)((200)*(18432000/4000.0)));
  2015  0E61  3005               	movlw	5
  2016  0E62  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0E63  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0E64  00E8               	movwf	(??_main^(0+128)+2)
  2019  0E65  30AD               	movlw	173
  2020  0E66  00E7               	movwf	(??_main^(0+128)+1)
  2021  0E67  30E0               	movlw	224
  2022  0E68  00E6               	movwf	??_main^(0+128)
  2023  0E69                     u4057:	
  2024  0E69  0BE6               	decfsz	??_main^(0+128),f
  2025  0E6A  2E69               	goto	u4057
  2026  0E6B  0BE7               	decfsz	(??_main^(0+128)+1),f
  2027  0E6C  2E69               	goto	u4057
  2028  0E6D  0BE8               	decfsz	(??_main^(0+128)+2),f
  2029  0E6E  2E69               	goto	u4057
  2030  0E6F  2DC4               	goto	l198
  2031  0E70                     __end_of_main:	
  2032                           
  2033                           	psect	text1
  2034  0572                     __ptext1:	
  2035 ;; *************** function _sprintf *****************
  2036 ;; Defined at:
  2037 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  sp              1    wreg     PTR unsigned char 
  2040 ;;		 -> display_pwm(10), display_rpm(10), 
  2041 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2042 ;;		 -> STR_15(5), STR_14(5), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2045 ;;		 -> display_pwm(10), display_rpm(10), 
  2046 ;;  _val            4   22[BANK1 ] struct .
  2047 ;;  width           2   27[BANK1 ] int 
  2048 ;;  c               1   30[BANK1 ] char 
  2049 ;;  flag            1   26[BANK1 ] unsigned char 
  2050 ;;  prec            1   21[BANK1 ] char 
  2051 ;;  ap              1   20[BANK1 ] PTR void [1]
  2052 ;;		 -> ?_sprintf(2), 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2   14[BANK1 ] int 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       3       0       0
  2063 ;;      Locals:         0       0      11       0       0
  2064 ;;      Temps:          0       0       3       0       0
  2065 ;;      Totals:         0       0      17       0       0
  2066 ;;Total ram usage:       17 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    6
  2069 ;; This function calls:
  2070 ;;		___lwdiv
  2071 ;;		___lwmod
  2072 ;;		___wmul
  2073 ;;		_isdigit
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _sprintf
  2081  0572                     _sprintf:	
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2085                           ;sprintf@sp stored from wreg
  2086  0572  1683               	bsf	3,5	;RP0=1, select bank1
  2087  0573  1303               	bcf	3,6	;RP1=0, select bank1
  2088  0574  00E4               	movwf	sprintf@sp^(0+128)
  2089                           
  2090                           ;doprnt.c: 494: va_list ap;
  2091                           ;doprnt.c: 499: signed char c;
  2092                           ;doprnt.c: 501: int width;
  2093                           ;doprnt.c: 506: signed char prec;
  2094                           ;doprnt.c: 508: unsigned char flag;
  2095                           ;doprnt.c: 527: union {
  2096                           ;doprnt.c: 528: unsigned int _val;
  2097                           ;doprnt.c: 529: struct {
  2098                           ;doprnt.c: 530: const char * _cp;
  2099                           ;doprnt.c: 531: unsigned _len;
  2100                           ;doprnt.c: 532: } _str;
  2101                           ;doprnt.c: 533: } _val;
  2102                           ;doprnt.c: 542: *ap = __va_start();
  2103  0575  30D6               	movlw	(?_sprintf+1)& (0+255)
  2104  0576  00D8               	movwf	??_sprintf^(0+128)
  2105  0577  0858               	movf	??_sprintf^(0+128),w
  2106  0578  00DB               	movwf	sprintf@ap^(0+128)
  2107  0579                     l3082:	
  2108                           ;doprnt.c: 545: while(c = *f++) {
  2109                           
  2110  0579  3001               	movlw	1
  2111  057A  1683               	bsf	3,5	;RP0=1, select bank1
  2112  057B  1303               	bcf	3,6	;RP1=0, select bank1
  2113  057C  07D5               	addwf	sprintf@f^(0+128),f
  2114  057D  30FF               	movlw	-1
  2115  057E  0755               	addwf	sprintf@f^(0+128),w
  2116  057F  0084               	movwf	4
  2117  0580  120A  158A  200A  120A  118A  	fcall	stringdir
  2118  0585  00D8               	movwf	??_sprintf^(0+128)
  2119  0586  0858               	movf	??_sprintf^(0+128),w
  2120  0587  00E5               	movwf	sprintf@c^(0+128)
  2121  0588  08E5               	movf	sprintf@c^(0+128),f
  2122  0589  1903               	btfsc	3,2
  2123  058A  2F22               	goto	l3084
  2124                           
  2125                           ;doprnt.c: 547: if(c != '%')
  2126  058B  0865               	movf	sprintf@c^(0+128),w
  2127  058C  3A25               	xorlw	37
  2128  058D  1903               	skipnz
  2129  058E  2D9B               	goto	l2986
  2130                           
  2131                           ;doprnt.c: 549: {
  2132                           ;doprnt.c: 550: ((*sp++ = (c)));
  2133  058F  0865               	movf	sprintf@c^(0+128),w
  2134  0590  00D8               	movwf	??_sprintf^(0+128)
  2135  0591  0864               	movf	sprintf@sp^(0+128),w
  2136  0592  0084               	movwf	4
  2137  0593  0858               	movf	??_sprintf^(0+128),w
  2138  0594  1783               	bsf	3,7	;select IRP bank2
  2139  0595  0080               	movwf	0
  2140  0596  3001               	movlw	1
  2141  0597  00D8               	movwf	??_sprintf^(0+128)
  2142  0598  0858               	movf	??_sprintf^(0+128),w
  2143  0599  07E4               	addwf	sprintf@sp^(0+128),f
  2144                           
  2145                           ;doprnt.c: 551: continue;
  2146  059A  2D79               	goto	l3082
  2147  059B                     l2986:	
  2148                           
  2149                           ;doprnt.c: 552: }
  2150                           ;doprnt.c: 555: width = 0;
  2151  059B  01E2               	clrf	sprintf@width^(0+128)
  2152  059C  01E3               	clrf	(sprintf@width+1)^(0+128)
  2153                           
  2154                           ;doprnt.c: 557: flag = 0;
  2155  059D  01E1               	clrf	sprintf@flag^(0+128)
  2156                           
  2157                           ;doprnt.c: 560: switch(*f) {
  2158                           
  2159                           ;doprnt.c: 559: for(;;) {
  2160  059E  2DA4               	goto	l2992
  2161  059F                     l475:	
  2162                           ;doprnt.c: 588: case '0':
  2163                           
  2164                           
  2165                           ;doprnt.c: 589: flag |= 0x04;
  2166  059F  1561               	bsf	sprintf@flag^(0+128),2
  2167                           
  2168                           ;doprnt.c: 590: f++;
  2169  05A0  3001               	movlw	1
  2170  05A1  00D8               	movwf	??_sprintf^(0+128)
  2171  05A2  0858               	movf	??_sprintf^(0+128),w
  2172  05A3  07D5               	addwf	sprintf@f^(0+128),f
  2173  05A4                     l2992:	
  2174                           ;doprnt.c: 593: }
  2175                           
  2176                           ;doprnt.c: 591: continue;
  2177                           
  2178  05A4  0855               	movf	sprintf@f^(0+128),w
  2179  05A5  0084               	movwf	4
  2180  05A6  120A  158A  200A  120A  118A  	fcall	stringdir
  2181                           
  2182                           ; Switch size 1, requested type "space"
  2183                           ; Number of cases is 1, Range of values is 48 to 48
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte            4     3 (average)
  2187                           ; direct_byte           14    11 (fixed)
  2188                           ; jumptable            263     9 (fixed)
  2189                           ;	Chosen strategy is simple_byte
  2190  05AB  3A30               	xorlw	48	; case 48
  2191  05AC  1903               	skipnz
  2192  05AD  2D9F               	goto	l475
  2193  05AE  2DAF               	goto	l2994
  2194  05AF                     l2994:	
  2195                           ;doprnt.c: 595: }
  2196                           
  2197                           ;doprnt.c: 594: break;
  2198                           
  2199                           
  2200                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2201  05AF  0855               	movf	sprintf@f^(0+128),w
  2202  05B0  0084               	movwf	4
  2203  05B1  120A  158A  200A  120A  118A  	fcall	stringdir
  2204  05B6  160A  118A  229B  120A  118A  	fcall	_isdigit
  2205  05BB  1C03               	btfss	3,0
  2206  05BC  2DFF               	goto	l3008
  2207                           
  2208                           ;doprnt.c: 607: width = 0;
  2209  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2210  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2211  05BF  01E2               	clrf	sprintf@width^(0+128)
  2212  05C0  01E3               	clrf	(sprintf@width+1)^(0+128)
  2213  05C1                     l2998:	
  2214                           ;doprnt.c: 608: do {
  2215                           
  2216                           
  2217                           ;doprnt.c: 609: width *= 10;
  2218  05C1  300A               	movlw	10
  2219  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  2220  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  2221  05C4  00C7               	movwf	___wmul@multiplier^(0+128)
  2222  05C5  3000               	movlw	0
  2223  05C6  00C8               	movwf	(___wmul@multiplier^(0+128)+1)
  2224  05C7  0863               	movf	(sprintf@width+1)^(0+128),w
  2225  05C8  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
  2226  05C9  07CA               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2227  05CA  0862               	movf	sprintf@width^(0+128),w
  2228  05CB  01C9               	clrf	___wmul@multiplicand^(0+128)
  2229  05CC  07C9               	addwf	___wmul@multiplicand^(0+128),f
  2230  05CD  160A  118A  2408  120A  118A  	fcall	___wmul
  2231  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2232  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2233  05D4  0848               	movf	(?___wmul+1)^(0+128),w
  2234  05D5  01E3               	clrf	(sprintf@width+1)^(0+128)
  2235  05D6  07E3               	addwf	(sprintf@width+1)^(0+128),f
  2236  05D7  0847               	movf	?___wmul^(0+128),w
  2237  05D8  01E2               	clrf	sprintf@width^(0+128)
  2238  05D9  07E2               	addwf	sprintf@width^(0+128),f
  2239                           
  2240                           ;doprnt.c: 610: width += *f++ - '0';
  2241  05DA  0855               	movf	sprintf@f^(0+128),w
  2242  05DB  0084               	movwf	4
  2243  05DC  120A  158A  200A  120A  118A  	fcall	stringdir
  2244  05E1  3ED0               	addlw	208
  2245  05E2  00D8               	movwf	??_sprintf^(0+128)
  2246  05E3  30FF               	movlw	255
  2247  05E4  1803               	skipnc
  2248  05E5  3000               	movlw	0
  2249  05E6  00D9               	movwf	(??_sprintf^(0+128)+1)
  2250  05E7  0858               	movf	??_sprintf^(0+128),w
  2251  05E8  07E2               	addwf	sprintf@width^(0+128),f
  2252  05E9  1803               	skipnc
  2253  05EA  0AE3               	incf	(sprintf@width+1)^(0+128),f
  2254  05EB  0859               	movf	(??_sprintf+1)^(0+128),w
  2255  05EC  07E3               	addwf	(sprintf@width+1)^(0+128),f
  2256  05ED  3001               	movlw	1
  2257  05EE  00D8               	movwf	??_sprintf^(0+128)
  2258  05EF  0858               	movf	??_sprintf^(0+128),w
  2259  05F0  07D5               	addwf	sprintf@f^(0+128),f
  2260                           
  2261                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2262  05F1  0855               	movf	sprintf@f^(0+128),w
  2263  05F2  0084               	movwf	4
  2264  05F3  120A  158A  200A  120A  118A  	fcall	stringdir
  2265  05F8  160A  118A  229B  120A  118A  	fcall	_isdigit
  2266  05FD  1803               	btfsc	3,0
  2267  05FE  2DC1               	goto	l2998
  2268  05FF                     l3008:	
  2269                           ;doprnt.c: 831: }
  2270                           
  2271                           ;doprnt.c: 822: continue;
  2272                           
  2273                           ;doprnt.c: 811: default:
  2274                           
  2275                           ;doprnt.c: 707: case 'i':
  2276                           ;doprnt.c: 708: break;
  2277                           
  2278                           ;doprnt.c: 706: case 'd':
  2279                           
  2280                           ;doprnt.c: 647: goto alldone;
  2281                           
  2282                           ;doprnt.c: 646: case 0:
  2283                           
  2284                           ;doprnt.c: 617: }
  2285                           ;doprnt.c: 644: switch(c = *f++) {
  2286                           
  2287  05FF  3001               	movlw	1
  2288  0600  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0601  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0602  07D5               	addwf	sprintf@f^(0+128),f
  2291  0603  30FF               	movlw	-1
  2292  0604  0755               	addwf	sprintf@f^(0+128),w
  2293  0605  0084               	movwf	4
  2294  0606  120A  158A  200A  120A  118A  	fcall	stringdir
  2295  060B  00E5               	movwf	sprintf@c^(0+128)
  2296                           
  2297                           ; Switch size 1, requested type "space"
  2298                           ; Number of cases is 3, Range of values is 0 to 105
  2299                           ; switch strategies available:
  2300                           ; Name         Instructions Cycles
  2301                           ; simple_byte           10     6 (average)
  2302                           ; jumptable            260     6 (fixed)
  2303                           ;	Chosen strategy is simple_byte
  2304  060C  3A00               	xorlw	0	; case 0
  2305  060D  1903               	skipnz
  2306  060E  2F22               	goto	l3084
  2307  060F  3A64               	xorlw	100	; case 100
  2308  0610  1903               	skipnz
  2309  0611  2E16               	goto	l3010
  2310  0612  3A0D               	xorlw	13	; case 105
  2311  0613  1903               	skipnz
  2312  0614  2E16               	goto	l3010
  2313  0615  2D79               	goto	l3082
  2314  0616                     l3010:	
  2315                           
  2316                           ;doprnt.c: 1262: {
  2317                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2318  0616  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0617  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0618  085B               	movf	sprintf@ap^(0+128),w
  2321  0619  0084               	movwf	4
  2322  061A  1383               	bcf	3,7	;select IRP bank0
  2323  061B  0800               	movf	0,w
  2324  061C  00DD               	movwf	sprintf@_val^(0+128)
  2325  061D  0A84               	incf	4,f
  2326  061E  0800               	movf	0,w
  2327  061F  00DE               	movwf	(sprintf@_val+1)^(0+128)
  2328  0620  3002               	movlw	2
  2329  0621  00D8               	movwf	??_sprintf^(0+128)
  2330  0622  0858               	movf	??_sprintf^(0+128),w
  2331  0623  07DB               	addwf	sprintf@ap^(0+128),f
  2332                           
  2333                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2334  0624  1FDE               	btfss	(sprintf@_val+1)^(0+128),7
  2335  0625  2E2F               	goto	l3020
  2336                           
  2337                           ;doprnt.c: 1271: flag |= 0x03;
  2338  0626  3003               	movlw	3
  2339  0627  00D8               	movwf	??_sprintf^(0+128)
  2340  0628  0858               	movf	??_sprintf^(0+128),w
  2341  0629  04E1               	iorwf	sprintf@flag^(0+128),f
  2342                           
  2343                           ;doprnt.c: 1272: _val._val = -_val._val;
  2344  062A  09DD               	comf	sprintf@_val^(0+128),f
  2345  062B  09DE               	comf	(sprintf@_val+1)^(0+128),f
  2346  062C  0ADD               	incf	sprintf@_val^(0+128),f
  2347  062D  1903               	skipnz
  2348  062E  0ADE               	incf	(sprintf@_val+1)^(0+128),f
  2349  062F                     l3020:	
  2350                           
  2351                           ;doprnt.c: 1273: }
  2352                           ;doprnt.c: 1275: }
  2353                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2354  062F  01E5               	clrf	sprintf@c^(0+128)
  2355  0630  0AE5               	incf	sprintf@c^(0+128),f
  2356  0631  0865               	movf	sprintf@c^(0+128),w
  2357  0632  3A05               	xorlw	5
  2358  0633  1903               	btfsc	3,2
  2359  0634  2E56               	goto	l3032
  2360  0635                     l3024:	
  2361                           
  2362                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2363  0635  0865               	movf	sprintf@c^(0+128),w
  2364  0636  00D8               	movwf	??_sprintf^(0+128)
  2365  0637  0758               	addwf	??_sprintf^(0+128),w
  2366  0638  3E01               	addlw	low (_dpowers-__stringbase)
  2367  0639  0084               	movwf	4
  2368  063A  120A  158A  200A  120A  118A  	fcall	stringdir
  2369  063F  00D9               	movwf	(??_sprintf+1)^(0+128)
  2370  0640  120A  158A  200A  120A  118A  	fcall	stringdir
  2371  0645  00DA               	movwf	((??_sprintf+1)^(0+128)+1)
  2372  0646  085A               	movf	(??_sprintf+2)^(0+128),w
  2373  0647  025E               	subwf	(sprintf@_val+1)^(0+128),w
  2374  0648  1D03               	skipz
  2375  0649  2E4C               	goto	u3625
  2376  064A  0859               	movf	(??_sprintf+1)^(0+128),w
  2377  064B  025D               	subwf	sprintf@_val^(0+128),w
  2378  064C                     u3625:	
  2379  064C  1C03               	btfss	3,0
  2380  064D  2E56               	goto	l3032
  2381                           
  2382                           ;doprnt.c: 1316: break;
  2383  064E  3001               	movlw	1
  2384  064F  00D8               	movwf	??_sprintf^(0+128)
  2385  0650  0858               	movf	??_sprintf^(0+128),w
  2386  0651  07E5               	addwf	sprintf@c^(0+128),f
  2387  0652  0865               	movf	sprintf@c^(0+128),w
  2388  0653  3A05               	xorlw	5
  2389  0654  1D03               	skipz
  2390  0655  2E35               	goto	l3024
  2391  0656                     l3032:	
  2392                           
  2393                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2394  0656  0863               	movf	(sprintf@width+1)^(0+128),w
  2395  0657  0462               	iorwf	sprintf@width^(0+128),w
  2396  0658  1903               	skipnz
  2397  0659  2E64               	goto	l493
  2398  065A  0861               	movf	sprintf@flag^(0+128),w
  2399  065B  3903               	andlw	3
  2400  065C  1903               	btfsc	3,2
  2401  065D  2E64               	goto	l493
  2402                           
  2403                           ;doprnt.c: 1355: width--;
  2404  065E  30FF               	movlw	255
  2405  065F  07E2               	addwf	sprintf@width^(0+128),f
  2406  0660  1803               	skipnc
  2407  0661  0AE3               	incf	(sprintf@width+1)^(0+128),f
  2408  0662  30FF               	movlw	255
  2409  0663  07E3               	addwf	(sprintf@width+1)^(0+128),f
  2410  0664                     l493:	
  2411                           
  2412                           ;doprnt.c: 1390: if(width > c)
  2413  0664  0865               	movf	sprintf@c^(0+128),w
  2414  0665  00D8               	movwf	??_sprintf^(0+128)
  2415  0666  01D9               	clrf	(??_sprintf^(0+128)+1)
  2416  0667  1BD8               	btfsc	??_sprintf^(0+128),7
  2417  0668  03D9               	decf	(??_sprintf^(0+128)+1),f
  2418  0669  0859               	movf	(??_sprintf+1)^(0+128),w
  2419  066A  3A80               	xorlw	128
  2420  066B  00DA               	movwf	(??_sprintf+2)^(0+128)
  2421  066C  0863               	movf	(sprintf@width+1)^(0+128),w
  2422  066D  3A80               	xorlw	128
  2423  066E  025A               	subwf	(??_sprintf+2)^(0+128),w
  2424  066F  1D03               	skipz
  2425  0670  2E73               	goto	u3665
  2426  0671  0862               	movf	sprintf@width^(0+128),w
  2427  0672  0258               	subwf	??_sprintf^(0+128),w
  2428  0673                     u3665:	
  2429  0673  1803               	skipnc
  2430  0674  2E83               	goto	l3040
  2431                           
  2432                           ;doprnt.c: 1391: width -= c;
  2433  0675  1683               	bsf	3,5	;RP0=1, select bank1
  2434  0676  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0677  0865               	movf	sprintf@c^(0+128),w
  2436  0678  00D8               	movwf	??_sprintf^(0+128)
  2437  0679  01D9               	clrf	(??_sprintf^(0+128)+1)
  2438  067A  1BD8               	btfsc	??_sprintf^(0+128),7
  2439  067B  03D9               	decf	(??_sprintf^(0+128)+1),f
  2440  067C  0858               	movf	??_sprintf^(0+128),w
  2441  067D  02E2               	subwf	sprintf@width^(0+128),f
  2442  067E  0859               	movf	(??_sprintf+1)^(0+128),w
  2443  067F  1C03               	skipc
  2444  0680  03E3               	decf	(sprintf@width+1)^(0+128),f
  2445  0681  02E3               	subwf	(sprintf@width+1)^(0+128),f
  2446  0682  2E87               	goto	l3042
  2447  0683                     l3040:	
  2448                           
  2449                           ;doprnt.c: 1392: else
  2450                           ;doprnt.c: 1393: width = 0;
  2451  0683  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0684  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0685  01E2               	clrf	sprintf@width^(0+128)
  2454  0686  01E3               	clrf	(sprintf@width+1)^(0+128)
  2455  0687                     l3042:	
  2456                           
  2457                           ;doprnt.c: 1396: if(flag & 0x04) {
  2458  0687  1D61               	btfss	sprintf@flag^(0+128),2
  2459  0688  2EAE               	goto	l3058
  2460                           
  2461                           ;doprnt.c: 1401: if(flag & 0x03)
  2462  0689  0861               	movf	sprintf@flag^(0+128),w
  2463  068A  3903               	andlw	3
  2464  068B  1903               	btfsc	3,2
  2465  068C  2E98               	goto	l3050
  2466                           
  2467                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2468  068D  302D               	movlw	45
  2469  068E  00D8               	movwf	??_sprintf^(0+128)
  2470  068F  0864               	movf	sprintf@sp^(0+128),w
  2471  0690  0084               	movwf	4
  2472  0691  0858               	movf	??_sprintf^(0+128),w
  2473  0692  1783               	bsf	3,7	;select IRP bank2
  2474  0693  0080               	movwf	0
  2475  0694  3001               	movlw	1
  2476  0695  00D8               	movwf	??_sprintf^(0+128)
  2477  0696  0858               	movf	??_sprintf^(0+128),w
  2478  0697  07E4               	addwf	sprintf@sp^(0+128),f
  2479  0698                     l3050:	
  2480                           
  2481                           ;doprnt.c: 1424: if(width)
  2482  0698  0863               	movf	(sprintf@width+1)^(0+128),w
  2483  0699  0462               	iorwf	sprintf@width^(0+128),w
  2484  069A  1903               	skipnz
  2485  069B  2ED6               	goto	l3072
  2486                           
  2487                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2488                           
  2489                           ;doprnt.c: 1425: do
  2490  069C  3030               	movlw	48
  2491  069D  00D8               	movwf	??_sprintf^(0+128)
  2492  069E  0864               	movf	sprintf@sp^(0+128),w
  2493  069F  0084               	movwf	4
  2494  06A0  0858               	movf	??_sprintf^(0+128),w
  2495  06A1  1783               	bsf	3,7	;select IRP bank2
  2496  06A2  0080               	movwf	0
  2497  06A3  3001               	movlw	1
  2498  06A4  00D8               	movwf	??_sprintf^(0+128)
  2499  06A5  0858               	movf	??_sprintf^(0+128),w
  2500  06A6  07E4               	addwf	sprintf@sp^(0+128),f
  2501                           
  2502                           ;doprnt.c: 1427: while(--width);
  2503  06A7  30FF               	movlw	255
  2504  06A8  07E2               	addwf	sprintf@width^(0+128),f
  2505  06A9  1803               	skipnc
  2506  06AA  0AE3               	incf	(sprintf@width+1)^(0+128),f
  2507  06AB  30FF               	movlw	255
  2508  06AC  07E3               	addwf	(sprintf@width+1)^(0+128),f
  2509  06AD  2E98               	goto	l3050
  2510  06AE                     l3058:	
  2511                           ;doprnt.c: 1429: } else
  2512                           
  2513                           
  2514                           ;doprnt.c: 1431: {
  2515                           ;doprnt.c: 1433: if(width
  2516                           ;doprnt.c: 1437: )
  2517  06AE  0863               	movf	(sprintf@width+1)^(0+128),w
  2518  06AF  0462               	iorwf	sprintf@width^(0+128),w
  2519  06B0  1903               	skipnz
  2520  06B1  2EC7               	goto	l3066
  2521  06B2                     l3060:	
  2522                           ;doprnt.c: 1438: do
  2523                           
  2524                           
  2525                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2526  06B2  3020               	movlw	32
  2527  06B3  00D8               	movwf	??_sprintf^(0+128)
  2528  06B4  0864               	movf	sprintf@sp^(0+128),w
  2529  06B5  0084               	movwf	4
  2530  06B6  0858               	movf	??_sprintf^(0+128),w
  2531  06B7  1783               	bsf	3,7	;select IRP bank2
  2532  06B8  0080               	movwf	0
  2533  06B9  3001               	movlw	1
  2534  06BA  00D8               	movwf	??_sprintf^(0+128)
  2535  06BB  0858               	movf	??_sprintf^(0+128),w
  2536  06BC  07E4               	addwf	sprintf@sp^(0+128),f
  2537                           
  2538                           ;doprnt.c: 1440: while(--width);
  2539  06BD  30FF               	movlw	255
  2540  06BE  07E2               	addwf	sprintf@width^(0+128),f
  2541  06BF  1803               	skipnc
  2542  06C0  0AE3               	incf	(sprintf@width+1)^(0+128),f
  2543  06C1  30FF               	movlw	255
  2544  06C2  07E3               	addwf	(sprintf@width+1)^(0+128),f
  2545  06C3  0863               	movf	(sprintf@width+1)^(0+128),w
  2546  06C4  0462               	iorwf	sprintf@width^(0+128),w
  2547  06C5  1D03               	skipz
  2548  06C6  2EB2               	goto	l3060
  2549  06C7                     l3066:	
  2550                           
  2551                           ;doprnt.c: 1447: if(flag & 0x03)
  2552  06C7  0861               	movf	sprintf@flag^(0+128),w
  2553  06C8  3903               	andlw	3
  2554  06C9  1903               	btfsc	3,2
  2555  06CA  2ED6               	goto	l3072
  2556                           
  2557                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2558  06CB  302D               	movlw	45
  2559  06CC  00D8               	movwf	??_sprintf^(0+128)
  2560  06CD  0864               	movf	sprintf@sp^(0+128),w
  2561  06CE  0084               	movwf	4
  2562  06CF  0858               	movf	??_sprintf^(0+128),w
  2563  06D0  1783               	bsf	3,7	;select IRP bank2
  2564  06D1  0080               	movwf	0
  2565  06D2  3001               	movlw	1
  2566  06D3  00D8               	movwf	??_sprintf^(0+128)
  2567  06D4  0858               	movf	??_sprintf^(0+128),w
  2568  06D5  07E4               	addwf	sprintf@sp^(0+128),f
  2569  06D6                     l3072:	
  2570                           
  2571                           ;doprnt.c: 1478: }
  2572                           ;doprnt.c: 1481: prec = c;
  2573  06D6  0865               	movf	sprintf@c^(0+128),w
  2574  06D7  00D8               	movwf	??_sprintf^(0+128)
  2575  06D8  0858               	movf	??_sprintf^(0+128),w
  2576  06D9  00DC               	movwf	sprintf@prec^(0+128)
  2577  06DA                     l3080:	
  2578                           ;doprnt.c: 1483: while(prec--) {
  2579                           
  2580  06DA  30FF               	movlw	-1
  2581  06DB  00D8               	movwf	??_sprintf^(0+128)
  2582  06DC  0858               	movf	??_sprintf^(0+128),w
  2583  06DD  07DC               	addwf	sprintf@prec^(0+128),f
  2584  06DE  085C               	movf	sprintf@prec^(0+128),w
  2585  06DF  3AFF               	xorlw	-1
  2586  06E0  1903               	btfsc	3,2
  2587  06E1  2D79               	goto	l3082
  2588                           
  2589                           ;doprnt.c: 1487: {
  2590                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2591  06E2  300A               	movlw	10
  2592  06E3  00CF               	movwf	___lwmod@divisor^(0+128)
  2593  06E4  3000               	movlw	0
  2594  06E5  00D0               	movwf	(___lwmod@divisor^(0+128)+1)
  2595  06E6  085C               	movf	sprintf@prec^(0+128),w
  2596  06E7  00D8               	movwf	??_sprintf^(0+128)
  2597  06E8  0758               	addwf	??_sprintf^(0+128),w
  2598  06E9  3E01               	addlw	low (_dpowers-__stringbase)
  2599  06EA  0084               	movwf	4
  2600  06EB  120A  158A  200A  120A  118A  	fcall	stringdir
  2601  06F0  00C7               	movwf	___lwdiv@divisor^(0+128)
  2602  06F1  120A  158A  200A  120A  118A  	fcall	stringdir
  2603  06F6  00C8               	movwf	(___lwdiv@divisor+1)^(0+128)
  2604  06F7  085E               	movf	(sprintf@_val+1)^(0+128),w
  2605  06F8  01CA               	clrf	(___lwdiv@dividend+1)^(0+128)
  2606  06F9  07CA               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2607  06FA  085D               	movf	sprintf@_val^(0+128),w
  2608  06FB  01C9               	clrf	___lwdiv@dividend^(0+128)
  2609  06FC  07C9               	addwf	___lwdiv@dividend^(0+128),f
  2610  06FD  160A  118A  252C  120A  118A  	fcall	___lwdiv
  2611  0702  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0703  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0704  0848               	movf	(?___lwdiv+1)^(0+128),w
  2614  0705  01D2               	clrf	(___lwmod@dividend+1)^(0+128)
  2615  0706  07D2               	addwf	(___lwmod@dividend+1)^(0+128),f
  2616  0707  0847               	movf	?___lwdiv^(0+128),w
  2617  0708  01D1               	clrf	___lwmod@dividend^(0+128)
  2618  0709  07D1               	addwf	___lwmod@dividend^(0+128),f
  2619  070A  160A  118A  24B8  120A  118A  	fcall	___lwmod
  2620  070F  1683               	bsf	3,5	;RP0=1, select bank1
  2621  0710  1303               	bcf	3,6	;RP1=0, select bank1
  2622  0711  084F               	movf	?___lwmod^(0+128),w
  2623  0712  3E30               	addlw	48
  2624  0713  00D9               	movwf	(??_sprintf+1)^(0+128)
  2625  0714  0859               	movf	(??_sprintf+1)^(0+128),w
  2626  0715  00E5               	movwf	sprintf@c^(0+128)
  2627                           
  2628                           ;doprnt.c: 1532: }
  2629                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2630  0716  0865               	movf	sprintf@c^(0+128),w
  2631  0717  00D8               	movwf	??_sprintf^(0+128)
  2632  0718  0864               	movf	sprintf@sp^(0+128),w
  2633  0719  0084               	movwf	4
  2634  071A  0858               	movf	??_sprintf^(0+128),w
  2635  071B  1783               	bsf	3,7	;select IRP bank2
  2636  071C  0080               	movwf	0
  2637  071D  3001               	movlw	1
  2638  071E  00D8               	movwf	??_sprintf^(0+128)
  2639  071F  0858               	movf	??_sprintf^(0+128),w
  2640  0720  07E4               	addwf	sprintf@sp^(0+128),f
  2641  0721  2EDA               	goto	l3080
  2642  0722                     l3084:	
  2643                           ;doprnt.c: 1534: }
  2644                           ;doprnt.c: 1542: }
  2645                           ;doprnt.c: 1544: alldone:
  2646                           
  2647                           
  2648                           ;doprnt.c: 1547: *sp = 0;
  2649  0722  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0723  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0724  0864               	movf	sprintf@sp^(0+128),w
  2652  0725  0084               	movwf	4
  2653  0726  1783               	bsf	3,7	;select IRP bank2
  2654  0727  0180               	clrf	0
  2655  0728  0008               	return
  2656  0729                     __end_of_sprintf:	
  2657                           ;doprnt.c: 1549: return 0;
  2658                           ;	Return value of _sprintf is never used
  2659                           
  2660                           
  2661                           	psect	text2
  2662  129B                     __ptext2:	
  2663 ;; *************** function _isdigit *****************
  2664 ;; Defined at:
  2665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  c               1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  c               1    1[BANK1 ] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0       0       2       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       0       2       0       0
  2683 ;;Total ram usage:        2 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    5
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_sprintf
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _isdigit
  2695  129B                     _isdigit:	
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2699                           ;isdigit@c stored from wreg
  2700  129B  1683               	bsf	3,5	;RP0=1, select bank1
  2701  129C  1303               	bcf	3,6	;RP1=0, select bank1
  2702  129D  00C8               	movwf	isdigit@c^(0+128)
  2703  129E  01C7               	clrf	_isdigit$1448^(0+128)
  2704  129F  303A               	movlw	58
  2705  12A0  0248               	subwf	isdigit@c^(0+128),w
  2706  12A1  1803               	skipnc
  2707  12A2  2AA9               	goto	l2494
  2708  12A3  3030               	movlw	48
  2709  12A4  0248               	subwf	isdigit@c^(0+128),w
  2710  12A5  1C03               	skipc
  2711  12A6  2AA9               	goto	l2494
  2712  12A7  01C7               	clrf	_isdigit$1448^(0+128)
  2713  12A8  0AC7               	incf	_isdigit$1448^(0+128),f
  2714  12A9                     l2494:	
  2715  12A9  0C47               	rrf	_isdigit$1448^(0+128),w
  2716  12AA  0008               	return
  2717  12AB                     __end_of_isdigit:	
  2718                           
  2719                           	psect	text3
  2720  1408                     __ptext3:	
  2721 ;; *************** function ___wmul *****************
  2722 ;; Defined at:
  2723 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2726 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  product         2    4[BANK1 ] unsigned int 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2    0[BANK1 ] unsigned int 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       4       0       0
  2739 ;;      Locals:         0       0       2       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         0       0       6       0       0
  2742 ;;Total ram usage:        6 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_sprintf
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function ___wmul
  2754  1408                     ___wmul:	
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2758  1408  1683               	bsf	3,5	;RP0=1, select bank1
  2759  1409  1303               	bcf	3,6	;RP1=0, select bank1
  2760  140A  01CB               	clrf	___wmul@product^(0+128)
  2761  140B  01CC               	clrf	(___wmul@product+1)^(0+128)
  2762  140C                     l2500:	
  2763  140C  1C47               	btfss	___wmul@multiplier^(0+128),0
  2764  140D  2C14               	goto	l594
  2765  140E  0849               	movf	___wmul@multiplicand^(0+128),w
  2766  140F  07CB               	addwf	___wmul@product^(0+128),f
  2767  1410  1803               	skipnc
  2768  1411  0ACC               	incf	(___wmul@product+1)^(0+128),f
  2769  1412  084A               	movf	(___wmul@multiplicand+1)^(0+128),w
  2770  1413  07CC               	addwf	(___wmul@product+1)^(0+128),f
  2771  1414                     l594:	
  2772  1414  3001               	movlw	1
  2773  1415                     u2785:	
  2774  1415  1003               	clrc
  2775  1416  0DC9               	rlf	___wmul@multiplicand^(0+128),f
  2776  1417  0DCA               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2777  1418  3EFF               	addlw	-1
  2778  1419  1D03               	skipz
  2779  141A  2C15               	goto	u2785
  2780  141B  3001               	movlw	1
  2781  141C                     u2795:	
  2782  141C  1003               	clrc
  2783  141D  0CC8               	rrf	(___wmul@multiplier+1)^(0+128),f
  2784  141E  0CC7               	rrf	___wmul@multiplier^(0+128),f
  2785  141F  3EFF               	addlw	-1
  2786  1420  1D03               	skipz
  2787  1421  2C1C               	goto	u2795
  2788  1422  0848               	movf	(___wmul@multiplier+1)^(0+128),w
  2789  1423  0447               	iorwf	___wmul@multiplier^(0+128),w
  2790  1424  1D03               	skipz
  2791  1425  2C0C               	goto	l2500
  2792  1426  084C               	movf	(___wmul@product+1)^(0+128),w
  2793  1427  01C8               	clrf	(?___wmul+1)^(0+128)
  2794  1428  07C8               	addwf	(?___wmul+1)^(0+128),f
  2795  1429  084B               	movf	___wmul@product^(0+128),w
  2796  142A  01C7               	clrf	?___wmul^(0+128)
  2797  142B  07C7               	addwf	?___wmul^(0+128),f
  2798  142C  0008               	return
  2799  142D                     __end_of___wmul:	
  2800                           
  2801                           	psect	text4
  2802  14B8                     __ptext4:	
  2803 ;; *************** function ___lwmod *****************
  2804 ;; Defined at:
  2805 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  divisor         2    8[BANK1 ] unsigned int 
  2808 ;;  dividend        2   10[BANK1 ] unsigned int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  counter         1   13[BANK1 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2    8[BANK1 ] unsigned int 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       0       4       0       0
  2821 ;;      Locals:         0       0       1       0       0
  2822 ;;      Temps:          0       0       1       0       0
  2823 ;;      Totals:         0       0       6       0       0
  2824 ;;Total ram usage:        6 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    5
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_sprintf
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function ___lwmod
  2836  14B8                     ___lwmod:	
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2840  14B8  1683               	bsf	3,5	;RP0=1, select bank1
  2841  14B9  1303               	bcf	3,6	;RP1=0, select bank1
  2842  14BA  0850               	movf	(___lwmod@divisor+1)^(0+128),w
  2843  14BB  044F               	iorwf	___lwmod@divisor^(0+128),w
  2844  14BC  1903               	skipnz
  2845  14BD  2CE7               	goto	l2688
  2846  14BE  01D4               	clrf	___lwmod@counter^(0+128)
  2847  14BF  0AD4               	incf	___lwmod@counter^(0+128),f
  2848  14C0                     l2678:	
  2849  14C0  1BD0               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2850  14C1  2CCE               	goto	l2680
  2851  14C2  3001               	movlw	1
  2852  14C3                     u3235:	
  2853  14C3  1003               	clrc
  2854  14C4  0DCF               	rlf	___lwmod@divisor^(0+128),f
  2855  14C5  0DD0               	rlf	(___lwmod@divisor+1)^(0+128),f
  2856  14C6  3EFF               	addlw	-1
  2857  14C7  1D03               	skipz
  2858  14C8  2CC3               	goto	u3235
  2859  14C9  3001               	movlw	1
  2860  14CA  00D3               	movwf	??___lwmod^(0+128)
  2861  14CB  0853               	movf	??___lwmod^(0+128),w
  2862  14CC  07D4               	addwf	___lwmod@counter^(0+128),f
  2863  14CD  2CC0               	goto	l2678
  2864  14CE                     l2680:	
  2865  14CE  0850               	movf	(___lwmod@divisor+1)^(0+128),w
  2866  14CF  0252               	subwf	(___lwmod@dividend+1)^(0+128),w
  2867  14D0  1D03               	skipz
  2868  14D1  2CD4               	goto	u3255
  2869  14D2  084F               	movf	___lwmod@divisor^(0+128),w
  2870  14D3  0251               	subwf	___lwmod@dividend^(0+128),w
  2871  14D4                     u3255:	
  2872  14D4  1C03               	skipc
  2873  14D5  2CDC               	goto	l2684
  2874  14D6  084F               	movf	___lwmod@divisor^(0+128),w
  2875  14D7  02D1               	subwf	___lwmod@dividend^(0+128),f
  2876  14D8  0850               	movf	(___lwmod@divisor+1)^(0+128),w
  2877  14D9  1C03               	skipc
  2878  14DA  03D2               	decf	(___lwmod@dividend+1)^(0+128),f
  2879  14DB  02D2               	subwf	(___lwmod@dividend+1)^(0+128),f
  2880  14DC                     l2684:	
  2881  14DC  3001               	movlw	1
  2882  14DD                     u3265:	
  2883  14DD  1003               	clrc
  2884  14DE  0CD0               	rrf	(___lwmod@divisor+1)^(0+128),f
  2885  14DF  0CCF               	rrf	___lwmod@divisor^(0+128),f
  2886  14E0  3EFF               	addlw	-1
  2887  14E1  1D03               	skipz
  2888  14E2  2CDD               	goto	u3265
  2889  14E3  3001               	movlw	1
  2890  14E4  02D4               	subwf	___lwmod@counter^(0+128),f
  2891  14E5  1D03               	btfss	3,2
  2892  14E6  2CCE               	goto	l2680
  2893  14E7                     l2688:	
  2894  14E7  0852               	movf	(___lwmod@dividend+1)^(0+128),w
  2895  14E8  01D0               	clrf	(?___lwmod+1)^(0+128)
  2896  14E9  07D0               	addwf	(?___lwmod+1)^(0+128),f
  2897  14EA  0851               	movf	___lwmod@dividend^(0+128),w
  2898  14EB  01CF               	clrf	?___lwmod^(0+128)
  2899  14EC  07CF               	addwf	?___lwmod^(0+128),f
  2900  14ED  0008               	return
  2901  14EE                     __end_of___lwmod:	
  2902                           
  2903                           	psect	text5
  2904  152C                     __ptext5:	
  2905 ;; *************** function ___lwdiv *****************
  2906 ;; Defined at:
  2907 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  divisor         2    0[BANK1 ] unsigned int 
  2910 ;;  dividend        2    2[BANK1 ] unsigned int 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  quotient        2    5[BANK1 ] unsigned int 
  2913 ;;  counter         1    7[BANK1 ] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2    0[BANK1 ] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       4       0       0
  2924 ;;      Locals:         0       0       3       0       0
  2925 ;;      Temps:          0       0       1       0       0
  2926 ;;      Totals:         0       0       8       0       0
  2927 ;;Total ram usage:        8 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    5
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_sprintf
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___lwdiv
  2939  152C                     ___lwdiv:	
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2943  152C  1683               	bsf	3,5	;RP0=1, select bank1
  2944  152D  1303               	bcf	3,6	;RP1=0, select bank1
  2945  152E  01CC               	clrf	___lwdiv@quotient^(0+128)
  2946  152F  01CD               	clrf	(___lwdiv@quotient+1)^(0+128)
  2947  1530  0848               	movf	(___lwdiv@divisor+1)^(0+128),w
  2948  1531  0447               	iorwf	___lwdiv@divisor^(0+128),w
  2949  1532  1903               	skipnz
  2950  1533  2D65               	goto	l2666
  2951  1534  01CE               	clrf	___lwdiv@counter^(0+128)
  2952  1535  0ACE               	incf	___lwdiv@counter^(0+128),f
  2953  1536                     l2654:	
  2954  1536  1BC8               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2955  1537  2D44               	goto	l2656
  2956  1538  3001               	movlw	1
  2957  1539                     u3165:	
  2958  1539  1003               	clrc
  2959  153A  0DC7               	rlf	___lwdiv@divisor^(0+128),f
  2960  153B  0DC8               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2961  153C  3EFF               	addlw	-1
  2962  153D  1D03               	skipz
  2963  153E  2D39               	goto	u3165
  2964  153F  3001               	movlw	1
  2965  1540  00CB               	movwf	??___lwdiv^(0+128)
  2966  1541  084B               	movf	??___lwdiv^(0+128),w
  2967  1542  07CE               	addwf	___lwdiv@counter^(0+128),f
  2968  1543  2D36               	goto	l2654
  2969  1544                     l2656:	
  2970  1544  3001               	movlw	1
  2971  1545                     u3185:	
  2972  1545  1003               	clrc
  2973  1546  0DCC               	rlf	___lwdiv@quotient^(0+128),f
  2974  1547  0DCD               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2975  1548  3EFF               	addlw	-1
  2976  1549  1D03               	skipz
  2977  154A  2D45               	goto	u3185
  2978  154B  0848               	movf	(___lwdiv@divisor+1)^(0+128),w
  2979  154C  024A               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2980  154D  1D03               	skipz
  2981  154E  2D51               	goto	u3195
  2982  154F  0847               	movf	___lwdiv@divisor^(0+128),w
  2983  1550  0249               	subwf	___lwdiv@dividend^(0+128),w
  2984  1551                     u3195:	
  2985  1551  1C03               	skipc
  2986  1552  2D5A               	goto	l2662
  2987  1553  0847               	movf	___lwdiv@divisor^(0+128),w
  2988  1554  02C9               	subwf	___lwdiv@dividend^(0+128),f
  2989  1555  0848               	movf	(___lwdiv@divisor+1)^(0+128),w
  2990  1556  1C03               	skipc
  2991  1557  03CA               	decf	(___lwdiv@dividend+1)^(0+128),f
  2992  1558  02CA               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2993  1559  144C               	bsf	___lwdiv@quotient^(0+128),0
  2994  155A                     l2662:	
  2995  155A  3001               	movlw	1
  2996  155B                     u3205:	
  2997  155B  1003               	clrc
  2998  155C  0CC8               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2999  155D  0CC7               	rrf	___lwdiv@divisor^(0+128),f
  3000  155E  3EFF               	addlw	-1
  3001  155F  1D03               	skipz
  3002  1560  2D5B               	goto	u3205
  3003  1561  3001               	movlw	1
  3004  1562  02CE               	subwf	___lwdiv@counter^(0+128),f
  3005  1563  1D03               	btfss	3,2
  3006  1564  2D44               	goto	l2656
  3007  1565                     l2666:	
  3008  1565  084D               	movf	(___lwdiv@quotient+1)^(0+128),w
  3009  1566  01C8               	clrf	(?___lwdiv+1)^(0+128)
  3010  1567  07C8               	addwf	(?___lwdiv+1)^(0+128),f
  3011  1568  084C               	movf	___lwdiv@quotient^(0+128),w
  3012  1569  01C7               	clrf	?___lwdiv^(0+128)
  3013  156A  07C7               	addwf	?___lwdiv^(0+128),f
  3014  156B  0008               	return
  3015  156C                     __end_of___lwdiv:	
  3016                           
  3017                           	psect	text6
  3018  1487                     __ptext6:	
  3019 ;; *************** function _USART_WriteString *****************
  3020 ;; Defined at:
  3021 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3024 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3025 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3026 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3027 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       2       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       2       0       0
  3043 ;;Total ram usage:        2 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    6
  3046 ;; This function calls:
  3047 ;;		_USART_WriteChar
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _USART_WriteString
  3055  1487                     _USART_WriteString:	
  3056  1487                     l2852:	
  3057                           ;usart.c: 54: while(*str != '\0')
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3061                           
  3062  1487  1683               	bsf	3,5	;RP0=1, select bank1
  3063  1488  1303               	bcf	3,6	;RP1=0, select bank1
  3064  1489  0849               	movf	(USART_WriteString@str+1)^(0+128),w
  3065  148A  1283               	bcf	3,5	;RP0=0, select bank0
  3066  148B  1303               	bcf	3,6	;RP1=0, select bank0
  3067  148C  00FF               	movwf	127
  3068  148D  1683               	bsf	3,5	;RP0=1, select bank1
  3069  148E  1303               	bcf	3,6	;RP1=0, select bank1
  3070  148F  0848               	movf	USART_WriteString@str^(0+128),w
  3071  1490  0084               	movwf	4
  3072  1491  1283               	bcf	3,5	;RP0=0, select bank0
  3073  1492  1303               	bcf	3,6	;RP1=0, select bank0
  3074  1493  120A  158A  2000  160A  118A  	fcall	stringtab
  3075  1498  3800               	iorlw	0
  3076  1499  1903               	btfsc	3,2
  3077  149A  0008               	return
  3078                           
  3079                           ;usart.c: 55: {
  3080                           ;usart.c: 56: USART_WriteChar(*str);
  3081  149B  1683               	bsf	3,5	;RP0=1, select bank1
  3082  149C  1303               	bcf	3,6	;RP1=0, select bank1
  3083  149D  0849               	movf	(USART_WriteString@str+1)^(0+128),w
  3084  149E  1283               	bcf	3,5	;RP0=0, select bank0
  3085  149F  1303               	bcf	3,6	;RP1=0, select bank0
  3086  14A0  00FF               	movwf	127
  3087  14A1  1683               	bsf	3,5	;RP0=1, select bank1
  3088  14A2  1303               	bcf	3,6	;RP1=0, select bank1
  3089  14A3  0848               	movf	USART_WriteString@str^(0+128),w
  3090  14A4  0084               	movwf	4
  3091  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  3092  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  3093  14A7  120A  158A  2000  160A  118A  	fcall	stringtab
  3094  14AC  160A  118A  228E  160A  118A  	fcall	_USART_WriteChar
  3095                           
  3096                           ;usart.c: 57: str++;
  3097  14B1  3001               	movlw	1
  3098  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  3099  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  3100  14B4  07C8               	addwf	USART_WriteString@str^(0+128),f
  3101  14B5  1803               	skipnc
  3102  14B6  0AC9               	incf	(USART_WriteString@str+1)^(0+128),f
  3103  14B7  2C87               	goto	l2852
  3104  14B8                     __end_of_USART_WriteString:	
  3105                           
  3106                           	psect	text7
  3107  128E                     __ptext7:	
  3108 ;; *************** function _USART_WriteChar *****************
  3109 ;; Defined at:
  3110 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  byte            1    wreg     unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  byte            1    0[BANK1 ] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;		None               void
  3117 ;; Registers used:
  3118 ;;		wreg
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       0       0       0       0
  3125 ;;      Locals:         0       0       1       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         0       0       1       0       0
  3128 ;;Total ram usage:        1 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    5
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_USART_WriteString
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _USART_WriteChar
  3140  128E                     _USART_WriteChar:	
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _USART_WriteChar: [wreg]
  3144                           ;USART_WriteChar@byte stored from wreg
  3145  128E  1683               	bsf	3,5	;RP0=1, select bank1
  3146  128F  1303               	bcf	3,6	;RP1=0, select bank1
  3147  1290  00C7               	movwf	USART_WriteChar@byte^(0+128)
  3148  1291                     l223:	
  3149                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3150                           
  3151  1291  1283               	bcf	3,5	;RP0=0, select bank0
  3152  1292  1E0C               	btfss	12,4	;volatile
  3153  1293  2A91               	goto	l223
  3154                           
  3155                           ;usart.c: 47: TXREG = byte;
  3156  1294  1683               	bsf	3,5	;RP0=1, select bank1
  3157  1295  1303               	bcf	3,6	;RP1=0, select bank1
  3158  1296  0847               	movf	USART_WriteChar@byte^(0+128),w
  3159  1297  1283               	bcf	3,5	;RP0=0, select bank0
  3160  1298  1303               	bcf	3,6	;RP1=0, select bank0
  3161  1299  0099               	movwf	25	;volatile
  3162  129A  0008               	return
  3163  129B                     __end_of_USART_WriteChar:	
  3164                           
  3165                           	psect	text8
  3166  156C                     __ptext8:	
  3167 ;; *************** function _USART_Init *****************
  3168 ;; Defined at:
  3169 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  BaudRate        4   15[BANK1 ] long 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       4       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          0       0       4       0       0
  3186 ;;      Totals:         0       0       8       0       0
  3187 ;;Total ram usage:        8 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    6
  3190 ;; This function calls:
  3191 ;;		___aldiv
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _USART_Init
  3199  156C                     _USART_Init:	
  3200                           
  3201                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3202                           
  3203                           ;incstack = 0
  3204                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3205  156C  1683               	bsf	3,5	;RP0=1, select bank1
  3206  156D  1303               	bcf	3,6	;RP1=0, select bank1
  3207  156E  0856               	movf	USART_Init@BaudRate^(0+128),w
  3208  156F  00DA               	movwf	??_USART_Init^(0+128)
  3209  1570  0857               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3210  1571  00DB               	movwf	(??_USART_Init^(0+128)+1)
  3211  1572  0858               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3212  1573  00DC               	movwf	(??_USART_Init^(0+128)+2)
  3213  1574  0859               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3214  1575  00DD               	movwf	(??_USART_Init^(0+128)+3)
  3215  1576  3004               	movlw	4
  3216  1577                     u3535:	
  3217  1577  1003               	clrc
  3218  1578  0DDA               	rlf	??_USART_Init^(0+128),f
  3219  1579  0DDB               	rlf	(??_USART_Init^(0+128)+1),f
  3220  157A  0DDC               	rlf	(??_USART_Init^(0+128)+2),f
  3221  157B  0DDD               	rlf	(??_USART_Init^(0+128)+3),f
  3222  157C  3EFF               	addlw	-1
  3223  157D  1D03               	skipz
  3224  157E  2D77               	goto	u3535
  3225  157F  085D               	movf	(??_USART_Init+3)^(0+128),w
  3226  1580  00CA               	movwf	(___aldiv@divisor+3)^(0+128)
  3227  1581  085C               	movf	(??_USART_Init+2)^(0+128),w
  3228  1582  00C9               	movwf	(___aldiv@divisor+2)^(0+128)
  3229  1583  085B               	movf	(??_USART_Init+1)^(0+128),w
  3230  1584  00C8               	movwf	(___aldiv@divisor+1)^(0+128)
  3231  1585  085A               	movf	??_USART_Init^(0+128),w
  3232  1586  00C7               	movwf	___aldiv@divisor^(0+128)
  3233  1587  3001               	movlw	1
  3234  1588  00CE               	movwf	(___aldiv@dividend+3)^(0+128)
  3235  1589  3019               	movlw	25
  3236  158A  00CD               	movwf	(___aldiv@dividend+2)^(0+128)
  3237  158B  3040               	movlw	64
  3238  158C  00CC               	movwf	(___aldiv@dividend+1)^(0+128)
  3239  158D  3000               	movlw	0
  3240  158E  00CB               	movwf	___aldiv@dividend^(0+128)
  3241  158F  160A  118A  2771   	fcall	___aldiv
  3242  1592  1683               	bsf	3,5	;RP0=1, select bank1
  3243  1593  1303               	bcf	3,6	;RP1=0, select bank1
  3244  1594  0847               	movf	?___aldiv^(0+128),w
  3245  1595  3EFF               	addlw	255
  3246  1596  0099               	movwf	25	;volatile
  3247                           
  3248                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3249  1597  1398               	bcf	24,7	;volatile
  3250                           
  3251                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3252  1598  1318               	bcf	24,6	;volatile
  3253                           
  3254                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3255  1599  1698               	bsf	24,5	;volatile
  3256                           
  3257                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3258  159A  1218               	bcf	24,4	;volatile
  3259                           
  3260                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3261  159B  1518               	bsf	24,2	;volatile
  3262                           
  3263                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3264  159C  1498               	bsf	24,1	;volatile
  3265                           
  3266                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3267  159D  1018               	bcf	24,0	;volatile
  3268                           
  3269                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3270  159E  1283               	bcf	3,5	;RP0=0, select bank0
  3271  159F  1303               	bcf	3,6	;RP1=0, select bank0
  3272  15A0  1798               	bsf	24,7	;volatile
  3273                           
  3274                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3275  15A1  1318               	bcf	24,6	;volatile
  3276                           
  3277                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3278  15A2  1298               	bcf	24,5	;volatile
  3279                           
  3280                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3281  15A3  1618               	bsf	24,4	;volatile
  3282                           
  3283                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3284  15A4  1198               	bcf	24,3	;volatile
  3285                           
  3286                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3287  15A5  1118               	bcf	24,2	;volatile
  3288                           
  3289                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3290  15A6  1098               	bcf	24,1	;volatile
  3291                           
  3292                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3293  15A7  1018               	bcf	24,0	;volatile
  3294                           
  3295                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3296  15A8  1683               	bsf	3,5	;RP0=1, select bank1
  3297  15A9  1303               	bcf	3,6	;RP1=0, select bank1
  3298  15AA  120C               	bcf	12,4	;volatile
  3299                           
  3300                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3301  15AB  1283               	bcf	3,5	;RP0=0, select bank0
  3302  15AC  1303               	bcf	3,6	;RP1=0, select bank0
  3303  15AD  120C               	bcf	12,4	;volatile
  3304                           
  3305                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3306  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  3307  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  3308  15B0  168C               	bsf	12,5	;volatile
  3309                           
  3310                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3311  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  3312  15B2  1303               	bcf	3,6	;RP1=0, select bank0
  3313  15B3  128C               	bcf	12,5	;volatile
  3314  15B4  0008               	return
  3315  15B5                     __end_of_USART_Init:	
  3316                           
  3317                           	psect	text9
  3318  1771                     __ptext9:	
  3319 ;; *************** function ___aldiv *****************
  3320 ;; Defined at:
  3321 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  divisor         4    0[BANK1 ] long 
  3324 ;;  dividend        4    4[BANK1 ] long 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        4   11[BANK1 ] long 
  3327 ;;  sign            1   10[BANK1 ] unsigned char 
  3328 ;;  counter         1    9[BANK1 ] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  4    0[BANK1 ] long 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       8       0       0
  3339 ;;      Locals:         0       0       6       0       0
  3340 ;;      Temps:          0       0       1       0       0
  3341 ;;      Totals:         0       0      15       0       0
  3342 ;;Total ram usage:       15 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    5
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_USART_Init
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function ___aldiv
  3354  1771                     ___aldiv:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3358  1771  1683               	bsf	3,5	;RP0=1, select bank1
  3359  1772  1303               	bcf	3,6	;RP1=0, select bank1
  3360  1773  01D1               	clrf	___aldiv@sign^(0+128)
  3361  1774  1FCA               	btfss	(___aldiv@divisor+3)^(0+128),7
  3362  1775  2F83               	goto	l649
  3363  1776  09C7               	comf	___aldiv@divisor^(0+128),f
  3364  1777  09C8               	comf	(___aldiv@divisor+1)^(0+128),f
  3365  1778  09C9               	comf	(___aldiv@divisor+2)^(0+128),f
  3366  1779  09CA               	comf	(___aldiv@divisor+3)^(0+128),f
  3367  177A  0AC7               	incf	___aldiv@divisor^(0+128),f
  3368  177B  1903               	skipnz
  3369  177C  0AC8               	incf	(___aldiv@divisor+1)^(0+128),f
  3370  177D  1903               	skipnz
  3371  177E  0AC9               	incf	(___aldiv@divisor+2)^(0+128),f
  3372  177F  1903               	skipnz
  3373  1780  0ACA               	incf	(___aldiv@divisor+3)^(0+128),f
  3374  1781  01D1               	clrf	___aldiv@sign^(0+128)
  3375  1782  0AD1               	incf	___aldiv@sign^(0+128),f
  3376  1783                     l649:	
  3377  1783  1FCE               	btfss	(___aldiv@dividend+3)^(0+128),7
  3378  1784  2F94               	goto	l2520
  3379  1785  09CB               	comf	___aldiv@dividend^(0+128),f
  3380  1786  09CC               	comf	(___aldiv@dividend+1)^(0+128),f
  3381  1787  09CD               	comf	(___aldiv@dividend+2)^(0+128),f
  3382  1788  09CE               	comf	(___aldiv@dividend+3)^(0+128),f
  3383  1789  0ACB               	incf	___aldiv@dividend^(0+128),f
  3384  178A  1903               	skipnz
  3385  178B  0ACC               	incf	(___aldiv@dividend+1)^(0+128),f
  3386  178C  1903               	skipnz
  3387  178D  0ACD               	incf	(___aldiv@dividend+2)^(0+128),f
  3388  178E  1903               	skipnz
  3389  178F  0ACE               	incf	(___aldiv@dividend+3)^(0+128),f
  3390  1790  3001               	movlw	1
  3391  1791  00CF               	movwf	??___aldiv^(0+128)
  3392  1792  084F               	movf	??___aldiv^(0+128),w
  3393  1793  06D1               	xorwf	___aldiv@sign^(0+128),f
  3394  1794                     l2520:	
  3395  1794  3000               	movlw	0
  3396  1795  00D5               	movwf	(___aldiv@quotient+3)^(0+128)
  3397  1796  3000               	movlw	0
  3398  1797  00D4               	movwf	(___aldiv@quotient+2)^(0+128)
  3399  1798  3000               	movlw	0
  3400  1799  00D3               	movwf	(___aldiv@quotient+1)^(0+128)
  3401  179A  3000               	movlw	0
  3402  179B  00D2               	movwf	___aldiv@quotient^(0+128)
  3403  179C  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  3404  179D  0449               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3405  179E  0448               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3406  179F  0447               	iorwf	___aldiv@divisor^(0+128),w
  3407  17A0  1903               	skipnz
  3408  17A1  2FE9               	goto	l2542
  3409  17A2  01D0               	clrf	___aldiv@counter^(0+128)
  3410  17A3  0AD0               	incf	___aldiv@counter^(0+128),f
  3411  17A4                     l2528:	
  3412  17A4  1BCA               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3413  17A5  2FB4               	goto	l2530
  3414  17A6  3001               	movlw	1
  3415  17A7  00CF               	movwf	??___aldiv^(0+128)
  3416  17A8                     u2845:	
  3417  17A8  1003               	clrc
  3418  17A9  0DC7               	rlf	___aldiv@divisor^(0+128),f
  3419  17AA  0DC8               	rlf	(___aldiv@divisor+1)^(0+128),f
  3420  17AB  0DC9               	rlf	(___aldiv@divisor+2)^(0+128),f
  3421  17AC  0DCA               	rlf	(___aldiv@divisor+3)^(0+128),f
  3422  17AD  0BCF               	decfsz	??___aldiv^(0+128),f
  3423  17AE  2FA8               	goto	u2845
  3424  17AF  3001               	movlw	1
  3425  17B0  00CF               	movwf	??___aldiv^(0+128)
  3426  17B1  084F               	movf	??___aldiv^(0+128),w
  3427  17B2  07D0               	addwf	___aldiv@counter^(0+128),f
  3428  17B3  2FA4               	goto	l2528
  3429  17B4                     l2530:	
  3430  17B4  3001               	movlw	1
  3431  17B5  00CF               	movwf	??___aldiv^(0+128)
  3432  17B6                     u2865:	
  3433  17B6  1003               	clrc
  3434  17B7  0DD2               	rlf	___aldiv@quotient^(0+128),f
  3435  17B8  0DD3               	rlf	(___aldiv@quotient+1)^(0+128),f
  3436  17B9  0DD4               	rlf	(___aldiv@quotient+2)^(0+128),f
  3437  17BA  0DD5               	rlf	(___aldiv@quotient+3)^(0+128),f
  3438  17BB  0BCF               	decfsz	??___aldiv^(0+128),f
  3439  17BC  2FB6               	goto	u2865
  3440  17BD  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  3441  17BE  024E               	subwf	(___aldiv@dividend+3)^(0+128),w
  3442  17BF  1D03               	skipz
  3443  17C0  2FCB               	goto	u2875
  3444  17C1  0849               	movf	(___aldiv@divisor+2)^(0+128),w
  3445  17C2  024D               	subwf	(___aldiv@dividend+2)^(0+128),w
  3446  17C3  1D03               	skipz
  3447  17C4  2FCB               	goto	u2875
  3448  17C5  0848               	movf	(___aldiv@divisor+1)^(0+128),w
  3449  17C6  024C               	subwf	(___aldiv@dividend+1)^(0+128),w
  3450  17C7  1D03               	skipz
  3451  17C8  2FCB               	goto	u2875
  3452  17C9  0847               	movf	___aldiv@divisor^(0+128),w
  3453  17CA  024B               	subwf	___aldiv@dividend^(0+128),w
  3454  17CB                     u2875:	
  3455  17CB  1C03               	skipc
  3456  17CC  2FDC               	goto	l2538
  3457  17CD  0847               	movf	___aldiv@divisor^(0+128),w
  3458  17CE  02CB               	subwf	___aldiv@dividend^(0+128),f
  3459  17CF  0848               	movf	(___aldiv@divisor+1)^(0+128),w
  3460  17D0  1C03               	skipc
  3461  17D1  0F48               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3462  17D2  02CC               	subwf	(___aldiv@dividend+1)^(0+128),f
  3463  17D3  0849               	movf	(___aldiv@divisor+2)^(0+128),w
  3464  17D4  1C03               	skipc
  3465  17D5  0F49               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3466  17D6  02CD               	subwf	(___aldiv@dividend+2)^(0+128),f
  3467  17D7  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  3468  17D8  1C03               	skipc
  3469  17D9  0F4A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3470  17DA  02CE               	subwf	(___aldiv@dividend+3)^(0+128),f
  3471  17DB  1452               	bsf	___aldiv@quotient^(0+128),0
  3472  17DC                     l2538:	
  3473  17DC  3001               	movlw	1
  3474  17DD                     u2885:	
  3475  17DD  1003               	clrc
  3476  17DE  0CCA               	rrf	(___aldiv@divisor+3)^(0+128),f
  3477  17DF  0CC9               	rrf	(___aldiv@divisor+2)^(0+128),f
  3478  17E0  0CC8               	rrf	(___aldiv@divisor+1)^(0+128),f
  3479  17E1  0CC7               	rrf	___aldiv@divisor^(0+128),f
  3480  17E2  3EFF               	addlw	-1
  3481  17E3  1D03               	skipz
  3482  17E4  2FDD               	goto	u2885
  3483  17E5  3001               	movlw	1
  3484  17E6  02D0               	subwf	___aldiv@counter^(0+128),f
  3485  17E7  1D03               	btfss	3,2
  3486  17E8  2FB4               	goto	l2530
  3487  17E9                     l2542:	
  3488  17E9  0851               	movf	___aldiv@sign^(0+128),w
  3489  17EA  1903               	btfsc	3,2
  3490  17EB  2FF7               	goto	l2546
  3491  17EC  09D2               	comf	___aldiv@quotient^(0+128),f
  3492  17ED  09D3               	comf	(___aldiv@quotient+1)^(0+128),f
  3493  17EE  09D4               	comf	(___aldiv@quotient+2)^(0+128),f
  3494  17EF  09D5               	comf	(___aldiv@quotient+3)^(0+128),f
  3495  17F0  0AD2               	incf	___aldiv@quotient^(0+128),f
  3496  17F1  1903               	skipnz
  3497  17F2  0AD3               	incf	(___aldiv@quotient+1)^(0+128),f
  3498  17F3  1903               	skipnz
  3499  17F4  0AD4               	incf	(___aldiv@quotient+2)^(0+128),f
  3500  17F5  1903               	skipnz
  3501  17F6  0AD5               	incf	(___aldiv@quotient+3)^(0+128),f
  3502  17F7                     l2546:	
  3503  17F7  0855               	movf	(___aldiv@quotient+3)^(0+128),w
  3504  17F8  00CA               	movwf	(?___aldiv+3)^(0+128)
  3505  17F9  0854               	movf	(___aldiv@quotient+2)^(0+128),w
  3506  17FA  00C9               	movwf	(?___aldiv+2)^(0+128)
  3507  17FB  0853               	movf	(___aldiv@quotient+1)^(0+128),w
  3508  17FC  00C8               	movwf	(?___aldiv+1)^(0+128)
  3509  17FD  0852               	movf	___aldiv@quotient^(0+128),w
  3510  17FE  00C7               	movwf	?___aldiv^(0+128)
  3511  17FF  0008               	return
  3512  1800                     __end_of___aldiv:	
  3513                           
  3514                           	psect	text10
  3515  1273                     __ptext10:	
  3516 ;; *************** function _TIMER0_Set *****************
  3517 ;; Defined at:
  3518 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  contagens       1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  contagens       1    0[BANK1 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;		None               void
  3525 ;; Registers used:
  3526 ;;		wreg
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       1       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       1       0       0
  3536 ;;Total ram usage:        1 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    5
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _TIMER0_Set
  3548  1273                     _TIMER0_Set:	
  3549                           
  3550                           ;incstack = 0
  3551                           ; Regs used in _TIMER0_Set: [wreg]
  3552                           ;TIMER0_Set@contagens stored from wreg
  3553  1273  1683               	bsf	3,5	;RP0=1, select bank1
  3554  1274  1303               	bcf	3,6	;RP1=0, select bank1
  3555  1275  00C7               	movwf	TIMER0_Set@contagens^(0+128)
  3556                           
  3557                           ;timers.c: 22: TMR0 = contagens;
  3558  1276  0847               	movf	TIMER0_Set@contagens^(0+128),w
  3559  1277  1283               	bcf	3,5	;RP0=0, select bank0
  3560  1278  1303               	bcf	3,6	;RP1=0, select bank0
  3561  1279  0081               	movwf	1	;volatile
  3562  127A  0008               	return
  3563  127B                     __end_of_TIMER0_Set:	
  3564                           
  3565                           	psect	text11
  3566  1283                     __ptext11:	
  3567 ;; *************** function _TIMER0_Init *****************
  3568 ;; Defined at:
  3569 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;		None               void
  3576 ;; Registers used:
  3577 ;;		None
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0
  3586 ;;      Totals:         0       0       0       0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    5
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _TIMER0_Init
  3599  1283                     _TIMER0_Init:	
  3600                           
  3601                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _TIMER0_Init: []
  3605  1283  1683               	bsf	3,5	;RP0=1, select bank1
  3606  1284  1303               	bcf	3,6	;RP1=0, select bank1
  3607  1285  1281               	bcf	1,5	;volatile
  3608                           
  3609                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3610  1286  1201               	bcf	1,4	;volatile
  3611                           
  3612                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3613  1287  1181               	bcf	1,3	;volatile
  3614                           
  3615                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3616  1288  1501               	bsf	1,2	;volatile
  3617                           
  3618                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3619  1289  1481               	bsf	1,1	;volatile
  3620                           
  3621                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3622  128A  1401               	bsf	1,0	;volatile
  3623                           
  3624                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3625  128B  110B               	bcf	11,2	;volatile
  3626                           
  3627                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3628  128C  168B               	bsf	11,5	;volatile
  3629  128D  0008               	return
  3630  128E                     __end_of_TIMER0_Init:	
  3631                           
  3632                           	psect	text12
  3633  13E4                     __ptext12:	
  3634 ;; *************** function _PWM_Init *****************
  3635 ;; Defined at:
  3636 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;		None               void
  3643 ;; Registers used:
  3644 ;;		wreg
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3650 ;;      Params:         0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    5
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _PWM_Init
  3666  13E4                     _PWM_Init:	
  3667                           
  3668                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _PWM_Init: [wreg]
  3672  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  3673  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  3674  13E6  1492               	bsf	18,1	;volatile
  3675                           
  3676                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3677  13E7  1012               	bcf	18,0	;volatile
  3678                           
  3679                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3680  13E8  1312               	bcf	18,6	;volatile
  3681                           
  3682                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3683  13E9  1292               	bcf	18,5	;volatile
  3684                           
  3685                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3686  13EA  1212               	bcf	18,4	;volatile
  3687                           
  3688                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3689  13EB  1192               	bcf	18,3	;volatile
  3690                           
  3691                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3692  13EC  1512               	bsf	18,2	;volatile
  3693                           
  3694                           ;pwm.c: 27: PR2 = 255;
  3695  13ED  30FF               	movlw	255
  3696  13EE  1683               	bsf	3,5	;RP0=1, select bank1
  3697  13EF  1303               	bcf	3,6	;RP1=0, select bank1
  3698  13F0  0092               	movwf	18	;volatile
  3699                           
  3700                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3701  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  3702  13F2  1303               	bcf	3,6	;RP1=0, select bank0
  3703  13F3  1597               	bsf	23,3	;volatile
  3704                           
  3705                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3706  13F4  1517               	bsf	23,2	;volatile
  3707                           
  3708                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3709  13F5  1497               	bsf	23,1	;volatile
  3710                           
  3711                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3712  13F6  1417               	bsf	23,0	;volatile
  3713                           
  3714                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3715  13F7  1683               	bsf	3,5	;RP0=1, select bank1
  3716  13F8  1303               	bcf	3,6	;RP1=0, select bank1
  3717  13F9  150C               	bsf	12,2	;volatile
  3718                           
  3719                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3720  13FA  1283               	bcf	3,5	;RP0=0, select bank0
  3721  13FB  1303               	bcf	3,6	;RP1=0, select bank0
  3722  13FC  110C               	bcf	12,2	;volatile
  3723                           
  3724                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3725  13FD  159D               	bsf	29,3	;volatile
  3726                           
  3727                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3728  13FE  151D               	bsf	29,2	;volatile
  3729                           
  3730                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3731  13FF  149D               	bsf	29,1	;volatile
  3732                           
  3733                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3734  1400  141D               	bsf	29,0	;volatile
  3735                           
  3736                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3737  1401  1683               	bsf	3,5	;RP0=1, select bank1
  3738  1402  1303               	bcf	3,6	;RP1=0, select bank1
  3739  1403  140D               	bsf	13,0	;volatile
  3740                           
  3741                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3742  1404  1283               	bcf	3,5	;RP0=0, select bank0
  3743  1405  1303               	bcf	3,6	;RP1=0, select bank0
  3744  1406  100D               	bcf	13,0	;volatile
  3745  1407  0008               	return
  3746  1408                     __end_of_PWM_Init:	
  3747                           
  3748                           	psect	text13
  3749  137D                     __ptext13:	
  3750 ;; *************** function _PWM_DutyCycle2 *****************
  3751 ;; Defined at:
  3752 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  valor           2    0[BANK1 ] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;		None               void
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         0       0       2       0       0
  3767 ;;      Locals:         0       0       0       0       0
  3768 ;;      Temps:          0       0       2       0       0
  3769 ;;      Totals:         0       0       4       0       0
  3770 ;;Total ram usage:        4 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    5
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _PWM_DutyCycle2
  3782  137D                     _PWM_DutyCycle2:	
  3783                           
  3784                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3788  137D  1683               	bsf	3,5	;RP0=1, select bank1
  3789  137E  1303               	bcf	3,6	;RP1=0, select bank1
  3790  137F  0848               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3791  1380  00CA               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3792  1381  0847               	movf	PWM_DutyCycle2@valor^(0+128),w
  3793  1382  00C9               	movwf	??_PWM_DutyCycle2^(0+128)
  3794  1383  0D4A               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3795  1384  0CCA               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3796  1385  0CC9               	rrf	??_PWM_DutyCycle2^(0+128),f
  3797  1386  0D4A               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3798  1387  0CCA               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3799  1388  0CC9               	rrf	??_PWM_DutyCycle2^(0+128),f
  3800  1389  0849               	movf	??_PWM_DutyCycle2^(0+128),w
  3801  138A  1283               	bcf	3,5	;RP0=0, select bank0
  3802  138B  1303               	bcf	3,6	;RP1=0, select bank0
  3803  138C  009B               	movwf	27	;volatile
  3804                           
  3805                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3806  138D  1683               	bsf	3,5	;RP0=1, select bank1
  3807  138E  1303               	bcf	3,6	;RP1=0, select bank1
  3808  138F  0847               	movf	PWM_DutyCycle2@valor^(0+128),w
  3809  1390  00C9               	movwf	??_PWM_DutyCycle2^(0+128)
  3810  1391  3003               	movlw	3
  3811  1392                     u3505:	
  3812  1392  1003               	clrc
  3813  1393  0DC9               	rlf	??_PWM_DutyCycle2^(0+128),f
  3814  1394  3EFF               	addlw	-1
  3815  1395  1D03               	skipz
  3816  1396  2B92               	goto	u3505
  3817  1397  1003               	clrc
  3818  1398  0D49               	rlf	??_PWM_DutyCycle2^(0+128),w
  3819  1399  380C               	iorlw	12
  3820  139A  1283               	bcf	3,5	;RP0=0, select bank0
  3821  139B  1303               	bcf	3,6	;RP1=0, select bank0
  3822  139C  009D               	movwf	29	;volatile
  3823  139D  0008               	return
  3824  139E                     __end_of_PWM_DutyCycle2:	
  3825                           
  3826                           	psect	text14
  3827  135C                     __ptext14:	
  3828 ;; *************** function _PWM_DutyCycle1 *****************
  3829 ;; Defined at:
  3830 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  valor           2    0[BANK1 ] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       2       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       2       0       0
  3847 ;;      Totals:         0       0       4       0       0
  3848 ;;Total ram usage:        4 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    5
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _PWM_DutyCycle1
  3860  135C                     _PWM_DutyCycle1:	
  3861                           
  3862                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3866  135C  1683               	bsf	3,5	;RP0=1, select bank1
  3867  135D  1303               	bcf	3,6	;RP1=0, select bank1
  3868  135E  0848               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3869  135F  00CA               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3870  1360  0847               	movf	PWM_DutyCycle1@valor^(0+128),w
  3871  1361  00C9               	movwf	??_PWM_DutyCycle1^(0+128)
  3872  1362  0D4A               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3873  1363  0CCA               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3874  1364  0CC9               	rrf	??_PWM_DutyCycle1^(0+128),f
  3875  1365  0D4A               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3876  1366  0CCA               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3877  1367  0CC9               	rrf	??_PWM_DutyCycle1^(0+128),f
  3878  1368  0849               	movf	??_PWM_DutyCycle1^(0+128),w
  3879  1369  1283               	bcf	3,5	;RP0=0, select bank0
  3880  136A  1303               	bcf	3,6	;RP1=0, select bank0
  3881  136B  0095               	movwf	21	;volatile
  3882                           
  3883                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3884  136C  1683               	bsf	3,5	;RP0=1, select bank1
  3885  136D  1303               	bcf	3,6	;RP1=0, select bank1
  3886  136E  0847               	movf	PWM_DutyCycle1@valor^(0+128),w
  3887  136F  00C9               	movwf	??_PWM_DutyCycle1^(0+128)
  3888  1370  3003               	movlw	3
  3889  1371                     u3565:	
  3890  1371  1003               	clrc
  3891  1372  0DC9               	rlf	??_PWM_DutyCycle1^(0+128),f
  3892  1373  3EFF               	addlw	-1
  3893  1374  1D03               	skipz
  3894  1375  2B71               	goto	u3565
  3895  1376  1003               	clrc
  3896  1377  0D49               	rlf	??_PWM_DutyCycle1^(0+128),w
  3897  1378  380C               	iorlw	12
  3898  1379  1283               	bcf	3,5	;RP0=0, select bank0
  3899  137A  1303               	bcf	3,6	;RP1=0, select bank0
  3900  137B  0097               	movwf	23	;volatile
  3901  137C  0008               	return
  3902  137D                     __end_of_PWM_DutyCycle1:	
  3903                           
  3904                           	psect	text15
  3905  1456                     __ptext15:	
  3906 ;; *************** function _LCD_WriteString *****************
  3907 ;; Defined at:
  3908 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3911 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3912 ;;		 -> STR_13(17), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       2       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       0       2       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    6
  3931 ;; This function calls:
  3932 ;;		_LCD_WriteData
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _LCD_WriteString
  3940  1456                     _LCD_WriteString:	
  3941  1456                     l2972:	
  3942                           ;lcd.c: 63: while(*Str != '\0')
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3946                           
  3947  1456  1683               	bsf	3,5	;RP0=1, select bank1
  3948  1457  1303               	bcf	3,6	;RP1=0, select bank1
  3949  1458  084A               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3950  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3951  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3952  145B  00FF               	movwf	127
  3953  145C  1683               	bsf	3,5	;RP0=1, select bank1
  3954  145D  1303               	bcf	3,6	;RP1=0, select bank1
  3955  145E  0849               	movf	LCD_WriteString@Str^(0+128),w
  3956  145F  0084               	movwf	4
  3957  1460  1283               	bcf	3,5	;RP0=0, select bank0
  3958  1461  1303               	bcf	3,6	;RP1=0, select bank0
  3959  1462  120A  158A  2000  160A  118A  	fcall	stringtab
  3960  1467  3800               	iorlw	0
  3961  1468  1903               	btfsc	3,2
  3962  1469  0008               	return
  3963                           
  3964                           ;lcd.c: 64: {
  3965                           ;lcd.c: 65: LCD_WriteData(*Str);
  3966  146A  1683               	bsf	3,5	;RP0=1, select bank1
  3967  146B  1303               	bcf	3,6	;RP1=0, select bank1
  3968  146C  084A               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3969  146D  1283               	bcf	3,5	;RP0=0, select bank0
  3970  146E  1303               	bcf	3,6	;RP1=0, select bank0
  3971  146F  00FF               	movwf	127
  3972  1470  1683               	bsf	3,5	;RP0=1, select bank1
  3973  1471  1303               	bcf	3,6	;RP1=0, select bank1
  3974  1472  0849               	movf	LCD_WriteString@Str^(0+128),w
  3975  1473  0084               	movwf	4
  3976  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3977  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3978  1476  120A  158A  2000  160A  118A  	fcall	stringtab
  3979  147B  120A  158A  20DB  160A  118A  	fcall	_LCD_WriteData
  3980                           
  3981                           ;lcd.c: 66: Str++;
  3982  1480  3001               	movlw	1
  3983  1481  1683               	bsf	3,5	;RP0=1, select bank1
  3984  1482  1303               	bcf	3,6	;RP1=0, select bank1
  3985  1483  07C9               	addwf	LCD_WriteString@Str^(0+128),f
  3986  1484  1803               	skipnc
  3987  1485  0ACA               	incf	(LCD_WriteString@Str+1)^(0+128),f
  3988  1486  2C56               	goto	l2972
  3989  1487                     __end_of_LCD_WriteString:	
  3990                           
  3991                           	psect	text16
  3992  08DB                     __ptext16:	
  3993 ;; *************** function _LCD_WriteData *****************
  3994 ;; Defined at:
  3995 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  Byte            1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  Byte            1    1[BANK1 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       0       1       0       0
  4011 ;;      Temps:          0       0       1       0       0
  4012 ;;      Totals:         0       0       2       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    5
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_LCD_WriteString
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function _LCD_WriteData
  4025  08DB                     _LCD_WriteData:	
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _LCD_WriteData: [wreg]
  4029                           ;LCD_WriteData@Byte stored from wreg
  4030  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  4031  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  4032  08DD  00C8               	movwf	LCD_WriteData@Byte^(0+128)
  4033                           
  4034                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4035  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  4036  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  4037  08E0  1409               	bsf	9,0	;volatile
  4038                           
  4039                           ;lcd.c: 51: PORTD = Byte;
  4040  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  4041  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  4042  08E3  0848               	movf	LCD_WriteData@Byte^(0+128),w
  4043  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  4044  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  4045  08E6  0088               	movwf	8	;volatile
  4046                           
  4047                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4048  08E7  1489               	bsf	9,1	;volatile
  4049                           
  4050                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4051  08E8  303D               	movlw	61
  4052  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  4053  08EA  1303               	bcf	3,6	;RP1=0, select bank1
  4054  08EB  00C7               	movwf	??_LCD_WriteData^(0+128)
  4055  08EC                     u4067:	
  4056  08EC  0BC7               	decfsz	??_LCD_WriteData^(0+128),f
  4057  08ED  28EC               	goto	u4067
  4058                           
  4059                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4060  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  4061  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  4062  08F0  1089               	bcf	9,1	;volatile
  4063  08F1  0008               	return
  4064  08F2                     __end_of_LCD_WriteData:	
  4065                           
  4066                           	psect	text17
  4067  167A                     __ptext17:	
  4068 ;; *************** function _LCD_Init *****************
  4069 ;; Defined at:
  4070 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0
  4086 ;;      Temps:          0       0       2       0       0
  4087 ;;      Totals:         0       0       2       0       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    6
  4091 ;; This function calls:
  4092 ;;		_LCD_WriteCmd
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _LCD_Init
  4100  167A                     _LCD_Init:	
  4101                           
  4102                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4106  167A  1683               	bsf	3,5	;RP0=1, select bank1
  4107  167B  1303               	bcf	3,6	;RP1=0, select bank1
  4108  167C  119F               	bcf	31,3	;volatile
  4109                           
  4110                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4111  167D  151F               	bsf	31,2	;volatile
  4112                           
  4113                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4114  167E  109F               	bcf	31,1	;volatile
  4115                           
  4116                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4117  167F  101F               	bcf	31,0	;volatile
  4118                           
  4119                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4120  1680  305A               	movlw	90
  4121  1681  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  4122  1682  30C3               	movlw	195
  4123  1683  00C9               	movwf	??_LCD_Init^(0+128)
  4124  1684                     u4077:	
  4125  1684  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4126  1685  2E84               	goto	u4077
  4127  1686  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  4128  1687  2E84               	goto	u4077
  4129                           
  4130                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4131  1688  3030               	movlw	48
  4132  1689  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4133                           
  4134                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4135  168E  3018               	movlw	24
  4136  168F  1683               	bsf	3,5	;RP0=1, select bank1
  4137  1690  1303               	bcf	3,6	;RP1=0, select bank1
  4138  1691  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  4139  1692  30EF               	movlw	239
  4140  1693  00C9               	movwf	??_LCD_Init^(0+128)
  4141  1694                     u4087:	
  4142  1694  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4143  1695  2E94               	goto	u4087
  4144  1696  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  4145  1697  2E94               	goto	u4087
  4146                           
  4147                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4148  1698  3030               	movlw	48
  4149  1699  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4150                           
  4151                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4152  169E  3099               	movlw	153
  4153  169F  1683               	bsf	3,5	;RP0=1, select bank1
  4154  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  4155  16A1  00C9               	movwf	??_LCD_Init^(0+128)
  4156  16A2                     u4097:	
  4157  16A2  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4158  16A3  2EA2               	goto	u4097
  4159                           
  4160                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4161  16A4  3030               	movlw	48
  4162  16A5  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4163                           
  4164                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4165  16AA  303D               	movlw	61
  4166  16AB  1683               	bsf	3,5	;RP0=1, select bank1
  4167  16AC  1303               	bcf	3,6	;RP1=0, select bank1
  4168  16AD  00C9               	movwf	??_LCD_Init^(0+128)
  4169  16AE                     u4107:	
  4170  16AE  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4171  16AF  2EAE               	goto	u4107
  4172                           
  4173                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4174  16B0  3038               	movlw	56
  4175  16B1  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4176                           
  4177                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4178  16B6  303D               	movlw	61
  4179  16B7  1683               	bsf	3,5	;RP0=1, select bank1
  4180  16B8  1303               	bcf	3,6	;RP1=0, select bank1
  4181  16B9  00C9               	movwf	??_LCD_Init^(0+128)
  4182  16BA                     u4117:	
  4183  16BA  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4184  16BB  2EBA               	goto	u4117
  4185                           
  4186                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4187  16BC  3001               	movlw	1
  4188  16BD  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4189                           
  4190                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4191  16C2  300C               	movlw	12
  4192  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  4193  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  4194  16C5  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  4195  16C6  30F7               	movlw	247
  4196  16C7  00C9               	movwf	??_LCD_Init^(0+128)
  4197  16C8                     u4127:	
  4198  16C8  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4199  16C9  2EC8               	goto	u4127
  4200  16CA  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  4201  16CB  2EC8               	goto	u4127
  4202                           
  4203                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4204  16CC  300C               	movlw	12
  4205  16CD  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4206                           
  4207                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4208  16D2  303D               	movlw	61
  4209  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  4210  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  4211  16D5  00C9               	movwf	??_LCD_Init^(0+128)
  4212  16D6                     u4137:	
  4213  16D6  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4214  16D7  2ED6               	goto	u4137
  4215                           
  4216                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4217  16D8  3006               	movlw	6
  4218  16D9  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4219                           
  4220                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4221  16DE  303D               	movlw	61
  4222  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  4223  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  4224  16E1  00C9               	movwf	??_LCD_Init^(0+128)
  4225  16E2                     u4147:	
  4226  16E2  0BC9               	decfsz	??_LCD_Init^(0+128),f
  4227  16E3  2EE2               	goto	u4147
  4228  16E4  0008               	return
  4229  16E5                     __end_of_LCD_Init:	
  4230                           
  4231                           	psect	text18
  4232  133C                     __ptext18:	
  4233 ;; *************** function _LCD_Cursor *****************
  4234 ;; Defined at:
  4235 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  Row             1    wreg     unsigned char 
  4238 ;;  Col             1    0[BANK1 ] unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  Row             1    2[BANK1 ] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       0       1       0       0
  4251 ;;      Locals:         0       0       1       0       0
  4252 ;;      Temps:          0       0       1       0       0
  4253 ;;      Totals:         0       0       3       0       0
  4254 ;;Total ram usage:        3 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    5
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function _LCD_Cursor
  4266  133C                     _LCD_Cursor:	
  4267                           
  4268                           ;incstack = 0
  4269                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4270                           ;LCD_Cursor@Row stored from wreg
  4271  133C  1683               	bsf	3,5	;RP0=1, select bank1
  4272  133D  1303               	bcf	3,6	;RP1=0, select bank1
  4273  133E  00C9               	movwf	LCD_Cursor@Row^(0+128)
  4274                           
  4275                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4276  133F  1283               	bcf	3,5	;RP0=0, select bank0
  4277  1340  1303               	bcf	3,6	;RP1=0, select bank0
  4278  1341  1009               	bcf	9,0	;volatile
  4279                           
  4280                           ;lcd.c: 14: if (Row == 0)
  4281  1342  1683               	bsf	3,5	;RP0=1, select bank1
  4282  1343  1303               	bcf	3,6	;RP1=0, select bank1
  4283  1344  08C9               	movf	LCD_Cursor@Row^(0+128),f
  4284  1345  1D03               	skipz
  4285  1346  2B4A               	goto	l2958
  4286                           
  4287                           ;lcd.c: 15: {
  4288                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4289  1347  0847               	movf	LCD_Cursor@Col^(0+128),w
  4290  1348  3E80               	addlw	128
  4291  1349  2B4E               	goto	L2
  4292  134A                     l2958:	
  4293                           ;lcd.c: 17: }
  4294                           
  4295                           
  4296                           ;lcd.c: 18: else
  4297                           ;lcd.c: 19: {
  4298                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4299  134A  1683               	bsf	3,5	;RP0=1, select bank1
  4300  134B  1303               	bcf	3,6	;RP1=0, select bank1
  4301  134C  0847               	movf	LCD_Cursor@Col^(0+128),w
  4302  134D  3EC0               	addlw	192
  4303  134E                     L2:	
  4304  134E  1283               	bcf	3,5	;RP0=0, select bank0
  4305  134F  1303               	bcf	3,6	;RP1=0, select bank0
  4306  1350  0088               	movwf	8	;volatile
  4307                           
  4308                           ;lcd.c: 21: }
  4309                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4310  1351  1489               	bsf	9,1	;volatile
  4311                           
  4312                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4313  1352  303D               	movlw	61
  4314  1353  1683               	bsf	3,5	;RP0=1, select bank1
  4315  1354  1303               	bcf	3,6	;RP1=0, select bank1
  4316  1355  00C8               	movwf	??_LCD_Cursor^(0+128)
  4317  1356                     u4157:	
  4318  1356  0BC8               	decfsz	??_LCD_Cursor^(0+128),f
  4319  1357  2B56               	goto	u4157
  4320                           
  4321                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4322  1358  1283               	bcf	3,5	;RP0=0, select bank0
  4323  1359  1303               	bcf	3,6	;RP1=0, select bank0
  4324  135A  1089               	bcf	9,1	;volatile
  4325  135B  0008               	return
  4326  135C                     __end_of_LCD_Cursor:	
  4327                           
  4328                           	psect	text19
  4329  142D                     __ptext19:	
  4330 ;; *************** function _LCD_Clear *****************
  4331 ;; Defined at:
  4332 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;		None               void
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, pclath, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0
  4348 ;;      Temps:          0       0       2       0       0
  4349 ;;      Totals:         0       0       2       0       0
  4350 ;;Total ram usage:        2 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    6
  4353 ;; This function calls:
  4354 ;;		_LCD_WriteCmd
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _LCD_Clear
  4362  142D                     _LCD_Clear:	
  4363                           
  4364                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4368  142D  3001               	movlw	1
  4369  142E  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4370                           
  4371                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4372  1433  300C               	movlw	12
  4373  1434  1683               	bsf	3,5	;RP0=1, select bank1
  4374  1435  1303               	bcf	3,6	;RP1=0, select bank1
  4375  1436  00CA               	movwf	(??_LCD_Clear^(0+128)+1)
  4376  1437  30F7               	movlw	247
  4377  1438  00C9               	movwf	??_LCD_Clear^(0+128)
  4378  1439                     u4167:	
  4379  1439  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  4380  143A  2C39               	goto	u4167
  4381  143B  0BCA               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4382  143C  2C39               	goto	u4167
  4383                           
  4384                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4385  143D  300C               	movlw	12
  4386  143E  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4387                           
  4388                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4389  1443  303D               	movlw	61
  4390  1444  1683               	bsf	3,5	;RP0=1, select bank1
  4391  1445  1303               	bcf	3,6	;RP1=0, select bank1
  4392  1446  00C9               	movwf	??_LCD_Clear^(0+128)
  4393  1447                     u4177:	
  4394  1447  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  4395  1448  2C47               	goto	u4177
  4396                           
  4397                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4398  1449  3006               	movlw	6
  4399  144A  160A  118A  22D1  160A  118A  	fcall	_LCD_WriteCmd
  4400                           
  4401                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4402  144F  303D               	movlw	61
  4403  1450  1683               	bsf	3,5	;RP0=1, select bank1
  4404  1451  1303               	bcf	3,6	;RP1=0, select bank1
  4405  1452  00C9               	movwf	??_LCD_Clear^(0+128)
  4406  1453                     u4187:	
  4407  1453  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  4408  1454  2C53               	goto	u4187
  4409  1455  0008               	return
  4410  1456                     __end_of_LCD_Clear:	
  4411                           
  4412                           	psect	text20
  4413  12D1                     __ptext20:	
  4414 ;; *************** function _LCD_WriteCmd *****************
  4415 ;; Defined at:
  4416 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  Byte            1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  Byte            1    1[BANK1 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;		None               void
  4423 ;; Registers used:
  4424 ;;		wreg
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       0       0       0       0
  4431 ;;      Locals:         0       0       1       0       0
  4432 ;;      Temps:          0       0       1       0       0
  4433 ;;      Totals:         0       0       2       0       0
  4434 ;;Total ram usage:        2 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    5
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_LCD_Clear
  4441 ;;		_LCD_Init
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _LCD_WriteCmd
  4447  12D1                     _LCD_WriteCmd:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _LCD_WriteCmd: [wreg]
  4451                           ;LCD_WriteCmd@Byte stored from wreg
  4452  12D1  1683               	bsf	3,5	;RP0=1, select bank1
  4453  12D2  1303               	bcf	3,6	;RP1=0, select bank1
  4454  12D3  00C8               	movwf	LCD_WriteCmd@Byte^(0+128)
  4455                           
  4456                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4457  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  4458  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  4459  12D6  1009               	bcf	9,0	;volatile
  4460                           
  4461                           ;lcd.c: 36: PORTD = Byte;
  4462  12D7  1683               	bsf	3,5	;RP0=1, select bank1
  4463  12D8  1303               	bcf	3,6	;RP1=0, select bank1
  4464  12D9  0848               	movf	LCD_WriteCmd@Byte^(0+128),w
  4465  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  4466  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  4467  12DC  0088               	movwf	8	;volatile
  4468                           
  4469                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4470  12DD  1489               	bsf	9,1	;volatile
  4471                           
  4472                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4473  12DE  303D               	movlw	61
  4474  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  4475  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  4476  12E1  00C7               	movwf	??_LCD_WriteCmd^(0+128)
  4477  12E2                     u4197:	
  4478  12E2  0BC7               	decfsz	??_LCD_WriteCmd^(0+128),f
  4479  12E3  2AE2               	goto	u4197
  4480                           
  4481                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4482  12E4  1283               	bcf	3,5	;RP0=0, select bank0
  4483  12E5  1303               	bcf	3,6	;RP1=0, select bank0
  4484  12E6  1089               	bcf	9,1	;volatile
  4485  12E7  0008               	return
  4486  12E8                     __end_of_LCD_WriteCmd:	
  4487                           
  4488                           	psect	text21
  4489  12AB                     __ptext21:	
  4490 ;; *************** function _ADC_Init *****************
  4491 ;; Defined at:
  4492 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;		None               void
  4499 ;; Registers used:
  4500 ;;		None
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    5
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_main
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _ADC_Init
  4522  12AB                     _ADC_Init:	
  4523                           
  4524                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in _ADC_Init: []
  4528  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  4529  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  4530  12AD  179F               	bsf	31,7	;volatile
  4531                           
  4532                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4533  12AE  159F               	bsf	31,3	;volatile
  4534                           
  4535                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4536  12AF  151F               	bsf	31,2	;volatile
  4537                           
  4538                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4539  12B0  149F               	bsf	31,1	;volatile
  4540                           
  4541                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4542  12B1  101F               	bcf	31,0	;volatile
  4543                           
  4544                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4545  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  4546  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  4547  12B4  179F               	bsf	31,7	;volatile
  4548                           
  4549                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4550  12B5  131F               	bcf	31,6	;volatile
  4551                           
  4552                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4553  12B6  1683               	bsf	3,5	;RP0=1, select bank1
  4554  12B7  1303               	bcf	3,6	;RP1=0, select bank1
  4555  12B8  130C               	bcf	12,6	;volatile
  4556                           
  4557                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4558  12B9  1283               	bcf	3,5	;RP0=0, select bank0
  4559  12BA  1303               	bcf	3,6	;RP1=0, select bank0
  4560  12BB  130C               	bcf	12,6	;volatile
  4561  12BC  0008               	return
  4562  12BD                     __end_of_ADC_Init:	
  4563                           
  4564                           	psect	text22
  4565  0E70                     __ptext22:	
  4566 ;; *************** function _ISR *****************
  4567 ;; Defined at:
  4568 ;;		line 301 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;		None               void
  4575 ;; Registers used:
  4576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0
  4584 ;;      Temps:          0       4       0       0       0
  4585 ;;      Totals:         0       4       0       0       0
  4586 ;;Total ram usage:        4 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    4
  4589 ;; This function calls:
  4590 ;;		_Fuzzy
  4591 ;;		_USART_ReceiveChar
  4592 ;;		___lwtoft
  4593 ;;		i1_PWM_DutyCycle2
  4594 ;;		i1_TIMER0_Set
  4595 ;;		i1_USART_WriteString
  4596 ;;		i1___lwdiv
  4597 ;;		i1___wmul
  4598 ;; This function is called by:
  4599 ;;		Interrupt level 1
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _ISR
  4605  0E70                     _ISR:	
  4606                           
  4607                           ;main.c: 304: if (PIR1bits.RCIF)
  4608  0E70  1E8C               	btfss	12,5	;volatile
  4609  0E71  2F92               	goto	i1l3222
  4610                           
  4611                           ;main.c: 305: {
  4612                           ;main.c: 306: if (USART_ReceiveChar() == '0')
  4613  0E72  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4614  0E77  3A30               	xorlw	48
  4615  0E78  1D03               	skipz
  4616  0E79  2E93               	goto	i1l3156
  4617                           
  4618                           ;main.c: 307: {
  4619                           ;main.c: 308: USART_WriteString("\n\rdesligado\n\r");
  4620  0E7A  30A0               	movlw	low (STR_1-__stringbase)
  4621  0E7B  00F1               	movwf	i1USART_WriteString@str
  4622  0E7C  3080               	movlw	128
  4623  0E7D  00F2               	movwf	i1USART_WriteString@str+1
  4624  0E7E  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4625                           
  4626                           ;main.c: 309: pwm = 0;
  4627  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0E85  01ED               	clrf	_pwm
  4630  0E86  01EE               	clrf	_pwm+1
  4631                           
  4632                           ;main.c: 310: PWM_DutyCycle2(pwm);
  4633  0E87  086E               	movf	_pwm+1,w
  4634  0E88  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4635  0E89  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4636  0E8A  086D               	movf	_pwm,w
  4637  0E8B  01F0               	clrf	i1PWM_DutyCycle2@valor
  4638  0E8C  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4639  0E8D  160A  118A  22E8  120A  158A  	fcall	i1_PWM_DutyCycle2
  4640                           
  4641                           ;main.c: 311: return;
  4642  0E92  2FF3               	goto	i1l178
  4643  0E93                     i1l3156:	
  4644                           
  4645                           ;main.c: 312: }
  4646                           ;main.c: 314: if (USART_ReceiveChar() == '1')
  4647  0E93  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4648  0E98  3A31               	xorlw	49
  4649  0E99  1D03               	skipz
  4650  0E9A  2EAA               	goto	i1l3162
  4651                           
  4652                           ;main.c: 315: {
  4653                           ;main.c: 316: USART_WriteString("\n\rpwm = \n\r");
  4654  0E9B  30AE               	movlw	low (STR_2-__stringbase)
  4655  0E9C  00F1               	movwf	i1USART_WriteString@str
  4656  0E9D  3080               	movlw	128
  4657  0E9E  00F2               	movwf	i1USART_WriteString@str+1
  4658  0E9F  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4659                           
  4660                           ;main.c: 317: setpointUI = 720;
  4661  0EA4  30D0               	movlw	208
  4662  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  4663  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  4664  0EA7  00BF               	movwf	_setpointUI^(0+128)
  4665  0EA8  3002               	movlw	2
  4666  0EA9  00C0               	movwf	(_setpointUI^(0+128)+1)
  4667  0EAA                     i1l3162:	
  4668                           
  4669                           ;main.c: 319: }
  4670                           ;main.c: 321: if (USART_ReceiveChar() == '2')
  4671  0EAA  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4672  0EAF  3A32               	xorlw	50
  4673  0EB0  1D03               	skipz
  4674  0EB1  2EC1               	goto	i1l3168
  4675                           
  4676                           ;main.c: 322: {
  4677                           ;main.c: 323: USART_WriteString("\n\rpwm = \n\r");
  4678  0EB2  30AE               	movlw	low (STR_2-__stringbase)
  4679  0EB3  00F1               	movwf	i1USART_WriteString@str
  4680  0EB4  3080               	movlw	128
  4681  0EB5  00F2               	movwf	i1USART_WriteString@str+1
  4682  0EB6  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4683                           
  4684                           ;main.c: 324: setpointUI = 1450;
  4685  0EBB  30AA               	movlw	170
  4686  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  4687  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  4688  0EBE  00BF               	movwf	_setpointUI^(0+128)
  4689  0EBF  3005               	movlw	5
  4690  0EC0  00C0               	movwf	(_setpointUI^(0+128)+1)
  4691  0EC1                     i1l3168:	
  4692                           
  4693                           ;main.c: 326: }
  4694                           ;main.c: 328: if (USART_ReceiveChar() == '3')
  4695  0EC1  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4696  0EC6  3A33               	xorlw	51
  4697  0EC7  1D03               	skipz
  4698  0EC8  2ED8               	goto	i1l3174
  4699                           
  4700                           ;main.c: 329: {
  4701                           ;main.c: 330: USART_WriteString("\n\rpwm = \n\r");
  4702  0EC9  30AE               	movlw	low (STR_2-__stringbase)
  4703  0ECA  00F1               	movwf	i1USART_WriteString@str
  4704  0ECB  3080               	movlw	128
  4705  0ECC  00F2               	movwf	i1USART_WriteString@str+1
  4706  0ECD  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4707                           
  4708                           ;main.c: 331: setpointUI = 2828;
  4709  0ED2  300C               	movlw	12
  4710  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  4711  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  4712  0ED5  00BF               	movwf	_setpointUI^(0+128)
  4713  0ED6  300B               	movlw	11
  4714  0ED7  00C0               	movwf	(_setpointUI^(0+128)+1)
  4715  0ED8                     i1l3174:	
  4716                           
  4717                           ;main.c: 333: }
  4718                           ;main.c: 335: if (USART_ReceiveChar() == '4')
  4719  0ED8  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4720  0EDD  3A34               	xorlw	52
  4721  0EDE  1D03               	skipz
  4722  0EDF  2F02               	goto	i1l3186
  4723                           
  4724                           ;main.c: 336: {
  4725                           ;main.c: 337: USART_WriteString("\n\rpwm = \n\r");
  4726  0EE0  30AE               	movlw	low (STR_2-__stringbase)
  4727  0EE1  00F1               	movwf	i1USART_WriteString@str
  4728  0EE2  3080               	movlw	128
  4729  0EE3  00F2               	movwf	i1USART_WriteString@str+1
  4730  0EE4  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4731                           
  4732                           ;main.c: 338: pwm = 3256;
  4733  0EE9  30B8               	movlw	184
  4734  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  4735  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  4736  0EEC  00ED               	movwf	_pwm
  4737  0EED  300C               	movlw	12
  4738  0EEE  00EE               	movwf	_pwm+1
  4739                           
  4740                           ;main.c: 339: PWM_DutyCycle2(pwm);
  4741  0EEF  086E               	movf	_pwm+1,w
  4742  0EF0  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4743  0EF1  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4744  0EF2  086D               	movf	_pwm,w
  4745  0EF3  01F0               	clrf	i1PWM_DutyCycle2@valor
  4746  0EF4  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4747  0EF5  160A  118A  22E8  120A  158A  	fcall	i1_PWM_DutyCycle2
  4748                           
  4749                           ;main.c: 340: if(PORTBbits.RB1 == 0)
  4750  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0EFC  1886               	btfsc	6,1	;volatile
  4753  0EFD  2F00               	goto	i1l183
  4754                           
  4755                           ;main.c: 341: {
  4756                           ;main.c: 342: PORTBbits.RB1 = 1;
  4757  0EFE  1486               	bsf	6,1	;volatile
  4758                           
  4759                           ;main.c: 343: }else{
  4760  0EFF  2FF3               	goto	i1l178
  4761  0F00                     i1l183:	
  4762                           
  4763                           ;main.c: 344: PORTBbits.RB1 = 0;
  4764  0F00  1086               	bcf	6,1	;volatile
  4765                           
  4766                           ;main.c: 345: }
  4767                           ;main.c: 346: return;
  4768  0F01  2FF3               	goto	i1l178
  4769  0F02                     i1l3186:	
  4770                           
  4771                           ;main.c: 347: }
  4772                           ;main.c: 349: if (USART_ReceiveChar() == '5')
  4773  0F02  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4774  0F07  3A35               	xorlw	53
  4775  0F08  1D03               	skipz
  4776  0F09  2F19               	goto	i1l3192
  4777                           
  4778                           ;main.c: 350: {
  4779                           ;main.c: 351: USART_WriteString("\n\rpwm = \n\r");
  4780  0F0A  30AE               	movlw	low (STR_2-__stringbase)
  4781  0F0B  00F1               	movwf	i1USART_WriteString@str
  4782  0F0C  3080               	movlw	128
  4783  0F0D  00F2               	movwf	i1USART_WriteString@str+1
  4784  0F0E  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4785                           
  4786                           ;main.c: 352: setpointUI = 4512;
  4787  0F13  30A0               	movlw	160
  4788  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  4789  0F15  1303               	bcf	3,6	;RP1=0, select bank1
  4790  0F16  00BF               	movwf	_setpointUI^(0+128)
  4791  0F17  3011               	movlw	17
  4792  0F18  00C0               	movwf	(_setpointUI^(0+128)+1)
  4793  0F19                     i1l3192:	
  4794                           
  4795                           ;main.c: 354: }
  4796                           ;main.c: 356: if (USART_ReceiveChar() == '6')
  4797  0F19  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4798  0F1E  3A36               	xorlw	54
  4799  0F1F  1D03               	skipz
  4800  0F20  2F30               	goto	i1l3198
  4801                           
  4802                           ;main.c: 357: {
  4803                           ;main.c: 358: USART_WriteString("\n\rpwm = 768\n\r");
  4804  0F21  3092               	movlw	low (STR_7-__stringbase)
  4805  0F22  00F1               	movwf	i1USART_WriteString@str
  4806  0F23  3080               	movlw	128
  4807  0F24  00F2               	movwf	i1USART_WriteString@str+1
  4808  0F25  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4809                           
  4810                           ;main.c: 359: setpointUI = 5768;
  4811  0F2A  3088               	movlw	136
  4812  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  4813  0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  4814  0F2D  00BF               	movwf	_setpointUI^(0+128)
  4815  0F2E  3016               	movlw	22
  4816  0F2F  00C0               	movwf	(_setpointUI^(0+128)+1)
  4817  0F30                     i1l3198:	
  4818                           
  4819                           ;main.c: 361: }
  4820                           ;main.c: 363: if (USART_ReceiveChar() == '7')
  4821  0F30  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4822  0F35  3A37               	xorlw	55
  4823  0F36  1D03               	skipz
  4824  0F37  2F47               	goto	i1l3204
  4825                           
  4826                           ;main.c: 364: {
  4827                           ;main.c: 365: USART_WriteString("\n\rpwm = 896\n\r");
  4828  0F38  3084               	movlw	low (STR_8-__stringbase)
  4829  0F39  00F1               	movwf	i1USART_WriteString@str
  4830  0F3A  3080               	movlw	128
  4831  0F3B  00F2               	movwf	i1USART_WriteString@str+1
  4832  0F3C  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4833                           
  4834                           ;main.c: 366: setpointUI = 6896;
  4835  0F41  30F0               	movlw	240
  4836  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  4837  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  4838  0F44  00BF               	movwf	_setpointUI^(0+128)
  4839  0F45  301A               	movlw	26
  4840  0F46  00C0               	movwf	(_setpointUI^(0+128)+1)
  4841  0F47                     i1l3204:	
  4842                           
  4843                           ;main.c: 368: }
  4844                           ;main.c: 370: if (USART_ReceiveChar() == '8')
  4845  0F47  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4846  0F4C  3A38               	xorlw	56
  4847  0F4D  1D03               	skipz
  4848  0F4E  2F5E               	goto	i1l3210
  4849                           
  4850                           ;main.c: 371: {
  4851                           ;main.c: 372: USART_WriteString("\n\rpwm = \n\r");
  4852  0F4F  30AE               	movlw	low (STR_2-__stringbase)
  4853  0F50  00F1               	movwf	i1USART_WriteString@str
  4854  0F51  3080               	movlw	128
  4855  0F52  00F2               	movwf	i1USART_WriteString@str+1
  4856  0F53  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4857                           
  4858                           ;main.c: 373: setpointUI = 8100;
  4859  0F58  30A4               	movlw	164
  4860  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  4861  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  4862  0F5B  00BF               	movwf	_setpointUI^(0+128)
  4863  0F5C  301F               	movlw	31
  4864  0F5D  00C0               	movwf	(_setpointUI^(0+128)+1)
  4865  0F5E                     i1l3210:	
  4866                           
  4867                           ;main.c: 375: }
  4868                           ;main.c: 377: if (USART_ReceiveChar() == '9')
  4869  0F5E  160A  118A  2303  120A  158A  	fcall	_USART_ReceiveChar
  4870  0F63  3A39               	xorlw	57
  4871  0F64  1D03               	skipz
  4872  0F65  2F75               	goto	i1l3216
  4873                           
  4874                           ;main.c: 378: {
  4875                           ;main.c: 379: USART_WriteString("\n\rpwm = 1023\n\r");
  4876  0F66  3075               	movlw	low (STR_10-__stringbase)
  4877  0F67  00F1               	movwf	i1USART_WriteString@str
  4878  0F68  3080               	movlw	128
  4879  0F69  00F2               	movwf	i1USART_WriteString@str+1
  4880  0F6A  160A  118A  239E  120A  158A  	fcall	i1_USART_WriteString
  4881                           
  4882                           ;main.c: 380: setpointUI = 9000;
  4883  0F6F  3028               	movlw	40
  4884  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  4885  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  4886  0F72  00BF               	movwf	_setpointUI^(0+128)
  4887  0F73  3023               	movlw	35
  4888  0F74  00C0               	movwf	(_setpointUI^(0+128)+1)
  4889  0F75                     i1l3216:	
  4890                           
  4891                           ;main.c: 382: }
  4892                           ;main.c: 386: Fuzzy();
  4893  0F75  120A  118A  2051  120A  158A  	fcall	_Fuzzy
  4894                           
  4895                           ;main.c: 387: tf = setpointUI;
  4896  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  4897  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  4898  0F7C  0840               	movf	(_setpointUI+1)^(0+128),w
  4899  0F7D  01F9               	clrf	___lwtoft@c+1
  4900  0F7E  07F9               	addwf	___lwtoft@c+1,f
  4901  0F7F  083F               	movf	_setpointUI^(0+128),w
  4902  0F80  01F8               	clrf	___lwtoft@c
  4903  0F81  07F8               	addwf	___lwtoft@c,f
  4904  0F82  160A  118A  22BD  120A  158A  	fcall	___lwtoft
  4905  0F87  0878               	movf	?___lwtoft,w
  4906  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  4907  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  4908  0F8A  00AF               	movwf	_tf^(0+128)
  4909  0F8B  0879               	movf	?___lwtoft+1,w
  4910  0F8C  00B0               	movwf	(_tf+1)^(0+128)
  4911  0F8D  087A               	movf	?___lwtoft+2,w
  4912  0F8E  00B1               	movwf	(_tf+2)^(0+128)
  4913                           
  4914                           ;main.c: 389: PIR1bits.RCIF = 0;
  4915  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0F91  128C               	bcf	12,5	;volatile
  4918  0F92                     i1l3222:	
  4919                           
  4920                           ;main.c: 390: }
  4921                           ;main.c: 393: if (PIR1bits.ADIF)
  4922  0F92  1B0C               	btfsc	12,6	;volatile
  4923                           
  4924                           ;main.c: 394: {
  4925                           ;main.c: 398: PIR1bits.ADIF = 0;
  4926  0F93  130C               	bcf	12,6	;volatile
  4927                           
  4928                           ;main.c: 399: }
  4929                           ;main.c: 403: if (INTCONbits.T0IF)
  4930  0F94  1D0B               	btfss	11,2	;volatile
  4931  0F95  2FEF               	goto	i1l3248
  4932                           
  4933                           ;main.c: 404: {
  4934                           ;main.c: 406: TIMER0_Set(238);
  4935  0F96  30EE               	movlw	238
  4936  0F97  160A  118A  225D  120A  158A  	fcall	i1_TIMER0_Set
  4937                           
  4938                           ;main.c: 409: if (contagens_tm0 < 499)
  4939  0F9C  3001               	movlw	1
  4940  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  4941  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  4942  0F9F  023A               	subwf	(_contagens_tm0+1)^(0+128),w
  4943  0FA0  30F3               	movlw	243
  4944  0FA1  1903               	skipnz
  4945  0FA2  0239               	subwf	_contagens_tm0^(0+128),w
  4946  0FA3  1803               	skipnc
  4947  0FA4  2FAF               	goto	i1l3234
  4948                           
  4949                           ;main.c: 410: {
  4950                           ;main.c: 412: contagens_tm0++;
  4951  0FA5  3001               	movlw	1
  4952  0FA6  07B9               	addwf	_contagens_tm0^(0+128),f
  4953  0FA7  1803               	skipnc
  4954  0FA8  0ABA               	incf	(_contagens_tm0+1)^(0+128),f
  4955  0FA9  3000               	movlw	0
  4956  0FAA  07BA               	addwf	(_contagens_tm0+1)^(0+128),f
  4957                           
  4958                           ;main.c: 415: PORTBbits.RB6 = 1;
  4959  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0FAD  1706               	bsf	6,6	;volatile
  4962                           
  4963                           ;main.c: 416: }
  4964  0FAE  2FEE               	goto	i1l3246
  4965  0FAF                     i1l3234:	
  4966                           
  4967                           ;main.c: 417: else
  4968                           ;main.c: 418: {
  4969                           ;main.c: 420: contagens_tm0 = 0;
  4970  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  4971  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  4972  0FB1  01B9               	clrf	_contagens_tm0^(0+128)
  4973  0FB2  01BA               	clrf	(_contagens_tm0+1)^(0+128)
  4974                           
  4975                           ;main.c: 423: pulsos = (TMR1H << 8) + TMR1L;
  4976  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4978  0FB5  080F               	movf	15,w	;volatile
  4979  0FB6  1683               	bsf	3,5	;RP0=1, select bank1
  4980  0FB7  1303               	bcf	3,6	;RP1=0, select bank1
  4981  0FB8  01BC               	clrf	(_pulsos+1)^(0+128)
  4982  0FB9  07BC               	addwf	(_pulsos+1)^(0+128),f
  4983  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0FBC  080E               	movf	14,w	;volatile
  4986  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  4988  0FBF  01BB               	clrf	_pulsos^(0+128)
  4989  0FC0  07BB               	addwf	_pulsos^(0+128),f
  4990                           
  4991                           ;main.c: 424: rpm = ((pulsos / pas_cooler) * 120);
  4992  0FC1  086D               	movf	(_pas_cooler+1)^(0+128),w
  4993  0FC2  01F1               	clrf	i1___lwdiv@divisor+1
  4994  0FC3  07F1               	addwf	i1___lwdiv@divisor+1,f
  4995  0FC4  086C               	movf	_pas_cooler^(0+128),w
  4996  0FC5  01F0               	clrf	i1___lwdiv@divisor
  4997  0FC6  07F0               	addwf	i1___lwdiv@divisor,f
  4998  0FC7  083C               	movf	(_pulsos+1)^(0+128),w
  4999  0FC8  01F3               	clrf	i1___lwdiv@dividend+1
  5000  0FC9  07F3               	addwf	i1___lwdiv@dividend+1,f
  5001  0FCA  083B               	movf	_pulsos^(0+128),w
  5002  0FCB  01F2               	clrf	i1___lwdiv@dividend
  5003  0FCC  07F2               	addwf	i1___lwdiv@dividend,f
  5004  0FCD  160A  118A  24EE  120A  158A  	fcall	i1___lwdiv
  5005  0FD2  0871               	movf	?i1___lwdiv+1,w
  5006  0FD3  01F9               	clrf	i1___wmul@multiplier+1
  5007  0FD4  07F9               	addwf	i1___wmul@multiplier+1,f
  5008  0FD5  0870               	movf	?i1___lwdiv,w
  5009  0FD6  01F8               	clrf	i1___wmul@multiplier
  5010  0FD7  07F8               	addwf	i1___wmul@multiplier,f
  5011  0FD8  3078               	movlw	120
  5012  0FD9  00FA               	movwf	i1___wmul@multiplicand
  5013  0FDA  3000               	movlw	0
  5014  0FDB  00FB               	movwf	i1___wmul@multiplicand+1
  5015  0FDC  160A  118A  23C1  120A  158A  	fcall	i1___wmul
  5016  0FE1  0879               	movf	?i1___wmul+1,w
  5017  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0FE4  01BE               	clrf	(_rpm+1)^(0+128)
  5020  0FE5  07BE               	addwf	(_rpm+1)^(0+128),f
  5021  0FE6  0878               	movf	?i1___wmul,w
  5022  0FE7  01BD               	clrf	_rpm^(0+128)
  5023  0FE8  07BD               	addwf	_rpm^(0+128),f
  5024                           
  5025                           ;main.c: 427: TMR1L = 0x00;
  5026  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0FEB  018E               	clrf	14	;volatile
  5029                           
  5030                           ;main.c: 428: TMR1H = 0x00;
  5031  0FEC  018F               	clrf	15	;volatile
  5032                           
  5033                           ;main.c: 431: PORTBbits.RB6 = 0;
  5034  0FED  1306               	bcf	6,6	;volatile
  5035  0FEE                     i1l3246:	
  5036                           
  5037                           ;main.c: 432: }
  5038                           ;main.c: 435: INTCONbits.T0IF = 0;
  5039  0FEE  110B               	bcf	11,2	;volatile
  5040  0FEF                     i1l3248:	
  5041                           
  5042                           ;main.c: 436: }
  5043                           ;main.c: 439: if (PIR1bits.TMR1IF)
  5044  0FEF  180C               	btfsc	12,0	;volatile
  5045                           
  5046                           ;main.c: 440: {
  5047                           ;main.c: 444: PIR1bits.TMR1IF = 0;
  5048  0FF0  100C               	bcf	12,0	;volatile
  5049                           
  5050                           ;main.c: 445: }
  5051                           ;main.c: 448: if (PIR1bits.SSPIF)
  5052  0FF1  198C               	btfsc	12,3	;volatile
  5053                           
  5054                           ;main.c: 449: {
  5055                           ;main.c: 453: PIR1bits.SSPIF = 0;
  5056  0FF2  118C               	bcf	12,3	;volatile
  5057  0FF3                     i1l178:	
  5058  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0FF5  085E               	movf	??_ISR+3,w
  5061  0FF6  00FF               	movwf	127
  5062  0FF7  085D               	movf	??_ISR+2,w
  5063  0FF8  008A               	movwf	10
  5064  0FF9  085C               	movf	??_ISR+1,w
  5065  0FFA  0084               	movwf	4
  5066  0FFB  0E5B               	swapf	??_ISR^0,w
  5067  0FFC  0083               	movwf	3
  5068  0FFD  0EFE               	swapf	126,f
  5069  0FFE  0E7E               	swapf	126,w
  5070  0FFF  0009               	retfie
  5071  1000                     __end_of_ISR:	
  5072                           
  5073                           	psect	intentry
  5074  0004                     __pintentry:	
  5075                           ;incstack = 0
  5076                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5077                           
  5078  0004                     interrupt_function:	
  5079  007E                     saved_w	set	btemp
  5080  0004  00FE               	movwf	btemp
  5081  0005  0E03               	swapf	3,w
  5082  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0008  00DB               	movwf	??_ISR
  5085  0009  0804               	movf	4,w
  5086  000A  00DC               	movwf	??_ISR+1
  5087  000B  080A               	movf	10,w
  5088  000C  00DD               	movwf	??_ISR+2
  5089  000D  087F               	movf	btemp+1,w
  5090  000E  00DE               	movwf	??_ISR+3
  5091  000F  120A  158A  2E70   	ljmp	_ISR
  5092                           
  5093                           	psect	text23
  5094  13C1                     __ptext23:	
  5095 ;; *************** function i1___wmul *****************
  5096 ;; Defined at:
  5097 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  multiplier      2    8[COMMON] unsigned int 
  5100 ;;  multiplicand    2   10[COMMON] unsigned int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  __wmul          2   12[COMMON] unsigned int 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    8[COMMON] unsigned int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         4       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0
  5115 ;;      Totals:         6       0       0       0       0
  5116 ;;Total ram usage:        6 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_ISR
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function i1___wmul
  5127  13C1                     i1___wmul:	
  5128                           
  5129                           ;incstack = 0
  5130                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5131  13C1  01FC               	clrf	i1___wmul@product
  5132  13C2  01FD               	clrf	i1___wmul@product+1
  5133  13C3                     i1l3102:	
  5134  13C3  1C78               	btfss	i1___wmul@multiplier,0
  5135  13C4  2BCB               	goto	i1l594
  5136  13C5  087A               	movf	i1___wmul@multiplicand,w
  5137  13C6  07FC               	addwf	i1___wmul@product,f
  5138  13C7  1803               	skipnc
  5139  13C8  0AFD               	incf	i1___wmul@product+1,f
  5140  13C9  087B               	movf	i1___wmul@multiplicand+1,w
  5141  13CA  07FD               	addwf	i1___wmul@product+1,f
  5142  13CB                     i1l594:	
  5143  13CB  3001               	movlw	1
  5144  13CC                     u377_25:	
  5145  13CC  1003               	clrc
  5146  13CD  0DFA               	rlf	i1___wmul@multiplicand,f
  5147  13CE  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5148  13CF  3EFF               	addlw	-1
  5149  13D0  1D03               	skipz
  5150  13D1  2BCC               	goto	u377_25
  5151  13D2  3001               	movlw	1
  5152  13D3                     u378_25:	
  5153  13D3  1003               	clrc
  5154  13D4  0CF9               	rrf	i1___wmul@multiplier+1,f
  5155  13D5  0CF8               	rrf	i1___wmul@multiplier,f
  5156  13D6  3EFF               	addlw	-1
  5157  13D7  1D03               	skipz
  5158  13D8  2BD3               	goto	u378_25
  5159  13D9  0879               	movf	i1___wmul@multiplier+1,w
  5160  13DA  0478               	iorwf	i1___wmul@multiplier,w
  5161  13DB  1D03               	skipz
  5162  13DC  2BC3               	goto	i1l3102
  5163  13DD  087D               	movf	i1___wmul@product+1,w
  5164  13DE  01F9               	clrf	?i1___wmul+1
  5165  13DF  07F9               	addwf	?i1___wmul+1,f
  5166  13E0  087C               	movf	i1___wmul@product,w
  5167  13E1  01F8               	clrf	?i1___wmul
  5168  13E2  07F8               	addwf	?i1___wmul,f
  5169  13E3  0008               	return
  5170  13E4                     __end_ofi1___wmul:	
  5171                           
  5172                           	psect	text24
  5173  14EE                     __ptext24:	
  5174 ;; *************** function i1___lwdiv *****************
  5175 ;; Defined at:
  5176 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  divisor         2    0[COMMON] unsigned int 
  5179 ;;  dividend        2    2[COMMON] unsigned int 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5182 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  2    0[COMMON] unsigned int 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         4       0       0       0       0
  5193 ;;      Locals:         3       0       0       0       0
  5194 ;;      Temps:          1       0       0       0       0
  5195 ;;      Totals:         8       0       0       0       0
  5196 ;;Total ram usage:        8 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_ISR
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function i1___lwdiv
  5207  14EE                     i1___lwdiv:	
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5211  14EE  01F5               	clrf	i1___lwdiv@quotient
  5212  14EF  01F6               	clrf	i1___lwdiv@quotient+1
  5213  14F0  0871               	movf	i1___lwdiv@divisor+1,w
  5214  14F1  0470               	iorwf	i1___lwdiv@divisor,w
  5215  14F2  1903               	skipnz
  5216  14F3  2D25               	goto	i1l3134
  5217  14F4  01F7               	clrf	i1___lwdiv@counter
  5218  14F5  0AF7               	incf	i1___lwdiv@counter,f
  5219  14F6                     i1l3122:	
  5220  14F6  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5221  14F7  2D04               	goto	i1l3124
  5222  14F8  3001               	movlw	1
  5223  14F9                     u381_25:	
  5224  14F9  1003               	clrc
  5225  14FA  0DF0               	rlf	i1___lwdiv@divisor,f
  5226  14FB  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5227  14FC  3EFF               	addlw	-1
  5228  14FD  1D03               	skipz
  5229  14FE  2CF9               	goto	u381_25
  5230  14FF  3001               	movlw	1
  5231  1500  00F4               	movwf	??i1___lwdiv
  5232  1501  0874               	movf	??i1___lwdiv,w
  5233  1502  07F7               	addwf	i1___lwdiv@counter,f
  5234  1503  2CF6               	goto	i1l3122
  5235  1504                     i1l3124:	
  5236  1504  3001               	movlw	1
  5237  1505                     u383_25:	
  5238  1505  1003               	clrc
  5239  1506  0DF5               	rlf	i1___lwdiv@quotient,f
  5240  1507  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5241  1508  3EFF               	addlw	-1
  5242  1509  1D03               	skipz
  5243  150A  2D05               	goto	u383_25
  5244  150B  0871               	movf	i1___lwdiv@divisor+1,w
  5245  150C  0273               	subwf	i1___lwdiv@dividend+1,w
  5246  150D  1D03               	skipz
  5247  150E  2D11               	goto	u384_25
  5248  150F  0870               	movf	i1___lwdiv@divisor,w
  5249  1510  0272               	subwf	i1___lwdiv@dividend,w
  5250  1511                     u384_25:	
  5251  1511  1C03               	skipc
  5252  1512  2D1A               	goto	i1l3130
  5253  1513  0870               	movf	i1___lwdiv@divisor,w
  5254  1514  02F2               	subwf	i1___lwdiv@dividend,f
  5255  1515  0871               	movf	i1___lwdiv@divisor+1,w
  5256  1516  1C03               	skipc
  5257  1517  03F3               	decf	i1___lwdiv@dividend+1,f
  5258  1518  02F3               	subwf	i1___lwdiv@dividend+1,f
  5259  1519  1475               	bsf	i1___lwdiv@quotient,0
  5260  151A                     i1l3130:	
  5261  151A  3001               	movlw	1
  5262  151B                     u385_25:	
  5263  151B  1003               	clrc
  5264  151C  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5265  151D  0CF0               	rrf	i1___lwdiv@divisor,f
  5266  151E  3EFF               	addlw	-1
  5267  151F  1D03               	skipz
  5268  1520  2D1B               	goto	u385_25
  5269  1521  3001               	movlw	1
  5270  1522  02F7               	subwf	i1___lwdiv@counter,f
  5271  1523  1D03               	btfss	3,2
  5272  1524  2D04               	goto	i1l3124
  5273  1525                     i1l3134:	
  5274  1525  0876               	movf	i1___lwdiv@quotient+1,w
  5275  1526  01F1               	clrf	?i1___lwdiv+1
  5276  1527  07F1               	addwf	?i1___lwdiv+1,f
  5277  1528  0875               	movf	i1___lwdiv@quotient,w
  5278  1529  01F0               	clrf	?i1___lwdiv
  5279  152A  07F0               	addwf	?i1___lwdiv,f
  5280  152B  0008               	return
  5281  152C                     __end_ofi1___lwdiv:	
  5282                           
  5283                           	psect	text25
  5284  125D                     __ptext25:	
  5285 ;; *************** function i1_TIMER0_Set *****************
  5286 ;; Defined at:
  5287 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  contagens       1    wreg     unsigned char 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  contagens       1    0[COMMON] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;		None               void
  5294 ;; Registers used:
  5295 ;;		wreg
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0
  5304 ;;      Totals:         1       0       0       0       0
  5305 ;;Total ram usage:        1 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_ISR
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           
  5315                           ;psect for function i1_TIMER0_Set
  5316  125D                     i1_TIMER0_Set:	
  5317                           
  5318                           ;incstack = 0
  5319                           ; Regs used in i1_TIMER0_Set: [wreg]
  5320                           ;i1TIMER0_Set@contagens stored from wreg
  5321  125D  00F0               	movwf	i1TIMER0_Set@contagens
  5322                           
  5323                           ;timers.c: 22: TMR0 = contagens;
  5324  125E  0870               	movf	i1TIMER0_Set@contagens,w
  5325  125F  1283               	bcf	3,5	;RP0=0, select bank0
  5326  1260  1303               	bcf	3,6	;RP1=0, select bank0
  5327  1261  0081               	movwf	1	;volatile
  5328  1262  0008               	return
  5329  1263                     __end_ofi1_TIMER0_Set:	
  5330                           
  5331                           	psect	text26
  5332  1303                     __ptext26:	
  5333 ;; *************** function _USART_ReceiveChar *****************
  5334 ;; Defined at:
  5335 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  byte            1    4[COMMON] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      unsigned char 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5349 ;;      Params:         0       0       0       0       0
  5350 ;;      Locals:         1       0       0       0       0
  5351 ;;      Temps:          1       0       0       0       0
  5352 ;;      Totals:         2       0       0       0       0
  5353 ;;Total ram usage:        2 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    2
  5356 ;; This function calls:
  5357 ;;		i1_USART_WriteString
  5358 ;; This function is called by:
  5359 ;;		_ISR
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function _USART_ReceiveChar
  5365  1303                     _USART_ReceiveChar:	
  5366                           
  5367                           ;usart.c: 65: unsigned char byte;
  5368                           ;usart.c: 67: if (!OERR)
  5369                           
  5370                           ;incstack = 0
  5371                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5372  1303  1283               	bcf	3,5	;RP0=0, select bank0
  5373  1304  1303               	bcf	3,6	;RP1=0, select bank0
  5374  1305  1898               	btfsc	24,1	;volatile
  5375  1306  2B0C               	goto	i1l2832
  5376                           
  5377                           ;usart.c: 68: {
  5378                           ;usart.c: 69: byte = RCREG;
  5379  1307  081A               	movf	26,w	;volatile
  5380  1308  00F3               	movwf	??_USART_ReceiveChar
  5381  1309  0873               	movf	??_USART_ReceiveChar,w
  5382  130A  00F4               	movwf	USART_ReceiveChar@byte
  5383  130B  2B1B               	goto	i1l2840
  5384  130C                     i1l2832:	
  5385                           ;usart.c: 71: }
  5386                           
  5387                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5388                           
  5389                           
  5390                           ;usart.c: 72: else
  5391                           ;usart.c: 73: {
  5392                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5393  130C  300B               	movlw	low (STR_19-__stringbase)
  5394  130D  00F1               	movwf	i1USART_WriteString@str
  5395  130E  3080               	movlw	128
  5396  130F  00F2               	movwf	i1USART_WriteString@str+1
  5397  1310  160A  118A  239E   	fcall	i1_USART_WriteString
  5398                           
  5399                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5400  1313  1283               	bcf	3,5	;RP0=0, select bank0
  5401  1314  1303               	bcf	3,6	;RP1=0, select bank0
  5402  1315  1218               	bcf	24,4	;volatile
  5403                           
  5404                           ;usart.c: 77: byte = RCREG;
  5405  1316  081A               	movf	26,w	;volatile
  5406  1317  00F3               	movwf	??_USART_ReceiveChar
  5407  1318  0873               	movf	??_USART_ReceiveChar,w
  5408  1319  00F4               	movwf	USART_ReceiveChar@byte
  5409                           
  5410                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5411  131A  1618               	bsf	24,4	;volatile
  5412  131B                     i1l2840:	
  5413                           
  5414                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5415  131B  128C               	bcf	12,5	;volatile
  5416                           
  5417                           ;usart.c: 80: }
  5418                           ;usart.c: 82: return(byte);
  5419  131C  0874               	movf	USART_ReceiveChar@byte,w
  5420  131D  0008               	return
  5421  131E                     __end_of_USART_ReceiveChar:	
  5422                           
  5423                           	psect	text27
  5424  139E                     __ptext27:	
  5425 ;; *************** function i1_USART_WriteString *****************
  5426 ;; Defined at:
  5427 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  str             2    1[COMMON] PTR const unsigned char 
  5430 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5431 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5432 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5433 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;		None               void
  5438 ;; Registers used:
  5439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5445 ;;      Params:         2       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0
  5448 ;;      Totals:         2       0       0       0       0
  5449 ;;Total ram usage:        2 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    1
  5452 ;; This function calls:
  5453 ;;		i1_USART_WriteChar
  5454 ;; This function is called by:
  5455 ;;		_ISR
  5456 ;;		_USART_ReceiveChar
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function i1_USART_WriteString
  5462  139E                     i1_USART_WriteString:	
  5463  139E                     i1l2702:	
  5464                           ;usart.c: 54: while(*str != '\0')
  5465                           
  5466                           ;incstack = 0
  5467                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5468                           
  5469  139E  0872               	movf	i1USART_WriteString@str+1,w
  5470  139F  1283               	bcf	3,5	;RP0=0, select bank0
  5471  13A0  1303               	bcf	3,6	;RP1=0, select bank0
  5472  13A1  00FF               	movwf	127
  5473  13A2  0871               	movf	i1USART_WriteString@str,w
  5474  13A3  0084               	movwf	4
  5475  13A4  120A  158A  2000  160A  118A  	fcall	stringtab
  5476  13A9  3800               	iorlw	0
  5477  13AA  1903               	btfsc	3,2
  5478  13AB  0008               	return
  5479                           
  5480                           ;usart.c: 55: {
  5481                           ;usart.c: 56: USART_WriteChar(*str);
  5482  13AC  0872               	movf	i1USART_WriteString@str+1,w
  5483  13AD  1283               	bcf	3,5	;RP0=0, select bank0
  5484  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  5485  13AF  00FF               	movwf	127
  5486  13B0  0871               	movf	i1USART_WriteString@str,w
  5487  13B1  0084               	movwf	4
  5488  13B2  120A  158A  2000  160A  118A  	fcall	stringtab
  5489  13B7  160A  118A  226B  160A  118A  	fcall	i1_USART_WriteChar
  5490                           
  5491                           ;usart.c: 57: str++;
  5492  13BC  3001               	movlw	1
  5493  13BD  07F1               	addwf	i1USART_WriteString@str,f
  5494  13BE  1803               	skipnc
  5495  13BF  0AF2               	incf	i1USART_WriteString@str+1,f
  5496  13C0  2B9E               	goto	i1l2702
  5497  13C1                     __end_ofi1_USART_WriteString:	
  5498                           
  5499                           	psect	text28
  5500  126B                     __ptext28:	
  5501 ;; *************** function i1_USART_WriteChar *****************
  5502 ;; Defined at:
  5503 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  byte            1    wreg     unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  byte            1    0[COMMON] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;		None               void
  5510 ;; Registers used:
  5511 ;;		wreg
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5517 ;;      Params:         0       0       0       0       0
  5518 ;;      Locals:         1       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0
  5520 ;;      Totals:         1       0       0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		i1_USART_WriteString
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function i1_USART_WriteChar
  5532  126B                     i1_USART_WriteChar:	
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in i1_USART_WriteChar: [wreg]
  5536                           ;i1USART_WriteChar@byte stored from wreg
  5537  126B  00F0               	movwf	i1USART_WriteChar@byte
  5538  126C                     i1l223:	
  5539                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5540                           
  5541  126C  1283               	bcf	3,5	;RP0=0, select bank0
  5542  126D  1303               	bcf	3,6	;RP1=0, select bank0
  5543  126E  1E0C               	btfss	12,4	;volatile
  5544  126F  2A6C               	goto	i1l223
  5545                           
  5546                           ;usart.c: 47: TXREG = byte;
  5547  1270  0870               	movf	i1USART_WriteChar@byte,w
  5548  1271  0099               	movwf	25	;volatile
  5549  1272  0008               	return
  5550  1273                     __end_ofi1_USART_WriteChar:	
  5551                           
  5552                           	psect	text29
  5553  0051                     __ptext29:	
  5554 ;; *************** function _Fuzzy *****************
  5555 ;; Defined at:
  5556 ;;		line 130 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  a               2   48[BANK0 ] int 
  5561 ;;  a               2   46[BANK0 ] int 
  5562 ;;  a               2   44[BANK0 ] int 
  5563 ;;  aumenta         3   56[BANK0 ] float 
  5564 ;;  reduz           3   53[BANK0 ] float 
  5565 ;;  mantem          3   50[BANK0 ] float 
  5566 ;;  tip             3   41[BANK0 ] float 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;		None               void
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         0       0       0       0       0
  5577 ;;      Locals:         0      18       0       0       0
  5578 ;;      Temps:          0       0       0       0       0
  5579 ;;      Totals:         0      18       0       0       0
  5580 ;;Total ram usage:       18 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    3
  5583 ;; This function calls:
  5584 ;;		___ftadd
  5585 ;;		___ftdiv
  5586 ;;		___ftge
  5587 ;;		___ftmul
  5588 ;;		___ftneg
  5589 ;;		___fttol
  5590 ;;		___lwtoft
  5591 ;;		_max_val
  5592 ;;		_trapmf
  5593 ;;		_trimf
  5594 ;;		i1_PWM_DutyCycle2
  5595 ;; This function is called by:
  5596 ;;		_ISR
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _Fuzzy
  5602  0051                     _Fuzzy:	
  5603                           
  5604                           ;main.c: 141: setpoint = (float)pwm;
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5608  0051  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0052  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0053  086E               	movf	_pwm+1,w
  5611  0054  01F9               	clrf	___lwtoft@c+1
  5612  0055  07F9               	addwf	___lwtoft@c+1,f
  5613  0056  086D               	movf	_pwm,w
  5614  0057  01F8               	clrf	___lwtoft@c
  5615  0058  07F8               	addwf	___lwtoft@c,f
  5616  0059  160A  118A  22BD  120A  118A  	fcall	___lwtoft
  5617  005E  0878               	movf	?___lwtoft,w
  5618  005F  1683               	bsf	3,5	;RP0=1, select bank1
  5619  0060  1303               	bcf	3,6	;RP1=0, select bank1
  5620  0061  00E9               	movwf	_setpoint^(0+128)
  5621  0062  0879               	movf	?___lwtoft+1,w
  5622  0063  00EA               	movwf	(_setpoint+1)^(0+128)
  5623  0064  087A               	movf	?___lwtoft+2,w
  5624  0065  00EB               	movwf	(_setpoint+2)^(0+128)
  5625                           
  5626                           ;main.c: 143: float mantem = 1100;
  5627  0066  3080               	movlw	128
  5628  0067  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0068  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0069  00D2               	movwf	Fuzzy@mantem
  5631  006A  3089               	movlw	137
  5632  006B  00D3               	movwf	Fuzzy@mantem+1
  5633  006C  3044               	movlw	68
  5634  006D  00D4               	movwf	Fuzzy@mantem+2
  5635                           
  5636                           ;main.c: 144: float reduz = 2200;
  5637  006E  3080               	movlw	128
  5638  006F  00D5               	movwf	Fuzzy@reduz
  5639  0070  3009               	movlw	9
  5640  0071  00D6               	movwf	Fuzzy@reduz+1
  5641  0072  3045               	movlw	69
  5642  0073  00D7               	movwf	Fuzzy@reduz+2
  5643                           
  5644                           ;main.c: 145: float aumenta = 3300;
  5645  0074  3040               	movlw	64
  5646  0075  00D8               	movwf	Fuzzy@aumenta
  5647  0076  304E               	movlw	78
  5648  0077  00D9               	movwf	Fuzzy@aumenta+1
  5649  0078  3045               	movlw	69
  5650  0079  00DA               	movwf	Fuzzy@aumenta+2
  5651                           
  5652                           ;main.c: 146: float tip;
  5653                           ;main.c: 147: fitemp =0;
  5654  007A  3000               	movlw	0
  5655  007B  00DF               	movwf	_fitemp
  5656  007C  3000               	movlw	0
  5657  007D  00E0               	movwf	_fitemp+1
  5658  007E  3000               	movlw	0
  5659  007F  00E1               	movwf	_fitemp+2
  5660                           
  5661                           ;main.c: 150: temp = (setpoint - tf);
  5662  0080  1683               	bsf	3,5	;RP0=1, select bank1
  5663  0081  1303               	bcf	3,6	;RP1=0, select bank1
  5664  0082  0869               	movf	_setpoint^(0+128),w
  5665  0083  00F8               	movwf	___ftadd@f1
  5666  0084  086A               	movf	(_setpoint+1)^(0+128),w
  5667  0085  00F9               	movwf	___ftadd@f1+1
  5668  0086  086B               	movf	(_setpoint+2)^(0+128),w
  5669  0087  00FA               	movwf	___ftadd@f1+2
  5670  0088  082F               	movf	_tf^(0+128),w
  5671  0089  00F0               	movwf	___ftneg@f1
  5672  008A  0830               	movf	(_tf+1)^(0+128),w
  5673  008B  00F1               	movwf	___ftneg@f1+1
  5674  008C  0831               	movf	(_tf+2)^(0+128),w
  5675  008D  00F2               	movwf	___ftneg@f1+2
  5676  008E  160A  118A  2263  120A  118A  	fcall	___ftneg
  5677  0093  0870               	movf	?___ftneg,w
  5678  0094  00FB               	movwf	___ftadd@f2
  5679  0095  0871               	movf	?___ftneg+1,w
  5680  0096  00FC               	movwf	___ftadd@f2+1
  5681  0097  0872               	movf	?___ftneg+2,w
  5682  0098  00FD               	movwf	___ftadd@f2+2
  5683  0099  120A  158A  21AA  120A  118A  	fcall	___ftadd
  5684  009E  0878               	movf	?___ftadd,w
  5685  009F  1283               	bcf	3,5	;RP0=0, select bank0
  5686  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  5687  00A1  00E2               	movwf	_temp
  5688  00A2  0879               	movf	?___ftadd+1,w
  5689  00A3  00E3               	movwf	_temp+1
  5690  00A4  087A               	movf	?___ftadd+2,w
  5691  00A5  00E4               	movwf	_temp+2
  5692                           
  5693                           ;main.c: 151: temp = (temp/100)*-1;
  5694  00A6  3000               	movlw	0
  5695  00A7  00B7               	movwf	___ftmul@f1
  5696  00A8  3080               	movlw	128
  5697  00A9  00B8               	movwf	___ftmul@f1+1
  5698  00AA  30BF               	movlw	191
  5699  00AB  00B9               	movwf	___ftmul@f1+2
  5700  00AC  3000               	movlw	0
  5701  00AD  00A7               	movwf	___ftdiv@f2
  5702  00AE  30C8               	movlw	200
  5703  00AF  00A8               	movwf	___ftdiv@f2+1
  5704  00B0  3042               	movlw	66
  5705  00B1  00A9               	movwf	___ftdiv@f2+2
  5706  00B2  0862               	movf	_temp,w
  5707  00B3  00AA               	movwf	___ftdiv@f1
  5708  00B4  0863               	movf	_temp+1,w
  5709  00B5  00AB               	movwf	___ftdiv@f1+1
  5710  00B6  0864               	movf	_temp+2,w
  5711  00B7  00AC               	movwf	___ftdiv@f1+2
  5712  00B8  120A  158A  20F2  120A  118A  	fcall	___ftdiv
  5713  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  5714  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  5715  00BF  0827               	movf	?___ftdiv,w
  5716  00C0  00BA               	movwf	___ftmul@f2
  5717  00C1  0828               	movf	?___ftdiv+1,w
  5718  00C2  00BB               	movwf	___ftmul@f2+1
  5719  00C3  0829               	movf	?___ftdiv+2,w
  5720  00C4  00BC               	movwf	___ftmul@f2+2
  5721  00C5  120A  118A  2729  120A  118A  	fcall	___ftmul
  5722  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  5723  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  5724  00CC  0837               	movf	?___ftmul,w
  5725  00CD  00E2               	movwf	_temp
  5726  00CE  0838               	movf	?___ftmul+1,w
  5727  00CF  00E3               	movwf	_temp+1
  5728  00D0  0839               	movf	?___ftmul+2,w
  5729  00D1  00E4               	movwf	_temp+2
  5730                           
  5731                           ;main.c: 153: deltaV = temp;
  5732  00D2  0862               	movf	_temp,w
  5733  00D3  00F0               	movwf	___fttol@f1
  5734  00D4  0863               	movf	_temp+1,w
  5735  00D5  00F1               	movwf	___fttol@f1+1
  5736  00D6  0864               	movf	_temp+2,w
  5737  00D7  00F2               	movwf	___fttol@f1+2
  5738  00D8  160A  118A  26E5  120A  118A  	fcall	___fttol
  5739  00DD  0871               	movf	?___fttol+1,w
  5740  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  5741  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  5742  00E0  01EC               	clrf	_deltaV+1
  5743  00E1  07EC               	addwf	_deltaV+1,f
  5744  00E2  0870               	movf	?___fttol,w
  5745  00E3  01EB               	clrf	_deltaV
  5746  00E4  07EB               	addwf	_deltaV,f
  5747                           
  5748                           ;main.c: 156: if (temp >90) temp = 90;
  5749  00E5  3000               	movlw	0
  5750  00E6  00F0               	movwf	___ftge@ff1
  5751  00E7  30B4               	movlw	180
  5752  00E8  00F1               	movwf	___ftge@ff1+1
  5753  00E9  3042               	movlw	66
  5754  00EA  00F2               	movwf	___ftge@ff1+2
  5755  00EB  0862               	movf	_temp,w
  5756  00EC  00F3               	movwf	___ftge@ff2
  5757  00ED  0863               	movf	_temp+1,w
  5758  00EE  00F4               	movwf	___ftge@ff2+1
  5759  00EF  0864               	movf	_temp+2,w
  5760  00F0  00F5               	movwf	___ftge@ff2+2
  5761  00F1  160A  118A  25B5  120A  118A  	fcall	___ftge
  5762  00F6  1803               	btfsc	3,0
  5763  00F7  2900               	goto	i1l2720
  5764  00F8  3000               	movlw	0
  5765  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  5766  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  5767  00FB  00E2               	movwf	_temp
  5768  00FC  30B4               	movlw	180
  5769  00FD  00E3               	movwf	_temp+1
  5770  00FE  3042               	movlw	66
  5771  00FF  00E4               	movwf	_temp+2
  5772  0100                     i1l2720:	
  5773                           
  5774                           ;main.c: 157: if (temp <0) temp = 0;
  5775  0100  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0101  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0102  0862               	movf	_temp,w
  5778  0103  00F0               	movwf	___ftge@ff1
  5779  0104  0863               	movf	_temp+1,w
  5780  0105  00F1               	movwf	___ftge@ff1+1
  5781  0106  0864               	movf	_temp+2,w
  5782  0107  00F2               	movwf	___ftge@ff1+2
  5783  0108  3000               	movlw	0
  5784  0109  00F3               	movwf	___ftge@ff2
  5785  010A  3000               	movlw	0
  5786  010B  00F4               	movwf	___ftge@ff2+1
  5787  010C  3000               	movlw	0
  5788  010D  00F5               	movwf	___ftge@ff2+2
  5789  010E  160A  118A  25B5  120A  118A  	fcall	___ftge
  5790  0113  1803               	btfsc	3,0
  5791  0114  291D               	goto	i1l2724
  5792  0115  3000               	movlw	0
  5793  0116  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0117  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0118  00E2               	movwf	_temp
  5796  0119  3000               	movlw	0
  5797  011A  00E3               	movwf	_temp+1
  5798  011B  3000               	movlw	0
  5799  011C  00E4               	movwf	_temp+2
  5800  011D                     i1l2724:	
  5801                           
  5802                           ;main.c: 160: if (temp < 25)
  5803  011D  1283               	bcf	3,5	;RP0=0, select bank0
  5804  011E  1303               	bcf	3,6	;RP1=0, select bank0
  5805  011F  0862               	movf	_temp,w
  5806  0120  00F0               	movwf	___ftge@ff1
  5807  0121  0863               	movf	_temp+1,w
  5808  0122  00F1               	movwf	___ftge@ff1+1
  5809  0123  0864               	movf	_temp+2,w
  5810  0124  00F2               	movwf	___ftge@ff1+2
  5811  0125  3000               	movlw	0
  5812  0126  00F3               	movwf	___ftge@ff2
  5813  0127  30C8               	movlw	200
  5814  0128  00F4               	movwf	___ftge@ff2+1
  5815  0129  3041               	movlw	65
  5816  012A  00F5               	movwf	___ftge@ff2+2
  5817  012B  160A  118A  25B5  120A  118A  	fcall	___ftge
  5818  0130  1803               	btfsc	3,0
  5819  0131  2A31               	goto	i1l2748
  5820                           
  5821                           ;main.c: 161: {
  5822                           ;main.c: 165: fitemp = trapmf(temp, 0,0,13,32);
  5823  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5825  0134  0862               	movf	_temp,w
  5826  0135  00B7               	movwf	trapmf@x
  5827  0136  0863               	movf	_temp+1,w
  5828  0137  00B8               	movwf	trapmf@x+1
  5829  0138  0864               	movf	_temp+2,w
  5830  0139  00B9               	movwf	trapmf@x+2
  5831  013A  3000               	movlw	0
  5832  013B  00BA               	movwf	trapmf@a
  5833  013C  3000               	movlw	0
  5834  013D  00BB               	movwf	trapmf@a+1
  5835  013E  3000               	movlw	0
  5836  013F  00BC               	movwf	trapmf@a+2
  5837  0140  3000               	movlw	0
  5838  0141  00BD               	movwf	trapmf@b
  5839  0142  3000               	movlw	0
  5840  0143  00BE               	movwf	trapmf@b+1
  5841  0144  3000               	movlw	0
  5842  0145  00BF               	movwf	trapmf@b+2
  5843  0146  3000               	movlw	0
  5844  0147  00C0               	movwf	trapmf@c
  5845  0148  3050               	movlw	80
  5846  0149  00C1               	movwf	trapmf@c+1
  5847  014A  3041               	movlw	65
  5848  014B  00C2               	movwf	trapmf@c+2
  5849  014C  3000               	movlw	0
  5850  014D  00C3               	movwf	trapmf@d
  5851  014E  3000               	movlw	0
  5852  014F  00C4               	movwf	trapmf@d+1
  5853  0150  3042               	movlw	66
  5854  0151  00C5               	movwf	trapmf@d+2
  5855  0152  120A  158A  23CF  120A  118A  	fcall	_trapmf
  5856  0157  1283               	bcf	3,5	;RP0=0, select bank0
  5857  0158  1303               	bcf	3,6	;RP1=0, select bank0
  5858  0159  0837               	movf	?_trapmf,w
  5859  015A  00DF               	movwf	_fitemp
  5860  015B  0838               	movf	?_trapmf+1,w
  5861  015C  00E0               	movwf	_fitemp+1
  5862  015D  0839               	movf	?_trapmf+2,w
  5863  015E  00E1               	movwf	_fitemp+2
  5864                           
  5865                           ;main.c: 168: fop_rule1 = max_val(fitemp,0.1);
  5866  015F  085F               	movf	_fitemp,w
  5867  0160  00A0               	movwf	max_val@a
  5868  0161  0860               	movf	_fitemp+1,w
  5869  0162  00A1               	movwf	max_val@a+1
  5870  0163  0861               	movf	_fitemp+2,w
  5871  0164  00A2               	movwf	max_val@a+2
  5872  0165  30CD               	movlw	205
  5873  0166  00A3               	movwf	max_val@b
  5874  0167  30CC               	movlw	204
  5875  0168  00A4               	movwf	max_val@b+1
  5876  0169  303D               	movlw	61
  5877  016A  00A5               	movwf	max_val@b+2
  5878  016B  160A  118A  231E  120A  118A  	fcall	_max_val
  5879  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0172  0820               	movf	?_max_val,w
  5882  0173  1683               	bsf	3,5	;RP0=1, select bank1
  5883  0174  1303               	bcf	3,6	;RP1=0, select bank1
  5884  0175  00A3               	movwf	_fop_rule1^(0+128)
  5885  0176  1283               	bcf	3,5	;RP0=0, select bank0
  5886  0177  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0178  0821               	movf	?_max_val+1,w
  5888  0179  1683               	bsf	3,5	;RP0=1, select bank1
  5889  017A  1303               	bcf	3,6	;RP1=0, select bank1
  5890  017B  00A4               	movwf	(_fop_rule1+1)^(0+128)
  5891  017C  1283               	bcf	3,5	;RP0=0, select bank0
  5892  017D  1303               	bcf	3,6	;RP1=0, select bank0
  5893  017E  0822               	movf	?_max_val+2,w
  5894  017F  1683               	bsf	3,5	;RP0=1, select bank1
  5895  0180  1303               	bcf	3,6	;RP1=0, select bank1
  5896  0181  00A5               	movwf	(_fop_rule1+2)^(0+128)
  5897                           
  5898                           ;main.c: 171: x=0;
  5899  0182  3000               	movlw	0
  5900  0183  1283               	bcf	3,5	;RP0=0, select bank0
  5901  0184  1303               	bcf	3,6	;RP1=0, select bank0
  5902  0185  00E5               	movwf	_x
  5903  0186  3000               	movlw	0
  5904  0187  00E6               	movwf	_x+1
  5905  0188  3000               	movlw	0
  5906  0189  00E7               	movwf	_x+2
  5907                           
  5908                           ;main.c: 172: y=0;
  5909  018A  3000               	movlw	0
  5910  018B  00E8               	movwf	_y
  5911  018C  3000               	movlw	0
  5912  018D  00E9               	movwf	_y+1
  5913  018E  3000               	movlw	0
  5914  018F  00EA               	movwf	_y+2
  5915                           
  5916                           ;main.c: 173: for (int a=0; a<=90; a++)
  5917  0190  01CC               	clrf	Fuzzy@a
  5918  0191  01CD               	clrf	Fuzzy@a+1
  5919  0192  084D               	movf	Fuzzy@a+1,w
  5920  0193  3A80               	xorlw	128
  5921  0194  00FF               	movwf	127
  5922  0195  3080               	movlw	128
  5923  0196  027F               	subwf	127,w
  5924  0197  1D03               	skipz
  5925  0198  299B               	goto	u333_25
  5926  0199  305B               	movlw	91
  5927  019A  024C               	subwf	Fuzzy@a,w
  5928  019B                     u333_25:	
  5929  019B  1803               	btfsc	3,0
  5930  019C  2A31               	goto	i1l2748
  5931  019D                     i1l2738:	
  5932                           
  5933                           ;main.c: 174: {
  5934                           ;main.c: 175: y = trapmf(x,0,0,13,32);
  5935  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5936  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5937  019F  0865               	movf	_x,w
  5938  01A0  00B7               	movwf	trapmf@x
  5939  01A1  0866               	movf	_x+1,w
  5940  01A2  00B8               	movwf	trapmf@x+1
  5941  01A3  0867               	movf	_x+2,w
  5942  01A4  00B9               	movwf	trapmf@x+2
  5943  01A5  3000               	movlw	0
  5944  01A6  00BA               	movwf	trapmf@a
  5945  01A7  3000               	movlw	0
  5946  01A8  00BB               	movwf	trapmf@a+1
  5947  01A9  3000               	movlw	0
  5948  01AA  00BC               	movwf	trapmf@a+2
  5949  01AB  3000               	movlw	0
  5950  01AC  00BD               	movwf	trapmf@b
  5951  01AD  3000               	movlw	0
  5952  01AE  00BE               	movwf	trapmf@b+1
  5953  01AF  3000               	movlw	0
  5954  01B0  00BF               	movwf	trapmf@b+2
  5955  01B1  3000               	movlw	0
  5956  01B2  00C0               	movwf	trapmf@c
  5957  01B3  3050               	movlw	80
  5958  01B4  00C1               	movwf	trapmf@c+1
  5959  01B5  3041               	movlw	65
  5960  01B6  00C2               	movwf	trapmf@c+2
  5961  01B7  3000               	movlw	0
  5962  01B8  00C3               	movwf	trapmf@d
  5963  01B9  3000               	movlw	0
  5964  01BA  00C4               	movwf	trapmf@d+1
  5965  01BB  3042               	movlw	66
  5966  01BC  00C5               	movwf	trapmf@d+2
  5967  01BD  120A  158A  23CF  120A  118A  	fcall	_trapmf
  5968  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  5969  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  5970  01C4  0837               	movf	?_trapmf,w
  5971  01C5  00E8               	movwf	_y
  5972  01C6  0838               	movf	?_trapmf+1,w
  5973  01C7  00E9               	movwf	_y+1
  5974  01C8  0839               	movf	?_trapmf+2,w
  5975  01C9  00EA               	movwf	_y+2
  5976                           
  5977                           ;main.c: 177: if (y > fop_rule1)
  5978  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  5979  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  5980  01CC  0823               	movf	_fop_rule1^(0+128),w
  5981  01CD  00F0               	movwf	___ftge@ff1
  5982  01CE  0824               	movf	(_fop_rule1+1)^(0+128),w
  5983  01CF  00F1               	movwf	___ftge@ff1+1
  5984  01D0  0825               	movf	(_fop_rule1+2)^(0+128),w
  5985  01D1  00F2               	movwf	___ftge@ff1+2
  5986  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  5987  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  5988  01D4  0868               	movf	_y,w
  5989  01D5  00F3               	movwf	___ftge@ff2
  5990  01D6  0869               	movf	_y+1,w
  5991  01D7  00F4               	movwf	___ftge@ff2+1
  5992  01D8  086A               	movf	_y+2,w
  5993  01D9  00F5               	movwf	___ftge@ff2+2
  5994  01DA  160A  118A  25B5  120A  118A  	fcall	___ftge
  5995  01DF  1803               	btfsc	3,0
  5996  01E0  29EC               	goto	i1l2742
  5997                           
  5998                           ;main.c: 178: {
  5999                           ;main.c: 179: mantem += fop_rule1;
  6000  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  6001  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  6002  01E3  0823               	movf	_fop_rule1^(0+128),w
  6003  01E4  00F8               	movwf	___ftadd@f1
  6004  01E5  0824               	movf	(_fop_rule1+1)^(0+128),w
  6005  01E6  00F9               	movwf	___ftadd@f1+1
  6006  01E7  0825               	movf	(_fop_rule1+2)^(0+128),w
  6007  01E8  00FA               	movwf	___ftadd@f1+2
  6008  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  6009  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  6010  01EB  29F4               	goto	L3
  6011  01EC                     i1l2742:	
  6012                           ;main.c: 180: }
  6013                           
  6014                           
  6015                           ;main.c: 181: else
  6016                           ;main.c: 182: {
  6017                           ;main.c: 183: mantem += y;
  6018  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6019  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  6020  01EE  0868               	movf	_y,w
  6021  01EF  00F8               	movwf	___ftadd@f1
  6022  01F0  0869               	movf	_y+1,w
  6023  01F1  00F9               	movwf	___ftadd@f1+1
  6024  01F2  086A               	movf	_y+2,w
  6025  01F3  00FA               	movwf	___ftadd@f1+2
  6026  01F4                     L3:	
  6027  01F4  0852               	movf	Fuzzy@mantem,w
  6028  01F5  00FB               	movwf	___ftadd@f2
  6029  01F6  0853               	movf	Fuzzy@mantem+1,w
  6030  01F7  00FC               	movwf	___ftadd@f2+1
  6031  01F8  0854               	movf	Fuzzy@mantem+2,w
  6032  01F9  00FD               	movwf	___ftadd@f2+2
  6033  01FA  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6034  01FF  0878               	movf	?___ftadd,w
  6035  0200  1283               	bcf	3,5	;RP0=0, select bank0
  6036  0201  1303               	bcf	3,6	;RP1=0, select bank0
  6037  0202  00D2               	movwf	Fuzzy@mantem
  6038  0203  0879               	movf	?___ftadd+1,w
  6039  0204  00D3               	movwf	Fuzzy@mantem+1
  6040  0205  087A               	movf	?___ftadd+2,w
  6041  0206  00D4               	movwf	Fuzzy@mantem+2
  6042                           
  6043                           ;main.c: 184: }
  6044                           ;main.c: 186: x=x+1;
  6045  0207  3000               	movlw	0
  6046  0208  00F8               	movwf	___ftadd@f1
  6047  0209  3080               	movlw	128
  6048  020A  00F9               	movwf	___ftadd@f1+1
  6049  020B  303F               	movlw	63
  6050  020C  00FA               	movwf	___ftadd@f1+2
  6051  020D  0865               	movf	_x,w
  6052  020E  00FB               	movwf	___ftadd@f2
  6053  020F  0866               	movf	_x+1,w
  6054  0210  00FC               	movwf	___ftadd@f2+1
  6055  0211  0867               	movf	_x+2,w
  6056  0212  00FD               	movwf	___ftadd@f2+2
  6057  0213  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6058  0218  0878               	movf	?___ftadd,w
  6059  0219  1283               	bcf	3,5	;RP0=0, select bank0
  6060  021A  1303               	bcf	3,6	;RP1=0, select bank0
  6061  021B  00E5               	movwf	_x
  6062  021C  0879               	movf	?___ftadd+1,w
  6063  021D  00E6               	movwf	_x+1
  6064  021E  087A               	movf	?___ftadd+2,w
  6065  021F  00E7               	movwf	_x+2
  6066  0220  3001               	movlw	1
  6067  0221  07CC               	addwf	Fuzzy@a,f
  6068  0222  1803               	skipnc
  6069  0223  0ACD               	incf	Fuzzy@a+1,f
  6070  0224  3000               	movlw	0
  6071  0225  07CD               	addwf	Fuzzy@a+1,f
  6072  0226  084D               	movf	Fuzzy@a+1,w
  6073  0227  3A80               	xorlw	128
  6074  0228  00FF               	movwf	127
  6075  0229  3080               	movlw	128
  6076  022A  027F               	subwf	127,w
  6077  022B  1D03               	skipz
  6078  022C  2A2F               	goto	u335_25
  6079  022D  305B               	movlw	91
  6080  022E  024C               	subwf	Fuzzy@a,w
  6081  022F                     u335_25:	
  6082  022F  1C03               	skipc
  6083  0230  299D               	goto	i1l2738
  6084  0231                     i1l2748:	
  6085                           
  6086                           ;main.c: 187: }
  6087                           ;main.c: 189: }
  6088                           ;main.c: 195: if ((temp > 20) && (temp < 70))
  6089  0231  3000               	movlw	0
  6090  0232  00F0               	movwf	___ftge@ff1
  6091  0233  30A0               	movlw	160
  6092  0234  00F1               	movwf	___ftge@ff1+1
  6093  0235  3041               	movlw	65
  6094  0236  00F2               	movwf	___ftge@ff1+2
  6095  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0238  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0239  0862               	movf	_temp,w
  6098  023A  00F3               	movwf	___ftge@ff2
  6099  023B  0863               	movf	_temp+1,w
  6100  023C  00F4               	movwf	___ftge@ff2+1
  6101  023D  0864               	movf	_temp+2,w
  6102  023E  00F5               	movwf	___ftge@ff2+2
  6103  023F  160A  118A  25B5  120A  118A  	fcall	___ftge
  6104  0244  1803               	btfsc	3,0
  6105  0245  2B4C               	goto	i1l2774
  6106  0246  1283               	bcf	3,5	;RP0=0, select bank0
  6107  0247  1303               	bcf	3,6	;RP1=0, select bank0
  6108  0248  0862               	movf	_temp,w
  6109  0249  00F0               	movwf	___ftge@ff1
  6110  024A  0863               	movf	_temp+1,w
  6111  024B  00F1               	movwf	___ftge@ff1+1
  6112  024C  0864               	movf	_temp+2,w
  6113  024D  00F2               	movwf	___ftge@ff1+2
  6114  024E  3000               	movlw	0
  6115  024F  00F3               	movwf	___ftge@ff2
  6116  0250  308C               	movlw	140
  6117  0251  00F4               	movwf	___ftge@ff2+1
  6118  0252  3042               	movlw	66
  6119  0253  00F5               	movwf	___ftge@ff2+2
  6120  0254  160A  118A  25B5  120A  118A  	fcall	___ftge
  6121  0259  1803               	btfsc	3,0
  6122  025A  2B4C               	goto	i1l2774
  6123                           
  6124                           ;main.c: 196: {
  6125                           ;main.c: 199: fitemp = trimf(temp, 9, 45, 81);
  6126  025B  1283               	bcf	3,5	;RP0=0, select bank0
  6127  025C  1303               	bcf	3,6	;RP1=0, select bank0
  6128  025D  0862               	movf	_temp,w
  6129  025E  00B7               	movwf	trimf@x
  6130  025F  0863               	movf	_temp+1,w
  6131  0260  00B8               	movwf	trimf@x+1
  6132  0261  0864               	movf	_temp+2,w
  6133  0262  00B9               	movwf	trimf@x+2
  6134  0263  3000               	movlw	0
  6135  0264  00BA               	movwf	trimf@a
  6136  0265  3010               	movlw	16
  6137  0266  00BB               	movwf	trimf@a+1
  6138  0267  3041               	movlw	65
  6139  0268  00BC               	movwf	trimf@a+2
  6140  0269  3000               	movlw	0
  6141  026A  00BD               	movwf	trimf@b
  6142  026B  3034               	movlw	52
  6143  026C  00BE               	movwf	trimf@b+1
  6144  026D  3042               	movlw	66
  6145  026E  00BF               	movwf	trimf@b+2
  6146  026F  3000               	movlw	0
  6147  0270  00C0               	movwf	trimf@c
  6148  0271  30A2               	movlw	162
  6149  0272  00C1               	movwf	trimf@c+1
  6150  0273  3042               	movlw	66
  6151  0274  00C2               	movwf	trimf@c+2
  6152  0275  120A  158A  22B1  120A  118A  	fcall	_trimf
  6153  027A  1283               	bcf	3,5	;RP0=0, select bank0
  6154  027B  1303               	bcf	3,6	;RP1=0, select bank0
  6155  027C  0837               	movf	?_trimf,w
  6156  027D  00DF               	movwf	_fitemp
  6157  027E  0838               	movf	?_trimf+1,w
  6158  027F  00E0               	movwf	_fitemp+1
  6159  0280  0839               	movf	?_trimf+2,w
  6160  0281  00E1               	movwf	_fitemp+2
  6161                           
  6162                           ;main.c: 202: fop_rule2 = max_val(fitemp,0.1);
  6163  0282  085F               	movf	_fitemp,w
  6164  0283  00A0               	movwf	max_val@a
  6165  0284  0860               	movf	_fitemp+1,w
  6166  0285  00A1               	movwf	max_val@a+1
  6167  0286  0861               	movf	_fitemp+2,w
  6168  0287  00A2               	movwf	max_val@a+2
  6169  0288  30CD               	movlw	205
  6170  0289  00A3               	movwf	max_val@b
  6171  028A  30CC               	movlw	204
  6172  028B  00A4               	movwf	max_val@b+1
  6173  028C  303D               	movlw	61
  6174  028D  00A5               	movwf	max_val@b+2
  6175  028E  160A  118A  231E  120A  118A  	fcall	_max_val
  6176  0293  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0294  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0295  0820               	movf	?_max_val,w
  6179  0296  1683               	bsf	3,5	;RP0=1, select bank1
  6180  0297  1303               	bcf	3,6	;RP1=0, select bank1
  6181  0298  00A6               	movwf	_fop_rule2^(0+128)
  6182  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6183  029A  1303               	bcf	3,6	;RP1=0, select bank0
  6184  029B  0821               	movf	?_max_val+1,w
  6185  029C  1683               	bsf	3,5	;RP0=1, select bank1
  6186  029D  1303               	bcf	3,6	;RP1=0, select bank1
  6187  029E  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6188  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6189  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  6190  02A1  0822               	movf	?_max_val+2,w
  6191  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  6192  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  6193  02A4  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6194                           
  6195                           ;main.c: 205: x=0;
  6196  02A5  3000               	movlw	0
  6197  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  6198  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  6199  02A8  00E5               	movwf	_x
  6200  02A9  3000               	movlw	0
  6201  02AA  00E6               	movwf	_x+1
  6202  02AB  3000               	movlw	0
  6203  02AC  00E7               	movwf	_x+2
  6204                           
  6205                           ;main.c: 206: y=0;
  6206  02AD  3000               	movlw	0
  6207  02AE  00E8               	movwf	_y
  6208  02AF  3000               	movlw	0
  6209  02B0  00E9               	movwf	_y+1
  6210  02B1  3000               	movlw	0
  6211  02B2  00EA               	movwf	_y+2
  6212                           
  6213                           ;main.c: 207: for (int a=0; a<=90; a++)
  6214  02B3  01CE               	clrf	Fuzzy@a_233
  6215  02B4  01CF               	clrf	Fuzzy@a_233+1
  6216  02B5  084F               	movf	Fuzzy@a_233+1,w
  6217  02B6  3A80               	xorlw	128
  6218  02B7  00FF               	movwf	127
  6219  02B8  3080               	movlw	128
  6220  02B9  027F               	subwf	127,w
  6221  02BA  1D03               	skipz
  6222  02BB  2ABE               	goto	u338_25
  6223  02BC  305B               	movlw	91
  6224  02BD  024E               	subwf	Fuzzy@a_233,w
  6225  02BE                     u338_25:	
  6226  02BE  1803               	btfsc	3,0
  6227  02BF  2B4C               	goto	i1l2774
  6228  02C0                     i1l2764:	
  6229                           
  6230                           ;main.c: 208: {
  6231                           ;main.c: 209: y = trimf(x, 9, 45, 81);
  6232  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  6233  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  6234  02C2  0865               	movf	_x,w
  6235  02C3  00B7               	movwf	trimf@x
  6236  02C4  0866               	movf	_x+1,w
  6237  02C5  00B8               	movwf	trimf@x+1
  6238  02C6  0867               	movf	_x+2,w
  6239  02C7  00B9               	movwf	trimf@x+2
  6240  02C8  3000               	movlw	0
  6241  02C9  00BA               	movwf	trimf@a
  6242  02CA  3010               	movlw	16
  6243  02CB  00BB               	movwf	trimf@a+1
  6244  02CC  3041               	movlw	65
  6245  02CD  00BC               	movwf	trimf@a+2
  6246  02CE  3000               	movlw	0
  6247  02CF  00BD               	movwf	trimf@b
  6248  02D0  3034               	movlw	52
  6249  02D1  00BE               	movwf	trimf@b+1
  6250  02D2  3042               	movlw	66
  6251  02D3  00BF               	movwf	trimf@b+2
  6252  02D4  3000               	movlw	0
  6253  02D5  00C0               	movwf	trimf@c
  6254  02D6  30A2               	movlw	162
  6255  02D7  00C1               	movwf	trimf@c+1
  6256  02D8  3042               	movlw	66
  6257  02D9  00C2               	movwf	trimf@c+2
  6258  02DA  120A  158A  22B1  120A  118A  	fcall	_trimf
  6259  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6260  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  6261  02E1  0837               	movf	?_trimf,w
  6262  02E2  00E8               	movwf	_y
  6263  02E3  0838               	movf	?_trimf+1,w
  6264  02E4  00E9               	movwf	_y+1
  6265  02E5  0839               	movf	?_trimf+2,w
  6266  02E6  00EA               	movwf	_y+2
  6267                           
  6268                           ;main.c: 211: if (y >= fop_rule2)
  6269  02E7  0868               	movf	_y,w
  6270  02E8  00F0               	movwf	___ftge@ff1
  6271  02E9  0869               	movf	_y+1,w
  6272  02EA  00F1               	movwf	___ftge@ff1+1
  6273  02EB  086A               	movf	_y+2,w
  6274  02EC  00F2               	movwf	___ftge@ff1+2
  6275  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  6276  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  6277  02EF  0826               	movf	_fop_rule2^(0+128),w
  6278  02F0  00F3               	movwf	___ftge@ff2
  6279  02F1  0827               	movf	(_fop_rule2+1)^(0+128),w
  6280  02F2  00F4               	movwf	___ftge@ff2+1
  6281  02F3  0828               	movf	(_fop_rule2+2)^(0+128),w
  6282  02F4  00F5               	movwf	___ftge@ff2+2
  6283  02F5  160A  118A  25B5  120A  118A  	fcall	___ftge
  6284  02FA  1C03               	btfss	3,0
  6285  02FB  2B07               	goto	i1l2768
  6286                           
  6287                           ;main.c: 212: {
  6288                           ;main.c: 213: reduz += fop_rule2;
  6289  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  6290  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  6291  02FE  0826               	movf	_fop_rule2^(0+128),w
  6292  02FF  00F8               	movwf	___ftadd@f1
  6293  0300  0827               	movf	(_fop_rule2+1)^(0+128),w
  6294  0301  00F9               	movwf	___ftadd@f1+1
  6295  0302  0828               	movf	(_fop_rule2+2)^(0+128),w
  6296  0303  00FA               	movwf	___ftadd@f1+2
  6297  0304  1283               	bcf	3,5	;RP0=0, select bank0
  6298  0305  1303               	bcf	3,6	;RP1=0, select bank0
  6299  0306  2B0F               	goto	L4
  6300  0307                     i1l2768:	
  6301                           ;main.c: 214: }
  6302                           
  6303                           
  6304                           ;main.c: 215: else
  6305                           ;main.c: 216: {
  6306                           ;main.c: 217: reduz += y;
  6307  0307  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0308  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0309  0868               	movf	_y,w
  6310  030A  00F8               	movwf	___ftadd@f1
  6311  030B  0869               	movf	_y+1,w
  6312  030C  00F9               	movwf	___ftadd@f1+1
  6313  030D  086A               	movf	_y+2,w
  6314  030E  00FA               	movwf	___ftadd@f1+2
  6315  030F                     L4:	
  6316  030F  0855               	movf	Fuzzy@reduz,w
  6317  0310  00FB               	movwf	___ftadd@f2
  6318  0311  0856               	movf	Fuzzy@reduz+1,w
  6319  0312  00FC               	movwf	___ftadd@f2+1
  6320  0313  0857               	movf	Fuzzy@reduz+2,w
  6321  0314  00FD               	movwf	___ftadd@f2+2
  6322  0315  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6323  031A  0878               	movf	?___ftadd,w
  6324  031B  1283               	bcf	3,5	;RP0=0, select bank0
  6325  031C  1303               	bcf	3,6	;RP1=0, select bank0
  6326  031D  00D5               	movwf	Fuzzy@reduz
  6327  031E  0879               	movf	?___ftadd+1,w
  6328  031F  00D6               	movwf	Fuzzy@reduz+1
  6329  0320  087A               	movf	?___ftadd+2,w
  6330  0321  00D7               	movwf	Fuzzy@reduz+2
  6331                           
  6332                           ;main.c: 218: }
  6333                           ;main.c: 220: x=x+1;
  6334  0322  3000               	movlw	0
  6335  0323  00F8               	movwf	___ftadd@f1
  6336  0324  3080               	movlw	128
  6337  0325  00F9               	movwf	___ftadd@f1+1
  6338  0326  303F               	movlw	63
  6339  0327  00FA               	movwf	___ftadd@f1+2
  6340  0328  0865               	movf	_x,w
  6341  0329  00FB               	movwf	___ftadd@f2
  6342  032A  0866               	movf	_x+1,w
  6343  032B  00FC               	movwf	___ftadd@f2+1
  6344  032C  0867               	movf	_x+2,w
  6345  032D  00FD               	movwf	___ftadd@f2+2
  6346  032E  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6347  0333  0878               	movf	?___ftadd,w
  6348  0334  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0335  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0336  00E5               	movwf	_x
  6351  0337  0879               	movf	?___ftadd+1,w
  6352  0338  00E6               	movwf	_x+1
  6353  0339  087A               	movf	?___ftadd+2,w
  6354  033A  00E7               	movwf	_x+2
  6355  033B  3001               	movlw	1
  6356  033C  07CE               	addwf	Fuzzy@a_233,f
  6357  033D  1803               	skipnc
  6358  033E  0ACF               	incf	Fuzzy@a_233+1,f
  6359  033F  3000               	movlw	0
  6360  0340  07CF               	addwf	Fuzzy@a_233+1,f
  6361  0341  084F               	movf	Fuzzy@a_233+1,w
  6362  0342  3A80               	xorlw	128
  6363  0343  00FF               	movwf	127
  6364  0344  3080               	movlw	128
  6365  0345  027F               	subwf	127,w
  6366  0346  1D03               	skipz
  6367  0347  2B4A               	goto	u340_25
  6368  0348  305B               	movlw	91
  6369  0349  024E               	subwf	Fuzzy@a_233,w
  6370  034A                     u340_25:	
  6371  034A  1C03               	skipc
  6372  034B  2AC0               	goto	i1l2764
  6373  034C                     i1l2774:	
  6374                           
  6375                           ;main.c: 221: }
  6376                           ;main.c: 223: }
  6377                           ;main.c: 229: if (temp > 70 )
  6378  034C  3000               	movlw	0
  6379  034D  00F0               	movwf	___ftge@ff1
  6380  034E  308C               	movlw	140
  6381  034F  00F1               	movwf	___ftge@ff1+1
  6382  0350  3042               	movlw	66
  6383  0351  00F2               	movwf	___ftge@ff1+2
  6384  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6385  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6386  0354  0862               	movf	_temp,w
  6387  0355  00F3               	movwf	___ftge@ff2
  6388  0356  0863               	movf	_temp+1,w
  6389  0357  00F4               	movwf	___ftge@ff2+1
  6390  0358  0864               	movf	_temp+2,w
  6391  0359  00F5               	movwf	___ftge@ff2+2
  6392  035A  160A  118A  25B5  120A  118A  	fcall	___ftge
  6393  035F  1803               	btfsc	3,0
  6394  0360  2C5E               	goto	i1l2798
  6395                           
  6396                           ;main.c: 230: {
  6397                           ;main.c: 233: fitemp = trapmf(temp, 62, 79, 90, 90);
  6398  0361  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0362  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0363  0862               	movf	_temp,w
  6401  0364  00B7               	movwf	trapmf@x
  6402  0365  0863               	movf	_temp+1,w
  6403  0366  00B8               	movwf	trapmf@x+1
  6404  0367  0864               	movf	_temp+2,w
  6405  0368  00B9               	movwf	trapmf@x+2
  6406  0369  3000               	movlw	0
  6407  036A  00BA               	movwf	trapmf@a
  6408  036B  3078               	movlw	120
  6409  036C  00BB               	movwf	trapmf@a+1
  6410  036D  3042               	movlw	66
  6411  036E  00BC               	movwf	trapmf@a+2
  6412  036F  3000               	movlw	0
  6413  0370  00BD               	movwf	trapmf@b
  6414  0371  309E               	movlw	158
  6415  0372  00BE               	movwf	trapmf@b+1
  6416  0373  3042               	movlw	66
  6417  0374  00BF               	movwf	trapmf@b+2
  6418  0375  3000               	movlw	0
  6419  0376  00C0               	movwf	trapmf@c
  6420  0377  30B4               	movlw	180
  6421  0378  00C1               	movwf	trapmf@c+1
  6422  0379  3042               	movlw	66
  6423  037A  00C2               	movwf	trapmf@c+2
  6424  037B  3000               	movlw	0
  6425  037C  00C3               	movwf	trapmf@d
  6426  037D  30B4               	movlw	180
  6427  037E  00C4               	movwf	trapmf@d+1
  6428  037F  3042               	movlw	66
  6429  0380  00C5               	movwf	trapmf@d+2
  6430  0381  120A  158A  23CF  120A  118A  	fcall	_trapmf
  6431  0386  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0387  1303               	bcf	3,6	;RP1=0, select bank0
  6433  0388  0837               	movf	?_trapmf,w
  6434  0389  00DF               	movwf	_fitemp
  6435  038A  0838               	movf	?_trapmf+1,w
  6436  038B  00E0               	movwf	_fitemp+1
  6437  038C  0839               	movf	?_trapmf+2,w
  6438  038D  00E1               	movwf	_fitemp+2
  6439                           
  6440                           ;main.c: 237: fop_rule3 = max_val(fitemp,0.1);
  6441  038E  085F               	movf	_fitemp,w
  6442  038F  00A0               	movwf	max_val@a
  6443  0390  0860               	movf	_fitemp+1,w
  6444  0391  00A1               	movwf	max_val@a+1
  6445  0392  0861               	movf	_fitemp+2,w
  6446  0393  00A2               	movwf	max_val@a+2
  6447  0394  30CD               	movlw	205
  6448  0395  00A3               	movwf	max_val@b
  6449  0396  30CC               	movlw	204
  6450  0397  00A4               	movwf	max_val@b+1
  6451  0398  303D               	movlw	61
  6452  0399  00A5               	movwf	max_val@b+2
  6453  039A  160A  118A  231E  120A  118A  	fcall	_max_val
  6454  039F  1283               	bcf	3,5	;RP0=0, select bank0
  6455  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  6456  03A1  0820               	movf	?_max_val,w
  6457  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  6458  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  6459  03A4  00A9               	movwf	_fop_rule3^(0+128)
  6460  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  6461  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  6462  03A7  0821               	movf	?_max_val+1,w
  6463  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  6464  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  6465  03AA  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6466  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  6467  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  6468  03AD  0822               	movf	?_max_val+2,w
  6469  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  6470  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  6471  03B0  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6472                           
  6473                           ;main.c: 240: x=0;
  6474  03B1  3000               	movlw	0
  6475  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  6476  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  6477  03B4  00E5               	movwf	_x
  6478  03B5  3000               	movlw	0
  6479  03B6  00E6               	movwf	_x+1
  6480  03B7  3000               	movlw	0
  6481  03B8  00E7               	movwf	_x+2
  6482                           
  6483                           ;main.c: 241: y=0;
  6484  03B9  3000               	movlw	0
  6485  03BA  00E8               	movwf	_y
  6486  03BB  3000               	movlw	0
  6487  03BC  00E9               	movwf	_y+1
  6488  03BD  3000               	movlw	0
  6489  03BE  00EA               	movwf	_y+2
  6490                           
  6491                           ;main.c: 242: for (int a=0; a<=90; a++)
  6492  03BF  01D0               	clrf	Fuzzy@a_234
  6493  03C0  01D1               	clrf	Fuzzy@a_234+1
  6494  03C1  0851               	movf	Fuzzy@a_234+1,w
  6495  03C2  3A80               	xorlw	128
  6496  03C3  00FF               	movwf	127
  6497  03C4  3080               	movlw	128
  6498  03C5  027F               	subwf	127,w
  6499  03C6  1D03               	skipz
  6500  03C7  2BCA               	goto	u342_25
  6501  03C8  305B               	movlw	91
  6502  03C9  0250               	subwf	Fuzzy@a_234,w
  6503  03CA                     u342_25:	
  6504  03CA  1803               	btfsc	3,0
  6505  03CB  2C5E               	goto	i1l2798
  6506  03CC                     i1l2788:	
  6507                           
  6508                           ;main.c: 243: {
  6509                           ;main.c: 244: y = trapmf(x, 62, 79, 90, 90);
  6510  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  6511  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  6512  03CE  0865               	movf	_x,w
  6513  03CF  00B7               	movwf	trapmf@x
  6514  03D0  0866               	movf	_x+1,w
  6515  03D1  00B8               	movwf	trapmf@x+1
  6516  03D2  0867               	movf	_x+2,w
  6517  03D3  00B9               	movwf	trapmf@x+2
  6518  03D4  3000               	movlw	0
  6519  03D5  00BA               	movwf	trapmf@a
  6520  03D6  3078               	movlw	120
  6521  03D7  00BB               	movwf	trapmf@a+1
  6522  03D8  3042               	movlw	66
  6523  03D9  00BC               	movwf	trapmf@a+2
  6524  03DA  3000               	movlw	0
  6525  03DB  00BD               	movwf	trapmf@b
  6526  03DC  309E               	movlw	158
  6527  03DD  00BE               	movwf	trapmf@b+1
  6528  03DE  3042               	movlw	66
  6529  03DF  00BF               	movwf	trapmf@b+2
  6530  03E0  3000               	movlw	0
  6531  03E1  00C0               	movwf	trapmf@c
  6532  03E2  30B4               	movlw	180
  6533  03E3  00C1               	movwf	trapmf@c+1
  6534  03E4  3042               	movlw	66
  6535  03E5  00C2               	movwf	trapmf@c+2
  6536  03E6  3000               	movlw	0
  6537  03E7  00C3               	movwf	trapmf@d
  6538  03E8  30B4               	movlw	180
  6539  03E9  00C4               	movwf	trapmf@d+1
  6540  03EA  3042               	movlw	66
  6541  03EB  00C5               	movwf	trapmf@d+2
  6542  03EC  120A  158A  23CF  120A  118A  	fcall	_trapmf
  6543  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6544  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6545  03F3  0837               	movf	?_trapmf,w
  6546  03F4  00E8               	movwf	_y
  6547  03F5  0838               	movf	?_trapmf+1,w
  6548  03F6  00E9               	movwf	_y+1
  6549  03F7  0839               	movf	?_trapmf+2,w
  6550  03F8  00EA               	movwf	_y+2
  6551                           
  6552                           ;main.c: 246: if (y >= fop_rule3)
  6553  03F9  0868               	movf	_y,w
  6554  03FA  00F0               	movwf	___ftge@ff1
  6555  03FB  0869               	movf	_y+1,w
  6556  03FC  00F1               	movwf	___ftge@ff1+1
  6557  03FD  086A               	movf	_y+2,w
  6558  03FE  00F2               	movwf	___ftge@ff1+2
  6559  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  6560  0400  1303               	bcf	3,6	;RP1=0, select bank1
  6561  0401  0829               	movf	_fop_rule3^(0+128),w
  6562  0402  00F3               	movwf	___ftge@ff2
  6563  0403  082A               	movf	(_fop_rule3+1)^(0+128),w
  6564  0404  00F4               	movwf	___ftge@ff2+1
  6565  0405  082B               	movf	(_fop_rule3+2)^(0+128),w
  6566  0406  00F5               	movwf	___ftge@ff2+2
  6567  0407  160A  118A  25B5  120A  118A  	fcall	___ftge
  6568  040C  1C03               	btfss	3,0
  6569  040D  2C19               	goto	i1l2792
  6570                           
  6571                           ;main.c: 247: {
  6572                           ;main.c: 248: aumenta += fop_rule3;
  6573  040E  1683               	bsf	3,5	;RP0=1, select bank1
  6574  040F  1303               	bcf	3,6	;RP1=0, select bank1
  6575  0410  0829               	movf	_fop_rule3^(0+128),w
  6576  0411  00F8               	movwf	___ftadd@f1
  6577  0412  082A               	movf	(_fop_rule3+1)^(0+128),w
  6578  0413  00F9               	movwf	___ftadd@f1+1
  6579  0414  082B               	movf	(_fop_rule3+2)^(0+128),w
  6580  0415  00FA               	movwf	___ftadd@f1+2
  6581  0416  1283               	bcf	3,5	;RP0=0, select bank0
  6582  0417  1303               	bcf	3,6	;RP1=0, select bank0
  6583  0418  2C21               	goto	L5
  6584  0419                     i1l2792:	
  6585                           ;main.c: 249: }
  6586                           
  6587                           
  6588                           ;main.c: 250: else
  6589                           ;main.c: 251: {
  6590                           ;main.c: 252: aumenta += y;
  6591  0419  1283               	bcf	3,5	;RP0=0, select bank0
  6592  041A  1303               	bcf	3,6	;RP1=0, select bank0
  6593  041B  0868               	movf	_y,w
  6594  041C  00F8               	movwf	___ftadd@f1
  6595  041D  0869               	movf	_y+1,w
  6596  041E  00F9               	movwf	___ftadd@f1+1
  6597  041F  086A               	movf	_y+2,w
  6598  0420  00FA               	movwf	___ftadd@f1+2
  6599  0421                     L5:	
  6600  0421  0858               	movf	Fuzzy@aumenta,w
  6601  0422  00FB               	movwf	___ftadd@f2
  6602  0423  0859               	movf	Fuzzy@aumenta+1,w
  6603  0424  00FC               	movwf	___ftadd@f2+1
  6604  0425  085A               	movf	Fuzzy@aumenta+2,w
  6605  0426  00FD               	movwf	___ftadd@f2+2
  6606  0427  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6607  042C  0878               	movf	?___ftadd,w
  6608  042D  1283               	bcf	3,5	;RP0=0, select bank0
  6609  042E  1303               	bcf	3,6	;RP1=0, select bank0
  6610  042F  00D8               	movwf	Fuzzy@aumenta
  6611  0430  0879               	movf	?___ftadd+1,w
  6612  0431  00D9               	movwf	Fuzzy@aumenta+1
  6613  0432  087A               	movf	?___ftadd+2,w
  6614  0433  00DA               	movwf	Fuzzy@aumenta+2
  6615                           
  6616                           ;main.c: 253: }
  6617                           ;main.c: 255: x=x+1;
  6618  0434  3000               	movlw	0
  6619  0435  00F8               	movwf	___ftadd@f1
  6620  0436  3080               	movlw	128
  6621  0437  00F9               	movwf	___ftadd@f1+1
  6622  0438  303F               	movlw	63
  6623  0439  00FA               	movwf	___ftadd@f1+2
  6624  043A  0865               	movf	_x,w
  6625  043B  00FB               	movwf	___ftadd@f2
  6626  043C  0866               	movf	_x+1,w
  6627  043D  00FC               	movwf	___ftadd@f2+1
  6628  043E  0867               	movf	_x+2,w
  6629  043F  00FD               	movwf	___ftadd@f2+2
  6630  0440  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6631  0445  0878               	movf	?___ftadd,w
  6632  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6634  0448  00E5               	movwf	_x
  6635  0449  0879               	movf	?___ftadd+1,w
  6636  044A  00E6               	movwf	_x+1
  6637  044B  087A               	movf	?___ftadd+2,w
  6638  044C  00E7               	movwf	_x+2
  6639  044D  3001               	movlw	1
  6640  044E  07D0               	addwf	Fuzzy@a_234,f
  6641  044F  1803               	skipnc
  6642  0450  0AD1               	incf	Fuzzy@a_234+1,f
  6643  0451  3000               	movlw	0
  6644  0452  07D1               	addwf	Fuzzy@a_234+1,f
  6645  0453  0851               	movf	Fuzzy@a_234+1,w
  6646  0454  3A80               	xorlw	128
  6647  0455  00FF               	movwf	127
  6648  0456  3080               	movlw	128
  6649  0457  027F               	subwf	127,w
  6650  0458  1D03               	skipz
  6651  0459  2C5C               	goto	u344_25
  6652  045A  305B               	movlw	91
  6653  045B  0250               	subwf	Fuzzy@a_234,w
  6654  045C                     u344_25:	
  6655  045C  1C03               	skipc
  6656  045D  2BCC               	goto	i1l2788
  6657  045E                     i1l2798:	
  6658                           
  6659                           ;main.c: 256: }
  6660                           ;main.c: 258: }
  6661                           ;main.c: 261: if (temp < 25)
  6662  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6663  045F  1303               	bcf	3,6	;RP1=0, select bank0
  6664  0460  0862               	movf	_temp,w
  6665  0461  00F0               	movwf	___ftge@ff1
  6666  0462  0863               	movf	_temp+1,w
  6667  0463  00F1               	movwf	___ftge@ff1+1
  6668  0464  0864               	movf	_temp+2,w
  6669  0465  00F2               	movwf	___ftge@ff1+2
  6670  0466  3000               	movlw	0
  6671  0467  00F3               	movwf	___ftge@ff2
  6672  0468  30C8               	movlw	200
  6673  0469  00F4               	movwf	___ftge@ff2+1
  6674  046A  3041               	movlw	65
  6675  046B  00F5               	movwf	___ftge@ff2+2
  6676  046C  160A  118A  25B5  120A  118A  	fcall	___ftge
  6677  0471  1803               	btfsc	3,0
  6678  0472  2C7B               	goto	i1l2802
  6679                           
  6680                           ;main.c: 262: {
  6681                           ;main.c: 263: tip = mantem;
  6682  0473  1283               	bcf	3,5	;RP0=0, select bank0
  6683  0474  1303               	bcf	3,6	;RP1=0, select bank0
  6684  0475  0852               	movf	Fuzzy@mantem,w
  6685  0476  00C9               	movwf	Fuzzy@tip
  6686  0477  0853               	movf	Fuzzy@mantem+1,w
  6687  0478  00CA               	movwf	Fuzzy@tip+1
  6688  0479  0854               	movf	Fuzzy@mantem+2,w
  6689  047A  2CB4               	goto	L7
  6690  047B                     i1l2802:	
  6691                           ;main.c: 264: }else
  6692                           
  6693                           
  6694                           ;main.c: 265: if (temp >= 25 && temp < 75)
  6695  047B  1283               	bcf	3,5	;RP0=0, select bank0
  6696  047C  1303               	bcf	3,6	;RP1=0, select bank0
  6697  047D  0862               	movf	_temp,w
  6698  047E  00F0               	movwf	___ftge@ff1
  6699  047F  0863               	movf	_temp+1,w
  6700  0480  00F1               	movwf	___ftge@ff1+1
  6701  0481  0864               	movf	_temp+2,w
  6702  0482  00F2               	movwf	___ftge@ff1+2
  6703  0483  3000               	movlw	0
  6704  0484  00F3               	movwf	___ftge@ff2
  6705  0485  30C8               	movlw	200
  6706  0486  00F4               	movwf	___ftge@ff2+1
  6707  0487  3041               	movlw	65
  6708  0488  00F5               	movwf	___ftge@ff2+2
  6709  0489  160A  118A  25B5  120A  118A  	fcall	___ftge
  6710  048E  1C03               	btfss	3,0
  6711  048F  2CAD               	goto	i1l2808
  6712  0490  1283               	bcf	3,5	;RP0=0, select bank0
  6713  0491  1303               	bcf	3,6	;RP1=0, select bank0
  6714  0492  0862               	movf	_temp,w
  6715  0493  00F0               	movwf	___ftge@ff1
  6716  0494  0863               	movf	_temp+1,w
  6717  0495  00F1               	movwf	___ftge@ff1+1
  6718  0496  0864               	movf	_temp+2,w
  6719  0497  00F2               	movwf	___ftge@ff1+2
  6720  0498  3000               	movlw	0
  6721  0499  00F3               	movwf	___ftge@ff2
  6722  049A  3096               	movlw	150
  6723  049B  00F4               	movwf	___ftge@ff2+1
  6724  049C  3042               	movlw	66
  6725  049D  00F5               	movwf	___ftge@ff2+2
  6726  049E  160A  118A  25B5  120A  118A  	fcall	___ftge
  6727  04A3  1803               	btfsc	3,0
  6728  04A4  2CAD               	goto	i1l2808
  6729                           
  6730                           ;main.c: 266: {
  6731                           ;main.c: 267: tip = reduz;
  6732  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  6733  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  6734  04A7  0855               	movf	Fuzzy@reduz,w
  6735  04A8  00C9               	movwf	Fuzzy@tip
  6736  04A9  0856               	movf	Fuzzy@reduz+1,w
  6737  04AA  00CA               	movwf	Fuzzy@tip+1
  6738  04AB  0857               	movf	Fuzzy@reduz+2,w
  6739  04AC  2CB4               	goto	L7
  6740  04AD                     i1l2808:	
  6741                           ;main.c: 268: }else
  6742                           
  6743                           
  6744                           ;main.c: 269: {
  6745                           ;main.c: 270: tip = aumenta;
  6746  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  6747  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  6748  04AF  0858               	movf	Fuzzy@aumenta,w
  6749  04B0  00C9               	movwf	Fuzzy@tip
  6750  04B1  0859               	movf	Fuzzy@aumenta+1,w
  6751  04B2  00CA               	movwf	Fuzzy@tip+1
  6752  04B3  085A               	movf	Fuzzy@aumenta+2,w
  6753  04B4                     L7:	
  6754  04B4  00CB               	movwf	Fuzzy@tip+2
  6755                           
  6756                           ;main.c: 271: }
  6757                           ;main.c: 274: total_area = 90;
  6758  04B5  3000               	movlw	0
  6759  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  6760  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  6761  04B8  00B2               	movwf	_total_area^(0+128)
  6762  04B9  30B4               	movlw	180
  6763  04BA  00B3               	movwf	(_total_area+1)^(0+128)
  6764  04BB  3042               	movlw	66
  6765  04BC  00B4               	movwf	(_total_area+2)^(0+128)
  6766                           
  6767                           ;main.c: 275: sum = 0;
  6768  04BD  3000               	movlw	0
  6769  04BE  00AC               	movwf	_sum^(0+128)
  6770  04BF  3000               	movlw	0
  6771  04C0  00AD               	movwf	(_sum+1)^(0+128)
  6772  04C1  3000               	movlw	0
  6773  04C2  00AE               	movwf	(_sum+2)^(0+128)
  6774                           
  6775                           ;main.c: 276: sum = sum + tip;
  6776  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  6777  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  6778  04C5  0849               	movf	Fuzzy@tip,w
  6779  04C6  00F8               	movwf	___ftadd@f1
  6780  04C7  084A               	movf	Fuzzy@tip+1,w
  6781  04C8  00F9               	movwf	___ftadd@f1+1
  6782  04C9  084B               	movf	Fuzzy@tip+2,w
  6783  04CA  00FA               	movwf	___ftadd@f1+2
  6784  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  6785  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  6786  04CD  082C               	movf	_sum^(0+128),w
  6787  04CE  00FB               	movwf	___ftadd@f2
  6788  04CF  082D               	movf	(_sum+1)^(0+128),w
  6789  04D0  00FC               	movwf	___ftadd@f2+1
  6790  04D1  082E               	movf	(_sum+2)^(0+128),w
  6791  04D2  00FD               	movwf	___ftadd@f2+2
  6792  04D3  120A  158A  21AA  120A  118A  	fcall	___ftadd
  6793  04D8  0878               	movf	?___ftadd,w
  6794  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  6795  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  6796  04DB  00AC               	movwf	_sum^(0+128)
  6797  04DC  0879               	movf	?___ftadd+1,w
  6798  04DD  00AD               	movwf	(_sum+1)^(0+128)
  6799  04DE  087A               	movf	?___ftadd+2,w
  6800  04DF  00AE               	movwf	(_sum+2)^(0+128)
  6801                           
  6802                           ;main.c: 279: ativa_fan = sum/total_area;
  6803  04E0  0832               	movf	_total_area^(0+128),w
  6804  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  6805  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  6806  04E3  00A7               	movwf	___ftdiv@f2
  6807  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  6808  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  6809  04E6  0833               	movf	(_total_area+1)^(0+128),w
  6810  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  6811  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  6812  04E9  00A8               	movwf	___ftdiv@f2+1
  6813  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  6814  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  6815  04EC  0834               	movf	(_total_area+2)^(0+128),w
  6816  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  6817  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  6818  04EF  00A9               	movwf	___ftdiv@f2+2
  6819  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  6820  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  6821  04F2  082C               	movf	_sum^(0+128),w
  6822  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  6823  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  6824  04F5  00AA               	movwf	___ftdiv@f1
  6825  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  6826  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  6827  04F8  082D               	movf	(_sum+1)^(0+128),w
  6828  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  6829  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  6830  04FB  00AB               	movwf	___ftdiv@f1+1
  6831  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  6832  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  6833  04FE  082E               	movf	(_sum+2)^(0+128),w
  6834  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  6835  0500  1303               	bcf	3,6	;RP1=0, select bank0
  6836  0501  00AC               	movwf	___ftdiv@f1+2
  6837  0502  120A  158A  20F2  120A  118A  	fcall	___ftdiv
  6838  0507  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0508  1303               	bcf	3,6	;RP1=0, select bank0
  6840  0509  0827               	movf	?___ftdiv,w
  6841  050A  1683               	bsf	3,5	;RP0=1, select bank1
  6842  050B  1303               	bcf	3,6	;RP1=0, select bank1
  6843  050C  00A0               	movwf	_ativa_fan^(0+128)
  6844  050D  1283               	bcf	3,5	;RP0=0, select bank0
  6845  050E  1303               	bcf	3,6	;RP1=0, select bank0
  6846  050F  0828               	movf	?___ftdiv+1,w
  6847  0510  1683               	bsf	3,5	;RP0=1, select bank1
  6848  0511  1303               	bcf	3,6	;RP1=0, select bank1
  6849  0512  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6850  0513  1283               	bcf	3,5	;RP0=0, select bank0
  6851  0514  1303               	bcf	3,6	;RP1=0, select bank0
  6852  0515  0829               	movf	?___ftdiv+2,w
  6853  0516  1683               	bsf	3,5	;RP0=1, select bank1
  6854  0517  1303               	bcf	3,6	;RP1=0, select bank1
  6855  0518  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6856                           
  6857                           ;main.c: 282: ativa_fan = ativa_fan*20;
  6858  0519  3000               	movlw	0
  6859  051A  1283               	bcf	3,5	;RP0=0, select bank0
  6860  051B  1303               	bcf	3,6	;RP1=0, select bank0
  6861  051C  00B7               	movwf	___ftmul@f1
  6862  051D  30A0               	movlw	160
  6863  051E  00B8               	movwf	___ftmul@f1+1
  6864  051F  3041               	movlw	65
  6865  0520  00B9               	movwf	___ftmul@f1+2
  6866  0521  1683               	bsf	3,5	;RP0=1, select bank1
  6867  0522  1303               	bcf	3,6	;RP1=0, select bank1
  6868  0523  0820               	movf	_ativa_fan^(0+128),w
  6869  0524  1283               	bcf	3,5	;RP0=0, select bank0
  6870  0525  1303               	bcf	3,6	;RP1=0, select bank0
  6871  0526  00BA               	movwf	___ftmul@f2
  6872  0527  1683               	bsf	3,5	;RP0=1, select bank1
  6873  0528  1303               	bcf	3,6	;RP1=0, select bank1
  6874  0529  0821               	movf	(_ativa_fan+1)^(0+128),w
  6875  052A  1283               	bcf	3,5	;RP0=0, select bank0
  6876  052B  1303               	bcf	3,6	;RP1=0, select bank0
  6877  052C  00BB               	movwf	___ftmul@f2+1
  6878  052D  1683               	bsf	3,5	;RP0=1, select bank1
  6879  052E  1303               	bcf	3,6	;RP1=0, select bank1
  6880  052F  0822               	movf	(_ativa_fan+2)^(0+128),w
  6881  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0531  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0532  00BC               	movwf	___ftmul@f2+2
  6884  0533  120A  118A  2729  120A  118A  	fcall	___ftmul
  6885  0538  1283               	bcf	3,5	;RP0=0, select bank0
  6886  0539  1303               	bcf	3,6	;RP1=0, select bank0
  6887  053A  0837               	movf	?___ftmul,w
  6888  053B  1683               	bsf	3,5	;RP0=1, select bank1
  6889  053C  1303               	bcf	3,6	;RP1=0, select bank1
  6890  053D  00A0               	movwf	_ativa_fan^(0+128)
  6891  053E  1283               	bcf	3,5	;RP0=0, select bank0
  6892  053F  1303               	bcf	3,6	;RP1=0, select bank0
  6893  0540  0838               	movf	?___ftmul+1,w
  6894  0541  1683               	bsf	3,5	;RP0=1, select bank1
  6895  0542  1303               	bcf	3,6	;RP1=0, select bank1
  6896  0543  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6897  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0546  0839               	movf	?___ftmul+2,w
  6900  0547  1683               	bsf	3,5	;RP0=1, select bank1
  6901  0548  1303               	bcf	3,6	;RP1=0, select bank1
  6902  0549  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6903                           
  6904                           ;main.c: 283: deltaV = (unsigned int)ativa_fan;
  6905  054A  0820               	movf	_ativa_fan^(0+128),w
  6906  054B  00F0               	movwf	___fttol@f1
  6907  054C  0821               	movf	(_ativa_fan+1)^(0+128),w
  6908  054D  00F1               	movwf	___fttol@f1+1
  6909  054E  0822               	movf	(_ativa_fan+2)^(0+128),w
  6910  054F  00F2               	movwf	___fttol@f1+2
  6911  0550  160A  118A  26E5  120A  118A  	fcall	___fttol
  6912  0555  0871               	movf	?___fttol+1,w
  6913  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6914  0557  1303               	bcf	3,6	;RP1=0, select bank0
  6915  0558  01EC               	clrf	_deltaV+1
  6916  0559  07EC               	addwf	_deltaV+1,f
  6917  055A  0870               	movf	?___fttol,w
  6918  055B  01EB               	clrf	_deltaV
  6919  055C  07EB               	addwf	_deltaV,f
  6920                           
  6921                           ;main.c: 284: if (deltaV >0 && deltaV < 1020)
  6922  055D  086C               	movf	_deltaV+1,w
  6923  055E  046B               	iorwf	_deltaV,w
  6924  055F  1903               	skipnz
  6925  0560  0008               	return
  6926  0561  3003               	movlw	3
  6927  0562  026C               	subwf	_deltaV+1,w
  6928  0563  30FC               	movlw	252
  6929  0564  1903               	skipnz
  6930  0565  026B               	subwf	_deltaV,w
  6931  0566  1803               	skipnc
  6932  0567  0008               	return
  6933                           
  6934                           ;main.c: 285: {
  6935                           ;main.c: 286: PWM_DutyCycle2(deltaV);
  6936  0568  086C               	movf	_deltaV+1,w
  6937  0569  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  6938  056A  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  6939  056B  086B               	movf	_deltaV,w
  6940  056C  01F0               	clrf	i1PWM_DutyCycle2@valor
  6941  056D  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  6942  056E  160A  118A  22E8   	fcall	i1_PWM_DutyCycle2
  6943  0571  0008               	return
  6944  0572                     __end_of_Fuzzy:	
  6945                           
  6946                           	psect	text30
  6947  12E8                     __ptext30:	
  6948 ;; *************** function i1_PWM_DutyCycle2 *****************
  6949 ;; Defined at:
  6950 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  valor           2    0[COMMON] int 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;		None               void
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6964 ;;      Params:         2       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0
  6966 ;;      Temps:          2       0       0       0       0
  6967 ;;      Totals:         4       0       0       0       0
  6968 ;;Total ram usage:        4 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_Fuzzy
  6974 ;;		_ISR
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function i1_PWM_DutyCycle2
  6980  12E8                     i1_PWM_DutyCycle2:	
  6981                           
  6982                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6986  12E8  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  6987  12E9  00F3               	movwf	??i1_PWM_DutyCycle2+1
  6988  12EA  0870               	movf	i1PWM_DutyCycle2@valor,w
  6989  12EB  00F2               	movwf	??i1_PWM_DutyCycle2
  6990  12EC  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  6991  12ED  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  6992  12EE  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  6993  12EF  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  6994  12F0  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  6995  12F1  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  6996  12F2  0872               	movf	??i1_PWM_DutyCycle2,w
  6997  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  6998  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  6999  12F5  009B               	movwf	27	;volatile
  7000                           
  7001                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7002  12F6  0870               	movf	i1PWM_DutyCycle2@valor,w
  7003  12F7  00F2               	movwf	??i1_PWM_DutyCycle2
  7004  12F8  3003               	movlw	3
  7005  12F9                     u329_25:	
  7006  12F9  1003               	clrc
  7007  12FA  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7008  12FB  3EFF               	addlw	-1
  7009  12FC  1D03               	skipz
  7010  12FD  2AF9               	goto	u329_25
  7011  12FE  1003               	clrc
  7012  12FF  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7013  1300  380C               	iorlw	12
  7014  1301  009D               	movwf	29	;volatile
  7015  1302  0008               	return
  7016  1303                     __end_ofi1_PWM_DutyCycle2:	
  7017                           
  7018                           	psect	text31
  7019  0AB1                     __ptext31:	
  7020 ;; *************** function _trimf *****************
  7021 ;; Defined at:
  7022 ;;		line 69 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  x               3   23[BANK0 ] float 
  7025 ;;  a               3   26[BANK0 ] float 
  7026 ;;  b               3   29[BANK0 ] float 
  7027 ;;  c               3   32[BANK0 ] float 
  7028 ;; Auto vars:     Size  Location     Type
  7029 ;;  ua              3   35[BANK0 ] float 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  3   23[BANK0 ] float 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7039 ;;      Params:         0      12       0       0       0
  7040 ;;      Locals:         0       3       0       0       0
  7041 ;;      Temps:          0       0       0       0       0
  7042 ;;      Totals:         0      15       0       0       0
  7043 ;;Total ram usage:       15 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    2
  7046 ;; This function calls:
  7047 ;;		___ftadd
  7048 ;;		___ftdiv
  7049 ;;		___ftge
  7050 ;;		___ftneg
  7051 ;; This function is called by:
  7052 ;;		_Fuzzy
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _trimf
  7058  0AB1                     _trimf:	
  7059                           
  7060                           ;main.c: 71: float ua = 0;
  7061                           
  7062                           ;incstack = 0
  7063                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7064  0AB1  3000               	movlw	0
  7065  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  7066  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  7067  0AB4  00C3               	movwf	trimf@ua
  7068  0AB5  3000               	movlw	0
  7069  0AB6  00C4               	movwf	trimf@ua+1
  7070  0AB7  3000               	movlw	0
  7071  0AB8  00C5               	movwf	trimf@ua+2
  7072                           
  7073                           ;main.c: 73: if (x <= a)
  7074  0AB9  083A               	movf	trimf@a,w
  7075  0ABA  00F0               	movwf	___ftge@ff1
  7076  0ABB  083B               	movf	trimf@a+1,w
  7077  0ABC  00F1               	movwf	___ftge@ff1+1
  7078  0ABD  083C               	movf	trimf@a+2,w
  7079  0ABE  00F2               	movwf	___ftge@ff1+2
  7080  0ABF  0837               	movf	trimf@x,w
  7081  0AC0  00F3               	movwf	___ftge@ff2
  7082  0AC1  0838               	movf	trimf@x+1,w
  7083  0AC2  00F4               	movwf	___ftge@ff2+1
  7084  0AC3  0839               	movf	trimf@x+2,w
  7085  0AC4  00F5               	movwf	___ftge@ff2+2
  7086  0AC5  160A  118A  25B5  120A  158A  	fcall	___ftge
  7087  0ACA  1803               	btfsc	3,0
  7088  0ACB  2BBE               	goto	L12
  7089                           
  7090                           ;main.c: 75: else if ((a < x) && (x <= b))
  7091                           
  7092                           ;main.c: 74: ua = 0;
  7093  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  7095  0ACE  083A               	movf	trimf@a,w
  7096  0ACF  00F0               	movwf	___ftge@ff1
  7097  0AD0  083B               	movf	trimf@a+1,w
  7098  0AD1  00F1               	movwf	___ftge@ff1+1
  7099  0AD2  083C               	movf	trimf@a+2,w
  7100  0AD3  00F2               	movwf	___ftge@ff1+2
  7101  0AD4  0837               	movf	trimf@x,w
  7102  0AD5  00F3               	movwf	___ftge@ff2
  7103  0AD6  0838               	movf	trimf@x+1,w
  7104  0AD7  00F4               	movwf	___ftge@ff2+1
  7105  0AD8  0839               	movf	trimf@x+2,w
  7106  0AD9  00F5               	movwf	___ftge@ff2+2
  7107  0ADA  160A  118A  25B5  120A  158A  	fcall	___ftge
  7108  0ADF  1803               	btfsc	3,0
  7109  0AE0  2B28               	goto	i1l2414
  7110  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  7112  0AE3  083D               	movf	trimf@b,w
  7113  0AE4  00F0               	movwf	___ftge@ff1
  7114  0AE5  083E               	movf	trimf@b+1,w
  7115  0AE6  00F1               	movwf	___ftge@ff1+1
  7116  0AE7  083F               	movf	trimf@b+2,w
  7117  0AE8  00F2               	movwf	___ftge@ff1+2
  7118  0AE9  0837               	movf	trimf@x,w
  7119  0AEA  00F3               	movwf	___ftge@ff2
  7120  0AEB  0838               	movf	trimf@x+1,w
  7121  0AEC  00F4               	movwf	___ftge@ff2+1
  7122  0AED  0839               	movf	trimf@x+2,w
  7123  0AEE  00F5               	movwf	___ftge@ff2+2
  7124  0AEF  160A  118A  25B5  120A  158A  	fcall	___ftge
  7125  0AF4  1C03               	btfss	3,0
  7126  0AF5  2B28               	goto	i1l2414
  7127                           
  7128                           ;main.c: 76: ua = ((x - a) / (b - a));
  7129  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  7131  0AF8  083D               	movf	trimf@b,w
  7132  0AF9  00F8               	movwf	___ftadd@f1
  7133  0AFA  083E               	movf	trimf@b+1,w
  7134  0AFB  00F9               	movwf	___ftadd@f1+1
  7135  0AFC  083F               	movf	trimf@b+2,w
  7136  0AFD  00FA               	movwf	___ftadd@f1+2
  7137  0AFE  083A               	movf	trimf@a,w
  7138  0AFF  00F0               	movwf	___ftneg@f1
  7139  0B00  083B               	movf	trimf@a+1,w
  7140  0B01  00F1               	movwf	___ftneg@f1+1
  7141  0B02  083C               	movf	trimf@a+2,w
  7142  0B03  00F2               	movwf	___ftneg@f1+2
  7143  0B04  160A  118A  2263  120A  158A  	fcall	___ftneg
  7144  0B09  0870               	movf	?___ftneg,w
  7145  0B0A  00FB               	movwf	___ftadd@f2
  7146  0B0B  0871               	movf	?___ftneg+1,w
  7147  0B0C  00FC               	movwf	___ftadd@f2+1
  7148  0B0D  0872               	movf	?___ftneg+2,w
  7149  0B0E  00FD               	movwf	___ftadd@f2+2
  7150  0B0F  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7151  0B14  0878               	movf	?___ftadd,w
  7152  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  7153  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  7154  0B17  00A7               	movwf	___ftdiv@f2
  7155  0B18  0879               	movf	?___ftadd+1,w
  7156  0B19  00A8               	movwf	___ftdiv@f2+1
  7157  0B1A  087A               	movf	?___ftadd+2,w
  7158  0B1B  00A9               	movwf	___ftdiv@f2+2
  7159  0B1C  0837               	movf	trimf@x,w
  7160  0B1D  00F8               	movwf	___ftadd@f1
  7161  0B1E  0838               	movf	trimf@x+1,w
  7162  0B1F  00F9               	movwf	___ftadd@f1+1
  7163  0B20  0839               	movf	trimf@x+2,w
  7164  0B21  00FA               	movwf	___ftadd@f1+2
  7165  0B22  083A               	movf	trimf@a,w
  7166  0B23  00F0               	movwf	___ftneg@f1
  7167  0B24  083B               	movf	trimf@a+1,w
  7168  0B25  00F1               	movwf	___ftneg@f1+1
  7169  0B26  083C               	movf	trimf@a+2,w
  7170  0B27  2B83               	goto	L13
  7171  0B28                     i1l2414:	
  7172                           
  7173                           ;main.c: 77: else if ((b < x) && (x <= c))
  7174  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  7175  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  7176  0B2A  083D               	movf	trimf@b,w
  7177  0B2B  00F0               	movwf	___ftge@ff1
  7178  0B2C  083E               	movf	trimf@b+1,w
  7179  0B2D  00F1               	movwf	___ftge@ff1+1
  7180  0B2E  083F               	movf	trimf@b+2,w
  7181  0B2F  00F2               	movwf	___ftge@ff1+2
  7182  0B30  0837               	movf	trimf@x,w
  7183  0B31  00F3               	movwf	___ftge@ff2
  7184  0B32  0838               	movf	trimf@x+1,w
  7185  0B33  00F4               	movwf	___ftge@ff2+1
  7186  0B34  0839               	movf	trimf@x+2,w
  7187  0B35  00F5               	movwf	___ftge@ff2+2
  7188  0B36  160A  118A  25B5  120A  158A  	fcall	___ftge
  7189  0B3B  1803               	btfsc	3,0
  7190  0B3C  2BA9               	goto	i1l2420
  7191  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0B3F  0840               	movf	trimf@c,w
  7194  0B40  00F0               	movwf	___ftge@ff1
  7195  0B41  0841               	movf	trimf@c+1,w
  7196  0B42  00F1               	movwf	___ftge@ff1+1
  7197  0B43  0842               	movf	trimf@c+2,w
  7198  0B44  00F2               	movwf	___ftge@ff1+2
  7199  0B45  0837               	movf	trimf@x,w
  7200  0B46  00F3               	movwf	___ftge@ff2
  7201  0B47  0838               	movf	trimf@x+1,w
  7202  0B48  00F4               	movwf	___ftge@ff2+1
  7203  0B49  0839               	movf	trimf@x+2,w
  7204  0B4A  00F5               	movwf	___ftge@ff2+2
  7205  0B4B  160A  118A  25B5  120A  158A  	fcall	___ftge
  7206  0B50  1C03               	btfss	3,0
  7207  0B51  2BA9               	goto	i1l2420
  7208                           
  7209                           ;main.c: 78: ua = ((x - c) / (b - c));
  7210  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  7211  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  7212  0B54  083D               	movf	trimf@b,w
  7213  0B55  00F8               	movwf	___ftadd@f1
  7214  0B56  083E               	movf	trimf@b+1,w
  7215  0B57  00F9               	movwf	___ftadd@f1+1
  7216  0B58  083F               	movf	trimf@b+2,w
  7217  0B59  00FA               	movwf	___ftadd@f1+2
  7218  0B5A  0840               	movf	trimf@c,w
  7219  0B5B  00F0               	movwf	___ftneg@f1
  7220  0B5C  0841               	movf	trimf@c+1,w
  7221  0B5D  00F1               	movwf	___ftneg@f1+1
  7222  0B5E  0842               	movf	trimf@c+2,w
  7223  0B5F  00F2               	movwf	___ftneg@f1+2
  7224  0B60  160A  118A  2263  120A  158A  	fcall	___ftneg
  7225  0B65  0870               	movf	?___ftneg,w
  7226  0B66  00FB               	movwf	___ftadd@f2
  7227  0B67  0871               	movf	?___ftneg+1,w
  7228  0B68  00FC               	movwf	___ftadd@f2+1
  7229  0B69  0872               	movf	?___ftneg+2,w
  7230  0B6A  00FD               	movwf	___ftadd@f2+2
  7231  0B6B  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7232  0B70  0878               	movf	?___ftadd,w
  7233  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  7234  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  7235  0B73  00A7               	movwf	___ftdiv@f2
  7236  0B74  0879               	movf	?___ftadd+1,w
  7237  0B75  00A8               	movwf	___ftdiv@f2+1
  7238  0B76  087A               	movf	?___ftadd+2,w
  7239  0B77  00A9               	movwf	___ftdiv@f2+2
  7240  0B78  0837               	movf	trimf@x,w
  7241  0B79  00F8               	movwf	___ftadd@f1
  7242  0B7A  0838               	movf	trimf@x+1,w
  7243  0B7B  00F9               	movwf	___ftadd@f1+1
  7244  0B7C  0839               	movf	trimf@x+2,w
  7245  0B7D  00FA               	movwf	___ftadd@f1+2
  7246  0B7E  0840               	movf	trimf@c,w
  7247  0B7F  00F0               	movwf	___ftneg@f1
  7248  0B80  0841               	movf	trimf@c+1,w
  7249  0B81  00F1               	movwf	___ftneg@f1+1
  7250  0B82  0842               	movf	trimf@c+2,w
  7251  0B83                     L13:	
  7252  0B83  00F2               	movwf	___ftneg@f1+2
  7253  0B84  160A  118A  2263  120A  158A  	fcall	___ftneg
  7254  0B89  0870               	movf	?___ftneg,w
  7255  0B8A  00FB               	movwf	___ftadd@f2
  7256  0B8B  0871               	movf	?___ftneg+1,w
  7257  0B8C  00FC               	movwf	___ftadd@f2+1
  7258  0B8D  0872               	movf	?___ftneg+2,w
  7259  0B8E  00FD               	movwf	___ftadd@f2+2
  7260  0B8F  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7261  0B94  0878               	movf	?___ftadd,w
  7262  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  7263  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  7264  0B97  00AA               	movwf	___ftdiv@f1
  7265  0B98  0879               	movf	?___ftadd+1,w
  7266  0B99  00AB               	movwf	___ftdiv@f1+1
  7267  0B9A  087A               	movf	?___ftadd+2,w
  7268  0B9B  00AC               	movwf	___ftdiv@f1+2
  7269  0B9C  120A  158A  20F2  120A  158A  	fcall	___ftdiv
  7270  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  7271  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  7272  0BA3  0827               	movf	?___ftdiv,w
  7273  0BA4  00C3               	movwf	trimf@ua
  7274  0BA5  0828               	movf	?___ftdiv+1,w
  7275  0BA6  00C4               	movwf	trimf@ua+1
  7276  0BA7  0829               	movf	?___ftdiv+2,w
  7277  0BA8  2BC5               	goto	L10
  7278  0BA9                     i1l2420:	
  7279                           
  7280                           ;main.c: 79: else if (x > c)
  7281  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  7282  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  7283  0BAB  0840               	movf	trimf@c,w
  7284  0BAC  00F0               	movwf	___ftge@ff1
  7285  0BAD  0841               	movf	trimf@c+1,w
  7286  0BAE  00F1               	movwf	___ftge@ff1+1
  7287  0BAF  0842               	movf	trimf@c+2,w
  7288  0BB0  00F2               	movwf	___ftge@ff1+2
  7289  0BB1  0837               	movf	trimf@x,w
  7290  0BB2  00F3               	movwf	___ftge@ff2
  7291  0BB3  0838               	movf	trimf@x+1,w
  7292  0BB4  00F4               	movwf	___ftge@ff2+1
  7293  0BB5  0839               	movf	trimf@x+2,w
  7294  0BB6  00F5               	movwf	___ftge@ff2+2
  7295  0BB7  160A  118A  25B5  120A  158A  	fcall	___ftge
  7296  0BBC  1803               	btfsc	3,0
  7297  0BBD  2BC6               	goto	i1l120
  7298  0BBE                     L12:	
  7299                           
  7300                           ;main.c: 80: ua = 0;
  7301  0BBE  3000               	movlw	0
  7302  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  7303  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  7304  0BC1  00C3               	movwf	trimf@ua
  7305  0BC2  3000               	movlw	0
  7306  0BC3  00C4               	movwf	trimf@ua+1
  7307  0BC4  3000               	movlw	0
  7308  0BC5                     L10:	
  7309  0BC5  00C5               	movwf	trimf@ua+2
  7310  0BC6                     i1l120:	
  7311                           
  7312                           ;main.c: 82: return(ua);
  7313  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  7314  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  7315  0BC8  0843               	movf	trimf@ua,w
  7316  0BC9  00B7               	movwf	?_trimf
  7317  0BCA  0844               	movf	trimf@ua+1,w
  7318  0BCB  00B8               	movwf	?_trimf+1
  7319  0BCC  0845               	movf	trimf@ua+2,w
  7320  0BCD  00B9               	movwf	?_trimf+2
  7321  0BCE  0008               	return
  7322  0BCF                     __end_of_trimf:	
  7323                           
  7324                           	psect	text32
  7325  0BCF                     __ptext32:	
  7326 ;; *************** function _trapmf *****************
  7327 ;; Defined at:
  7328 ;;		line 88 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  x               3   23[BANK0 ] float 
  7331 ;;  a               3   26[BANK0 ] float 
  7332 ;;  b               3   29[BANK0 ] float 
  7333 ;;  c               3   32[BANK0 ] float 
  7334 ;;  d               3   35[BANK0 ] float 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  ua              3   38[BANK0 ] float 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  3   23[BANK0 ] float 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, pclath, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7346 ;;      Params:         0      15       0       0       0
  7347 ;;      Locals:         0       3       0       0       0
  7348 ;;      Temps:          0       0       0       0       0
  7349 ;;      Totals:         0      18       0       0       0
  7350 ;;Total ram usage:       18 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    2
  7353 ;; This function calls:
  7354 ;;		___ftadd
  7355 ;;		___ftdiv
  7356 ;;		___ftge
  7357 ;;		___ftneg
  7358 ;; This function is called by:
  7359 ;;		_Fuzzy
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _trapmf
  7365  0BCF                     _trapmf:	
  7366                           
  7367                           ;main.c: 90: float ua = 0;
  7368                           
  7369                           ;incstack = 0
  7370                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7371  0BCF  3000               	movlw	0
  7372  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  7373  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  7374  0BD2  00C6               	movwf	trapmf@ua
  7375  0BD3  3000               	movlw	0
  7376  0BD4  00C7               	movwf	trapmf@ua+1
  7377  0BD5  3000               	movlw	0
  7378  0BD6  00C8               	movwf	trapmf@ua+2
  7379                           
  7380                           ;main.c: 92: if (x <= a)
  7381  0BD7  083A               	movf	trapmf@a,w
  7382  0BD8  00F0               	movwf	___ftge@ff1
  7383  0BD9  083B               	movf	trapmf@a+1,w
  7384  0BDA  00F1               	movwf	___ftge@ff1+1
  7385  0BDB  083C               	movf	trapmf@a+2,w
  7386  0BDC  00F2               	movwf	___ftge@ff1+2
  7387  0BDD  0837               	movf	trapmf@x,w
  7388  0BDE  00F3               	movwf	___ftge@ff2
  7389  0BDF  0838               	movf	trapmf@x+1,w
  7390  0BE0  00F4               	movwf	___ftge@ff2+1
  7391  0BE1  0839               	movf	trapmf@x+2,w
  7392  0BE2  00F5               	movwf	___ftge@ff2+2
  7393  0BE3  160A  118A  25B5  120A  158A  	fcall	___ftge
  7394  0BE8  1803               	btfsc	3,0
  7395  0BE9  2D0E               	goto	L18
  7396                           
  7397                           ;main.c: 94: else if ((a < x) && (x <= b))
  7398                           
  7399                           ;main.c: 93: ua = 0;
  7400  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0BEC  083A               	movf	trapmf@a,w
  7403  0BED  00F0               	movwf	___ftge@ff1
  7404  0BEE  083B               	movf	trapmf@a+1,w
  7405  0BEF  00F1               	movwf	___ftge@ff1+1
  7406  0BF0  083C               	movf	trapmf@a+2,w
  7407  0BF1  00F2               	movwf	___ftge@ff1+2
  7408  0BF2  0837               	movf	trapmf@x,w
  7409  0BF3  00F3               	movwf	___ftge@ff2
  7410  0BF4  0838               	movf	trapmf@x+1,w
  7411  0BF5  00F4               	movwf	___ftge@ff2+1
  7412  0BF6  0839               	movf	trapmf@x+2,w
  7413  0BF7  00F5               	movwf	___ftge@ff2+2
  7414  0BF8  160A  118A  25B5  120A  158A  	fcall	___ftge
  7415  0BFD  1803               	btfsc	3,0
  7416  0BFE  2C46               	goto	i1l2438
  7417  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0C01  083D               	movf	trapmf@b,w
  7420  0C02  00F0               	movwf	___ftge@ff1
  7421  0C03  083E               	movf	trapmf@b+1,w
  7422  0C04  00F1               	movwf	___ftge@ff1+1
  7423  0C05  083F               	movf	trapmf@b+2,w
  7424  0C06  00F2               	movwf	___ftge@ff1+2
  7425  0C07  0837               	movf	trapmf@x,w
  7426  0C08  00F3               	movwf	___ftge@ff2
  7427  0C09  0838               	movf	trapmf@x+1,w
  7428  0C0A  00F4               	movwf	___ftge@ff2+1
  7429  0C0B  0839               	movf	trapmf@x+2,w
  7430  0C0C  00F5               	movwf	___ftge@ff2+2
  7431  0C0D  160A  118A  25B5  120A  158A  	fcall	___ftge
  7432  0C12  1C03               	btfss	3,0
  7433  0C13  2C46               	goto	i1l2438
  7434                           
  7435                           ;main.c: 95: ua = ((x - a) / (b - a));
  7436  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0C16  083D               	movf	trapmf@b,w
  7439  0C17  00F8               	movwf	___ftadd@f1
  7440  0C18  083E               	movf	trapmf@b+1,w
  7441  0C19  00F9               	movwf	___ftadd@f1+1
  7442  0C1A  083F               	movf	trapmf@b+2,w
  7443  0C1B  00FA               	movwf	___ftadd@f1+2
  7444  0C1C  083A               	movf	trapmf@a,w
  7445  0C1D  00F0               	movwf	___ftneg@f1
  7446  0C1E  083B               	movf	trapmf@a+1,w
  7447  0C1F  00F1               	movwf	___ftneg@f1+1
  7448  0C20  083C               	movf	trapmf@a+2,w
  7449  0C21  00F2               	movwf	___ftneg@f1+2
  7450  0C22  160A  118A  2263  120A  158A  	fcall	___ftneg
  7451  0C27  0870               	movf	?___ftneg,w
  7452  0C28  00FB               	movwf	___ftadd@f2
  7453  0C29  0871               	movf	?___ftneg+1,w
  7454  0C2A  00FC               	movwf	___ftadd@f2+1
  7455  0C2B  0872               	movf	?___ftneg+2,w
  7456  0C2C  00FD               	movwf	___ftadd@f2+2
  7457  0C2D  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7458  0C32  0878               	movf	?___ftadd,w
  7459  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  7460  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  7461  0C35  00A7               	movwf	___ftdiv@f2
  7462  0C36  0879               	movf	?___ftadd+1,w
  7463  0C37  00A8               	movwf	___ftdiv@f2+1
  7464  0C38  087A               	movf	?___ftadd+2,w
  7465  0C39  00A9               	movwf	___ftdiv@f2+2
  7466  0C3A  0837               	movf	trapmf@x,w
  7467  0C3B  00F8               	movwf	___ftadd@f1
  7468  0C3C  0838               	movf	trapmf@x+1,w
  7469  0C3D  00F9               	movwf	___ftadd@f1+1
  7470  0C3E  0839               	movf	trapmf@x+2,w
  7471  0C3F  00FA               	movwf	___ftadd@f1+2
  7472  0C40  083A               	movf	trapmf@a,w
  7473  0C41  00F0               	movwf	___ftneg@f1
  7474  0C42  083B               	movf	trapmf@a+1,w
  7475  0C43  00F1               	movwf	___ftneg@f1+1
  7476  0C44  083C               	movf	trapmf@a+2,w
  7477  0C45  2CD3               	goto	L20
  7478  0C46                     i1l2438:	
  7479                           
  7480                           ;main.c: 96: else if ((b <= x) && (x <= c))
  7481  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  7482  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  7483  0C48  0837               	movf	trapmf@x,w
  7484  0C49  00F0               	movwf	___ftge@ff1
  7485  0C4A  0838               	movf	trapmf@x+1,w
  7486  0C4B  00F1               	movwf	___ftge@ff1+1
  7487  0C4C  0839               	movf	trapmf@x+2,w
  7488  0C4D  00F2               	movwf	___ftge@ff1+2
  7489  0C4E  083D               	movf	trapmf@b,w
  7490  0C4F  00F3               	movwf	___ftge@ff2
  7491  0C50  083E               	movf	trapmf@b+1,w
  7492  0C51  00F4               	movwf	___ftge@ff2+1
  7493  0C52  083F               	movf	trapmf@b+2,w
  7494  0C53  00F5               	movwf	___ftge@ff2+2
  7495  0C54  160A  118A  25B5  120A  158A  	fcall	___ftge
  7496  0C59  1C03               	btfss	3,0
  7497  0C5A  2C78               	goto	i1l2444
  7498  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  7499  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  7500  0C5D  0840               	movf	trapmf@c,w
  7501  0C5E  00F0               	movwf	___ftge@ff1
  7502  0C5F  0841               	movf	trapmf@c+1,w
  7503  0C60  00F1               	movwf	___ftge@ff1+1
  7504  0C61  0842               	movf	trapmf@c+2,w
  7505  0C62  00F2               	movwf	___ftge@ff1+2
  7506  0C63  0837               	movf	trapmf@x,w
  7507  0C64  00F3               	movwf	___ftge@ff2
  7508  0C65  0838               	movf	trapmf@x+1,w
  7509  0C66  00F4               	movwf	___ftge@ff2+1
  7510  0C67  0839               	movf	trapmf@x+2,w
  7511  0C68  00F5               	movwf	___ftge@ff2+2
  7512  0C69  160A  118A  25B5  120A  158A  	fcall	___ftge
  7513  0C6E  1C03               	btfss	3,0
  7514  0C6F  2C78               	goto	i1l2444
  7515                           
  7516                           ;main.c: 97: ua = 1;
  7517  0C70  3000               	movlw	0
  7518  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  7519  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  7520  0C73  00C6               	movwf	trapmf@ua
  7521  0C74  3080               	movlw	128
  7522  0C75  00C7               	movwf	trapmf@ua+1
  7523  0C76  303F               	movlw	63
  7524  0C77  2D15               	goto	L17
  7525  0C78                     i1l2444:	
  7526                           
  7527                           ;main.c: 98: else if ((c < x) && (x <= d))
  7528  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  7529  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  7530  0C7A  0840               	movf	trapmf@c,w
  7531  0C7B  00F0               	movwf	___ftge@ff1
  7532  0C7C  0841               	movf	trapmf@c+1,w
  7533  0C7D  00F1               	movwf	___ftge@ff1+1
  7534  0C7E  0842               	movf	trapmf@c+2,w
  7535  0C7F  00F2               	movwf	___ftge@ff1+2
  7536  0C80  0837               	movf	trapmf@x,w
  7537  0C81  00F3               	movwf	___ftge@ff2
  7538  0C82  0838               	movf	trapmf@x+1,w
  7539  0C83  00F4               	movwf	___ftge@ff2+1
  7540  0C84  0839               	movf	trapmf@x+2,w
  7541  0C85  00F5               	movwf	___ftge@ff2+2
  7542  0C86  160A  118A  25B5  120A  158A  	fcall	___ftge
  7543  0C8B  1803               	btfsc	3,0
  7544  0C8C  2CF9               	goto	i1l2450
  7545  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  7546  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  7547  0C8F  0843               	movf	trapmf@d,w
  7548  0C90  00F0               	movwf	___ftge@ff1
  7549  0C91  0844               	movf	trapmf@d+1,w
  7550  0C92  00F1               	movwf	___ftge@ff1+1
  7551  0C93  0845               	movf	trapmf@d+2,w
  7552  0C94  00F2               	movwf	___ftge@ff1+2
  7553  0C95  0837               	movf	trapmf@x,w
  7554  0C96  00F3               	movwf	___ftge@ff2
  7555  0C97  0838               	movf	trapmf@x+1,w
  7556  0C98  00F4               	movwf	___ftge@ff2+1
  7557  0C99  0839               	movf	trapmf@x+2,w
  7558  0C9A  00F5               	movwf	___ftge@ff2+2
  7559  0C9B  160A  118A  25B5  120A  158A  	fcall	___ftge
  7560  0CA0  1C03               	btfss	3,0
  7561  0CA1  2CF9               	goto	i1l2450
  7562                           
  7563                           ;main.c: 99: ua = ((d - x) / (d - c));
  7564  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  7565  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  7566  0CA4  0843               	movf	trapmf@d,w
  7567  0CA5  00F8               	movwf	___ftadd@f1
  7568  0CA6  0844               	movf	trapmf@d+1,w
  7569  0CA7  00F9               	movwf	___ftadd@f1+1
  7570  0CA8  0845               	movf	trapmf@d+2,w
  7571  0CA9  00FA               	movwf	___ftadd@f1+2
  7572  0CAA  0840               	movf	trapmf@c,w
  7573  0CAB  00F0               	movwf	___ftneg@f1
  7574  0CAC  0841               	movf	trapmf@c+1,w
  7575  0CAD  00F1               	movwf	___ftneg@f1+1
  7576  0CAE  0842               	movf	trapmf@c+2,w
  7577  0CAF  00F2               	movwf	___ftneg@f1+2
  7578  0CB0  160A  118A  2263  120A  158A  	fcall	___ftneg
  7579  0CB5  0870               	movf	?___ftneg,w
  7580  0CB6  00FB               	movwf	___ftadd@f2
  7581  0CB7  0871               	movf	?___ftneg+1,w
  7582  0CB8  00FC               	movwf	___ftadd@f2+1
  7583  0CB9  0872               	movf	?___ftneg+2,w
  7584  0CBA  00FD               	movwf	___ftadd@f2+2
  7585  0CBB  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7586  0CC0  0878               	movf	?___ftadd,w
  7587  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  7588  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  7589  0CC3  00A7               	movwf	___ftdiv@f2
  7590  0CC4  0879               	movf	?___ftadd+1,w
  7591  0CC5  00A8               	movwf	___ftdiv@f2+1
  7592  0CC6  087A               	movf	?___ftadd+2,w
  7593  0CC7  00A9               	movwf	___ftdiv@f2+2
  7594  0CC8  0843               	movf	trapmf@d,w
  7595  0CC9  00F8               	movwf	___ftadd@f1
  7596  0CCA  0844               	movf	trapmf@d+1,w
  7597  0CCB  00F9               	movwf	___ftadd@f1+1
  7598  0CCC  0845               	movf	trapmf@d+2,w
  7599  0CCD  00FA               	movwf	___ftadd@f1+2
  7600  0CCE  0837               	movf	trapmf@x,w
  7601  0CCF  00F0               	movwf	___ftneg@f1
  7602  0CD0  0838               	movf	trapmf@x+1,w
  7603  0CD1  00F1               	movwf	___ftneg@f1+1
  7604  0CD2  0839               	movf	trapmf@x+2,w
  7605  0CD3                     L20:	
  7606  0CD3  00F2               	movwf	___ftneg@f1+2
  7607  0CD4  160A  118A  2263  120A  158A  	fcall	___ftneg
  7608  0CD9  0870               	movf	?___ftneg,w
  7609  0CDA  00FB               	movwf	___ftadd@f2
  7610  0CDB  0871               	movf	?___ftneg+1,w
  7611  0CDC  00FC               	movwf	___ftadd@f2+1
  7612  0CDD  0872               	movf	?___ftneg+2,w
  7613  0CDE  00FD               	movwf	___ftadd@f2+2
  7614  0CDF  120A  158A  21AA  120A  158A  	fcall	___ftadd
  7615  0CE4  0878               	movf	?___ftadd,w
  7616  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  7617  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  7618  0CE7  00AA               	movwf	___ftdiv@f1
  7619  0CE8  0879               	movf	?___ftadd+1,w
  7620  0CE9  00AB               	movwf	___ftdiv@f1+1
  7621  0CEA  087A               	movf	?___ftadd+2,w
  7622  0CEB  00AC               	movwf	___ftdiv@f1+2
  7623  0CEC  120A  158A  20F2  120A  158A  	fcall	___ftdiv
  7624  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  7625  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  7626  0CF3  0827               	movf	?___ftdiv,w
  7627  0CF4  00C6               	movwf	trapmf@ua
  7628  0CF5  0828               	movf	?___ftdiv+1,w
  7629  0CF6  00C7               	movwf	trapmf@ua+1
  7630  0CF7  0829               	movf	?___ftdiv+2,w
  7631  0CF8  2D15               	goto	L17
  7632  0CF9                     i1l2450:	
  7633                           
  7634                           ;main.c: 100: else if (x > d)
  7635  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  7636  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  7637  0CFB  0843               	movf	trapmf@d,w
  7638  0CFC  00F0               	movwf	___ftge@ff1
  7639  0CFD  0844               	movf	trapmf@d+1,w
  7640  0CFE  00F1               	movwf	___ftge@ff1+1
  7641  0CFF  0845               	movf	trapmf@d+2,w
  7642  0D00  00F2               	movwf	___ftge@ff1+2
  7643  0D01  0837               	movf	trapmf@x,w
  7644  0D02  00F3               	movwf	___ftge@ff2
  7645  0D03  0838               	movf	trapmf@x+1,w
  7646  0D04  00F4               	movwf	___ftge@ff2+1
  7647  0D05  0839               	movf	trapmf@x+2,w
  7648  0D06  00F5               	movwf	___ftge@ff2+2
  7649  0D07  160A  118A  25B5  120A  158A  	fcall	___ftge
  7650  0D0C  1803               	btfsc	3,0
  7651  0D0D  2D16               	goto	i1l130
  7652  0D0E                     L18:	
  7653                           
  7654                           ;main.c: 101: ua = 0;
  7655  0D0E  3000               	movlw	0
  7656  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  7657  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  7658  0D11  00C6               	movwf	trapmf@ua
  7659  0D12  3000               	movlw	0
  7660  0D13  00C7               	movwf	trapmf@ua+1
  7661  0D14  3000               	movlw	0
  7662  0D15                     L17:	
  7663  0D15  00C8               	movwf	trapmf@ua+2
  7664  0D16                     i1l130:	
  7665                           
  7666                           ;main.c: 103: return(ua);
  7667  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  7668  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  7669  0D18  0846               	movf	trapmf@ua,w
  7670  0D19  00B7               	movwf	?_trapmf
  7671  0D1A  0847               	movf	trapmf@ua+1,w
  7672  0D1B  00B8               	movwf	?_trapmf+1
  7673  0D1C  0848               	movf	trapmf@ua+2,w
  7674  0D1D  00B9               	movwf	?_trapmf+2
  7675  0D1E  0008               	return
  7676  0D1F                     __end_of_trapmf:	
  7677                           
  7678                           	psect	text33
  7679  1263                     __ptext33:	
  7680 ;; *************** function ___ftneg *****************
  7681 ;; Defined at:
  7682 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  f1              3    0[COMMON] float 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  3    0[COMMON] float 
  7689 ;; Registers used:
  7690 ;;		wreg
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7696 ;;      Params:         3       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0
  7699 ;;      Totals:         3       0       0       0       0
  7700 ;;Total ram usage:        3 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_trimf
  7706 ;;		_trapmf
  7707 ;;		_Fuzzy
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function ___ftneg
  7713  1263                     ___ftneg:	
  7714                           
  7715                           ;incstack = 0
  7716                           ; Regs used in ___ftneg: [wreg]
  7717  1263  0872               	movf	___ftneg@f1+2,w
  7718  1264  0471               	iorwf	___ftneg@f1+1,w
  7719  1265  0470               	iorwf	___ftneg@f1,w
  7720  1266  1903               	skipnz
  7721  1267  0008               	return
  7722  1268  3080               	movlw	128
  7723  1269  06F2               	xorwf	___ftneg@f1+2,f
  7724  126A  0008               	return
  7725  126B                     __end_of___ftneg:	
  7726                           
  7727                           	psect	text34
  7728  08F2                     __ptext34:	
  7729 ;; *************** function ___ftdiv *****************
  7730 ;; Defined at:
  7731 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  f2              3    7[BANK0 ] float 
  7734 ;;  f1              3   10[BANK0 ] float 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  f3              3   18[BANK0 ] float 
  7737 ;;  sign            1   22[BANK0 ] unsigned char 
  7738 ;;  exp             1   21[BANK0 ] unsigned char 
  7739 ;;  cntr            1   17[BANK0 ] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  3    7[BANK0 ] float 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0, pclath, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7749 ;;      Params:         0       6       0       0       0
  7750 ;;      Locals:         0       6       0       0       0
  7751 ;;      Temps:          0       4       0       0       0
  7752 ;;      Totals:         0      16       0       0       0
  7753 ;;Total ram usage:       16 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    1
  7756 ;; This function calls:
  7757 ;;		___ftpack
  7758 ;; This function is called by:
  7759 ;;		_trimf
  7760 ;;		_trapmf
  7761 ;;		_Fuzzy
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function ___ftdiv
  7767  08F2                     ___ftdiv:	
  7768                           
  7769                           ;incstack = 0
  7770                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7771  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  7772  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  7773  08F4  082A               	movf	___ftdiv@f1,w
  7774  08F5  00AD               	movwf	??___ftdiv
  7775  08F6  082B               	movf	___ftdiv@f1+1,w
  7776  08F7  00AE               	movwf	??___ftdiv+1
  7777  08F8  082C               	movf	___ftdiv@f1+2,w
  7778  08F9  00AF               	movwf	??___ftdiv+2
  7779  08FA  1003               	clrc
  7780  08FB  0D2E               	rlf	??___ftdiv+1,w
  7781  08FC  0D2F               	rlf	??___ftdiv+2,w
  7782  08FD  00B0               	movwf	??___ftdiv+3
  7783  08FE  0830               	movf	??___ftdiv+3,w
  7784  08FF  00B5               	movwf	___ftdiv@exp
  7785  0900  08B5               	movf	___ftdiv@exp,f
  7786  0901  1D03               	skipz
  7787  0902  290A               	goto	i1l2334
  7788  0903  3000               	movlw	0
  7789  0904  00A7               	movwf	?___ftdiv
  7790  0905  3000               	movlw	0
  7791  0906  00A8               	movwf	?___ftdiv+1
  7792  0907  3000               	movlw	0
  7793  0908  00A9               	movwf	?___ftdiv+2
  7794  0909  0008               	return
  7795  090A                     i1l2334:	
  7796  090A  0827               	movf	___ftdiv@f2,w
  7797  090B  00AD               	movwf	??___ftdiv
  7798  090C  0828               	movf	___ftdiv@f2+1,w
  7799  090D  00AE               	movwf	??___ftdiv+1
  7800  090E  0829               	movf	___ftdiv@f2+2,w
  7801  090F  00AF               	movwf	??___ftdiv+2
  7802  0910  1003               	clrc
  7803  0911  0D2E               	rlf	??___ftdiv+1,w
  7804  0912  0D2F               	rlf	??___ftdiv+2,w
  7805  0913  00B0               	movwf	??___ftdiv+3
  7806  0914  0830               	movf	??___ftdiv+3,w
  7807  0915  00B6               	movwf	___ftdiv@sign
  7808  0916  08B6               	movf	___ftdiv@sign,f
  7809  0917  1D03               	skipz
  7810  0918  2920               	goto	i1l2340
  7811  0919  3000               	movlw	0
  7812  091A  00A7               	movwf	?___ftdiv
  7813  091B  3000               	movlw	0
  7814  091C  00A8               	movwf	?___ftdiv+1
  7815  091D  3000               	movlw	0
  7816  091E  00A9               	movwf	?___ftdiv+2
  7817  091F  0008               	return
  7818  0920                     i1l2340:	
  7819  0920  3000               	movlw	0
  7820  0921  00B2               	movwf	___ftdiv@f3
  7821  0922  3000               	movlw	0
  7822  0923  00B3               	movwf	___ftdiv@f3+1
  7823  0924  3000               	movlw	0
  7824  0925  00B4               	movwf	___ftdiv@f3+2
  7825  0926  3089               	movlw	137
  7826  0927  0736               	addwf	___ftdiv@sign,w
  7827  0928  00AD               	movwf	??___ftdiv
  7828  0929  082D               	movf	??___ftdiv,w
  7829  092A  02B5               	subwf	___ftdiv@exp,f
  7830  092B  082A               	movf	___ftdiv@f1,w
  7831  092C  00AD               	movwf	??___ftdiv
  7832  092D  082B               	movf	___ftdiv@f1+1,w
  7833  092E  00AE               	movwf	??___ftdiv+1
  7834  092F  082C               	movf	___ftdiv@f1+2,w
  7835  0930  00AF               	movwf	??___ftdiv+2
  7836  0931  3010               	movlw	16
  7837  0932                     u246_25:	
  7838  0932  1003               	clrc
  7839  0933  0CAF               	rrf	??___ftdiv+2,f
  7840  0934  0CAE               	rrf	??___ftdiv+1,f
  7841  0935  0CAD               	rrf	??___ftdiv,f
  7842  0936  3EFF               	addlw	-1
  7843  0937  1D03               	skipz
  7844  0938  2932               	goto	u246_25
  7845  0939  082D               	movf	??___ftdiv,w
  7846  093A  00B0               	movwf	??___ftdiv+3
  7847  093B  0830               	movf	??___ftdiv+3,w
  7848  093C  00B6               	movwf	___ftdiv@sign
  7849  093D  0827               	movf	___ftdiv@f2,w
  7850  093E  00AD               	movwf	??___ftdiv
  7851  093F  0828               	movf	___ftdiv@f2+1,w
  7852  0940  00AE               	movwf	??___ftdiv+1
  7853  0941  0829               	movf	___ftdiv@f2+2,w
  7854  0942  00AF               	movwf	??___ftdiv+2
  7855  0943  3010               	movlw	16
  7856  0944                     u247_25:	
  7857  0944  1003               	clrc
  7858  0945  0CAF               	rrf	??___ftdiv+2,f
  7859  0946  0CAE               	rrf	??___ftdiv+1,f
  7860  0947  0CAD               	rrf	??___ftdiv,f
  7861  0948  3EFF               	addlw	-1
  7862  0949  1D03               	skipz
  7863  094A  2944               	goto	u247_25
  7864  094B  082D               	movf	??___ftdiv,w
  7865  094C  00B0               	movwf	??___ftdiv+3
  7866  094D  0830               	movf	??___ftdiv+3,w
  7867  094E  06B6               	xorwf	___ftdiv@sign,f
  7868  094F  3080               	movlw	128
  7869  0950  00AD               	movwf	??___ftdiv
  7870  0951  082D               	movf	??___ftdiv,w
  7871  0952  05B6               	andwf	___ftdiv@sign,f
  7872  0953  17AB               	bsf	___ftdiv@f1+1,7
  7873  0954  30FF               	movlw	255
  7874  0955  05AA               	andwf	___ftdiv@f1,f
  7875  0956  30FF               	movlw	255
  7876  0957  05AB               	andwf	___ftdiv@f1+1,f
  7877  0958  3000               	movlw	0
  7878  0959  05AC               	andwf	___ftdiv@f1+2,f
  7879  095A  17A8               	bsf	___ftdiv@f2+1,7
  7880  095B  30FF               	movlw	255
  7881  095C  05A7               	andwf	___ftdiv@f2,f
  7882  095D  30FF               	movlw	255
  7883  095E  05A8               	andwf	___ftdiv@f2+1,f
  7884  095F  3000               	movlw	0
  7885  0960  05A9               	andwf	___ftdiv@f2+2,f
  7886  0961  3018               	movlw	24
  7887  0962  00AD               	movwf	??___ftdiv
  7888  0963  082D               	movf	??___ftdiv,w
  7889  0964  00B1               	movwf	___ftdiv@cntr
  7890  0965                     i1l2354:	
  7891  0965  3001               	movlw	1
  7892  0966                     u248_25:	
  7893  0966  1003               	clrc
  7894  0967  0DB2               	rlf	___ftdiv@f3,f
  7895  0968  0DB3               	rlf	___ftdiv@f3+1,f
  7896  0969  0DB4               	rlf	___ftdiv@f3+2,f
  7897  096A  3EFF               	addlw	-1
  7898  096B  1D03               	skipz
  7899  096C  2966               	goto	u248_25
  7900  096D  0829               	movf	___ftdiv@f2+2,w
  7901  096E  022C               	subwf	___ftdiv@f1+2,w
  7902  096F  1D03               	skipz
  7903  0970  2977               	goto	u249_25
  7904  0971  0828               	movf	___ftdiv@f2+1,w
  7905  0972  022B               	subwf	___ftdiv@f1+1,w
  7906  0973  1D03               	skipz
  7907  0974  2977               	goto	u249_25
  7908  0975  0827               	movf	___ftdiv@f2,w
  7909  0976  022A               	subwf	___ftdiv@f1,w
  7910  0977                     u249_25:	
  7911  0977  1C03               	skipc
  7912  0978  2984               	goto	i1l2362
  7913  0979  0827               	movf	___ftdiv@f2,w
  7914  097A  02AA               	subwf	___ftdiv@f1,f
  7915  097B  0828               	movf	___ftdiv@f2+1,w
  7916  097C  1C03               	skipc
  7917  097D  0F28               	incfsz	___ftdiv@f2+1,w
  7918  097E  02AB               	subwf	___ftdiv@f1+1,f
  7919  097F  0829               	movf	___ftdiv@f2+2,w
  7920  0980  1C03               	skipc
  7921  0981  0A29               	incf	___ftdiv@f2+2,w
  7922  0982  02AC               	subwf	___ftdiv@f1+2,f
  7923  0983  1432               	bsf	___ftdiv@f3,0
  7924  0984                     i1l2362:	
  7925  0984  3001               	movlw	1
  7926  0985                     u250_25:	
  7927  0985  1003               	clrc
  7928  0986  0DAA               	rlf	___ftdiv@f1,f
  7929  0987  0DAB               	rlf	___ftdiv@f1+1,f
  7930  0988  0DAC               	rlf	___ftdiv@f1+2,f
  7931  0989  3EFF               	addlw	-1
  7932  098A  1D03               	skipz
  7933  098B  2985               	goto	u250_25
  7934  098C  3001               	movlw	1
  7935  098D  02B1               	subwf	___ftdiv@cntr,f
  7936  098E  1D03               	btfss	3,2
  7937  098F  2965               	goto	i1l2354
  7938  0990  0832               	movf	___ftdiv@f3,w
  7939  0991  00F0               	movwf	___ftpack@arg
  7940  0992  0833               	movf	___ftdiv@f3+1,w
  7941  0993  00F1               	movwf	___ftpack@arg+1
  7942  0994  0834               	movf	___ftdiv@f3+2,w
  7943  0995  00F2               	movwf	___ftpack@arg+2
  7944  0996  0835               	movf	___ftdiv@exp,w
  7945  0997  00AD               	movwf	??___ftdiv
  7946  0998  082D               	movf	??___ftdiv,w
  7947  0999  00F3               	movwf	___ftpack@exp
  7948  099A  0836               	movf	___ftdiv@sign,w
  7949  099B  00AE               	movwf	??___ftdiv+1
  7950  099C  082E               	movf	??___ftdiv+1,w
  7951  099D  00F4               	movwf	___ftpack@sign
  7952  099E  160A  118A  2612   	fcall	___ftpack
  7953  09A1  0870               	movf	?___ftpack,w
  7954  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  7955  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  7956  09A4  00A7               	movwf	?___ftdiv
  7957  09A5  0871               	movf	?___ftpack+1,w
  7958  09A6  00A8               	movwf	?___ftdiv+1
  7959  09A7  0872               	movf	?___ftpack+2,w
  7960  09A8  00A9               	movwf	?___ftdiv+2
  7961  09A9  0008               	return
  7962  09AA                     __end_of___ftdiv:	
  7963                           
  7964                           	psect	text35
  7965  09AA                     __ptext35:	
  7966 ;; *************** function ___ftadd *****************
  7967 ;; Defined at:
  7968 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  f1              3    8[COMMON] float 
  7971 ;;  f2              3   11[COMMON] float 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  exp1            1    6[BANK0 ] unsigned char 
  7974 ;;  exp2            1    5[BANK0 ] unsigned char 
  7975 ;;  sign            1    4[BANK0 ] unsigned char 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  3    8[COMMON] float 
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0, pclath, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7985 ;;      Params:         6       0       0       0       0
  7986 ;;      Locals:         0       3       0       0       0
  7987 ;;      Temps:          0       4       0       0       0
  7988 ;;      Totals:         6       7       0       0       0
  7989 ;;Total ram usage:       13 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    1
  7992 ;; This function calls:
  7993 ;;		___ftpack
  7994 ;; This function is called by:
  7995 ;;		_trimf
  7996 ;;		_trapmf
  7997 ;;		_Fuzzy
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function ___ftadd
  8003  09AA                     ___ftadd:	
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8007  09AA  0878               	movf	___ftadd@f1,w
  8008  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  8009  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  8010  09AD  00A0               	movwf	??___ftadd
  8011  09AE  0879               	movf	___ftadd@f1+1,w
  8012  09AF  00A1               	movwf	??___ftadd+1
  8013  09B0  087A               	movf	___ftadd@f1+2,w
  8014  09B1  00A2               	movwf	??___ftadd+2
  8015  09B2  1003               	clrc
  8016  09B3  0D21               	rlf	??___ftadd+1,w
  8017  09B4  0D22               	rlf	??___ftadd+2,w
  8018  09B5  00A3               	movwf	??___ftadd+3
  8019  09B6  0823               	movf	??___ftadd+3,w
  8020  09B7  00A6               	movwf	___ftadd@exp1
  8021  09B8  087B               	movf	___ftadd@f2,w
  8022  09B9  00A0               	movwf	??___ftadd
  8023  09BA  087C               	movf	___ftadd@f2+1,w
  8024  09BB  00A1               	movwf	??___ftadd+1
  8025  09BC  087D               	movf	___ftadd@f2+2,w
  8026  09BD  00A2               	movwf	??___ftadd+2
  8027  09BE  1003               	clrc
  8028  09BF  0D21               	rlf	??___ftadd+1,w
  8029  09C0  0D22               	rlf	??___ftadd+2,w
  8030  09C1  00A3               	movwf	??___ftadd+3
  8031  09C2  0823               	movf	??___ftadd+3,w
  8032  09C3  00A5               	movwf	___ftadd@exp2
  8033  09C4  0826               	movf	___ftadd@exp1,w
  8034  09C5  1903               	btfsc	3,2
  8035  09C6  29D3               	goto	i1l2264
  8036  09C7  0825               	movf	___ftadd@exp2,w
  8037  09C8  0226               	subwf	___ftadd@exp1,w
  8038  09C9  1803               	skipnc
  8039  09CA  29DA               	goto	i1l2268
  8040  09CB  0326               	decf	___ftadd@exp1,w
  8041  09CC  3AFF               	xorlw	255
  8042  09CD  0725               	addwf	___ftadd@exp2,w
  8043  09CE  00A0               	movwf	??___ftadd
  8044  09CF  3019               	movlw	25
  8045  09D0  0220               	subwf	??___ftadd,w
  8046  09D1  1C03               	skipc
  8047  09D2  29DA               	goto	i1l2268
  8048  09D3                     i1l2264:	
  8049  09D3  087B               	movf	___ftadd@f2,w
  8050  09D4  00F8               	movwf	?___ftadd
  8051  09D5  087C               	movf	___ftadd@f2+1,w
  8052  09D6  00F9               	movwf	?___ftadd+1
  8053  09D7  087D               	movf	___ftadd@f2+2,w
  8054  09D8  00FA               	movwf	?___ftadd+2
  8055  09D9  0008               	return
  8056  09DA                     i1l2268:	
  8057  09DA  0825               	movf	___ftadd@exp2,w
  8058  09DB  1903               	btfsc	3,2
  8059  09DC  0008               	return
  8060  09DD  0826               	movf	___ftadd@exp1,w
  8061  09DE  0225               	subwf	___ftadd@exp2,w
  8062  09DF  1803               	skipnc
  8063  09E0  29E9               	goto	i1l2274
  8064  09E1  0325               	decf	___ftadd@exp2,w
  8065  09E2  3AFF               	xorlw	255
  8066  09E3  0726               	addwf	___ftadd@exp1,w
  8067  09E4  00A0               	movwf	??___ftadd
  8068  09E5  3019               	movlw	25
  8069  09E6  0220               	subwf	??___ftadd,w
  8070  09E7  1803               	btfsc	3,0
  8071  09E8  0008               	return
  8072  09E9                     i1l2274:	
  8073  09E9  3006               	movlw	6
  8074  09EA  00A0               	movwf	??___ftadd
  8075  09EB  0820               	movf	??___ftadd,w
  8076  09EC  00A4               	movwf	___ftadd@sign
  8077  09ED  1BFA               	btfsc	___ftadd@f1+2,7
  8078  09EE  17A4               	bsf	___ftadd@sign,7
  8079  09EF  1BFD               	btfsc	___ftadd@f2+2,7
  8080  09F0  1724               	bsf	___ftadd@sign,6
  8081  09F1  17F9               	bsf	___ftadd@f1+1,7
  8082  09F2  30FF               	movlw	255
  8083  09F3  05F8               	andwf	___ftadd@f1,f
  8084  09F4  30FF               	movlw	255
  8085  09F5  05F9               	andwf	___ftadd@f1+1,f
  8086  09F6  3000               	movlw	0
  8087  09F7  05FA               	andwf	___ftadd@f1+2,f
  8088  09F8  17FC               	bsf	___ftadd@f2+1,7
  8089  09F9  30FF               	movlw	255
  8090  09FA  05FB               	andwf	___ftadd@f2,f
  8091  09FB  30FF               	movlw	255
  8092  09FC  05FC               	andwf	___ftadd@f2+1,f
  8093  09FD  3000               	movlw	0
  8094  09FE  05FD               	andwf	___ftadd@f2+2,f
  8095  09FF  0825               	movf	___ftadd@exp2,w
  8096  0A00  0226               	subwf	___ftadd@exp1,w
  8097  0A01  1803               	skipnc
  8098  0A02  2A29               	goto	i1l2296
  8099  0A03                     i1l2286:	
  8100  0A03  3001               	movlw	1
  8101  0A04                     u229_25:	
  8102  0A04  1003               	clrc
  8103  0A05  0DFB               	rlf	___ftadd@f2,f
  8104  0A06  0DFC               	rlf	___ftadd@f2+1,f
  8105  0A07  0DFD               	rlf	___ftadd@f2+2,f
  8106  0A08  3EFF               	addlw	-1
  8107  0A09  1D03               	skipz
  8108  0A0A  2A04               	goto	u229_25
  8109  0A0B  3001               	movlw	1
  8110  0A0C  02A5               	subwf	___ftadd@exp2,f
  8111  0A0D  0825               	movf	___ftadd@exp2,w
  8112  0A0E  0626               	xorwf	___ftadd@exp1,w
  8113  0A0F  1903               	skipnz
  8114  0A10  2A24               	goto	i1l2294
  8115  0A11  3001               	movlw	1
  8116  0A12  02A4               	subwf	___ftadd@sign,f
  8117  0A13  0824               	movf	___ftadd@sign,w
  8118  0A14  3907               	andlw	7
  8119  0A15  1903               	btfsc	3,2
  8120  0A16  2A24               	goto	i1l2294
  8121  0A17  2A03               	goto	i1l2286
  8122  0A18                     i1l2292:	
  8123  0A18  3001               	movlw	1
  8124  0A19                     u232_25:	
  8125  0A19  1003               	clrc
  8126  0A1A  0CFA               	rrf	___ftadd@f1+2,f
  8127  0A1B  0CF9               	rrf	___ftadd@f1+1,f
  8128  0A1C  0CF8               	rrf	___ftadd@f1,f
  8129  0A1D  3EFF               	addlw	-1
  8130  0A1E  1D03               	skipz
  8131  0A1F  2A19               	goto	u232_25
  8132  0A20  3001               	movlw	1
  8133  0A21  00A0               	movwf	??___ftadd
  8134  0A22  0820               	movf	??___ftadd,w
  8135  0A23  07A6               	addwf	___ftadd@exp1,f
  8136  0A24                     i1l2294:	
  8137  0A24  0826               	movf	___ftadd@exp1,w
  8138  0A25  0625               	xorwf	___ftadd@exp2,w
  8139  0A26  1903               	btfsc	3,2
  8140  0A27  2A52               	goto	i1l784
  8141  0A28  2A18               	goto	i1l2292
  8142  0A29                     i1l2296:	
  8143  0A29  0826               	movf	___ftadd@exp1,w
  8144  0A2A  0225               	subwf	___ftadd@exp2,w
  8145  0A2B  1803               	skipnc
  8146  0A2C  2A52               	goto	i1l784
  8147  0A2D                     i1l2298:	
  8148  0A2D  3001               	movlw	1
  8149  0A2E                     u235_25:	
  8150  0A2E  1003               	clrc
  8151  0A2F  0DF8               	rlf	___ftadd@f1,f
  8152  0A30  0DF9               	rlf	___ftadd@f1+1,f
  8153  0A31  0DFA               	rlf	___ftadd@f1+2,f
  8154  0A32  3EFF               	addlw	-1
  8155  0A33  1D03               	skipz
  8156  0A34  2A2E               	goto	u235_25
  8157  0A35  3001               	movlw	1
  8158  0A36  02A6               	subwf	___ftadd@exp1,f
  8159  0A37  0825               	movf	___ftadd@exp2,w
  8160  0A38  0626               	xorwf	___ftadd@exp1,w
  8161  0A39  1903               	skipnz
  8162  0A3A  2A4E               	goto	i1l2306
  8163  0A3B  3001               	movlw	1
  8164  0A3C  02A4               	subwf	___ftadd@sign,f
  8165  0A3D  0824               	movf	___ftadd@sign,w
  8166  0A3E  3907               	andlw	7
  8167  0A3F  1903               	btfsc	3,2
  8168  0A40  2A4E               	goto	i1l2306
  8169  0A41  2A2D               	goto	i1l2298
  8170  0A42                     i1l2304:	
  8171  0A42  3001               	movlw	1
  8172  0A43                     u238_25:	
  8173  0A43  1003               	clrc
  8174  0A44  0CFD               	rrf	___ftadd@f2+2,f
  8175  0A45  0CFC               	rrf	___ftadd@f2+1,f
  8176  0A46  0CFB               	rrf	___ftadd@f2,f
  8177  0A47  3EFF               	addlw	-1
  8178  0A48  1D03               	skipz
  8179  0A49  2A43               	goto	u238_25
  8180  0A4A  3001               	movlw	1
  8181  0A4B  00A0               	movwf	??___ftadd
  8182  0A4C  0820               	movf	??___ftadd,w
  8183  0A4D  07A5               	addwf	___ftadd@exp2,f
  8184  0A4E                     i1l2306:	
  8185  0A4E  0826               	movf	___ftadd@exp1,w
  8186  0A4F  0625               	xorwf	___ftadd@exp2,w
  8187  0A50  1D03               	skipz
  8188  0A51  2A42               	goto	i1l2304
  8189  0A52                     i1l784:	
  8190  0A52  1FA4               	btfss	___ftadd@sign,7
  8191  0A53  2A64               	goto	i1l2310
  8192  0A54  30FF               	movlw	255
  8193  0A55  06F8               	xorwf	___ftadd@f1,f
  8194  0A56  30FF               	movlw	255
  8195  0A57  06F9               	xorwf	___ftadd@f1+1,f
  8196  0A58  30FF               	movlw	255
  8197  0A59  06FA               	xorwf	___ftadd@f1+2,f
  8198  0A5A  3001               	movlw	1
  8199  0A5B  07F8               	addwf	___ftadd@f1,f
  8200  0A5C  3000               	movlw	0
  8201  0A5D  1803               	skipnc
  8202  0A5E  3001               	movlw	1
  8203  0A5F  07F9               	addwf	___ftadd@f1+1,f
  8204  0A60  3000               	movlw	0
  8205  0A61  1803               	skipnc
  8206  0A62  3001               	movlw	1
  8207  0A63  07FA               	addwf	___ftadd@f1+2,f
  8208  0A64                     i1l2310:	
  8209  0A64  1F24               	btfss	___ftadd@sign,6
  8210  0A65  2A76               	goto	i1l2314
  8211  0A66  30FF               	movlw	255
  8212  0A67  06FB               	xorwf	___ftadd@f2,f
  8213  0A68  30FF               	movlw	255
  8214  0A69  06FC               	xorwf	___ftadd@f2+1,f
  8215  0A6A  30FF               	movlw	255
  8216  0A6B  06FD               	xorwf	___ftadd@f2+2,f
  8217  0A6C  3001               	movlw	1
  8218  0A6D  07FB               	addwf	___ftadd@f2,f
  8219  0A6E  3000               	movlw	0
  8220  0A6F  1803               	skipnc
  8221  0A70  3001               	movlw	1
  8222  0A71  07FC               	addwf	___ftadd@f2+1,f
  8223  0A72  3000               	movlw	0
  8224  0A73  1803               	skipnc
  8225  0A74  3001               	movlw	1
  8226  0A75  07FD               	addwf	___ftadd@f2+2,f
  8227  0A76                     i1l2314:	
  8228  0A76  01A4               	clrf	___ftadd@sign
  8229  0A77  0878               	movf	___ftadd@f1,w
  8230  0A78  07FB               	addwf	___ftadd@f2,f
  8231  0A79  0879               	movf	___ftadd@f1+1,w
  8232  0A7A  1103               	clrz
  8233  0A7B  1803               	skipnc
  8234  0A7C  0A79               	incf	___ftadd@f1+1,w
  8235  0A7D  1D03               	btfss	3,2
  8236  0A7E  07FC               	addwf	___ftadd@f2+1,f
  8237  0A7F  087A               	movf	___ftadd@f1+2,w
  8238  0A80  1103               	clrz
  8239  0A81  1803               	skipnc
  8240  0A82  0A7A               	incf	___ftadd@f1+2,w
  8241  0A83  1D03               	btfss	3,2
  8242  0A84  07FD               	addwf	___ftadd@f2+2,f
  8243  0A85  1FFD               	btfss	___ftadd@f2+2,7
  8244  0A86  2A99               	goto	i1l2324
  8245  0A87  30FF               	movlw	255
  8246  0A88  06FB               	xorwf	___ftadd@f2,f
  8247  0A89  30FF               	movlw	255
  8248  0A8A  06FC               	xorwf	___ftadd@f2+1,f
  8249  0A8B  30FF               	movlw	255
  8250  0A8C  06FD               	xorwf	___ftadd@f2+2,f
  8251  0A8D  3001               	movlw	1
  8252  0A8E  07FB               	addwf	___ftadd@f2,f
  8253  0A8F  3000               	movlw	0
  8254  0A90  1803               	skipnc
  8255  0A91  3001               	movlw	1
  8256  0A92  07FC               	addwf	___ftadd@f2+1,f
  8257  0A93  3000               	movlw	0
  8258  0A94  1803               	skipnc
  8259  0A95  3001               	movlw	1
  8260  0A96  07FD               	addwf	___ftadd@f2+2,f
  8261  0A97  01A4               	clrf	___ftadd@sign
  8262  0A98  0AA4               	incf	___ftadd@sign,f
  8263  0A99                     i1l2324:	
  8264  0A99  087B               	movf	___ftadd@f2,w
  8265  0A9A  00F0               	movwf	___ftpack@arg
  8266  0A9B  087C               	movf	___ftadd@f2+1,w
  8267  0A9C  00F1               	movwf	___ftpack@arg+1
  8268  0A9D  087D               	movf	___ftadd@f2+2,w
  8269  0A9E  00F2               	movwf	___ftpack@arg+2
  8270  0A9F  0826               	movf	___ftadd@exp1,w
  8271  0AA0  00A0               	movwf	??___ftadd
  8272  0AA1  0820               	movf	??___ftadd,w
  8273  0AA2  00F3               	movwf	___ftpack@exp
  8274  0AA3  0824               	movf	___ftadd@sign,w
  8275  0AA4  00A1               	movwf	??___ftadd+1
  8276  0AA5  0821               	movf	??___ftadd+1,w
  8277  0AA6  00F4               	movwf	___ftpack@sign
  8278  0AA7  160A  118A  2612   	fcall	___ftpack
  8279  0AAA  0870               	movf	?___ftpack,w
  8280  0AAB  00F8               	movwf	?___ftadd
  8281  0AAC  0871               	movf	?___ftpack+1,w
  8282  0AAD  00F9               	movwf	?___ftadd+1
  8283  0AAE  0872               	movf	?___ftpack+2,w
  8284  0AAF  00FA               	movwf	?___ftadd+2
  8285  0AB0  0008               	return
  8286  0AB1                     __end_of___ftadd:	
  8287                           
  8288                           	psect	text36
  8289  131E                     __ptext36:	
  8290 ;; *************** function _max_val *****************
  8291 ;; Defined at:
  8292 ;;		line 118 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  a               3    0[BANK0 ] float 
  8295 ;;  b               3    3[BANK0 ] float 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  3    0[BANK0 ] float 
  8300 ;; Registers used:
  8301 ;;		wreg, status,2, status,0, pclath, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8307 ;;      Params:         0       6       0       0       0
  8308 ;;      Locals:         0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0
  8310 ;;      Totals:         0       6       0       0       0
  8311 ;;Total ram usage:        6 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    1
  8314 ;; This function calls:
  8315 ;;		___ftge
  8316 ;; This function is called by:
  8317 ;;		_Fuzzy
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           
  8322                           ;psect for function _max_val
  8323  131E                     _max_val:	
  8324                           
  8325                           ;main.c: 120: if (a > b)
  8326                           
  8327                           ;incstack = 0
  8328                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8329  131E  1283               	bcf	3,5	;RP0=0, select bank0
  8330  131F  1303               	bcf	3,6	;RP1=0, select bank0
  8331  1320  0823               	movf	max_val@b,w
  8332  1321  00F0               	movwf	___ftge@ff1
  8333  1322  0824               	movf	max_val@b+1,w
  8334  1323  00F1               	movwf	___ftge@ff1+1
  8335  1324  0825               	movf	max_val@b+2,w
  8336  1325  00F2               	movwf	___ftge@ff1+2
  8337  1326  0820               	movf	max_val@a,w
  8338  1327  00F3               	movwf	___ftge@ff2
  8339  1328  0821               	movf	max_val@a+1,w
  8340  1329  00F4               	movwf	___ftge@ff2+1
  8341  132A  0822               	movf	max_val@a+2,w
  8342  132B  00F5               	movwf	___ftge@ff2+2
  8343  132C  160A  118A  25B5  160A  118A  	fcall	___ftge
  8344  1331  1C03               	btfss	3,0
  8345  1332  0008               	return
  8346                           
  8347                           ;main.c: 122: else
  8348                           ;main.c: 123: return b;
  8349                           
  8350                           ;main.c: 121: return a;
  8351  1333  1283               	bcf	3,5	;RP0=0, select bank0
  8352  1334  1303               	bcf	3,6	;RP1=0, select bank0
  8353  1335  0823               	movf	max_val@b,w
  8354  1336  00A0               	movwf	?_max_val
  8355  1337  0824               	movf	max_val@b+1,w
  8356  1338  00A1               	movwf	?_max_val+1
  8357  1339  0825               	movf	max_val@b+2,w
  8358  133A  00A2               	movwf	?_max_val+2
  8359  133B  0008               	return
  8360  133C                     __end_of_max_val:	
  8361                           
  8362                           	psect	text37
  8363  15B5                     __ptext37:	
  8364 ;; *************** function ___ftge *****************
  8365 ;; Defined at:
  8366 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  ff1             3    0[COMMON] float 
  8369 ;;  ff2             3    3[COMMON] float 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;		None               void
  8374 ;; Registers used:
  8375 ;;		wreg, status,2, status,0
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8381 ;;      Params:         6       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0
  8383 ;;      Temps:          6       0       0       0       0
  8384 ;;      Totals:        12       0       0       0       0
  8385 ;;Total ram usage:       12 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_trimf
  8391 ;;		_trapmf
  8392 ;;		_max_val
  8393 ;;		_Fuzzy
  8394 ;;		_min_val
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function ___ftge
  8400  15B5                     ___ftge:	
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8404  15B5  1FF2               	btfss	___ftge@ff1+2,7
  8405  15B6  2DDC               	goto	i1l2374
  8406  15B7  3000               	movlw	0
  8407  15B8  00F6               	movwf	??___ftge
  8408  15B9  3000               	movlw	0
  8409  15BA  00F7               	movwf	??___ftge+1
  8410  15BB  3080               	movlw	128
  8411  15BC  00F8               	movwf	??___ftge+2
  8412  15BD  0970               	comf	___ftge@ff1,w
  8413  15BE  00F9               	movwf	??___ftge+3
  8414  15BF  0971               	comf	___ftge@ff1+1,w
  8415  15C0  00FA               	movwf	??___ftge+4
  8416  15C1  0972               	comf	___ftge@ff1+2,w
  8417  15C2  00FB               	movwf	??___ftge+5
  8418  15C3  0AF9               	incf	??___ftge+3,f
  8419  15C4  1903               	skipnz
  8420  15C5  0AFA               	incf	??___ftge+4,f
  8421  15C6  1903               	skipnz
  8422  15C7  0AFB               	incf	??___ftge+5,f
  8423  15C8  0879               	movf	??___ftge+3,w
  8424  15C9  07F6               	addwf	??___ftge,f
  8425  15CA  087A               	movf	??___ftge+4,w
  8426  15CB  1803               	skipnc
  8427  15CC  0F7A               	incfsz	??___ftge+4,w
  8428  15CD  2DCF               	goto	u253_21
  8429  15CE  2DD0               	goto	u253_22
  8430  15CF                     u253_21:	
  8431  15CF  07F7               	addwf	??___ftge+1,f
  8432  15D0                     u253_22:	
  8433  15D0  087B               	movf	??___ftge+5,w
  8434  15D1  1803               	skipnc
  8435  15D2  0F7B               	incfsz	??___ftge+5,w
  8436  15D3  2DD5               	goto	u253_23
  8437  15D4  2DD6               	goto	u253_24
  8438  15D5                     u253_23:	
  8439  15D5  07F8               	addwf	??___ftge+2,f
  8440  15D6                     u253_24:	
  8441  15D6  0876               	movf	??___ftge,w
  8442  15D7  00F0               	movwf	___ftge@ff1
  8443  15D8  0877               	movf	??___ftge+1,w
  8444  15D9  00F1               	movwf	___ftge@ff1+1
  8445  15DA  0878               	movf	??___ftge+2,w
  8446  15DB  00F2               	movwf	___ftge@ff1+2
  8447  15DC                     i1l2374:	
  8448  15DC  1FF5               	btfss	___ftge@ff2+2,7
  8449  15DD  2E03               	goto	i1l2378
  8450  15DE  3000               	movlw	0
  8451  15DF  00F6               	movwf	??___ftge
  8452  15E0  3000               	movlw	0
  8453  15E1  00F7               	movwf	??___ftge+1
  8454  15E2  3080               	movlw	128
  8455  15E3  00F8               	movwf	??___ftge+2
  8456  15E4  0973               	comf	___ftge@ff2,w
  8457  15E5  00F9               	movwf	??___ftge+3
  8458  15E6  0974               	comf	___ftge@ff2+1,w
  8459  15E7  00FA               	movwf	??___ftge+4
  8460  15E8  0975               	comf	___ftge@ff2+2,w
  8461  15E9  00FB               	movwf	??___ftge+5
  8462  15EA  0AF9               	incf	??___ftge+3,f
  8463  15EB  1903               	skipnz
  8464  15EC  0AFA               	incf	??___ftge+4,f
  8465  15ED  1903               	skipnz
  8466  15EE  0AFB               	incf	??___ftge+5,f
  8467  15EF  0879               	movf	??___ftge+3,w
  8468  15F0  07F6               	addwf	??___ftge,f
  8469  15F1  087A               	movf	??___ftge+4,w
  8470  15F2  1803               	skipnc
  8471  15F3  0F7A               	incfsz	??___ftge+4,w
  8472  15F4  2DF6               	goto	u255_21
  8473  15F5  2DF7               	goto	u255_22
  8474  15F6                     u255_21:	
  8475  15F6  07F7               	addwf	??___ftge+1,f
  8476  15F7                     u255_22:	
  8477  15F7  087B               	movf	??___ftge+5,w
  8478  15F8  1803               	skipnc
  8479  15F9  0F7B               	incfsz	??___ftge+5,w
  8480  15FA  2DFC               	goto	u255_23
  8481  15FB  2DFD               	goto	u255_24
  8482  15FC                     u255_23:	
  8483  15FC  07F8               	addwf	??___ftge+2,f
  8484  15FD                     u255_24:	
  8485  15FD  0876               	movf	??___ftge,w
  8486  15FE  00F3               	movwf	___ftge@ff2
  8487  15FF  0877               	movf	??___ftge+1,w
  8488  1600  00F4               	movwf	___ftge@ff2+1
  8489  1601  0878               	movf	??___ftge+2,w
  8490  1602  00F5               	movwf	___ftge@ff2+2
  8491  1603                     i1l2378:	
  8492  1603  3080               	movlw	128
  8493  1604  06F2               	xorwf	___ftge@ff1+2,f
  8494  1605  3080               	movlw	128
  8495  1606  06F5               	xorwf	___ftge@ff2+2,f
  8496  1607  0875               	movf	___ftge@ff2+2,w
  8497  1608  0272               	subwf	___ftge@ff1+2,w
  8498  1609  1D03               	skipz
  8499  160A  0008               	return
  8500  160B  0874               	movf	___ftge@ff2+1,w
  8501  160C  0271               	subwf	___ftge@ff1+1,w
  8502  160D  1D03               	skipz
  8503  160E  0008               	return
  8504  160F  0873               	movf	___ftge@ff2,w
  8505  1610  0270               	subwf	___ftge@ff1,w
  8506  1611  0008               	return
  8507  1612                     __end_of___ftge:	
  8508                           
  8509                           	psect	text38
  8510  12BD                     __ptext38:	
  8511 ;; *************** function ___lwtoft *****************
  8512 ;; Defined at:
  8513 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  c               2    8[COMMON] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  3    8[COMMON] float 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         3       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0
  8529 ;;      Temps:          1       0       0       0       0
  8530 ;;      Totals:         4       0       0       0       0
  8531 ;;Total ram usage:        4 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    1
  8534 ;; This function calls:
  8535 ;;		___ftpack
  8536 ;; This function is called by:
  8537 ;;		_Fuzzy
  8538 ;;		_ISR
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function ___lwtoft
  8544  12BD                     ___lwtoft:	
  8545                           
  8546                           ;incstack = 0
  8547                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8548  12BD  0878               	movf	___lwtoft@c,w
  8549  12BE  00F0               	movwf	___ftpack@arg
  8550  12BF  0879               	movf	___lwtoft@c+1,w
  8551  12C0  00F1               	movwf	___ftpack@arg+1
  8552  12C1  01F2               	clrf	___ftpack@arg+2
  8553  12C2  308E               	movlw	142
  8554  12C3  00FB               	movwf	??___lwtoft
  8555  12C4  087B               	movf	??___lwtoft,w
  8556  12C5  00F3               	movwf	___ftpack@exp
  8557  12C6  01F4               	clrf	___ftpack@sign
  8558  12C7  160A  118A  2612   	fcall	___ftpack
  8559  12CA  0870               	movf	?___ftpack,w
  8560  12CB  00F8               	movwf	?___lwtoft
  8561  12CC  0871               	movf	?___ftpack+1,w
  8562  12CD  00F9               	movwf	?___lwtoft+1
  8563  12CE  0872               	movf	?___ftpack+2,w
  8564  12CF  00FA               	movwf	?___lwtoft+2
  8565  12D0  0008               	return
  8566  12D1                     __end_of___lwtoft:	
  8567                           
  8568                           	psect	text39
  8569  16E5                     __ptext39:	
  8570 ;; *************** function ___fttol *****************
  8571 ;; Defined at:
  8572 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  f1              3    0[COMMON] float 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  lval            4    9[COMMON] unsigned long 
  8577 ;;  exp1            1   13[COMMON] unsigned char 
  8578 ;;  sign1           1    8[COMMON] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  4    0[COMMON] long 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8588 ;;      Params:         4       0       0       0       0
  8589 ;;      Locals:         6       0       0       0       0
  8590 ;;      Temps:          4       0       0       0       0
  8591 ;;      Totals:        14       0       0       0       0
  8592 ;;Total ram usage:       14 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_Fuzzy
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function ___fttol
  8603  16E5                     ___fttol:	
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8607  16E5  0870               	movf	___fttol@f1,w
  8608  16E6  00F4               	movwf	??___fttol
  8609  16E7  0871               	movf	___fttol@f1+1,w
  8610  16E8  00F5               	movwf	??___fttol+1
  8611  16E9  0872               	movf	___fttol@f1+2,w
  8612  16EA  00F6               	movwf	??___fttol+2
  8613  16EB  1003               	clrc
  8614  16EC  0D75               	rlf	??___fttol+1,w
  8615  16ED  0D76               	rlf	??___fttol+2,w
  8616  16EE  00F7               	movwf	??___fttol+3
  8617  16EF  0877               	movf	??___fttol+3,w
  8618  16F0  00FD               	movwf	___fttol@exp1
  8619  16F1  08FD               	movf	___fttol@exp1,f
  8620  16F2  1D03               	skipz
  8621  16F3  2EFD               	goto	i1l2606
  8622  16F4  3000               	movlw	0
  8623  16F5  00F3               	movwf	?___fttol+3
  8624  16F6  3000               	movlw	0
  8625  16F7  00F2               	movwf	?___fttol+2
  8626  16F8  3000               	movlw	0
  8627  16F9  00F1               	movwf	?___fttol+1
  8628  16FA  3000               	movlw	0
  8629  16FB  00F0               	movwf	?___fttol
  8630  16FC  0008               	return
  8631  16FD                     i1l2606:	
  8632  16FD  0870               	movf	___fttol@f1,w
  8633  16FE  00F4               	movwf	??___fttol
  8634  16FF  0871               	movf	___fttol@f1+1,w
  8635  1700  00F5               	movwf	??___fttol+1
  8636  1701  0872               	movf	___fttol@f1+2,w
  8637  1702  00F6               	movwf	??___fttol+2
  8638  1703  3017               	movlw	23
  8639  1704                     u306_25:	
  8640  1704  1003               	clrc
  8641  1705  0CF6               	rrf	??___fttol+2,f
  8642  1706  0CF5               	rrf	??___fttol+1,f
  8643  1707  0CF4               	rrf	??___fttol,f
  8644  1708  3EFF               	addlw	-1
  8645  1709  1D03               	skipz
  8646  170A  2F04               	goto	u306_25
  8647  170B  0874               	movf	??___fttol,w
  8648  170C  00F7               	movwf	??___fttol+3
  8649  170D  0877               	movf	??___fttol+3,w
  8650  170E  00F8               	movwf	___fttol@sign1
  8651  170F  17F1               	bsf	___fttol@f1+1,7
  8652  1710  30FF               	movlw	255
  8653  1711  05F0               	andwf	___fttol@f1,f
  8654  1712  30FF               	movlw	255
  8655  1713  05F1               	andwf	___fttol@f1+1,f
  8656  1714  3000               	movlw	0
  8657  1715  05F2               	andwf	___fttol@f1+2,f
  8658  1716  0870               	movf	___fttol@f1,w
  8659  1717  00F9               	movwf	___fttol@lval
  8660  1718  0871               	movf	___fttol@f1+1,w
  8661  1719  00FA               	movwf	___fttol@lval+1
  8662  171A  0872               	movf	___fttol@f1+2,w
  8663  171B  00FB               	movwf	___fttol@lval+2
  8664  171C  01FC               	clrf	___fttol@lval+3
  8665  171D  308E               	movlw	142
  8666  171E  02FD               	subwf	___fttol@exp1,f
  8667  171F  1FFD               	btfss	___fttol@exp1,7
  8668  1720  2F3F               	goto	i1l2626
  8669  1721  087D               	movf	___fttol@exp1,w
  8670  1722  3A80               	xorlw	128
  8671  1723  3E8F               	addlw	143
  8672  1724  1803               	skipnc
  8673  1725  2F2F               	goto	i1l2624
  8674  1726  3000               	movlw	0
  8675  1727  00F3               	movwf	?___fttol+3
  8676  1728  3000               	movlw	0
  8677  1729  00F2               	movwf	?___fttol+2
  8678  172A  3000               	movlw	0
  8679  172B  00F1               	movwf	?___fttol+1
  8680  172C  3000               	movlw	0
  8681  172D  00F0               	movwf	?___fttol
  8682  172E  0008               	return
  8683  172F                     i1l2624:	
  8684  172F  3001               	movlw	1
  8685  1730                     u309_25:	
  8686  1730  1003               	clrc
  8687  1731  0CFC               	rrf	___fttol@lval+3,f
  8688  1732  0CFB               	rrf	___fttol@lval+2,f
  8689  1733  0CFA               	rrf	___fttol@lval+1,f
  8690  1734  0CF9               	rrf	___fttol@lval,f
  8691  1735  3EFF               	addlw	-1
  8692  1736  1D03               	skipz
  8693  1737  2F30               	goto	u309_25
  8694  1738  3001               	movlw	1
  8695  1739  00F4               	movwf	??___fttol
  8696  173A  0874               	movf	??___fttol,w
  8697  173B  07FD               	addwf	___fttol@exp1,f
  8698  173C  1903               	btfsc	3,2
  8699  173D  2F5A               	goto	i1l2636
  8700  173E  2F2F               	goto	i1l2624
  8701  173F                     i1l2626:	
  8702  173F  3018               	movlw	24
  8703  1740  027D               	subwf	___fttol@exp1,w
  8704  1741  1C03               	skipc
  8705  1742  2F57               	goto	i1l2634
  8706  1743  3000               	movlw	0
  8707  1744  00F3               	movwf	?___fttol+3
  8708  1745  3000               	movlw	0
  8709  1746  00F2               	movwf	?___fttol+2
  8710  1747  3000               	movlw	0
  8711  1748  00F1               	movwf	?___fttol+1
  8712  1749  3000               	movlw	0
  8713  174A  00F0               	movwf	?___fttol
  8714  174B  0008               	return
  8715  174C                     i1l2632:	
  8716  174C  3001               	movlw	1
  8717  174D  00F4               	movwf	??___fttol
  8718  174E                     u312_25:	
  8719  174E  1003               	clrc
  8720  174F  0DF9               	rlf	___fttol@lval,f
  8721  1750  0DFA               	rlf	___fttol@lval+1,f
  8722  1751  0DFB               	rlf	___fttol@lval+2,f
  8723  1752  0DFC               	rlf	___fttol@lval+3,f
  8724  1753  0BF4               	decfsz	??___fttol,f
  8725  1754  2F4E               	goto	u312_25
  8726  1755  3001               	movlw	1
  8727  1756  02FD               	subwf	___fttol@exp1,f
  8728  1757                     i1l2634:	
  8729  1757  08FD               	movf	___fttol@exp1,f
  8730  1758  1D03               	skipz
  8731  1759  2F4C               	goto	i1l2632
  8732  175A                     i1l2636:	
  8733  175A  0878               	movf	___fttol@sign1,w
  8734  175B  1903               	btfsc	3,2
  8735  175C  2F68               	goto	i1l2640
  8736  175D  09F9               	comf	___fttol@lval,f
  8737  175E  09FA               	comf	___fttol@lval+1,f
  8738  175F  09FB               	comf	___fttol@lval+2,f
  8739  1760  09FC               	comf	___fttol@lval+3,f
  8740  1761  0AF9               	incf	___fttol@lval,f
  8741  1762  1903               	skipnz
  8742  1763  0AFA               	incf	___fttol@lval+1,f
  8743  1764  1903               	skipnz
  8744  1765  0AFB               	incf	___fttol@lval+2,f
  8745  1766  1903               	skipnz
  8746  1767  0AFC               	incf	___fttol@lval+3,f
  8747  1768                     i1l2640:	
  8748  1768  087C               	movf	___fttol@lval+3,w
  8749  1769  00F3               	movwf	?___fttol+3
  8750  176A  087B               	movf	___fttol@lval+2,w
  8751  176B  00F2               	movwf	?___fttol+2
  8752  176C  087A               	movf	___fttol@lval+1,w
  8753  176D  00F1               	movwf	?___fttol+1
  8754  176E  0879               	movf	___fttol@lval,w
  8755  176F  00F0               	movwf	?___fttol
  8756  1770  0008               	return
  8757  1771                     __end_of___fttol:	
  8758                           
  8759                           	psect	text40
  8760  0729                     __ptext40:	
  8761 ;; *************** function ___ftmul *****************
  8762 ;; Defined at:
  8763 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  f1              3   23[BANK0 ] float 
  8766 ;;  f2              3   26[BANK0 ] float 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  8769 ;;  sign            1   38[BANK0 ] unsigned char 
  8770 ;;  cntr            1   37[BANK0 ] unsigned char 
  8771 ;;  exp             1   33[BANK0 ] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  3   23[BANK0 ] float 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, pclath, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         0       6       0       0       0
  8782 ;;      Locals:         0       6       0       0       0
  8783 ;;      Temps:          0       4       0       0       0
  8784 ;;      Totals:         0      16       0       0       0
  8785 ;;Total ram usage:       16 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    1
  8788 ;; This function calls:
  8789 ;;		___ftpack
  8790 ;; This function is called by:
  8791 ;;		_Fuzzy
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function ___ftmul
  8797  0729                     ___ftmul:	
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8801  0729  1283               	bcf	3,5	;RP0=0, select bank0
  8802  072A  1303               	bcf	3,6	;RP1=0, select bank0
  8803  072B  0837               	movf	___ftmul@f1,w
  8804  072C  00BD               	movwf	??___ftmul
  8805  072D  0838               	movf	___ftmul@f1+1,w
  8806  072E  00BE               	movwf	??___ftmul+1
  8807  072F  0839               	movf	___ftmul@f1+2,w
  8808  0730  00BF               	movwf	??___ftmul+2
  8809  0731  1003               	clrc
  8810  0732  0D3E               	rlf	??___ftmul+1,w
  8811  0733  0D3F               	rlf	??___ftmul+2,w
  8812  0734  00C0               	movwf	??___ftmul+3
  8813  0735  0840               	movf	??___ftmul+3,w
  8814  0736  00C1               	movwf	___ftmul@exp
  8815  0737  08C1               	movf	___ftmul@exp,f
  8816  0738  1D03               	skipz
  8817  0739  2F41               	goto	i1l2556
  8818  073A  3000               	movlw	0
  8819  073B  00B7               	movwf	?___ftmul
  8820  073C  3000               	movlw	0
  8821  073D  00B8               	movwf	?___ftmul+1
  8822  073E  3000               	movlw	0
  8823  073F  00B9               	movwf	?___ftmul+2
  8824  0740  0008               	return
  8825  0741                     i1l2556:	
  8826  0741  083A               	movf	___ftmul@f2,w
  8827  0742  00BD               	movwf	??___ftmul
  8828  0743  083B               	movf	___ftmul@f2+1,w
  8829  0744  00BE               	movwf	??___ftmul+1
  8830  0745  083C               	movf	___ftmul@f2+2,w
  8831  0746  00BF               	movwf	??___ftmul+2
  8832  0747  1003               	clrc
  8833  0748  0D3E               	rlf	??___ftmul+1,w
  8834  0749  0D3F               	rlf	??___ftmul+2,w
  8835  074A  00C0               	movwf	??___ftmul+3
  8836  074B  0840               	movf	??___ftmul+3,w
  8837  074C  00C6               	movwf	___ftmul@sign
  8838  074D  08C6               	movf	___ftmul@sign,f
  8839  074E  1D03               	skipz
  8840  074F  2F57               	goto	i1l2562
  8841  0750  3000               	movlw	0
  8842  0751  00B7               	movwf	?___ftmul
  8843  0752  3000               	movlw	0
  8844  0753  00B8               	movwf	?___ftmul+1
  8845  0754  3000               	movlw	0
  8846  0755  00B9               	movwf	?___ftmul+2
  8847  0756  0008               	return
  8848  0757                     i1l2562:	
  8849  0757  0846               	movf	___ftmul@sign,w
  8850  0758  3E7B               	addlw	123
  8851  0759  00BD               	movwf	??___ftmul
  8852  075A  083D               	movf	??___ftmul,w
  8853  075B  07C1               	addwf	___ftmul@exp,f
  8854  075C  0837               	movf	___ftmul@f1,w
  8855  075D  00BD               	movwf	??___ftmul
  8856  075E  0838               	movf	___ftmul@f1+1,w
  8857  075F  00BE               	movwf	??___ftmul+1
  8858  0760  0839               	movf	___ftmul@f1+2,w
  8859  0761  00BF               	movwf	??___ftmul+2
  8860  0762  3010               	movlw	16
  8861  0763                     u293_25:	
  8862  0763  1003               	clrc
  8863  0764  0CBF               	rrf	??___ftmul+2,f
  8864  0765  0CBE               	rrf	??___ftmul+1,f
  8865  0766  0CBD               	rrf	??___ftmul,f
  8866  0767  3EFF               	addlw	-1
  8867  0768  1D03               	skipz
  8868  0769  2F63               	goto	u293_25
  8869  076A  083D               	movf	??___ftmul,w
  8870  076B  00C0               	movwf	??___ftmul+3
  8871  076C  0840               	movf	??___ftmul+3,w
  8872  076D  00C6               	movwf	___ftmul@sign
  8873  076E  083A               	movf	___ftmul@f2,w
  8874  076F  00BD               	movwf	??___ftmul
  8875  0770  083B               	movf	___ftmul@f2+1,w
  8876  0771  00BE               	movwf	??___ftmul+1
  8877  0772  083C               	movf	___ftmul@f2+2,w
  8878  0773  00BF               	movwf	??___ftmul+2
  8879  0774  3010               	movlw	16
  8880  0775                     u294_25:	
  8881  0775  1003               	clrc
  8882  0776  0CBF               	rrf	??___ftmul+2,f
  8883  0777  0CBE               	rrf	??___ftmul+1,f
  8884  0778  0CBD               	rrf	??___ftmul,f
  8885  0779  3EFF               	addlw	-1
  8886  077A  1D03               	skipz
  8887  077B  2F75               	goto	u294_25
  8888  077C  083D               	movf	??___ftmul,w
  8889  077D  00C0               	movwf	??___ftmul+3
  8890  077E  0840               	movf	??___ftmul+3,w
  8891  077F  06C6               	xorwf	___ftmul@sign,f
  8892  0780  3080               	movlw	128
  8893  0781  00BD               	movwf	??___ftmul
  8894  0782  083D               	movf	??___ftmul,w
  8895  0783  05C6               	andwf	___ftmul@sign,f
  8896  0784  17B8               	bsf	___ftmul@f1+1,7
  8897  0785  17BB               	bsf	___ftmul@f2+1,7
  8898  0786  30FF               	movlw	255
  8899  0787  05BA               	andwf	___ftmul@f2,f
  8900  0788  30FF               	movlw	255
  8901  0789  05BB               	andwf	___ftmul@f2+1,f
  8902  078A  3000               	movlw	0
  8903  078B  05BC               	andwf	___ftmul@f2+2,f
  8904  078C  3000               	movlw	0
  8905  078D  00C2               	movwf	___ftmul@f3_as_product
  8906  078E  3000               	movlw	0
  8907  078F  00C3               	movwf	___ftmul@f3_as_product+1
  8908  0790  3000               	movlw	0
  8909  0791  00C4               	movwf	___ftmul@f3_as_product+2
  8910  0792  3007               	movlw	7
  8911  0793  00BD               	movwf	??___ftmul
  8912  0794  083D               	movf	??___ftmul,w
  8913  0795  00C5               	movwf	___ftmul@cntr
  8914  0796                     i1l2574:	
  8915  0796  1C37               	btfss	___ftmul@f1,0
  8916  0797  2FA6               	goto	i1l2578
  8917  0798  083A               	movf	___ftmul@f2,w
  8918  0799  07C2               	addwf	___ftmul@f3_as_product,f
  8919  079A  083B               	movf	___ftmul@f2+1,w
  8920  079B  1103               	clrz
  8921  079C  1803               	skipnc
  8922  079D  0A3B               	incf	___ftmul@f2+1,w
  8923  079E  1D03               	btfss	3,2
  8924  079F  07C3               	addwf	___ftmul@f3_as_product+1,f
  8925  07A0  083C               	movf	___ftmul@f2+2,w
  8926  07A1  1103               	clrz
  8927  07A2  1803               	skipnc
  8928  07A3  0A3C               	incf	___ftmul@f2+2,w
  8929  07A4  1D03               	btfss	3,2
  8930  07A5  07C4               	addwf	___ftmul@f3_as_product+2,f
  8931  07A6                     i1l2578:	
  8932  07A6  3001               	movlw	1
  8933  07A7                     u297_25:	
  8934  07A7  1003               	clrc
  8935  07A8  0CB9               	rrf	___ftmul@f1+2,f
  8936  07A9  0CB8               	rrf	___ftmul@f1+1,f
  8937  07AA  0CB7               	rrf	___ftmul@f1,f
  8938  07AB  3EFF               	addlw	-1
  8939  07AC  1D03               	skipz
  8940  07AD  2FA7               	goto	u297_25
  8941  07AE  3001               	movlw	1
  8942  07AF                     u298_25:	
  8943  07AF  1003               	clrc
  8944  07B0  0DBA               	rlf	___ftmul@f2,f
  8945  07B1  0DBB               	rlf	___ftmul@f2+1,f
  8946  07B2  0DBC               	rlf	___ftmul@f2+2,f
  8947  07B3  3EFF               	addlw	-1
  8948  07B4  1D03               	skipz
  8949  07B5  2FAF               	goto	u298_25
  8950  07B6  3001               	movlw	1
  8951  07B7  02C5               	subwf	___ftmul@cntr,f
  8952  07B8  1D03               	btfss	3,2
  8953  07B9  2F96               	goto	i1l2574
  8954  07BA  3009               	movlw	9
  8955  07BB  00BD               	movwf	??___ftmul
  8956  07BC  083D               	movf	??___ftmul,w
  8957  07BD  00C5               	movwf	___ftmul@cntr
  8958  07BE                     i1l2586:	
  8959  07BE  1C37               	btfss	___ftmul@f1,0
  8960  07BF  2FCE               	goto	i1l2590
  8961  07C0  083A               	movf	___ftmul@f2,w
  8962  07C1  07C2               	addwf	___ftmul@f3_as_product,f
  8963  07C2  083B               	movf	___ftmul@f2+1,w
  8964  07C3  1103               	clrz
  8965  07C4  1803               	skipnc
  8966  07C5  0A3B               	incf	___ftmul@f2+1,w
  8967  07C6  1D03               	btfss	3,2
  8968  07C7  07C3               	addwf	___ftmul@f3_as_product+1,f
  8969  07C8  083C               	movf	___ftmul@f2+2,w
  8970  07C9  1103               	clrz
  8971  07CA  1803               	skipnc
  8972  07CB  0A3C               	incf	___ftmul@f2+2,w
  8973  07CC  1D03               	btfss	3,2
  8974  07CD  07C4               	addwf	___ftmul@f3_as_product+2,f
  8975  07CE                     i1l2590:	
  8976  07CE  3001               	movlw	1
  8977  07CF                     u302_25:	
  8978  07CF  1003               	clrc
  8979  07D0  0CB9               	rrf	___ftmul@f1+2,f
  8980  07D1  0CB8               	rrf	___ftmul@f1+1,f
  8981  07D2  0CB7               	rrf	___ftmul@f1,f
  8982  07D3  3EFF               	addlw	-1
  8983  07D4  1D03               	skipz
  8984  07D5  2FCF               	goto	u302_25
  8985  07D6  3001               	movlw	1
  8986  07D7                     u303_25:	
  8987  07D7  1003               	clrc
  8988  07D8  0CC4               	rrf	___ftmul@f3_as_product+2,f
  8989  07D9  0CC3               	rrf	___ftmul@f3_as_product+1,f
  8990  07DA  0CC2               	rrf	___ftmul@f3_as_product,f
  8991  07DB  3EFF               	addlw	-1
  8992  07DC  1D03               	skipz
  8993  07DD  2FD7               	goto	u303_25
  8994  07DE  3001               	movlw	1
  8995  07DF  02C5               	subwf	___ftmul@cntr,f
  8996  07E0  1D03               	btfss	3,2
  8997  07E1  2FBE               	goto	i1l2586
  8998  07E2  0842               	movf	___ftmul@f3_as_product,w
  8999  07E3  00F0               	movwf	___ftpack@arg
  9000  07E4  0843               	movf	___ftmul@f3_as_product+1,w
  9001  07E5  00F1               	movwf	___ftpack@arg+1
  9002  07E6  0844               	movf	___ftmul@f3_as_product+2,w
  9003  07E7  00F2               	movwf	___ftpack@arg+2
  9004  07E8  0841               	movf	___ftmul@exp,w
  9005  07E9  00BD               	movwf	??___ftmul
  9006  07EA  083D               	movf	??___ftmul,w
  9007  07EB  00F3               	movwf	___ftpack@exp
  9008  07EC  0846               	movf	___ftmul@sign,w
  9009  07ED  00BE               	movwf	??___ftmul+1
  9010  07EE  083E               	movf	??___ftmul+1,w
  9011  07EF  00F4               	movwf	___ftpack@sign
  9012  07F0  160A  118A  2612   	fcall	___ftpack
  9013  07F3  0870               	movf	?___ftpack,w
  9014  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  9015  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  9016  07F6  00B7               	movwf	?___ftmul
  9017  07F7  0871               	movf	?___ftpack+1,w
  9018  07F8  00B8               	movwf	?___ftmul+1
  9019  07F9  0872               	movf	?___ftpack+2,w
  9020  07FA  00B9               	movwf	?___ftmul+2
  9021  07FB  0008               	return
  9022  07FC                     __end_of___ftmul:	
  9023                           
  9024                           	psect	text41
  9025  1612                     __ptext41:	
  9026 ;; *************** function ___ftpack *****************
  9027 ;; Defined at:
  9028 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  arg             3    0[COMMON] unsigned um
  9031 ;;  exp             1    3[COMMON] unsigned char 
  9032 ;;  sign            1    4[COMMON] unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  3    0[COMMON] float 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9044 ;;      Params:         5       0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0
  9046 ;;      Temps:          3       0       0       0       0
  9047 ;;      Totals:         8       0       0       0       0
  9048 ;;Total ram usage:        8 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		___ftadd
  9054 ;;		___ftdiv
  9055 ;;		___ftmul
  9056 ;;		___lwtoft
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           
  9061                           ;psect for function ___ftpack
  9062  1612                     ___ftpack:	
  9063                           
  9064                           ;incstack = 0
  9065                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9066  1612  0873               	movf	___ftpack@exp,w
  9067  1613  1903               	btfsc	3,2
  9068  1614  2E1A               	goto	i1l2230
  9069  1615  0872               	movf	___ftpack@arg+2,w
  9070  1616  0471               	iorwf	___ftpack@arg+1,w
  9071  1617  0470               	iorwf	___ftpack@arg,w
  9072  1618  1D03               	skipz
  9073  1619  2E2D               	goto	i1l2236
  9074  161A                     i1l2230:	
  9075  161A  3000               	movlw	0
  9076  161B  00F0               	movwf	?___ftpack
  9077  161C  3000               	movlw	0
  9078  161D  00F1               	movwf	?___ftpack+1
  9079  161E  3000               	movlw	0
  9080  161F  00F2               	movwf	?___ftpack+2
  9081  1620  0008               	return
  9082  1621                     i1l2234:	
  9083  1621  3001               	movlw	1
  9084  1622  00F5               	movwf	??___ftpack
  9085  1623  0875               	movf	??___ftpack,w
  9086  1624  07F3               	addwf	___ftpack@exp,f
  9087  1625  3001               	movlw	1
  9088  1626                     u211_25:	
  9089  1626  1003               	clrc
  9090  1627  0CF2               	rrf	___ftpack@arg+2,f
  9091  1628  0CF1               	rrf	___ftpack@arg+1,f
  9092  1629  0CF0               	rrf	___ftpack@arg,f
  9093  162A  3EFF               	addlw	-1
  9094  162B  1D03               	skipz
  9095  162C  2E26               	goto	u211_25
  9096  162D                     i1l2236:	
  9097  162D  30FE               	movlw	254
  9098  162E  0572               	andwf	___ftpack@arg+2,w
  9099  162F  1903               	btfsc	3,2
  9100  1630  2E48               	goto	i1l755
  9101  1631  2E21               	goto	i1l2234
  9102  1632                     i1l2238:	
  9103  1632  3001               	movlw	1
  9104  1633  00F5               	movwf	??___ftpack
  9105  1634  0875               	movf	??___ftpack,w
  9106  1635  07F3               	addwf	___ftpack@exp,f
  9107  1636  3001               	movlw	1
  9108  1637  07F0               	addwf	___ftpack@arg,f
  9109  1638  3000               	movlw	0
  9110  1639  1803               	skipnc
  9111  163A  3001               	movlw	1
  9112  163B  07F1               	addwf	___ftpack@arg+1,f
  9113  163C  3000               	movlw	0
  9114  163D  1803               	skipnc
  9115  163E  3001               	movlw	1
  9116  163F  07F2               	addwf	___ftpack@arg+2,f
  9117  1640  3001               	movlw	1
  9118  1641                     u213_25:	
  9119  1641  1003               	clrc
  9120  1642  0CF2               	rrf	___ftpack@arg+2,f
  9121  1643  0CF1               	rrf	___ftpack@arg+1,f
  9122  1644  0CF0               	rrf	___ftpack@arg,f
  9123  1645  3EFF               	addlw	-1
  9124  1646  1D03               	skipz
  9125  1647  2E41               	goto	u213_25
  9126  1648                     i1l755:	
  9127  1648  30FF               	movlw	255
  9128  1649  0572               	andwf	___ftpack@arg+2,w
  9129  164A  1903               	btfsc	3,2
  9130  164B  2E57               	goto	i1l2246
  9131  164C  2E32               	goto	i1l2238
  9132  164D                     i1l2244:	
  9133  164D  3001               	movlw	1
  9134  164E  02F3               	subwf	___ftpack@exp,f
  9135  164F  3001               	movlw	1
  9136  1650                     u215_25:	
  9137  1650  1003               	clrc
  9138  1651  0DF0               	rlf	___ftpack@arg,f
  9139  1652  0DF1               	rlf	___ftpack@arg+1,f
  9140  1653  0DF2               	rlf	___ftpack@arg+2,f
  9141  1654  3EFF               	addlw	-1
  9142  1655  1D03               	skipz
  9143  1656  2E50               	goto	u215_25
  9144  1657                     i1l2246:	
  9145  1657  1FF1               	btfss	___ftpack@arg+1,7
  9146  1658  2E4D               	goto	i1l2244
  9147  1659  1873               	btfsc	___ftpack@exp,0
  9148  165A  2E61               	goto	i1l761
  9149  165B  30FF               	movlw	255
  9150  165C  05F0               	andwf	___ftpack@arg,f
  9151  165D  307F               	movlw	127
  9152  165E  05F1               	andwf	___ftpack@arg+1,f
  9153  165F  30FF               	movlw	255
  9154  1660  05F2               	andwf	___ftpack@arg+2,f
  9155  1661                     i1l761:	
  9156  1661  1003               	clrc
  9157  1662  0CF3               	rrf	___ftpack@exp,f
  9158  1663  0873               	movf	___ftpack@exp,w
  9159  1664  00F5               	movwf	??___ftpack
  9160  1665  01F6               	clrf	??___ftpack+1
  9161  1666  01F7               	clrf	??___ftpack+2
  9162  1667  3010               	movlw	16
  9163  1668                     u218_25:	
  9164  1668  1003               	clrc
  9165  1669  0DF5               	rlf	??___ftpack,f
  9166  166A  0DF6               	rlf	??___ftpack+1,f
  9167  166B  0DF7               	rlf	??___ftpack+2,f
  9168  166C  3EFF               	addlw	-1
  9169  166D  1D03               	skipz
  9170  166E  2E68               	goto	u218_25
  9171  166F  0875               	movf	??___ftpack,w
  9172  1670  04F0               	iorwf	___ftpack@arg,f
  9173  1671  0876               	movf	??___ftpack+1,w
  9174  1672  04F1               	iorwf	___ftpack@arg+1,f
  9175  1673  0877               	movf	??___ftpack+2,w
  9176  1674  04F2               	iorwf	___ftpack@arg+2,f
  9177  1675  0874               	movf	___ftpack@sign,w
  9178  1676  1903               	btfsc	3,2
  9179  1677  0008               	return
  9180  1678  17F2               	bsf	___ftpack@arg+2,7
  9181  1679  0008               	return
  9182  167A                     __end_of___ftpack:	
  9183  007E                     btemp	set	126	;btemp
  9184  007E                     wtemp	set	126
  9185  007E                     wtemp0	set	126
  9186  0080                     wtemp1	set	128
  9187  0082                     wtemp2	set	130
  9188  0084                     wtemp3	set	132
  9189  0086                     wtemp4	set	134
  9190  0088                     wtemp5	set	136
  9191  007F                     wtemp6	set	127
  9192  007E                     ttemp	set	126
  9193  007E                     ttemp0	set	126
  9194  0081                     ttemp1	set	129
  9195  0084                     ttemp2	set	132
  9196  0087                     ttemp3	set	135
  9197  007F                     ttemp4	set	127
  9198  007E                     ltemp	set	126
  9199  007E                     ltemp0	set	126
  9200  0082                     ltemp1	set	130
  9201  0086                     ltemp2	set	134
  9202  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        5
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      79
    BANK1            80     34      78
    BANK3            96      0      23
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1252$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftadd
    _Fuzzy->___fttol
    _trimf->___ftadd
    _trapmf->___ftadd
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    _max_val->___ftge
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2129
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   54714
                                             59 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               18    18      0   51284
                                             41 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13838
                                             23 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14695
                                             23 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5422
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     380
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                             23 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C2      12        0.0%
ABS                  0      0      C2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 15:47:31 2022

           ?i1_PWM_DutyCycle2 0070                             _x 0065                             _y 0068  
                           pc 0002                   ?_LCD_Cursor 00C7       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00AF                            fsr 0004           ___wmul@multiplicand 00C9  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0026  
                ___ftadd@exp2 0025                 _contagens_tm0 00B9                  ___ftadd@sign 0024  
                         l223 1291                           l198 0DC4                           l475 059F  
                         l493 0664                           l649 1783                           l594 1414  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E70  
                         _rpm 00BD                           fsr0 0004                           _pwm 006D  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CB                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0031                  ___ftdiv@sign 0036  
                        l3010 0616                          l3020 062F            LCD_WriteString@Str 00C9  
                        l3040 0683                          l3032 0656                          l3024 0635  
                        l3008 05FF                          l3050 0698                          l3042 0687  
                        l2500 140C                          l3060 06B2                          l2520 1794  
                        l3080 06DA                          l3072 06D6                          l2530 17B4  
                        l3066 06C7                          l3058 06AE                          l3082 0579  
                        l3084 0722                          l2542 17E9                          l2528 17A4  
                        l2546 17F7                          l2538 17DC                          l2662 155A  
                        l2654 1536                          l2494 12A9                          l2656 1544  
                        l2680 14CE                          l2666 1565                          l2852 1487  
                        l2684 14DC                          l2678 14C0                          l2688 14E7  
                        l2972 1456                          l2958 134A                          l2992 05A4  
                        l2994 05AF                          l2986 059B                          l2998 05C1  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3205 155B                          u4107 16AE                          u3235 14C3  
                        u4117 16BA                          u3165 1539                          u4127 16C8  
                        u3255 14D4                          u4047 0DBD                          u4137 16D6  
                        u3505 1392                          u3185 1545                          u3265 14DD  
                        u4057 0E69                          u4147 16E2                          u4067 08EC  
                        u3195 1551                          u4157 1356                          u4077 1684  
                        u4167 1439                          u4087 1694                          u3535 1577  
                        u4177 1447                          u4097 16A2                          u3625 064C  
                        u4187 1453                          u4197 12E2                          u3565 1371  
                        u2845 17A8                          u2865 17B6                          u2785 1415  
                        u3665 0673                          u2875 17CB                          u2795 141C  
                        u2885 17DD                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0D1F                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 0062  
                        btemp 007E              __end_of_ADC_Init 12BD                          ltemp 007E  
                        start 0012                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 08DB                  ___ftmul@cntr 0045  
                ___ftmul@sign 0046       __end_of_USART_WriteChar 129B                         ??_ISR 005B  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 16E5               __end_of___aldiv 1800                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 0AB1                         STR_10 0884  
                       STR_11 0842                         STR_12 085F                         STR_13 0873  
                       STR_14 08D6                         STR_15 08D6                         STR_16 08C5  
                       STR_17 08D0                 __CFG_WDTE$OFF 0000                         STR_18 08C8  
                       STR_19 081A               __end_of___ftdiv 09AA               __end_of___ftneg 126B  
             __end_of___ftmul 07FC                         _T1CON 0010               __end_of___fttol 1771  
             __end_of___lwdiv 156C                         i1l120 0BC6                         i1l130 0D16  
                       i1l223 126C                         i1l183 0F00               __end_of___lwmod 14EE  
                       i1l178 0FF3                         i1l761 1661                         i1l594 13CB  
                       i1l755 1648                         i1l784 0A52                         _RCREG 001A  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                 __CFG_PWRTE$ON 0000  
                       _Fuzzy 0051                         _derro 0190               __end_of_dpowers 081A  
             __end_of_max_val 133C               __end_of_isdigit 12AB                 ___ftpack@sign 0074  
                       _trimf 0AB1                __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020  
                       pclath 000A              __end_of_PWM_Init 1408              __end_ofi1___wmul 13E4  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003           i1___wmul@multiplier 0078                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
             __end_of_sprintf 0729            __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00C7  
              ?_LCD_WriteData 0070                   ?_USART_Init 00D6         i1TIMER0_Set@contagens 0070  
             __initialization 0015                  __end_of_main 0E70                        ??_main 00E6  
               ___fttol@sign1 0078                  ?_TIMER0_Init 0070             __end_of_LCD_Clear 1456  
                  Fuzzy@a_233 004E                    Fuzzy@a_234 0050                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0055                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 167A                        ?_trimf 0037  
                      i1l2230 161A                        i1l2310 0A64                        i1l3102 13C3  
                      i1l2304 0A42                        i1l2234 1621                        i1l2314 0A76  
                      i1l2306 0A4E                        i1l3130 151A                        i1l3122 14F6  
                      i1l3210 0F5E                        i1l2244 164D                        i1l2236 162D  
                      i1l2324 0A99                        i1l2340 0920                        i1l2420 0BA9  
                      i1l3124 1504                        i1l3204 0F47                        i1l2246 1657  
                      i1l2238 1632                        i1l2334 090A                        i1l2414 0B28  
                      i1l3134 1525                        i1l3222 0F92                        i1l2264 09D3  
                      i1l3216 0F75                        i1l2274 09E9                        i1l2362 0984  
                      i1l2354 0965                        i1l2450 0CF9                        i1l3234 0FAF  
                      i1l3162 0EAA                        i1l2292 0A18                        i1l2268 09DA  
                      i1l2444 0C78                        i1l3156 0E93                        i1l2606 16FD  
                      i1l2374 15DC                        i1l2294 0A24                        i1l2286 0A03  
                      i1l2438 0C46                        i1l2702 139E                        i1l3246 0FEE  
                      i1l3174 0ED8                        i1l2640 1768                        i1l2632 174C  
                      i1l2624 172F                        i1l2296 0A29                        i1l2720 0100  
                      i1l3248 0FEF                        i1l3192 0F19                        i1l3168 0EC1  
                      i1l2562 0757                        i1l2634 1757                        i1l2626 173F  
                      i1l2378 1603                        i1l2298 0A2D                        i1l2802 047B  
                      i1l3186 0F02                        i1l2556 0741                        i1l2636 175A  
                      i1l2724 011D                        i1l2590 07CE                        i1l2574 0796  
                      i1l2742 01EC                        i1l3198 0F30                        i1l2808 04AD  
                      i1l2840 131B                        i1l2832 130C                        i1l2586 07BE  
                      i1l2578 07A6                        i1l2738 019D                        i1l2764 02C0  
                      i1l2748 0231                        u211_25 1626                        i1l2774 034C  
                      i1l2792 0419                        i1l2768 0307                        i1l2788 03CC  
                      i1l2798 045E                        u213_25 1641                        u302_25 07CF  
                      u215_25 1650                        u303_25 07D7                        u312_25 174E  
                      u232_25 0A19                        u218_25 1668                        u306_25 1704  
                      u250_25 0985                        u235_25 0A2E                        u340_25 034A  
                      u253_21 15CF                        u253_22 15D0                        u253_23 15D5  
                      u253_24 15D6                        u309_25 1730                        u229_25 0A04  
                      u333_25 019B                        u238_25 0A43                        u246_25 0932  
                      u342_25 03CA                        u255_21 15F6                        u255_22 15F7  
                      u255_23 15FC                        u255_24 15FD                        u247_25 0944  
                      u335_25 022F                        u248_25 0966                        u344_25 045C  
                      u249_25 0977                        u329_25 12F9              __end_of___lwtoft 12D1  
                      u338_25 02BE                        u293_25 0763                        u381_25 14F9  
         __size_of_TIMER0_Set 0008                        u294_25 0775                        u383_25 1505  
                      u384_25 1511                        u297_25 07A7                        u385_25 151B  
                      u377_25 13CC                        u298_25 07AF                        u378_25 13D3  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 004C  
            LCD_WriteCmd@Byte 00C8           i1_USART_WriteString 139E                        ___ftge 15B5  
                   ??___aldiv 00CF                        ___wmul 1408                     ??___ftadd 0020  
              _PWM_DutyCycle1 135C                _PWM_DutyCycle2 137D              ?_USART_WriteChar 0070  
                   ??___ftdiv 002D                     ??___ftneg 0073                        _deltaV 006B  
                   ??___ftmul 003D                     ??___fttol 0074                     ??___lwdiv 00CB  
                   ??___lwmod 00D3                        _fitemp 005F         USART_ReceiveChar@byte 0074  
                      _trapmf 0BCF                        _pulsos 00BB                        _status 00C1  
       ___ftmul@f3_as_product 0042                     ??_max_val 007C             __end_ofi1___lwdiv 152C  
                   ??_isdigit 00C7                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 003A  
                      trimf@b 003D                        trimf@c 0040                        trimf@x 0037  
                   ??_sprintf 00D8                 ?i1_TIMER0_Set 0070       __end_of__initialization 004D  
                   ?_LCD_Init 0070                    ___ftadd@f1 0078                    ___ftadd@f2 007B  
             ??_LCD_WriteData 00C7                    ___ftge@ff1 0070                    ___ftge@ff2 0073  
                  ___ftdiv@f1 002A                    ___ftdiv@f2 0027                    ___ftdiv@f3 0032  
                  ___ftneg@f1 0070        __end_of_PWM_DutyCycle1 137D        __end_of_PWM_DutyCycle2 139E  
                  ___ftmul@f1 0037                    ___ftmul@f2 003A                    ___fttol@f1 0070  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 0572                  __pidataBANK1 1258  
               LCD_Cursor@Col 00C7                 LCD_Cursor@Row 00C9                  ??_LCD_Cursor 00C8  
             _LCD_WriteString 1456                 __end_of_trimf 0BCF                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00C7          __end_of_LCD_WriteCmd 12E8         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 00E2                       ??_trimf 007E                    __pbssBANK0 005F  
                  __pbssBANK1 00A0                    __pbssBANK3 0190            __end_of_LCD_Cursor 135C  
                  ??_LCD_Init 00C9         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00C7  
             ?_PWM_DutyCycle2 00C7                    __pmaintext 0D1F                   Fuzzy@mantem 0052  
                     ?___ftge 0070                       ?___wmul 00C7                    __pintentry 0004  
                ??_TIMER0_Set 00C7                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0037                    ??_PWM_Init 00C7  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
                     _SSPCON2 0091                    __stringtab 0800            __end_of_TIMER0_Set 127B  
     __end_of_LCD_WriteString 1487                     _ADCResult 00B5                  ??_USART_Init 00DA  
           LCD_WriteData@Byte 00C8                       ___aldiv 1771               __size_of___ftge 005D  
                     ___ftadd 09AA                       ___ftdiv 08F2                       ___ftneg 1263  
             __size_of___wmul 0025                       ___ftmul 0729                       ___fttol 16E5  
                     ___lwdiv 152C                       ___lwmod 14B8                    ??___ftpack 0075  
                     __ptext1 0572                       __ptext2 129B                       __ptext3 1408  
                     __ptext4 14B8                       __ptext5 152C                       __ptext6 1487  
                     __ptext7 128E                       __ptext8 156C                       __ptext9 1771  
                  _pas_cooler 00EC                    ??___lwtoft 007B               __size_of_trapmf 0150  
                __size_of_ISR 0190                     _T1CONbits 0010                       _dpowers 0810  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 131E  
                     _isdigit 129B             i1___lwdiv@counter 0077              ___aldiv@dividend 00CB  
                   _LCD_Clear 142D            __end_of_USART_Init 15B5                       _sprintf 0572  
                     clrloop0 127C          end_of_initialization 004D                     _RCSTAbits 0018  
            ___aldiv@quotient 00D2                       trapmf@a 003A                       trapmf@b 003D  
                     trapmf@c 0040                       trapmf@d 0043                       trapmf@x 0037  
                     trimf@ua 0043          __end_ofi1_TIMER0_Set 1263         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  _setpointUI 00BF                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 12E8  
           __size_of_ADC_Init 0012                     i1___lwdiv 14EE                  _contador_rb6 00B7  
         PWM_DutyCycle1@valor 00C7                    _total_area 00B2           PWM_DutyCycle2@valor 00C7  
                 _CCP1CONbits 0017                   ___ftdiv@exp 0035                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00C9             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 12D1                   ___ftmul@exp 0041                __end_of___ftge 1612  
              __end_of___wmul 142D             i1_USART_WriteChar 126B            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0D1F      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0015             __size_ofi1___wmul 0023                   __end_of_ISR 1000  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00C9  
            ??_PWM_DutyCycle2 00C9         __end_of_LCD_WriteData 08F2             _USART_ReceiveChar 1303  
                    ??___ftge 0076            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 1273  
                    ??___wmul 00CB                   __pdataBANK1 00E9   __end_ofi1_USART_WriteString 13C1  
                    ??_trapmf 007E           ??_USART_ReceiveChar 0073             __size_of___ftpack 0068  
                   ___latbits 0002             __size_of___lwtoft 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00C7                   ??_LCD_Clear 00C9           __end_of__stringdata 08DB  
                _isdigit$1448 00C7                   sprintf@_val 00DD                   sprintf@flag 00E1  
                 sprintf@prec 00DC     __end_of_USART_ReceiveChar 131E         __size_ofi1_TIMER0_Set 0006  
            ___lwdiv@dividend 00C9           TIMER0_Set@contagens 00C7                  Fuzzy@aumenta 0058  
                    ?___aldiv 00C7                      ?___ftadd 0078                      ?___ftdiv 0027  
                    ?___ftneg 0070                      ?___ftmul 0037                      ?___fttol 0070  
                    ?___lwdiv 00C7                      ?___lwmod 00CF                     __pstrings 0800  
                   _ativa_fan 00A0                 ??_TIMER0_Init 00C7            USART_Init@BaudRate 00D6  
                    ?_max_val 0020                      ?_isdigit 0070                      _ADC_Init 12AB  
                   _fop_rule1 00A3                     _fop_rule2 00A6                     _fop_rule3 00A9  
              __size_of_Fuzzy 0521              ___lwdiv@quotient 00CC                   ??i1___lwdiv 0074  
                    ?_sprintf 00D5                __size_of_trimf 011E             ??_USART_WriteChar 00C7  
                i1_TIMER0_Set 125D               ___aldiv@divisor 00C7             interrupt_function 0004  
             ___aldiv@counter 00D0                      _LCD_Init 167A                ___wmul@product 00CB  
                   clear_ram0 127B                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 00C3  
    __end_ofi1_PWM_DutyCycle2 1303                     _tempo_rb6 00C5    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 019D                   _display_pwm 0193                    _ADCON0bits 001F  
                 __stringbase 080F                    _ADCON1bits 009F                   __stringdata 081A  
                    _PWM_Init 13E4             ___wmul@multiplier 00C7                      i1___wmul 13C1  
         __end_of_TIMER0_Init 128E    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@tip 0049              __size_of___aldiv 008F              __size_of___ftadd 0107  
            __size_of___ftdiv 00B8              __size_of___ftneg 0008              __size_of___ftmul 00D3  
            __size_of___fttol 008C              __size_of___lwdiv 0040              __size_of___lwmod 0036  
                    ___ftpack 1612            __end_of__stringtab 0810                      ___lwtoft 12BD  
            __size_of_max_val 001E              __size_of_isdigit 0010               ___lwdiv@divisor 00C7  
             ___lwdiv@counter 00CE             _USART_WriteString 1487                      __ptext10 1273  
                    __ptext11 1283                      __ptext20 12D1                      __ptext12 13E4  
                    __ptext21 12AB                      __ptext13 137D                      __ptext30 12E8  
                    __ptext22 0E70                      __ptext14 135C                      __ptext31 0AB1  
                    __ptext23 13C1                      __ptext15 1456                      __ptext40 0729  
                    __ptext32 0BCF                      __ptext24 14EE                      __ptext16 08DB  
                    __ptext41 1612                      __ptext33 1263                      __ptext25 125D  
                    __ptext17 167A                      __ptext34 08F2                      __ptext26 1303  
                    __ptext18 133C                      __ptext35 09AA                      __ptext27 139E  
                    __ptext19 142D                      __ptext36 131E                      __ptext28 126B  
                    __ptext37 15B5                      __ptext29 0051                      __ptext38 12BD  
                    __ptext39 16E5            ?_USART_WriteString 00C8              __size_of_sprintf 01B7  
          i1___lwdiv@dividend 0072                 __size_of_main 0151           USART_WriteChar@byte 00C7  
         ??_USART_WriteString 00CA        i1USART_WriteString@str 0071                      _setpoint 00E9  
                  _LCD_Cursor 133C      __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075  
                 _TIMER0_Init 1283                    _INTCONbits 000B     __end_of_USART_WriteString 14B8  
                    max_val@a 0020                      max_val@b 0023                      isdigit@c 00C8  
                    intlevel1 0000                     sprintf@ap 00DB                     sprintf@sp 00E4  
            ___lwmod@dividend 00D1                     stringcode 080A          USART_WriteString@str 00C8  
                  _TIMER0_Set 1273                      trapmf@ua 0046               _USART_WriteChar 128E  
                    sprintf@c 00E5                      sprintf@f 00D5               ___lwmod@divisor 00CF  
             ___lwmod@counter 00D4                      stringdir 080A                      stringtab 0800  
                ___aldiv@sign 00D1        __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014  
                  _USART_Init 156C  
