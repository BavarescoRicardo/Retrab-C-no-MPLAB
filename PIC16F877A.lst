

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 17:05:26 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    58                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    59                           	psect	text22_split_3,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  0800                     __pidataBANK0:	
   604                           
   605                           ;initializer for _cruzeiroSet
   606  0800  344E               	retlw	78
   607                           
   608                           ;initializer for _lendo
   609  0801  344E               	retlw	78
   610                           
   611                           	psect	idataBANK1
   612  12AF                     __pidataBANK1:	
   613                           
   614                           ;initializer for _pas_cooler
   615  12AF  3407               	retlw	7
   616  12B0  3400               	retlw	0
   617                           
   618                           ;initializer for _pwm
   619  12B1  3401               	retlw	1
   620  12B2  3400               	retlw	0
   621  000E                     _TMR1	set	14
   622  001F                     _ADCON0bits	set	31
   623  001E                     _ADRESH	set	30
   624  0017                     _CCP1CON	set	23
   625  0017                     _CCP1CONbits	set	23
   626  001D                     _CCP2CON	set	29
   627  001D                     _CCP2CONbits	set	29
   628  0015                     _CCPR1L	set	21
   629  001B                     _CCPR2L	set	27
   630  000B                     _INTCONbits	set	11
   631  000C                     _PIR1bits	set	12
   632  000D                     _PIR2bits	set	13
   633  0005                     _PORTA	set	5
   634  0006                     _PORTB	set	6
   635  0006                     _PORTBbits	set	6
   636  0007                     _PORTC	set	7
   637  0008                     _PORTD	set	8
   638  0009                     _PORTE	set	9
   639  0009                     _PORTEbits	set	9
   640  001A                     _RCREG	set	26
   641  0018                     _RCSTAbits	set	24
   642  0013                     _SSPBUF	set	19
   643  0014                     _SSPCONbits	set	20
   644  0010                     _T1CON	set	16
   645  0010                     _T1CONbits	set	16
   646  0012                     _T2CONbits	set	18
   647  0001                     _TMR0	set	1
   648  000F                     _TMR1H	set	15
   649  000E                     _TMR1L	set	14
   650  0019                     _TXREG	set	25
   651  00C1                     _OERR	set	193
   652  009F                     _ADCON1bits	set	159
   653  009E                     _ADRESL	set	158
   654  0081                     _OPTION_REGbits	set	129
   655  008C                     _PIE1bits	set	140
   656  008D                     _PIE2bits	set	141
   657  0092                     _PR2	set	146
   658  0099                     _SPBRG	set	153
   659  0093                     _SSPADD	set	147
   660  0091                     _SSPCON2	set	145
   661  0091                     _SSPCON2bits	set	145
   662  0094                     _SSPSTATbits	set	148
   663  0085                     _TRISA	set	133
   664  0086                     _TRISB	set	134
   665  0087                     _TRISC	set	135
   666  0088                     _TRISD	set	136
   667  0089                     _TRISE	set	137
   668  0098                     _TXSTAbits	set	152
   669  010D                     _EEADR	set	269
   670  010C                     _EEDATA	set	268
   671  018C                     _EECON1bits	set	396
   672  018D                     _EECON2	set	397
   673                           
   674                           	psect	strings
   675  1000                     __pstrings:	
   676  1000                     stringtab:	
   677  1000                     __stringtab:	
   678  1000                     stringcode:	
   679                           ;	String table - string pointers are 1 byte each
   680                           
   681  1000                     stringdir:	
   682  1000  3010               	movlw	high stringdir
   683  1001  008A               	movwf	10
   684  1002  0804               	movf	4,w
   685  1003  0A84               	incf	4,f
   686  1004  0782               	addwf	2,f
   687  1005                     __stringbase:	
   688  1005  3400               	retlw	0
   689  1006                     __end_of__stringtab:	
   690  1006                     __stringdata:	
   691  1006                     STR_4:	
   692  1006  340A               	retlw	10
   693  1007  340D               	retlw	13
   694  1008  3420               	retlw	32	;' '
   695  1009  342D               	retlw	45	;'-'
   696  100A  342D               	retlw	45	;'-'
   697  100B  342D               	retlw	45	;'-'
   698  100C  342D               	retlw	45	;'-'
   699  100D  342D               	retlw	45	;'-'
   700  100E  342D               	retlw	45	;'-'
   701  100F  342D               	retlw	45	;'-'
   702  1010  3420               	retlw	32	;' '
   703  1011  3445               	retlw	69	;'E'
   704  1012  3453               	retlw	83	;'S'
   705  1013  3454               	retlw	84	;'T'
   706  1014  344F               	retlw	79	;'O'
   707  1015  3455               	retlw	85	;'U'
   708  1016  3452               	retlw	82	;'R'
   709  1017  344F               	retlw	79	;'O'
   710  1018  3420               	retlw	32	;' '
   711  1019  3444               	retlw	68	;'D'
   712  101A  3445               	retlw	69	;'E'
   713  101B  3420               	retlw	32	;' '
   714  101C  3450               	retlw	80	;'P'
   715  101D  3449               	retlw	73	;'I'
   716  101E  344C               	retlw	76	;'L'
   717  101F  3448               	retlw	72	;'H'
   718  1020  3441               	retlw	65	;'A'
   719  1021  3420               	retlw	32	;' '
   720  1022  342D               	retlw	45	;'-'
   721  1023  342D               	retlw	45	;'-'
   722  1024  342D               	retlw	45	;'-'
   723  1025  342D               	retlw	45	;'-'
   724  1026  342D               	retlw	45	;'-'
   725  1027  342D               	retlw	45	;'-'
   726  1028  342D               	retlw	45	;'-'
   727  1029  3420               	retlw	32	;' '
   728  102A  340A               	retlw	10
   729  102B  340D               	retlw	13
   730  102C  3420               	retlw	32	;' '
   731  102D  3400               	retlw	0
   732  102E                     STR_2:	
   733  102E  3449               	retlw	73	;'I'
   734  102F  346E               	retlw	110	;'n'
   735  1030  3469               	retlw	105	;'i'
   736  1031  3463               	retlw	99	;'c'
   737  1032  3469               	retlw	105	;'i'
   738  1033  3461               	retlw	97	;'a'
   739  1034  346C               	retlw	108	;'l'
   740  1035  3469               	retlw	105	;'i'
   741  1036  347A               	retlw	122	;'z'
   742  1037  3461               	retlw	97	;'a'
   743  1038  346E               	retlw	110	;'n'
   744  1039  3464               	retlw	100	;'d'
   745  103A  346F               	retlw	111	;'o'
   746  103B  342E               	retlw	46	;'.'
   747  103C  342E               	retlw	46	;'.'
   748  103D  342E               	retlw	46	;'.'
   749  103E  3400               	retlw	0
   750  103F                     STR_1:	
   751  103F  340A               	retlw	10
   752  1040  340D               	retlw	13
   753  1041  3466               	retlw	102	;'f'
   754  1042  3472               	retlw	114	;'r'
   755  1043  3465               	retlw	101	;'e'
   756  1044  3469               	retlw	105	;'i'
   757  1045  346F               	retlw	111	;'o'
   758  1046  340A               	retlw	10
   759  1047  340D               	retlw	13
   760  1048  3400               	retlw	0
   761  1049                     STR_3:	
   762  1049  346B               	retlw	107	;'k'
   763  104A  346D               	retlw	109	;'m'
   764  104B  3448               	retlw	72	;'H'
   765  104C  343A               	retlw	58	;':'
   766  104D  3420               	retlw	32	;' '
   767  104E  3400               	retlw	0
   768  104F                     __end_of__stringdata:	
   769                           
   770                           ; #config settings
   771  0000                     
   772                           	psect	cinit
   773  0015                     start_initialization:	
   774  0015                     __initialization:	
   775                           
   776                           ; Clear objects allocated to BANK0
   777  0015  01EB               	clrf	__pbssBANK0& (0+127)
   778  0016  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK1
   781  0017  1383               	bcf	3,7	;select IRP bank0
   782  0018  30C2               	movlw	low __pbssBANK1
   783  0019  0084               	movwf	4
   784  001A  30DF               	movlw	low (__pbssBANK1+29)
   785  001B  160A  118A  22C9  120A  118A  	fcall	clear_ram0
   786                           
   787                           ; Clear objects allocated to BANK3
   788  0020  1783               	bsf	3,7	;select IRP bank2
   789  0021  3090               	movlw	low __pbssBANK3
   790  0022  0084               	movwf	4
   791  0023  30B5               	movlw	low (__pbssBANK3+37)
   792  0024  160A  118A  22C9  120A  118A  	fcall	clear_ram0
   793                           
   794                           ; Initialize objects allocated to BANK1
   795  0029  1683               	bsf	3,5	;RP0=1, select bank1
   796  002A  1303               	bcf	3,6	;RP1=0, select bank1
   797  002B  160A  118A  22AF  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   798  0030  00DF               	movwf	__pdataBANK1& (0+127)
   799  0031  160A  118A  22B0  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   800  0036  00E0               	movwf	(__pdataBANK1+1)& (0+127)
   801  0037  160A  118A  22B1  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   802  003C  00E1               	movwf	(__pdataBANK1+2)& (0+127)
   803  003D  160A  118A  22B2  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   804  0042  00E2               	movwf	(__pdataBANK1+3)& (0+127)
   805                           
   806                           ; Initialize objects allocated to BANK0
   807  0043  1283               	bcf	3,5	;RP0=0, select bank0
   808  0044  1303               	bcf	3,6	;RP1=0, select bank0
   809  0045  120A  158A  2000  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   810  004A  00ED               	movwf	__pdataBANK0& (0+127)
   811  004B  120A  158A  2001   	fcall	__pidataBANK0+1	;fetch initializer
   812  004E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   813  004F                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  004F                     __end_of__initialization:	
   817  004F  0183               	clrf	3
   818  0050  120A  158A  29D6   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  006B                     __pbssBANK0:	
   822  006B                     _indicebuffer:	
   823  006B                     	ds	2
   824                           
   825                           	psect	dataBANK0
   826  006D                     __pdataBANK0:	
   827  006D                     _cruzeiroSet:	
   828  006D                     	ds	1
   829  006E                     _lendo:	
   830  006E                     	ds	1
   831                           
   832                           	psect	bssBANK1
   833  00C2                     __pbssBANK1:	
   834  00C2                     _rulegrande:	
   835  00C2                     	ds	3
   836  00C5                     _rulemedio:	
   837  00C5                     	ds	3
   838  00C8                     _rulepequeno:	
   839  00C8                     	ds	3
   840  00CB                     _ADCResult:	
   841  00CB                     	ds	2
   842  00CD                     _antigoUI:	
   843  00CD                     	ds	2
   844  00CF                     _contagens_tm0:	
   845  00CF                     	ds	2
   846  00D1                     _cruzeiroVel:	
   847  00D1                     	ds	2
   848  00D3                     _deltaV:	
   849  00D3                     	ds	2
   850  00D5                     _pulsos:	
   851  00D5                     	ds	2
   852  00D7                     _rpm:	
   853  00D7                     	ds	2
   854  00D9                     _setpointUI:	
   855  00D9                     	ds	2
   856  00DB                     _status:	
   857  00DB                     	ds	2
   858  00DD                     _x:	
   859  00DD                     	ds	2
   860                           
   861                           	psect	dataBANK1
   862  00DF                     __pdataBANK1:	
   863  00DF                     _pas_cooler:	
   864  00DF                     	ds	2
   865  00E1                     _pwm:	
   866  00E1                     	ds	2
   867                           
   868                           	psect	bssBANK3
   869  0190                     __pbssBANK3:	
   870  0190                     _buffer:	
   871  0190                     	ds	13
   872  019D                     _bufferRecebido:	
   873  019D                     	ds	7
   874  01A4                     _antigo:	
   875  01A4                     	ds	3
   876  01A7                     _ativa_fan:	
   877  01A7                     	ds	3
   878  01AA                     _fitemp:	
   879  01AA                     	ds	3
   880  01AD                     _sum:	
   881  01AD                     	ds	3
   882  01B0                     _total_area:	
   883  01B0                     	ds	3
   884  01B3                     _y:	
   885  01B3                     	ds	2
   886                           
   887                           	psect	clrtext
   888  12C9                     clear_ram0:	
   889                           ;	Called with FSR containing the base address, and
   890                           ;	W with the last address+1
   891                           
   892  12C9  0064               	clrwdt	;clear the watchdog before getting into this loop
   893  12CA                     clrloop0:	
   894  12CA  0180               	clrf	0	;clear RAM location pointed to by FSR
   895  12CB  0A84               	incf	4,f	;increment pointer
   896  12CC  0604               	xorwf	4,w	;XOR with final address
   897  12CD  1903               	btfsc	3,2	;have we reached the end yet?
   898  12CE  3400               	retlw	0	;all done for this memory range, return
   899  12CF  0604               	xorwf	4,w	;XOR again to restore value
   900  12D0  2ACA               	goto	clrloop0	;do the next byte
   901                           
   902                           	psect	cstackBANK3
   903  01B5                     __pcstackBANK3:	
   904  01B5                     ?_PWM_DutyCycle2:	
   905  01B5                     ??_TIMER0_Set:	
   906                           ; 0 bytes @ 0x0
   907                           
   908  01B5                     ??_TIMER0_Init:	
   909                           ; 0 bytes @ 0x0
   910                           
   911  01B5                     ??_ADC_Init:	
   912                           ; 0 bytes @ 0x0
   913                           
   914  01B5                     ??_PWM_Init:	
   915                           ; 0 bytes @ 0x0
   916                           
   917  01B5                     ?_LCD_Cursor:	
   918                           ; 0 bytes @ 0x0
   919                           
   920  01B5                     ?_PWM_DutyCycle1:	
   921                           ; 0 bytes @ 0x0
   922                           
   923  01B5                     ??_LCD_WriteCmd:	
   924                           ; 0 bytes @ 0x0
   925                           
   926  01B5                     ??_LCD_WriteData:	
   927                           ; 0 bytes @ 0x0
   928                           
   929  01B5                     ?___aldiv:	
   930                           ; 0 bytes @ 0x0
   931                           
   932  01B5                     TIMER0_Set@contagens:	
   933                           ; 4 bytes @ 0x0
   934                           
   935  01B5                     LCD_Cursor@Col:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  01B5                     PWM_DutyCycle1@valor:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  01B5                     PWM_DutyCycle2@valor:	
   942                           ; 2 bytes @ 0x0
   943                           
   944  01B5                     ___aldiv@divisor:	
   945                           ; 2 bytes @ 0x0
   946                           
   947                           
   948                           ; 4 bytes @ 0x0
   949  01B5                     	ds	1
   950  01B6                     ??_LCD_Cursor:	
   951  01B6                     LCD_WriteCmd@Byte:	
   952                           ; 0 bytes @ 0x1
   953                           
   954  01B6                     LCD_WriteData@Byte:	
   955                           ; 1 bytes @ 0x1
   956                           
   957                           
   958                           ; 1 bytes @ 0x1
   959  01B6                     	ds	1
   960  01B7                     ??_PWM_DutyCycle2:	
   961  01B7                     ??_LCD_Init:	
   962                           ; 0 bytes @ 0x2
   963                           
   964  01B7                     ??_LCD_WriteString:	
   965                           ; 0 bytes @ 0x2
   966                           
   967  01B7                     ??_PWM_DutyCycle1:	
   968                           ; 0 bytes @ 0x2
   969                           
   970  01B7                     ??_LCD_Clear:	
   971                           ; 0 bytes @ 0x2
   972                           
   973  01B7                     LCD_Cursor@Row:	
   974                           ; 0 bytes @ 0x2
   975                           
   976                           
   977                           ; 1 bytes @ 0x2
   978  01B7                     	ds	1
   979  01B8                     LCD_WriteString@Str:	
   980                           
   981                           ; 1 bytes @ 0x3
   982  01B8                     	ds	1
   983  01B9                     ___aldiv@dividend:	
   984                           
   985                           ; 4 bytes @ 0x4
   986  01B9                     	ds	4
   987  01BD                     ??___aldiv:	
   988                           
   989                           ; 0 bytes @ 0x8
   990  01BD                     	ds	1
   991  01BE                     ___aldiv@counter:	
   992                           
   993                           ; 1 bytes @ 0x9
   994  01BE                     	ds	1
   995  01BF                     ___aldiv@sign:	
   996                           
   997                           ; 1 bytes @ 0xA
   998  01BF                     	ds	1
   999  01C0                     ___aldiv@quotient:	
  1000                           
  1001                           ; 4 bytes @ 0xB
  1002  01C0                     	ds	4
  1003  01C4                     ?_USART_Init:	
  1004  01C4                     USART_Init@BaudRate:	
  1005                           ; 0 bytes @ 0xF
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0xF
  1009  01C4                     	ds	4
  1010  01C8                     ??_USART_Init:	
  1011                           
  1012                           ; 0 bytes @ 0x13
  1013  01C8                     	ds	4
  1014  01CC                     ??_main:	
  1015                           
  1016                           ; 0 bytes @ 0x17
  1017  01CC                     	ds	3
  1018                           
  1019                           	psect	cstackBANK1
  1020  00A0                     __pcstackBANK1:	
  1021  00A0                     _Fuzzy$1692:	
  1022                           
  1023                           ; 3 bytes @ 0x0
  1024  00A0                     	ds	3
  1025  00A3                     _Fuzzy$1693:	
  1026                           
  1027                           ; 2 bytes @ 0x3
  1028  00A3                     	ds	2
  1029  00A5                     Fuzzy@reajuste:	
  1030                           
  1031                           ; 3 bytes @ 0x5
  1032  00A5                     	ds	3
  1033  00A8                     _Fuzzy$251:	
  1034                           
  1035                           ; 2 bytes @ 0x8
  1036  00A8                     	ds	2
  1037  00AA                     Fuzzy@a:	
  1038                           
  1039                           ; 2 bytes @ 0xA
  1040  00AA                     	ds	2
  1041  00AC                     Fuzzy@a_244:	
  1042                           
  1043                           ; 2 bytes @ 0xC
  1044  00AC                     	ds	2
  1045  00AE                     Fuzzy@a_245:	
  1046                           
  1047                           ; 2 bytes @ 0xE
  1048  00AE                     	ds	2
  1049  00B0                     Fuzzy@a_246:	
  1050                           
  1051                           ; 2 bytes @ 0x10
  1052  00B0                     	ds	2
  1053  00B2                     Fuzzy@delta:	
  1054                           
  1055                           ; 2 bytes @ 0x12
  1056  00B2                     	ds	2
  1057  00B4                     Fuzzy@soma:	
  1058                           
  1059                           ; 3 bytes @ 0x14
  1060  00B4                     	ds	3
  1061  00B7                     Fuzzy@total_area:	
  1062                           
  1063                           ; 3 bytes @ 0x17
  1064  00B7                     	ds	3
  1065  00BA                     Fuzzy@a_249:	
  1066                           
  1067                           ; 2 bytes @ 0x1A
  1068  00BA                     	ds	2
  1069  00BC                     Fuzzy@rule:	
  1070                           
  1071                           ; 3 bytes @ 0x1C
  1072  00BC                     	ds	3
  1073  00BF                     Fuzzy@x:	
  1074                           
  1075                           ; 3 bytes @ 0x1F
  1076  00BF                     	ds	3
  1077                           
  1078                           	psect	cstackCOMMON
  1079  0070                     __pcstackCOMMON:	
  1080  0070                     ?_USART_WriteChar:	
  1081  0070                     ??_USART_WriteChar:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_USART_WriteString:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_TIMER0_Set:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_TIMER0_Init:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_ADC_Init:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_PWM_Init:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_LCD_Init:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?_LCD_WriteString:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ?_LCD_Clear:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?_enviabuffer:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_Fuzzy:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_ISR:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_main:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_LCD_WriteCmd:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_LCD_WriteData:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?___ftge:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?i1_TIMER0_Set:	
  1130                           ; 1 bit 
  1131                           
  1132  0070                     ??i1_TIMER0_Set:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?i1_PWM_DutyCycle2:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_USART_ReceiveChar:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ?_abs:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?___lwdiv:	
  1145                           ; 2 bytes @ 0x0
  1146                           
  1147  0070                     ?___ftpack:	
  1148                           ; 2 bytes @ 0x0
  1149                           
  1150  0070                     USART_WriteChar@byte:	
  1151                           ; 3 bytes @ 0x0
  1152                           
  1153  0070                     i1TIMER0_Set@contagens:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     abs@a:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ___lwdiv@divisor:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162  0070                     i1PWM_DutyCycle2@valor:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165  0070                     ___ftpack@arg:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0070                     ___ftge@ff1:	
  1169                           ; 3 bytes @ 0x0
  1170                           
  1171                           
  1172                           ; 3 bytes @ 0x0
  1173  0070                     	ds	1
  1174  0071                     ??_USART_WriteString:	
  1175  0071                     ??_enviabuffer:	
  1176                           ; 0 bytes @ 0x1
  1177                           
  1178                           
  1179                           ; 0 bytes @ 0x1
  1180  0071                     	ds	1
  1181  0072                     ??_abs:	
  1182  0072                     ??i1_PWM_DutyCycle2:	
  1183                           ; 0 bytes @ 0x2
  1184                           
  1185  0072                     enviabuffer@checksum:	
  1186                           ; 0 bytes @ 0x2
  1187                           
  1188  0072                     USART_WriteString@str:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0072                     ___lwdiv@dividend:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196  0072                     	ds	1
  1197  0073                     ??_USART_ReceiveChar:	
  1198  0073                     enviabuffer@index:	
  1199                           ; 0 bytes @ 0x3
  1200                           
  1201  0073                     ___ftpack@exp:	
  1202                           ; 1 bytes @ 0x3
  1203                           
  1204  0073                     ___ftge@ff2:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207                           
  1208                           ; 3 bytes @ 0x3
  1209  0073                     	ds	1
  1210  0074                     ??___lwdiv:	
  1211  0074                     USART_ReceiveChar@byte:	
  1212                           ; 0 bytes @ 0x4
  1213                           
  1214  0074                     ___ftpack@sign:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0x4
  1219  0074                     	ds	1
  1220  0075                     ??___ftpack:	
  1221  0075                     ___lwdiv@quotient:	
  1222                           ; 0 bytes @ 0x5
  1223                           
  1224                           
  1225                           ; 2 bytes @ 0x5
  1226  0075                     	ds	1
  1227  0076                     ??___ftge:	
  1228                           
  1229                           ; 0 bytes @ 0x6
  1230  0076                     	ds	1
  1231  0077                     ___lwdiv@counter:	
  1232                           
  1233                           ; 1 bytes @ 0x7
  1234  0077                     	ds	1
  1235  0078                     ?___awtoft:	
  1236  0078                     ?___lwtoft:	
  1237                           ; 3 bytes @ 0x8
  1238                           
  1239  0078                     ___awtoft@c:	
  1240                           ; 3 bytes @ 0x8
  1241                           
  1242  0078                     ___lwtoft@c:	
  1243                           ; 2 bytes @ 0x8
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247  0078                     	ds	3
  1248  007B                     ??___awtoft:	
  1249  007B                     ??___lwtoft:	
  1250                           ; 0 bytes @ 0xB
  1251                           
  1252                           
  1253                           ; 0 bytes @ 0xB
  1254  007B                     	ds	2
  1255  007D                     ___awtoft@sign:	
  1256                           
  1257                           ; 1 bytes @ 0xD
  1258  007D                     	ds	1
  1259  007E                     ??_trapmf:	
  1260  007E                     ??_maximo:	
  1261                           ; 0 bytes @ 0xE
  1262                           
  1263  007E                     ??_minimo:	
  1264                           ; 0 bytes @ 0xE
  1265                           
  1266  007E                     ??___wmul:	
  1267                           ; 0 bytes @ 0xE
  1268                           
  1269  007E                     ??___ftneg:	
  1270                           ; 0 bytes @ 0xE
  1271                           
  1272                           
  1273                           	psect	cstackBANK0
  1274  0020                     __pcstackBANK0:	
  1275                           ; 0 bytes @ 0xE
  1276                           
  1277  0020                     ?_minimo:	
  1278  0020                     ?___ftneg:	
  1279                           ; 3 bytes @ 0x0
  1280                           
  1281  0020                     minimo@a:	
  1282                           ; 3 bytes @ 0x0
  1283                           
  1284  0020                     ___ftneg@f1:	
  1285                           ; 3 bytes @ 0x0
  1286                           
  1287                           
  1288                           ; 3 bytes @ 0x0
  1289  0020                     	ds	3
  1290  0023                     ?___ftadd:	
  1291  0023                     minimo@b:	
  1292                           ; 3 bytes @ 0x3
  1293                           
  1294  0023                     ___ftadd@f1:	
  1295                           ; 3 bytes @ 0x3
  1296                           
  1297                           
  1298                           ; 3 bytes @ 0x3
  1299  0023                     	ds	3
  1300  0026                     ?_maximo:	
  1301  0026                     maximo@a:	
  1302                           ; 3 bytes @ 0x6
  1303                           
  1304  0026                     ___ftadd@f2:	
  1305                           ; 3 bytes @ 0x6
  1306                           
  1307                           
  1308                           ; 3 bytes @ 0x6
  1309  0026                     	ds	3
  1310  0029                     ??___ftadd:	
  1311  0029                     maximo@b:	
  1312                           ; 0 bytes @ 0x9
  1313                           
  1314                           
  1315                           ; 3 bytes @ 0x9
  1316  0029                     	ds	3
  1317  002C                     ?___fttol:	
  1318  002C                     ___fttol@f1:	
  1319                           ; 4 bytes @ 0xC
  1320                           
  1321                           
  1322                           ; 3 bytes @ 0xC
  1323  002C                     	ds	1
  1324  002D                     ___ftadd@sign:	
  1325                           
  1326                           ; 1 bytes @ 0xD
  1327  002D                     	ds	1
  1328  002E                     ___ftadd@exp2:	
  1329                           
  1330                           ; 1 bytes @ 0xE
  1331  002E                     	ds	1
  1332  002F                     ___ftadd@exp1:	
  1333                           
  1334                           ; 1 bytes @ 0xF
  1335  002F                     	ds	1
  1336  0030                     ??___fttol:	
  1337  0030                     ?___ftdiv:	
  1338                           ; 0 bytes @ 0x10
  1339                           
  1340  0030                     ___ftdiv@f2:	
  1341                           ; 3 bytes @ 0x10
  1342                           
  1343                           
  1344                           ; 3 bytes @ 0x10
  1345  0030                     	ds	3
  1346  0033                     ___ftdiv@f1:	
  1347                           
  1348                           ; 3 bytes @ 0x13
  1349  0033                     	ds	1
  1350  0034                     ___fttol@sign1:	
  1351                           
  1352                           ; 1 bytes @ 0x14
  1353  0034                     	ds	1
  1354  0035                     ___fttol@lval:	
  1355                           
  1356                           ; 4 bytes @ 0x15
  1357  0035                     	ds	1
  1358  0036                     ??___ftdiv:	
  1359                           
  1360                           ; 0 bytes @ 0x16
  1361  0036                     	ds	3
  1362  0039                     ___fttol@exp1:	
  1363                           
  1364                           ; 1 bytes @ 0x19
  1365  0039                     	ds	1
  1366  003A                     ?___wmul:	
  1367  003A                     ___ftdiv@cntr:	
  1368                           ; 2 bytes @ 0x1A
  1369                           
  1370  003A                     ___wmul@multiplier:	
  1371                           ; 1 bytes @ 0x1A
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0x1A
  1375  003A                     	ds	1
  1376  003B                     ___ftdiv@f3:	
  1377                           
  1378                           ; 3 bytes @ 0x1B
  1379  003B                     	ds	1
  1380  003C                     ___wmul@multiplicand:	
  1381                           
  1382                           ; 2 bytes @ 0x1C
  1383  003C                     	ds	2
  1384  003E                     ___ftdiv@exp:	
  1385  003E                     ___wmul@product:	
  1386                           ; 1 bytes @ 0x1E
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x1E
  1390  003E                     	ds	1
  1391  003F                     ___ftdiv@sign:	
  1392                           
  1393                           ; 1 bytes @ 0x1F
  1394  003F                     	ds	1
  1395  0040                     ?_trapmf:	
  1396  0040                     trapmf@x:	
  1397                           ; 3 bytes @ 0x20
  1398                           
  1399                           
  1400                           ; 3 bytes @ 0x20
  1401  0040                     	ds	3
  1402  0043                     trapmf@a:	
  1403                           
  1404                           ; 3 bytes @ 0x23
  1405  0043                     	ds	3
  1406  0046                     trapmf@b:	
  1407                           
  1408                           ; 3 bytes @ 0x26
  1409  0046                     	ds	3
  1410  0049                     trapmf@c:	
  1411                           
  1412                           ; 3 bytes @ 0x29
  1413  0049                     	ds	3
  1414  004C                     trapmf@d:	
  1415                           
  1416                           ; 3 bytes @ 0x2C
  1417  004C                     	ds	3
  1418  004F                     trapmf@ua:	
  1419                           
  1420                           ; 3 bytes @ 0x2F
  1421  004F                     	ds	3
  1422  0052                     ?___ftmul:	
  1423  0052                     ___ftmul@f1:	
  1424                           ; 3 bytes @ 0x32
  1425                           
  1426                           
  1427                           ; 3 bytes @ 0x32
  1428  0052                     	ds	3
  1429  0055                     ___ftmul@f2:	
  1430                           
  1431                           ; 3 bytes @ 0x35
  1432  0055                     	ds	3
  1433  0058                     ??___ftmul:	
  1434                           
  1435                           ; 0 bytes @ 0x38
  1436  0058                     	ds	4
  1437  005C                     ___ftmul@exp:	
  1438                           
  1439                           ; 1 bytes @ 0x3C
  1440  005C                     	ds	1
  1441  005D                     ___ftmul@f3_as_product:	
  1442                           
  1443                           ; 3 bytes @ 0x3D
  1444  005D                     	ds	3
  1445  0060                     ___ftmul@cntr:	
  1446                           
  1447                           ; 1 bytes @ 0x40
  1448  0060                     	ds	1
  1449  0061                     ___ftmul@sign:	
  1450                           
  1451                           ; 1 bytes @ 0x41
  1452  0061                     	ds	1
  1453  0062                     ??_Fuzzy:	
  1454                           
  1455                           ; 0 bytes @ 0x42
  1456  0062                     	ds	2
  1457  0064                     ??_ISR:	
  1458                           
  1459                           ; 0 bytes @ 0x44
  1460  0064                     	ds	6
  1461  006A                     ISR@byte:	
  1462                           
  1463                           ; 1 bytes @ 0x4A
  1464  006A                     	ds	1
  1465                           
  1466                           	psect	maintext
  1467  09D6                     __pmaintext:	
  1468 ;;
  1469 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1470 ;;
  1471 ;; *************** function _main *****************
  1472 ;; Defined at:
  1473 ;;		line 466 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 17F/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       0       0       3       0
  1490 ;;      Totals:         0       0       0       3       0
  1491 ;;Total ram usage:        3 bytes
  1492 ;; Hardware stack levels required when called:    7
  1493 ;; This function calls:
  1494 ;;		_ADC_Init
  1495 ;;		_LCD_Clear
  1496 ;;		_LCD_Cursor
  1497 ;;		_LCD_Init
  1498 ;;		_LCD_WriteString
  1499 ;;		_PWM_DutyCycle1
  1500 ;;		_PWM_DutyCycle2
  1501 ;;		_PWM_Init
  1502 ;;		_TIMER0_Init
  1503 ;;		_TIMER0_Set
  1504 ;;		_USART_Init
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _main
  1512  09D6                     _main:	
  1513                           
  1514                           ;main.c: 468: TRISA = 0b00000001;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1518  09D6  3001               	movlw	1
  1519  09D7  1683               	bsf	3,5	;RP0=1, select bank1
  1520  09D8  1303               	bcf	3,6	;RP1=0, select bank1
  1521  09D9  0085               	movwf	5	;volatile
  1522                           
  1523                           ;main.c: 469: PORTA = 0b00000001;
  1524  09DA  3001               	movlw	1
  1525  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  1526  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  1527  09DD  0085               	movwf	5	;volatile
  1528                           
  1529                           ;main.c: 470: TRISB = 0b00000000;
  1530  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  1531  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  1532  09E0  0186               	clrf	6	;volatile
  1533                           
  1534                           ;main.c: 471: PORTB = 0b00000000;
  1535  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  1536  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  1537  09E3  0186               	clrf	6	;volatile
  1538                           
  1539                           ;main.c: 472: TRISC = 0b10000001;
  1540  09E4  3081               	movlw	129
  1541  09E5  1683               	bsf	3,5	;RP0=1, select bank1
  1542  09E6  1303               	bcf	3,6	;RP1=0, select bank1
  1543  09E7  0087               	movwf	7	;volatile
  1544                           
  1545                           ;main.c: 473: PORTC = 0b11000000;
  1546  09E8  30C0               	movlw	192
  1547  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  1548  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  1549  09EB  0087               	movwf	7	;volatile
  1550                           
  1551                           ;main.c: 474: TRISD = 0b00000000;
  1552  09EC  1683               	bsf	3,5	;RP0=1, select bank1
  1553  09ED  1303               	bcf	3,6	;RP1=0, select bank1
  1554  09EE  0188               	clrf	8	;volatile
  1555                           
  1556                           ;main.c: 475: PORTD = 0b00000000;
  1557  09EF  1283               	bcf	3,5	;RP0=0, select bank0
  1558  09F0  1303               	bcf	3,6	;RP1=0, select bank0
  1559  09F1  0188               	clrf	8	;volatile
  1560                           
  1561                           ;main.c: 476: TRISE = 0b00000000;
  1562  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  1563  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  1564  09F4  0189               	clrf	9	;volatile
  1565                           
  1566                           ;main.c: 477: PORTE = 0b00000000;
  1567  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  1568  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  1569  09F7  0189               	clrf	9	;volatile
  1570                           
  1571                           ;main.c: 480: T1CON = 0x03;
  1572  09F8  3003               	movlw	3
  1573  09F9  0090               	movwf	16	;volatile
  1574                           
  1575                           ;main.c: 481: TMR1L = 0x00;
  1576  09FA  018E               	clrf	14	;volatile
  1577                           
  1578                           ;main.c: 482: TMR1H = 0x00;
  1579  09FB  018F               	clrf	15	;volatile
  1580                           
  1581                           ;main.c: 485: USART_Init(115200);
  1582  09FC  3000               	movlw	0
  1583  09FD  1683               	bsf	3,5	;RP0=1, select bank3
  1584  09FE  1703               	bsf	3,6	;RP1=1, select bank3
  1585  09FF  00C7               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1586  0A00  3001               	movlw	1
  1587  0A01  00C6               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1588  0A02  30C2               	movlw	194
  1589  0A03  00C5               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1590  0A04  3000               	movlw	0
  1591  0A05  00C4               	movwf	USART_Init@BaudRate^(0+384)
  1592  0A06  160A  118A  24FA  120A  158A  	fcall	_USART_Init
  1593                           
  1594                           ;main.c: 486: TIMER0_Init();
  1595  0A0B  160A  118A  22DB  120A  158A  	fcall	_TIMER0_Init
  1596                           
  1597                           ;main.c: 487: ADC_Init();
  1598  0A10  160A  118A  22E6  120A  158A  	fcall	_ADC_Init
  1599                           
  1600                           ;main.c: 488: PWM_Init();
  1601  0A15  160A  118A  244A  120A  158A  	fcall	_PWM_Init
  1602                           
  1603                           ;main.c: 489: LCD_Init();
  1604  0A1A  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1605                           
  1606                           ;main.c: 492: INTCONbits.PEIE = 1;
  1607  0A1F  170B               	bsf	11,6	;volatile
  1608                           
  1609                           ;main.c: 493: INTCONbits.GIE = 1;
  1610  0A20  178B               	bsf	11,7	;volatile
  1611                           
  1612                           ;main.c: 500: LCD_Init();
  1613  0A21  160A  118A  260A  120A  158A  	fcall	_LCD_Init
  1614                           
  1615                           ;main.c: 501: LCD_Cursor(0,0);
  1616  0A26  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0A27  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0A28  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1619  0A29  3000               	movlw	0
  1620  0A2A  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1621                           
  1622                           ;main.c: 502: LCD_WriteString("Inicializando...");
  1623  0A2F  3029               	movlw	(STR_2-__stringbase)& (0+255)
  1624  0A30  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1625                           
  1626                           ;main.c: 505: PWM_DutyCycle1(0);
  1627  0A35  3000               	movlw	0
  1628  0A36  1683               	bsf	3,5	;RP0=1, select bank3
  1629  0A37  1703               	bsf	3,6	;RP1=1, select bank3
  1630  0A38  00B5               	movwf	PWM_DutyCycle1@valor^(0+384)
  1631  0A39  3000               	movlw	0
  1632  0A3A  00B6               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1633  0A3B  160A  118A  2408  120A  158A  	fcall	_PWM_DutyCycle1
  1634                           
  1635                           ;main.c: 506: PWM_DutyCycle2(0);
  1636  0A40  3000               	movlw	0
  1637  0A41  1683               	bsf	3,5	;RP0=1, select bank3
  1638  0A42  1703               	bsf	3,6	;RP1=1, select bank3
  1639  0A43  00B5               	movwf	PWM_DutyCycle2@valor^(0+384)
  1640  0A44  3000               	movlw	0
  1641  0A45  00B6               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1642  0A46  160A  118A  2429  120A  158A  	fcall	_PWM_DutyCycle2
  1643                           
  1644                           ;main.c: 509: TIMER0_Set(238);
  1645  0A4B  30EE               	movlw	238
  1646  0A4C  160A  118A  22C1  120A  158A  	fcall	_TIMER0_Set
  1647                           
  1648                           ;main.c: 512: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1649  0A51  3018               	movlw	24
  1650  0A52  1683               	bsf	3,5	;RP0=1, select bank3
  1651  0A53  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0A54  00CE               	movwf	(??_main^(0+384)+2)
  1653  0A55  3061               	movlw	97
  1654  0A56  00CD               	movwf	(??_main^(0+384)+1)
  1655  0A57  306E               	movlw	110
  1656  0A58  00CC               	movwf	??_main^(0+384)
  1657  0A59                     u5877:	
  1658  0A59  0BCC               	decfsz	??_main^(0+384),f
  1659  0A5A  2A59               	goto	u5877
  1660  0A5B  0BCD               	decfsz	(??_main^(0+384)+1),f
  1661  0A5C  2A59               	goto	u5877
  1662  0A5D  0BCE               	decfsz	(??_main^(0+384)+2),f
  1663  0A5E  2A59               	goto	u5877
  1664  0A5F  0000               	nop
  1665  0A60                     l3335:	
  1666                           ;main.c: 515: while(1)
  1667                           
  1668                           
  1669                           ;main.c: 516: {
  1670                           ;main.c: 522: LCD_Clear();
  1671  0A60  160A  118A  2493  120A  158A  	fcall	_LCD_Clear
  1672                           
  1673                           ;main.c: 523: LCD_Cursor(0,0);
  1674  0A65  1683               	bsf	3,5	;RP0=1, select bank3
  1675  0A66  1703               	bsf	3,6	;RP1=1, select bank3
  1676  0A67  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1677  0A68  3000               	movlw	0
  1678  0A69  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1679                           
  1680                           ;main.c: 524: LCD_WriteString("kmH: ");
  1681  0A6E  3044               	movlw	(STR_3-__stringbase)& (0+255)
  1682  0A6F  160A  118A  23C7  120A  158A  	fcall	_LCD_WriteString
  1683                           
  1684                           ;main.c: 527: LCD_Cursor(1,0);
  1685  0A74  1683               	bsf	3,5	;RP0=1, select bank3
  1686  0A75  1703               	bsf	3,6	;RP1=1, select bank3
  1687  0A76  01B5               	clrf	LCD_Cursor@Col^(0+384)
  1688  0A77  3001               	movlw	1
  1689  0A78  160A  118A  23A7  120A  158A  	fcall	_LCD_Cursor
  1690                           
  1691                           ;main.c: 532: _delay((unsigned long)((200)*(18432000/4000.0)));
  1692  0A7D  3005               	movlw	5
  1693  0A7E  1683               	bsf	3,5	;RP0=1, select bank3
  1694  0A7F  1703               	bsf	3,6	;RP1=1, select bank3
  1695  0A80  00CE               	movwf	(??_main^(0+384)+2)
  1696  0A81  30AD               	movlw	173
  1697  0A82  00CD               	movwf	(??_main^(0+384)+1)
  1698  0A83  30E0               	movlw	224
  1699  0A84  00CC               	movwf	??_main^(0+384)
  1700  0A85                     u5887:	
  1701  0A85  0BCC               	decfsz	??_main^(0+384),f
  1702  0A86  2A85               	goto	u5887
  1703  0A87  0BCD               	decfsz	(??_main^(0+384)+1),f
  1704  0A88  2A85               	goto	u5887
  1705  0A89  0BCE               	decfsz	(??_main^(0+384)+2),f
  1706  0A8A  2A85               	goto	u5887
  1707  0A8B  2A60               	goto	l3335
  1708  0A8C                     __end_of_main:	
  1709                           
  1710                           	psect	text1
  1711  14FA                     __ptext1:	
  1712 ;; *************** function _USART_Init *****************
  1713 ;; Defined at:
  1714 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  BaudRate        4   15[BANK3 ] long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       4       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       0       0       4       0
  1731 ;;      Totals:         0       0       0       8       0
  1732 ;;Total ram usage:        8 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    6
  1735 ;; This function calls:
  1736 ;;		___aldiv
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _USART_Init
  1744  14FA                     _USART_Init:	
  1745                           
  1746                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1750  14FA  1683               	bsf	3,5	;RP0=1, select bank3
  1751  14FB  1703               	bsf	3,6	;RP1=1, select bank3
  1752  14FC  0844               	movf	USART_Init@BaudRate^(0+384),w
  1753  14FD  00C8               	movwf	??_USART_Init^(0+384)
  1754  14FE  0845               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1755  14FF  00C9               	movwf	(??_USART_Init^(0+384)+1)
  1756  1500  0846               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1757  1501  00CA               	movwf	(??_USART_Init^(0+384)+2)
  1758  1502  0847               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1759  1503  00CB               	movwf	(??_USART_Init^(0+384)+3)
  1760  1504  3004               	movlw	4
  1761  1505                     u3895:	
  1762  1505  1003               	clrc
  1763  1506  0DC8               	rlf	??_USART_Init^(0+384),f
  1764  1507  0DC9               	rlf	(??_USART_Init^(0+384)+1),f
  1765  1508  0DCA               	rlf	(??_USART_Init^(0+384)+2),f
  1766  1509  0DCB               	rlf	(??_USART_Init^(0+384)+3),f
  1767  150A  3EFF               	addlw	-1
  1768  150B  1D03               	skipz
  1769  150C  2D05               	goto	u3895
  1770  150D  084B               	movf	(??_USART_Init+3)^(0+384),w
  1771  150E  00B8               	movwf	(___aldiv@divisor+3)^(0+384)
  1772  150F  084A               	movf	(??_USART_Init+2)^(0+384),w
  1773  1510  00B7               	movwf	(___aldiv@divisor+2)^(0+384)
  1774  1511  0849               	movf	(??_USART_Init+1)^(0+384),w
  1775  1512  00B6               	movwf	(___aldiv@divisor+1)^(0+384)
  1776  1513  0848               	movf	??_USART_Init^(0+384),w
  1777  1514  00B5               	movwf	___aldiv@divisor^(0+384)
  1778  1515  3001               	movlw	1
  1779  1516  00BC               	movwf	(___aldiv@dividend+3)^(0+384)
  1780  1517  3019               	movlw	25
  1781  1518  00BB               	movwf	(___aldiv@dividend+2)^(0+384)
  1782  1519  3040               	movlw	64
  1783  151A  00BA               	movwf	(___aldiv@dividend+1)^(0+384)
  1784  151B  3000               	movlw	0
  1785  151C  00B9               	movwf	___aldiv@dividend^(0+384)
  1786  151D  120A  158A  2010   	fcall	___aldiv
  1787  1520  1683               	bsf	3,5	;RP0=1, select bank3
  1788  1521  1703               	bsf	3,6	;RP1=1, select bank3
  1789  1522  0835               	movf	?___aldiv^(0+384),w
  1790  1523  3EFF               	addlw	255
  1791  1524  1683               	bsf	3,5	;RP0=1, select bank1
  1792  1525  1303               	bcf	3,6	;RP1=0, select bank1
  1793  1526  0099               	movwf	25	;volatile
  1794                           
  1795                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1796  1527  1398               	bcf	24,7	;volatile
  1797                           
  1798                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1799  1528  1318               	bcf	24,6	;volatile
  1800                           
  1801                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1802  1529  1698               	bsf	24,5	;volatile
  1803                           
  1804                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1805  152A  1218               	bcf	24,4	;volatile
  1806                           
  1807                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1808  152B  1518               	bsf	24,2	;volatile
  1809                           
  1810                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1811  152C  1498               	bsf	24,1	;volatile
  1812                           
  1813                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1814  152D  1018               	bcf	24,0	;volatile
  1815                           
  1816                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1817  152E  1283               	bcf	3,5	;RP0=0, select bank0
  1818  152F  1303               	bcf	3,6	;RP1=0, select bank0
  1819  1530  1798               	bsf	24,7	;volatile
  1820                           
  1821                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1822  1531  1318               	bcf	24,6	;volatile
  1823                           
  1824                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1825  1532  1298               	bcf	24,5	;volatile
  1826                           
  1827                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1828  1533  1618               	bsf	24,4	;volatile
  1829                           
  1830                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1831  1534  1198               	bcf	24,3	;volatile
  1832                           
  1833                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1834  1535  1118               	bcf	24,2	;volatile
  1835                           
  1836                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1837  1536  1098               	bcf	24,1	;volatile
  1838                           
  1839                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1840  1537  1018               	bcf	24,0	;volatile
  1841                           
  1842                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1843  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1844  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1845  153A  120C               	bcf	12,4	;volatile
  1846                           
  1847                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1848  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1849  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1850  153D  120C               	bcf	12,4	;volatile
  1851                           
  1852                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1853  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1854  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1855  1540  168C               	bsf	12,5	;volatile
  1856                           
  1857                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1858  1541  1283               	bcf	3,5	;RP0=0, select bank0
  1859  1542  1303               	bcf	3,6	;RP1=0, select bank0
  1860  1543  128C               	bcf	12,5	;volatile
  1861  1544  0008               	return
  1862  1545                     __end_of_USART_Init:	
  1863                           
  1864                           	psect	text2
  1865  0810                     __ptext2:	
  1866 ;; *************** function ___aldiv *****************
  1867 ;; Defined at:
  1868 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  divisor         4    0[BANK3 ] long 
  1871 ;;  dividend        4    4[BANK3 ] long 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  quotient        4   11[BANK3 ] long 
  1874 ;;  sign            1   10[BANK3 ] unsigned char 
  1875 ;;  counter         1    9[BANK3 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  4    0[BANK3 ] long 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       8       0
  1886 ;;      Locals:         0       0       0       6       0
  1887 ;;      Temps:          0       0       0       1       0
  1888 ;;      Totals:         0       0       0      15       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_USART_Init
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___aldiv
  1901  0810                     ___aldiv:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1905  0810  1683               	bsf	3,5	;RP0=1, select bank3
  1906  0811  1703               	bsf	3,6	;RP1=1, select bank3
  1907  0812  01BF               	clrf	___aldiv@sign^(0+384)
  1908  0813  1FB8               	btfss	(___aldiv@divisor+3)^(0+384),7
  1909  0814  2822               	goto	l623
  1910  0815  09B5               	comf	___aldiv@divisor^(0+384),f
  1911  0816  09B6               	comf	(___aldiv@divisor+1)^(0+384),f
  1912  0817  09B7               	comf	(___aldiv@divisor+2)^(0+384),f
  1913  0818  09B8               	comf	(___aldiv@divisor+3)^(0+384),f
  1914  0819  0AB5               	incf	___aldiv@divisor^(0+384),f
  1915  081A  1903               	skipnz
  1916  081B  0AB6               	incf	(___aldiv@divisor+1)^(0+384),f
  1917  081C  1903               	skipnz
  1918  081D  0AB7               	incf	(___aldiv@divisor+2)^(0+384),f
  1919  081E  1903               	skipnz
  1920  081F  0AB8               	incf	(___aldiv@divisor+3)^(0+384),f
  1921  0820  01BF               	clrf	___aldiv@sign^(0+384)
  1922  0821  0ABF               	incf	___aldiv@sign^(0+384),f
  1923  0822                     l623:	
  1924  0822  1FBC               	btfss	(___aldiv@dividend+3)^(0+384),7
  1925  0823  2833               	goto	l3125
  1926  0824  09B9               	comf	___aldiv@dividend^(0+384),f
  1927  0825  09BA               	comf	(___aldiv@dividend+1)^(0+384),f
  1928  0826  09BB               	comf	(___aldiv@dividend+2)^(0+384),f
  1929  0827  09BC               	comf	(___aldiv@dividend+3)^(0+384),f
  1930  0828  0AB9               	incf	___aldiv@dividend^(0+384),f
  1931  0829  1903               	skipnz
  1932  082A  0ABA               	incf	(___aldiv@dividend+1)^(0+384),f
  1933  082B  1903               	skipnz
  1934  082C  0ABB               	incf	(___aldiv@dividend+2)^(0+384),f
  1935  082D  1903               	skipnz
  1936  082E  0ABC               	incf	(___aldiv@dividend+3)^(0+384),f
  1937  082F  3001               	movlw	1
  1938  0830  00BD               	movwf	??___aldiv^(0+384)
  1939  0831  083D               	movf	??___aldiv^(0+384),w
  1940  0832  06BF               	xorwf	___aldiv@sign^(0+384),f
  1941  0833                     l3125:	
  1942  0833  3000               	movlw	0
  1943  0834  00C3               	movwf	(___aldiv@quotient+3)^(0+384)
  1944  0835  3000               	movlw	0
  1945  0836  00C2               	movwf	(___aldiv@quotient+2)^(0+384)
  1946  0837  3000               	movlw	0
  1947  0838  00C1               	movwf	(___aldiv@quotient+1)^(0+384)
  1948  0839  3000               	movlw	0
  1949  083A  00C0               	movwf	___aldiv@quotient^(0+384)
  1950  083B  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1951  083C  0437               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1952  083D  0436               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1953  083E  0435               	iorwf	___aldiv@divisor^(0+384),w
  1954  083F  1903               	skipnz
  1955  0840  2888               	goto	l3147
  1956  0841  01BE               	clrf	___aldiv@counter^(0+384)
  1957  0842  0ABE               	incf	___aldiv@counter^(0+384),f
  1958  0843                     l3133:	
  1959  0843  1BB8               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1960  0844  2853               	goto	l3135
  1961  0845  3001               	movlw	1
  1962  0846  00BD               	movwf	??___aldiv^(0+384)
  1963  0847                     u3815:	
  1964  0847  1003               	clrc
  1965  0848  0DB5               	rlf	___aldiv@divisor^(0+384),f
  1966  0849  0DB6               	rlf	(___aldiv@divisor+1)^(0+384),f
  1967  084A  0DB7               	rlf	(___aldiv@divisor+2)^(0+384),f
  1968  084B  0DB8               	rlf	(___aldiv@divisor+3)^(0+384),f
  1969  084C  0BBD               	decfsz	??___aldiv^(0+384),f
  1970  084D  2847               	goto	u3815
  1971  084E  3001               	movlw	1
  1972  084F  00BD               	movwf	??___aldiv^(0+384)
  1973  0850  083D               	movf	??___aldiv^(0+384),w
  1974  0851  07BE               	addwf	___aldiv@counter^(0+384),f
  1975  0852  2843               	goto	l3133
  1976  0853                     l3135:	
  1977  0853  3001               	movlw	1
  1978  0854  00BD               	movwf	??___aldiv^(0+384)
  1979  0855                     u3835:	
  1980  0855  1003               	clrc
  1981  0856  0DC0               	rlf	___aldiv@quotient^(0+384),f
  1982  0857  0DC1               	rlf	(___aldiv@quotient+1)^(0+384),f
  1983  0858  0DC2               	rlf	(___aldiv@quotient+2)^(0+384),f
  1984  0859  0DC3               	rlf	(___aldiv@quotient+3)^(0+384),f
  1985  085A  0BBD               	decfsz	??___aldiv^(0+384),f
  1986  085B  2855               	goto	u3835
  1987  085C  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  1988  085D  023C               	subwf	(___aldiv@dividend+3)^(0+384),w
  1989  085E  1D03               	skipz
  1990  085F  286A               	goto	u3845
  1991  0860  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  1992  0861  023B               	subwf	(___aldiv@dividend+2)^(0+384),w
  1993  0862  1D03               	skipz
  1994  0863  286A               	goto	u3845
  1995  0864  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  1996  0865  023A               	subwf	(___aldiv@dividend+1)^(0+384),w
  1997  0866  1D03               	skipz
  1998  0867  286A               	goto	u3845
  1999  0868  0835               	movf	___aldiv@divisor^(0+384),w
  2000  0869  0239               	subwf	___aldiv@dividend^(0+384),w
  2001  086A                     u3845:	
  2002  086A  1C03               	skipc
  2003  086B  287B               	goto	l3143
  2004  086C  0835               	movf	___aldiv@divisor^(0+384),w
  2005  086D  02B9               	subwf	___aldiv@dividend^(0+384),f
  2006  086E  0836               	movf	(___aldiv@divisor+1)^(0+384),w
  2007  086F  1C03               	skipc
  2008  0870  0F36               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2009  0871  02BA               	subwf	(___aldiv@dividend+1)^(0+384),f
  2010  0872  0837               	movf	(___aldiv@divisor+2)^(0+384),w
  2011  0873  1C03               	skipc
  2012  0874  0F37               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2013  0875  02BB               	subwf	(___aldiv@dividend+2)^(0+384),f
  2014  0876  0838               	movf	(___aldiv@divisor+3)^(0+384),w
  2015  0877  1C03               	skipc
  2016  0878  0F38               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2017  0879  02BC               	subwf	(___aldiv@dividend+3)^(0+384),f
  2018  087A  1440               	bsf	___aldiv@quotient^(0+384),0
  2019  087B                     l3143:	
  2020  087B  3001               	movlw	1
  2021  087C                     u3855:	
  2022  087C  1003               	clrc
  2023  087D  0CB8               	rrf	(___aldiv@divisor+3)^(0+384),f
  2024  087E  0CB7               	rrf	(___aldiv@divisor+2)^(0+384),f
  2025  087F  0CB6               	rrf	(___aldiv@divisor+1)^(0+384),f
  2026  0880  0CB5               	rrf	___aldiv@divisor^(0+384),f
  2027  0881  3EFF               	addlw	-1
  2028  0882  1D03               	skipz
  2029  0883  287C               	goto	u3855
  2030  0884  3001               	movlw	1
  2031  0885  02BE               	subwf	___aldiv@counter^(0+384),f
  2032  0886  1D03               	btfss	3,2
  2033  0887  2853               	goto	l3135
  2034  0888                     l3147:	
  2035  0888  083F               	movf	___aldiv@sign^(0+384),w
  2036  0889  1903               	btfsc	3,2
  2037  088A  2896               	goto	l3151
  2038  088B  09C0               	comf	___aldiv@quotient^(0+384),f
  2039  088C  09C1               	comf	(___aldiv@quotient+1)^(0+384),f
  2040  088D  09C2               	comf	(___aldiv@quotient+2)^(0+384),f
  2041  088E  09C3               	comf	(___aldiv@quotient+3)^(0+384),f
  2042  088F  0AC0               	incf	___aldiv@quotient^(0+384),f
  2043  0890  1903               	skipnz
  2044  0891  0AC1               	incf	(___aldiv@quotient+1)^(0+384),f
  2045  0892  1903               	skipnz
  2046  0893  0AC2               	incf	(___aldiv@quotient+2)^(0+384),f
  2047  0894  1903               	skipnz
  2048  0895  0AC3               	incf	(___aldiv@quotient+3)^(0+384),f
  2049  0896                     l3151:	
  2050  0896  0843               	movf	(___aldiv@quotient+3)^(0+384),w
  2051  0897  00B8               	movwf	(?___aldiv+3)^(0+384)
  2052  0898  0842               	movf	(___aldiv@quotient+2)^(0+384),w
  2053  0899  00B7               	movwf	(?___aldiv+2)^(0+384)
  2054  089A  0841               	movf	(___aldiv@quotient+1)^(0+384),w
  2055  089B  00B6               	movwf	(?___aldiv+1)^(0+384)
  2056  089C  0840               	movf	___aldiv@quotient^(0+384),w
  2057  089D  00B5               	movwf	?___aldiv^(0+384)
  2058  089E  0008               	return
  2059  089F                     __end_of___aldiv:	
  2060                           
  2061                           	psect	text3
  2062  12C1                     __ptext3:	
  2063 ;; *************** function _TIMER0_Set *****************
  2064 ;; Defined at:
  2065 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  contagens       1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  contagens       1    0[BANK3 ] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;		None               void
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       1       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         0       0       0       1       0
  2083 ;;Total ram usage:        1 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    5
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _TIMER0_Set
  2095  12C1                     _TIMER0_Set:	
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _TIMER0_Set: [wreg]
  2099                           ;TIMER0_Set@contagens stored from wreg
  2100  12C1  1683               	bsf	3,5	;RP0=1, select bank3
  2101  12C2  1703               	bsf	3,6	;RP1=1, select bank3
  2102  12C3  00B5               	movwf	TIMER0_Set@contagens^(0+384)
  2103                           
  2104                           ;timers.c: 22: TMR0 = contagens;
  2105  12C4  0835               	movf	TIMER0_Set@contagens^(0+384),w
  2106  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  2107  12C6  1303               	bcf	3,6	;RP1=0, select bank0
  2108  12C7  0081               	movwf	1	;volatile
  2109  12C8  0008               	return
  2110  12C9                     __end_of_TIMER0_Set:	
  2111                           
  2112                           	psect	text4
  2113  12DB                     __ptext4:	
  2114 ;; *************** function _TIMER0_Init *****************
  2115 ;; Defined at:
  2116 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		None
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    5
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _TIMER0_Init
  2146  12DB                     _TIMER0_Init:	
  2147                           
  2148                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _TIMER0_Init: []
  2152  12DB  1683               	bsf	3,5	;RP0=1, select bank1
  2153  12DC  1303               	bcf	3,6	;RP1=0, select bank1
  2154  12DD  1281               	bcf	1,5	;volatile
  2155                           
  2156                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2157  12DE  1201               	bcf	1,4	;volatile
  2158                           
  2159                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2160  12DF  1181               	bcf	1,3	;volatile
  2161                           
  2162                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2163  12E0  1501               	bsf	1,2	;volatile
  2164                           
  2165                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2166  12E1  1481               	bsf	1,1	;volatile
  2167                           
  2168                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2169  12E2  1401               	bsf	1,0	;volatile
  2170                           
  2171                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2172  12E3  110B               	bcf	11,2	;volatile
  2173                           
  2174                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2175  12E4  168B               	bsf	11,5	;volatile
  2176  12E5  0008               	return
  2177  12E6                     __end_of_TIMER0_Init:	
  2178                           
  2179                           	psect	text5
  2180  144A                     __ptext5:	
  2181 ;; *************** function _PWM_Init *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    5
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _PWM_Init
  2213  144A                     _PWM_Init:	
  2214                           
  2215                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2216                           
  2217                           ;incstack = 0
  2218                           ; Regs used in _PWM_Init: [wreg]
  2219  144A  1283               	bcf	3,5	;RP0=0, select bank0
  2220  144B  1303               	bcf	3,6	;RP1=0, select bank0
  2221  144C  1492               	bsf	18,1	;volatile
  2222                           
  2223                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2224  144D  1012               	bcf	18,0	;volatile
  2225                           
  2226                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2227  144E  1312               	bcf	18,6	;volatile
  2228                           
  2229                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2230  144F  1292               	bcf	18,5	;volatile
  2231                           
  2232                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2233  1450  1212               	bcf	18,4	;volatile
  2234                           
  2235                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2236  1451  1192               	bcf	18,3	;volatile
  2237                           
  2238                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2239  1452  1512               	bsf	18,2	;volatile
  2240                           
  2241                           ;pwm.c: 27: PR2 = 255;
  2242  1453  30FF               	movlw	255
  2243  1454  1683               	bsf	3,5	;RP0=1, select bank1
  2244  1455  1303               	bcf	3,6	;RP1=0, select bank1
  2245  1456  0092               	movwf	18	;volatile
  2246                           
  2247                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2248  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2249  1458  1303               	bcf	3,6	;RP1=0, select bank0
  2250  1459  1597               	bsf	23,3	;volatile
  2251                           
  2252                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2253  145A  1517               	bsf	23,2	;volatile
  2254                           
  2255                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2256  145B  1497               	bsf	23,1	;volatile
  2257                           
  2258                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2259  145C  1417               	bsf	23,0	;volatile
  2260                           
  2261                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2262  145D  1683               	bsf	3,5	;RP0=1, select bank1
  2263  145E  1303               	bcf	3,6	;RP1=0, select bank1
  2264  145F  150C               	bsf	12,2	;volatile
  2265                           
  2266                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2267  1460  1283               	bcf	3,5	;RP0=0, select bank0
  2268  1461  1303               	bcf	3,6	;RP1=0, select bank0
  2269  1462  110C               	bcf	12,2	;volatile
  2270                           
  2271                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2272  1463  159D               	bsf	29,3	;volatile
  2273                           
  2274                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2275  1464  151D               	bsf	29,2	;volatile
  2276                           
  2277                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2278  1465  149D               	bsf	29,1	;volatile
  2279                           
  2280                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2281  1466  141D               	bsf	29,0	;volatile
  2282                           
  2283                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2284  1467  1683               	bsf	3,5	;RP0=1, select bank1
  2285  1468  1303               	bcf	3,6	;RP1=0, select bank1
  2286  1469  140D               	bsf	13,0	;volatile
  2287                           
  2288                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2289  146A  1283               	bcf	3,5	;RP0=0, select bank0
  2290  146B  1303               	bcf	3,6	;RP1=0, select bank0
  2291  146C  100D               	bcf	13,0	;volatile
  2292  146D  0008               	return
  2293  146E                     __end_of_PWM_Init:	
  2294                           
  2295                           	psect	text6
  2296  1429                     __ptext6:	
  2297 ;; *************** function _PWM_DutyCycle2 *****************
  2298 ;; Defined at:
  2299 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  valor           2    0[BANK3 ] int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       0       0       2       0
  2314 ;;      Locals:         0       0       0       0       0
  2315 ;;      Temps:          0       0       0       2       0
  2316 ;;      Totals:         0       0       0       4       0
  2317 ;;Total ram usage:        4 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    5
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _PWM_DutyCycle2
  2329  1429                     _PWM_DutyCycle2:	
  2330                           
  2331                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2335  1429  1683               	bsf	3,5	;RP0=1, select bank3
  2336  142A  1703               	bsf	3,6	;RP1=1, select bank3
  2337  142B  0836               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2338  142C  00B8               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2339  142D  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2340  142E  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2341  142F  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2342  1430  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2343  1431  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2344  1432  0D38               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2345  1433  0CB8               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2346  1434  0CB7               	rrf	??_PWM_DutyCycle2^(0+384),f
  2347  1435  0837               	movf	??_PWM_DutyCycle2^(0+384),w
  2348  1436  1283               	bcf	3,5	;RP0=0, select bank0
  2349  1437  1303               	bcf	3,6	;RP1=0, select bank0
  2350  1438  009B               	movwf	27	;volatile
  2351                           
  2352                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2353  1439  1683               	bsf	3,5	;RP0=1, select bank3
  2354  143A  1703               	bsf	3,6	;RP1=1, select bank3
  2355  143B  0835               	movf	PWM_DutyCycle2@valor^(0+384),w
  2356  143C  00B7               	movwf	??_PWM_DutyCycle2^(0+384)
  2357  143D  3003               	movlw	3
  2358  143E                     u3885:	
  2359  143E  1003               	clrc
  2360  143F  0DB7               	rlf	??_PWM_DutyCycle2^(0+384),f
  2361  1440  3EFF               	addlw	-1
  2362  1441  1D03               	skipz
  2363  1442  2C3E               	goto	u3885
  2364  1443  1003               	clrc
  2365  1444  0D37               	rlf	??_PWM_DutyCycle2^(0+384),w
  2366  1445  380C               	iorlw	12
  2367  1446  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1447  1303               	bcf	3,6	;RP1=0, select bank0
  2369  1448  009D               	movwf	29	;volatile
  2370  1449  0008               	return
  2371  144A                     __end_of_PWM_DutyCycle2:	
  2372                           
  2373                           	psect	text7
  2374  1408                     __ptext7:	
  2375 ;; *************** function _PWM_DutyCycle1 *****************
  2376 ;; Defined at:
  2377 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  valor           2    0[BANK3 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       2       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       2       0
  2394 ;;      Totals:         0       0       0       4       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _PWM_DutyCycle1
  2407  1408                     _PWM_DutyCycle1:	
  2408                           
  2409                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2413  1408  1683               	bsf	3,5	;RP0=1, select bank3
  2414  1409  1703               	bsf	3,6	;RP1=1, select bank3
  2415  140A  0836               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2416  140B  00B8               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2417  140C  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2418  140D  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2419  140E  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2420  140F  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2421  1410  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2422  1411  0D38               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2423  1412  0CB8               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2424  1413  0CB7               	rrf	??_PWM_DutyCycle1^(0+384),f
  2425  1414  0837               	movf	??_PWM_DutyCycle1^(0+384),w
  2426  1415  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1416  1303               	bcf	3,6	;RP1=0, select bank0
  2428  1417  0095               	movwf	21	;volatile
  2429                           
  2430                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2431  1418  1683               	bsf	3,5	;RP0=1, select bank3
  2432  1419  1703               	bsf	3,6	;RP1=1, select bank3
  2433  141A  0835               	movf	PWM_DutyCycle1@valor^(0+384),w
  2434  141B  00B7               	movwf	??_PWM_DutyCycle1^(0+384)
  2435  141C  3003               	movlw	3
  2436  141D                     u3925:	
  2437  141D  1003               	clrc
  2438  141E  0DB7               	rlf	??_PWM_DutyCycle1^(0+384),f
  2439  141F  3EFF               	addlw	-1
  2440  1420  1D03               	skipz
  2441  1421  2C1D               	goto	u3925
  2442  1422  1003               	clrc
  2443  1423  0D37               	rlf	??_PWM_DutyCycle1^(0+384),w
  2444  1424  380C               	iorlw	12
  2445  1425  1283               	bcf	3,5	;RP0=0, select bank0
  2446  1426  1303               	bcf	3,6	;RP1=0, select bank0
  2447  1427  0097               	movwf	23	;volatile
  2448  1428  0008               	return
  2449  1429                     __end_of_PWM_DutyCycle1:	
  2450                           
  2451                           	psect	text8
  2452  13C7                     __ptext8:	
  2453 ;; *************** function _LCD_WriteString *****************
  2454 ;; Defined at:
  2455 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  Str             1    wreg     PTR const unsigned char 
  2458 ;;		 -> STR_3(6), STR_2(17), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  Str             1    3[BANK3 ] PTR const unsigned char 
  2461 ;;		 -> STR_3(6), STR_2(17), 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       0       0       0       0
  2472 ;;      Locals:         0       0       0       1       0
  2473 ;;      Temps:          0       0       0       1       0
  2474 ;;      Totals:         0       0       0       2       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    6
  2478 ;; This function calls:
  2479 ;;		_LCD_WriteData
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _LCD_WriteString
  2487  13C7                     _LCD_WriteString:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2491                           ;LCD_WriteString@Str stored from wreg
  2492  13C7  1683               	bsf	3,5	;RP0=1, select bank3
  2493  13C8  1703               	bsf	3,6	;RP1=1, select bank3
  2494  13C9  00B8               	movwf	LCD_WriteString@Str^(0+384)
  2495  13CA                     l3277:	
  2496                           ;lcd.c: 63: while(*Str != '\0')
  2497                           
  2498  13CA  0838               	movf	LCD_WriteString@Str^(0+384),w
  2499  13CB  0084               	movwf	4
  2500  13CC  160A  118A  2000  160A  118A  	fcall	stringdir
  2501  13D1  3800               	iorlw	0
  2502  13D2  1903               	btfsc	3,2
  2503  13D3  0008               	return
  2504                           
  2505                           ;lcd.c: 64: {
  2506                           ;lcd.c: 65: LCD_WriteData(*Str);
  2507  13D4  0838               	movf	LCD_WriteString@Str^(0+384),w
  2508  13D5  0084               	movwf	4
  2509  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  2510  13DB  160A  118A  2323  160A  118A  	fcall	_LCD_WriteData
  2511                           
  2512                           ;lcd.c: 66: Str++;
  2513  13E0  3001               	movlw	1
  2514  13E1  1683               	bsf	3,5	;RP0=1, select bank3
  2515  13E2  1703               	bsf	3,6	;RP1=1, select bank3
  2516  13E3  00B7               	movwf	??_LCD_WriteString^(0+384)
  2517  13E4  0837               	movf	??_LCD_WriteString^(0+384),w
  2518  13E5  07B8               	addwf	LCD_WriteString@Str^(0+384),f
  2519  13E6  2BCA               	goto	l3277
  2520  13E7                     __end_of_LCD_WriteString:	
  2521                           
  2522                           	psect	text9
  2523  1323                     __ptext9:	
  2524 ;; *************** function _LCD_WriteData *****************
  2525 ;; Defined at:
  2526 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  Byte            1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  Byte            1    1[BANK3 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       1       0
  2542 ;;      Temps:          0       0       0       1       0
  2543 ;;      Totals:         0       0       0       2       0
  2544 ;;Total ram usage:        2 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    5
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_LCD_WriteString
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _LCD_WriteData
  2556  1323                     _LCD_WriteData:	
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _LCD_WriteData: [wreg]
  2560                           ;LCD_WriteData@Byte stored from wreg
  2561  1323  1683               	bsf	3,5	;RP0=1, select bank3
  2562  1324  1703               	bsf	3,6	;RP1=1, select bank3
  2563  1325  00B6               	movwf	LCD_WriteData@Byte^(0+384)
  2564                           
  2565                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2566  1326  1283               	bcf	3,5	;RP0=0, select bank0
  2567  1327  1303               	bcf	3,6	;RP1=0, select bank0
  2568  1328  1409               	bsf	9,0	;volatile
  2569                           
  2570                           ;lcd.c: 51: PORTD = Byte;
  2571  1329  1683               	bsf	3,5	;RP0=1, select bank3
  2572  132A  1703               	bsf	3,6	;RP1=1, select bank3
  2573  132B  0836               	movf	LCD_WriteData@Byte^(0+384),w
  2574  132C  1283               	bcf	3,5	;RP0=0, select bank0
  2575  132D  1303               	bcf	3,6	;RP1=0, select bank0
  2576  132E  0088               	movwf	8	;volatile
  2577                           
  2578                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2579  132F  1489               	bsf	9,1	;volatile
  2580                           
  2581                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2582  1330  303D               	movlw	61
  2583  1331  1683               	bsf	3,5	;RP0=1, select bank3
  2584  1332  1703               	bsf	3,6	;RP1=1, select bank3
  2585  1333  00B5               	movwf	??_LCD_WriteData^(0+384)
  2586  1334                     u5897:	
  2587  1334  0BB5               	decfsz	??_LCD_WriteData^(0+384),f
  2588  1335  2B34               	goto	u5897
  2589                           
  2590                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2591  1336  1283               	bcf	3,5	;RP0=0, select bank0
  2592  1337  1303               	bcf	3,6	;RP1=0, select bank0
  2593  1338  1089               	bcf	9,1	;volatile
  2594  1339  0008               	return
  2595  133A                     __end_of_LCD_WriteData:	
  2596                           
  2597                           	psect	text10
  2598  160A                     __ptext10:	
  2599 ;; *************** function _LCD_Init *****************
  2600 ;; Defined at:
  2601 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          0       0       0       2       0
  2618 ;;      Totals:         0       0       0       2       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    6
  2622 ;; This function calls:
  2623 ;;		_LCD_WriteCmd
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _LCD_Init
  2631  160A                     _LCD_Init:	
  2632                           
  2633                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2637  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2638  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2639  160C  119F               	bcf	31,3	;volatile
  2640                           
  2641                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2642  160D  151F               	bsf	31,2	;volatile
  2643                           
  2644                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2645  160E  109F               	bcf	31,1	;volatile
  2646                           
  2647                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2648  160F  101F               	bcf	31,0	;volatile
  2649                           
  2650                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2651  1610  305A               	movlw	90
  2652  1611  1683               	bsf	3,5	;RP0=1, select bank3
  2653  1612  1703               	bsf	3,6	;RP1=1, select bank3
  2654  1613  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2655  1614  30C3               	movlw	195
  2656  1615  00B7               	movwf	??_LCD_Init^(0+384)
  2657  1616                     u5907:	
  2658  1616  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2659  1617  2E16               	goto	u5907
  2660  1618  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2661  1619  2E16               	goto	u5907
  2662                           
  2663                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2664  161A  3030               	movlw	48
  2665  161B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2666                           
  2667                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2668  1620  3018               	movlw	24
  2669  1621  1683               	bsf	3,5	;RP0=1, select bank3
  2670  1622  1703               	bsf	3,6	;RP1=1, select bank3
  2671  1623  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2672  1624  30EF               	movlw	239
  2673  1625  00B7               	movwf	??_LCD_Init^(0+384)
  2674  1626                     u5917:	
  2675  1626  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2676  1627  2E26               	goto	u5917
  2677  1628  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2678  1629  2E26               	goto	u5917
  2679                           
  2680                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2681  162A  3030               	movlw	48
  2682  162B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2683                           
  2684                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2685  1630  3099               	movlw	153
  2686  1631  1683               	bsf	3,5	;RP0=1, select bank3
  2687  1632  1703               	bsf	3,6	;RP1=1, select bank3
  2688  1633  00B7               	movwf	??_LCD_Init^(0+384)
  2689  1634                     u5927:	
  2690  1634  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2691  1635  2E34               	goto	u5927
  2692                           
  2693                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2694  1636  3030               	movlw	48
  2695  1637  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2696                           
  2697                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2698  163C  303D               	movlw	61
  2699  163D  1683               	bsf	3,5	;RP0=1, select bank3
  2700  163E  1703               	bsf	3,6	;RP1=1, select bank3
  2701  163F  00B7               	movwf	??_LCD_Init^(0+384)
  2702  1640                     u5937:	
  2703  1640  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2704  1641  2E40               	goto	u5937
  2705                           
  2706                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2707  1642  3038               	movlw	56
  2708  1643  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2709                           
  2710                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2711  1648  303D               	movlw	61
  2712  1649  1683               	bsf	3,5	;RP0=1, select bank3
  2713  164A  1703               	bsf	3,6	;RP1=1, select bank3
  2714  164B  00B7               	movwf	??_LCD_Init^(0+384)
  2715  164C                     u5947:	
  2716  164C  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2717  164D  2E4C               	goto	u5947
  2718                           
  2719                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2720  164E  3001               	movlw	1
  2721  164F  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2722                           
  2723                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2724  1654  300C               	movlw	12
  2725  1655  1683               	bsf	3,5	;RP0=1, select bank3
  2726  1656  1703               	bsf	3,6	;RP1=1, select bank3
  2727  1657  00B8               	movwf	(??_LCD_Init^(0+384)+1)
  2728  1658  30F7               	movlw	247
  2729  1659  00B7               	movwf	??_LCD_Init^(0+384)
  2730  165A                     u5957:	
  2731  165A  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2732  165B  2E5A               	goto	u5957
  2733  165C  0BB8               	decfsz	(??_LCD_Init^(0+384)+1),f
  2734  165D  2E5A               	goto	u5957
  2735                           
  2736                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2737  165E  300C               	movlw	12
  2738  165F  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2739                           
  2740                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2741  1664  303D               	movlw	61
  2742  1665  1683               	bsf	3,5	;RP0=1, select bank3
  2743  1666  1703               	bsf	3,6	;RP1=1, select bank3
  2744  1667  00B7               	movwf	??_LCD_Init^(0+384)
  2745  1668                     u5967:	
  2746  1668  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2747  1669  2E68               	goto	u5967
  2748                           
  2749                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2750  166A  3006               	movlw	6
  2751  166B  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2752                           
  2753                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2754  1670  303D               	movlw	61
  2755  1671  1683               	bsf	3,5	;RP0=1, select bank3
  2756  1672  1703               	bsf	3,6	;RP1=1, select bank3
  2757  1673  00B7               	movwf	??_LCD_Init^(0+384)
  2758  1674                     u5977:	
  2759  1674  0BB7               	decfsz	??_LCD_Init^(0+384),f
  2760  1675  2E74               	goto	u5977
  2761  1676  0008               	return
  2762  1677                     __end_of_LCD_Init:	
  2763                           
  2764                           	psect	text11
  2765  13A7                     __ptext11:	
  2766 ;; *************** function _LCD_Cursor *****************
  2767 ;; Defined at:
  2768 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  Row             1    wreg     unsigned char 
  2771 ;;  Col             1    0[BANK3 ] unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  Row             1    2[BANK3 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       1       0
  2784 ;;      Locals:         0       0       0       1       0
  2785 ;;      Temps:          0       0       0       1       0
  2786 ;;      Totals:         0       0       0       3       0
  2787 ;;Total ram usage:        3 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    5
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _LCD_Cursor
  2799  13A7                     _LCD_Cursor:	
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2803                           ;LCD_Cursor@Row stored from wreg
  2804  13A7  1683               	bsf	3,5	;RP0=1, select bank3
  2805  13A8  1703               	bsf	3,6	;RP1=1, select bank3
  2806  13A9  00B7               	movwf	LCD_Cursor@Row^(0+384)
  2807                           
  2808                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2809  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  2810  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  2811  13AC  1009               	bcf	9,0	;volatile
  2812                           
  2813                           ;lcd.c: 14: if (Row == 0)
  2814  13AD  1683               	bsf	3,5	;RP0=1, select bank3
  2815  13AE  1703               	bsf	3,6	;RP1=1, select bank3
  2816  13AF  08B7               	movf	LCD_Cursor@Row^(0+384),f
  2817  13B0  1D03               	skipz
  2818  13B1  2BB5               	goto	l3263
  2819                           
  2820                           ;lcd.c: 15: {
  2821                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2822  13B2  0835               	movf	LCD_Cursor@Col^(0+384),w
  2823  13B3  3E80               	addlw	128
  2824  13B4  2BB9               	goto	L1
  2825  13B5                     l3263:	
  2826                           ;lcd.c: 17: }
  2827                           
  2828                           
  2829                           ;lcd.c: 18: else
  2830                           ;lcd.c: 19: {
  2831                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2832  13B5  1683               	bsf	3,5	;RP0=1, select bank3
  2833  13B6  1703               	bsf	3,6	;RP1=1, select bank3
  2834  13B7  0835               	movf	LCD_Cursor@Col^(0+384),w
  2835  13B8  3EC0               	addlw	192
  2836  13B9                     L1:	
  2837  13B9  1283               	bcf	3,5	;RP0=0, select bank0
  2838  13BA  1303               	bcf	3,6	;RP1=0, select bank0
  2839  13BB  0088               	movwf	8	;volatile
  2840                           
  2841                           ;lcd.c: 21: }
  2842                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2843  13BC  1489               	bsf	9,1	;volatile
  2844                           
  2845                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2846  13BD  303D               	movlw	61
  2847  13BE  1683               	bsf	3,5	;RP0=1, select bank3
  2848  13BF  1703               	bsf	3,6	;RP1=1, select bank3
  2849  13C0  00B6               	movwf	??_LCD_Cursor^(0+384)
  2850  13C1                     u5987:	
  2851  13C1  0BB6               	decfsz	??_LCD_Cursor^(0+384),f
  2852  13C2  2BC1               	goto	u5987
  2853                           
  2854                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2855  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  2856  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  2857  13C5  1089               	bcf	9,1	;volatile
  2858  13C6  0008               	return
  2859  13C7                     __end_of_LCD_Cursor:	
  2860                           
  2861                           	psect	text12
  2862  1493                     __ptext12:	
  2863 ;; *************** function _LCD_Clear *****************
  2864 ;; Defined at:
  2865 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       2       0
  2882 ;;      Totals:         0       0       0       2       0
  2883 ;;Total ram usage:        2 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    6
  2886 ;; This function calls:
  2887 ;;		_LCD_WriteCmd
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _LCD_Clear
  2895  1493                     _LCD_Clear:	
  2896                           
  2897                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2901  1493  3001               	movlw	1
  2902  1494  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2903                           
  2904                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2905  1499  300C               	movlw	12
  2906  149A  1683               	bsf	3,5	;RP0=1, select bank3
  2907  149B  1703               	bsf	3,6	;RP1=1, select bank3
  2908  149C  00B8               	movwf	(??_LCD_Clear^(0+384)+1)
  2909  149D  30F7               	movlw	247
  2910  149E  00B7               	movwf	??_LCD_Clear^(0+384)
  2911  149F                     u5997:	
  2912  149F  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2913  14A0  2C9F               	goto	u5997
  2914  14A1  0BB8               	decfsz	(??_LCD_Clear^(0+384)+1),f
  2915  14A2  2C9F               	goto	u5997
  2916                           
  2917                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2918  14A3  300C               	movlw	12
  2919  14A4  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2920                           
  2921                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2922  14A9  303D               	movlw	61
  2923  14AA  1683               	bsf	3,5	;RP0=1, select bank3
  2924  14AB  1703               	bsf	3,6	;RP1=1, select bank3
  2925  14AC  00B7               	movwf	??_LCD_Clear^(0+384)
  2926  14AD                     u6007:	
  2927  14AD  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2928  14AE  2CAD               	goto	u6007
  2929                           
  2930                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2931  14AF  3006               	movlw	6
  2932  14B0  160A  118A  230C  160A  118A  	fcall	_LCD_WriteCmd
  2933                           
  2934                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2935  14B5  303D               	movlw	61
  2936  14B6  1683               	bsf	3,5	;RP0=1, select bank3
  2937  14B7  1703               	bsf	3,6	;RP1=1, select bank3
  2938  14B8  00B7               	movwf	??_LCD_Clear^(0+384)
  2939  14B9                     u6017:	
  2940  14B9  0BB7               	decfsz	??_LCD_Clear^(0+384),f
  2941  14BA  2CB9               	goto	u6017
  2942  14BB  0008               	return
  2943  14BC                     __end_of_LCD_Clear:	
  2944                           
  2945                           	psect	text13
  2946  130C                     __ptext13:	
  2947 ;; *************** function _LCD_WriteCmd *****************
  2948 ;; Defined at:
  2949 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  Byte            1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  Byte            1    1[BANK3 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       1       0
  2965 ;;      Temps:          0       0       0       1       0
  2966 ;;      Totals:         0       0       0       2       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_LCD_Clear
  2974 ;;		_LCD_Init
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _LCD_WriteCmd
  2980  130C                     _LCD_WriteCmd:	
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _LCD_WriteCmd: [wreg]
  2984                           ;LCD_WriteCmd@Byte stored from wreg
  2985  130C  1683               	bsf	3,5	;RP0=1, select bank3
  2986  130D  1703               	bsf	3,6	;RP1=1, select bank3
  2987  130E  00B6               	movwf	LCD_WriteCmd@Byte^(0+384)
  2988                           
  2989                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  2990  130F  1283               	bcf	3,5	;RP0=0, select bank0
  2991  1310  1303               	bcf	3,6	;RP1=0, select bank0
  2992  1311  1009               	bcf	9,0	;volatile
  2993                           
  2994                           ;lcd.c: 36: PORTD = Byte;
  2995  1312  1683               	bsf	3,5	;RP0=1, select bank3
  2996  1313  1703               	bsf	3,6	;RP1=1, select bank3
  2997  1314  0836               	movf	LCD_WriteCmd@Byte^(0+384),w
  2998  1315  1283               	bcf	3,5	;RP0=0, select bank0
  2999  1316  1303               	bcf	3,6	;RP1=0, select bank0
  3000  1317  0088               	movwf	8	;volatile
  3001                           
  3002                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3003  1318  1489               	bsf	9,1	;volatile
  3004                           
  3005                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3006  1319  303D               	movlw	61
  3007  131A  1683               	bsf	3,5	;RP0=1, select bank3
  3008  131B  1703               	bsf	3,6	;RP1=1, select bank3
  3009  131C  00B5               	movwf	??_LCD_WriteCmd^(0+384)
  3010  131D                     u6027:	
  3011  131D  0BB5               	decfsz	??_LCD_WriteCmd^(0+384),f
  3012  131E  2B1D               	goto	u6027
  3013                           
  3014                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3015  131F  1283               	bcf	3,5	;RP0=0, select bank0
  3016  1320  1303               	bcf	3,6	;RP1=0, select bank0
  3017  1321  1089               	bcf	9,1	;volatile
  3018  1322  0008               	return
  3019  1323                     __end_of_LCD_WriteCmd:	
  3020                           
  3021                           	psect	text14
  3022  12E6                     __ptext14:	
  3023 ;; *************** function _ADC_Init *****************
  3024 ;; Defined at:
  3025 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		None
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _ADC_Init
  3055  12E6                     _ADC_Init:	
  3056                           
  3057                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _ADC_Init: []
  3061  12E6  1683               	bsf	3,5	;RP0=1, select bank1
  3062  12E7  1303               	bcf	3,6	;RP1=0, select bank1
  3063  12E8  179F               	bsf	31,7	;volatile
  3064                           
  3065                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3066  12E9  159F               	bsf	31,3	;volatile
  3067                           
  3068                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3069  12EA  151F               	bsf	31,2	;volatile
  3070                           
  3071                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3072  12EB  149F               	bsf	31,1	;volatile
  3073                           
  3074                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3075  12EC  101F               	bcf	31,0	;volatile
  3076                           
  3077                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3078  12ED  1283               	bcf	3,5	;RP0=0, select bank0
  3079  12EE  1303               	bcf	3,6	;RP1=0, select bank0
  3080  12EF  179F               	bsf	31,7	;volatile
  3081                           
  3082                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3083  12F0  131F               	bcf	31,6	;volatile
  3084                           
  3085                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3086  12F1  1683               	bsf	3,5	;RP0=1, select bank1
  3087  12F2  1303               	bcf	3,6	;RP1=0, select bank1
  3088  12F3  130C               	bcf	12,6	;volatile
  3089                           
  3090                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3091  12F4  1283               	bcf	3,5	;RP0=0, select bank0
  3092  12F5  1303               	bcf	3,6	;RP1=0, select bank0
  3093  12F6  130C               	bcf	12,6	;volatile
  3094  12F7  0008               	return
  3095  12F8                     __end_of_ADC_Init:	
  3096                           
  3097                           	psect	text15
  3098  0E76                     __ptext15:	
  3099 ;; *************** function _ISR *****************
  3100 ;; Defined at:
  3101 ;;		line 312 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  byte            1   74[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         0       1       0       0       0
  3117 ;;      Temps:          0       6       0       0       0
  3118 ;;      Totals:         0       7       0       0       0
  3119 ;;Total ram usage:        7 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    4
  3122 ;; This function calls:
  3123 ;;		_Fuzzy
  3124 ;;		_USART_ReceiveChar
  3125 ;;		_USART_WriteString
  3126 ;;		___lwdiv
  3127 ;;		___wmul
  3128 ;;		_enviabuffer
  3129 ;;		i1_PWM_DutyCycle2
  3130 ;;		i1_TIMER0_Set
  3131 ;; This function is called by:
  3132 ;;		Interrupt level 1
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _ISR
  3138  0E76                     _ISR:	
  3139                           
  3140                           ;main.c: 315: if (PIR1bits.RCIF)
  3141  0E76  1E8C               	btfss	12,5	;volatile
  3142  0E77  2F8C               	goto	i1l4111
  3143                           
  3144                           ;main.c: 316: {
  3145                           ;main.c: 318: unsigned char byte = USART_ReceiveChar();
  3146  0E78  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3147  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0E7F  00E4               	movwf	??_ISR
  3150  0E80  0864               	movf	??_ISR,w
  3151  0E81  00EA               	movwf	ISR@byte
  3152                           
  3153                           ;main.c: 319: if (byte == '#')
  3154  0E82  086A               	movf	ISR@byte,w
  3155  0E83  3A23               	xorlw	35
  3156  0E84  1D03               	skipz
  3157  0E85  2E8E               	goto	i1l4029
  3158                           
  3159                           ;main.c: 320: {
  3160                           ;main.c: 321: indicebuffer = 0;
  3161  0E86  01EB               	clrf	_indicebuffer
  3162  0E87  01EC               	clrf	_indicebuffer+1
  3163                           
  3164                           ;main.c: 322: lendo = 'S';
  3165  0E88  3053               	movlw	83
  3166  0E89  00E4               	movwf	??_ISR
  3167  0E8A  0864               	movf	??_ISR,w
  3168  0E8B  00EE               	movwf	_lendo
  3169                           
  3170                           ;main.c: 323: PORTBbits.RB0 = 1;
  3171  0E8C  1406               	bsf	6,0	;volatile
  3172                           
  3173                           ;main.c: 324: } else if(lendo == 'S'){
  3174  0E8D  2E98               	goto	i1l4033
  3175  0E8E                     i1l4029:	
  3176  0E8E  086E               	movf	_lendo,w
  3177  0E8F  3A53               	xorlw	83
  3178  0E90  1D03               	skipz
  3179  0E91  2E98               	goto	i1l4033
  3180                           
  3181                           ;main.c: 325: indicebuffer++;
  3182  0E92  3001               	movlw	1
  3183  0E93  07EB               	addwf	_indicebuffer,f
  3184  0E94  1803               	skipnc
  3185  0E95  0AEC               	incf	_indicebuffer+1,f
  3186  0E96  3000               	movlw	0
  3187  0E97  07EC               	addwf	_indicebuffer+1,f
  3188  0E98                     i1l4033:	
  3189                           
  3190                           ;main.c: 326: }
  3191                           ;main.c: 327: bufferRecebido[indicebuffer] = byte;
  3192  0E98  086A               	movf	ISR@byte,w
  3193  0E99  00E4               	movwf	??_ISR
  3194  0E9A  086B               	movf	_indicebuffer,w
  3195  0E9B  3E9D               	addlw	_bufferRecebido& (0+255)
  3196  0E9C  0084               	movwf	4
  3197  0E9D  0864               	movf	??_ISR,w
  3198  0E9E  1783               	bsf	3,7	;select IRP bank3
  3199  0E9F  0080               	movwf	0
  3200                           
  3201                           ;main.c: 329: if (indicebuffer >= 6 && lendo == 'S') {
  3202  0EA0  3000               	movlw	0
  3203  0EA1  026C               	subwf	_indicebuffer+1,w
  3204  0EA2  3006               	movlw	6
  3205  0EA3  1903               	skipnz
  3206  0EA4  026B               	subwf	_indicebuffer,w
  3207  0EA5  1C03               	skipc
  3208  0EA6  2EE6               	goto	i1l4055
  3209  0EA7  086E               	movf	_lendo,w
  3210  0EA8  3A53               	xorlw	83
  3211  0EA9  1D03               	skipz
  3212  0EAA  2EE6               	goto	i1l4055
  3213                           
  3214                           ;main.c: 330: indicebuffer = 0;
  3215  0EAB  01EB               	clrf	_indicebuffer
  3216  0EAC  01EC               	clrf	_indicebuffer+1
  3217                           
  3218                           ;main.c: 332: if (bufferRecebido[0] == '#' && bufferRecebido[1] == '$' && bufferRecebido
      +                          [2] == ':') {
  3219  0EAD  1683               	bsf	3,5	;RP0=1, select bank3
  3220  0EAE  1703               	bsf	3,6	;RP1=1, select bank3
  3221  0EAF  081D               	movf	_bufferRecebido^(0+384),w
  3222  0EB0  3A23               	xorlw	35
  3223  0EB1  1D03               	skipz
  3224  0EB2  2EE6               	goto	i1l4055
  3225  0EB3  081E               	movf	(_bufferRecebido^(0+384)+1),w
  3226  0EB4  3A24               	xorlw	36
  3227  0EB5  1D03               	skipz
  3228  0EB6  2EE6               	goto	i1l4055
  3229  0EB7  081F               	movf	(_bufferRecebido^(0+384)+2),w
  3230  0EB8  3A3A               	xorlw	58
  3231  0EB9  1D03               	skipz
  3232  0EBA  2EE6               	goto	i1l4055
  3233                           
  3234                           ;main.c: 334: antigoUI = 0;
  3235  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  3237  0EBD  01CD               	clrf	_antigoUI^(0+128)
  3238  0EBE  01CE               	clrf	(_antigoUI+1)^(0+128)
  3239                           
  3240                           ;main.c: 335: deltaV = 0;
  3241  0EBF  01D3               	clrf	_deltaV^(0+128)
  3242  0EC0  01D4               	clrf	(_deltaV+1)^(0+128)
  3243                           
  3244                           ;main.c: 336: PORTBbits.RB2 = 1;
  3245  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0EC3  1506               	bsf	6,2	;volatile
  3248                           
  3249                           ;main.c: 338: setpointUI = (bufferRecebido[3] << 8) + (bufferRecebido[4]);
  3250  0EC4  1683               	bsf	3,5	;RP0=1, select bank3
  3251  0EC5  1703               	bsf	3,6	;RP1=1, select bank3
  3252  0EC6  0820               	movf	(_bufferRecebido^(0+384)+3),w
  3253  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0EC9  00E4               	movwf	??_ISR
  3256  0ECA  01E5               	clrf	??_ISR+1
  3257  0ECB  0864               	movf	??_ISR,w
  3258  0ECC  00E5               	movwf	??_ISR+1
  3259  0ECD  01E4               	clrf	??_ISR
  3260  0ECE  1683               	bsf	3,5	;RP0=1, select bank3
  3261  0ECF  1703               	bsf	3,6	;RP1=1, select bank3
  3262  0ED0  0821               	movf	(_bufferRecebido^(0+384)+4),w
  3263  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0ED3  0764               	addwf	??_ISR,w
  3266  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  3268  0ED6  00D9               	movwf	_setpointUI^(0+128)
  3269  0ED7  3000               	movlw	0
  3270  0ED8  1803               	skipnc
  3271  0ED9  3001               	movlw	1
  3272  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0EDC  0765               	addwf	??_ISR+1,w
  3275  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  3276  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  3277  0EDF  00DA               	movwf	(_setpointUI+1)^(0+128)
  3278                           
  3279                           ;main.c: 339: deltaV = setpointUI;
  3280  0EE0  085A               	movf	(_setpointUI+1)^(0+128),w
  3281  0EE1  01D4               	clrf	(_deltaV+1)^(0+128)
  3282  0EE2  07D4               	addwf	(_deltaV+1)^(0+128),f
  3283  0EE3  0859               	movf	_setpointUI^(0+128),w
  3284  0EE4  01D3               	clrf	_deltaV^(0+128)
  3285  0EE5  07D3               	addwf	_deltaV^(0+128),f
  3286  0EE6                     i1l4055:	
  3287                           
  3288                           ;main.c: 349: }
  3289                           ;main.c: 350: }
  3290                           ;main.c: 353: if (USART_ReceiveChar() == '0' && lendo == 'N')
  3291  0EE6  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3292  0EEB  3A30               	xorlw	48
  3293  0EEC  1D03               	skipz
  3294  0EED  2F0A               	goto	i1l4067
  3295  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0EF0  086E               	movf	_lendo,w
  3298  0EF1  3A4E               	xorlw	78
  3299  0EF2  1D03               	skipz
  3300  0EF3  2F0A               	goto	i1l4067
  3301                           
  3302                           ;main.c: 354: {
  3303                           ;main.c: 355: USART_WriteString("\n\rfreio\n\r");
  3304  0EF4  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3305  0EF5  160A  118A  236D  120A  158A  	fcall	_USART_WriteString
  3306                           
  3307                           ;main.c: 357: PWM_DutyCycle2(0);
  3308  0EFA  3000               	movlw	0
  3309  0EFB  00F0               	movwf	i1PWM_DutyCycle2@valor
  3310  0EFC  3000               	movlw	0
  3311  0EFD  00F1               	movwf	i1PWM_DutyCycle2@valor+1
  3312  0EFE  160A  118A  2352  120A  158A  	fcall	i1_PWM_DutyCycle2
  3313                           
  3314                           ;main.c: 358: cruzeiroSet = 'N';
  3315  0F03  304E               	movlw	78
  3316  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0F06  00E4               	movwf	??_ISR
  3319  0F07  0864               	movf	??_ISR,w
  3320  0F08  00ED               	movwf	_cruzeiroSet
  3321                           
  3322                           ;main.c: 359: return;
  3323  0F09  2FF5               	goto	i1l201
  3324  0F0A                     i1l4067:	
  3325                           
  3326                           ;main.c: 360: }
  3327                           ;main.c: 364: if(USART_ReceiveChar() == 'S' || cruzeiroSet == 'S' && lendo == 'N')
  3328  0F0A  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3329  0F0F  3A53               	xorlw	83
  3330  0F10  1903               	skipnz
  3331  0F11  2F4F               	goto	i1l4093
  3332  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0F14  086D               	movf	_cruzeiroSet,w
  3335  0F15  3A53               	xorlw	83
  3336  0F16  1D03               	skipz
  3337  0F17  2F1C               	goto	i1l4077
  3338  0F18  086E               	movf	_lendo,w
  3339  0F19  3A4E               	xorlw	78
  3340  0F1A  1903               	btfsc	3,2
  3341  0F1B  2F4F               	goto	i1l4093
  3342  0F1C                     i1l4077:	
  3343                           ;main.c: 369: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'S' && lendo == 'N')
  3344                           
  3345                           ;main.c: 368: cruzeiroSet = 'S';
  3346                           
  3347                           ;main.c: 367: cruzeiroVel = setpointUI;
  3348                           
  3349                           ;main.c: 365: {
  3350                           ;main.c: 366: setpointUI = antigoUI;
  3351                           
  3352  0F1C  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3353  0F21  3A52               	xorlw	82
  3354  0F22  1D03               	skipz
  3355  0F23  2F3D               	goto	i1l4087
  3356  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0F26  086D               	movf	_cruzeiroSet,w
  3359  0F27  3A53               	xorlw	83
  3360  0F28  1D03               	skipz
  3361  0F29  2F3D               	goto	i1l4087
  3362  0F2A  086E               	movf	_lendo,w
  3363  0F2B  3A4E               	xorlw	78
  3364  0F2C  1D03               	skipz
  3365  0F2D  2F3D               	goto	i1l4087
  3366                           
  3367                           ;main.c: 370: {
  3368                           ;main.c: 371: setpointUI += 150;
  3369  0F2E  3096               	movlw	150
  3370  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  3371  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  3372  0F31  07D9               	addwf	_setpointUI^(0+128),f
  3373  0F32  1803               	skipnc
  3374  0F33  0ADA               	incf	(_setpointUI+1)^(0+128),f
  3375  0F34  3000               	movlw	0
  3376  0F35  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3377                           
  3378                           ;main.c: 372: cruzeiroVel = setpointUI;
  3379  0F36  085A               	movf	(_setpointUI+1)^(0+128),w
  3380  0F37  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3381  0F38  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3382  0F39  0859               	movf	_setpointUI^(0+128),w
  3383  0F3A  01D1               	clrf	_cruzeiroVel^(0+128)
  3384  0F3B  07D1               	addwf	_cruzeiroVel^(0+128),f
  3385                           
  3386                           ;main.c: 373: }else if(USART_ReceiveChar() == 'R' && cruzeiroSet == 'N' && lendo == 'N')
  3387  0F3C  2F63               	goto	i1l4097
  3388  0F3D                     i1l4087:	
  3389  0F3D  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3390  0F42  3A52               	xorlw	82
  3391  0F43  1D03               	skipz
  3392  0F44  2F63               	goto	i1l4097
  3393  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0F47  086D               	movf	_cruzeiroSet,w
  3396  0F48  3A4E               	xorlw	78
  3397  0F49  1D03               	skipz
  3398  0F4A  2F63               	goto	i1l4097
  3399  0F4B  086E               	movf	_lendo,w
  3400  0F4C  3A4E               	xorlw	78
  3401  0F4D  1D03               	skipz
  3402  0F4E  2F63               	goto	i1l4097
  3403  0F4F                     i1l4093:	
  3404                           
  3405                           ;main.c: 374: {
  3406                           ;main.c: 375: setpointUI = antigoUI;
  3407  0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0F50  1303               	bcf	3,6	;RP1=0, select bank1
  3409  0F51  084E               	movf	(_antigoUI+1)^(0+128),w
  3410  0F52  01DA               	clrf	(_setpointUI+1)^(0+128)
  3411  0F53  07DA               	addwf	(_setpointUI+1)^(0+128),f
  3412  0F54  084D               	movf	_antigoUI^(0+128),w
  3413  0F55  01D9               	clrf	_setpointUI^(0+128)
  3414  0F56  07D9               	addwf	_setpointUI^(0+128),f
  3415                           
  3416                           ;main.c: 376: cruzeiroVel = setpointUI;
  3417  0F57  085A               	movf	(_setpointUI+1)^(0+128),w
  3418  0F58  01D2               	clrf	(_cruzeiroVel+1)^(0+128)
  3419  0F59  07D2               	addwf	(_cruzeiroVel+1)^(0+128),f
  3420  0F5A  0859               	movf	_setpointUI^(0+128),w
  3421  0F5B  01D1               	clrf	_cruzeiroVel^(0+128)
  3422  0F5C  07D1               	addwf	_cruzeiroVel^(0+128),f
  3423                           
  3424                           ;main.c: 377: cruzeiroSet = 'S';
  3425  0F5D  3053               	movlw	83
  3426  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0F60  00E4               	movwf	??_ISR
  3429  0F61  0864               	movf	??_ISR,w
  3430  0F62  00ED               	movwf	_cruzeiroSet
  3431  0F63                     i1l4097:	
  3432                           
  3433                           ;main.c: 378: }
  3434                           ;main.c: 381: if (lendo == 'N')
  3435  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0F65  086E               	movf	_lendo,w
  3438  0F66  3A4E               	xorlw	78
  3439  0F67  1D03               	skipz
  3440  0F68  2F76               	goto	i1l4103
  3441                           
  3442                           ;main.c: 382: {
  3443                           ;main.c: 383: Fuzzy();
  3444  0F69  120A  158A  209F  120A  158A  	fcall	_Fuzzy
  3445                           
  3446                           ;main.c: 384: antigoUI = setpointUI;
  3447  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  3449  0F70  085A               	movf	(_setpointUI+1)^(0+128),w
  3450  0F71  01CE               	clrf	(_antigoUI+1)^(0+128)
  3451  0F72  07CE               	addwf	(_antigoUI+1)^(0+128),f
  3452  0F73  0859               	movf	_setpointUI^(0+128),w
  3453  0F74  01CD               	clrf	_antigoUI^(0+128)
  3454  0F75  07CD               	addwf	_antigoUI^(0+128),f
  3455  0F76                     i1l4103:	
  3456                           
  3457                           ;main.c: 385: }
  3458                           ;main.c: 388: if(USART_ReceiveChar() == 'X' && lendo == 'N')
  3459  0F76  160A  118A  233A  120A  158A  	fcall	_USART_ReceiveChar
  3460  0F7B  3A58               	xorlw	88
  3461  0F7C  1D03               	skipz
  3462  0F7D  2F89               	goto	i1l4109
  3463  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0F80  086E               	movf	_lendo,w
  3466  0F81  3A4E               	xorlw	78
  3467  0F82  1D03               	skipz
  3468  0F83  2F89               	goto	i1l4109
  3469                           
  3470                           ;main.c: 389: {
  3471                           ;main.c: 390: enviabuffer();
  3472  0F84  160A  118A  2677  120A  158A  	fcall	_enviabuffer
  3473  0F89                     i1l4109:	
  3474                           
  3475                           ;main.c: 391: }
  3476                           ;main.c: 393: PIR1bits.RCIF = 0;
  3477  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0F8B  128C               	bcf	12,5	;volatile
  3480  0F8C                     i1l4111:	
  3481                           
  3482                           ;main.c: 394: }
  3483                           ;main.c: 397: if (PIR1bits.ADIF)
  3484  0F8C  1B0C               	btfsc	12,6	;volatile
  3485                           
  3486                           ;main.c: 398: {
  3487                           ;main.c: 402: PIR1bits.ADIF = 0;
  3488  0F8D  130C               	bcf	12,6	;volatile
  3489                           
  3490                           ;main.c: 403: }
  3491                           ;main.c: 407: if (INTCONbits.T0IF)
  3492  0F8E  1D0B               	btfss	11,2	;volatile
  3493  0F8F  2FF1               	goto	i1l4137
  3494                           
  3495                           ;main.c: 408: {
  3496                           ;main.c: 410: TIMER0_Set(238);
  3497  0F90  30EE               	movlw	238
  3498  0F91  160A  118A  22B3  120A  158A  	fcall	i1_TIMER0_Set
  3499                           
  3500                           ;main.c: 413: if (contagens_tm0 < 499)
  3501  0F96  3001               	movlw	1
  3502  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  3504  0F99  0250               	subwf	(_contagens_tm0+1)^(0+128),w
  3505  0F9A  30F3               	movlw	243
  3506  0F9B  1903               	skipnz
  3507  0F9C  024F               	subwf	_contagens_tm0^(0+128),w
  3508  0F9D  1803               	skipnc
  3509  0F9E  2FA9               	goto	i1l4123
  3510                           
  3511                           ;main.c: 414: {
  3512                           ;main.c: 416: contagens_tm0++;
  3513  0F9F  3001               	movlw	1
  3514  0FA0  07CF               	addwf	_contagens_tm0^(0+128),f
  3515  0FA1  1803               	skipnc
  3516  0FA2  0AD0               	incf	(_contagens_tm0+1)^(0+128),f
  3517  0FA3  3000               	movlw	0
  3518  0FA4  07D0               	addwf	(_contagens_tm0+1)^(0+128),f
  3519                           
  3520                           ;main.c: 419: PORTBbits.RB6 = 1;
  3521  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0FA7  1706               	bsf	6,6	;volatile
  3524                           
  3525                           ;main.c: 420: }
  3526  0FA8  2FF0               	goto	i1l4135
  3527  0FA9                     i1l4123:	
  3528                           
  3529                           ;main.c: 421: else
  3530                           ;main.c: 422: {
  3531                           ;main.c: 424: contagens_tm0 = 0;
  3532  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0FAB  01CF               	clrf	_contagens_tm0^(0+128)
  3535  0FAC  01D0               	clrf	(_contagens_tm0+1)^(0+128)
  3536                           
  3537                           ;main.c: 427: pulsos = (TMR1H << 8) + TMR1L;
  3538  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0FAF  080F               	movf	15,w	;volatile
  3541  0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3543  0FB2  01D6               	clrf	(_pulsos+1)^(0+128)
  3544  0FB3  07D6               	addwf	(_pulsos+1)^(0+128),f
  3545  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0FB6  080E               	movf	14,w	;volatile
  3548  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  3550  0FB9  01D5               	clrf	_pulsos^(0+128)
  3551  0FBA  07D5               	addwf	_pulsos^(0+128),f
  3552                           
  3553                           ;main.c: 428: rpm = ((pulsos / pas_cooler) * 120);
  3554  0FBB  0860               	movf	(_pas_cooler+1)^(0+128),w
  3555  0FBC  01F1               	clrf	___lwdiv@divisor+1
  3556  0FBD  07F1               	addwf	___lwdiv@divisor+1,f
  3557  0FBE  085F               	movf	_pas_cooler^(0+128),w
  3558  0FBF  01F0               	clrf	___lwdiv@divisor
  3559  0FC0  07F0               	addwf	___lwdiv@divisor,f
  3560  0FC1  0856               	movf	(_pulsos+1)^(0+128),w
  3561  0FC2  01F3               	clrf	___lwdiv@dividend+1
  3562  0FC3  07F3               	addwf	___lwdiv@dividend+1,f
  3563  0FC4  0855               	movf	_pulsos^(0+128),w
  3564  0FC5  01F2               	clrf	___lwdiv@dividend
  3565  0FC6  07F2               	addwf	___lwdiv@dividend,f
  3566  0FC7  160A  118A  24BC  120A  158A  	fcall	___lwdiv
  3567  0FCC  0871               	movf	?___lwdiv+1,w
  3568  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0FCF  01BB               	clrf	___wmul@multiplier+1
  3571  0FD0  07BB               	addwf	___wmul@multiplier+1,f
  3572  0FD1  0870               	movf	?___lwdiv,w
  3573  0FD2  01BA               	clrf	___wmul@multiplier
  3574  0FD3  07BA               	addwf	___wmul@multiplier,f
  3575  0FD4  3078               	movlw	120
  3576  0FD5  00BC               	movwf	___wmul@multiplicand
  3577  0FD6  3000               	movlw	0
  3578  0FD7  00BD               	movwf	___wmul@multiplicand+1
  3579  0FD8  160A  118A  246E  120A  158A  	fcall	___wmul
  3580  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0FDF  083B               	movf	?___wmul+1,w
  3583  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  3584  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  3585  0FE2  01D8               	clrf	(_rpm+1)^(0+128)
  3586  0FE3  07D8               	addwf	(_rpm+1)^(0+128),f
  3587  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0FE6  083A               	movf	?___wmul,w
  3590  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3592  0FE9  01D7               	clrf	_rpm^(0+128)
  3593  0FEA  07D7               	addwf	_rpm^(0+128),f
  3594                           
  3595                           ;main.c: 435: TMR1L = 0x00;
  3596  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0FED  018E               	clrf	14	;volatile
  3599                           
  3600                           ;main.c: 436: TMR1H = 0x00;
  3601  0FEE  018F               	clrf	15	;volatile
  3602                           
  3603                           ;main.c: 439: PORTBbits.RB6 = 0;
  3604  0FEF  1306               	bcf	6,6	;volatile
  3605  0FF0                     i1l4135:	
  3606                           
  3607                           ;main.c: 440: }
  3608                           ;main.c: 443: INTCONbits.T0IF = 0;
  3609  0FF0  110B               	bcf	11,2	;volatile
  3610  0FF1                     i1l4137:	
  3611                           
  3612                           ;main.c: 444: }
  3613                           ;main.c: 447: if (PIR1bits.TMR1IF)
  3614  0FF1  180C               	btfsc	12,0	;volatile
  3615                           
  3616                           ;main.c: 448: {
  3617                           ;main.c: 452: PIR1bits.TMR1IF = 0;
  3618  0FF2  100C               	bcf	12,0	;volatile
  3619                           
  3620                           ;main.c: 453: }
  3621                           ;main.c: 456: if (PIR1bits.SSPIF)
  3622  0FF3  198C               	btfsc	12,3	;volatile
  3623                           
  3624                           ;main.c: 457: {
  3625                           ;main.c: 461: PIR1bits.SSPIF = 0;
  3626  0FF4  118C               	bcf	12,3	;volatile
  3627  0FF5                     i1l201:	
  3628  0FF5  0869               	movf	??_ISR+5,w
  3629  0FF6  00FF               	movwf	127
  3630  0FF7  0868               	movf	??_ISR+4,w
  3631  0FF8  008A               	movwf	10
  3632  0FF9  0867               	movf	??_ISR+3,w
  3633  0FFA  0084               	movwf	4
  3634  0FFB  0E66               	swapf	(??_ISR+2)^0,w
  3635  0FFC  0083               	movwf	3
  3636  0FFD  0EFE               	swapf	126,f
  3637  0FFE  0E7E               	swapf	126,w
  3638  0FFF  0009               	retfie
  3639  1000                     __end_of_ISR:	
  3640                           
  3641                           	psect	intentry
  3642  0004                     __pintentry:	
  3643                           ;incstack = 0
  3644                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3645                           
  3646  0004                     interrupt_function:	
  3647  007E                     saved_w	set	btemp
  3648  0004  00FE               	movwf	btemp
  3649  0005  0E03               	swapf	3,w
  3650  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0008  00E6               	movwf	??_ISR+2
  3653  0009  0804               	movf	4,w
  3654  000A  00E7               	movwf	??_ISR+3
  3655  000B  080A               	movf	10,w
  3656  000C  00E8               	movwf	??_ISR+4
  3657  000D  087F               	movf	btemp+1,w
  3658  000E  00E9               	movwf	??_ISR+5
  3659  000F  120A  158A  2E76   	ljmp	_ISR
  3660                           
  3661                           	psect	text16
  3662  12B3                     __ptext16:	
  3663 ;; *************** function i1_TIMER0_Set *****************
  3664 ;; Defined at:
  3665 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  contagens       1    wreg     unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  contagens       1    0[COMMON] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3679 ;;      Params:         0       0       0       0       0
  3680 ;;      Locals:         1       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0
  3682 ;;      Totals:         1       0       0       0       0
  3683 ;;Total ram usage:        1 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_ISR
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function i1_TIMER0_Set
  3694  12B3                     i1_TIMER0_Set:	
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in i1_TIMER0_Set: [wreg]
  3698                           ;i1TIMER0_Set@contagens stored from wreg
  3699  12B3  00F0               	movwf	i1TIMER0_Set@contagens
  3700                           
  3701                           ;timers.c: 22: TMR0 = contagens;
  3702  12B4  0870               	movf	i1TIMER0_Set@contagens,w
  3703  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  3704  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  3705  12B7  0081               	movwf	1	;volatile
  3706  12B8  0008               	return
  3707  12B9                     __end_ofi1_TIMER0_Set:	
  3708                           
  3709                           	psect	text17
  3710  1677                     __ptext17:	
  3711 ;; *************** function _enviabuffer *****************
  3712 ;; Defined at:
  3713 ;;		line 122 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  index           1    3[COMMON] unsigned char 
  3718 ;;  checksum        1    2[COMMON] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         2       0       0       0       0
  3730 ;;      Temps:          1       0       0       0       0
  3731 ;;      Totals:         3       0       0       0       0
  3732 ;;Total ram usage:        3 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    1
  3735 ;; This function calls:
  3736 ;;		_USART_WriteChar
  3737 ;; This function is called by:
  3738 ;;		_ISR
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           
  3743                           ;psect for function _enviabuffer
  3744  1677                     _enviabuffer:	
  3745                           
  3746                           ;main.c: 125: buffer[0] = '#';
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _enviabuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3750  1677  3023               	movlw	35
  3751  1678  00F1               	movwf	??_enviabuffer
  3752  1679  0871               	movf	??_enviabuffer,w
  3753  167A  1683               	bsf	3,5	;RP0=1, select bank3
  3754  167B  1703               	bsf	3,6	;RP1=1, select bank3
  3755  167C  0090               	movwf	_buffer^(0+384)
  3756                           
  3757                           ;main.c: 126: buffer[1] = '$';
  3758  167D  3024               	movlw	36
  3759  167E  00F1               	movwf	??_enviabuffer
  3760  167F  0871               	movf	??_enviabuffer,w
  3761  1680  0091               	movwf	(_buffer^(0+384)+1)
  3762                           
  3763                           ;main.c: 127: buffer[2] = ':';
  3764  1681  303A               	movlw	58
  3765  1682  00F1               	movwf	??_enviabuffer
  3766  1683  0871               	movf	??_enviabuffer,w
  3767  1684  0092               	movwf	(_buffer^(0+384)+2)
  3768                           
  3769                           ;main.c: 131: buffer[3] = (rpm >> 8) & 0xFF;
  3770  1685  1683               	bsf	3,5	;RP0=1, select bank1
  3771  1686  1303               	bcf	3,6	;RP1=0, select bank1
  3772  1687  0858               	movf	(_rpm+1)^(0+128),w
  3773  1688  00F1               	movwf	??_enviabuffer
  3774  1689  0871               	movf	??_enviabuffer,w
  3775  168A  1683               	bsf	3,5	;RP0=1, select bank3
  3776  168B  1703               	bsf	3,6	;RP1=1, select bank3
  3777  168C  0093               	movwf	(_buffer^(0+384)+3)
  3778                           
  3779                           ;main.c: 132: buffer[4] = rpm & 0xFF;
  3780  168D  1683               	bsf	3,5	;RP0=1, select bank1
  3781  168E  1303               	bcf	3,6	;RP1=0, select bank1
  3782  168F  0857               	movf	_rpm^(0+128),w
  3783  1690  00F1               	movwf	??_enviabuffer
  3784  1691  0871               	movf	??_enviabuffer,w
  3785  1692  1683               	bsf	3,5	;RP0=1, select bank3
  3786  1693  1703               	bsf	3,6	;RP1=1, select bank3
  3787  1694  0094               	movwf	(_buffer^(0+384)+4)
  3788                           
  3789                           ;main.c: 133: buffer[5] = 'V';
  3790  1695  3056               	movlw	86
  3791  1696  00F1               	movwf	??_enviabuffer
  3792  1697  0871               	movf	??_enviabuffer,w
  3793  1698  0095               	movwf	(_buffer^(0+384)+5)
  3794                           
  3795                           ;main.c: 136: buffer[6] = (setpointUI >> 8) & 0xFF;
  3796  1699  1683               	bsf	3,5	;RP0=1, select bank1
  3797  169A  1303               	bcf	3,6	;RP1=0, select bank1
  3798  169B  085A               	movf	(_setpointUI+1)^(0+128),w
  3799  169C  00F1               	movwf	??_enviabuffer
  3800  169D  0871               	movf	??_enviabuffer,w
  3801  169E  1683               	bsf	3,5	;RP0=1, select bank3
  3802  169F  1703               	bsf	3,6	;RP1=1, select bank3
  3803  16A0  0096               	movwf	(_buffer^(0+384)+6)
  3804                           
  3805                           ;main.c: 137: buffer[7] = setpointUI & 0xFF;
  3806  16A1  1683               	bsf	3,5	;RP0=1, select bank1
  3807  16A2  1303               	bcf	3,6	;RP1=0, select bank1
  3808  16A3  0859               	movf	_setpointUI^(0+128),w
  3809  16A4  00F1               	movwf	??_enviabuffer
  3810  16A5  0871               	movf	??_enviabuffer,w
  3811  16A6  1683               	bsf	3,5	;RP0=1, select bank3
  3812  16A7  1703               	bsf	3,6	;RP1=1, select bank3
  3813  16A8  0097               	movwf	(_buffer^(0+384)+7)
  3814                           
  3815                           ;main.c: 138: buffer[8] = 'S';
  3816  16A9  3053               	movlw	83
  3817  16AA  00F1               	movwf	??_enviabuffer
  3818  16AB  0871               	movf	??_enviabuffer,w
  3819  16AC  0098               	movwf	(_buffer^(0+384)+8)
  3820                           
  3821                           ;main.c: 141: buffer[9] = (deltaV >> 8) & 0xFF;
  3822  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  3823  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  3824  16AF  0854               	movf	(_deltaV+1)^(0+128),w
  3825  16B0  00F1               	movwf	??_enviabuffer
  3826  16B1  0871               	movf	??_enviabuffer,w
  3827  16B2  1683               	bsf	3,5	;RP0=1, select bank3
  3828  16B3  1703               	bsf	3,6	;RP1=1, select bank3
  3829  16B4  0099               	movwf	(_buffer^(0+384)+9)
  3830                           
  3831                           ;main.c: 142: buffer[10] = deltaV & 0xFF;
  3832  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  3833  16B6  1303               	bcf	3,6	;RP1=0, select bank1
  3834  16B7  0853               	movf	_deltaV^(0+128),w
  3835  16B8  00F1               	movwf	??_enviabuffer
  3836  16B9  0871               	movf	??_enviabuffer,w
  3837  16BA  1683               	bsf	3,5	;RP0=1, select bank3
  3838  16BB  1703               	bsf	3,6	;RP1=1, select bank3
  3839  16BC  009A               	movwf	(_buffer^(0+384)+10)
  3840                           
  3841                           ;main.c: 143: buffer[11] = 'S';
  3842  16BD  3053               	movlw	83
  3843  16BE  00F1               	movwf	??_enviabuffer
  3844  16BF  0871               	movf	??_enviabuffer,w
  3845  16C0  009B               	movwf	(_buffer^(0+384)+11)
  3846                           
  3847                           ;main.c: 145: unsigned char checksum = 0x00;
  3848  16C1  01F2               	clrf	enviabuffer@checksum
  3849                           
  3850                           ;main.c: 146: for (unsigned char index = 0; index < 12; index++)
  3851  16C2  01F3               	clrf	enviabuffer@index
  3852  16C3  300C               	movlw	12
  3853  16C4  0273               	subwf	enviabuffer@index,w
  3854  16C5  1803               	btfsc	3,0
  3855  16C6  2EE1               	goto	i1l2549
  3856  16C7                     i1l2541:	
  3857                           
  3858                           ;main.c: 147: {
  3859                           ;main.c: 148: USART_WriteChar(buffer[index]);
  3860  16C7  0873               	movf	enviabuffer@index,w
  3861  16C8  3E90               	addlw	_buffer& (0+255)
  3862  16C9  0084               	movwf	4
  3863  16CA  1783               	bsf	3,7	;select IRP bank3
  3864  16CB  0800               	movf	0,w
  3865  16CC  160A  118A  22B9  160A  118A  	fcall	_USART_WriteChar
  3866                           
  3867                           ;main.c: 149: checksum ^= buffer[index];
  3868  16D1  0873               	movf	enviabuffer@index,w
  3869  16D2  3E90               	addlw	_buffer& (0+255)
  3870  16D3  0084               	movwf	4
  3871  16D4  1783               	bsf	3,7	;select IRP bank3
  3872  16D5  0800               	movf	0,w
  3873  16D6  00F1               	movwf	??_enviabuffer
  3874  16D7  0871               	movf	??_enviabuffer,w
  3875  16D8  06F2               	xorwf	enviabuffer@checksum,f
  3876  16D9  3001               	movlw	1
  3877  16DA  00F1               	movwf	??_enviabuffer
  3878  16DB  0871               	movf	??_enviabuffer,w
  3879  16DC  07F3               	addwf	enviabuffer@index,f
  3880  16DD  300C               	movlw	12
  3881  16DE  0273               	subwf	enviabuffer@index,w
  3882  16DF  1C03               	skipc
  3883  16E0  2EC7               	goto	i1l2541
  3884  16E1                     i1l2549:	
  3885                           
  3886                           ;main.c: 150: }
  3887                           ;main.c: 151: buffer[12] = checksum;
  3888  16E1  0872               	movf	enviabuffer@checksum,w
  3889  16E2  00F1               	movwf	??_enviabuffer
  3890  16E3  0871               	movf	??_enviabuffer,w
  3891  16E4  1683               	bsf	3,5	;RP0=1, select bank3
  3892  16E5  1703               	bsf	3,6	;RP1=1, select bank3
  3893  16E6  009C               	movwf	(_buffer^(0+384)+12)
  3894                           
  3895                           ;main.c: 152: USART_WriteChar(buffer[12]);
  3896  16E7  081C               	movf	(_buffer^(0+384)+12),w
  3897  16E8  160A  118A  22B9   	fcall	_USART_WriteChar
  3898  16EB  0008               	return
  3899  16EC                     __end_of_enviabuffer:	
  3900                           
  3901                           	psect	text18
  3902  14BC                     __ptext18:	
  3903 ;; *************** function ___lwdiv *****************
  3904 ;; Defined at:
  3905 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  divisor         2    0[COMMON] unsigned int 
  3908 ;;  dividend        2    2[COMMON] unsigned int 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  quotient        2    5[COMMON] unsigned int 
  3911 ;;  counter         1    7[COMMON] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2    0[COMMON] unsigned int 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         4       0       0       0       0
  3922 ;;      Locals:         3       0       0       0       0
  3923 ;;      Temps:          1       0       0       0       0
  3924 ;;      Totals:         8       0       0       0       0
  3925 ;;Total ram usage:        8 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_ISR
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function ___lwdiv
  3936  14BC                     ___lwdiv:	
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3940  14BC  01F5               	clrf	___lwdiv@quotient
  3941  14BD  01F6               	clrf	___lwdiv@quotient+1
  3942  14BE  0871               	movf	___lwdiv@divisor+1,w
  3943  14BF  0470               	iorwf	___lwdiv@divisor,w
  3944  14C0  1903               	skipnz
  3945  14C1  2CF3               	goto	i1l2881
  3946  14C2  01F7               	clrf	___lwdiv@counter
  3947  14C3  0AF7               	incf	___lwdiv@counter,f
  3948  14C4                     i1l2869:	
  3949  14C4  1BF1               	btfsc	___lwdiv@divisor+1,7
  3950  14C5  2CD2               	goto	i1l2871
  3951  14C6  3001               	movlw	1
  3952  14C7                     u339_25:	
  3953  14C7  1003               	clrc
  3954  14C8  0DF0               	rlf	___lwdiv@divisor,f
  3955  14C9  0DF1               	rlf	___lwdiv@divisor+1,f
  3956  14CA  3EFF               	addlw	-1
  3957  14CB  1D03               	skipz
  3958  14CC  2CC7               	goto	u339_25
  3959  14CD  3001               	movlw	1
  3960  14CE  00F4               	movwf	??___lwdiv
  3961  14CF  0874               	movf	??___lwdiv,w
  3962  14D0  07F7               	addwf	___lwdiv@counter,f
  3963  14D1  2CC4               	goto	i1l2869
  3964  14D2                     i1l2871:	
  3965  14D2  3001               	movlw	1
  3966  14D3                     u341_25:	
  3967  14D3  1003               	clrc
  3968  14D4  0DF5               	rlf	___lwdiv@quotient,f
  3969  14D5  0DF6               	rlf	___lwdiv@quotient+1,f
  3970  14D6  3EFF               	addlw	-1
  3971  14D7  1D03               	skipz
  3972  14D8  2CD3               	goto	u341_25
  3973  14D9  0871               	movf	___lwdiv@divisor+1,w
  3974  14DA  0273               	subwf	___lwdiv@dividend+1,w
  3975  14DB  1D03               	skipz
  3976  14DC  2CDF               	goto	u342_25
  3977  14DD  0870               	movf	___lwdiv@divisor,w
  3978  14DE  0272               	subwf	___lwdiv@dividend,w
  3979  14DF                     u342_25:	
  3980  14DF  1C03               	skipc
  3981  14E0  2CE8               	goto	i1l2877
  3982  14E1  0870               	movf	___lwdiv@divisor,w
  3983  14E2  02F2               	subwf	___lwdiv@dividend,f
  3984  14E3  0871               	movf	___lwdiv@divisor+1,w
  3985  14E4  1C03               	skipc
  3986  14E5  03F3               	decf	___lwdiv@dividend+1,f
  3987  14E6  02F3               	subwf	___lwdiv@dividend+1,f
  3988  14E7  1475               	bsf	___lwdiv@quotient,0
  3989  14E8                     i1l2877:	
  3990  14E8  3001               	movlw	1
  3991  14E9                     u343_25:	
  3992  14E9  1003               	clrc
  3993  14EA  0CF1               	rrf	___lwdiv@divisor+1,f
  3994  14EB  0CF0               	rrf	___lwdiv@divisor,f
  3995  14EC  3EFF               	addlw	-1
  3996  14ED  1D03               	skipz
  3997  14EE  2CE9               	goto	u343_25
  3998  14EF  3001               	movlw	1
  3999  14F0  02F7               	subwf	___lwdiv@counter,f
  4000  14F1  1D03               	btfss	3,2
  4001  14F2  2CD2               	goto	i1l2871
  4002  14F3                     i1l2881:	
  4003  14F3  0876               	movf	___lwdiv@quotient+1,w
  4004  14F4  01F1               	clrf	?___lwdiv+1
  4005  14F5  07F1               	addwf	?___lwdiv+1,f
  4006  14F6  0875               	movf	___lwdiv@quotient,w
  4007  14F7  01F0               	clrf	?___lwdiv
  4008  14F8  07F0               	addwf	?___lwdiv,f
  4009  14F9  0008               	return
  4010  14FA                     __end_of___lwdiv:	
  4011                           
  4012                           	psect	text19
  4013  133A                     __ptext19:	
  4014 ;; *************** function _USART_ReceiveChar *****************
  4015 ;; Defined at:
  4016 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  byte            1    4[COMMON] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      unsigned char 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0
  4032 ;;      Temps:          1       0       0       0       0
  4033 ;;      Totals:         2       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    2
  4037 ;; This function calls:
  4038 ;;		_USART_WriteString
  4039 ;; This function is called by:
  4040 ;;		_ISR
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function _USART_ReceiveChar
  4046  133A                     _USART_ReceiveChar:	
  4047                           
  4048                           ;usart.c: 65: unsigned char byte;
  4049                           ;usart.c: 67: if (!OERR)
  4050                           
  4051                           ;incstack = 0
  4052                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4053  133A  1283               	bcf	3,5	;RP0=0, select bank0
  4054  133B  1303               	bcf	3,6	;RP1=0, select bank0
  4055  133C  1898               	btfsc	24,1	;volatile
  4056  133D  2B43               	goto	i1l2711
  4057                           
  4058                           ;usart.c: 68: {
  4059                           ;usart.c: 69: byte = RCREG;
  4060  133E  081A               	movf	26,w	;volatile
  4061  133F  00F3               	movwf	??_USART_ReceiveChar
  4062  1340  0873               	movf	??_USART_ReceiveChar,w
  4063  1341  00F4               	movwf	USART_ReceiveChar@byte
  4064  1342  2B4F               	goto	i1l2719
  4065  1343                     i1l2711:	
  4066                           ;usart.c: 71: }
  4067                           
  4068                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4069                           
  4070                           
  4071                           ;usart.c: 72: else
  4072                           ;usart.c: 73: {
  4073                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4074  1343  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4075  1344  160A  118A  236D   	fcall	_USART_WriteString
  4076                           
  4077                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4078  1347  1283               	bcf	3,5	;RP0=0, select bank0
  4079  1348  1303               	bcf	3,6	;RP1=0, select bank0
  4080  1349  1218               	bcf	24,4	;volatile
  4081                           
  4082                           ;usart.c: 77: byte = RCREG;
  4083  134A  081A               	movf	26,w	;volatile
  4084  134B  00F3               	movwf	??_USART_ReceiveChar
  4085  134C  0873               	movf	??_USART_ReceiveChar,w
  4086  134D  00F4               	movwf	USART_ReceiveChar@byte
  4087                           
  4088                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4089  134E  1618               	bsf	24,4	;volatile
  4090  134F                     i1l2719:	
  4091                           
  4092                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4093  134F  128C               	bcf	12,5	;volatile
  4094                           
  4095                           ;usart.c: 80: }
  4096                           ;usart.c: 82: return(byte);
  4097  1350  0874               	movf	USART_ReceiveChar@byte,w
  4098  1351  0008               	return
  4099  1352                     __end_of_USART_ReceiveChar:	
  4100                           
  4101                           	psect	text20
  4102  136D                     __ptext20:	
  4103 ;; *************** function _USART_WriteString *****************
  4104 ;; Defined at:
  4105 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  str             1    wreg     PTR const unsigned char 
  4108 ;;		 -> STR_4(40), STR_1(10), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  str             1    2[COMMON] PTR const unsigned char 
  4111 ;;		 -> STR_4(40), STR_1(10), 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;		None               void
  4114 ;; Registers used:
  4115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         0       0       0       0       0
  4122 ;;      Locals:         1       0       0       0       0
  4123 ;;      Temps:          1       0       0       0       0
  4124 ;;      Totals:         2       0       0       0       0
  4125 ;;Total ram usage:        2 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    1
  4128 ;; This function calls:
  4129 ;;		_USART_WriteChar
  4130 ;; This function is called by:
  4131 ;;		_ISR
  4132 ;;		_USART_ReceiveChar
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function _USART_WriteString
  4138  136D                     _USART_WriteString:	
  4139                           
  4140                           ;incstack = 0
  4141                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4142                           ;USART_WriteString@str stored from wreg
  4143  136D  00F2               	movwf	USART_WriteString@str
  4144  136E                     i1l2337:	
  4145                           ;usart.c: 54: while(*str != '\0')
  4146                           
  4147  136E  0872               	movf	USART_WriteString@str,w
  4148  136F  0084               	movwf	4
  4149  1370  160A  118A  2000  160A  118A  	fcall	stringdir
  4150  1375  3800               	iorlw	0
  4151  1376  1903               	btfsc	3,2
  4152  1377  0008               	return
  4153                           
  4154                           ;usart.c: 55: {
  4155                           ;usart.c: 56: USART_WriteChar(*str);
  4156  1378  0872               	movf	USART_WriteString@str,w
  4157  1379  0084               	movwf	4
  4158  137A  160A  118A  2000  160A  118A  	fcall	stringdir
  4159  137F  160A  118A  22B9  160A  118A  	fcall	_USART_WriteChar
  4160                           
  4161                           ;usart.c: 57: str++;
  4162  1384  3001               	movlw	1
  4163  1385  00F1               	movwf	??_USART_WriteString
  4164  1386  0871               	movf	??_USART_WriteString,w
  4165  1387  07F2               	addwf	USART_WriteString@str,f
  4166  1388  2B6E               	goto	i1l2337
  4167  1389                     __end_of_USART_WriteString:	
  4168                           
  4169                           	psect	text21
  4170  12B9                     __ptext21:	
  4171 ;; *************** function _USART_WriteChar *****************
  4172 ;; Defined at:
  4173 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  byte            1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  byte            1    0[COMMON] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;		None               void
  4180 ;; Registers used:
  4181 ;;		wreg
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       0       0       0       0
  4188 ;;      Locals:         1       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0
  4190 ;;      Totals:         1       0       0       0       0
  4191 ;;Total ram usage:        1 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_enviabuffer
  4197 ;;		_USART_WriteString
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _USART_WriteChar
  4203  12B9                     _USART_WriteChar:	
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _USART_WriteChar: [wreg]
  4207                           ;USART_WriteChar@byte stored from wreg
  4208  12B9  00F0               	movwf	USART_WriteChar@byte
  4209  12BA                     i1l244:	
  4210                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4211                           
  4212  12BA  1283               	bcf	3,5	;RP0=0, select bank0
  4213  12BB  1303               	bcf	3,6	;RP1=0, select bank0
  4214  12BC  1E0C               	btfss	12,4	;volatile
  4215  12BD  2ABA               	goto	i1l244
  4216                           
  4217                           ;usart.c: 47: TXREG = byte;
  4218  12BE  0870               	movf	USART_WriteChar@byte,w
  4219  12BF  0099               	movwf	25	;volatile
  4220  12C0  0008               	return
  4221  12C1                     __end_of_USART_WriteChar:	
  4222                           
  4223                           	psect	text22
  4224  089F                     __ptext22:	
  4225 ;; *************** function _Fuzzy *****************
  4226 ;; Defined at:
  4227 ;;		line 177 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  a               2   16[BANK1 ] int 
  4232 ;;  a               2   14[BANK1 ] int 
  4233 ;;  a               2   12[BANK1 ] int 
  4234 ;;  a               2   10[BANK1 ] int 
  4235 ;;  a               2   26[BANK1 ] int 
  4236 ;;  x               3   31[BANK1 ] float 
  4237 ;;  rule            3   28[BANK1 ] float 
  4238 ;;  total_area      3   23[BANK1 ] float 
  4239 ;;  soma            3   20[BANK1 ] float 
  4240 ;;  reajuste        3    5[BANK1 ] float 
  4241 ;;  delta           2   18[BANK1 ] int 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;		None               void
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         0       0      34       0       0
  4253 ;;      Temps:          0       2       0       0       0
  4254 ;;      Totals:         0       2      34       0       0
  4255 ;;Total ram usage:       36 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    3
  4258 ;; This function calls:
  4259 ;;		___awtoft
  4260 ;;		___ftadd
  4261 ;;		___ftdiv
  4262 ;;		___ftge
  4263 ;;		___ftmul
  4264 ;;		___ftneg
  4265 ;;		___fttol
  4266 ;;		___lwtoft
  4267 ;;		___wmul
  4268 ;;		_abs
  4269 ;;		_maximo
  4270 ;;		_minimo
  4271 ;;		_trapmf
  4272 ;;		i1_PWM_DutyCycle2
  4273 ;; This function is called by:
  4274 ;;		_ISR
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _Fuzzy
  4280  089F                     _Fuzzy:	
  4281                           
  4282                           ;main.c: 187: deltaV = minimo(abs(setpointUI - rpm), 2000);
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4286  089F  3000               	movlw	0
  4287  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  4288  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  4289  08A2  00A3               	movwf	minimo@b
  4290  08A3  30FA               	movlw	250
  4291  08A4  00A4               	movwf	minimo@b+1
  4292  08A5  3044               	movlw	68
  4293  08A6  00A5               	movwf	minimo@b+2
  4294  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  4295  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  4296  08A9  0957               	comf	_rpm^(0+128),w
  4297  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  4298  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  4299  08AC  00E2               	movwf	??_Fuzzy
  4300  08AD  1683               	bsf	3,5	;RP0=1, select bank1
  4301  08AE  1303               	bcf	3,6	;RP1=0, select bank1
  4302  08AF  0958               	comf	(_rpm+1)^(0+128),w
  4303  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  4304  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  4305  08B2  00E3               	movwf	??_Fuzzy+1
  4306  08B3  0AE2               	incf	??_Fuzzy,f
  4307  08B4  1903               	skipnz
  4308  08B5  0AE3               	incf	??_Fuzzy+1,f
  4309  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  4310  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  4311  08B8  0859               	movf	_setpointUI^(0+128),w
  4312  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  4313  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  4314  08BB  0762               	addwf	??_Fuzzy,w
  4315  08BC  00F0               	movwf	abs@a
  4316  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  4317  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  4318  08BF  085A               	movf	(_setpointUI+1)^(0+128),w
  4319  08C0  1803               	skipnc
  4320  08C1  0A5A               	incf	(_setpointUI+1)^(0+128),w
  4321  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  4322  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  4323  08C4  0763               	addwf	??_Fuzzy+1,w
  4324  08C5  00F1               	movwf	abs@a+1
  4325  08C6  120A  158A  2002  120A  158A  	fcall	_abs
  4326  08CB  0871               	movf	?_abs+1,w
  4327  08CC  01F9               	clrf	___awtoft@c+1
  4328  08CD  07F9               	addwf	___awtoft@c+1,f
  4329  08CE  0870               	movf	?_abs,w
  4330  08CF  01F8               	clrf	___awtoft@c
  4331  08D0  07F8               	addwf	___awtoft@c,f
  4332  08D1  160A  118A  23E7  120A  158A  	fcall	___awtoft
  4333  08D6  0878               	movf	?___awtoft,w
  4334  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4335  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4336  08D9  00A0               	movwf	minimo@a
  4337  08DA  0879               	movf	?___awtoft+1,w
  4338  08DB  00A1               	movwf	minimo@a+1
  4339  08DC  087A               	movf	?___awtoft+2,w
  4340  08DD  00A2               	movwf	minimo@a+2
  4341  08DE  120A  118A  27E2  120A  158A  	fcall	_minimo
  4342  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  4343  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  4344  08E5  0820               	movf	?_minimo,w
  4345  08E6  00AC               	movwf	___fttol@f1
  4346  08E7  0821               	movf	?_minimo+1,w
  4347  08E8  00AD               	movwf	___fttol@f1+1
  4348  08E9  0822               	movf	?_minimo+2,w
  4349  08EA  00AE               	movwf	___fttol@f1+2
  4350  08EB  160A  118A  2772  120A  158A  	fcall	___fttol
  4351  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  4352  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  4353  08F2  082D               	movf	?___fttol+1,w
  4354  08F3  1683               	bsf	3,5	;RP0=1, select bank1
  4355  08F4  1303               	bcf	3,6	;RP1=0, select bank1
  4356  08F5  01D4               	clrf	(_deltaV+1)^(0+128)
  4357  08F6  07D4               	addwf	(_deltaV+1)^(0+128),f
  4358  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  4359  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  4360  08F9  082C               	movf	?___fttol,w
  4361  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  4362  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  4363  08FC  01D3               	clrf	_deltaV^(0+128)
  4364  08FD  07D3               	addwf	_deltaV^(0+128),f
  4365                           
  4366                           ;main.c: 188: int delta = maximo(minimo(abs(deltaV - antigoUI), 1000), 1);
  4367  08FE  3000               	movlw	0
  4368  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0900  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0901  00A9               	movwf	maximo@b
  4371  0902  3080               	movlw	128
  4372  0903  00AA               	movwf	maximo@b+1
  4373  0904  303F               	movlw	63
  4374  0905  00AB               	movwf	maximo@b+2
  4375  0906  3000               	movlw	0
  4376  0907  00A3               	movwf	minimo@b
  4377  0908  307A               	movlw	122
  4378  0909  00A4               	movwf	minimo@b+1
  4379  090A  3044               	movlw	68
  4380  090B  00A5               	movwf	minimo@b+2
  4381  090C  1683               	bsf	3,5	;RP0=1, select bank1
  4382  090D  1303               	bcf	3,6	;RP1=0, select bank1
  4383  090E  094D               	comf	_antigoUI^(0+128),w
  4384  090F  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0910  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0911  00E2               	movwf	??_Fuzzy
  4387  0912  1683               	bsf	3,5	;RP0=1, select bank1
  4388  0913  1303               	bcf	3,6	;RP1=0, select bank1
  4389  0914  094E               	comf	(_antigoUI+1)^(0+128),w
  4390  0915  1283               	bcf	3,5	;RP0=0, select bank0
  4391  0916  1303               	bcf	3,6	;RP1=0, select bank0
  4392  0917  00E3               	movwf	??_Fuzzy+1
  4393  0918  0AE2               	incf	??_Fuzzy,f
  4394  0919  1903               	skipnz
  4395  091A  0AE3               	incf	??_Fuzzy+1,f
  4396  091B  1683               	bsf	3,5	;RP0=1, select bank1
  4397  091C  1303               	bcf	3,6	;RP1=0, select bank1
  4398  091D  0853               	movf	_deltaV^(0+128),w
  4399  091E  1283               	bcf	3,5	;RP0=0, select bank0
  4400  091F  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0920  0762               	addwf	??_Fuzzy,w
  4402  0921  00F0               	movwf	abs@a
  4403  0922  1683               	bsf	3,5	;RP0=1, select bank1
  4404  0923  1303               	bcf	3,6	;RP1=0, select bank1
  4405  0924  0854               	movf	(_deltaV+1)^(0+128),w
  4406  0925  1803               	skipnc
  4407  0926  0A54               	incf	(_deltaV+1)^(0+128),w
  4408  0927  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0928  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0929  0763               	addwf	??_Fuzzy+1,w
  4411  092A  00F1               	movwf	abs@a+1
  4412  092B  120A  158A  2002   	fcall	_abs
  4413  092E  0871               	movf	?_abs+1,w
  4414  092F  160A  118A  2EEC   	ljmp	L11
  4415                           
  4416                           	psect	text23
  4417  1352                     __ptext23:	
  4418 ;; *************** function i1_PWM_DutyCycle2 *****************
  4419 ;; Defined at:
  4420 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  valor           2    0[COMMON] int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;		None               void
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4434 ;;      Params:         2       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0
  4436 ;;      Temps:          2       0       0       0       0
  4437 ;;      Totals:         4       0       0       0       0
  4438 ;;Total ram usage:        4 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_Fuzzy
  4444 ;;		_ISR
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function i1_PWM_DutyCycle2
  4450  1352                     i1_PWM_DutyCycle2:	
  4451                           
  4452                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4456  1352  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4457  1353  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4458  1354  0870               	movf	i1PWM_DutyCycle2@valor,w
  4459  1355  00F2               	movwf	??i1_PWM_DutyCycle2
  4460  1356  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4461  1357  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4462  1358  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4463  1359  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4464  135A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4465  135B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4466  135C  0872               	movf	??i1_PWM_DutyCycle2,w
  4467  135D  1283               	bcf	3,5	;RP0=0, select bank0
  4468  135E  1303               	bcf	3,6	;RP1=0, select bank0
  4469  135F  009B               	movwf	27	;volatile
  4470                           
  4471                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4472  1360  0870               	movf	i1PWM_DutyCycle2@valor,w
  4473  1361  00F2               	movwf	??i1_PWM_DutyCycle2
  4474  1362  3003               	movlw	3
  4475  1363                     u297_25:	
  4476  1363  1003               	clrc
  4477  1364  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4478  1365  3EFF               	addlw	-1
  4479  1366  1D03               	skipz
  4480  1367  2B63               	goto	u297_25
  4481  1368  1003               	clrc
  4482  1369  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4483  136A  380C               	iorlw	12
  4484  136B  009D               	movwf	29	;volatile
  4485  136C  0008               	return
  4486  136D                     __end_ofi1_PWM_DutyCycle2:	
  4487                           
  4488                           	psect	text24
  4489  0D20                     __ptext24:	
  4490 ;; *************** function _trapmf *****************
  4491 ;; Defined at:
  4492 ;;		line 88 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  x               3   32[BANK0 ] float 
  4495 ;;  a               3   35[BANK0 ] float 
  4496 ;;  b               3   38[BANK0 ] float 
  4497 ;;  c               3   41[BANK0 ] float 
  4498 ;;  d               3   44[BANK0 ] float 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  ua              3   47[BANK0 ] float 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  3   32[BANK0 ] float 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, pclath, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0      15       0       0       0
  4511 ;;      Locals:         0       3       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         0      18       0       0       0
  4514 ;;Total ram usage:       18 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    2
  4517 ;; This function calls:
  4518 ;;		___ftadd
  4519 ;;		___ftdiv
  4520 ;;		___ftge
  4521 ;;		___ftneg
  4522 ;; This function is called by:
  4523 ;;		_Fuzzy
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _trapmf
  4529  0D20                     _trapmf:	
  4530                           
  4531                           ;main.c: 90: float ua = 0;
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4535  0D20  3000               	movlw	0
  4536  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0D23  00CF               	movwf	trapmf@ua
  4539  0D24  3000               	movlw	0
  4540  0D25  00D0               	movwf	trapmf@ua+1
  4541  0D26  3000               	movlw	0
  4542  0D27  00D1               	movwf	trapmf@ua+2
  4543                           
  4544                           ;main.c: 92: if (x <= a)
  4545  0D28  0843               	movf	trapmf@a,w
  4546  0D29  00F0               	movwf	___ftge@ff1
  4547  0D2A  0844               	movf	trapmf@a+1,w
  4548  0D2B  00F1               	movwf	___ftge@ff1+1
  4549  0D2C  0845               	movf	trapmf@a+2,w
  4550  0D2D  00F2               	movwf	___ftge@ff1+2
  4551  0D2E  0840               	movf	trapmf@x,w
  4552  0D2F  00F3               	movwf	___ftge@ff2
  4553  0D30  0841               	movf	trapmf@x+1,w
  4554  0D31  00F4               	movwf	___ftge@ff2+1
  4555  0D32  0842               	movf	trapmf@x+2,w
  4556  0D33  00F5               	movwf	___ftge@ff2+2
  4557  0D34  160A  118A  2545  120A  158A  	fcall	___ftge
  4558  0D39  1803               	btfsc	3,0
  4559  0D3A  2E65               	goto	L7
  4560                           
  4561                           ;main.c: 94: else if ((a < x) && (x <= b))
  4562                           
  4563                           ;main.c: 93: ua = 0;
  4564  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0D3D  0843               	movf	trapmf@a,w
  4567  0D3E  00F0               	movwf	___ftge@ff1
  4568  0D3F  0844               	movf	trapmf@a+1,w
  4569  0D40  00F1               	movwf	___ftge@ff1+1
  4570  0D41  0845               	movf	trapmf@a+2,w
  4571  0D42  00F2               	movwf	___ftge@ff1+2
  4572  0D43  0840               	movf	trapmf@x,w
  4573  0D44  00F3               	movwf	___ftge@ff2
  4574  0D45  0841               	movf	trapmf@x+1,w
  4575  0D46  00F4               	movwf	___ftge@ff2+1
  4576  0D47  0842               	movf	trapmf@x+2,w
  4577  0D48  00F5               	movwf	___ftge@ff2+2
  4578  0D49  160A  118A  2545  120A  158A  	fcall	___ftge
  4579  0D4E  1803               	btfsc	3,0
  4580  0D4F  2D99               	goto	i1l3827
  4581  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0D52  0846               	movf	trapmf@b,w
  4584  0D53  00F0               	movwf	___ftge@ff1
  4585  0D54  0847               	movf	trapmf@b+1,w
  4586  0D55  00F1               	movwf	___ftge@ff1+1
  4587  0D56  0848               	movf	trapmf@b+2,w
  4588  0D57  00F2               	movwf	___ftge@ff1+2
  4589  0D58  0840               	movf	trapmf@x,w
  4590  0D59  00F3               	movwf	___ftge@ff2
  4591  0D5A  0841               	movf	trapmf@x+1,w
  4592  0D5B  00F4               	movwf	___ftge@ff2+1
  4593  0D5C  0842               	movf	trapmf@x+2,w
  4594  0D5D  00F5               	movwf	___ftge@ff2+2
  4595  0D5E  160A  118A  2545  120A  158A  	fcall	___ftge
  4596  0D63  1C03               	btfss	3,0
  4597  0D64  2D99               	goto	i1l3827
  4598                           
  4599                           ;main.c: 95: ua = ((x - a) / (b - a));
  4600  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0D67  0846               	movf	trapmf@b,w
  4603  0D68  00A3               	movwf	___ftadd@f1
  4604  0D69  0847               	movf	trapmf@b+1,w
  4605  0D6A  00A4               	movwf	___ftadd@f1+1
  4606  0D6B  0848               	movf	trapmf@b+2,w
  4607  0D6C  00A5               	movwf	___ftadd@f1+2
  4608  0D6D  0843               	movf	trapmf@a,w
  4609  0D6E  00A0               	movwf	___ftneg@f1
  4610  0D6F  0844               	movf	trapmf@a+1,w
  4611  0D70  00A1               	movwf	___ftneg@f1+1
  4612  0D71  0845               	movf	trapmf@a+2,w
  4613  0D72  00A2               	movwf	___ftneg@f1+2
  4614  0D73  160A  118A  22D1  120A  158A  	fcall	___ftneg
  4615  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  4616  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0D7A  0820               	movf	?___ftneg,w
  4618  0D7B  00A6               	movwf	___ftadd@f2
  4619  0D7C  0821               	movf	?___ftneg+1,w
  4620  0D7D  00A7               	movwf	___ftadd@f2+1
  4621  0D7E  0822               	movf	?___ftneg+2,w
  4622  0D7F  00A8               	movwf	___ftadd@f2+2
  4623  0D80  120A  158A  2417  120A  158A  	fcall	___ftadd
  4624  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0D87  0823               	movf	?___ftadd,w
  4627  0D88  00B0               	movwf	___ftdiv@f2
  4628  0D89  0824               	movf	?___ftadd+1,w
  4629  0D8A  00B1               	movwf	___ftdiv@f2+1
  4630  0D8B  0825               	movf	?___ftadd+2,w
  4631  0D8C  00B2               	movwf	___ftdiv@f2+2
  4632  0D8D  0840               	movf	trapmf@x,w
  4633  0D8E  00A3               	movwf	___ftadd@f1
  4634  0D8F  0841               	movf	trapmf@x+1,w
  4635  0D90  00A4               	movwf	___ftadd@f1+1
  4636  0D91  0842               	movf	trapmf@x+2,w
  4637  0D92  00A5               	movwf	___ftadd@f1+2
  4638  0D93  0843               	movf	trapmf@a,w
  4639  0D94  00A0               	movwf	___ftneg@f1
  4640  0D95  0844               	movf	trapmf@a+1,w
  4641  0D96  00A1               	movwf	___ftneg@f1+1
  4642  0D97  0845               	movf	trapmf@a+2,w
  4643  0D98  2E28               	goto	L9
  4644  0D99                     i1l3827:	
  4645                           
  4646                           ;main.c: 96: else if ((b <= x) && (x <= c))
  4647  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0D9B  0840               	movf	trapmf@x,w
  4650  0D9C  00F0               	movwf	___ftge@ff1
  4651  0D9D  0841               	movf	trapmf@x+1,w
  4652  0D9E  00F1               	movwf	___ftge@ff1+1
  4653  0D9F  0842               	movf	trapmf@x+2,w
  4654  0DA0  00F2               	movwf	___ftge@ff1+2
  4655  0DA1  0846               	movf	trapmf@b,w
  4656  0DA2  00F3               	movwf	___ftge@ff2
  4657  0DA3  0847               	movf	trapmf@b+1,w
  4658  0DA4  00F4               	movwf	___ftge@ff2+1
  4659  0DA5  0848               	movf	trapmf@b+2,w
  4660  0DA6  00F5               	movwf	___ftge@ff2+2
  4661  0DA7  160A  118A  2545  120A  158A  	fcall	___ftge
  4662  0DAC  1C03               	btfss	3,0
  4663  0DAD  2DCB               	goto	i1l3833
  4664  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  4665  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  4666  0DB0  0849               	movf	trapmf@c,w
  4667  0DB1  00F0               	movwf	___ftge@ff1
  4668  0DB2  084A               	movf	trapmf@c+1,w
  4669  0DB3  00F1               	movwf	___ftge@ff1+1
  4670  0DB4  084B               	movf	trapmf@c+2,w
  4671  0DB5  00F2               	movwf	___ftge@ff1+2
  4672  0DB6  0840               	movf	trapmf@x,w
  4673  0DB7  00F3               	movwf	___ftge@ff2
  4674  0DB8  0841               	movf	trapmf@x+1,w
  4675  0DB9  00F4               	movwf	___ftge@ff2+1
  4676  0DBA  0842               	movf	trapmf@x+2,w
  4677  0DBB  00F5               	movwf	___ftge@ff2+2
  4678  0DBC  160A  118A  2545  120A  158A  	fcall	___ftge
  4679  0DC1  1C03               	btfss	3,0
  4680  0DC2  2DCB               	goto	i1l3833
  4681                           
  4682                           ;main.c: 97: ua = 1;
  4683  0DC3  3000               	movlw	0
  4684  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0DC6  00CF               	movwf	trapmf@ua
  4687  0DC7  3080               	movlw	128
  4688  0DC8  00D0               	movwf	trapmf@ua+1
  4689  0DC9  303F               	movlw	63
  4690  0DCA  2E6C               	goto	L6
  4691  0DCB                     i1l3833:	
  4692                           
  4693                           ;main.c: 98: else if ((c < x) && (x <= d))
  4694  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0DCD  0849               	movf	trapmf@c,w
  4697  0DCE  00F0               	movwf	___ftge@ff1
  4698  0DCF  084A               	movf	trapmf@c+1,w
  4699  0DD0  00F1               	movwf	___ftge@ff1+1
  4700  0DD1  084B               	movf	trapmf@c+2,w
  4701  0DD2  00F2               	movwf	___ftge@ff1+2
  4702  0DD3  0840               	movf	trapmf@x,w
  4703  0DD4  00F3               	movwf	___ftge@ff2
  4704  0DD5  0841               	movf	trapmf@x+1,w
  4705  0DD6  00F4               	movwf	___ftge@ff2+1
  4706  0DD7  0842               	movf	trapmf@x+2,w
  4707  0DD8  00F5               	movwf	___ftge@ff2+2
  4708  0DD9  160A  118A  2545  120A  158A  	fcall	___ftge
  4709  0DDE  1803               	btfsc	3,0
  4710  0DDF  2E50               	goto	i1l3839
  4711  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  4712  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  4713  0DE2  084C               	movf	trapmf@d,w
  4714  0DE3  00F0               	movwf	___ftge@ff1
  4715  0DE4  084D               	movf	trapmf@d+1,w
  4716  0DE5  00F1               	movwf	___ftge@ff1+1
  4717  0DE6  084E               	movf	trapmf@d+2,w
  4718  0DE7  00F2               	movwf	___ftge@ff1+2
  4719  0DE8  0840               	movf	trapmf@x,w
  4720  0DE9  00F3               	movwf	___ftge@ff2
  4721  0DEA  0841               	movf	trapmf@x+1,w
  4722  0DEB  00F4               	movwf	___ftge@ff2+1
  4723  0DEC  0842               	movf	trapmf@x+2,w
  4724  0DED  00F5               	movwf	___ftge@ff2+2
  4725  0DEE  160A  118A  2545  120A  158A  	fcall	___ftge
  4726  0DF3  1C03               	btfss	3,0
  4727  0DF4  2E50               	goto	i1l3839
  4728                           
  4729                           ;main.c: 99: ua = ((d - x) / (d - c));
  4730  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4732  0DF7  084C               	movf	trapmf@d,w
  4733  0DF8  00A3               	movwf	___ftadd@f1
  4734  0DF9  084D               	movf	trapmf@d+1,w
  4735  0DFA  00A4               	movwf	___ftadd@f1+1
  4736  0DFB  084E               	movf	trapmf@d+2,w
  4737  0DFC  00A5               	movwf	___ftadd@f1+2
  4738  0DFD  0849               	movf	trapmf@c,w
  4739  0DFE  00A0               	movwf	___ftneg@f1
  4740  0DFF  084A               	movf	trapmf@c+1,w
  4741  0E00  00A1               	movwf	___ftneg@f1+1
  4742  0E01  084B               	movf	trapmf@c+2,w
  4743  0E02  00A2               	movwf	___ftneg@f1+2
  4744  0E03  160A  118A  22D1  120A  158A  	fcall	___ftneg
  4745  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0E0A  0820               	movf	?___ftneg,w
  4748  0E0B  00A6               	movwf	___ftadd@f2
  4749  0E0C  0821               	movf	?___ftneg+1,w
  4750  0E0D  00A7               	movwf	___ftadd@f2+1
  4751  0E0E  0822               	movf	?___ftneg+2,w
  4752  0E0F  00A8               	movwf	___ftadd@f2+2
  4753  0E10  120A  158A  2417  120A  158A  	fcall	___ftadd
  4754  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0E17  0823               	movf	?___ftadd,w
  4757  0E18  00B0               	movwf	___ftdiv@f2
  4758  0E19  0824               	movf	?___ftadd+1,w
  4759  0E1A  00B1               	movwf	___ftdiv@f2+1
  4760  0E1B  0825               	movf	?___ftadd+2,w
  4761  0E1C  00B2               	movwf	___ftdiv@f2+2
  4762  0E1D  084C               	movf	trapmf@d,w
  4763  0E1E  00A3               	movwf	___ftadd@f1
  4764  0E1F  084D               	movf	trapmf@d+1,w
  4765  0E20  00A4               	movwf	___ftadd@f1+1
  4766  0E21  084E               	movf	trapmf@d+2,w
  4767  0E22  00A5               	movwf	___ftadd@f1+2
  4768  0E23  0840               	movf	trapmf@x,w
  4769  0E24  00A0               	movwf	___ftneg@f1
  4770  0E25  0841               	movf	trapmf@x+1,w
  4771  0E26  00A1               	movwf	___ftneg@f1+1
  4772  0E27  0842               	movf	trapmf@x+2,w
  4773  0E28                     L9:	
  4774  0E28  00A2               	movwf	___ftneg@f1+2
  4775  0E29  160A  118A  22D1  120A  158A  	fcall	___ftneg
  4776  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0E30  0820               	movf	?___ftneg,w
  4779  0E31  00A6               	movwf	___ftadd@f2
  4780  0E32  0821               	movf	?___ftneg+1,w
  4781  0E33  00A7               	movwf	___ftadd@f2+1
  4782  0E34  0822               	movf	?___ftneg+2,w
  4783  0E35  00A8               	movwf	___ftadd@f2+2
  4784  0E36  120A  158A  2417  120A  158A  	fcall	___ftadd
  4785  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4786  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4787  0E3D  0823               	movf	?___ftadd,w
  4788  0E3E  00B3               	movwf	___ftdiv@f1
  4789  0E3F  0824               	movf	?___ftadd+1,w
  4790  0E40  00B4               	movwf	___ftdiv@f1+1
  4791  0E41  0825               	movf	?___ftadd+2,w
  4792  0E42  00B5               	movwf	___ftdiv@f1+2
  4793  0E43  120A  158A  228C  120A  158A  	fcall	___ftdiv
  4794  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0E4A  0830               	movf	?___ftdiv,w
  4797  0E4B  00CF               	movwf	trapmf@ua
  4798  0E4C  0831               	movf	?___ftdiv+1,w
  4799  0E4D  00D0               	movwf	trapmf@ua+1
  4800  0E4E  0832               	movf	?___ftdiv+2,w
  4801  0E4F  2E6C               	goto	L6
  4802  0E50                     i1l3839:	
  4803                           
  4804                           ;main.c: 100: else if (x > d)
  4805  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0E52  084C               	movf	trapmf@d,w
  4808  0E53  00F0               	movwf	___ftge@ff1
  4809  0E54  084D               	movf	trapmf@d+1,w
  4810  0E55  00F1               	movwf	___ftge@ff1+1
  4811  0E56  084E               	movf	trapmf@d+2,w
  4812  0E57  00F2               	movwf	___ftge@ff1+2
  4813  0E58  0840               	movf	trapmf@x,w
  4814  0E59  00F3               	movwf	___ftge@ff2
  4815  0E5A  0841               	movf	trapmf@x+1,w
  4816  0E5B  00F4               	movwf	___ftge@ff2+1
  4817  0E5C  0842               	movf	trapmf@x+2,w
  4818  0E5D  00F5               	movwf	___ftge@ff2+2
  4819  0E5E  160A  118A  2545  120A  158A  	fcall	___ftge
  4820  0E63  1803               	btfsc	3,0
  4821  0E64  2E6D               	goto	i1l130
  4822  0E65                     L7:	
  4823                           
  4824                           ;main.c: 101: ua = 0;
  4825  0E65  3000               	movlw	0
  4826  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0E68  00CF               	movwf	trapmf@ua
  4829  0E69  3000               	movlw	0
  4830  0E6A  00D0               	movwf	trapmf@ua+1
  4831  0E6B  3000               	movlw	0
  4832  0E6C                     L6:	
  4833  0E6C  00D1               	movwf	trapmf@ua+2
  4834  0E6D                     i1l130:	
  4835                           
  4836                           ;main.c: 103: return(ua);
  4837  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0E6F  084F               	movf	trapmf@ua,w
  4840  0E70  00C0               	movwf	?_trapmf
  4841  0E71  0850               	movf	trapmf@ua+1,w
  4842  0E72  00C1               	movwf	?_trapmf+1
  4843  0E73  0851               	movf	trapmf@ua+2,w
  4844  0E74  00C2               	movwf	?_trapmf+2
  4845  0E75  0008               	return
  4846  0E76                     __end_of_trapmf:	
  4847                           
  4848                           	psect	text25
  4849  12D1                     __ptext25:	
  4850 ;; *************** function ___ftneg *****************
  4851 ;; Defined at:
  4852 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  f1              3    0[BANK0 ] float 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  3    0[BANK0 ] float 
  4859 ;; Registers used:
  4860 ;;		wreg
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4866 ;;      Params:         0       3       0       0       0
  4867 ;;      Locals:         0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0
  4869 ;;      Totals:         0       3       0       0       0
  4870 ;;Total ram usage:        3 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_trapmf
  4876 ;;		_Fuzzy
  4877 ;;		_trimf
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function ___ftneg
  4883  12D1                     ___ftneg:	
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in ___ftneg: [wreg]
  4887  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  4888  12D2  1303               	bcf	3,6	;RP1=0, select bank0
  4889  12D3  0822               	movf	___ftneg@f1+2,w
  4890  12D4  0421               	iorwf	___ftneg@f1+1,w
  4891  12D5  0420               	iorwf	___ftneg@f1,w
  4892  12D6  1903               	skipnz
  4893  12D7  0008               	return
  4894  12D8  3080               	movlw	128
  4895  12D9  06A2               	xorwf	___ftneg@f1+2,f
  4896  12DA  0008               	return
  4897  12DB                     __end_of___ftneg:	
  4898                           
  4899                           	psect	text26
  4900  0A8C                     __ptext26:	
  4901 ;; *************** function ___ftdiv *****************
  4902 ;; Defined at:
  4903 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  f2              3   16[BANK0 ] float 
  4906 ;;  f1              3   19[BANK0 ] float 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  f3              3   27[BANK0 ] float 
  4909 ;;  sign            1   31[BANK0 ] unsigned char 
  4910 ;;  exp             1   30[BANK0 ] unsigned char 
  4911 ;;  cntr            1   26[BANK0 ] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  3   16[BANK0 ] float 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       6       0       0       0
  4922 ;;      Locals:         0       6       0       0       0
  4923 ;;      Temps:          0       4       0       0       0
  4924 ;;      Totals:         0      16       0       0       0
  4925 ;;Total ram usage:       16 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    1
  4928 ;; This function calls:
  4929 ;;		___ftpack
  4930 ;; This function is called by:
  4931 ;;		_trapmf
  4932 ;;		_Fuzzy
  4933 ;;		_trimf
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function ___ftdiv
  4939  0A8C                     ___ftdiv:	
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4943  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0A8E  0833               	movf	___ftdiv@f1,w
  4946  0A8F  00B6               	movwf	??___ftdiv
  4947  0A90  0834               	movf	___ftdiv@f1+1,w
  4948  0A91  00B7               	movwf	??___ftdiv+1
  4949  0A92  0835               	movf	___ftdiv@f1+2,w
  4950  0A93  00B8               	movwf	??___ftdiv+2
  4951  0A94  1003               	clrc
  4952  0A95  0D37               	rlf	??___ftdiv+1,w
  4953  0A96  0D38               	rlf	??___ftdiv+2,w
  4954  0A97  00B9               	movwf	??___ftdiv+3
  4955  0A98  0839               	movf	??___ftdiv+3,w
  4956  0A99  00BE               	movwf	___ftdiv@exp
  4957  0A9A  08BE               	movf	___ftdiv@exp,f
  4958  0A9B  1D03               	skipz
  4959  0A9C  2AA4               	goto	i1l2215
  4960  0A9D  3000               	movlw	0
  4961  0A9E  00B0               	movwf	?___ftdiv
  4962  0A9F  3000               	movlw	0
  4963  0AA0  00B1               	movwf	?___ftdiv+1
  4964  0AA1  3000               	movlw	0
  4965  0AA2  00B2               	movwf	?___ftdiv+2
  4966  0AA3  0008               	return
  4967  0AA4                     i1l2215:	
  4968  0AA4  0830               	movf	___ftdiv@f2,w
  4969  0AA5  00B6               	movwf	??___ftdiv
  4970  0AA6  0831               	movf	___ftdiv@f2+1,w
  4971  0AA7  00B7               	movwf	??___ftdiv+1
  4972  0AA8  0832               	movf	___ftdiv@f2+2,w
  4973  0AA9  00B8               	movwf	??___ftdiv+2
  4974  0AAA  1003               	clrc
  4975  0AAB  0D37               	rlf	??___ftdiv+1,w
  4976  0AAC  0D38               	rlf	??___ftdiv+2,w
  4977  0AAD  00B9               	movwf	??___ftdiv+3
  4978  0AAE  0839               	movf	??___ftdiv+3,w
  4979  0AAF  00BF               	movwf	___ftdiv@sign
  4980  0AB0  08BF               	movf	___ftdiv@sign,f
  4981  0AB1  1D03               	skipz
  4982  0AB2  2ABA               	goto	i1l2221
  4983  0AB3  3000               	movlw	0
  4984  0AB4  00B0               	movwf	?___ftdiv
  4985  0AB5  3000               	movlw	0
  4986  0AB6  00B1               	movwf	?___ftdiv+1
  4987  0AB7  3000               	movlw	0
  4988  0AB8  00B2               	movwf	?___ftdiv+2
  4989  0AB9  0008               	return
  4990  0ABA                     i1l2221:	
  4991  0ABA  3000               	movlw	0
  4992  0ABB  00BB               	movwf	___ftdiv@f3
  4993  0ABC  3000               	movlw	0
  4994  0ABD  00BC               	movwf	___ftdiv@f3+1
  4995  0ABE  3000               	movlw	0
  4996  0ABF  00BD               	movwf	___ftdiv@f3+2
  4997  0AC0  3089               	movlw	137
  4998  0AC1  073F               	addwf	___ftdiv@sign,w
  4999  0AC2  00B6               	movwf	??___ftdiv
  5000  0AC3  0836               	movf	??___ftdiv,w
  5001  0AC4  02BE               	subwf	___ftdiv@exp,f
  5002  0AC5  0833               	movf	___ftdiv@f1,w
  5003  0AC6  00B6               	movwf	??___ftdiv
  5004  0AC7  0834               	movf	___ftdiv@f1+1,w
  5005  0AC8  00B7               	movwf	??___ftdiv+1
  5006  0AC9  0835               	movf	___ftdiv@f1+2,w
  5007  0ACA  00B8               	movwf	??___ftdiv+2
  5008  0ACB  3010               	movlw	16
  5009  0ACC                     u234_25:	
  5010  0ACC  1003               	clrc
  5011  0ACD  0CB8               	rrf	??___ftdiv+2,f
  5012  0ACE  0CB7               	rrf	??___ftdiv+1,f
  5013  0ACF  0CB6               	rrf	??___ftdiv,f
  5014  0AD0  3EFF               	addlw	-1
  5015  0AD1  1D03               	skipz
  5016  0AD2  2ACC               	goto	u234_25
  5017  0AD3  0836               	movf	??___ftdiv,w
  5018  0AD4  00B9               	movwf	??___ftdiv+3
  5019  0AD5  0839               	movf	??___ftdiv+3,w
  5020  0AD6  00BF               	movwf	___ftdiv@sign
  5021  0AD7  0830               	movf	___ftdiv@f2,w
  5022  0AD8  00B6               	movwf	??___ftdiv
  5023  0AD9  0831               	movf	___ftdiv@f2+1,w
  5024  0ADA  00B7               	movwf	??___ftdiv+1
  5025  0ADB  0832               	movf	___ftdiv@f2+2,w
  5026  0ADC  00B8               	movwf	??___ftdiv+2
  5027  0ADD  3010               	movlw	16
  5028  0ADE                     u235_25:	
  5029  0ADE  1003               	clrc
  5030  0ADF  0CB8               	rrf	??___ftdiv+2,f
  5031  0AE0  0CB7               	rrf	??___ftdiv+1,f
  5032  0AE1  0CB6               	rrf	??___ftdiv,f
  5033  0AE2  3EFF               	addlw	-1
  5034  0AE3  1D03               	skipz
  5035  0AE4  2ADE               	goto	u235_25
  5036  0AE5  0836               	movf	??___ftdiv,w
  5037  0AE6  00B9               	movwf	??___ftdiv+3
  5038  0AE7  0839               	movf	??___ftdiv+3,w
  5039  0AE8  06BF               	xorwf	___ftdiv@sign,f
  5040  0AE9  3080               	movlw	128
  5041  0AEA  00B6               	movwf	??___ftdiv
  5042  0AEB  0836               	movf	??___ftdiv,w
  5043  0AEC  05BF               	andwf	___ftdiv@sign,f
  5044  0AED  17B4               	bsf	___ftdiv@f1+1,7
  5045  0AEE  30FF               	movlw	255
  5046  0AEF  05B3               	andwf	___ftdiv@f1,f
  5047  0AF0  30FF               	movlw	255
  5048  0AF1  05B4               	andwf	___ftdiv@f1+1,f
  5049  0AF2  3000               	movlw	0
  5050  0AF3  05B5               	andwf	___ftdiv@f1+2,f
  5051  0AF4  17B1               	bsf	___ftdiv@f2+1,7
  5052  0AF5  30FF               	movlw	255
  5053  0AF6  05B0               	andwf	___ftdiv@f2,f
  5054  0AF7  30FF               	movlw	255
  5055  0AF8  05B1               	andwf	___ftdiv@f2+1,f
  5056  0AF9  3000               	movlw	0
  5057  0AFA  05B2               	andwf	___ftdiv@f2+2,f
  5058  0AFB  3018               	movlw	24
  5059  0AFC  00B6               	movwf	??___ftdiv
  5060  0AFD  0836               	movf	??___ftdiv,w
  5061  0AFE  00BA               	movwf	___ftdiv@cntr
  5062  0AFF                     i1l2235:	
  5063  0AFF  3001               	movlw	1
  5064  0B00                     u236_25:	
  5065  0B00  1003               	clrc
  5066  0B01  0DBB               	rlf	___ftdiv@f3,f
  5067  0B02  0DBC               	rlf	___ftdiv@f3+1,f
  5068  0B03  0DBD               	rlf	___ftdiv@f3+2,f
  5069  0B04  3EFF               	addlw	-1
  5070  0B05  1D03               	skipz
  5071  0B06  2B00               	goto	u236_25
  5072  0B07  0832               	movf	___ftdiv@f2+2,w
  5073  0B08  0235               	subwf	___ftdiv@f1+2,w
  5074  0B09  1D03               	skipz
  5075  0B0A  2B11               	goto	u237_25
  5076  0B0B  0831               	movf	___ftdiv@f2+1,w
  5077  0B0C  0234               	subwf	___ftdiv@f1+1,w
  5078  0B0D  1D03               	skipz
  5079  0B0E  2B11               	goto	u237_25
  5080  0B0F  0830               	movf	___ftdiv@f2,w
  5081  0B10  0233               	subwf	___ftdiv@f1,w
  5082  0B11                     u237_25:	
  5083  0B11  1C03               	skipc
  5084  0B12  2B1E               	goto	i1l2243
  5085  0B13  0830               	movf	___ftdiv@f2,w
  5086  0B14  02B3               	subwf	___ftdiv@f1,f
  5087  0B15  0831               	movf	___ftdiv@f2+1,w
  5088  0B16  1C03               	skipc
  5089  0B17  0F31               	incfsz	___ftdiv@f2+1,w
  5090  0B18  02B4               	subwf	___ftdiv@f1+1,f
  5091  0B19  0832               	movf	___ftdiv@f2+2,w
  5092  0B1A  1C03               	skipc
  5093  0B1B  0A32               	incf	___ftdiv@f2+2,w
  5094  0B1C  02B5               	subwf	___ftdiv@f1+2,f
  5095  0B1D  143B               	bsf	___ftdiv@f3,0
  5096  0B1E                     i1l2243:	
  5097  0B1E  3001               	movlw	1
  5098  0B1F                     u238_25:	
  5099  0B1F  1003               	clrc
  5100  0B20  0DB3               	rlf	___ftdiv@f1,f
  5101  0B21  0DB4               	rlf	___ftdiv@f1+1,f
  5102  0B22  0DB5               	rlf	___ftdiv@f1+2,f
  5103  0B23  3EFF               	addlw	-1
  5104  0B24  1D03               	skipz
  5105  0B25  2B1F               	goto	u238_25
  5106  0B26  3001               	movlw	1
  5107  0B27  02BA               	subwf	___ftdiv@cntr,f
  5108  0B28  1D03               	btfss	3,2
  5109  0B29  2AFF               	goto	i1l2235
  5110  0B2A  083B               	movf	___ftdiv@f3,w
  5111  0B2B  00F0               	movwf	___ftpack@arg
  5112  0B2C  083C               	movf	___ftdiv@f3+1,w
  5113  0B2D  00F1               	movwf	___ftpack@arg+1
  5114  0B2E  083D               	movf	___ftdiv@f3+2,w
  5115  0B2F  00F2               	movwf	___ftpack@arg+2
  5116  0B30  083E               	movf	___ftdiv@exp,w
  5117  0B31  00B6               	movwf	??___ftdiv
  5118  0B32  0836               	movf	??___ftdiv,w
  5119  0B33  00F3               	movwf	___ftpack@exp
  5120  0B34  083F               	movf	___ftdiv@sign,w
  5121  0B35  00B7               	movwf	??___ftdiv+1
  5122  0B36  0837               	movf	??___ftdiv+1,w
  5123  0B37  00F4               	movwf	___ftpack@sign
  5124  0B38  160A  118A  25A2   	fcall	___ftpack
  5125  0B3B  0870               	movf	?___ftpack,w
  5126  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0B3E  00B0               	movwf	?___ftdiv
  5129  0B3F  0871               	movf	?___ftpack+1,w
  5130  0B40  00B1               	movwf	?___ftdiv+1
  5131  0B41  0872               	movf	?___ftpack+2,w
  5132  0B42  00B2               	movwf	?___ftdiv+2
  5133  0B43  0008               	return
  5134  0B44                     __end_of___ftdiv:	
  5135                           
  5136                           	psect	text27
  5137  0C17                     __ptext27:	
  5138 ;; *************** function ___ftadd *****************
  5139 ;; Defined at:
  5140 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  f1              3    3[BANK0 ] float 
  5143 ;;  f2              3    6[BANK0 ] float 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  exp1            1   15[BANK0 ] unsigned char 
  5146 ;;  exp2            1   14[BANK0 ] unsigned char 
  5147 ;;  sign            1   13[BANK0 ] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  3    3[BANK0 ] float 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, pclath, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         0       6       0       0       0
  5158 ;;      Locals:         0       3       0       0       0
  5159 ;;      Temps:          0       4       0       0       0
  5160 ;;      Totals:         0      13       0       0       0
  5161 ;;Total ram usage:       13 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    1
  5164 ;; This function calls:
  5165 ;;		___ftpack
  5166 ;; This function is called by:
  5167 ;;		_trapmf
  5168 ;;		_Fuzzy
  5169 ;;		_trimf
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           
  5174                           ;psect for function ___ftadd
  5175  0C17                     ___ftadd:	
  5176                           
  5177                           ;incstack = 0
  5178                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5179  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0C19  0823               	movf	___ftadd@f1,w
  5182  0C1A  00A9               	movwf	??___ftadd
  5183  0C1B  0824               	movf	___ftadd@f1+1,w
  5184  0C1C  00AA               	movwf	??___ftadd+1
  5185  0C1D  0825               	movf	___ftadd@f1+2,w
  5186  0C1E  00AB               	movwf	??___ftadd+2
  5187  0C1F  1003               	clrc
  5188  0C20  0D2A               	rlf	??___ftadd+1,w
  5189  0C21  0D2B               	rlf	??___ftadd+2,w
  5190  0C22  00AC               	movwf	??___ftadd+3
  5191  0C23  082C               	movf	??___ftadd+3,w
  5192  0C24  00AF               	movwf	___ftadd@exp1
  5193  0C25  0826               	movf	___ftadd@f2,w
  5194  0C26  00A9               	movwf	??___ftadd
  5195  0C27  0827               	movf	___ftadd@f2+1,w
  5196  0C28  00AA               	movwf	??___ftadd+1
  5197  0C29  0828               	movf	___ftadd@f2+2,w
  5198  0C2A  00AB               	movwf	??___ftadd+2
  5199  0C2B  1003               	clrc
  5200  0C2C  0D2A               	rlf	??___ftadd+1,w
  5201  0C2D  0D2B               	rlf	??___ftadd+2,w
  5202  0C2E  00AC               	movwf	??___ftadd+3
  5203  0C2F  082C               	movf	??___ftadd+3,w
  5204  0C30  00AE               	movwf	___ftadd@exp2
  5205  0C31  082F               	movf	___ftadd@exp1,w
  5206  0C32  1903               	btfsc	3,2
  5207  0C33  2C40               	goto	i1l3751
  5208  0C34  082E               	movf	___ftadd@exp2,w
  5209  0C35  022F               	subwf	___ftadd@exp1,w
  5210  0C36  1803               	skipnc
  5211  0C37  2C47               	goto	i1l3755
  5212  0C38  032F               	decf	___ftadd@exp1,w
  5213  0C39  3AFF               	xorlw	255
  5214  0C3A  072E               	addwf	___ftadd@exp2,w
  5215  0C3B  00A9               	movwf	??___ftadd
  5216  0C3C  3019               	movlw	25
  5217  0C3D  0229               	subwf	??___ftadd,w
  5218  0C3E  1C03               	skipc
  5219  0C3F  2C47               	goto	i1l3755
  5220  0C40                     i1l3751:	
  5221  0C40  0826               	movf	___ftadd@f2,w
  5222  0C41  00A3               	movwf	?___ftadd
  5223  0C42  0827               	movf	___ftadd@f2+1,w
  5224  0C43  00A4               	movwf	?___ftadd+1
  5225  0C44  0828               	movf	___ftadd@f2+2,w
  5226  0C45  00A5               	movwf	?___ftadd+2
  5227  0C46  0008               	return
  5228  0C47                     i1l3755:	
  5229  0C47  082E               	movf	___ftadd@exp2,w
  5230  0C48  1903               	btfsc	3,2
  5231  0C49  0008               	return
  5232  0C4A  082F               	movf	___ftadd@exp1,w
  5233  0C4B  022E               	subwf	___ftadd@exp2,w
  5234  0C4C  1803               	skipnc
  5235  0C4D  2C56               	goto	i1l3761
  5236  0C4E  032E               	decf	___ftadd@exp2,w
  5237  0C4F  3AFF               	xorlw	255
  5238  0C50  072F               	addwf	___ftadd@exp1,w
  5239  0C51  00A9               	movwf	??___ftadd
  5240  0C52  3019               	movlw	25
  5241  0C53  0229               	subwf	??___ftadd,w
  5242  0C54  1803               	btfsc	3,0
  5243  0C55  0008               	return
  5244  0C56                     i1l3761:	
  5245  0C56  3006               	movlw	6
  5246  0C57  00A9               	movwf	??___ftadd
  5247  0C58  0829               	movf	??___ftadd,w
  5248  0C59  00AD               	movwf	___ftadd@sign
  5249  0C5A  1BA5               	btfsc	___ftadd@f1+2,7
  5250  0C5B  17AD               	bsf	___ftadd@sign,7
  5251  0C5C  1BA8               	btfsc	___ftadd@f2+2,7
  5252  0C5D  172D               	bsf	___ftadd@sign,6
  5253  0C5E  17A4               	bsf	___ftadd@f1+1,7
  5254  0C5F  30FF               	movlw	255
  5255  0C60  05A3               	andwf	___ftadd@f1,f
  5256  0C61  30FF               	movlw	255
  5257  0C62  05A4               	andwf	___ftadd@f1+1,f
  5258  0C63  3000               	movlw	0
  5259  0C64  05A5               	andwf	___ftadd@f1+2,f
  5260  0C65  17A7               	bsf	___ftadd@f2+1,7
  5261  0C66  30FF               	movlw	255
  5262  0C67  05A6               	andwf	___ftadd@f2,f
  5263  0C68  30FF               	movlw	255
  5264  0C69  05A7               	andwf	___ftadd@f2+1,f
  5265  0C6A  3000               	movlw	0
  5266  0C6B  05A8               	andwf	___ftadd@f2+2,f
  5267  0C6C  082E               	movf	___ftadd@exp2,w
  5268  0C6D  022F               	subwf	___ftadd@exp1,w
  5269  0C6E  1803               	skipnc
  5270  0C6F  2C96               	goto	i1l3783
  5271  0C70                     i1l3773:	
  5272  0C70  3001               	movlw	1
  5273  0C71                     u499_25:	
  5274  0C71  1003               	clrc
  5275  0C72  0DA6               	rlf	___ftadd@f2,f
  5276  0C73  0DA7               	rlf	___ftadd@f2+1,f
  5277  0C74  0DA8               	rlf	___ftadd@f2+2,f
  5278  0C75  3EFF               	addlw	-1
  5279  0C76  1D03               	skipz
  5280  0C77  2C71               	goto	u499_25
  5281  0C78  3001               	movlw	1
  5282  0C79  02AE               	subwf	___ftadd@exp2,f
  5283  0C7A  082E               	movf	___ftadd@exp2,w
  5284  0C7B  062F               	xorwf	___ftadd@exp1,w
  5285  0C7C  1903               	skipnz
  5286  0C7D  2C91               	goto	i1l3781
  5287  0C7E  3001               	movlw	1
  5288  0C7F  02AD               	subwf	___ftadd@sign,f
  5289  0C80  082D               	movf	___ftadd@sign,w
  5290  0C81  3907               	andlw	7
  5291  0C82  1903               	btfsc	3,2
  5292  0C83  2C91               	goto	i1l3781
  5293  0C84  2C70               	goto	i1l3773
  5294  0C85                     i1l3779:	
  5295  0C85  3001               	movlw	1
  5296  0C86                     u502_25:	
  5297  0C86  1003               	clrc
  5298  0C87  0CA5               	rrf	___ftadd@f1+2,f
  5299  0C88  0CA4               	rrf	___ftadd@f1+1,f
  5300  0C89  0CA3               	rrf	___ftadd@f1,f
  5301  0C8A  3EFF               	addlw	-1
  5302  0C8B  1D03               	skipz
  5303  0C8C  2C86               	goto	u502_25
  5304  0C8D  3001               	movlw	1
  5305  0C8E  00A9               	movwf	??___ftadd
  5306  0C8F  0829               	movf	??___ftadd,w
  5307  0C90  07AF               	addwf	___ftadd@exp1,f
  5308  0C91                     i1l3781:	
  5309  0C91  082F               	movf	___ftadd@exp1,w
  5310  0C92  062E               	xorwf	___ftadd@exp2,w
  5311  0C93  1903               	btfsc	3,2
  5312  0C94  2CBF               	goto	i1l758
  5313  0C95  2C85               	goto	i1l3779
  5314  0C96                     i1l3783:	
  5315  0C96  082F               	movf	___ftadd@exp1,w
  5316  0C97  022E               	subwf	___ftadd@exp2,w
  5317  0C98  1803               	skipnc
  5318  0C99  2CBF               	goto	i1l758
  5319  0C9A                     i1l3785:	
  5320  0C9A  3001               	movlw	1
  5321  0C9B                     u505_25:	
  5322  0C9B  1003               	clrc
  5323  0C9C  0DA3               	rlf	___ftadd@f1,f
  5324  0C9D  0DA4               	rlf	___ftadd@f1+1,f
  5325  0C9E  0DA5               	rlf	___ftadd@f1+2,f
  5326  0C9F  3EFF               	addlw	-1
  5327  0CA0  1D03               	skipz
  5328  0CA1  2C9B               	goto	u505_25
  5329  0CA2  3001               	movlw	1
  5330  0CA3  02AF               	subwf	___ftadd@exp1,f
  5331  0CA4  082E               	movf	___ftadd@exp2,w
  5332  0CA5  062F               	xorwf	___ftadd@exp1,w
  5333  0CA6  1903               	skipnz
  5334  0CA7  2CBB               	goto	i1l3793
  5335  0CA8  3001               	movlw	1
  5336  0CA9  02AD               	subwf	___ftadd@sign,f
  5337  0CAA  082D               	movf	___ftadd@sign,w
  5338  0CAB  3907               	andlw	7
  5339  0CAC  1903               	btfsc	3,2
  5340  0CAD  2CBB               	goto	i1l3793
  5341  0CAE  2C9A               	goto	i1l3785
  5342  0CAF                     i1l3791:	
  5343  0CAF  3001               	movlw	1
  5344  0CB0                     u508_25:	
  5345  0CB0  1003               	clrc
  5346  0CB1  0CA8               	rrf	___ftadd@f2+2,f
  5347  0CB2  0CA7               	rrf	___ftadd@f2+1,f
  5348  0CB3  0CA6               	rrf	___ftadd@f2,f
  5349  0CB4  3EFF               	addlw	-1
  5350  0CB5  1D03               	skipz
  5351  0CB6  2CB0               	goto	u508_25
  5352  0CB7  3001               	movlw	1
  5353  0CB8  00A9               	movwf	??___ftadd
  5354  0CB9  0829               	movf	??___ftadd,w
  5355  0CBA  07AE               	addwf	___ftadd@exp2,f
  5356  0CBB                     i1l3793:	
  5357  0CBB  082F               	movf	___ftadd@exp1,w
  5358  0CBC  062E               	xorwf	___ftadd@exp2,w
  5359  0CBD  1D03               	skipz
  5360  0CBE  2CAF               	goto	i1l3791
  5361  0CBF                     i1l758:	
  5362  0CBF  1FAD               	btfss	___ftadd@sign,7
  5363  0CC0  2CD1               	goto	i1l3797
  5364  0CC1  30FF               	movlw	255
  5365  0CC2  06A3               	xorwf	___ftadd@f1,f
  5366  0CC3  30FF               	movlw	255
  5367  0CC4  06A4               	xorwf	___ftadd@f1+1,f
  5368  0CC5  30FF               	movlw	255
  5369  0CC6  06A5               	xorwf	___ftadd@f1+2,f
  5370  0CC7  3001               	movlw	1
  5371  0CC8  07A3               	addwf	___ftadd@f1,f
  5372  0CC9  3000               	movlw	0
  5373  0CCA  1803               	skipnc
  5374  0CCB  3001               	movlw	1
  5375  0CCC  07A4               	addwf	___ftadd@f1+1,f
  5376  0CCD  3000               	movlw	0
  5377  0CCE  1803               	skipnc
  5378  0CCF  3001               	movlw	1
  5379  0CD0  07A5               	addwf	___ftadd@f1+2,f
  5380  0CD1                     i1l3797:	
  5381  0CD1  1F2D               	btfss	___ftadd@sign,6
  5382  0CD2  2CE3               	goto	i1l3801
  5383  0CD3  30FF               	movlw	255
  5384  0CD4  06A6               	xorwf	___ftadd@f2,f
  5385  0CD5  30FF               	movlw	255
  5386  0CD6  06A7               	xorwf	___ftadd@f2+1,f
  5387  0CD7  30FF               	movlw	255
  5388  0CD8  06A8               	xorwf	___ftadd@f2+2,f
  5389  0CD9  3001               	movlw	1
  5390  0CDA  07A6               	addwf	___ftadd@f2,f
  5391  0CDB  3000               	movlw	0
  5392  0CDC  1803               	skipnc
  5393  0CDD  3001               	movlw	1
  5394  0CDE  07A7               	addwf	___ftadd@f2+1,f
  5395  0CDF  3000               	movlw	0
  5396  0CE0  1803               	skipnc
  5397  0CE1  3001               	movlw	1
  5398  0CE2  07A8               	addwf	___ftadd@f2+2,f
  5399  0CE3                     i1l3801:	
  5400  0CE3  01AD               	clrf	___ftadd@sign
  5401  0CE4  0823               	movf	___ftadd@f1,w
  5402  0CE5  07A6               	addwf	___ftadd@f2,f
  5403  0CE6  0824               	movf	___ftadd@f1+1,w
  5404  0CE7  1103               	clrz
  5405  0CE8  1803               	skipnc
  5406  0CE9  0A24               	incf	___ftadd@f1+1,w
  5407  0CEA  1D03               	btfss	3,2
  5408  0CEB  07A7               	addwf	___ftadd@f2+1,f
  5409  0CEC  0825               	movf	___ftadd@f1+2,w
  5410  0CED  1103               	clrz
  5411  0CEE  1803               	skipnc
  5412  0CEF  0A25               	incf	___ftadd@f1+2,w
  5413  0CF0  1D03               	btfss	3,2
  5414  0CF1  07A8               	addwf	___ftadd@f2+2,f
  5415  0CF2  1FA8               	btfss	___ftadd@f2+2,7
  5416  0CF3  2D06               	goto	i1l3811
  5417  0CF4  30FF               	movlw	255
  5418  0CF5  06A6               	xorwf	___ftadd@f2,f
  5419  0CF6  30FF               	movlw	255
  5420  0CF7  06A7               	xorwf	___ftadd@f2+1,f
  5421  0CF8  30FF               	movlw	255
  5422  0CF9  06A8               	xorwf	___ftadd@f2+2,f
  5423  0CFA  3001               	movlw	1
  5424  0CFB  07A6               	addwf	___ftadd@f2,f
  5425  0CFC  3000               	movlw	0
  5426  0CFD  1803               	skipnc
  5427  0CFE  3001               	movlw	1
  5428  0CFF  07A7               	addwf	___ftadd@f2+1,f
  5429  0D00  3000               	movlw	0
  5430  0D01  1803               	skipnc
  5431  0D02  3001               	movlw	1
  5432  0D03  07A8               	addwf	___ftadd@f2+2,f
  5433  0D04  01AD               	clrf	___ftadd@sign
  5434  0D05  0AAD               	incf	___ftadd@sign,f
  5435  0D06                     i1l3811:	
  5436  0D06  0826               	movf	___ftadd@f2,w
  5437  0D07  00F0               	movwf	___ftpack@arg
  5438  0D08  0827               	movf	___ftadd@f2+1,w
  5439  0D09  00F1               	movwf	___ftpack@arg+1
  5440  0D0A  0828               	movf	___ftadd@f2+2,w
  5441  0D0B  00F2               	movwf	___ftpack@arg+2
  5442  0D0C  082F               	movf	___ftadd@exp1,w
  5443  0D0D  00A9               	movwf	??___ftadd
  5444  0D0E  0829               	movf	??___ftadd,w
  5445  0D0F  00F3               	movwf	___ftpack@exp
  5446  0D10  082D               	movf	___ftadd@sign,w
  5447  0D11  00AA               	movwf	??___ftadd+1
  5448  0D12  082A               	movf	??___ftadd+1,w
  5449  0D13  00F4               	movwf	___ftpack@sign
  5450  0D14  160A  118A  25A2   	fcall	___ftpack
  5451  0D17  0870               	movf	?___ftpack,w
  5452  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0D1A  00A3               	movwf	?___ftadd
  5455  0D1B  0871               	movf	?___ftpack+1,w
  5456  0D1C  00A4               	movwf	?___ftadd+1
  5457  0D1D  0872               	movf	?___ftpack+2,w
  5458  0D1E  00A5               	movwf	?___ftadd+2
  5459  0D1F  0008               	return
  5460  0D20                     __end_of___ftadd:	
  5461                           
  5462                           	psect	text28
  5463  07E2                     __ptext28:	
  5464 ;; *************** function _minimo *****************
  5465 ;; Defined at:
  5466 ;;		line 113 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  a               3    0[BANK0 ] float 
  5469 ;;  b               3    3[BANK0 ] float 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  3    0[BANK0 ] float 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5481 ;;      Params:         0       6       0       0       0
  5482 ;;      Locals:         0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0
  5484 ;;      Totals:         0       6       0       0       0
  5485 ;;Total ram usage:        6 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    1
  5488 ;; This function calls:
  5489 ;;		___ftge
  5490 ;; This function is called by:
  5491 ;;		_Fuzzy
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _minimo
  5497  07E2                     _minimo:	
  5498                           
  5499                           ;main.c: 114: if (a < b) {
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5503  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5504  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  5505  07E4  0820               	movf	minimo@a,w
  5506  07E5  00F0               	movwf	___ftge@ff1
  5507  07E6  0821               	movf	minimo@a+1,w
  5508  07E7  00F1               	movwf	___ftge@ff1+1
  5509  07E8  0822               	movf	minimo@a+2,w
  5510  07E9  00F2               	movwf	___ftge@ff1+2
  5511  07EA  0823               	movf	minimo@b,w
  5512  07EB  00F3               	movwf	___ftge@ff2
  5513  07EC  0824               	movf	minimo@b+1,w
  5514  07ED  00F4               	movwf	___ftge@ff2+1
  5515  07EE  0825               	movf	minimo@b+2,w
  5516  07EF  00F5               	movwf	___ftge@ff2+2
  5517  07F0  160A  118A  2545  120A  118A  	fcall	___ftge
  5518  07F5  1C03               	btfss	3,0
  5519  07F6  0008               	return
  5520                           
  5521                           ;main.c: 116: }
  5522                           ;main.c: 117: return b;
  5523                           
  5524                           ;main.c: 115: return a;
  5525  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5526  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5527  07F9  0823               	movf	minimo@b,w
  5528  07FA  00A0               	movwf	?_minimo
  5529  07FB  0824               	movf	minimo@b+1,w
  5530  07FC  00A1               	movwf	?_minimo+1
  5531  07FD  0825               	movf	minimo@b+2,w
  5532  07FE  00A2               	movwf	?_minimo+2
  5533  07FF  0008               	return
  5534  0800                     __end_of_minimo:	
  5535                           
  5536                           	psect	text29
  5537  1389                     __ptext29:	
  5538 ;; *************** function _maximo *****************
  5539 ;; Defined at:
  5540 ;;		line 106 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  a               3    6[BANK0 ] float 
  5543 ;;  b               3    9[BANK0 ] float 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  3    6[BANK0 ] float 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       6       0       0       0
  5556 ;;      Locals:         0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0
  5558 ;;      Totals:         0       6       0       0       0
  5559 ;;Total ram usage:        6 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    1
  5562 ;; This function calls:
  5563 ;;		___ftge
  5564 ;; This function is called by:
  5565 ;;		_Fuzzy
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           
  5570                           ;psect for function _maximo
  5571  1389                     _maximo:	
  5572                           
  5573                           ;main.c: 107: if (a > b) {
  5574                           
  5575                           ;incstack = 0
  5576                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5577  1389  1283               	bcf	3,5	;RP0=0, select bank0
  5578  138A  1303               	bcf	3,6	;RP1=0, select bank0
  5579  138B  0829               	movf	maximo@b,w
  5580  138C  00F0               	movwf	___ftge@ff1
  5581  138D  082A               	movf	maximo@b+1,w
  5582  138E  00F1               	movwf	___ftge@ff1+1
  5583  138F  082B               	movf	maximo@b+2,w
  5584  1390  00F2               	movwf	___ftge@ff1+2
  5585  1391  0826               	movf	maximo@a,w
  5586  1392  00F3               	movwf	___ftge@ff2
  5587  1393  0827               	movf	maximo@a+1,w
  5588  1394  00F4               	movwf	___ftge@ff2+1
  5589  1395  0828               	movf	maximo@a+2,w
  5590  1396  00F5               	movwf	___ftge@ff2+2
  5591  1397  160A  118A  2545  160A  118A  	fcall	___ftge
  5592  139C  1C03               	btfss	3,0
  5593  139D  0008               	return
  5594                           
  5595                           ;main.c: 109: }
  5596                           ;main.c: 110: return b;
  5597                           
  5598                           ;main.c: 108: return a;
  5599  139E  1283               	bcf	3,5	;RP0=0, select bank0
  5600  139F  1303               	bcf	3,6	;RP1=0, select bank0
  5601  13A0  0829               	movf	maximo@b,w
  5602  13A1  00A6               	movwf	?_maximo
  5603  13A2  082A               	movf	maximo@b+1,w
  5604  13A3  00A7               	movwf	?_maximo+1
  5605  13A4  082B               	movf	maximo@b+2,w
  5606  13A5  00A8               	movwf	?_maximo+2
  5607  13A6  0008               	return
  5608  13A7                     __end_of_maximo:	
  5609                           
  5610                           	psect	text30
  5611  1545                     __ptext30:	
  5612 ;; *************** function ___ftge *****************
  5613 ;; Defined at:
  5614 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  ff1             3    0[COMMON] float 
  5617 ;;  ff2             3    3[COMMON] float 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;		None               void
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5629 ;;      Params:         6       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0
  5631 ;;      Temps:          6       0       0       0       0
  5632 ;;      Totals:        12       0       0       0       0
  5633 ;;Total ram usage:       12 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_trapmf
  5639 ;;		_maximo
  5640 ;;		_minimo
  5641 ;;		_Fuzzy
  5642 ;;		_trimf
  5643 ;;		_min_val
  5644 ;;		_max_val
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function ___ftge
  5650  1545                     ___ftge:	
  5651                           
  5652                           ;incstack = 0
  5653                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5654  1545  1FF2               	btfss	___ftge@ff1+2,7
  5655  1546  2D6C               	goto	i1l2255
  5656  1547  3000               	movlw	0
  5657  1548  00F6               	movwf	??___ftge
  5658  1549  3000               	movlw	0
  5659  154A  00F7               	movwf	??___ftge+1
  5660  154B  3080               	movlw	128
  5661  154C  00F8               	movwf	??___ftge+2
  5662  154D  0970               	comf	___ftge@ff1,w
  5663  154E  00F9               	movwf	??___ftge+3
  5664  154F  0971               	comf	___ftge@ff1+1,w
  5665  1550  00FA               	movwf	??___ftge+4
  5666  1551  0972               	comf	___ftge@ff1+2,w
  5667  1552  00FB               	movwf	??___ftge+5
  5668  1553  0AF9               	incf	??___ftge+3,f
  5669  1554  1903               	skipnz
  5670  1555  0AFA               	incf	??___ftge+4,f
  5671  1556  1903               	skipnz
  5672  1557  0AFB               	incf	??___ftge+5,f
  5673  1558  0879               	movf	??___ftge+3,w
  5674  1559  07F6               	addwf	??___ftge,f
  5675  155A  087A               	movf	??___ftge+4,w
  5676  155B  1803               	skipnc
  5677  155C  0F7A               	incfsz	??___ftge+4,w
  5678  155D  2D5F               	goto	u241_21
  5679  155E  2D60               	goto	u241_22
  5680  155F                     u241_21:	
  5681  155F  07F7               	addwf	??___ftge+1,f
  5682  1560                     u241_22:	
  5683  1560  087B               	movf	??___ftge+5,w
  5684  1561  1803               	skipnc
  5685  1562  0F7B               	incfsz	??___ftge+5,w
  5686  1563  2D65               	goto	u241_23
  5687  1564  2D66               	goto	u241_24
  5688  1565                     u241_23:	
  5689  1565  07F8               	addwf	??___ftge+2,f
  5690  1566                     u241_24:	
  5691  1566  0876               	movf	??___ftge,w
  5692  1567  00F0               	movwf	___ftge@ff1
  5693  1568  0877               	movf	??___ftge+1,w
  5694  1569  00F1               	movwf	___ftge@ff1+1
  5695  156A  0878               	movf	??___ftge+2,w
  5696  156B  00F2               	movwf	___ftge@ff1+2
  5697  156C                     i1l2255:	
  5698  156C  1FF5               	btfss	___ftge@ff2+2,7
  5699  156D  2D93               	goto	i1l2259
  5700  156E  3000               	movlw	0
  5701  156F  00F6               	movwf	??___ftge
  5702  1570  3000               	movlw	0
  5703  1571  00F7               	movwf	??___ftge+1
  5704  1572  3080               	movlw	128
  5705  1573  00F8               	movwf	??___ftge+2
  5706  1574  0973               	comf	___ftge@ff2,w
  5707  1575  00F9               	movwf	??___ftge+3
  5708  1576  0974               	comf	___ftge@ff2+1,w
  5709  1577  00FA               	movwf	??___ftge+4
  5710  1578  0975               	comf	___ftge@ff2+2,w
  5711  1579  00FB               	movwf	??___ftge+5
  5712  157A  0AF9               	incf	??___ftge+3,f
  5713  157B  1903               	skipnz
  5714  157C  0AFA               	incf	??___ftge+4,f
  5715  157D  1903               	skipnz
  5716  157E  0AFB               	incf	??___ftge+5,f
  5717  157F  0879               	movf	??___ftge+3,w
  5718  1580  07F6               	addwf	??___ftge,f
  5719  1581  087A               	movf	??___ftge+4,w
  5720  1582  1803               	skipnc
  5721  1583  0F7A               	incfsz	??___ftge+4,w
  5722  1584  2D86               	goto	u243_21
  5723  1585  2D87               	goto	u243_22
  5724  1586                     u243_21:	
  5725  1586  07F7               	addwf	??___ftge+1,f
  5726  1587                     u243_22:	
  5727  1587  087B               	movf	??___ftge+5,w
  5728  1588  1803               	skipnc
  5729  1589  0F7B               	incfsz	??___ftge+5,w
  5730  158A  2D8C               	goto	u243_23
  5731  158B  2D8D               	goto	u243_24
  5732  158C                     u243_23:	
  5733  158C  07F8               	addwf	??___ftge+2,f
  5734  158D                     u243_24:	
  5735  158D  0876               	movf	??___ftge,w
  5736  158E  00F3               	movwf	___ftge@ff2
  5737  158F  0877               	movf	??___ftge+1,w
  5738  1590  00F4               	movwf	___ftge@ff2+1
  5739  1591  0878               	movf	??___ftge+2,w
  5740  1592  00F5               	movwf	___ftge@ff2+2
  5741  1593                     i1l2259:	
  5742  1593  3080               	movlw	128
  5743  1594  06F2               	xorwf	___ftge@ff1+2,f
  5744  1595  3080               	movlw	128
  5745  1596  06F5               	xorwf	___ftge@ff2+2,f
  5746  1597  0875               	movf	___ftge@ff2+2,w
  5747  1598  0272               	subwf	___ftge@ff1+2,w
  5748  1599  1D03               	skipz
  5749  159A  0008               	return
  5750  159B  0874               	movf	___ftge@ff2+1,w
  5751  159C  0271               	subwf	___ftge@ff1+1,w
  5752  159D  1D03               	skipz
  5753  159E  0008               	return
  5754  159F  0873               	movf	___ftge@ff2,w
  5755  15A0  0270               	subwf	___ftge@ff1,w
  5756  15A1  0008               	return
  5757  15A2                     __end_of___ftge:	
  5758                           
  5759                           	psect	text31
  5760  0802                     __ptext31:	
  5761 ;; *************** function _abs *****************
  5762 ;; Defined at:
  5763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  a               2    0[COMMON] int 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2    0[COMMON] int 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5777 ;;      Params:         2       0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0
  5779 ;;      Temps:          2       0       0       0       0
  5780 ;;      Totals:         4       0       0       0       0
  5781 ;;Total ram usage:        4 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_Fuzzy
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _abs
  5792  0802                     _abs:	
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _abs: [wreg+status,2+status,0]
  5796  0802  1FF1               	btfss	abs@a+1,7
  5797  0803  0008               	return
  5798  0804  0970               	comf	abs@a,w
  5799  0805  00F2               	movwf	??_abs
  5800  0806  0971               	comf	abs@a+1,w
  5801  0807  00F3               	movwf	??_abs+1
  5802  0808  0AF2               	incf	??_abs,f
  5803  0809  1903               	skipnz
  5804  080A  0AF3               	incf	??_abs+1,f
  5805  080B  0872               	movf	??_abs,w
  5806  080C  00F0               	movwf	?_abs
  5807  080D  0873               	movf	??_abs+1,w
  5808  080E  00F1               	movwf	?_abs+1
  5809  080F  0008               	return
  5810  0810                     __end_of_abs:	
  5811                           
  5812                           	psect	text32
  5813  146E                     __ptext32:	
  5814 ;; *************** function ___wmul *****************
  5815 ;; Defined at:
  5816 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  multiplier      2   26[BANK0 ] unsigned int 
  5819 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  product         2   30[BANK0 ] unsigned int 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2   26[BANK0 ] unsigned int 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       4       0       0       0
  5832 ;;      Locals:         0       2       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         0       6       0       0       0
  5835 ;;Total ram usage:        6 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_Fuzzy
  5841 ;;		_ISR
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function ___wmul
  5847  146E                     ___wmul:	
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5851  146E  1283               	bcf	3,5	;RP0=0, select bank0
  5852  146F  1303               	bcf	3,6	;RP1=0, select bank0
  5853  1470  01BE               	clrf	___wmul@product
  5854  1471  01BF               	clrf	___wmul@product+1
  5855  1472                     i1l2357:	
  5856  1472  1C3A               	btfss	___wmul@multiplier,0
  5857  1473  2C7A               	goto	i1l564
  5858  1474  083C               	movf	___wmul@multiplicand,w
  5859  1475  07BE               	addwf	___wmul@product,f
  5860  1476  1803               	skipnc
  5861  1477  0ABF               	incf	___wmul@product+1,f
  5862  1478  083D               	movf	___wmul@multiplicand+1,w
  5863  1479  07BF               	addwf	___wmul@product+1,f
  5864  147A                     i1l564:	
  5865  147A  3001               	movlw	1
  5866  147B                     u259_25:	
  5867  147B  1003               	clrc
  5868  147C  0DBC               	rlf	___wmul@multiplicand,f
  5869  147D  0DBD               	rlf	___wmul@multiplicand+1,f
  5870  147E  3EFF               	addlw	-1
  5871  147F  1D03               	skipz
  5872  1480  2C7B               	goto	u259_25
  5873  1481  3001               	movlw	1
  5874  1482                     u260_25:	
  5875  1482  1003               	clrc
  5876  1483  0CBB               	rrf	___wmul@multiplier+1,f
  5877  1484  0CBA               	rrf	___wmul@multiplier,f
  5878  1485  3EFF               	addlw	-1
  5879  1486  1D03               	skipz
  5880  1487  2C82               	goto	u260_25
  5881  1488  083B               	movf	___wmul@multiplier+1,w
  5882  1489  043A               	iorwf	___wmul@multiplier,w
  5883  148A  1D03               	skipz
  5884  148B  2C72               	goto	i1l2357
  5885  148C  083F               	movf	___wmul@product+1,w
  5886  148D  01BB               	clrf	?___wmul+1
  5887  148E  07BB               	addwf	?___wmul+1,f
  5888  148F  083E               	movf	___wmul@product,w
  5889  1490  01BA               	clrf	?___wmul
  5890  1491  07BA               	addwf	?___wmul,f
  5891  1492  0008               	return
  5892  1493                     __end_of___wmul:	
  5893                           
  5894                           	psect	text33
  5895  12F8                     __ptext33:	
  5896 ;; *************** function ___lwtoft *****************
  5897 ;; Defined at:
  5898 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  c               2    8[COMMON] unsigned int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  3    8[COMMON] float 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5912 ;;      Params:         3       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0
  5914 ;;      Temps:          1       0       0       0       0
  5915 ;;      Totals:         4       0       0       0       0
  5916 ;;Total ram usage:        4 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    1
  5919 ;; This function calls:
  5920 ;;		___ftpack
  5921 ;; This function is called by:
  5922 ;;		_Fuzzy
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function ___lwtoft
  5928  12F8                     ___lwtoft:	
  5929                           
  5930                           ;incstack = 0
  5931                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5932  12F8  0878               	movf	___lwtoft@c,w
  5933  12F9  00F0               	movwf	___ftpack@arg
  5934  12FA  0879               	movf	___lwtoft@c+1,w
  5935  12FB  00F1               	movwf	___ftpack@arg+1
  5936  12FC  01F2               	clrf	___ftpack@arg+2
  5937  12FD  308E               	movlw	142
  5938  12FE  00FB               	movwf	??___lwtoft
  5939  12FF  087B               	movf	??___lwtoft,w
  5940  1300  00F3               	movwf	___ftpack@exp
  5941  1301  01F4               	clrf	___ftpack@sign
  5942  1302  160A  118A  25A2   	fcall	___ftpack
  5943  1305  0870               	movf	?___ftpack,w
  5944  1306  00F8               	movwf	?___lwtoft
  5945  1307  0871               	movf	?___ftpack+1,w
  5946  1308  00F9               	movwf	?___lwtoft+1
  5947  1309  0872               	movf	?___ftpack+2,w
  5948  130A  00FA               	movwf	?___lwtoft+2
  5949  130B  0008               	return
  5950  130C                     __end_of___lwtoft:	
  5951                           
  5952                           	psect	text34
  5953  1772                     __ptext34:	
  5954 ;; *************** function ___fttol *****************
  5955 ;; Defined at:
  5956 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  f1              3   12[BANK0 ] float 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  lval            4   21[BANK0 ] unsigned long 
  5961 ;;  exp1            1   25[BANK0 ] unsigned char 
  5962 ;;  sign1           1   20[BANK0 ] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  4   12[BANK0 ] long 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5972 ;;      Params:         0       4       0       0       0
  5973 ;;      Locals:         0       6       0       0       0
  5974 ;;      Temps:          0       4       0       0       0
  5975 ;;      Totals:         0      14       0       0       0
  5976 ;;Total ram usage:       14 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_Fuzzy
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function ___fttol
  5987  1772                     ___fttol:	
  5988                           
  5989                           ;incstack = 0
  5990                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5991  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5992  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5993  1774  082C               	movf	___fttol@f1,w
  5994  1775  00B0               	movwf	??___fttol
  5995  1776  082D               	movf	___fttol@f1+1,w
  5996  1777  00B1               	movwf	??___fttol+1
  5997  1778  082E               	movf	___fttol@f1+2,w
  5998  1779  00B2               	movwf	??___fttol+2
  5999  177A  1003               	clrc
  6000  177B  0D31               	rlf	??___fttol+1,w
  6001  177C  0D32               	rlf	??___fttol+2,w
  6002  177D  00B3               	movwf	??___fttol+3
  6003  177E  0833               	movf	??___fttol+3,w
  6004  177F  00B9               	movwf	___fttol@exp1
  6005  1780  08B9               	movf	___fttol@exp1,f
  6006  1781  1D03               	skipz
  6007  1782  2F8C               	goto	i1l2475
  6008  1783  3000               	movlw	0
  6009  1784  00AF               	movwf	?___fttol+3
  6010  1785  3000               	movlw	0
  6011  1786  00AE               	movwf	?___fttol+2
  6012  1787  3000               	movlw	0
  6013  1788  00AD               	movwf	?___fttol+1
  6014  1789  3000               	movlw	0
  6015  178A  00AC               	movwf	?___fttol
  6016  178B  0008               	return
  6017  178C                     i1l2475:	
  6018  178C  082C               	movf	___fttol@f1,w
  6019  178D  00B0               	movwf	??___fttol
  6020  178E  082D               	movf	___fttol@f1+1,w
  6021  178F  00B1               	movwf	??___fttol+1
  6022  1790  082E               	movf	___fttol@f1+2,w
  6023  1791  00B2               	movwf	??___fttol+2
  6024  1792  3017               	movlw	23
  6025  1793                     u288_25:	
  6026  1793  1003               	clrc
  6027  1794  0CB2               	rrf	??___fttol+2,f
  6028  1795  0CB1               	rrf	??___fttol+1,f
  6029  1796  0CB0               	rrf	??___fttol,f
  6030  1797  3EFF               	addlw	-1
  6031  1798  1D03               	skipz
  6032  1799  2F93               	goto	u288_25
  6033  179A  0830               	movf	??___fttol,w
  6034  179B  00B3               	movwf	??___fttol+3
  6035  179C  0833               	movf	??___fttol+3,w
  6036  179D  00B4               	movwf	___fttol@sign1
  6037  179E  17AD               	bsf	___fttol@f1+1,7
  6038  179F  30FF               	movlw	255
  6039  17A0  05AC               	andwf	___fttol@f1,f
  6040  17A1  30FF               	movlw	255
  6041  17A2  05AD               	andwf	___fttol@f1+1,f
  6042  17A3  3000               	movlw	0
  6043  17A4  05AE               	andwf	___fttol@f1+2,f
  6044  17A5  082C               	movf	___fttol@f1,w
  6045  17A6  00B5               	movwf	___fttol@lval
  6046  17A7  082D               	movf	___fttol@f1+1,w
  6047  17A8  00B6               	movwf	___fttol@lval+1
  6048  17A9  082E               	movf	___fttol@f1+2,w
  6049  17AA  00B7               	movwf	___fttol@lval+2
  6050  17AB  01B8               	clrf	___fttol@lval+3
  6051  17AC  308E               	movlw	142
  6052  17AD  02B9               	subwf	___fttol@exp1,f
  6053  17AE  1FB9               	btfss	___fttol@exp1,7
  6054  17AF  2FCE               	goto	i1l2495
  6055  17B0  0839               	movf	___fttol@exp1,w
  6056  17B1  3A80               	xorlw	128
  6057  17B2  3E8F               	addlw	143
  6058  17B3  1803               	skipnc
  6059  17B4  2FBE               	goto	i1l2493
  6060  17B5  3000               	movlw	0
  6061  17B6  00AF               	movwf	?___fttol+3
  6062  17B7  3000               	movlw	0
  6063  17B8  00AE               	movwf	?___fttol+2
  6064  17B9  3000               	movlw	0
  6065  17BA  00AD               	movwf	?___fttol+1
  6066  17BB  3000               	movlw	0
  6067  17BC  00AC               	movwf	?___fttol
  6068  17BD  0008               	return
  6069  17BE                     i1l2493:	
  6070  17BE  3001               	movlw	1
  6071  17BF                     u291_25:	
  6072  17BF  1003               	clrc
  6073  17C0  0CB8               	rrf	___fttol@lval+3,f
  6074  17C1  0CB7               	rrf	___fttol@lval+2,f
  6075  17C2  0CB6               	rrf	___fttol@lval+1,f
  6076  17C3  0CB5               	rrf	___fttol@lval,f
  6077  17C4  3EFF               	addlw	-1
  6078  17C5  1D03               	skipz
  6079  17C6  2FBF               	goto	u291_25
  6080  17C7  3001               	movlw	1
  6081  17C8  00B0               	movwf	??___fttol
  6082  17C9  0830               	movf	??___fttol,w
  6083  17CA  07B9               	addwf	___fttol@exp1,f
  6084  17CB  1903               	btfsc	3,2
  6085  17CC  2FE9               	goto	i1l2505
  6086  17CD  2FBE               	goto	i1l2493
  6087  17CE                     i1l2495:	
  6088  17CE  3018               	movlw	24
  6089  17CF  0239               	subwf	___fttol@exp1,w
  6090  17D0  1C03               	skipc
  6091  17D1  2FE6               	goto	i1l2503
  6092  17D2  3000               	movlw	0
  6093  17D3  00AF               	movwf	?___fttol+3
  6094  17D4  3000               	movlw	0
  6095  17D5  00AE               	movwf	?___fttol+2
  6096  17D6  3000               	movlw	0
  6097  17D7  00AD               	movwf	?___fttol+1
  6098  17D8  3000               	movlw	0
  6099  17D9  00AC               	movwf	?___fttol
  6100  17DA  0008               	return
  6101  17DB                     i1l2501:	
  6102  17DB  3001               	movlw	1
  6103  17DC  00B0               	movwf	??___fttol
  6104  17DD                     u294_25:	
  6105  17DD  1003               	clrc
  6106  17DE  0DB5               	rlf	___fttol@lval,f
  6107  17DF  0DB6               	rlf	___fttol@lval+1,f
  6108  17E0  0DB7               	rlf	___fttol@lval+2,f
  6109  17E1  0DB8               	rlf	___fttol@lval+3,f
  6110  17E2  0BB0               	decfsz	??___fttol,f
  6111  17E3  2FDD               	goto	u294_25
  6112  17E4  3001               	movlw	1
  6113  17E5  02B9               	subwf	___fttol@exp1,f
  6114  17E6                     i1l2503:	
  6115  17E6  08B9               	movf	___fttol@exp1,f
  6116  17E7  1D03               	skipz
  6117  17E8  2FDB               	goto	i1l2501
  6118  17E9                     i1l2505:	
  6119  17E9  0834               	movf	___fttol@sign1,w
  6120  17EA  1903               	btfsc	3,2
  6121  17EB  2FF7               	goto	i1l2509
  6122  17EC  09B5               	comf	___fttol@lval,f
  6123  17ED  09B6               	comf	___fttol@lval+1,f
  6124  17EE  09B7               	comf	___fttol@lval+2,f
  6125  17EF  09B8               	comf	___fttol@lval+3,f
  6126  17F0  0AB5               	incf	___fttol@lval,f
  6127  17F1  1903               	skipnz
  6128  17F2  0AB6               	incf	___fttol@lval+1,f
  6129  17F3  1903               	skipnz
  6130  17F4  0AB7               	incf	___fttol@lval+2,f
  6131  17F5  1903               	skipnz
  6132  17F6  0AB8               	incf	___fttol@lval+3,f
  6133  17F7                     i1l2509:	
  6134  17F7  0838               	movf	___fttol@lval+3,w
  6135  17F8  00AF               	movwf	?___fttol+3
  6136  17F9  0837               	movf	___fttol@lval+2,w
  6137  17FA  00AE               	movwf	?___fttol+2
  6138  17FB  0836               	movf	___fttol@lval+1,w
  6139  17FC  00AD               	movwf	?___fttol+1
  6140  17FD  0835               	movf	___fttol@lval,w
  6141  17FE  00AC               	movwf	?___fttol
  6142  17FF  0008               	return
  6143  1800                     __end_of___fttol:	
  6144                           
  6145                           	psect	text35
  6146  0B44                     __ptext35:	
  6147 ;; *************** function ___ftmul *****************
  6148 ;; Defined at:
  6149 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  f1              3   50[BANK0 ] float 
  6152 ;;  f2              3   53[BANK0 ] float 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6155 ;;  sign            1   65[BANK0 ] unsigned char 
  6156 ;;  cntr            1   64[BANK0 ] unsigned char 
  6157 ;;  exp             1   60[BANK0 ] unsigned char 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  3   50[BANK0 ] float 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6167 ;;      Params:         0       6       0       0       0
  6168 ;;      Locals:         0       6       0       0       0
  6169 ;;      Temps:          0       4       0       0       0
  6170 ;;      Totals:         0      16       0       0       0
  6171 ;;Total ram usage:       16 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    1
  6174 ;; This function calls:
  6175 ;;		___ftpack
  6176 ;; This function is called by:
  6177 ;;		_Fuzzy
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           
  6182                           ;psect for function ___ftmul
  6183  0B44                     ___ftmul:	
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6187  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0B46  0852               	movf	___ftmul@f1,w
  6190  0B47  00D8               	movwf	??___ftmul
  6191  0B48  0853               	movf	___ftmul@f1+1,w
  6192  0B49  00D9               	movwf	??___ftmul+1
  6193  0B4A  0854               	movf	___ftmul@f1+2,w
  6194  0B4B  00DA               	movwf	??___ftmul+2
  6195  0B4C  1003               	clrc
  6196  0B4D  0D59               	rlf	??___ftmul+1,w
  6197  0B4E  0D5A               	rlf	??___ftmul+2,w
  6198  0B4F  00DB               	movwf	??___ftmul+3
  6199  0B50  085B               	movf	??___ftmul+3,w
  6200  0B51  00DC               	movwf	___ftmul@exp
  6201  0B52  08DC               	movf	___ftmul@exp,f
  6202  0B53  1D03               	skipz
  6203  0B54  2B5C               	goto	i1l2425
  6204  0B55  3000               	movlw	0
  6205  0B56  00D2               	movwf	?___ftmul
  6206  0B57  3000               	movlw	0
  6207  0B58  00D3               	movwf	?___ftmul+1
  6208  0B59  3000               	movlw	0
  6209  0B5A  00D4               	movwf	?___ftmul+2
  6210  0B5B  0008               	return
  6211  0B5C                     i1l2425:	
  6212  0B5C  0855               	movf	___ftmul@f2,w
  6213  0B5D  00D8               	movwf	??___ftmul
  6214  0B5E  0856               	movf	___ftmul@f2+1,w
  6215  0B5F  00D9               	movwf	??___ftmul+1
  6216  0B60  0857               	movf	___ftmul@f2+2,w
  6217  0B61  00DA               	movwf	??___ftmul+2
  6218  0B62  1003               	clrc
  6219  0B63  0D59               	rlf	??___ftmul+1,w
  6220  0B64  0D5A               	rlf	??___ftmul+2,w
  6221  0B65  00DB               	movwf	??___ftmul+3
  6222  0B66  085B               	movf	??___ftmul+3,w
  6223  0B67  00E1               	movwf	___ftmul@sign
  6224  0B68  08E1               	movf	___ftmul@sign,f
  6225  0B69  1D03               	skipz
  6226  0B6A  2B72               	goto	i1l2431
  6227  0B6B  3000               	movlw	0
  6228  0B6C  00D2               	movwf	?___ftmul
  6229  0B6D  3000               	movlw	0
  6230  0B6E  00D3               	movwf	?___ftmul+1
  6231  0B6F  3000               	movlw	0
  6232  0B70  00D4               	movwf	?___ftmul+2
  6233  0B71  0008               	return
  6234  0B72                     i1l2431:	
  6235  0B72  0861               	movf	___ftmul@sign,w
  6236  0B73  3E7B               	addlw	123
  6237  0B74  00D8               	movwf	??___ftmul
  6238  0B75  0858               	movf	??___ftmul,w
  6239  0B76  07DC               	addwf	___ftmul@exp,f
  6240  0B77  0852               	movf	___ftmul@f1,w
  6241  0B78  00D8               	movwf	??___ftmul
  6242  0B79  0853               	movf	___ftmul@f1+1,w
  6243  0B7A  00D9               	movwf	??___ftmul+1
  6244  0B7B  0854               	movf	___ftmul@f1+2,w
  6245  0B7C  00DA               	movwf	??___ftmul+2
  6246  0B7D  3010               	movlw	16
  6247  0B7E                     u275_25:	
  6248  0B7E  1003               	clrc
  6249  0B7F  0CDA               	rrf	??___ftmul+2,f
  6250  0B80  0CD9               	rrf	??___ftmul+1,f
  6251  0B81  0CD8               	rrf	??___ftmul,f
  6252  0B82  3EFF               	addlw	-1
  6253  0B83  1D03               	skipz
  6254  0B84  2B7E               	goto	u275_25
  6255  0B85  0858               	movf	??___ftmul,w
  6256  0B86  00DB               	movwf	??___ftmul+3
  6257  0B87  085B               	movf	??___ftmul+3,w
  6258  0B88  00E1               	movwf	___ftmul@sign
  6259  0B89  0855               	movf	___ftmul@f2,w
  6260  0B8A  00D8               	movwf	??___ftmul
  6261  0B8B  0856               	movf	___ftmul@f2+1,w
  6262  0B8C  00D9               	movwf	??___ftmul+1
  6263  0B8D  0857               	movf	___ftmul@f2+2,w
  6264  0B8E  00DA               	movwf	??___ftmul+2
  6265  0B8F  3010               	movlw	16
  6266  0B90                     u276_25:	
  6267  0B90  1003               	clrc
  6268  0B91  0CDA               	rrf	??___ftmul+2,f
  6269  0B92  0CD9               	rrf	??___ftmul+1,f
  6270  0B93  0CD8               	rrf	??___ftmul,f
  6271  0B94  3EFF               	addlw	-1
  6272  0B95  1D03               	skipz
  6273  0B96  2B90               	goto	u276_25
  6274  0B97  0858               	movf	??___ftmul,w
  6275  0B98  00DB               	movwf	??___ftmul+3
  6276  0B99  085B               	movf	??___ftmul+3,w
  6277  0B9A  06E1               	xorwf	___ftmul@sign,f
  6278  0B9B  3080               	movlw	128
  6279  0B9C  00D8               	movwf	??___ftmul
  6280  0B9D  0858               	movf	??___ftmul,w
  6281  0B9E  05E1               	andwf	___ftmul@sign,f
  6282  0B9F  17D3               	bsf	___ftmul@f1+1,7
  6283  0BA0  17D6               	bsf	___ftmul@f2+1,7
  6284  0BA1  30FF               	movlw	255
  6285  0BA2  05D5               	andwf	___ftmul@f2,f
  6286  0BA3  30FF               	movlw	255
  6287  0BA4  05D6               	andwf	___ftmul@f2+1,f
  6288  0BA5  3000               	movlw	0
  6289  0BA6  05D7               	andwf	___ftmul@f2+2,f
  6290  0BA7  3000               	movlw	0
  6291  0BA8  00DD               	movwf	___ftmul@f3_as_product
  6292  0BA9  3000               	movlw	0
  6293  0BAA  00DE               	movwf	___ftmul@f3_as_product+1
  6294  0BAB  3000               	movlw	0
  6295  0BAC  00DF               	movwf	___ftmul@f3_as_product+2
  6296  0BAD  3007               	movlw	7
  6297  0BAE  00D8               	movwf	??___ftmul
  6298  0BAF  0858               	movf	??___ftmul,w
  6299  0BB0  00E0               	movwf	___ftmul@cntr
  6300  0BB1                     i1l2443:	
  6301  0BB1  1C52               	btfss	___ftmul@f1,0
  6302  0BB2  2BC1               	goto	i1l2447
  6303  0BB3  0855               	movf	___ftmul@f2,w
  6304  0BB4  07DD               	addwf	___ftmul@f3_as_product,f
  6305  0BB5  0856               	movf	___ftmul@f2+1,w
  6306  0BB6  1103               	clrz
  6307  0BB7  1803               	skipnc
  6308  0BB8  0A56               	incf	___ftmul@f2+1,w
  6309  0BB9  1D03               	btfss	3,2
  6310  0BBA  07DE               	addwf	___ftmul@f3_as_product+1,f
  6311  0BBB  0857               	movf	___ftmul@f2+2,w
  6312  0BBC  1103               	clrz
  6313  0BBD  1803               	skipnc
  6314  0BBE  0A57               	incf	___ftmul@f2+2,w
  6315  0BBF  1D03               	btfss	3,2
  6316  0BC0  07DF               	addwf	___ftmul@f3_as_product+2,f
  6317  0BC1                     i1l2447:	
  6318  0BC1  3001               	movlw	1
  6319  0BC2                     u279_25:	
  6320  0BC2  1003               	clrc
  6321  0BC3  0CD4               	rrf	___ftmul@f1+2,f
  6322  0BC4  0CD3               	rrf	___ftmul@f1+1,f
  6323  0BC5  0CD2               	rrf	___ftmul@f1,f
  6324  0BC6  3EFF               	addlw	-1
  6325  0BC7  1D03               	skipz
  6326  0BC8  2BC2               	goto	u279_25
  6327  0BC9  3001               	movlw	1
  6328  0BCA                     u280_25:	
  6329  0BCA  1003               	clrc
  6330  0BCB  0DD5               	rlf	___ftmul@f2,f
  6331  0BCC  0DD6               	rlf	___ftmul@f2+1,f
  6332  0BCD  0DD7               	rlf	___ftmul@f2+2,f
  6333  0BCE  3EFF               	addlw	-1
  6334  0BCF  1D03               	skipz
  6335  0BD0  2BCA               	goto	u280_25
  6336  0BD1  3001               	movlw	1
  6337  0BD2  02E0               	subwf	___ftmul@cntr,f
  6338  0BD3  1D03               	btfss	3,2
  6339  0BD4  2BB1               	goto	i1l2443
  6340  0BD5  3009               	movlw	9
  6341  0BD6  00D8               	movwf	??___ftmul
  6342  0BD7  0858               	movf	??___ftmul,w
  6343  0BD8  00E0               	movwf	___ftmul@cntr
  6344  0BD9                     i1l2455:	
  6345  0BD9  1C52               	btfss	___ftmul@f1,0
  6346  0BDA  2BE9               	goto	i1l2459
  6347  0BDB  0855               	movf	___ftmul@f2,w
  6348  0BDC  07DD               	addwf	___ftmul@f3_as_product,f
  6349  0BDD  0856               	movf	___ftmul@f2+1,w
  6350  0BDE  1103               	clrz
  6351  0BDF  1803               	skipnc
  6352  0BE0  0A56               	incf	___ftmul@f2+1,w
  6353  0BE1  1D03               	btfss	3,2
  6354  0BE2  07DE               	addwf	___ftmul@f3_as_product+1,f
  6355  0BE3  0857               	movf	___ftmul@f2+2,w
  6356  0BE4  1103               	clrz
  6357  0BE5  1803               	skipnc
  6358  0BE6  0A57               	incf	___ftmul@f2+2,w
  6359  0BE7  1D03               	btfss	3,2
  6360  0BE8  07DF               	addwf	___ftmul@f3_as_product+2,f
  6361  0BE9                     i1l2459:	
  6362  0BE9  3001               	movlw	1
  6363  0BEA                     u284_25:	
  6364  0BEA  1003               	clrc
  6365  0BEB  0CD4               	rrf	___ftmul@f1+2,f
  6366  0BEC  0CD3               	rrf	___ftmul@f1+1,f
  6367  0BED  0CD2               	rrf	___ftmul@f1,f
  6368  0BEE  3EFF               	addlw	-1
  6369  0BEF  1D03               	skipz
  6370  0BF0  2BEA               	goto	u284_25
  6371  0BF1  3001               	movlw	1
  6372  0BF2                     u285_25:	
  6373  0BF2  1003               	clrc
  6374  0BF3  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6375  0BF4  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6376  0BF5  0CDD               	rrf	___ftmul@f3_as_product,f
  6377  0BF6  3EFF               	addlw	-1
  6378  0BF7  1D03               	skipz
  6379  0BF8  2BF2               	goto	u285_25
  6380  0BF9  3001               	movlw	1
  6381  0BFA  02E0               	subwf	___ftmul@cntr,f
  6382  0BFB  1D03               	btfss	3,2
  6383  0BFC  2BD9               	goto	i1l2455
  6384  0BFD  085D               	movf	___ftmul@f3_as_product,w
  6385  0BFE  00F0               	movwf	___ftpack@arg
  6386  0BFF  085E               	movf	___ftmul@f3_as_product+1,w
  6387  0C00  00F1               	movwf	___ftpack@arg+1
  6388  0C01  085F               	movf	___ftmul@f3_as_product+2,w
  6389  0C02  00F2               	movwf	___ftpack@arg+2
  6390  0C03  085C               	movf	___ftmul@exp,w
  6391  0C04  00D8               	movwf	??___ftmul
  6392  0C05  0858               	movf	??___ftmul,w
  6393  0C06  00F3               	movwf	___ftpack@exp
  6394  0C07  0861               	movf	___ftmul@sign,w
  6395  0C08  00D9               	movwf	??___ftmul+1
  6396  0C09  0859               	movf	??___ftmul+1,w
  6397  0C0A  00F4               	movwf	___ftpack@sign
  6398  0C0B  160A  118A  25A2   	fcall	___ftpack
  6399  0C0E  0870               	movf	?___ftpack,w
  6400  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  6401  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  6402  0C11  00D2               	movwf	?___ftmul
  6403  0C12  0871               	movf	?___ftpack+1,w
  6404  0C13  00D3               	movwf	?___ftmul+1
  6405  0C14  0872               	movf	?___ftpack+2,w
  6406  0C15  00D4               	movwf	?___ftmul+2
  6407  0C16  0008               	return
  6408  0C17                     __end_of___ftmul:	
  6409                           
  6410                           	psect	text36
  6411  13E7                     __ptext36:	
  6412 ;; *************** function ___awtoft *****************
  6413 ;; Defined at:
  6414 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  c               2    8[COMMON] int 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  sign            1   13[COMMON] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  3    8[COMMON] float 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, pclath, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6428 ;;      Params:         3       0       0       0       0
  6429 ;;      Locals:         1       0       0       0       0
  6430 ;;      Temps:          2       0       0       0       0
  6431 ;;      Totals:         6       0       0       0       0
  6432 ;;Total ram usage:        6 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    1
  6435 ;; This function calls:
  6436 ;;		___ftpack
  6437 ;; This function is called by:
  6438 ;;		_Fuzzy
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function ___awtoft
  6444  13E7                     ___awtoft:	
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6448  13E7  01FD               	clrf	___awtoft@sign
  6449  13E8  1FF9               	btfss	___awtoft@c+1,7
  6450  13E9  2BF1               	goto	i1l2415
  6451  13EA  09F8               	comf	___awtoft@c,f
  6452  13EB  09F9               	comf	___awtoft@c+1,f
  6453  13EC  0AF8               	incf	___awtoft@c,f
  6454  13ED  1903               	skipnz
  6455  13EE  0AF9               	incf	___awtoft@c+1,f
  6456  13EF  01FD               	clrf	___awtoft@sign
  6457  13F0  0AFD               	incf	___awtoft@sign,f
  6458  13F1                     i1l2415:	
  6459  13F1  0878               	movf	___awtoft@c,w
  6460  13F2  00F0               	movwf	___ftpack@arg
  6461  13F3  0879               	movf	___awtoft@c+1,w
  6462  13F4  00F1               	movwf	___ftpack@arg+1
  6463  13F5  01F2               	clrf	___ftpack@arg+2
  6464  13F6  308E               	movlw	142
  6465  13F7  00FB               	movwf	??___awtoft
  6466  13F8  087B               	movf	??___awtoft,w
  6467  13F9  00F3               	movwf	___ftpack@exp
  6468  13FA  087D               	movf	___awtoft@sign,w
  6469  13FB  00FC               	movwf	??___awtoft+1
  6470  13FC  087C               	movf	??___awtoft+1,w
  6471  13FD  00F4               	movwf	___ftpack@sign
  6472  13FE  160A  118A  25A2   	fcall	___ftpack
  6473  1401  0870               	movf	?___ftpack,w
  6474  1402  00F8               	movwf	?___awtoft
  6475  1403  0871               	movf	?___ftpack+1,w
  6476  1404  00F9               	movwf	?___awtoft+1
  6477  1405  0872               	movf	?___ftpack+2,w
  6478  1406  00FA               	movwf	?___awtoft+2
  6479  1407  0008               	return
  6480  1408                     __end_of___awtoft:	
  6481                           
  6482                           	psect	text37
  6483  15A2                     __ptext37:	
  6484 ;; *************** function ___ftpack *****************
  6485 ;; Defined at:
  6486 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  arg             3    0[COMMON] unsigned um
  6489 ;;  exp             1    3[COMMON] unsigned char 
  6490 ;;  sign            1    4[COMMON] unsigned char 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  3    0[COMMON] float 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         5       0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0
  6504 ;;      Temps:          3       0       0       0       0
  6505 ;;      Totals:         8       0       0       0       0
  6506 ;;Total ram usage:        8 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		___awtoft
  6512 ;;		___ftadd
  6513 ;;		___ftdiv
  6514 ;;		___ftmul
  6515 ;;		___lwtoft
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           
  6520                           ;psect for function ___ftpack
  6521  15A2                     ___ftpack:	
  6522                           
  6523                           ;incstack = 0
  6524                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6525  15A2  0873               	movf	___ftpack@exp,w
  6526  15A3  1903               	btfsc	3,2
  6527  15A4  2DAA               	goto	i1l2107
  6528  15A5  0872               	movf	___ftpack@arg+2,w
  6529  15A6  0471               	iorwf	___ftpack@arg+1,w
  6530  15A7  0470               	iorwf	___ftpack@arg,w
  6531  15A8  1D03               	skipz
  6532  15A9  2DBD               	goto	i1l2113
  6533  15AA                     i1l2107:	
  6534  15AA  3000               	movlw	0
  6535  15AB  00F0               	movwf	?___ftpack
  6536  15AC  3000               	movlw	0
  6537  15AD  00F1               	movwf	?___ftpack+1
  6538  15AE  3000               	movlw	0
  6539  15AF  00F2               	movwf	?___ftpack+2
  6540  15B0  0008               	return
  6541  15B1                     i1l2111:	
  6542  15B1  3001               	movlw	1
  6543  15B2  00F5               	movwf	??___ftpack
  6544  15B3  0875               	movf	??___ftpack,w
  6545  15B4  07F3               	addwf	___ftpack@exp,f
  6546  15B5  3001               	movlw	1
  6547  15B6                     u198_25:	
  6548  15B6  1003               	clrc
  6549  15B7  0CF2               	rrf	___ftpack@arg+2,f
  6550  15B8  0CF1               	rrf	___ftpack@arg+1,f
  6551  15B9  0CF0               	rrf	___ftpack@arg,f
  6552  15BA  3EFF               	addlw	-1
  6553  15BB  1D03               	skipz
  6554  15BC  2DB6               	goto	u198_25
  6555  15BD                     i1l2113:	
  6556  15BD  30FE               	movlw	254
  6557  15BE  0572               	andwf	___ftpack@arg+2,w
  6558  15BF  1903               	btfsc	3,2
  6559  15C0  2DD8               	goto	i1l729
  6560  15C1  2DB1               	goto	i1l2111
  6561  15C2                     i1l2115:	
  6562  15C2  3001               	movlw	1
  6563  15C3  00F5               	movwf	??___ftpack
  6564  15C4  0875               	movf	??___ftpack,w
  6565  15C5  07F3               	addwf	___ftpack@exp,f
  6566  15C6  3001               	movlw	1
  6567  15C7  07F0               	addwf	___ftpack@arg,f
  6568  15C8  3000               	movlw	0
  6569  15C9  1803               	skipnc
  6570  15CA  3001               	movlw	1
  6571  15CB  07F1               	addwf	___ftpack@arg+1,f
  6572  15CC  3000               	movlw	0
  6573  15CD  1803               	skipnc
  6574  15CE  3001               	movlw	1
  6575  15CF  07F2               	addwf	___ftpack@arg+2,f
  6576  15D0  3001               	movlw	1
  6577  15D1                     u200_25:	
  6578  15D1  1003               	clrc
  6579  15D2  0CF2               	rrf	___ftpack@arg+2,f
  6580  15D3  0CF1               	rrf	___ftpack@arg+1,f
  6581  15D4  0CF0               	rrf	___ftpack@arg,f
  6582  15D5  3EFF               	addlw	-1
  6583  15D6  1D03               	skipz
  6584  15D7  2DD1               	goto	u200_25
  6585  15D8                     i1l729:	
  6586  15D8  30FF               	movlw	255
  6587  15D9  0572               	andwf	___ftpack@arg+2,w
  6588  15DA  1903               	btfsc	3,2
  6589  15DB  2DE7               	goto	i1l2123
  6590  15DC  2DC2               	goto	i1l2115
  6591  15DD                     i1l2121:	
  6592  15DD  3001               	movlw	1
  6593  15DE  02F3               	subwf	___ftpack@exp,f
  6594  15DF  3001               	movlw	1
  6595  15E0                     u202_25:	
  6596  15E0  1003               	clrc
  6597  15E1  0DF0               	rlf	___ftpack@arg,f
  6598  15E2  0DF1               	rlf	___ftpack@arg+1,f
  6599  15E3  0DF2               	rlf	___ftpack@arg+2,f
  6600  15E4  3EFF               	addlw	-1
  6601  15E5  1D03               	skipz
  6602  15E6  2DE0               	goto	u202_25
  6603  15E7                     i1l2123:	
  6604  15E7  1FF1               	btfss	___ftpack@arg+1,7
  6605  15E8  2DDD               	goto	i1l2121
  6606  15E9  1873               	btfsc	___ftpack@exp,0
  6607  15EA  2DF1               	goto	i1l735
  6608  15EB  30FF               	movlw	255
  6609  15EC  05F0               	andwf	___ftpack@arg,f
  6610  15ED  307F               	movlw	127
  6611  15EE  05F1               	andwf	___ftpack@arg+1,f
  6612  15EF  30FF               	movlw	255
  6613  15F0  05F2               	andwf	___ftpack@arg+2,f
  6614  15F1                     i1l735:	
  6615  15F1  1003               	clrc
  6616  15F2  0CF3               	rrf	___ftpack@exp,f
  6617  15F3  0873               	movf	___ftpack@exp,w
  6618  15F4  00F5               	movwf	??___ftpack
  6619  15F5  01F6               	clrf	??___ftpack+1
  6620  15F6  01F7               	clrf	??___ftpack+2
  6621  15F7  3010               	movlw	16
  6622  15F8                     u205_25:	
  6623  15F8  1003               	clrc
  6624  15F9  0DF5               	rlf	??___ftpack,f
  6625  15FA  0DF6               	rlf	??___ftpack+1,f
  6626  15FB  0DF7               	rlf	??___ftpack+2,f
  6627  15FC  3EFF               	addlw	-1
  6628  15FD  1D03               	skipz
  6629  15FE  2DF8               	goto	u205_25
  6630  15FF  0875               	movf	??___ftpack,w
  6631  1600  04F0               	iorwf	___ftpack@arg,f
  6632  1601  0876               	movf	??___ftpack+1,w
  6633  1602  04F1               	iorwf	___ftpack@arg+1,f
  6634  1603  0877               	movf	??___ftpack+2,w
  6635  1604  04F2               	iorwf	___ftpack@arg+2,f
  6636  1605  0874               	movf	___ftpack@sign,w
  6637  1606  1903               	btfsc	3,2
  6638  1607  0008               	return
  6639  1608  17F2               	bsf	___ftpack@arg+2,7
  6640  1609  0008               	return
  6641  160A                     __end_of___ftpack:	
  6642  007E                     btemp	set	126	;btemp
  6643  007E                     wtemp	set	126
  6644  007E                     wtemp0	set	126
  6645  0080                     wtemp1	set	128
  6646  0082                     wtemp2	set	130
  6647  0084                     wtemp3	set	132
  6648  0086                     wtemp4	set	134
  6649  0088                     wtemp5	set	136
  6650  007F                     wtemp6	set	127
  6651  007E                     ttemp	set	126
  6652  007E                     ttemp0	set	126
  6653  0081                     ttemp1	set	129
  6654  0084                     ttemp2	set	132
  6655  0087                     ttemp3	set	135
  6656  007F                     ttemp4	set	127
  6657  007E                     ltemp	set	126
  6658  007E                     ltemp0	set	126
  6659  0082                     ltemp1	set	130
  6660  0086                     ltemp2	set	134
  6661  0080                     ltemp3	set	128
  6662                           
  6663                           	psect	text22_split_1
  6664  16EC                     L11:	
  6665  16EC  01F9               	clrf	___awtoft@c+1
  6666  16ED  07F9               	addwf	___awtoft@c+1,f
  6667  16EE  0870               	movf	?_abs,w
  6668  16EF  01F8               	clrf	___awtoft@c
  6669  16F0  07F8               	addwf	___awtoft@c,f
  6670  16F1  160A  118A  23E7  160A  118A  	fcall	___awtoft
  6671  16F6  0878               	movf	?___awtoft,w
  6672  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  6673  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  6674  16F9  00A0               	movwf	minimo@a
  6675  16FA  0879               	movf	?___awtoft+1,w
  6676  16FB  00A1               	movwf	minimo@a+1
  6677  16FC  087A               	movf	?___awtoft+2,w
  6678  16FD  00A2               	movwf	minimo@a+2
  6679  16FE  120A  118A  27E2  160A  118A  	fcall	_minimo
  6680  1703  1283               	bcf	3,5	;RP0=0, select bank0
  6681  1704  1303               	bcf	3,6	;RP1=0, select bank0
  6682  1705  0820               	movf	?_minimo,w
  6683  1706  00A6               	movwf	maximo@a
  6684  1707  0821               	movf	?_minimo+1,w
  6685  1708  00A7               	movwf	maximo@a+1
  6686  1709  0822               	movf	?_minimo+2,w
  6687  170A  00A8               	movwf	maximo@a+2
  6688  170B  160A  118A  2389  160A  118A  	fcall	_maximo
  6689  1710  1283               	bcf	3,5	;RP0=0, select bank0
  6690  1711  1303               	bcf	3,6	;RP1=0, select bank0
  6691  1712  0826               	movf	?_maximo,w
  6692  1713  00AC               	movwf	___fttol@f1
  6693  1714  0827               	movf	?_maximo+1,w
  6694  1715  00AD               	movwf	___fttol@f1+1
  6695  1716  0828               	movf	?_maximo+2,w
  6696  1717  00AE               	movwf	___fttol@f1+2
  6697  1718  160A  118A  2772  160A  118A  	fcall	___fttol
  6698  171D  1283               	bcf	3,5	;RP0=0, select bank0
  6699  171E  1303               	bcf	3,6	;RP1=0, select bank0
  6700  171F  082D               	movf	?___fttol+1,w
  6701  1720  1683               	bsf	3,5	;RP0=1, select bank1
  6702  1721  1303               	bcf	3,6	;RP1=0, select bank1
  6703  1722  01B3               	clrf	(Fuzzy@delta+1)^(0+128)
  6704  1723  07B3               	addwf	(Fuzzy@delta+1)^(0+128),f
  6705  1724  1283               	bcf	3,5	;RP0=0, select bank0
  6706  1725  1303               	bcf	3,6	;RP1=0, select bank0
  6707  1726  082C               	movf	?___fttol,w
  6708  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6709  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6710  1729  01B2               	clrf	Fuzzy@delta^(0+128)
  6711  172A  07B2               	addwf	Fuzzy@delta^(0+128),f
  6712                           
  6713                           ;main.c: 189: float x = 0;
  6714  172B  3000               	movlw	0
  6715  172C  00BF               	movwf	Fuzzy@x^(0+128)
  6716  172D  3000               	movlw	0
  6717  172E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6718  172F  3000               	movlw	0
  6719  1730  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6720                           
  6721                           ;main.c: 190: float rule = 0;
  6722  1731  3000               	movlw	0
  6723  1732  00BC               	movwf	Fuzzy@rule^(0+128)
  6724  1733  3000               	movlw	0
  6725  1734  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6726  1735  3000               	movlw	0
  6727  1736  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6728                           
  6729                           ;main.c: 193: if (deltaV <= 100) {
  6730  1737  3000               	movlw	0
  6731  1738  0254               	subwf	(_deltaV+1)^(0+128),w
  6732  1739  3065               	movlw	101
  6733  173A  1903               	skipnz
  6734  173B  0253               	subwf	_deltaV^(0+128),w
  6735  173C  120A  118A  1803   	skipnc
  6736  173F  2875               	goto	i1l3873
  6737                           
  6738                           ;main.c: 195: rule = trapmf(deltaV, -1, 0, 1, 100);
  6739  1740  0854               	movf	(_deltaV+1)^(0+128),w
  6740  1741  01F9               	clrf	___lwtoft@c+1
  6741  1742  07F9               	addwf	___lwtoft@c+1,f
  6742  1743  0853               	movf	_deltaV^(0+128),w
  6743  1744  01F8               	clrf	___lwtoft@c
  6744  1745  07F8               	addwf	___lwtoft@c,f
  6745  1746  160A  118A  22F8  160A  118A  	fcall	___lwtoft
  6746  174B  0878               	movf	?___lwtoft,w
  6747  174C  1283               	bcf	3,5	;RP0=0, select bank0
  6748  174D  1303               	bcf	3,6	;RP1=0, select bank0
  6749  174E  00C0               	movwf	trapmf@x
  6750  174F  0879               	movf	?___lwtoft+1,w
  6751  1750  00C1               	movwf	trapmf@x+1
  6752  1751  087A               	movf	?___lwtoft+2,w
  6753  1752  00C2               	movwf	trapmf@x+2
  6754  1753  3000               	movlw	0
  6755  1754  00C3               	movwf	trapmf@a
  6756  1755  3080               	movlw	128
  6757  1756  00C4               	movwf	trapmf@a+1
  6758  1757  30BF               	movlw	191
  6759  1758  00C5               	movwf	trapmf@a+2
  6760  1759  3000               	movlw	0
  6761  175A  00C6               	movwf	trapmf@b
  6762  175B  3000               	movlw	0
  6763  175C  00C7               	movwf	trapmf@b+1
  6764  175D  3000               	movlw	0
  6765  175E  00C8               	movwf	trapmf@b+2
  6766  175F  3000               	movlw	0
  6767  1760  00C9               	movwf	trapmf@c
  6768  1761  3080               	movlw	128
  6769  1762  00CA               	movwf	trapmf@c+1
  6770  1763  303F               	movlw	63
  6771  1764  00CB               	movwf	trapmf@c+2
  6772  1765  3000               	movlw	0
  6773  1766  00CC               	movwf	trapmf@d
  6774  1767  30C8               	movlw	200
  6775  1768  00CD               	movwf	trapmf@d+1
  6776  1769  3042               	movlw	66
  6777  176A  00CE               	movwf	trapmf@d+2
  6778  176B  120A  158A  2520   	fcall	_trapmf
  6779  176E  1283               	bcf	3,5	;RP0=0, select bank0
  6780  176F  120A  158A  2932   	ljmp	L12
  6781                           
  6782                           	psect	text22_split_2
  6783  0932                     L12:	
  6784  0932  1303               	bcf	3,6	;RP1=0, select bank0
  6785  0933  0840               	movf	?_trapmf,w
  6786  0934  1683               	bsf	3,5	;RP0=1, select bank1
  6787  0935  1303               	bcf	3,6	;RP1=0, select bank1
  6788  0936  00BC               	movwf	Fuzzy@rule^(0+128)
  6789  0937  1283               	bcf	3,5	;RP0=0, select bank0
  6790  0938  1303               	bcf	3,6	;RP1=0, select bank0
  6791  0939  0841               	movf	?_trapmf+1,w
  6792  093A  1683               	bsf	3,5	;RP0=1, select bank1
  6793  093B  1303               	bcf	3,6	;RP1=0, select bank1
  6794  093C  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  6795  093D  1283               	bcf	3,5	;RP0=0, select bank0
  6796  093E  1303               	bcf	3,6	;RP1=0, select bank0
  6797  093F  0842               	movf	?_trapmf+2,w
  6798  0940  1683               	bsf	3,5	;RP0=1, select bank1
  6799  0941  1303               	bcf	3,6	;RP1=0, select bank1
  6800  0942  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  6801                           
  6802                           ;main.c: 197: x = 0;
  6803  0943  3000               	movlw	0
  6804  0944  00BF               	movwf	Fuzzy@x^(0+128)
  6805  0945  3000               	movlw	0
  6806  0946  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6807  0947  3000               	movlw	0
  6808  0948  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6809                           
  6810                           ;main.c: 198: for (int a = 0; a <= 15; a++) {
  6811  0949  01AA               	clrf	Fuzzy@a^(0+128)
  6812  094A  01AB               	clrf	(Fuzzy@a+1)^(0+128)
  6813  094B  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6814  094C  3A80               	xorlw	128
  6815  094D  00FF               	movwf	127
  6816  094E  3080               	movlw	128
  6817  094F  027F               	subwf	127,w
  6818  0950  1D03               	skipz
  6819  0951  2954               	goto	u523_25
  6820  0952  3010               	movlw	16
  6821  0953  022A               	subwf	Fuzzy@a^(0+128),w
  6822  0954                     u523_25:	
  6823  0954  1803               	btfsc	3,0
  6824  0955  29D3               	goto	L15
  6825  0956                     i1l3863:	
  6826                           
  6827                           ;main.c: 199: rulepequeno = trapmf(x, -1, 0, 0, 5);
  6828  0956  1683               	bsf	3,5	;RP0=1, select bank1
  6829  0957  1303               	bcf	3,6	;RP1=0, select bank1
  6830  0958  083F               	movf	Fuzzy@x^(0+128),w
  6831  0959  1283               	bcf	3,5	;RP0=0, select bank0
  6832  095A  1303               	bcf	3,6	;RP1=0, select bank0
  6833  095B  00C0               	movwf	trapmf@x
  6834  095C  1683               	bsf	3,5	;RP0=1, select bank1
  6835  095D  1303               	bcf	3,6	;RP1=0, select bank1
  6836  095E  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6837  095F  1283               	bcf	3,5	;RP0=0, select bank0
  6838  0960  1303               	bcf	3,6	;RP1=0, select bank0
  6839  0961  00C1               	movwf	trapmf@x+1
  6840  0962  1683               	bsf	3,5	;RP0=1, select bank1
  6841  0963  1303               	bcf	3,6	;RP1=0, select bank1
  6842  0964  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6843  0965  1283               	bcf	3,5	;RP0=0, select bank0
  6844  0966  1303               	bcf	3,6	;RP1=0, select bank0
  6845  0967  00C2               	movwf	trapmf@x+2
  6846  0968  3000               	movlw	0
  6847  0969  00C3               	movwf	trapmf@a
  6848  096A  3080               	movlw	128
  6849  096B  00C4               	movwf	trapmf@a+1
  6850  096C  30BF               	movlw	191
  6851  096D  00C5               	movwf	trapmf@a+2
  6852  096E  3000               	movlw	0
  6853  096F  00C6               	movwf	trapmf@b
  6854  0970  3000               	movlw	0
  6855  0971  00C7               	movwf	trapmf@b+1
  6856  0972  3000               	movlw	0
  6857  0973  00C8               	movwf	trapmf@b+2
  6858  0974  3000               	movlw	0
  6859  0975  00C9               	movwf	trapmf@c
  6860  0976  3000               	movlw	0
  6861  0977  00CA               	movwf	trapmf@c+1
  6862  0978  3000               	movlw	0
  6863  0979  00CB               	movwf	trapmf@c+2
  6864  097A  3000               	movlw	0
  6865  097B  00CC               	movwf	trapmf@d
  6866  097C  30A0               	movlw	160
  6867  097D  00CD               	movwf	trapmf@d+1
  6868  097E  3040               	movlw	64
  6869  097F  00CE               	movwf	trapmf@d+2
  6870  0980  120A  158A  2520  120A  158A  	fcall	_trapmf
  6871  0985  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0986  1303               	bcf	3,6	;RP1=0, select bank0
  6873  0987  0840               	movf	?_trapmf,w
  6874  0988  1683               	bsf	3,5	;RP0=1, select bank1
  6875  0989  1303               	bcf	3,6	;RP1=0, select bank1
  6876  098A  00C8               	movwf	_rulepequeno^(0+128)
  6877  098B  1283               	bcf	3,5	;RP0=0, select bank0
  6878  098C  1303               	bcf	3,6	;RP1=0, select bank0
  6879  098D  0841               	movf	?_trapmf+1,w
  6880  098E  1683               	bsf	3,5	;RP0=1, select bank1
  6881  098F  1303               	bcf	3,6	;RP1=0, select bank1
  6882  0990  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6883  0991  1283               	bcf	3,5	;RP0=0, select bank0
  6884  0992  1303               	bcf	3,6	;RP1=0, select bank0
  6885  0993  0842               	movf	?_trapmf+2,w
  6886  0994  1683               	bsf	3,5	;RP0=1, select bank1
  6887  0995  1303               	bcf	3,6	;RP1=0, select bank1
  6888  0996  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6889                           
  6890                           ;main.c: 200: if (rulepequeno >= rule) {
  6891  0997  0848               	movf	_rulepequeno^(0+128),w
  6892  0998  00F0               	movwf	___ftge@ff1
  6893  0999  0849               	movf	(_rulepequeno+1)^(0+128),w
  6894  099A  00F1               	movwf	___ftge@ff1+1
  6895  099B  084A               	movf	(_rulepequeno+2)^(0+128),w
  6896  099C  00F2               	movwf	___ftge@ff1+2
  6897  099D  083C               	movf	Fuzzy@rule^(0+128),w
  6898  099E  00F3               	movwf	___ftge@ff2
  6899  099F  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6900  09A0  00F4               	movwf	___ftge@ff2+1
  6901  09A1  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6902  09A2  00F5               	movwf	___ftge@ff2+2
  6903  09A3  160A  118A  2545  120A  158A  	fcall	___ftge
  6904  09A8  1C03               	btfss	3,0
  6905  09A9  29B2               	goto	i1l3867
  6906                           
  6907                           ;main.c: 201: rulepequeno = rule;
  6908  09AA  1683               	bsf	3,5	;RP0=1, select bank1
  6909  09AB  1303               	bcf	3,6	;RP1=0, select bank1
  6910  09AC  083C               	movf	Fuzzy@rule^(0+128),w
  6911  09AD  00C8               	movwf	_rulepequeno^(0+128)
  6912  09AE  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  6913  09AF  00C9               	movwf	(_rulepequeno+1)^(0+128)
  6914  09B0  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  6915  09B1  00CA               	movwf	(_rulepequeno+2)^(0+128)
  6916  09B2                     i1l3867:	
  6917                           
  6918                           ;main.c: 202: }
  6919                           ;main.c: 204: x += 1;
  6920  09B2  3000               	movlw	0
  6921  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  6922  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  6923  09B5  00A3               	movwf	___ftadd@f1
  6924  09B6  3080               	movlw	128
  6925  09B7  00A4               	movwf	___ftadd@f1+1
  6926  09B8  303F               	movlw	63
  6927  09B9  00A5               	movwf	___ftadd@f1+2
  6928  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  6929  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  6930  09BC  083F               	movf	Fuzzy@x^(0+128),w
  6931  09BD  1283               	bcf	3,5	;RP0=0, select bank0
  6932  09BE  1303               	bcf	3,6	;RP1=0, select bank0
  6933  09BF  00A6               	movwf	___ftadd@f2
  6934  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  6935  09C1  1303               	bcf	3,6	;RP1=0, select bank1
  6936  09C2  0840               	movf	(Fuzzy@x+1)^(0+128),w
  6937  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  6938  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  6939  09C5  00A7               	movwf	___ftadd@f2+1
  6940  09C6  1683               	bsf	3,5	;RP0=1, select bank1
  6941  09C7  1303               	bcf	3,6	;RP1=0, select bank1
  6942  09C8  0841               	movf	(Fuzzy@x+2)^(0+128),w
  6943  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  6944  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  6945  09CB  00A8               	movwf	___ftadd@f2+2
  6946  09CC  120A  158A  2417   	fcall	___ftadd
  6947  09CF  1283               	bcf	3,5	;RP0=0, select bank0
  6948  09D0  120A  118A  2853   	ljmp	L13
  6949  09D3                     L15:	
  6950  09D3  120A  118A  2875   	ljmp	i1l3873
  6951                           
  6952                           	psect	text22_split_3
  6953  0053                     L13:	
  6954  0053  1303               	bcf	3,6	;RP1=0, select bank0
  6955  0054  0823               	movf	?___ftadd,w
  6956  0055  1683               	bsf	3,5	;RP0=1, select bank1
  6957  0056  1303               	bcf	3,6	;RP1=0, select bank1
  6958  0057  00BF               	movwf	Fuzzy@x^(0+128)
  6959  0058  1283               	bcf	3,5	;RP0=0, select bank0
  6960  0059  1303               	bcf	3,6	;RP1=0, select bank0
  6961  005A  0824               	movf	?___ftadd+1,w
  6962  005B  1683               	bsf	3,5	;RP0=1, select bank1
  6963  005C  1303               	bcf	3,6	;RP1=0, select bank1
  6964  005D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  6965  005E  1283               	bcf	3,5	;RP0=0, select bank0
  6966  005F  1303               	bcf	3,6	;RP1=0, select bank0
  6967  0060  0825               	movf	?___ftadd+2,w
  6968  0061  1683               	bsf	3,5	;RP0=1, select bank1
  6969  0062  1303               	bcf	3,6	;RP1=0, select bank1
  6970  0063  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  6971  0064  3001               	movlw	1
  6972  0065  07AA               	addwf	Fuzzy@a^(0+128),f
  6973  0066  1803               	skipnc
  6974  0067  0AAB               	incf	(Fuzzy@a+1)^(0+128),f
  6975  0068  3000               	movlw	0
  6976  0069  07AB               	addwf	(Fuzzy@a+1)^(0+128),f
  6977  006A  082B               	movf	(Fuzzy@a+1)^(0+128),w
  6978  006B  3A80               	xorlw	128
  6979  006C  00FF               	movwf	127
  6980  006D  3080               	movlw	128
  6981  006E  027F               	subwf	127,w
  6982  006F  1D03               	skipz
  6983  0070  2873               	goto	u525_25
  6984  0071  3010               	movlw	16
  6985  0072  022A               	subwf	Fuzzy@a^(0+128),w
  6986  0073                     u525_25:	
  6987  0073  1C03               	skipc
  6988  0074  2FDF               	goto	L16
  6989  0075                     i1l3873:	
  6990                           
  6991                           ;main.c: 205: }
  6992                           ;main.c: 206: }
  6993                           ;main.c: 209: if (deltaV >= 100 && deltaV <= 1001 && delta <= 200)
  6994  0075  3000               	movlw	0
  6995  0076  1683               	bsf	3,5	;RP0=1, select bank1
  6996  0077  1303               	bcf	3,6	;RP1=0, select bank1
  6997  0078  0254               	subwf	(_deltaV+1)^(0+128),w
  6998  0079  3064               	movlw	100
  6999  007A  1903               	skipnz
  7000  007B  0253               	subwf	_deltaV^(0+128),w
  7001  007C  1C03               	skipc
  7002  007D  2A0C               	goto	i1l3899
  7003  007E  3003               	movlw	3
  7004  007F  0254               	subwf	(_deltaV+1)^(0+128),w
  7005  0080  30EA               	movlw	234
  7006  0081  1903               	skipnz
  7007  0082  0253               	subwf	_deltaV^(0+128),w
  7008  0083  1803               	skipnc
  7009  0084  2A0C               	goto	i1l3899
  7010  0085  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7011  0086  3A80               	xorlw	128
  7012  0087  00FF               	movwf	127
  7013  0088  3080               	movlw	128
  7014  0089  027F               	subwf	127,w
  7015  008A  1D03               	skipz
  7016  008B  288E               	goto	u528_25
  7017  008C  30C9               	movlw	201
  7018  008D  0232               	subwf	Fuzzy@delta^(0+128),w
  7019  008E                     u528_25:	
  7020  008E  1803               	skipnc
  7021  008F  2A0C               	goto	i1l3899
  7022                           
  7023                           ;main.c: 210: {
  7024                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7025  0090  3000               	movlw	0
  7026  0091  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0092  1303               	bcf	3,6	;RP1=0, select bank0
  7028  0093  00CC               	movwf	trapmf@d
  7029  0094  3048               	movlw	72
  7030  0095  00CD               	movwf	trapmf@d+1
  7031  0096  3043               	movlw	67
  7032  0097  00CE               	movwf	trapmf@d+2
  7033  0098  3000               	movlw	0
  7034  0099  00C9               	movwf	trapmf@c
  7035  009A  3080               	movlw	128
  7036  009B  00CA               	movwf	trapmf@c+1
  7037  009C  303F               	movlw	63
  7038  009D  00CB               	movwf	trapmf@c+2
  7039  009E  3000               	movlw	0
  7040  009F  00C6               	movwf	trapmf@b
  7041  00A0  3000               	movlw	0
  7042  00A1  00C7               	movwf	trapmf@b+1
  7043  00A2  3000               	movlw	0
  7044  00A3  00C8               	movwf	trapmf@b+2
  7045  00A4  3000               	movlw	0
  7046  00A5  00C3               	movwf	trapmf@a
  7047  00A6  3080               	movlw	128
  7048  00A7  00C4               	movwf	trapmf@a+1
  7049  00A8  30BF               	movlw	191
  7050  00A9  00C5               	movwf	trapmf@a+2
  7051  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  7052  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  7053  00AC  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7054  00AD  01F9               	clrf	___awtoft@c+1
  7055  00AE  07F9               	addwf	___awtoft@c+1,f
  7056  00AF  0832               	movf	Fuzzy@delta^(0+128),w
  7057  00B0  01F8               	clrf	___awtoft@c
  7058  00B1  07F8               	addwf	___awtoft@c,f
  7059  00B2  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7060  00B7  0878               	movf	?___awtoft,w
  7061  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  7062  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  7063  00BA  00C0               	movwf	trapmf@x
  7064  00BB  0879               	movf	?___awtoft+1,w
  7065  00BC  00C1               	movwf	trapmf@x+1
  7066  00BD  087A               	movf	?___awtoft+2,w
  7067  00BE  00C2               	movwf	trapmf@x+2
  7068  00BF  120A  158A  2520  120A  118A  	fcall	_trapmf
  7069  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  7070  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  7071  00C6  0840               	movf	?_trapmf,w
  7072  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  7073  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  7074  00C9  00A0               	movwf	_Fuzzy$1692^(0+128)
  7075  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  7076  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  7077  00CC  0841               	movf	?_trapmf+1,w
  7078  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  7079  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  7080  00CF  00A1               	movwf	(_Fuzzy$1692+1)^(0+128)
  7081  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  7082  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  7083  00D2  0842               	movf	?_trapmf+2,w
  7084  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  7085  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  7086  00D5  00A2               	movwf	(_Fuzzy$1692+2)^(0+128)
  7087                           
  7088                           ;main.c: 210: {
  7089                           ;main.c: 212: rule = trapmf(deltaV, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 1, 2
      +                          00));
  7090  00D6  30C0               	movlw	192
  7091  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  7092  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  7093  00D9  00CC               	movwf	trapmf@d
  7094  00DA  30C1               	movlw	193
  7095  00DB  00CD               	movwf	trapmf@d+1
  7096  00DC  3044               	movlw	68
  7097  00DD  00CE               	movwf	trapmf@d+2
  7098  00DE  3000               	movlw	0
  7099  00DF  00C9               	movwf	trapmf@c
  7100  00E0  3048               	movlw	72
  7101  00E1  00CA               	movwf	trapmf@c+1
  7102  00E2  3044               	movlw	68
  7103  00E3  00CB               	movwf	trapmf@c+2
  7104  00E4  3000               	movlw	0
  7105  00E5  00C6               	movwf	trapmf@b
  7106  00E6  3048               	movlw	72
  7107  00E7  00C7               	movwf	trapmf@b+1
  7108  00E8  3044               	movlw	68
  7109  00E9  00C8               	movwf	trapmf@b+2
  7110  00EA  3000               	movlw	0
  7111  00EB  00C3               	movwf	trapmf@a
  7112  00EC  3048               	movlw	72
  7113  00ED  00C4               	movwf	trapmf@a+1
  7114  00EE  3042               	movlw	66
  7115  00EF  00C5               	movwf	trapmf@a+2
  7116  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  7117  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  7118  00F2  0854               	movf	(_deltaV+1)^(0+128),w
  7119  00F3  01F9               	clrf	___lwtoft@c+1
  7120  00F4  07F9               	addwf	___lwtoft@c+1,f
  7121  00F5  0853               	movf	_deltaV^(0+128),w
  7122  00F6  01F8               	clrf	___lwtoft@c
  7123  00F7  07F8               	addwf	___lwtoft@c,f
  7124  00F8  160A  118A  22F8  120A  118A  	fcall	___lwtoft
  7125  00FD  0878               	movf	?___lwtoft,w
  7126  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  7127  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  7128  0100  00C0               	movwf	trapmf@x
  7129  0101  0879               	movf	?___lwtoft+1,w
  7130  0102  00C1               	movwf	trapmf@x+1
  7131  0103  087A               	movf	?___lwtoft+2,w
  7132  0104  00C2               	movwf	trapmf@x+2
  7133  0105  120A  158A  2520  120A  118A  	fcall	_trapmf
  7134  010A  1283               	bcf	3,5	;RP0=0, select bank0
  7135  010B  1303               	bcf	3,6	;RP1=0, select bank0
  7136  010C  0840               	movf	?_trapmf,w
  7137  010D  00D2               	movwf	___ftmul@f1
  7138  010E  0841               	movf	?_trapmf+1,w
  7139  010F  00D3               	movwf	___ftmul@f1+1
  7140  0110  0842               	movf	?_trapmf+2,w
  7141  0111  00D4               	movwf	___ftmul@f1+2
  7142  0112  3000               	movlw	0
  7143  0113  00A3               	movwf	___ftadd@f1
  7144  0114  3080               	movlw	128
  7145  0115  00A4               	movwf	___ftadd@f1+1
  7146  0116  303F               	movlw	63
  7147  0117  00A5               	movwf	___ftadd@f1+2
  7148  0118  1683               	bsf	3,5	;RP0=1, select bank1
  7149  0119  1303               	bcf	3,6	;RP1=0, select bank1
  7150  011A  0820               	movf	_Fuzzy$1692^(0+128),w
  7151  011B  1283               	bcf	3,5	;RP0=0, select bank0
  7152  011C  1303               	bcf	3,6	;RP1=0, select bank0
  7153  011D  00A0               	movwf	___ftneg@f1
  7154  011E  1683               	bsf	3,5	;RP0=1, select bank1
  7155  011F  1303               	bcf	3,6	;RP1=0, select bank1
  7156  0120  0821               	movf	(_Fuzzy$1692+1)^(0+128),w
  7157  0121  1283               	bcf	3,5	;RP0=0, select bank0
  7158  0122  1303               	bcf	3,6	;RP1=0, select bank0
  7159  0123  00A1               	movwf	___ftneg@f1+1
  7160  0124  1683               	bsf	3,5	;RP0=1, select bank1
  7161  0125  1303               	bcf	3,6	;RP1=0, select bank1
  7162  0126  0822               	movf	(_Fuzzy$1692+2)^(0+128),w
  7163  0127  1283               	bcf	3,5	;RP0=0, select bank0
  7164  0128  1303               	bcf	3,6	;RP1=0, select bank0
  7165  0129  00A2               	movwf	___ftneg@f1+2
  7166  012A  160A  118A  22D1  120A  118A  	fcall	___ftneg
  7167  012F  1283               	bcf	3,5	;RP0=0, select bank0
  7168  0130  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0131  0820               	movf	?___ftneg,w
  7170  0132  00A6               	movwf	___ftadd@f2
  7171  0133  0821               	movf	?___ftneg+1,w
  7172  0134  00A7               	movwf	___ftadd@f2+1
  7173  0135  0822               	movf	?___ftneg+2,w
  7174  0136  00A8               	movwf	___ftadd@f2+2
  7175  0137  120A  158A  2417  120A  118A  	fcall	___ftadd
  7176  013C  1283               	bcf	3,5	;RP0=0, select bank0
  7177  013D  1303               	bcf	3,6	;RP1=0, select bank0
  7178  013E  0823               	movf	?___ftadd,w
  7179  013F  00D5               	movwf	___ftmul@f2
  7180  0140  0824               	movf	?___ftadd+1,w
  7181  0141  00D6               	movwf	___ftmul@f2+1
  7182  0142  0825               	movf	?___ftadd+2,w
  7183  0143  00D7               	movwf	___ftmul@f2+2
  7184  0144  120A  158A  2344  120A  118A  	fcall	___ftmul
  7185  0149  1283               	bcf	3,5	;RP0=0, select bank0
  7186  014A  1303               	bcf	3,6	;RP1=0, select bank0
  7187  014B  0852               	movf	?___ftmul,w
  7188  014C  1683               	bsf	3,5	;RP0=1, select bank1
  7189  014D  1303               	bcf	3,6	;RP1=0, select bank1
  7190  014E  00BC               	movwf	Fuzzy@rule^(0+128)
  7191  014F  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0150  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0151  0853               	movf	?___ftmul+1,w
  7194  0152  1683               	bsf	3,5	;RP0=1, select bank1
  7195  0153  1303               	bcf	3,6	;RP1=0, select bank1
  7196  0154  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7197  0155  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0156  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0157  0854               	movf	?___ftmul+2,w
  7200  0158  1683               	bsf	3,5	;RP0=1, select bank1
  7201  0159  1303               	bcf	3,6	;RP1=0, select bank1
  7202  015A  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7203                           
  7204                           ;main.c: 214: x = 0;
  7205  015B  3000               	movlw	0
  7206  015C  00BF               	movwf	Fuzzy@x^(0+128)
  7207  015D  3000               	movlw	0
  7208  015E  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7209  015F  3000               	movlw	0
  7210  0160  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7211                           
  7212                           ;main.c: 215: for (int a = 0; a <= 15; a++) {
  7213  0161  01AC               	clrf	Fuzzy@a_244^(0+128)
  7214  0162  01AD               	clrf	(Fuzzy@a_244+1)^(0+128)
  7215  0163  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7216  0164  3A80               	xorlw	128
  7217  0165  00FF               	movwf	127
  7218  0166  3080               	movlw	128
  7219  0167  027F               	subwf	127,w
  7220  0168  1D03               	skipz
  7221  0169  296C               	goto	u529_25
  7222  016A  3010               	movlw	16
  7223  016B  022C               	subwf	Fuzzy@a_244^(0+128),w
  7224  016C                     u529_25:	
  7225  016C  1803               	btfsc	3,0
  7226  016D  2A0C               	goto	i1l3899
  7227  016E                     i1l3889:	
  7228                           
  7229                           ;main.c: 216: rulepequeno = trapmf(x, 2, 5, 5, 10);
  7230  016E  1683               	bsf	3,5	;RP0=1, select bank1
  7231  016F  1303               	bcf	3,6	;RP1=0, select bank1
  7232  0170  083F               	movf	Fuzzy@x^(0+128),w
  7233  0171  1283               	bcf	3,5	;RP0=0, select bank0
  7234  0172  1303               	bcf	3,6	;RP1=0, select bank0
  7235  0173  00C0               	movwf	trapmf@x
  7236  0174  1683               	bsf	3,5	;RP0=1, select bank1
  7237  0175  1303               	bcf	3,6	;RP1=0, select bank1
  7238  0176  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7239  0177  1283               	bcf	3,5	;RP0=0, select bank0
  7240  0178  1303               	bcf	3,6	;RP1=0, select bank0
  7241  0179  00C1               	movwf	trapmf@x+1
  7242  017A  1683               	bsf	3,5	;RP0=1, select bank1
  7243  017B  1303               	bcf	3,6	;RP1=0, select bank1
  7244  017C  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7245  017D  1283               	bcf	3,5	;RP0=0, select bank0
  7246  017E  1303               	bcf	3,6	;RP1=0, select bank0
  7247  017F  00C2               	movwf	trapmf@x+2
  7248  0180  3000               	movlw	0
  7249  0181  00C3               	movwf	trapmf@a
  7250  0182  3000               	movlw	0
  7251  0183  00C4               	movwf	trapmf@a+1
  7252  0184  3040               	movlw	64
  7253  0185  00C5               	movwf	trapmf@a+2
  7254  0186  3000               	movlw	0
  7255  0187  00C6               	movwf	trapmf@b
  7256  0188  30A0               	movlw	160
  7257  0189  00C7               	movwf	trapmf@b+1
  7258  018A  3040               	movlw	64
  7259  018B  00C8               	movwf	trapmf@b+2
  7260  018C  3000               	movlw	0
  7261  018D  00C9               	movwf	trapmf@c
  7262  018E  30A0               	movlw	160
  7263  018F  00CA               	movwf	trapmf@c+1
  7264  0190  3040               	movlw	64
  7265  0191  00CB               	movwf	trapmf@c+2
  7266  0192  3000               	movlw	0
  7267  0193  00CC               	movwf	trapmf@d
  7268  0194  3020               	movlw	32
  7269  0195  00CD               	movwf	trapmf@d+1
  7270  0196  3041               	movlw	65
  7271  0197  00CE               	movwf	trapmf@d+2
  7272  0198  120A  158A  2520  120A  118A  	fcall	_trapmf
  7273  019D  1283               	bcf	3,5	;RP0=0, select bank0
  7274  019E  1303               	bcf	3,6	;RP1=0, select bank0
  7275  019F  0840               	movf	?_trapmf,w
  7276  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  7277  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  7278  01A2  00C8               	movwf	_rulepequeno^(0+128)
  7279  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7280  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  7281  01A5  0841               	movf	?_trapmf+1,w
  7282  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  7283  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  7284  01A8  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7285  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7286  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7287  01AB  0842               	movf	?_trapmf+2,w
  7288  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  7289  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  7290  01AE  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7291                           
  7292                           ;main.c: 217: if (rulepequeno >= rule) {
  7293  01AF  0848               	movf	_rulepequeno^(0+128),w
  7294  01B0  00F0               	movwf	___ftge@ff1
  7295  01B1  0849               	movf	(_rulepequeno+1)^(0+128),w
  7296  01B2  00F1               	movwf	___ftge@ff1+1
  7297  01B3  084A               	movf	(_rulepequeno+2)^(0+128),w
  7298  01B4  00F2               	movwf	___ftge@ff1+2
  7299  01B5  083C               	movf	Fuzzy@rule^(0+128),w
  7300  01B6  00F3               	movwf	___ftge@ff2
  7301  01B7  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7302  01B8  00F4               	movwf	___ftge@ff2+1
  7303  01B9  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7304  01BA  00F5               	movwf	___ftge@ff2+2
  7305  01BB  160A  118A  2545  120A  118A  	fcall	___ftge
  7306  01C0  1C03               	btfss	3,0
  7307  01C1  29CA               	goto	i1l3893
  7308                           
  7309                           ;main.c: 218: rulepequeno = rule;
  7310  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  7311  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  7312  01C4  083C               	movf	Fuzzy@rule^(0+128),w
  7313  01C5  00C8               	movwf	_rulepequeno^(0+128)
  7314  01C6  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7315  01C7  00C9               	movwf	(_rulepequeno+1)^(0+128)
  7316  01C8  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7317  01C9  00CA               	movwf	(_rulepequeno+2)^(0+128)
  7318  01CA                     i1l3893:	
  7319                           
  7320                           ;main.c: 219: }
  7321                           ;main.c: 221: x += 1;
  7322  01CA  3000               	movlw	0
  7323  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  7324  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  7325  01CD  00A3               	movwf	___ftadd@f1
  7326  01CE  3080               	movlw	128
  7327  01CF  00A4               	movwf	___ftadd@f1+1
  7328  01D0  303F               	movlw	63
  7329  01D1  00A5               	movwf	___ftadd@f1+2
  7330  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  7331  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  7332  01D4  083F               	movf	Fuzzy@x^(0+128),w
  7333  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7334  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7335  01D7  00A6               	movwf	___ftadd@f2
  7336  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  7337  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  7338  01DA  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7339  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  7340  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  7341  01DD  00A7               	movwf	___ftadd@f2+1
  7342  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  7343  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  7344  01E0  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7345  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  7346  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  7347  01E3  00A8               	movwf	___ftadd@f2+2
  7348  01E4  120A  158A  2417  120A  118A  	fcall	___ftadd
  7349  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  7350  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  7351  01EB  0823               	movf	?___ftadd,w
  7352  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  7353  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  7354  01EE  00BF               	movwf	Fuzzy@x^(0+128)
  7355  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  7356  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  7357  01F1  0824               	movf	?___ftadd+1,w
  7358  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  7359  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  7360  01F4  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7361  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  7362  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  7363  01F7  0825               	movf	?___ftadd+2,w
  7364  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  7365  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  7366  01FA  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7367  01FB  3001               	movlw	1
  7368  01FC  07AC               	addwf	Fuzzy@a_244^(0+128),f
  7369  01FD  1803               	skipnc
  7370  01FE  0AAD               	incf	(Fuzzy@a_244+1)^(0+128),f
  7371  01FF  3000               	movlw	0
  7372  0200  07AD               	addwf	(Fuzzy@a_244+1)^(0+128),f
  7373  0201  082D               	movf	(Fuzzy@a_244+1)^(0+128),w
  7374  0202  3A80               	xorlw	128
  7375  0203  00FF               	movwf	127
  7376  0204  3080               	movlw	128
  7377  0205  027F               	subwf	127,w
  7378  0206  1D03               	skipz
  7379  0207  2A0A               	goto	u531_25
  7380  0208  3010               	movlw	16
  7381  0209  022C               	subwf	Fuzzy@a_244^(0+128),w
  7382  020A                     u531_25:	
  7383  020A  1C03               	skipc
  7384  020B  296E               	goto	i1l3889
  7385  020C                     i1l3899:	
  7386                           
  7387                           ;main.c: 222: }
  7388                           ;main.c: 223: }
  7389                           ;main.c: 226: if (deltaV >= 100 && deltaV <= 1001 && delta >= 201)
  7390  020C  3000               	movlw	0
  7391  020D  1683               	bsf	3,5	;RP0=1, select bank1
  7392  020E  1303               	bcf	3,6	;RP1=0, select bank1
  7393  020F  0254               	subwf	(_deltaV+1)^(0+128),w
  7394  0210  3064               	movlw	100
  7395  0211  1903               	skipnz
  7396  0212  0253               	subwf	_deltaV^(0+128),w
  7397  0213  1C03               	skipc
  7398  0214  2B65               	goto	i1l3925
  7399  0215  3003               	movlw	3
  7400  0216  0254               	subwf	(_deltaV+1)^(0+128),w
  7401  0217  30EA               	movlw	234
  7402  0218  1903               	skipnz
  7403  0219  0253               	subwf	_deltaV^(0+128),w
  7404  021A  1803               	skipnc
  7405  021B  2B65               	goto	i1l3925
  7406  021C  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7407  021D  3A80               	xorlw	128
  7408  021E  00FF               	movwf	127
  7409  021F  3080               	movlw	128
  7410  0220  027F               	subwf	127,w
  7411  0221  1D03               	skipz
  7412  0222  2A25               	goto	u534_25
  7413  0223  30C9               	movlw	201
  7414  0224  0232               	subwf	Fuzzy@delta^(0+128),w
  7415  0225                     u534_25:	
  7416  0225  1C03               	skipc
  7417  0226  2B65               	goto	i1l3925
  7418                           
  7419                           ;main.c: 227: {
  7420                           ;main.c: 229: rule = trapmf(deltaV, 50, 800, 800, 1550) *
  7421                           ;main.c: 230: trapmf(delta, 200, 500, 2000, 2001);
  7422  0227  3020               	movlw	32
  7423  0228  1283               	bcf	3,5	;RP0=0, select bank0
  7424  0229  1303               	bcf	3,6	;RP1=0, select bank0
  7425  022A  00CC               	movwf	trapmf@d
  7426  022B  30FA               	movlw	250
  7427  022C  00CD               	movwf	trapmf@d+1
  7428  022D  3044               	movlw	68
  7429  022E  00CE               	movwf	trapmf@d+2
  7430  022F  3000               	movlw	0
  7431  0230  00C9               	movwf	trapmf@c
  7432  0231  30FA               	movlw	250
  7433  0232  00CA               	movwf	trapmf@c+1
  7434  0233  3044               	movlw	68
  7435  0234  00CB               	movwf	trapmf@c+2
  7436  0235  3000               	movlw	0
  7437  0236  00C6               	movwf	trapmf@b
  7438  0237  30FA               	movlw	250
  7439  0238  00C7               	movwf	trapmf@b+1
  7440  0239  3043               	movlw	67
  7441  023A  00C8               	movwf	trapmf@b+2
  7442  023B  3000               	movlw	0
  7443  023C  00C3               	movwf	trapmf@a
  7444  023D  3048               	movlw	72
  7445  023E  00C4               	movwf	trapmf@a+1
  7446  023F  3043               	movlw	67
  7447  0240  00C5               	movwf	trapmf@a+2
  7448  0241  1683               	bsf	3,5	;RP0=1, select bank1
  7449  0242  1303               	bcf	3,6	;RP1=0, select bank1
  7450  0243  0833               	movf	(Fuzzy@delta+1)^(0+128),w
  7451  0244  01F9               	clrf	___awtoft@c+1
  7452  0245  07F9               	addwf	___awtoft@c+1,f
  7453  0246  0832               	movf	Fuzzy@delta^(0+128),w
  7454  0247  01F8               	clrf	___awtoft@c
  7455  0248  07F8               	addwf	___awtoft@c,f
  7456  0249  160A  118A  23E7  120A  118A  	fcall	___awtoft
  7457  024E  0878               	movf	?___awtoft,w
  7458  024F  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0250  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0251  00C0               	movwf	trapmf@x
  7461  0252  0879               	movf	?___awtoft+1,w
  7462  0253  00C1               	movwf	trapmf@x+1
  7463  0254  087A               	movf	?___awtoft+2,w
  7464  0255  00C2               	movwf	trapmf@x+2
  7465  0256  120A  158A  2520  120A  118A  	fcall	_trapmf
  7466  025B  1283               	bcf	3,5	;RP0=0, select bank0
  7467  025C  1303               	bcf	3,6	;RP1=0, select bank0
  7468  025D  0840               	movf	?_trapmf,w
  7469  025E  00D2               	movwf	___ftmul@f1
  7470  025F  0841               	movf	?_trapmf+1,w
  7471  0260  00D3               	movwf	___ftmul@f1+1
  7472  0261  0842               	movf	?_trapmf+2,w
  7473  0262  00D4               	movwf	___ftmul@f1+2
  7474  0263  30C0               	movlw	192
  7475  0264  00CC               	movwf	trapmf@d
  7476  0265  30C1               	movlw	193
  7477  0266  00CD               	movwf	trapmf@d+1
  7478  0267  3044               	movlw	68
  7479  0268  00CE               	movwf	trapmf@d+2
  7480  0269  3000               	movlw	0
  7481  026A  00C9               	movwf	trapmf@c
  7482  026B  3048               	movlw	72
  7483  026C  00CA               	movwf	trapmf@c+1
  7484  026D  3044               	movlw	68
  7485  026E  00CB               	movwf	trapmf@c+2
  7486  026F  3000               	movlw	0
  7487  0270  00C6               	movwf	trapmf@b
  7488  0271  3048               	movlw	72
  7489  0272  00C7               	movwf	trapmf@b+1
  7490  0273  3044               	movlw	68
  7491  0274  00C8               	movwf	trapmf@b+2
  7492  0275  3000               	movlw	0
  7493  0276  00C3               	movwf	trapmf@a
  7494  0277  3048               	movlw	72
  7495  0278  00C4               	movwf	trapmf@a+1
  7496  0279  3042               	movlw	66
  7497  027A  00C5               	movwf	trapmf@a+2
  7498  027B  1683               	bsf	3,5	;RP0=1, select bank1
  7499  027C  1303               	bcf	3,6	;RP1=0, select bank1
  7500  027D  0854               	movf	(_deltaV+1)^(0+128),w
  7501  027E  01F9               	clrf	___lwtoft@c+1
  7502  027F  07F9               	addwf	___lwtoft@c+1,f
  7503  0280  0853               	movf	_deltaV^(0+128),w
  7504  0281  01F8               	clrf	___lwtoft@c
  7505  0282  07F8               	addwf	___lwtoft@c,f
  7506  0283  160A  118A  22F8  120A  118A  	fcall	___lwtoft
  7507  0288  0878               	movf	?___lwtoft,w
  7508  0289  1283               	bcf	3,5	;RP0=0, select bank0
  7509  028A  1303               	bcf	3,6	;RP1=0, select bank0
  7510  028B  00C0               	movwf	trapmf@x
  7511  028C  0879               	movf	?___lwtoft+1,w
  7512  028D  00C1               	movwf	trapmf@x+1
  7513  028E  087A               	movf	?___lwtoft+2,w
  7514  028F  00C2               	movwf	trapmf@x+2
  7515  0290  120A  158A  2520  120A  118A  	fcall	_trapmf
  7516  0295  1283               	bcf	3,5	;RP0=0, select bank0
  7517  0296  1303               	bcf	3,6	;RP1=0, select bank0
  7518  0297  0840               	movf	?_trapmf,w
  7519  0298  00D5               	movwf	___ftmul@f2
  7520  0299  0841               	movf	?_trapmf+1,w
  7521  029A  00D6               	movwf	___ftmul@f2+1
  7522  029B  0842               	movf	?_trapmf+2,w
  7523  029C  00D7               	movwf	___ftmul@f2+2
  7524  029D  120A  158A  2344  120A  118A  	fcall	___ftmul
  7525  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  7526  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  7527  02A4  0852               	movf	?___ftmul,w
  7528  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  7529  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  7530  02A7  00BC               	movwf	Fuzzy@rule^(0+128)
  7531  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  7532  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  7533  02AA  0853               	movf	?___ftmul+1,w
  7534  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  7535  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  7536  02AD  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7537  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7538  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7539  02B0  0854               	movf	?___ftmul+2,w
  7540  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  7541  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  7542  02B3  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7543                           
  7544                           ;main.c: 232: x = 0;
  7545  02B4  3000               	movlw	0
  7546  02B5  00BF               	movwf	Fuzzy@x^(0+128)
  7547  02B6  3000               	movlw	0
  7548  02B7  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7549  02B8  3000               	movlw	0
  7550  02B9  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7551                           
  7552                           ;main.c: 233: for (int a = 0; a <= 15; a++) {
  7553  02BA  01AE               	clrf	Fuzzy@a_245^(0+128)
  7554  02BB  01AF               	clrf	(Fuzzy@a_245+1)^(0+128)
  7555  02BC  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7556  02BD  3A80               	xorlw	128
  7557  02BE  00FF               	movwf	127
  7558  02BF  3080               	movlw	128
  7559  02C0  027F               	subwf	127,w
  7560  02C1  1D03               	skipz
  7561  02C2  2AC5               	goto	u535_25
  7562  02C3  3010               	movlw	16
  7563  02C4  022E               	subwf	Fuzzy@a_245^(0+128),w
  7564  02C5                     u535_25:	
  7565  02C5  1803               	btfsc	3,0
  7566  02C6  2B65               	goto	i1l3925
  7567  02C7                     i1l3915:	
  7568                           
  7569                           ;main.c: 234: rulemedio = trapmf(x, 2, 5, 5, 10);
  7570  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  7571  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  7572  02C9  083F               	movf	Fuzzy@x^(0+128),w
  7573  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  7574  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  7575  02CC  00C0               	movwf	trapmf@x
  7576  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  7577  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  7578  02CF  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7579  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  7580  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  7581  02D2  00C1               	movwf	trapmf@x+1
  7582  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  7583  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  7584  02D5  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7585  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  7586  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  7587  02D8  00C2               	movwf	trapmf@x+2
  7588  02D9  3000               	movlw	0
  7589  02DA  00C3               	movwf	trapmf@a
  7590  02DB  3000               	movlw	0
  7591  02DC  00C4               	movwf	trapmf@a+1
  7592  02DD  3040               	movlw	64
  7593  02DE  00C5               	movwf	trapmf@a+2
  7594  02DF  3000               	movlw	0
  7595  02E0  00C6               	movwf	trapmf@b
  7596  02E1  30A0               	movlw	160
  7597  02E2  00C7               	movwf	trapmf@b+1
  7598  02E3  3040               	movlw	64
  7599  02E4  00C8               	movwf	trapmf@b+2
  7600  02E5  3000               	movlw	0
  7601  02E6  00C9               	movwf	trapmf@c
  7602  02E7  30A0               	movlw	160
  7603  02E8  00CA               	movwf	trapmf@c+1
  7604  02E9  3040               	movlw	64
  7605  02EA  00CB               	movwf	trapmf@c+2
  7606  02EB  3000               	movlw	0
  7607  02EC  00CC               	movwf	trapmf@d
  7608  02ED  3020               	movlw	32
  7609  02EE  00CD               	movwf	trapmf@d+1
  7610  02EF  3041               	movlw	65
  7611  02F0  00CE               	movwf	trapmf@d+2
  7612  02F1  120A  158A  2520  120A  118A  	fcall	_trapmf
  7613  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  7614  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  7615  02F8  0840               	movf	?_trapmf,w
  7616  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  7617  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  7618  02FB  00C5               	movwf	_rulemedio^(0+128)
  7619  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  7620  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  7621  02FE  0841               	movf	?_trapmf+1,w
  7622  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  7623  0300  1303               	bcf	3,6	;RP1=0, select bank1
  7624  0301  00C6               	movwf	(_rulemedio+1)^(0+128)
  7625  0302  1283               	bcf	3,5	;RP0=0, select bank0
  7626  0303  1303               	bcf	3,6	;RP1=0, select bank0
  7627  0304  0842               	movf	?_trapmf+2,w
  7628  0305  1683               	bsf	3,5	;RP0=1, select bank1
  7629  0306  1303               	bcf	3,6	;RP1=0, select bank1
  7630  0307  00C7               	movwf	(_rulemedio+2)^(0+128)
  7631                           
  7632                           ;main.c: 236: if (rulemedio >= rule) {
  7633  0308  0845               	movf	_rulemedio^(0+128),w
  7634  0309  00F0               	movwf	___ftge@ff1
  7635  030A  0846               	movf	(_rulemedio+1)^(0+128),w
  7636  030B  00F1               	movwf	___ftge@ff1+1
  7637  030C  0847               	movf	(_rulemedio+2)^(0+128),w
  7638  030D  00F2               	movwf	___ftge@ff1+2
  7639  030E  083C               	movf	Fuzzy@rule^(0+128),w
  7640  030F  00F3               	movwf	___ftge@ff2
  7641  0310  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7642  0311  00F4               	movwf	___ftge@ff2+1
  7643  0312  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7644  0313  00F5               	movwf	___ftge@ff2+2
  7645  0314  160A  118A  2545  120A  118A  	fcall	___ftge
  7646  0319  1C03               	btfss	3,0
  7647  031A  2B23               	goto	i1l3919
  7648                           
  7649                           ;main.c: 237: rulemedio = rule;
  7650  031B  1683               	bsf	3,5	;RP0=1, select bank1
  7651  031C  1303               	bcf	3,6	;RP1=0, select bank1
  7652  031D  083C               	movf	Fuzzy@rule^(0+128),w
  7653  031E  00C5               	movwf	_rulemedio^(0+128)
  7654  031F  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7655  0320  00C6               	movwf	(_rulemedio+1)^(0+128)
  7656  0321  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7657  0322  00C7               	movwf	(_rulemedio+2)^(0+128)
  7658  0323                     i1l3919:	
  7659                           
  7660                           ;main.c: 238: }
  7661                           ;main.c: 240: x += 1;
  7662  0323  3000               	movlw	0
  7663  0324  1283               	bcf	3,5	;RP0=0, select bank0
  7664  0325  1303               	bcf	3,6	;RP1=0, select bank0
  7665  0326  00A3               	movwf	___ftadd@f1
  7666  0327  3080               	movlw	128
  7667  0328  00A4               	movwf	___ftadd@f1+1
  7668  0329  303F               	movlw	63
  7669  032A  00A5               	movwf	___ftadd@f1+2
  7670  032B  1683               	bsf	3,5	;RP0=1, select bank1
  7671  032C  1303               	bcf	3,6	;RP1=0, select bank1
  7672  032D  083F               	movf	Fuzzy@x^(0+128),w
  7673  032E  1283               	bcf	3,5	;RP0=0, select bank0
  7674  032F  1303               	bcf	3,6	;RP1=0, select bank0
  7675  0330  00A6               	movwf	___ftadd@f2
  7676  0331  1683               	bsf	3,5	;RP0=1, select bank1
  7677  0332  1303               	bcf	3,6	;RP1=0, select bank1
  7678  0333  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7679  0334  1283               	bcf	3,5	;RP0=0, select bank0
  7680  0335  1303               	bcf	3,6	;RP1=0, select bank0
  7681  0336  00A7               	movwf	___ftadd@f2+1
  7682  0337  1683               	bsf	3,5	;RP0=1, select bank1
  7683  0338  1303               	bcf	3,6	;RP1=0, select bank1
  7684  0339  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7685  033A  1283               	bcf	3,5	;RP0=0, select bank0
  7686  033B  1303               	bcf	3,6	;RP1=0, select bank0
  7687  033C  00A8               	movwf	___ftadd@f2+2
  7688  033D  120A  158A  2417  120A  118A  	fcall	___ftadd
  7689  0342  1283               	bcf	3,5	;RP0=0, select bank0
  7690  0343  1303               	bcf	3,6	;RP1=0, select bank0
  7691  0344  0823               	movf	?___ftadd,w
  7692  0345  1683               	bsf	3,5	;RP0=1, select bank1
  7693  0346  1303               	bcf	3,6	;RP1=0, select bank1
  7694  0347  00BF               	movwf	Fuzzy@x^(0+128)
  7695  0348  1283               	bcf	3,5	;RP0=0, select bank0
  7696  0349  1303               	bcf	3,6	;RP1=0, select bank0
  7697  034A  0824               	movf	?___ftadd+1,w
  7698  034B  1683               	bsf	3,5	;RP0=1, select bank1
  7699  034C  1303               	bcf	3,6	;RP1=0, select bank1
  7700  034D  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7701  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7702  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0350  0825               	movf	?___ftadd+2,w
  7704  0351  1683               	bsf	3,5	;RP0=1, select bank1
  7705  0352  1303               	bcf	3,6	;RP1=0, select bank1
  7706  0353  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7707  0354  3001               	movlw	1
  7708  0355  07AE               	addwf	Fuzzy@a_245^(0+128),f
  7709  0356  1803               	skipnc
  7710  0357  0AAF               	incf	(Fuzzy@a_245+1)^(0+128),f
  7711  0358  3000               	movlw	0
  7712  0359  07AF               	addwf	(Fuzzy@a_245+1)^(0+128),f
  7713  035A  082F               	movf	(Fuzzy@a_245+1)^(0+128),w
  7714  035B  3A80               	xorlw	128
  7715  035C  00FF               	movwf	127
  7716  035D  3080               	movlw	128
  7717  035E  027F               	subwf	127,w
  7718  035F  1D03               	skipz
  7719  0360  2B63               	goto	u537_25
  7720  0361  3010               	movlw	16
  7721  0362  022E               	subwf	Fuzzy@a_245^(0+128),w
  7722  0363                     u537_25:	
  7723  0363  1C03               	skipc
  7724  0364  2AC7               	goto	i1l3915
  7725  0365                     i1l3925:	
  7726                           
  7727                           ;main.c: 241: }
  7728                           ;main.c: 242: }
  7729                           ;main.c: 245: if (deltaV >= 1001)
  7730  0365  3003               	movlw	3
  7731  0366  1683               	bsf	3,5	;RP0=1, select bank1
  7732  0367  1303               	bcf	3,6	;RP1=0, select bank1
  7733  0368  0254               	subwf	(_deltaV+1)^(0+128),w
  7734  0369  30E9               	movlw	233
  7735  036A  1903               	skipnz
  7736  036B  0253               	subwf	_deltaV^(0+128),w
  7737  036C  1C03               	skipc
  7738  036D  2C61               	goto	i1l3947
  7739                           
  7740                           ;main.c: 246: {
  7741                           ;main.c: 248: rule = trapmf(deltaV, 1001, 1500, 2000, 2001);
  7742  036E  0854               	movf	(_deltaV+1)^(0+128),w
  7743  036F  01F9               	clrf	___lwtoft@c+1
  7744  0370  07F9               	addwf	___lwtoft@c+1,f
  7745  0371  0853               	movf	_deltaV^(0+128),w
  7746  0372  01F8               	clrf	___lwtoft@c
  7747  0373  07F8               	addwf	___lwtoft@c,f
  7748  0374  160A  118A  22F8  120A  118A  	fcall	___lwtoft
  7749  0379  0878               	movf	?___lwtoft,w
  7750  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7751  037B  1303               	bcf	3,6	;RP1=0, select bank0
  7752  037C  00C0               	movwf	trapmf@x
  7753  037D  0879               	movf	?___lwtoft+1,w
  7754  037E  00C1               	movwf	trapmf@x+1
  7755  037F  087A               	movf	?___lwtoft+2,w
  7756  0380  00C2               	movwf	trapmf@x+2
  7757  0381  3040               	movlw	64
  7758  0382  00C3               	movwf	trapmf@a
  7759  0383  307A               	movlw	122
  7760  0384  00C4               	movwf	trapmf@a+1
  7761  0385  3044               	movlw	68
  7762  0386  00C5               	movwf	trapmf@a+2
  7763  0387  3080               	movlw	128
  7764  0388  00C6               	movwf	trapmf@b
  7765  0389  30BB               	movlw	187
  7766  038A  00C7               	movwf	trapmf@b+1
  7767  038B  3044               	movlw	68
  7768  038C  00C8               	movwf	trapmf@b+2
  7769  038D  3000               	movlw	0
  7770  038E  00C9               	movwf	trapmf@c
  7771  038F  30FA               	movlw	250
  7772  0390  00CA               	movwf	trapmf@c+1
  7773  0391  3044               	movlw	68
  7774  0392  00CB               	movwf	trapmf@c+2
  7775  0393  3020               	movlw	32
  7776  0394  00CC               	movwf	trapmf@d
  7777  0395  30FA               	movlw	250
  7778  0396  00CD               	movwf	trapmf@d+1
  7779  0397  3044               	movlw	68
  7780  0398  00CE               	movwf	trapmf@d+2
  7781  0399  120A  158A  2520  120A  118A  	fcall	_trapmf
  7782  039E  1283               	bcf	3,5	;RP0=0, select bank0
  7783  039F  1303               	bcf	3,6	;RP1=0, select bank0
  7784  03A0  0840               	movf	?_trapmf,w
  7785  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  7786  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  7787  03A3  00BC               	movwf	Fuzzy@rule^(0+128)
  7788  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  7789  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  7790  03A6  0841               	movf	?_trapmf+1,w
  7791  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7792  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  7793  03A9  00BD               	movwf	(Fuzzy@rule+1)^(0+128)
  7794  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  7795  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  7796  03AC  0842               	movf	?_trapmf+2,w
  7797  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  7798  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  7799  03AF  00BE               	movwf	(Fuzzy@rule+2)^(0+128)
  7800                           
  7801                           ;main.c: 250: x = 0;
  7802  03B0  3000               	movlw	0
  7803  03B1  00BF               	movwf	Fuzzy@x^(0+128)
  7804  03B2  3000               	movlw	0
  7805  03B3  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7806  03B4  3000               	movlw	0
  7807  03B5  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7808                           
  7809                           ;main.c: 251: for (int a = 0; a <= 15; a++) {
  7810  03B6  01B0               	clrf	Fuzzy@a_246^(0+128)
  7811  03B7  01B1               	clrf	(Fuzzy@a_246+1)^(0+128)
  7812  03B8  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7813  03B9  3A80               	xorlw	128
  7814  03BA  00FF               	movwf	127
  7815  03BB  3080               	movlw	128
  7816  03BC  027F               	subwf	127,w
  7817  03BD  1D03               	skipz
  7818  03BE  2BC1               	goto	u539_25
  7819  03BF  3010               	movlw	16
  7820  03C0  0230               	subwf	Fuzzy@a_246^(0+128),w
  7821  03C1                     u539_25:	
  7822  03C1  1803               	btfsc	3,0
  7823  03C2  2C61               	goto	i1l3947
  7824  03C3                     i1l3937:	
  7825                           
  7826                           ;main.c: 252: rulegrande = trapmf(x, 5, 10, 15, 16);
  7827  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  7828  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  7829  03C5  083F               	movf	Fuzzy@x^(0+128),w
  7830  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  7831  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  7832  03C8  00C0               	movwf	trapmf@x
  7833  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  7834  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  7835  03CB  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7836  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  7837  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  7838  03CE  00C1               	movwf	trapmf@x+1
  7839  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  7840  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  7841  03D1  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7842  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  7843  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  7844  03D4  00C2               	movwf	trapmf@x+2
  7845  03D5  3000               	movlw	0
  7846  03D6  00C3               	movwf	trapmf@a
  7847  03D7  30A0               	movlw	160
  7848  03D8  00C4               	movwf	trapmf@a+1
  7849  03D9  3040               	movlw	64
  7850  03DA  00C5               	movwf	trapmf@a+2
  7851  03DB  3000               	movlw	0
  7852  03DC  00C6               	movwf	trapmf@b
  7853  03DD  3020               	movlw	32
  7854  03DE  00C7               	movwf	trapmf@b+1
  7855  03DF  3041               	movlw	65
  7856  03E0  00C8               	movwf	trapmf@b+2
  7857  03E1  3000               	movlw	0
  7858  03E2  00C9               	movwf	trapmf@c
  7859  03E3  3070               	movlw	112
  7860  03E4  00CA               	movwf	trapmf@c+1
  7861  03E5  3041               	movlw	65
  7862  03E6  00CB               	movwf	trapmf@c+2
  7863  03E7  3000               	movlw	0
  7864  03E8  00CC               	movwf	trapmf@d
  7865  03E9  3080               	movlw	128
  7866  03EA  00CD               	movwf	trapmf@d+1
  7867  03EB  3041               	movlw	65
  7868  03EC  00CE               	movwf	trapmf@d+2
  7869  03ED  120A  158A  2520  120A  118A  	fcall	_trapmf
  7870  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  7871  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  7872  03F4  0840               	movf	?_trapmf,w
  7873  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7874  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  7875  03F7  00C2               	movwf	_rulegrande^(0+128)
  7876  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7877  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7878  03FA  0841               	movf	?_trapmf+1,w
  7879  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  7880  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  7881  03FD  00C3               	movwf	(_rulegrande+1)^(0+128)
  7882  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  7883  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  7884  0400  0842               	movf	?_trapmf+2,w
  7885  0401  1683               	bsf	3,5	;RP0=1, select bank1
  7886  0402  1303               	bcf	3,6	;RP1=0, select bank1
  7887  0403  00C4               	movwf	(_rulegrande+2)^(0+128)
  7888                           
  7889                           ;main.c: 254: if (rulegrande >= rule) {
  7890  0404  0842               	movf	_rulegrande^(0+128),w
  7891  0405  00F0               	movwf	___ftge@ff1
  7892  0406  0843               	movf	(_rulegrande+1)^(0+128),w
  7893  0407  00F1               	movwf	___ftge@ff1+1
  7894  0408  0844               	movf	(_rulegrande+2)^(0+128),w
  7895  0409  00F2               	movwf	___ftge@ff1+2
  7896  040A  083C               	movf	Fuzzy@rule^(0+128),w
  7897  040B  00F3               	movwf	___ftge@ff2
  7898  040C  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7899  040D  00F4               	movwf	___ftge@ff2+1
  7900  040E  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7901  040F  00F5               	movwf	___ftge@ff2+2
  7902  0410  160A  118A  2545  120A  118A  	fcall	___ftge
  7903  0415  1C03               	btfss	3,0
  7904  0416  2C1F               	goto	i1l3941
  7905                           
  7906                           ;main.c: 255: rulegrande = rule;
  7907  0417  1683               	bsf	3,5	;RP0=1, select bank1
  7908  0418  1303               	bcf	3,6	;RP1=0, select bank1
  7909  0419  083C               	movf	Fuzzy@rule^(0+128),w
  7910  041A  00C2               	movwf	_rulegrande^(0+128)
  7911  041B  083D               	movf	(Fuzzy@rule+1)^(0+128),w
  7912  041C  00C3               	movwf	(_rulegrande+1)^(0+128)
  7913  041D  083E               	movf	(Fuzzy@rule+2)^(0+128),w
  7914  041E  00C4               	movwf	(_rulegrande+2)^(0+128)
  7915  041F                     i1l3941:	
  7916                           
  7917                           ;main.c: 256: }
  7918                           ;main.c: 258: x += 1;
  7919  041F  3000               	movlw	0
  7920  0420  1283               	bcf	3,5	;RP0=0, select bank0
  7921  0421  1303               	bcf	3,6	;RP1=0, select bank0
  7922  0422  00A3               	movwf	___ftadd@f1
  7923  0423  3080               	movlw	128
  7924  0424  00A4               	movwf	___ftadd@f1+1
  7925  0425  303F               	movlw	63
  7926  0426  00A5               	movwf	___ftadd@f1+2
  7927  0427  1683               	bsf	3,5	;RP0=1, select bank1
  7928  0428  1303               	bcf	3,6	;RP1=0, select bank1
  7929  0429  083F               	movf	Fuzzy@x^(0+128),w
  7930  042A  1283               	bcf	3,5	;RP0=0, select bank0
  7931  042B  1303               	bcf	3,6	;RP1=0, select bank0
  7932  042C  00A6               	movwf	___ftadd@f2
  7933  042D  1683               	bsf	3,5	;RP0=1, select bank1
  7934  042E  1303               	bcf	3,6	;RP1=0, select bank1
  7935  042F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  7936  0430  1283               	bcf	3,5	;RP0=0, select bank0
  7937  0431  1303               	bcf	3,6	;RP1=0, select bank0
  7938  0432  00A7               	movwf	___ftadd@f2+1
  7939  0433  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0434  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0435  0841               	movf	(Fuzzy@x+2)^(0+128),w
  7942  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0438  00A8               	movwf	___ftadd@f2+2
  7945  0439  120A  158A  2417  120A  118A  	fcall	___ftadd
  7946  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7947  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7948  0440  0823               	movf	?___ftadd,w
  7949  0441  1683               	bsf	3,5	;RP0=1, select bank1
  7950  0442  1303               	bcf	3,6	;RP1=0, select bank1
  7951  0443  00BF               	movwf	Fuzzy@x^(0+128)
  7952  0444  1283               	bcf	3,5	;RP0=0, select bank0
  7953  0445  1303               	bcf	3,6	;RP1=0, select bank0
  7954  0446  0824               	movf	?___ftadd+1,w
  7955  0447  1683               	bsf	3,5	;RP0=1, select bank1
  7956  0448  1303               	bcf	3,6	;RP1=0, select bank1
  7957  0449  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7958  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7959  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7960  044C  0825               	movf	?___ftadd+2,w
  7961  044D  1683               	bsf	3,5	;RP0=1, select bank1
  7962  044E  1303               	bcf	3,6	;RP1=0, select bank1
  7963  044F  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7964  0450  3001               	movlw	1
  7965  0451  07B0               	addwf	Fuzzy@a_246^(0+128),f
  7966  0452  1803               	skipnc
  7967  0453  0AB1               	incf	(Fuzzy@a_246+1)^(0+128),f
  7968  0454  3000               	movlw	0
  7969  0455  07B1               	addwf	(Fuzzy@a_246+1)^(0+128),f
  7970  0456  0831               	movf	(Fuzzy@a_246+1)^(0+128),w
  7971  0457  3A80               	xorlw	128
  7972  0458  00FF               	movwf	127
  7973  0459  3080               	movlw	128
  7974  045A  027F               	subwf	127,w
  7975  045B  1D03               	skipz
  7976  045C  2C5F               	goto	u541_25
  7977  045D  3010               	movlw	16
  7978  045E  0230               	subwf	Fuzzy@a_246^(0+128),w
  7979  045F                     u541_25:	
  7980  045F  1C03               	skipc
  7981  0460  2BC3               	goto	i1l3937
  7982  0461                     i1l3947:	
  7983                           
  7984                           ;main.c: 259: }
  7985                           ;main.c: 260: }
  7986                           ;main.c: 263: x = 0;
  7987  0461  3000               	movlw	0
  7988  0462  1683               	bsf	3,5	;RP0=1, select bank1
  7989  0463  1303               	bcf	3,6	;RP1=0, select bank1
  7990  0464  00BF               	movwf	Fuzzy@x^(0+128)
  7991  0465  3000               	movlw	0
  7992  0466  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  7993  0467  3000               	movlw	0
  7994  0468  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  7995                           
  7996                           ;main.c: 264: float total_area = 0;
  7997  0469  3000               	movlw	0
  7998  046A  00B7               	movwf	Fuzzy@total_area^(0+128)
  7999  046B  3000               	movlw	0
  8000  046C  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8001  046D  3000               	movlw	0
  8002  046E  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8003                           
  8004                           ;main.c: 265: float soma = 0;
  8005  046F  3000               	movlw	0
  8006  0470  00B4               	movwf	Fuzzy@soma^(0+128)
  8007  0471  3000               	movlw	0
  8008  0472  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8009  0473  3000               	movlw	0
  8010  0474  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8011                           
  8012                           ;main.c: 266: for (int a = 0; a <= 15; a++)
  8013  0475  01BA               	clrf	Fuzzy@a_249^(0+128)
  8014  0476  01BB               	clrf	(Fuzzy@a_249+1)^(0+128)
  8015  0477  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8016  0478  3A80               	xorlw	128
  8017  0479  00FF               	movwf	127
  8018  047A  3080               	movlw	128
  8019  047B  027F               	subwf	127,w
  8020  047C  1D03               	skipz
  8021  047D  2C80               	goto	u542_25
  8022  047E  3010               	movlw	16
  8023  047F  023A               	subwf	Fuzzy@a_249^(0+128),w
  8024  0480                     u542_25:	
  8025  0480  1803               	btfsc	3,0
  8026  0481  2EC0               	goto	i1l3975
  8027  0482                     i1l180:	
  8028                           
  8029                           ;main.c: 267: {
  8030                           ;main.c: 268: if (a >= 0 && a <= 5) {
  8031  0482  1683               	bsf	3,5	;RP0=1, select bank1
  8032  0483  1303               	bcf	3,6	;RP1=0, select bank1
  8033  0484  1BBB               	btfsc	(Fuzzy@a_249+1)^(0+128),7
  8034  0485  2D24               	goto	i1l3959
  8035  0486  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8036  0487  3A80               	xorlw	128
  8037  0488  00FF               	movwf	127
  8038  0489  3080               	movlw	128
  8039  048A  027F               	subwf	127,w
  8040  048B  1D03               	skipz
  8041  048C  2C8F               	goto	u544_25
  8042  048D  3006               	movlw	6
  8043  048E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8044  048F                     u544_25:	
  8045  048F  1803               	skipnc
  8046  0490  2D24               	goto	i1l3959
  8047                           
  8048                           ;main.c: 269: total_area += rulepequeno;
  8049  0491  1683               	bsf	3,5	;RP0=1, select bank1
  8050  0492  1303               	bcf	3,6	;RP1=0, select bank1
  8051  0493  0848               	movf	_rulepequeno^(0+128),w
  8052  0494  1283               	bcf	3,5	;RP0=0, select bank0
  8053  0495  1303               	bcf	3,6	;RP1=0, select bank0
  8054  0496  00A3               	movwf	___ftadd@f1
  8055  0497  1683               	bsf	3,5	;RP0=1, select bank1
  8056  0498  1303               	bcf	3,6	;RP1=0, select bank1
  8057  0499  0849               	movf	(_rulepequeno+1)^(0+128),w
  8058  049A  1283               	bcf	3,5	;RP0=0, select bank0
  8059  049B  1303               	bcf	3,6	;RP1=0, select bank0
  8060  049C  00A4               	movwf	___ftadd@f1+1
  8061  049D  1683               	bsf	3,5	;RP0=1, select bank1
  8062  049E  1303               	bcf	3,6	;RP1=0, select bank1
  8063  049F  084A               	movf	(_rulepequeno+2)^(0+128),w
  8064  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  8065  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  8066  04A2  00A5               	movwf	___ftadd@f1+2
  8067  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  8068  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  8069  04A5  0837               	movf	Fuzzy@total_area^(0+128),w
  8070  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  8071  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  8072  04A8  00A6               	movwf	___ftadd@f2
  8073  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  8074  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  8075  04AB  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8076  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  8077  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  8078  04AE  00A7               	movwf	___ftadd@f2+1
  8079  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  8080  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  8081  04B1  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8082  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  8083  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  8084  04B4  00A8               	movwf	___ftadd@f2+2
  8085  04B5  120A  158A  2417  120A  118A  	fcall	___ftadd
  8086  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  8087  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  8088  04BC  0823               	movf	?___ftadd,w
  8089  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  8090  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  8091  04BF  00B7               	movwf	Fuzzy@total_area^(0+128)
  8092  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  8093  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  8094  04C2  0824               	movf	?___ftadd+1,w
  8095  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  8096  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  8097  04C5  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8098  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  8099  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  8100  04C8  0825               	movf	?___ftadd+2,w
  8101  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  8102  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  8103  04CB  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8104                           
  8105                           ;main.c: 270: soma += (x * rulepequeno);
  8106  04CC  083F               	movf	Fuzzy@x^(0+128),w
  8107  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8108  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8109  04CF  00D5               	movwf	___ftmul@f2
  8110  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8111  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8112  04D2  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8113  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8114  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8115  04D5  00D6               	movwf	___ftmul@f2+1
  8116  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  8117  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  8118  04D8  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8119  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  8120  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  8121  04DB  00D7               	movwf	___ftmul@f2+2
  8122  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  8123  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  8124  04DE  0848               	movf	_rulepequeno^(0+128),w
  8125  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  8126  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  8127  04E1  00D2               	movwf	___ftmul@f1
  8128  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  8129  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  8130  04E4  0849               	movf	(_rulepequeno+1)^(0+128),w
  8131  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  8132  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  8133  04E7  00D3               	movwf	___ftmul@f1+1
  8134  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  8135  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  8136  04EA  084A               	movf	(_rulepequeno+2)^(0+128),w
  8137  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  8138  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  8139  04ED  00D4               	movwf	___ftmul@f1+2
  8140  04EE  120A  158A  2344  120A  118A  	fcall	___ftmul
  8141  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  8142  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  8143  04F5  0852               	movf	?___ftmul,w
  8144  04F6  00A3               	movwf	___ftadd@f1
  8145  04F7  0853               	movf	?___ftmul+1,w
  8146  04F8  00A4               	movwf	___ftadd@f1+1
  8147  04F9  0854               	movf	?___ftmul+2,w
  8148  04FA  00A5               	movwf	___ftadd@f1+2
  8149  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  8150  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  8151  04FD  0834               	movf	Fuzzy@soma^(0+128),w
  8152  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  8153  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  8154  0500  00A6               	movwf	___ftadd@f2
  8155  0501  1683               	bsf	3,5	;RP0=1, select bank1
  8156  0502  1303               	bcf	3,6	;RP1=0, select bank1
  8157  0503  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8158  0504  1283               	bcf	3,5	;RP0=0, select bank0
  8159  0505  1303               	bcf	3,6	;RP1=0, select bank0
  8160  0506  00A7               	movwf	___ftadd@f2+1
  8161  0507  1683               	bsf	3,5	;RP0=1, select bank1
  8162  0508  1303               	bcf	3,6	;RP1=0, select bank1
  8163  0509  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8164  050A  1283               	bcf	3,5	;RP0=0, select bank0
  8165  050B  1303               	bcf	3,6	;RP1=0, select bank0
  8166  050C  00A8               	movwf	___ftadd@f2+2
  8167  050D  120A  158A  2417  120A  118A  	fcall	___ftadd
  8168  0512  1283               	bcf	3,5	;RP0=0, select bank0
  8169  0513  1303               	bcf	3,6	;RP1=0, select bank0
  8170  0514  0823               	movf	?___ftadd,w
  8171  0515  1683               	bsf	3,5	;RP0=1, select bank1
  8172  0516  1303               	bcf	3,6	;RP1=0, select bank1
  8173  0517  00B4               	movwf	Fuzzy@soma^(0+128)
  8174  0518  1283               	bcf	3,5	;RP0=0, select bank0
  8175  0519  1303               	bcf	3,6	;RP1=0, select bank0
  8176  051A  0824               	movf	?___ftadd+1,w
  8177  051B  1683               	bsf	3,5	;RP0=1, select bank1
  8178  051C  1303               	bcf	3,6	;RP1=0, select bank1
  8179  051D  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8180  051E  1283               	bcf	3,5	;RP0=0, select bank0
  8181  051F  1303               	bcf	3,6	;RP1=0, select bank0
  8182  0520  0825               	movf	?___ftadd+2,w
  8183  0521  1683               	bsf	3,5	;RP0=1, select bank1
  8184  0522  1303               	bcf	3,6	;RP1=0, select bank1
  8185  0523  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8186  0524                     i1l3959:	
  8187                           
  8188                           ;main.c: 271: }
  8189                           ;main.c: 273: if (a >= 5 && a <= 10) {
  8190  0524  1683               	bsf	3,5	;RP0=1, select bank1
  8191  0525  1303               	bcf	3,6	;RP1=0, select bank1
  8192  0526  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8193  0527  3A80               	xorlw	128
  8194  0528  00FF               	movwf	127
  8195  0529  3080               	movlw	128
  8196  052A  027F               	subwf	127,w
  8197  052B  1D03               	skipz
  8198  052C  2D2F               	goto	u545_25
  8199  052D  3005               	movlw	5
  8200  052E  023A               	subwf	Fuzzy@a_249^(0+128),w
  8201  052F                     u545_25:	
  8202  052F  1C03               	skipc
  8203  0530  2DD1               	goto	i1l3965
  8204  0531  1683               	bsf	3,5	;RP0=1, select bank1
  8205  0532  1303               	bcf	3,6	;RP1=0, select bank1
  8206  0533  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8207  0534  3A80               	xorlw	128
  8208  0535  00FF               	movwf	127
  8209  0536  3080               	movlw	128
  8210  0537  027F               	subwf	127,w
  8211  0538  1D03               	skipz
  8212  0539  2D3C               	goto	u546_25
  8213  053A  300B               	movlw	11
  8214  053B  023A               	subwf	Fuzzy@a_249^(0+128),w
  8215  053C                     u546_25:	
  8216  053C  1803               	skipnc
  8217  053D  2DD1               	goto	i1l3965
  8218                           
  8219                           ;main.c: 274: total_area += rulemedio;
  8220  053E  1683               	bsf	3,5	;RP0=1, select bank1
  8221  053F  1303               	bcf	3,6	;RP1=0, select bank1
  8222  0540  0845               	movf	_rulemedio^(0+128),w
  8223  0541  1283               	bcf	3,5	;RP0=0, select bank0
  8224  0542  1303               	bcf	3,6	;RP1=0, select bank0
  8225  0543  00A3               	movwf	___ftadd@f1
  8226  0544  1683               	bsf	3,5	;RP0=1, select bank1
  8227  0545  1303               	bcf	3,6	;RP1=0, select bank1
  8228  0546  0846               	movf	(_rulemedio+1)^(0+128),w
  8229  0547  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0548  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0549  00A4               	movwf	___ftadd@f1+1
  8232  054A  1683               	bsf	3,5	;RP0=1, select bank1
  8233  054B  1303               	bcf	3,6	;RP1=0, select bank1
  8234  054C  0847               	movf	(_rulemedio+2)^(0+128),w
  8235  054D  1283               	bcf	3,5	;RP0=0, select bank0
  8236  054E  1303               	bcf	3,6	;RP1=0, select bank0
  8237  054F  00A5               	movwf	___ftadd@f1+2
  8238  0550  1683               	bsf	3,5	;RP0=1, select bank1
  8239  0551  1303               	bcf	3,6	;RP1=0, select bank1
  8240  0552  0837               	movf	Fuzzy@total_area^(0+128),w
  8241  0553  1283               	bcf	3,5	;RP0=0, select bank0
  8242  0554  1303               	bcf	3,6	;RP1=0, select bank0
  8243  0555  00A6               	movwf	___ftadd@f2
  8244  0556  1683               	bsf	3,5	;RP0=1, select bank1
  8245  0557  1303               	bcf	3,6	;RP1=0, select bank1
  8246  0558  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8247  0559  1283               	bcf	3,5	;RP0=0, select bank0
  8248  055A  1303               	bcf	3,6	;RP1=0, select bank0
  8249  055B  00A7               	movwf	___ftadd@f2+1
  8250  055C  1683               	bsf	3,5	;RP0=1, select bank1
  8251  055D  1303               	bcf	3,6	;RP1=0, select bank1
  8252  055E  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8253  055F  1283               	bcf	3,5	;RP0=0, select bank0
  8254  0560  1303               	bcf	3,6	;RP1=0, select bank0
  8255  0561  00A8               	movwf	___ftadd@f2+2
  8256  0562  120A  158A  2417  120A  118A  	fcall	___ftadd
  8257  0567  1283               	bcf	3,5	;RP0=0, select bank0
  8258  0568  1303               	bcf	3,6	;RP1=0, select bank0
  8259  0569  0823               	movf	?___ftadd,w
  8260  056A  1683               	bsf	3,5	;RP0=1, select bank1
  8261  056B  1303               	bcf	3,6	;RP1=0, select bank1
  8262  056C  00B7               	movwf	Fuzzy@total_area^(0+128)
  8263  056D  1283               	bcf	3,5	;RP0=0, select bank0
  8264  056E  1303               	bcf	3,6	;RP1=0, select bank0
  8265  056F  0824               	movf	?___ftadd+1,w
  8266  0570  1683               	bsf	3,5	;RP0=1, select bank1
  8267  0571  1303               	bcf	3,6	;RP1=0, select bank1
  8268  0572  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8269  0573  1283               	bcf	3,5	;RP0=0, select bank0
  8270  0574  1303               	bcf	3,6	;RP1=0, select bank0
  8271  0575  0825               	movf	?___ftadd+2,w
  8272  0576  1683               	bsf	3,5	;RP0=1, select bank1
  8273  0577  1303               	bcf	3,6	;RP1=0, select bank1
  8274  0578  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8275                           
  8276                           ;main.c: 275: soma += (x * rulemedio);
  8277  0579  083F               	movf	Fuzzy@x^(0+128),w
  8278  057A  1283               	bcf	3,5	;RP0=0, select bank0
  8279  057B  1303               	bcf	3,6	;RP1=0, select bank0
  8280  057C  00D5               	movwf	___ftmul@f2
  8281  057D  1683               	bsf	3,5	;RP0=1, select bank1
  8282  057E  1303               	bcf	3,6	;RP1=0, select bank1
  8283  057F  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8284  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8285  0581  1303               	bcf	3,6	;RP1=0, select bank0
  8286  0582  00D6               	movwf	___ftmul@f2+1
  8287  0583  1683               	bsf	3,5	;RP0=1, select bank1
  8288  0584  1303               	bcf	3,6	;RP1=0, select bank1
  8289  0585  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8290  0586  1283               	bcf	3,5	;RP0=0, select bank0
  8291  0587  1303               	bcf	3,6	;RP1=0, select bank0
  8292  0588  00D7               	movwf	___ftmul@f2+2
  8293  0589  1683               	bsf	3,5	;RP0=1, select bank1
  8294  058A  1303               	bcf	3,6	;RP1=0, select bank1
  8295  058B  0845               	movf	_rulemedio^(0+128),w
  8296  058C  1283               	bcf	3,5	;RP0=0, select bank0
  8297  058D  1303               	bcf	3,6	;RP1=0, select bank0
  8298  058E  00D2               	movwf	___ftmul@f1
  8299  058F  1683               	bsf	3,5	;RP0=1, select bank1
  8300  0590  1303               	bcf	3,6	;RP1=0, select bank1
  8301  0591  0846               	movf	(_rulemedio+1)^(0+128),w
  8302  0592  1283               	bcf	3,5	;RP0=0, select bank0
  8303  0593  1303               	bcf	3,6	;RP1=0, select bank0
  8304  0594  00D3               	movwf	___ftmul@f1+1
  8305  0595  1683               	bsf	3,5	;RP0=1, select bank1
  8306  0596  1303               	bcf	3,6	;RP1=0, select bank1
  8307  0597  0847               	movf	(_rulemedio+2)^(0+128),w
  8308  0598  1283               	bcf	3,5	;RP0=0, select bank0
  8309  0599  1303               	bcf	3,6	;RP1=0, select bank0
  8310  059A  00D4               	movwf	___ftmul@f1+2
  8311  059B  120A  158A  2344  120A  118A  	fcall	___ftmul
  8312  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  8313  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  8314  05A2  0852               	movf	?___ftmul,w
  8315  05A3  00A3               	movwf	___ftadd@f1
  8316  05A4  0853               	movf	?___ftmul+1,w
  8317  05A5  00A4               	movwf	___ftadd@f1+1
  8318  05A6  0854               	movf	?___ftmul+2,w
  8319  05A7  00A5               	movwf	___ftadd@f1+2
  8320  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  8321  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  8322  05AA  0834               	movf	Fuzzy@soma^(0+128),w
  8323  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  8324  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  8325  05AD  00A6               	movwf	___ftadd@f2
  8326  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8327  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8328  05B0  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8329  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8330  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8331  05B3  00A7               	movwf	___ftadd@f2+1
  8332  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  8333  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  8334  05B6  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8335  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  8336  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  8337  05B9  00A8               	movwf	___ftadd@f2+2
  8338  05BA  120A  158A  2417  120A  118A  	fcall	___ftadd
  8339  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8340  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8341  05C1  0823               	movf	?___ftadd,w
  8342  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  8343  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  8344  05C4  00B4               	movwf	Fuzzy@soma^(0+128)
  8345  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  8346  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  8347  05C7  0824               	movf	?___ftadd+1,w
  8348  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  8349  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  8350  05CA  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8351  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  8352  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  8353  05CD  0825               	movf	?___ftadd+2,w
  8354  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  8355  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  8356  05D0  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8357  05D1                     i1l3965:	
  8358                           
  8359                           ;main.c: 276: }
  8360                           ;main.c: 278: if (a >= 10 && a <= 15) {
  8361  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  8362  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  8363  05D3  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8364  05D4  3A80               	xorlw	128
  8365  05D5  00FF               	movwf	127
  8366  05D6  3080               	movlw	128
  8367  05D7  027F               	subwf	127,w
  8368  05D8  1D03               	skipz
  8369  05D9  2DDC               	goto	u547_25
  8370  05DA  300A               	movlw	10
  8371  05DB  023A               	subwf	Fuzzy@a_249^(0+128),w
  8372  05DC                     u547_25:	
  8373  05DC  1C03               	skipc
  8374  05DD  2E7E               	goto	i1l184
  8375  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  8376  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  8377  05E0  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8378  05E1  3A80               	xorlw	128
  8379  05E2  00FF               	movwf	127
  8380  05E3  3080               	movlw	128
  8381  05E4  027F               	subwf	127,w
  8382  05E5  1D03               	skipz
  8383  05E6  2DE9               	goto	u548_25
  8384  05E7  3010               	movlw	16
  8385  05E8  023A               	subwf	Fuzzy@a_249^(0+128),w
  8386  05E9                     u548_25:	
  8387  05E9  1803               	skipnc
  8388  05EA  2E7E               	goto	i1l184
  8389                           
  8390                           ;main.c: 279: total_area += rulegrande;
  8391  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  8392  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  8393  05ED  0842               	movf	_rulegrande^(0+128),w
  8394  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  8395  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  8396  05F0  00A3               	movwf	___ftadd@f1
  8397  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  8398  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  8399  05F3  0843               	movf	(_rulegrande+1)^(0+128),w
  8400  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  8401  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  8402  05F6  00A4               	movwf	___ftadd@f1+1
  8403  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  8404  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  8405  05F9  0844               	movf	(_rulegrande+2)^(0+128),w
  8406  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8407  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8408  05FC  00A5               	movwf	___ftadd@f1+2
  8409  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  8410  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  8411  05FF  0837               	movf	Fuzzy@total_area^(0+128),w
  8412  0600  1283               	bcf	3,5	;RP0=0, select bank0
  8413  0601  1303               	bcf	3,6	;RP1=0, select bank0
  8414  0602  00A6               	movwf	___ftadd@f2
  8415  0603  1683               	bsf	3,5	;RP0=1, select bank1
  8416  0604  1303               	bcf	3,6	;RP1=0, select bank1
  8417  0605  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8418  0606  1283               	bcf	3,5	;RP0=0, select bank0
  8419  0607  1303               	bcf	3,6	;RP1=0, select bank0
  8420  0608  00A7               	movwf	___ftadd@f2+1
  8421  0609  1683               	bsf	3,5	;RP0=1, select bank1
  8422  060A  1303               	bcf	3,6	;RP1=0, select bank1
  8423  060B  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8424  060C  1283               	bcf	3,5	;RP0=0, select bank0
  8425  060D  1303               	bcf	3,6	;RP1=0, select bank0
  8426  060E  00A8               	movwf	___ftadd@f2+2
  8427  060F  120A  158A  2417  120A  118A  	fcall	___ftadd
  8428  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8429  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8430  0616  0823               	movf	?___ftadd,w
  8431  0617  1683               	bsf	3,5	;RP0=1, select bank1
  8432  0618  1303               	bcf	3,6	;RP1=0, select bank1
  8433  0619  00B7               	movwf	Fuzzy@total_area^(0+128)
  8434  061A  1283               	bcf	3,5	;RP0=0, select bank0
  8435  061B  1303               	bcf	3,6	;RP1=0, select bank0
  8436  061C  0824               	movf	?___ftadd+1,w
  8437  061D  1683               	bsf	3,5	;RP0=1, select bank1
  8438  061E  1303               	bcf	3,6	;RP1=0, select bank1
  8439  061F  00B8               	movwf	(Fuzzy@total_area+1)^(0+128)
  8440  0620  1283               	bcf	3,5	;RP0=0, select bank0
  8441  0621  1303               	bcf	3,6	;RP1=0, select bank0
  8442  0622  0825               	movf	?___ftadd+2,w
  8443  0623  1683               	bsf	3,5	;RP0=1, select bank1
  8444  0624  1303               	bcf	3,6	;RP1=0, select bank1
  8445  0625  00B9               	movwf	(Fuzzy@total_area+2)^(0+128)
  8446                           
  8447                           ;main.c: 280: soma += (x * rulegrande);
  8448  0626  083F               	movf	Fuzzy@x^(0+128),w
  8449  0627  1283               	bcf	3,5	;RP0=0, select bank0
  8450  0628  1303               	bcf	3,6	;RP1=0, select bank0
  8451  0629  00D5               	movwf	___ftmul@f2
  8452  062A  1683               	bsf	3,5	;RP0=1, select bank1
  8453  062B  1303               	bcf	3,6	;RP1=0, select bank1
  8454  062C  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8455  062D  1283               	bcf	3,5	;RP0=0, select bank0
  8456  062E  1303               	bcf	3,6	;RP1=0, select bank0
  8457  062F  00D6               	movwf	___ftmul@f2+1
  8458  0630  1683               	bsf	3,5	;RP0=1, select bank1
  8459  0631  1303               	bcf	3,6	;RP1=0, select bank1
  8460  0632  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8461  0633  1283               	bcf	3,5	;RP0=0, select bank0
  8462  0634  1303               	bcf	3,6	;RP1=0, select bank0
  8463  0635  00D7               	movwf	___ftmul@f2+2
  8464  0636  1683               	bsf	3,5	;RP0=1, select bank1
  8465  0637  1303               	bcf	3,6	;RP1=0, select bank1
  8466  0638  0842               	movf	_rulegrande^(0+128),w
  8467  0639  1283               	bcf	3,5	;RP0=0, select bank0
  8468  063A  1303               	bcf	3,6	;RP1=0, select bank0
  8469  063B  00D2               	movwf	___ftmul@f1
  8470  063C  1683               	bsf	3,5	;RP0=1, select bank1
  8471  063D  1303               	bcf	3,6	;RP1=0, select bank1
  8472  063E  0843               	movf	(_rulegrande+1)^(0+128),w
  8473  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8474  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8475  0641  00D3               	movwf	___ftmul@f1+1
  8476  0642  1683               	bsf	3,5	;RP0=1, select bank1
  8477  0643  1303               	bcf	3,6	;RP1=0, select bank1
  8478  0644  0844               	movf	(_rulegrande+2)^(0+128),w
  8479  0645  1283               	bcf	3,5	;RP0=0, select bank0
  8480  0646  1303               	bcf	3,6	;RP1=0, select bank0
  8481  0647  00D4               	movwf	___ftmul@f1+2
  8482  0648  120A  158A  2344  120A  118A  	fcall	___ftmul
  8483  064D  1283               	bcf	3,5	;RP0=0, select bank0
  8484  064E  1303               	bcf	3,6	;RP1=0, select bank0
  8485  064F  0852               	movf	?___ftmul,w
  8486  0650  00A3               	movwf	___ftadd@f1
  8487  0651  0853               	movf	?___ftmul+1,w
  8488  0652  00A4               	movwf	___ftadd@f1+1
  8489  0653  0854               	movf	?___ftmul+2,w
  8490  0654  00A5               	movwf	___ftadd@f1+2
  8491  0655  1683               	bsf	3,5	;RP0=1, select bank1
  8492  0656  1303               	bcf	3,6	;RP1=0, select bank1
  8493  0657  0834               	movf	Fuzzy@soma^(0+128),w
  8494  0658  1283               	bcf	3,5	;RP0=0, select bank0
  8495  0659  1303               	bcf	3,6	;RP1=0, select bank0
  8496  065A  00A6               	movwf	___ftadd@f2
  8497  065B  1683               	bsf	3,5	;RP0=1, select bank1
  8498  065C  1303               	bcf	3,6	;RP1=0, select bank1
  8499  065D  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8500  065E  1283               	bcf	3,5	;RP0=0, select bank0
  8501  065F  1303               	bcf	3,6	;RP1=0, select bank0
  8502  0660  00A7               	movwf	___ftadd@f2+1
  8503  0661  1683               	bsf	3,5	;RP0=1, select bank1
  8504  0662  1303               	bcf	3,6	;RP1=0, select bank1
  8505  0663  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8506  0664  1283               	bcf	3,5	;RP0=0, select bank0
  8507  0665  1303               	bcf	3,6	;RP1=0, select bank0
  8508  0666  00A8               	movwf	___ftadd@f2+2
  8509  0667  120A  158A  2417  120A  118A  	fcall	___ftadd
  8510  066C  1283               	bcf	3,5	;RP0=0, select bank0
  8511  066D  1303               	bcf	3,6	;RP1=0, select bank0
  8512  066E  0823               	movf	?___ftadd,w
  8513  066F  1683               	bsf	3,5	;RP0=1, select bank1
  8514  0670  1303               	bcf	3,6	;RP1=0, select bank1
  8515  0671  00B4               	movwf	Fuzzy@soma^(0+128)
  8516  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8517  0673  1303               	bcf	3,6	;RP1=0, select bank0
  8518  0674  0824               	movf	?___ftadd+1,w
  8519  0675  1683               	bsf	3,5	;RP0=1, select bank1
  8520  0676  1303               	bcf	3,6	;RP1=0, select bank1
  8521  0677  00B5               	movwf	(Fuzzy@soma+1)^(0+128)
  8522  0678  1283               	bcf	3,5	;RP0=0, select bank0
  8523  0679  1303               	bcf	3,6	;RP1=0, select bank0
  8524  067A  0825               	movf	?___ftadd+2,w
  8525  067B  1683               	bsf	3,5	;RP0=1, select bank1
  8526  067C  1303               	bcf	3,6	;RP1=0, select bank1
  8527  067D  00B6               	movwf	(Fuzzy@soma+2)^(0+128)
  8528  067E                     i1l184:	
  8529                           
  8530                           ;main.c: 281: }
  8531                           ;main.c: 282: x += 1;
  8532  067E  3000               	movlw	0
  8533  067F  1283               	bcf	3,5	;RP0=0, select bank0
  8534  0680  1303               	bcf	3,6	;RP1=0, select bank0
  8535  0681  00A3               	movwf	___ftadd@f1
  8536  0682  3080               	movlw	128
  8537  0683  00A4               	movwf	___ftadd@f1+1
  8538  0684  303F               	movlw	63
  8539  0685  00A5               	movwf	___ftadd@f1+2
  8540  0686  1683               	bsf	3,5	;RP0=1, select bank1
  8541  0687  1303               	bcf	3,6	;RP1=0, select bank1
  8542  0688  083F               	movf	Fuzzy@x^(0+128),w
  8543  0689  1283               	bcf	3,5	;RP0=0, select bank0
  8544  068A  1303               	bcf	3,6	;RP1=0, select bank0
  8545  068B  00A6               	movwf	___ftadd@f2
  8546  068C  1683               	bsf	3,5	;RP0=1, select bank1
  8547  068D  1303               	bcf	3,6	;RP1=0, select bank1
  8548  068E  0840               	movf	(Fuzzy@x+1)^(0+128),w
  8549  068F  1283               	bcf	3,5	;RP0=0, select bank0
  8550  0690  1303               	bcf	3,6	;RP1=0, select bank0
  8551  0691  00A7               	movwf	___ftadd@f2+1
  8552  0692  1683               	bsf	3,5	;RP0=1, select bank1
  8553  0693  1303               	bcf	3,6	;RP1=0, select bank1
  8554  0694  0841               	movf	(Fuzzy@x+2)^(0+128),w
  8555  0695  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0696  1303               	bcf	3,6	;RP1=0, select bank0
  8557  0697  00A8               	movwf	___ftadd@f2+2
  8558  0698  120A  158A  2417  120A  118A  	fcall	___ftadd
  8559  069D  1283               	bcf	3,5	;RP0=0, select bank0
  8560  069E  1303               	bcf	3,6	;RP1=0, select bank0
  8561  069F  0823               	movf	?___ftadd,w
  8562  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  8563  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  8564  06A2  00BF               	movwf	Fuzzy@x^(0+128)
  8565  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  8566  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  8567  06A5  0824               	movf	?___ftadd+1,w
  8568  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  8569  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  8570  06A8  00C0               	movwf	(Fuzzy@x+1)^(0+128)
  8571  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  8572  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  8573  06AB  0825               	movf	?___ftadd+2,w
  8574  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  8575  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  8576  06AE  00C1               	movwf	(Fuzzy@x+2)^(0+128)
  8577  06AF  3001               	movlw	1
  8578  06B0  07BA               	addwf	Fuzzy@a_249^(0+128),f
  8579  06B1  1803               	skipnc
  8580  06B2  0ABB               	incf	(Fuzzy@a_249+1)^(0+128),f
  8581  06B3  3000               	movlw	0
  8582  06B4  07BB               	addwf	(Fuzzy@a_249+1)^(0+128),f
  8583  06B5  083B               	movf	(Fuzzy@a_249+1)^(0+128),w
  8584  06B6  3A80               	xorlw	128
  8585  06B7  00FF               	movwf	127
  8586  06B8  3080               	movlw	128
  8587  06B9  027F               	subwf	127,w
  8588  06BA  1D03               	skipz
  8589  06BB  2EBE               	goto	u549_25
  8590  06BC  3010               	movlw	16
  8591  06BD  023A               	subwf	Fuzzy@a_249^(0+128),w
  8592  06BE                     u549_25:	
  8593  06BE  1C03               	skipc
  8594  06BF  2C82               	goto	i1l180
  8595  06C0                     i1l3975:	
  8596                           
  8597                           ;main.c: 283: }
  8598                           ;main.c: 286: float reajuste = 0;
  8599  06C0  3000               	movlw	0
  8600  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  8601  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  8602  06C3  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8603  06C4  3000               	movlw	0
  8604  06C5  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8605  06C6  3000               	movlw	0
  8606  06C7  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8607                           
  8608                           ;main.c: 287: if (total_area != 0)
  8609  06C8  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8610  06C9  0438               	iorwf	(Fuzzy@total_area+1)^(0+128),w
  8611  06CA  0437               	iorwf	Fuzzy@total_area^(0+128),w
  8612  06CB  1903               	skipnz
  8613  06CC  2F06               	goto	i1l3979
  8614                           
  8615                           ;main.c: 288: {
  8616                           ;main.c: 289: reajuste = soma / total_area;
  8617  06CD  0837               	movf	Fuzzy@total_area^(0+128),w
  8618  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  8619  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  8620  06D0  00B0               	movwf	___ftdiv@f2
  8621  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  8622  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  8623  06D3  0838               	movf	(Fuzzy@total_area+1)^(0+128),w
  8624  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  8625  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  8626  06D6  00B1               	movwf	___ftdiv@f2+1
  8627  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  8628  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  8629  06D9  0839               	movf	(Fuzzy@total_area+2)^(0+128),w
  8630  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  8631  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  8632  06DC  00B2               	movwf	___ftdiv@f2+2
  8633  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  8634  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  8635  06DF  0834               	movf	Fuzzy@soma^(0+128),w
  8636  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  8637  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  8638  06E2  00B3               	movwf	___ftdiv@f1
  8639  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  8640  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  8641  06E5  0835               	movf	(Fuzzy@soma+1)^(0+128),w
  8642  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  8643  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  8644  06E8  00B4               	movwf	___ftdiv@f1+1
  8645  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  8646  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  8647  06EB  0836               	movf	(Fuzzy@soma+2)^(0+128),w
  8648  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  8649  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  8650  06EE  00B5               	movwf	___ftdiv@f1+2
  8651  06EF  120A  158A  228C  120A  118A  	fcall	___ftdiv
  8652  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8653  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  8654  06F6  0830               	movf	?___ftdiv,w
  8655  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  8656  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  8657  06F9  00A5               	movwf	Fuzzy@reajuste^(0+128)
  8658  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  8659  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  8660  06FC  0831               	movf	?___ftdiv+1,w
  8661  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  8662  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  8663  06FF  00A6               	movwf	(Fuzzy@reajuste+1)^(0+128)
  8664  0700  1283               	bcf	3,5	;RP0=0, select bank0
  8665  0701  1303               	bcf	3,6	;RP1=0, select bank0
  8666  0702  0832               	movf	?___ftdiv+2,w
  8667  0703  1683               	bsf	3,5	;RP0=1, select bank1
  8668  0704  1303               	bcf	3,6	;RP1=0, select bank1
  8669  0705  00A7               	movwf	(Fuzzy@reajuste+2)^(0+128)
  8670  0706                     i1l3979:	
  8671                           
  8672                           ;main.c: 290: }
  8673                           ;main.c: 293: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, deltaV)) * (setpointUI > 
      +                          rpm ? 1 : -1), 1023), 0);
  8674  0706  085A               	movf	(_setpointUI+1)^(0+128),w
  8675  0707  0258               	subwf	(_rpm+1)^(0+128),w
  8676  0708  1D03               	skipz
  8677  0709  2F0C               	goto	u551_25
  8678  070A  0859               	movf	_setpointUI^(0+128),w
  8679  070B  0257               	subwf	_rpm^(0+128),w
  8680  070C                     u551_25:	
  8681  070C  1C03               	skipc
  8682  070D  2F12               	goto	i1l3983
  8683  070E  30FF               	movlw	255
  8684  070F  00A8               	movwf	_Fuzzy$251^(0+128)
  8685  0710  30FF               	movlw	255
  8686  0711  2F15               	goto	L2
  8687  0712                     i1l3983:	
  8688  0712  3001               	movlw	1
  8689  0713  00A8               	movwf	_Fuzzy$251^(0+128)
  8690  0714  3000               	movlw	0
  8691  0715                     L2:	
  8692  0715  00A9               	movwf	(_Fuzzy$251^(0+128)+1)
  8693  0716  0829               	movf	(_Fuzzy$251+1)^(0+128),w
  8694  0717  1283               	bcf	3,5	;RP0=0, select bank0
  8695  0718  1303               	bcf	3,6	;RP1=0, select bank0
  8696  0719  01BD               	clrf	___wmul@multiplicand+1
  8697  071A  07BD               	addwf	___wmul@multiplicand+1,f
  8698  071B  1683               	bsf	3,5	;RP0=1, select bank1
  8699  071C  1303               	bcf	3,6	;RP1=0, select bank1
  8700  071D  0828               	movf	_Fuzzy$251^(0+128),w
  8701  071E  1283               	bcf	3,5	;RP0=0, select bank0
  8702  071F  1303               	bcf	3,6	;RP1=0, select bank0
  8703  0720  01BC               	clrf	___wmul@multiplicand
  8704  0721  07BC               	addwf	___wmul@multiplicand,f
  8705  0722  1683               	bsf	3,5	;RP0=1, select bank1
  8706  0723  1303               	bcf	3,6	;RP1=0, select bank1
  8707  0724  0854               	movf	(_deltaV+1)^(0+128),w
  8708  0725  01F9               	clrf	___lwtoft@c+1
  8709  0726  07F9               	addwf	___lwtoft@c+1,f
  8710  0727  0853               	movf	_deltaV^(0+128),w
  8711  0728  01F8               	clrf	___lwtoft@c
  8712  0729  07F8               	addwf	___lwtoft@c,f
  8713  072A  160A  118A  22F8  120A  118A  	fcall	___lwtoft
  8714  072F  0878               	movf	?___lwtoft,w
  8715  0730  1283               	bcf	3,5	;RP0=0, select bank0
  8716  0731  1303               	bcf	3,6	;RP1=0, select bank0
  8717  0732  00A3               	movwf	minimo@b
  8718  0733  0879               	movf	?___lwtoft+1,w
  8719  0734  00A4               	movwf	minimo@b+1
  8720  0735  087A               	movf	?___lwtoft+2,w
  8721  0736  00A5               	movwf	minimo@b+2
  8722  0737  1683               	bsf	3,5	;RP0=1, select bank1
  8723  0738  1303               	bcf	3,6	;RP1=0, select bank1
  8724  0739  0825               	movf	Fuzzy@reajuste^(0+128),w
  8725  073A  1283               	bcf	3,5	;RP0=0, select bank0
  8726  073B  1303               	bcf	3,6	;RP1=0, select bank0
  8727  073C  00A0               	movwf	minimo@a
  8728  073D  1683               	bsf	3,5	;RP0=1, select bank1
  8729  073E  1303               	bcf	3,6	;RP1=0, select bank1
  8730  073F  0826               	movf	(Fuzzy@reajuste+1)^(0+128),w
  8731  0740  1283               	bcf	3,5	;RP0=0, select bank0
  8732  0741  1303               	bcf	3,6	;RP1=0, select bank0
  8733  0742  00A1               	movwf	minimo@a+1
  8734  0743  1683               	bsf	3,5	;RP0=1, select bank1
  8735  0744  1303               	bcf	3,6	;RP1=0, select bank1
  8736  0745  0827               	movf	(Fuzzy@reajuste+2)^(0+128),w
  8737  0746  1283               	bcf	3,5	;RP0=0, select bank0
  8738  0747  1303               	bcf	3,6	;RP1=0, select bank0
  8739  0748  00A2               	movwf	minimo@a+2
  8740  0749  120A  118A  27E2  120A  118A  	fcall	_minimo
  8741  074E  1283               	bcf	3,5	;RP0=0, select bank0
  8742  074F  1303               	bcf	3,6	;RP1=0, select bank0
  8743  0750  0820               	movf	?_minimo,w
  8744  0751  00AC               	movwf	___fttol@f1
  8745  0752  0821               	movf	?_minimo+1,w
  8746  0753  00AD               	movwf	___fttol@f1+1
  8747  0754  0822               	movf	?_minimo+2,w
  8748  0755  00AE               	movwf	___fttol@f1+2
  8749  0756  160A  118A  2772  120A  118A  	fcall	___fttol
  8750  075B  1283               	bcf	3,5	;RP0=0, select bank0
  8751  075C  1303               	bcf	3,6	;RP1=0, select bank0
  8752  075D  082D               	movf	?___fttol+1,w
  8753  075E  01BB               	clrf	___wmul@multiplier+1
  8754  075F  07BB               	addwf	___wmul@multiplier+1,f
  8755  0760  082C               	movf	?___fttol,w
  8756  0761  01BA               	clrf	___wmul@multiplier
  8757  0762  07BA               	addwf	___wmul@multiplier,f
  8758  0763  160A  118A  246E  120A  118A  	fcall	___wmul
  8759  0768  1683               	bsf	3,5	;RP0=1, select bank1
  8760  0769  1303               	bcf	3,6	;RP1=0, select bank1
  8761  076A  0861               	movf	_pwm^(0+128),w
  8762  076B  1283               	bcf	3,5	;RP0=0, select bank0
  8763  076C  1303               	bcf	3,6	;RP1=0, select bank0
  8764  076D  073A               	addwf	?___wmul,w
  8765  076E  1683               	bsf	3,5	;RP0=1, select bank1
  8766  076F  1303               	bcf	3,6	;RP1=0, select bank1
  8767  0770  00A3               	movwf	_Fuzzy$1693^(0+128)
  8768  0771  0862               	movf	(_pwm+1)^(0+128),w
  8769  0772  1803               	skipnc
  8770  0773  0A62               	incf	(_pwm+1)^(0+128),w
  8771  0774  1283               	bcf	3,5	;RP0=0, select bank0
  8772  0775  1303               	bcf	3,6	;RP1=0, select bank0
  8773  0776  073B               	addwf	?___wmul+1,w
  8774  0777  1683               	bsf	3,5	;RP0=1, select bank1
  8775  0778  1303               	bcf	3,6	;RP1=0, select bank1
  8776  0779  00A4               	movwf	(_Fuzzy$1693+1)^(0+128)
  8777  077A  3000               	movlw	0
  8778  077B  1283               	bcf	3,5	;RP0=0, select bank0
  8779  077C  1303               	bcf	3,6	;RP1=0, select bank0
  8780  077D  00A9               	movwf	maximo@b
  8781  077E  3000               	movlw	0
  8782  077F  00AA               	movwf	maximo@b+1
  8783  0780  3000               	movlw	0
  8784  0781  00AB               	movwf	maximo@b+2
  8785  0782  30C0               	movlw	192
  8786  0783  00A3               	movwf	minimo@b
  8787  0784  307F               	movlw	127
  8788  0785  00A4               	movwf	minimo@b+1
  8789  0786  3044               	movlw	68
  8790  0787  00A5               	movwf	minimo@b+2
  8791  0788  1683               	bsf	3,5	;RP0=1, select bank1
  8792  0789  1303               	bcf	3,6	;RP1=0, select bank1
  8793  078A  0824               	movf	(_Fuzzy$1693+1)^(0+128),w
  8794  078B  01F9               	clrf	___lwtoft@c+1
  8795  078C  07F9               	addwf	___lwtoft@c+1,f
  8796  078D  0823               	movf	_Fuzzy$1693^(0+128),w
  8797  078E  01F8               	clrf	___lwtoft@c
  8798  078F  07F8               	addwf	___lwtoft@c,f
  8799  0790  160A  118A  22F8  120A  118A  	fcall	___lwtoft
  8800  0795  0878               	movf	?___lwtoft,w
  8801  0796  1283               	bcf	3,5	;RP0=0, select bank0
  8802  0797  1303               	bcf	3,6	;RP1=0, select bank0
  8803  0798  00A0               	movwf	minimo@a
  8804  0799  0879               	movf	?___lwtoft+1,w
  8805  079A  00A1               	movwf	minimo@a+1
  8806  079B  087A               	movf	?___lwtoft+2,w
  8807  079C  00A2               	movwf	minimo@a+2
  8808  079D  120A  118A  27E2  120A  118A  	fcall	_minimo
  8809  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  8810  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  8811  07A4  0820               	movf	?_minimo,w
  8812  07A5  00A6               	movwf	maximo@a
  8813  07A6  0821               	movf	?_minimo+1,w
  8814  07A7  00A7               	movwf	maximo@a+1
  8815  07A8  0822               	movf	?_minimo+2,w
  8816  07A9  00A8               	movwf	maximo@a+2
  8817  07AA  160A  118A  2389  120A  118A  	fcall	_maximo
  8818  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  8819  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  8820  07B1  0826               	movf	?_maximo,w
  8821  07B2  00AC               	movwf	___fttol@f1
  8822  07B3  0827               	movf	?_maximo+1,w
  8823  07B4  00AD               	movwf	___fttol@f1+1
  8824  07B5  0828               	movf	?_maximo+2,w
  8825  07B6  00AE               	movwf	___fttol@f1+2
  8826  07B7  160A  118A  2772  120A  118A  	fcall	___fttol
  8827  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  8828  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  8829  07BE  082D               	movf	?___fttol+1,w
  8830  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  8831  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  8832  07C1  01E2               	clrf	(_pwm+1)^(0+128)
  8833  07C2  07E2               	addwf	(_pwm+1)^(0+128),f
  8834  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  8835  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  8836  07C5  082C               	movf	?___fttol,w
  8837  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  8838  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  8839  07C8  01E1               	clrf	_pwm^(0+128)
  8840  07C9  07E1               	addwf	_pwm^(0+128),f
  8841                           
  8842                           ;main.c: 296: if(pwm > 0 && pwm < 1024)
  8843  07CA  0862               	movf	(_pwm+1)^(0+128),w
  8844  07CB  0461               	iorwf	_pwm^(0+128),w
  8845  07CC  1903               	skipnz
  8846  07CD  0008               	return
  8847  07CE  3004               	movlw	4
  8848  07CF  0262               	subwf	(_pwm+1)^(0+128),w
  8849  07D0  3000               	movlw	0
  8850  07D1  1903               	skipnz
  8851  07D2  0261               	subwf	_pwm^(0+128),w
  8852  07D3  1803               	skipnc
  8853  07D4  0008               	return
  8854                           
  8855                           ;main.c: 297: {
  8856                           ;main.c: 298: PWM_DutyCycle2(pwm);
  8857  07D5  0862               	movf	(_pwm+1)^(0+128),w
  8858  07D6  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8859  07D7  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8860  07D8  0861               	movf	_pwm^(0+128),w
  8861  07D9  01F0               	clrf	i1PWM_DutyCycle2@valor
  8862  07DA  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8863  07DB  160A  118A  2352   	fcall	i1_PWM_DutyCycle2
  8864  07DE  0008               	return
  8865  07DF                     L16:	
  8866  07DF                     __end_of_Fuzzy:	
  8867  07DF  120A  158A  2956   	ljmp	i1l3863


Data Sizes:
    Strings     73
    Constant    0
    Data        6
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     34      67
    BANK3            96     26      63
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _enviabuffer->_USART_WriteChar
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _maximo->_minimo
    ___wmul->___fttol
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_Fuzzy

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1648
                                             23 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     223
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     2      0     162
                                              2 BANK3      2     2      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     324
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      31
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      31
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0   53758
                                             68 BANK0      7     7      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                             ___wmul
                        _enviabuffer
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _enviabuffer                                          3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               36    36      0   52498
                                             66 BANK0      2     2      0
                                              0 BANK1     34    34      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   19869
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    7603
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _minimo                                               6     0      6    3552
                                              0 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _maximo                                               6     0      6    3296
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    2952
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     348
                                             26 BANK0      6     2      4
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2493
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             12 BANK0     14    10      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2434
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___awtoft
       ___ftpack
       _abs (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _trapmf (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _abs (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftge (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwtoft
       ___ftpack
     ___wmul
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _abs
     _maximo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
     _trapmf
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___wmul
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _abs (ARG)
   _enviabuffer
     _USART_WriteChar
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      3F       9       65.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4B      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DF      12        0.0%
ABS                  0      0      DF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 17:05:26 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00DD                           _y 01B3  
                         pc 0002                 ?_LCD_Cursor 01B5     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 003C          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00CF  
              ___ftadd@sign 002D                         l623 0822                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0E76                         _abs 0802  
                       _rpm 00D7                         fsr0 0004                         _pwm 00E1  
                       _sum 01AD  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 01B7                 _rulepequeno 00C8  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
              ___ftdiv@sign 003F                        ?_abs 0070          LCD_WriteString@Str 01B8  
                      l3133 0843                        l3125 0833                        l3151 0896  
                      l3143 087B                        l3135 0853                        l3147 0888  
                      l3263 13B5                        l3335 0A60                        l3277 13CA  
                      STR_1 103F                        STR_2 102E                        STR_3 1049  
                      STR_4 1006                        u6007 14AD                        u6017 14B9  
                      u6027 131D                        u3815 0847                        u3835 0855  
                      u3925 141D                        u3845 086A                        u3855 087C  
                      u3885 143E                        u3895 1505                        _OERR 00C1  
                      u5907 1616                        u5917 1626                        u5927 1634  
                      u5937 1640                        u5947 164C                        u5957 165A  
                      u5877 0A59                        u5967 1668                        u5887 0A85  
                      u5977 1674                        u5897 1334                        u5987 13C1  
                      u5997 149F                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 09D6                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        btemp 007E  
          __end_of_ADC_Init 12F8                ?_enviabuffer 0070                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 1323                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 12C1                       ??_ISR 0064  
              ___fttol@exp1 0039                       ??_abs 0072                ___fttol@lval 0035  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 1677             __end_of___aldiv 089F  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 0D20  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 0B44             __end_of___ftneg 12DB  
           __end_of___ftmul 0C17                       _T1CON 0010             __end_of___fttol 1800  
           __end_of___lwdiv 14FA                       i1l201 0FF5                       i1l130 0E6D  
                     i1l180 0482                       i1l244 12BA                       i1l184 067E  
                     i1l564 147A                       i1l735 15F1                       i1l729 15D8  
                     i1l758 0CBF                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 089F  
             ___awtoft@sign 007D                       _lendo 006E               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 146E                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 01B5              ?_LCD_WriteData 0070                 ?_USART_Init 01C4  
       enviabuffer@checksum 0072       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 0A8C                      ??_main 01CC               ___fttol@sign1 0034  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 14BC                  Fuzzy@a_244 00AC  
                Fuzzy@a_245 00AE                  Fuzzy@a_246 00B0                  Fuzzy@a_249 00BA  
                Fuzzy@delta 00B2                      ?_Fuzzy 0070                  _Fuzzy$1692 00A0  
                _Fuzzy$1693 00A3                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___awtoft 1408            __end_of___ftpack 160A  
                    i1l2111 15B1                      i1l2121 15DD                      i1l2113 15BD  
                    i1l2123 15E7                      i1l2115 15C2                      i1l2107 15AA  
                    i1l2221 0ABA                      i1l2215 0AA4                      i1l2243 0B1E  
                    i1l2235 0AFF                      u200_25 15D1                      i1l2501 17DB  
                    i1l2415 13F1                      i1l2431 0B72                      i1l2503 17E6  
                    i1l2255 156C                      i1l4103 0F76                      i1l4111 0F8C  
                    i1l2425 0B5C                      i1l2505 17E9                      i1l2337 136E  
                    i1l4033 0E98                      i1l2443 0BB1                      i1l2259 1593  
                    i1l4123 0FA9                      i1l2509 17F7                      i1l2357 1472  
                    i1l2541 16C7                      i1l4109 0F89                      i1l4029 0E8E  
                    i1l2455 0BD9                      i1l2447 0BC1                      i1l2711 1343  
                    i1l4135 0FF0                      i1l4055 0EE6                      i1l4137 0FF1  
                    i1l2459 0BE9                      i1l2475 178C                      i1l4067 0F0A  
                    u202_25 15E0                      i1l2493 17BE                      i1l2549 16E1  
                    i1l4093 0F4F                      i1l4077 0F1C                      i1l2495 17CE  
                    i1l2719 134F                      i1l4087 0F3D                      i1l3801 0CE3  
                    i1l4097 0F63                      i1l3811 0D06                      i1l3751 0C40  
                    i1l2871 14D2                      i1l3761 0C56                      i1l3833 0DCB  
                    i1l2881 14F3                      i1l3755 0C47                      i1l3827 0D99  
                    i1l3915 02C7                      i1l3781 0C91                      i1l3773 0C70  
                    i1l3941 041F                      i1l3925 0365                      i1l2877 14E8  
                    i1l2869 14C4                      i1l3791 0CAF                      i1l3783 0C96  
                    i1l3839 0E50                      i1l3919 0323                      i1l3863 0956  
                    i1l3793 0CBB                      i1l3785 0C9A                      i1l3937 03C3  
                    i1l3873 0075                      i1l3779 0C85                      i1l3947 0461  
                    i1l3867 09B2                      u205_25 15F8                      i1l3797 0CD1  
                    i1l3965 05D1                      i1l3893 01CA                      i1l3983 0712  
                    i1l3959 0524                      i1l3975 06C0                      i1l3889 016E  
                    i1l3979 0706                      i1l3899 020C                      u241_21 155F  
                    u241_22 1560                      u241_23 1565                      u241_24 1566  
                    u234_25 0ACC                      u243_21 1586                      u243_22 1587  
                    u243_23 158C                      u243_24 158D                      u235_25 0ADE  
                    u260_25 1482                      u236_25 0B00                      u237_25 0B11  
                    u341_25 14D3                      u502_25 0C86                      u238_25 0B1F  
                    u342_25 14DF                      u343_25 14E9                      u280_25 0BCA  
                    u505_25 0C9B            __end_of___lwtoft 130C                      u275_25 0B7E  
                    u291_25 17BF                      u259_25 147B                      u531_25 020A  
                    u523_25 0954                      u339_25 14C7                      u284_25 0BEA  
                    u276_25 0B90                      u508_25 0CB0                      u285_25 0BF2  
                    u541_25 045F                      u525_25 0073         __size_of_TIMER0_Set 0008  
                    u198_25 15B6                      u294_25 17DD                      u542_25 0480  
                    u534_25 0225                      u279_25 0BC2                      u551_25 070C  
                    u535_25 02C5                      u288_25 1793                      u544_25 048F  
                    u528_25 008E                      u297_25 1363                      u545_25 052F  
                    u537_25 0363                      u529_25 016C                      u546_25 053C  
                    u547_25 05DC                      u539_25 03C1                      u548_25 05E9  
                    u549_25 06BE                      u499_25 0C71                      _SSPADD 0093  
                    _SSPBUF 0013                      Fuzzy@a 00AA                      Fuzzy@x 00BF  
          LCD_WriteCmd@Byte 01B6                      ___ftge 1545                   ??___aldiv 01BD  
                    ___wmul 146E                   ??___ftadd 0029              _PWM_DutyCycle1 1408  
            _PWM_DutyCycle2 1429            ?_USART_WriteChar 0070                   ??___ftdiv 0036  
                 ??___ftneg 007E                      _deltaV 00D3                   ??___ftmul 0058  
                 ??___fttol 0030                   ??___lwdiv 0074                      _antigo 01A4  
                    _buffer 0190                      _fitemp 01AA                      _maximo 1389  
                    _minimo 07E2       USART_ReceiveChar@byte 0074                      _trapmf 0D20  
                    _pulsos 00D5                      _status 00DB       ___ftmul@f3_as_product 005D  
                 ?_ADC_Init 0070                      saved_w 007E         __size_of_USART_Init 004B  
             ?i1_TIMER0_Set 0070     __end_of__initialization 004F                   ?_LCD_Init 0070  
                ___ftadd@f1 0023                  ___ftadd@f2 0026             ??_LCD_WriteData 01B5  
                ___ftge@ff1 0070                  ___ftge@ff2 0073                  ___ftdiv@f1 0033  
                ___ftdiv@f2 0030                  ___ftdiv@f3 003B                  ___ftneg@f1 0020  
                ___awtoft@c 0078      __end_of_PWM_DutyCycle1 1429      __end_of_PWM_DutyCycle2 144A  
                ___ftmul@f1 0052                  ___ftmul@f2 0055        __size_of_enviabuffer 0075  
                ___fttol@f1 002C              __pcstackCOMMON 0070               __end_of_Fuzzy 07DF  
              __pidataBANK0 0800                __pidataBANK1 12AF               LCD_Cursor@Col 01B5  
             LCD_Cursor@Row 01B7                ??_LCD_Cursor 01B6             _LCD_WriteString 13C7  
                ___lwtoft@c 0078                   ?_PWM_Init 0070              _OPTION_REGbits 0081  
                ??_ADC_Init 01B5        __end_of_LCD_WriteCmd 1323                     ??_Fuzzy 0062  
 __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070                  __pbssBANK0 006B  
                __pbssBANK1 00C2                  __pbssBANK3 0190          __end_of_LCD_Cursor 13C7  
                ??_LCD_Init 01B7                     ISR@byte 006A             ?_PWM_DutyCycle1 01B5  
           ?_PWM_DutyCycle2 01B5                  __pmaintext 09D6                     ?___ftge 0070  
                   ?___wmul 003A                  __pintentry 0004                ??_TIMER0_Set 01B5  
                   _CCP1CON 0017                     _CCP2CON 001D                     ?_maximo 0026  
                   ?_minimo 0020                   ?___awtoft 0078                   ?___ftpack 0070  
             Fuzzy@reajuste 00A5                     ?_trapmf 0040                  ??_PWM_Init 01B5  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 12C9     __end_of_LCD_WriteString 13E7  
                 _ADCResult 00CB                ??_USART_Init 01C8           LCD_WriteData@Byte 01B6  
                   ___aldiv 0810             __size_of___ftge 005D                     ___ftadd 0C17  
                   ___ftdiv 0A8C                     ___ftneg 12D1             __size_of___wmul 0025  
                   ___ftmul 0B44                     ___fttol 1772                     ___lwdiv 14BC  
                ??___awtoft 007B                  ??___ftpack 0075             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 14FA                     __ptext2 0810  
                   __ptext3 12C1                     __ptext4 12DB                     __ptext5 144A  
                   __ptext6 1429                     __ptext7 1408                     __ptext8 13C7  
                   __ptext9 1323                  _pas_cooler 00DF                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 018A                   _T1CONbits 0010  
                 _T2CONbits 0012                __size_of_abs 000E            ___aldiv@dividend 01B9  
                 _LCD_Clear 1493          __end_of_USART_Init 1545                     clrloop0 12CA  
      end_of_initialization 004F                     maximo@a 0026                     maximo@b 0029  
                   minimo@a 0020                     minimo@b 0023                   _RCSTAbits 0018  
          ___aldiv@quotient 01C0                     psplit$0 270037                     psplit$1 370038  
                   psplit$2 380039                     trapmf@a 0043                     trapmf@b 0046  
                   trapmf@c 0049                     trapmf@d 004C                     trapmf@x 0040  
           Fuzzy@total_area 00B7        __end_ofi1_TIMER0_Set 12B9       __size_of_LCD_WriteCmd 0017  
                 _PORTBbits 0006                   _PORTEbits 0009                  _setpointUI 00D9  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 1352           __size_of_ADC_Init 0012  
                _rulegrande 00C2         PWM_DutyCycle1@valor 01B5                  _total_area 01B0  
       PWM_DutyCycle2@valor 01B5                 _CCP1CONbits 0017                 ___ftdiv@exp 003E  
               _CCP2CONbits 001D                   _TXSTAbits 0098            ?_LCD_WriteString 0070  
         __size_of_LCD_Init 006D                _LCD_WriteCmd 130C                 ___ftmul@exp 005C  
            __end_of___ftge 15A2              __end_of___wmul 1493              __end_of_maximo 13A7  
            __end_of_minimo 0800              __end_of_trapmf 0E76    __size_of_USART_WriteChar 0008  
         __size_of_PWM_Init 0024         start_initialization 0015                 __end_of_ISR 1000  
              _indicebuffer 006B                 __end_of_abs 0810            ??_PWM_DutyCycle1 01B7  
          ??_PWM_DutyCycle2 01B7                   Fuzzy@soma 00B4                   Fuzzy@rule 00BC  
                 _Fuzzy$251 00A8               ??_enviabuffer 0071       __end_of_LCD_WriteData 133A  
         _USART_ReceiveChar 133A                    ??___ftge 0076          ?_USART_ReceiveChar 0070  
                  ??___wmul 007E                 __pdataBANK0 006D                 __pdataBANK1 00DF  
                  ??_maximo 007E                    ??_minimo 007E                    ??_trapmf 007E  
       ??_USART_ReceiveChar 0073           __size_of___awtoft 0021           __size_of___ftpack 0068  
                 ___latbits 0002           __size_of___lwtoft 0014               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK3 01B5                 ??_LCD_Clear 01B7  
       __end_of__stringdata 104F   __end_of_USART_ReceiveChar 1352       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 01B5                    ?___aldiv 01B5  
       __end_of_enviabuffer 16EC                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0052                    ?___fttol 002C  
                  ?___lwdiv 0070                   __pstrings 1000                   _ativa_fan 01A7  
             ??_TIMER0_Init 01B5          USART_Init@BaudRate 01C4                    _ADC_Init 12E6  
            __size_of_Fuzzy FF40            ___lwdiv@quotient 0075                  pnum$text22 0027  
         ??_USART_WriteChar 0070                i1_TIMER0_Set 12B3             ___aldiv@divisor 01B5  
         interrupt_function 0004             ___aldiv@counter 01BE                    _LCD_Init 160A  
            ___wmul@product 003E                   clear_ram0 12C9                    _PIE1bits 008C  
                  _PIE2bits 008D                    _PIR1bits 000C                    _PIR2bits 000D  
  __end_ofi1_PWM_DutyCycle2 136D                  _ADCON0bits 001F                 __stringbase 1005  
                _ADCON1bits 009F                 __stringdata 1006                    _PWM_Init 144A  
         ___wmul@multiplier 003A                   _rulemedio 00C5            enviabuffer@index 0073  
       __end_of_TIMER0_Init 12E6  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
               _enviabuffer 1677            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D3  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 13E7  
                  ___ftpack 15A2          __end_of__stringtab 1006                    ___lwtoft 12F8  
            _bufferRecebido 019D                 _cruzeiroSet 006D                 _cruzeiroVel 00D1  
           ___lwdiv@divisor 0070             ___lwdiv@counter 0077           _USART_WriteString 136D  
                  __ptext10 160A                    __ptext11 13A7                    __ptext20 136D  
                  __ptext12 1493                    __ptext21 12B9                    __ptext13 130C  
                  __ptext30 1545                    __ptext22 089F                    __ptext14 12E6  
                  __ptext31 0802                    __ptext23 1352                    __ptext15 0E76  
                  __ptext32 146E                    __ptext24 0D20                    __ptext16 12B3  
                  __ptext33 12F8                    __ptext25 12D1                    __ptext17 1677  
                  __ptext34 1772                    __ptext26 0A8C                    __ptext18 14BC  
                  __ptext35 0B44                    __ptext27 0C17                    __ptext19 133A  
                  __ptext36 13E7                    __ptext28 07E2                    __ptext37 15A2  
                  __ptext29 1389                    _antigoUI 00CD          ?_USART_WriteString 0070  
             __size_of_main 00B6         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                _LCD_Cursor 13A7    __size_of_LCD_WriteString 0020          pnum$text22_split_1 0037  
        pnum$text22_split_2 0038          pnum$text22_split_3 0039                 _TIMER0_Init 12DB  
                _INTCONbits 000B   __end_of_USART_WriteString 1389                    intlevel1 0000  
                 stringcode 1000        USART_WriteString@str 0072                  _TIMER0_Set 12C1  
                  trapmf@ua 004F             _USART_WriteChar 12B9                    stringdir 1000  
                  stringtab 1000                ___aldiv@sign 01BF      __size_of_LCD_WriteData 0017  
               _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014  
                _USART_Init 14FA  
