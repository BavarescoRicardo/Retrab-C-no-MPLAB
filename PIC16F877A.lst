

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Jun 06 19:20:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0000                     	;# 
   361  0001                     	;# 
   362  0002                     	;# 
   363  0003                     	;# 
   364  0004                     	;# 
   365  0005                     	;# 
   366  0006                     	;# 
   367  0007                     	;# 
   368  0008                     	;# 
   369  0009                     	;# 
   370  000A                     	;# 
   371  000B                     	;# 
   372  000C                     	;# 
   373  000D                     	;# 
   374  000E                     	;# 
   375  000E                     	;# 
   376  000F                     	;# 
   377  0010                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0014                     	;# 
   382  0015                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0017                     	;# 
   386  0018                     	;# 
   387  0019                     	;# 
   388  001A                     	;# 
   389  001B                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001D                     	;# 
   393  001E                     	;# 
   394  001F                     	;# 
   395  0081                     	;# 
   396  0085                     	;# 
   397  0086                     	;# 
   398  0087                     	;# 
   399  0088                     	;# 
   400  0089                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0094                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0088                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  010F                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600                           
   601                           	psect	idataBANK1
   602  07F4                     __pidataBANK1:	
   603                           
   604                           ;initializer for _setpoint
   605  07F4  3400               	retlw	0
   606  07F5  34A0               	retlw	160
   607  07F6  3441               	retlw	65
   608                           
   609                           ;initializer for _tf
   610  07F7  3400               	retlw	0
   611  07F8  3448               	retlw	72
   612  07F9  3442               	retlw	66
   613                           
   614                           ;initializer for _pas_cooler
   615  07FA  3407               	retlw	7
   616  07FB  3400               	retlw	0
   617                           
   618                           ;initializer for _pwm
   619  07FC  3432               	retlw	50
   620  07FD  3400               	retlw	0
   621                           
   622                           ;initializer for _setpointUI
   623  07FE  34C8               	retlw	200
   624  07FF  3400               	retlw	0
   625                           
   626                           	psect	strings
   627  0800                     __pstrings:	
   628  0800                     stringtab:	
   629  0800                     __stringtab:	
   630                           
   631                           ;	String table - string pointers are 1 byte each
   632  0800  1BFF               	btfsc	btemp+1,7
   633  0801  280A               	ljmp	stringcode
   634  0802  1383               	bcf	3,7
   635  0803  187F               	btfsc	btemp+1,0
   636  0804  1783               	bsf	3,7
   637  0805  0800               	movf	0,w
   638  0806  0A84               	incf	4,f
   639  0807  1903               	skipnz
   640  0808  0AFF               	incf	btemp+1,f
   641  0809  0008               	return
   642  080A                     stringcode:	
   643  080A                     stringdir:	
   644  080A  3008               	movlw	high stringdir
   645  080B  008A               	movwf	10
   646  080C  0804               	movf	4,w
   647  080D  0A84               	incf	4,f
   648  080E  0782               	addwf	2,f
   649  080F                     __stringbase:	
   650  080F  3400               	retlw	0
   651  0810                     __end_of__stringtab:	
   652  0810                     _dpowers:	
   653  0810  3401               	retlw	1
   654  0811  3400               	retlw	0
   655  0812  340A               	retlw	10
   656  0813  3400               	retlw	0
   657  0814  3464               	retlw	100
   658  0815  3400               	retlw	0
   659  0816  34E8               	retlw	232
   660  0817  3403               	retlw	3
   661  0818  3410               	retlw	16
   662  0819  3427               	retlw	39
   663  081A                     __end_of_dpowers:	
   664  000E                     _TMR1	set	14
   665  001F                     _ADCON0bits	set	31
   666  001E                     _ADRESH	set	30
   667  0017                     _CCP1CON	set	23
   668  0017                     _CCP1CONbits	set	23
   669  001D                     _CCP2CON	set	29
   670  001D                     _CCP2CONbits	set	29
   671  0015                     _CCPR1L	set	21
   672  001B                     _CCPR2L	set	27
   673  000B                     _INTCONbits	set	11
   674  000C                     _PIR1bits	set	12
   675  000D                     _PIR2bits	set	13
   676  0005                     _PORTA	set	5
   677  0006                     _PORTB	set	6
   678  0006                     _PORTBbits	set	6
   679  0007                     _PORTC	set	7
   680  0008                     _PORTD	set	8
   681  0009                     _PORTE	set	9
   682  0009                     _PORTEbits	set	9
   683  001A                     _RCREG	set	26
   684  0018                     _RCSTAbits	set	24
   685  0013                     _SSPBUF	set	19
   686  0014                     _SSPCONbits	set	20
   687  0010                     _T1CON	set	16
   688  0010                     _T1CONbits	set	16
   689  0012                     _T2CONbits	set	18
   690  0001                     _TMR0	set	1
   691  000F                     _TMR1H	set	15
   692  000E                     _TMR1L	set	14
   693  0019                     _TXREG	set	25
   694  00C1                     _OERR	set	193
   695  009F                     _ADCON1bits	set	159
   696  009E                     _ADRESL	set	158
   697  0081                     _OPTION_REGbits	set	129
   698  008C                     _PIE1bits	set	140
   699  008D                     _PIE2bits	set	141
   700  0092                     _PR2	set	146
   701  0099                     _SPBRG	set	153
   702  0093                     _SSPADD	set	147
   703  0091                     _SSPCON2	set	145
   704  0091                     _SSPCON2bits	set	145
   705  0094                     _SSPSTATbits	set	148
   706  0085                     _TRISA	set	133
   707  0086                     _TRISB	set	134
   708  0087                     _TRISC	set	135
   709  0088                     _TRISD	set	136
   710  0089                     _TRISE	set	137
   711  0098                     _TXSTAbits	set	152
   712  010D                     _EEADR	set	269
   713  010C                     _EEDATA	set	268
   714  018C                     _EECON1bits	set	396
   715  018D                     _EECON2	set	397
   716  081A                     __stringdata:	
   717  081A                     STR_19:	
   718  081A  340A               	retlw	10
   719  081B  340D               	retlw	13
   720  081C  3420               	retlw	32	;' '
   721  081D  342D               	retlw	45	;'-'
   722  081E  342D               	retlw	45	;'-'
   723  081F  342D               	retlw	45	;'-'
   724  0820  342D               	retlw	45	;'-'
   725  0821  342D               	retlw	45	;'-'
   726  0822  342D               	retlw	45	;'-'
   727  0823  342D               	retlw	45	;'-'
   728  0824  3420               	retlw	32	;' '
   729  0825  3445               	retlw	69	;'E'
   730  0826  3453               	retlw	83	;'S'
   731  0827  3454               	retlw	84	;'T'
   732  0828  344F               	retlw	79	;'O'
   733  0829  3455               	retlw	85	;'U'
   734  082A  3452               	retlw	82	;'R'
   735  082B  344F               	retlw	79	;'O'
   736  082C  3420               	retlw	32	;' '
   737  082D  3444               	retlw	68	;'D'
   738  082E  3445               	retlw	69	;'E'
   739  082F  3420               	retlw	32	;' '
   740  0830  3450               	retlw	80	;'P'
   741  0831  3449               	retlw	73	;'I'
   742  0832  344C               	retlw	76	;'L'
   743  0833  3448               	retlw	72	;'H'
   744  0834  3441               	retlw	65	;'A'
   745  0835  3420               	retlw	32	;' '
   746  0836  342D               	retlw	45	;'-'
   747  0837  342D               	retlw	45	;'-'
   748  0838  342D               	retlw	45	;'-'
   749  0839  342D               	retlw	45	;'-'
   750  083A  342D               	retlw	45	;'-'
   751  083B  342D               	retlw	45	;'-'
   752  083C  342D               	retlw	45	;'-'
   753  083D  3420               	retlw	32	;' '
   754  083E  340A               	retlw	10
   755  083F  340D               	retlw	13
   756  0840  3420               	retlw	32	;' '
   757  0841  3400               	retlw	0
   758  0842                     STR_11:	
   759  0842  3449               	retlw	73	;'I'
   760  0843  346E               	retlw	110	;'n'
   761  0844  3469               	retlw	105	;'i'
   762  0845  3463               	retlw	99	;'c'
   763  0846  3469               	retlw	105	;'i'
   764  0847  3461               	retlw	97	;'a'
   765  0848  346C               	retlw	108	;'l'
   766  0849  3469               	retlw	105	;'i'
   767  084A  347A               	retlw	122	;'z'
   768  084B  3461               	retlw	97	;'a'
   769  084C  346E               	retlw	110	;'n'
   770  084D  3464               	retlw	100	;'d'
   771  084E  346F               	retlw	111	;'o'
   772  084F  3420               	retlw	32	;' '
   773  0850  346F               	retlw	111	;'o'
   774  0851  3420               	retlw	32	;' '
   775  0852  3450               	retlw	80	;'P'
   776  0853  3449               	retlw	73	;'I'
   777  0854  3443               	retlw	67	;'C'
   778  0855  3431               	retlw	49	;'1'
   779  0856  3436               	retlw	54	;'6'
   780  0857  3446               	retlw	70	;'F'
   781  0858  3438               	retlw	56	;'8'
   782  0859  3437               	retlw	55	;'7'
   783  085A  3437               	retlw	55	;'7'
   784  085B  3441               	retlw	65	;'A'
   785  085C  340A               	retlw	10
   786  085D  340D               	retlw	13
   787  085E  3400               	retlw	0
   788  085F                     STR_12:	
   789  085F  3455               	retlw	85	;'U'
   790  0860  3453               	retlw	83	;'S'
   791  0861  3441               	retlw	65	;'A'
   792  0862  3452               	retlw	82	;'R'
   793  0863  3454               	retlw	84	;'T'
   794  0864  343A               	retlw	58	;':'
   795  0865  3420               	retlw	32	;' '
   796  0866  3431               	retlw	49	;'1'
   797  0867  3431               	retlw	49	;'1'
   798  0868  3435               	retlw	53	;'5'
   799  0869  342E               	retlw	46	;'.'
   800  086A  3432               	retlw	50	;'2'
   801  086B  3430               	retlw	48	;'0'
   802  086C  3430               	retlw	48	;'0'
   803  086D  3462               	retlw	98	;'b'
   804  086E  3470               	retlw	112	;'p'
   805  086F  3473               	retlw	115	;'s'
   806  0870  340A               	retlw	10
   807  0871  340D               	retlw	13
   808  0872  3400               	retlw	0
   809  0873                     STR_13:	
   810  0873  3449               	retlw	73	;'I'
   811  0874  346E               	retlw	110	;'n'
   812  0875  3469               	retlw	105	;'i'
   813  0876  3463               	retlw	99	;'c'
   814  0877  3469               	retlw	105	;'i'
   815  0878  3461               	retlw	97	;'a'
   816  0879  346C               	retlw	108	;'l'
   817  087A  3469               	retlw	105	;'i'
   818  087B  347A               	retlw	122	;'z'
   819  087C  3461               	retlw	97	;'a'
   820  087D  346E               	retlw	110	;'n'
   821  087E  3464               	retlw	100	;'d'
   822  087F  346F               	retlw	111	;'o'
   823  0880  342E               	retlw	46	;'.'
   824  0881  342E               	retlw	46	;'.'
   825  0882  342E               	retlw	46	;'.'
   826  0883  3400               	retlw	0
   827  0884                     STR_10:	
   828  0884  340A               	retlw	10
   829  0885  340D               	retlw	13
   830  0886  3470               	retlw	112	;'p'
   831  0887  3477               	retlw	119	;'w'
   832  0888  346D               	retlw	109	;'m'
   833  0889  3420               	retlw	32	;' '
   834  088A  343D               	retlw	61	;'='
   835  088B  3420               	retlw	32	;' '
   836  088C  3431               	retlw	49	;'1'
   837  088D  3430               	retlw	48	;'0'
   838  088E  3432               	retlw	50	;'2'
   839  088F  3433               	retlw	51	;'3'
   840  0890  340A               	retlw	10
   841  0891  340D               	retlw	13
   842  0892  3400               	retlw	0
   843  0893                     STR_8:	
   844  0893  340A               	retlw	10
   845  0894  340D               	retlw	13
   846  0895  3470               	retlw	112	;'p'
   847  0896  3477               	retlw	119	;'w'
   848  0897  346D               	retlw	109	;'m'
   849  0898  3420               	retlw	32	;' '
   850  0899  343D               	retlw	61	;'='
   851  089A  3420               	retlw	32	;' '
   852  089B  3438               	retlw	56	;'8'
   853  089C  3439               	retlw	57	;'9'
   854  089D  3436               	retlw	54	;'6'
   855  089E  340A               	retlw	10
   856  089F  340D               	retlw	13
   857  08A0  3400               	retlw	0
   858  08A1                     STR_7:	
   859  08A1  340A               	retlw	10
   860  08A2  340D               	retlw	13
   861  08A3  3470               	retlw	112	;'p'
   862  08A4  3477               	retlw	119	;'w'
   863  08A5  346D               	retlw	109	;'m'
   864  08A6  3420               	retlw	32	;' '
   865  08A7  343D               	retlw	61	;'='
   866  08A8  3420               	retlw	32	;' '
   867  08A9  3437               	retlw	55	;'7'
   868  08AA  3436               	retlw	54	;'6'
   869  08AB  3438               	retlw	56	;'8'
   870  08AC  340A               	retlw	10
   871  08AD  340D               	retlw	13
   872  08AE  3400               	retlw	0
   873  08AF                     STR_1:	
   874  08AF  340A               	retlw	10
   875  08B0  340D               	retlw	13
   876  08B1  3464               	retlw	100	;'d'
   877  08B2  3465               	retlw	101	;'e'
   878  08B3  3473               	retlw	115	;'s'
   879  08B4  346C               	retlw	108	;'l'
   880  08B5  3469               	retlw	105	;'i'
   881  08B6  3467               	retlw	103	;'g'
   882  08B7  3461               	retlw	97	;'a'
   883  08B8  3464               	retlw	100	;'d'
   884  08B9  346F               	retlw	111	;'o'
   885  08BA  340A               	retlw	10
   886  08BB  340D               	retlw	13
   887  08BC  3400               	retlw	0
   888  08BD                     STR_2:	
   889  08BD  340A               	retlw	10
   890  08BE  340D               	retlw	13
   891  08BF  3470               	retlw	112	;'p'
   892  08C0  3477               	retlw	119	;'w'
   893  08C1  346D               	retlw	109	;'m'
   894  08C2  3420               	retlw	32	;' '
   895  08C3  343D               	retlw	61	;'='
   896  08C4  3420               	retlw	32	;' '
   897  08C5  340A               	retlw	10
   898  08C6  340D               	retlw	13
   899  08C7  3400               	retlw	0
   900  08C8                     STR_18:	
   901  08C8  3444               	retlw	68	;'D'
   902  08C9  3465               	retlw	101	;'e'
   903  08CA  346C               	retlw	108	;'l'
   904  08CB  3474               	retlw	116	;'t'
   905  08CC  3461               	retlw	97	;'a'
   906  08CD  343A               	retlw	58	;':'
   907  08CE  3420               	retlw	32	;' '
   908  08CF  3400               	retlw	0
   909  08D0                     STR_17:	
   910  08D0  3452               	retlw	82	;'R'
   911  08D1  3450               	retlw	80	;'P'
   912  08D2  344D               	retlw	77	;'M'
   913  08D3  343A               	retlw	58	;':'
   914  08D4  3420               	retlw	32	;' '
   915  08D5  3400               	retlw	0
   916  08D6                     STR_14:	
   917  08D6  3425               	retlw	37	;'%'
   918  08D7  3430               	retlw	48	;'0'
   919  08D8  3434               	retlw	52	;'4'
   920  08D9  3464               	retlw	100	;'d'
   921  08DA  3400               	retlw	0
   922  08DB                     __end_of__stringdata:	
   923                           
   924                           ; #config settings
   925  0000                     
   926                           	psect	cinit
   927  0015                     start_initialization:	
   928  0015                     __initialization:	
   929                           
   930                           ; Clear objects allocated to BANK0
   931  0015  01ED               	clrf	__pbssBANK0& (0+127)
   932  0016  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   933                           
   934                           ; Clear objects allocated to BANK1
   935  0017  1383               	bcf	3,7	;select IRP bank0
   936  0018  30C2               	movlw	low __pbssBANK1
   937  0019  0084               	movwf	4
   938  001A  30E3               	movlw	low (__pbssBANK1+33)
   939  001B  160A  118A  204F  120A  118A  	fcall	clear_ram0
   940                           
   941                           ; Clear objects allocated to BANK3
   942  0020  1783               	bsf	3,7	;select IRP bank2
   943  0021  3090               	movlw	low __pbssBANK3
   944  0022  0084               	movwf	4
   945  0023  30B1               	movlw	low (__pbssBANK3+33)
   946  0024  160A  118A  204F  120A  118A  	fcall	clear_ram0
   947                           
   948                           ; Initialize objects allocated to BANK1
   949  0029  1383               	bcf	3,7	;select IRP bank0
   950  002A  30EF               	movlw	low (__pdataBANK1+12)
   951  002B  00FD               	movwf	btemp+-1
   952  002C  3007               	movlw	high __pidataBANK1
   953  002D  00FE               	movwf	btemp
   954  002E  30F4               	movlw	low __pidataBANK1
   955  002F  00FF               	movwf	btemp+1
   956  0030  30E3               	movlw	low __pdataBANK1
   957  0031  0084               	movwf	4
   958  0032  160A  118A  2080   	fcall	init_ram0
   959  0035                     end_of_initialization:	
   960                           ;End of C runtime variable initialization code
   961                           
   962  0035                     __end_of__initialization:	
   963  0035  0183               	clrf	3
   964  0036  120A  158A  2A0E   	ljmp	_main	;jump to C main() function
   965                           
   966                           	psect	bssBANK0
   967  006D                     __pbssBANK0:	
   968  006D                     _deltaV:	
   969  006D                     	ds	2
   970                           
   971                           	psect	bssBANK1
   972  00C2                     __pbssBANK1:	
   973  00C2                     _ativa_fan:	
   974  00C2                     	ds	3
   975  00C5                     _fitemp:	
   976  00C5                     	ds	3
   977  00C8                     _fop_rule1:	
   978  00C8                     	ds	3
   979  00CB                     _fop_rule2:	
   980  00CB                     	ds	3
   981  00CE                     _fop_rule3:	
   982  00CE                     	ds	3
   983  00D1                     _sum:	
   984  00D1                     	ds	3
   985  00D4                     _total_area:	
   986  00D4                     	ds	3
   987  00D7                     _x:	
   988  00D7                     	ds	3
   989  00DA                     _y:	
   990  00DA                     	ds	3
   991  00DD                     _contagens_tm0:	
   992  00DD                     	ds	2
   993  00DF                     _pulsos:	
   994  00DF                     	ds	2
   995  00E1                     _rpm:	
   996  00E1                     	ds	2
   997                           
   998                           	psect	dataBANK1
   999  00E3                     __pdataBANK1:	
  1000  00E3                     _setpoint:	
  1001  00E3                     	ds	3
  1002  00E6                     _tf:	
  1003  00E6                     	ds	3
  1004  00E9                     _pas_cooler:	
  1005  00E9                     	ds	2
  1006  00EB                     _pwm:	
  1007  00EB                     	ds	2
  1008  00ED                     _setpointUI:	
  1009  00ED                     	ds	2
  1010                           
  1011                           	psect	bssBANK3
  1012  0190                     __pbssBANK3:	
  1013  0190                     _derro:	
  1014  0190                     	ds	3
  1015  0193                     _ADCResult:	
  1016  0193                     	ds	2
  1017  0195                     _contador_rb6:	
  1018  0195                     	ds	2
  1019  0197                     _status:	
  1020  0197                     	ds	2
  1021  0199                     _temp_lida:	
  1022  0199                     	ds	2
  1023  019B                     _tempo_rb6:	
  1024  019B                     	ds	2
  1025  019D                     _display_pwm:	
  1026  019D                     	ds	10
  1027  01A7                     _display_rpm:	
  1028  01A7                     	ds	10
  1029                           
  1030                           	psect	clrtext
  1031  104F                     clear_ram0:	
  1032                           ;	Called with FSR containing the base address, and
  1033                           ;	W with the last address+1
  1034                           
  1035  104F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1036  1050                     clrloop0:	
  1037  1050  0180               	clrf	0	;clear RAM location pointed to by FSR
  1038  1051  0A84               	incf	4,f	;increment pointer
  1039  1052  0604               	xorwf	4,w	;XOR with final address
  1040  1053  1903               	btfsc	3,2	;have we reached the end yet?
  1041  1054  3400               	retlw	0	;all done for this memory range, return
  1042  1055  0604               	xorwf	4,w	;XOR again to restore value
  1043  1056  2850               	goto	clrloop0	;do the next byte
  1044                           
  1045                           	psect	inittext
  1046  107C                     init_fetch0:	
  1047                           ;	Called with low address in FSR and high address in W
  1048                           
  1049  107C  087E               	movf	126,w
  1050  107D  008A               	movwf	10
  1051  107E  087F               	movf	127,w
  1052  107F  0082               	movwf	2
  1053  1080                     init_ram0:	
  1054                           ;Called with:
  1055                           ;	high address of idata address in btemp 
  1056                           ;	low address of idata address in btemp+1 
  1057                           ;	low address of data in FSR
  1058                           ;	high address + 1 of data in btemp-1
  1059                           
  1060  1080  207C  160A  118A   	fcall	init_fetch0
  1061  1083  0080               	movwf	0
  1062  1084  0A84               	incf	4,f
  1063  1085  0804               	movf	4,w
  1064  1086  067D               	xorwf	125,w
  1065  1087  1903               	btfsc	3,2
  1066  1088  3400               	retlw	0
  1067  1089  0AFF               	incf	127,f
  1068  108A  1903               	btfsc	3,2
  1069  108B  0AFE               	incf	126,f
  1070  108C  2880               	goto	init_ram0
  1071                           
  1072                           	psect	cstackBANK1
  1073  00A0                     __pcstackBANK1:	
  1074  00A0                     ?_PWM_DutyCycle2:	
  1075  00A0                     ??_TIMER0_Set:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  00A0                     ??_TIMER0_Init:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  00A0                     ??_ADC_Init:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  00A0                     ??_PWM_Init:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  00A0                     ?_LCD_Cursor:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  00A0                     ?_PWM_DutyCycle1:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  00A0                     ??_isdigit:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  00A0                     ??_USART_WriteChar:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  00A0                     ??_LCD_WriteCmd:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  00A0                     ??_LCD_WriteData:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  00A0                     ?___wmul:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  00A0                     ?___lwdiv:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111  00A0                     ?___aldiv:	
  1112                           ; 2 bytes @ 0x0
  1113                           
  1114  00A0                     USART_WriteChar@byte:	
  1115                           ; 4 bytes @ 0x0
  1116                           
  1117  00A0                     TIMER0_Set@contagens:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  00A0                     LCD_Cursor@Col:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  00A0                     _isdigit$1449:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  00A0                     PWM_DutyCycle1@valor:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  00A0                     PWM_DutyCycle2@valor:	
  1130                           ; 2 bytes @ 0x0
  1131                           
  1132  00A0                     ___wmul@multiplier:	
  1133                           ; 2 bytes @ 0x0
  1134                           
  1135  00A0                     ___lwdiv@divisor:	
  1136                           ; 2 bytes @ 0x0
  1137                           
  1138  00A0                     ___aldiv@divisor:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141                           
  1142                           ; 4 bytes @ 0x0
  1143  00A0                     	ds	1
  1144  00A1                     ?_USART_WriteString:	
  1145  00A1                     ??_LCD_Cursor:	
  1146                           ; 0 bytes @ 0x1
  1147                           
  1148  00A1                     LCD_WriteCmd@Byte:	
  1149                           ; 0 bytes @ 0x1
  1150                           
  1151  00A1                     LCD_WriteData@Byte:	
  1152                           ; 1 bytes @ 0x1
  1153                           
  1154  00A1                     isdigit@c:	
  1155                           ; 1 bytes @ 0x1
  1156                           
  1157  00A1                     USART_WriteString@str:	
  1158                           ; 1 bytes @ 0x1
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x1
  1162  00A1                     	ds	1
  1163  00A2                     ??_PWM_DutyCycle2:	
  1164  00A2                     ??_LCD_Init:	
  1165                           ; 0 bytes @ 0x2
  1166                           
  1167  00A2                     ?_LCD_WriteString:	
  1168                           ; 0 bytes @ 0x2
  1169                           
  1170  00A2                     ??_PWM_DutyCycle1:	
  1171                           ; 0 bytes @ 0x2
  1172                           
  1173  00A2                     ??_LCD_Clear:	
  1174                           ; 0 bytes @ 0x2
  1175                           
  1176  00A2                     LCD_Cursor@Row:	
  1177                           ; 0 bytes @ 0x2
  1178                           
  1179  00A2                     LCD_WriteString@Str:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  00A2                     ___wmul@multiplicand:	
  1183                           ; 2 bytes @ 0x2
  1184                           
  1185  00A2                     ___lwdiv@dividend:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x2
  1190  00A2                     	ds	1
  1191  00A3                     ??_USART_WriteString:	
  1192                           
  1193                           ; 0 bytes @ 0x3
  1194  00A3                     	ds	1
  1195  00A4                     ??_LCD_WriteString:	
  1196  00A4                     ??___wmul:	
  1197                           ; 0 bytes @ 0x4
  1198                           
  1199  00A4                     ??___lwdiv:	
  1200                           ; 0 bytes @ 0x4
  1201                           
  1202  00A4                     ___wmul@product:	
  1203                           ; 0 bytes @ 0x4
  1204                           
  1205  00A4                     ___aldiv@dividend:	
  1206                           ; 2 bytes @ 0x4
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x4
  1210  00A4                     	ds	1
  1211  00A5                     ___lwdiv@quotient:	
  1212                           
  1213                           ; 2 bytes @ 0x5
  1214  00A5                     	ds	2
  1215  00A7                     ___lwdiv@counter:	
  1216                           
  1217                           ; 1 bytes @ 0x7
  1218  00A7                     	ds	1
  1219  00A8                     ??___aldiv:	
  1220  00A8                     ?___lwmod:	
  1221                           ; 0 bytes @ 0x8
  1222                           
  1223  00A8                     ___lwmod@divisor:	
  1224                           ; 2 bytes @ 0x8
  1225                           
  1226                           
  1227                           ; 2 bytes @ 0x8
  1228  00A8                     	ds	1
  1229  00A9                     ___aldiv@counter:	
  1230                           
  1231                           ; 1 bytes @ 0x9
  1232  00A9                     	ds	1
  1233  00AA                     ___aldiv@sign:	
  1234  00AA                     ___lwmod@dividend:	
  1235                           ; 1 bytes @ 0xA
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0xA
  1239  00AA                     	ds	1
  1240  00AB                     ___aldiv@quotient:	
  1241                           
  1242                           ; 4 bytes @ 0xB
  1243  00AB                     	ds	1
  1244  00AC                     ??___lwmod:	
  1245                           
  1246                           ; 0 bytes @ 0xC
  1247  00AC                     	ds	1
  1248  00AD                     ___lwmod@counter:	
  1249                           
  1250                           ; 1 bytes @ 0xD
  1251  00AD                     	ds	1
  1252  00AE                     ?_sprintf:	
  1253  00AE                     sprintf@f:	
  1254                           ; 2 bytes @ 0xE
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0xE
  1258  00AE                     	ds	1
  1259  00AF                     ?_USART_Init:	
  1260  00AF                     USART_Init@BaudRate:	
  1261                           ; 0 bytes @ 0xF
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0xF
  1265  00AF                     	ds	2
  1266  00B1                     ??_sprintf:	
  1267                           
  1268                           ; 0 bytes @ 0x11
  1269  00B1                     	ds	2
  1270  00B3                     ??_USART_Init:	
  1271                           
  1272                           ; 0 bytes @ 0x13
  1273  00B3                     	ds	1
  1274  00B4                     sprintf@ap:	
  1275                           
  1276                           ; 1 bytes @ 0x14
  1277  00B4                     	ds	1
  1278  00B5                     sprintf@prec:	
  1279                           
  1280                           ; 1 bytes @ 0x15
  1281  00B5                     	ds	1
  1282  00B6                     sprintf@_val:	
  1283                           
  1284                           ; 4 bytes @ 0x16
  1285  00B6                     	ds	4
  1286  00BA                     sprintf@flag:	
  1287                           
  1288                           ; 1 bytes @ 0x1A
  1289  00BA                     	ds	1
  1290  00BB                     sprintf@width:	
  1291                           
  1292                           ; 2 bytes @ 0x1B
  1293  00BB                     	ds	2
  1294  00BD                     sprintf@sp:	
  1295                           
  1296                           ; 1 bytes @ 0x1D
  1297  00BD                     	ds	1
  1298  00BE                     sprintf@c:	
  1299                           
  1300                           ; 1 bytes @ 0x1E
  1301  00BE                     	ds	1
  1302  00BF                     ??_main:	
  1303                           
  1304                           ; 0 bytes @ 0x1F
  1305  00BF                     	ds	3
  1306                           
  1307                           	psect	cstackCOMMON
  1308  0070                     __pcstackCOMMON:	
  1309  0070                     ?_TIMER0_Set:	
  1310  0070                     ?_TIMER0_Init:	
  1311                           ; 0 bytes @ 0x0
  1312                           
  1313  0070                     ?_ADC_Init:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ?_PWM_Init:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?_LCD_Init:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?_LCD_Clear:	
  1323                           ; 0 bytes @ 0x0
  1324                           
  1325  0070                     ?_isdigit:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?_Fuzzy:	
  1329                           ; 1 bit 
  1330                           
  1331  0070                     ?_ISR:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_main:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_USART_WriteChar:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_LCD_WriteCmd:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?_LCD_WriteData:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?i1_USART_WriteChar:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ??i1_USART_WriteChar:	
  1350                           ; 0 bytes @ 0x0
  1351                           
  1352  0070                     ?i1_TIMER0_Set:	
  1353                           ; 0 bytes @ 0x0
  1354                           
  1355  0070                     ??i1_TIMER0_Set:	
  1356                           ; 0 bytes @ 0x0
  1357                           
  1358  0070                     ?_USART_ReceiveChar:	
  1359                           ; 0 bytes @ 0x0
  1360                           
  1361  0070                     ?i1___lwdiv:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?___ftpack:	
  1365                           ; 2 bytes @ 0x0
  1366                           
  1367  0070                     i1USART_WriteChar@byte:	
  1368                           ; 3 bytes @ 0x0
  1369                           
  1370  0070                     i1TIMER0_Set@contagens:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     i1___lwdiv@divisor:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ___ftpack@arg:	
  1377                           ; 2 bytes @ 0x0
  1378                           
  1379                           
  1380                           ; 3 bytes @ 0x0
  1381  0070                     	ds	1
  1382  0071                     ?i1_USART_WriteString:	
  1383  0071                     i1USART_WriteString@str:	
  1384                           ; 0 bytes @ 0x1
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x1
  1388  0071                     	ds	1
  1389  0072                     i1___lwdiv@dividend:	
  1390                           
  1391                           ; 2 bytes @ 0x2
  1392  0072                     	ds	1
  1393  0073                     ??_USART_ReceiveChar:	
  1394  0073                     ??i1_USART_WriteString:	
  1395                           ; 0 bytes @ 0x3
  1396                           
  1397  0073                     ___ftpack@exp:	
  1398                           ; 0 bytes @ 0x3
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0x3
  1402  0073                     	ds	1
  1403  0074                     ??i1___lwdiv:	
  1404  0074                     USART_ReceiveChar@byte:	
  1405                           ; 0 bytes @ 0x4
  1406                           
  1407  0074                     ___ftpack@sign:	
  1408                           ; 1 bytes @ 0x4
  1409                           
  1410                           
  1411                           ; 1 bytes @ 0x4
  1412  0074                     	ds	1
  1413  0075                     ??___ftpack:	
  1414  0075                     i1___lwdiv@quotient:	
  1415                           ; 0 bytes @ 0x5
  1416                           
  1417                           
  1418                           ; 2 bytes @ 0x5
  1419  0075                     	ds	2
  1420  0077                     i1___lwdiv@counter:	
  1421                           
  1422                           ; 1 bytes @ 0x7
  1423  0077                     	ds	1
  1424  0078                     ?i1___wmul:	
  1425  0078                     ?___ftmul:	
  1426                           ; 2 bytes @ 0x8
  1427                           
  1428  0078                     ?___lwtoft:	
  1429                           ; 3 bytes @ 0x8
  1430                           
  1431  0078                     ___lwtoft@c:	
  1432                           ; 3 bytes @ 0x8
  1433                           
  1434  0078                     i1___wmul@multiplier:	
  1435                           ; 2 bytes @ 0x8
  1436                           
  1437  0078                     ___ftmul@f1:	
  1438                           ; 2 bytes @ 0x8
  1439                           
  1440                           
  1441                           ; 3 bytes @ 0x8
  1442  0078                     	ds	2
  1443  007A                     i1___wmul@multiplicand:	
  1444                           
  1445                           ; 2 bytes @ 0xA
  1446  007A                     	ds	1
  1447  007B                     ??___lwtoft:	
  1448  007B                     ___ftmul@f2:	
  1449                           ; 0 bytes @ 0xB
  1450                           
  1451                           
  1452                           ; 3 bytes @ 0xB
  1453  007B                     	ds	1
  1454  007C                     ??_trimf:	
  1455  007C                     ??_trapmf:	
  1456                           ; 0 bytes @ 0xC
  1457                           
  1458  007C                     ??_max_val:	
  1459                           ; 0 bytes @ 0xC
  1460                           
  1461  007C                     ??___ftneg:	
  1462                           ; 0 bytes @ 0xC
  1463                           
  1464  007C                     ??i1_PWM_DutyCycle2:	
  1465                           ; 0 bytes @ 0xC
  1466                           
  1467  007C                     ??i1___wmul:	
  1468                           ; 0 bytes @ 0xC
  1469                           
  1470  007C                     i1___wmul@product:	
  1471                           ; 0 bytes @ 0xC
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0xC
  1475  007C                     	ds	2
  1476  007E                     ??_Fuzzy:	
  1477                           
  1478                           	psect	cstackBANK0
  1479  0020                     __pcstackBANK0:	
  1480                           ; 0 bytes @ 0xE
  1481                           
  1482  0020                     ??___ftmul:	
  1483  0020                     ?___ftneg:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0020                     ___ftneg@f1:	
  1487                           ; 3 bytes @ 0x0
  1488                           
  1489                           
  1490                           ; 3 bytes @ 0x0
  1491  0020                     	ds	3
  1492  0023                     ?___ftadd:	
  1493  0023                     ___ftadd@f1:	
  1494                           ; 3 bytes @ 0x3
  1495                           
  1496                           
  1497                           ; 3 bytes @ 0x3
  1498  0023                     	ds	1
  1499  0024                     ___ftmul@exp:	
  1500                           
  1501                           ; 1 bytes @ 0x4
  1502  0024                     	ds	1
  1503  0025                     ___ftmul@f3_as_product:	
  1504                           
  1505                           ; 3 bytes @ 0x5
  1506  0025                     	ds	1
  1507  0026                     ___ftadd@f2:	
  1508                           
  1509                           ; 3 bytes @ 0x6
  1510  0026                     	ds	2
  1511  0028                     ___ftmul@cntr:	
  1512                           
  1513                           ; 1 bytes @ 0x8
  1514  0028                     	ds	1
  1515  0029                     ??___ftadd:	
  1516  0029                     ___ftmul@sign:	
  1517                           ; 0 bytes @ 0x9
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x9
  1521  0029                     	ds	4
  1522  002D                     ___ftadd@sign:	
  1523                           
  1524                           ; 1 bytes @ 0xD
  1525  002D                     	ds	1
  1526  002E                     ___ftadd@exp2:	
  1527                           
  1528                           ; 1 bytes @ 0xE
  1529  002E                     	ds	1
  1530  002F                     ___ftadd@exp1:	
  1531                           
  1532                           ; 1 bytes @ 0xF
  1533  002F                     	ds	1
  1534  0030                     ?___ftge:	
  1535  0030                     ?___ftdiv:	
  1536                           ; 1 bit 
  1537                           
  1538  0030                     ?___fttol:	
  1539                           ; 3 bytes @ 0x10
  1540                           
  1541  0030                     ___ftdiv@f2:	
  1542                           ; 4 bytes @ 0x10
  1543                           
  1544  0030                     ___ftge@ff1:	
  1545                           ; 3 bytes @ 0x10
  1546                           
  1547  0030                     ___fttol@f1:	
  1548                           ; 3 bytes @ 0x10
  1549                           
  1550                           
  1551                           ; 3 bytes @ 0x10
  1552  0030                     	ds	3
  1553  0033                     ___ftdiv@f1:	
  1554  0033                     ___ftge@ff2:	
  1555                           ; 3 bytes @ 0x13
  1556                           
  1557                           
  1558                           ; 3 bytes @ 0x13
  1559  0033                     	ds	1
  1560  0034                     ??___fttol:	
  1561                           
  1562                           ; 0 bytes @ 0x14
  1563  0034                     	ds	2
  1564  0036                     ??___ftdiv:	
  1565  0036                     ??___ftge:	
  1566                           ; 0 bytes @ 0x16
  1567                           
  1568                           
  1569                           ; 0 bytes @ 0x16
  1570  0036                     	ds	2
  1571  0038                     ___fttol@sign1:	
  1572                           
  1573                           ; 1 bytes @ 0x18
  1574  0038                     	ds	1
  1575  0039                     ___fttol@lval:	
  1576                           
  1577                           ; 4 bytes @ 0x19
  1578  0039                     	ds	1
  1579  003A                     ___ftdiv@cntr:	
  1580                           
  1581                           ; 1 bytes @ 0x1A
  1582  003A                     	ds	1
  1583  003B                     ___ftdiv@f3:	
  1584                           
  1585                           ; 3 bytes @ 0x1B
  1586  003B                     	ds	1
  1587  003C                     ?_max_val:	
  1588  003C                     max_val@a:	
  1589                           ; 3 bytes @ 0x1C
  1590                           
  1591                           
  1592                           ; 3 bytes @ 0x1C
  1593  003C                     	ds	1
  1594  003D                     ___fttol@exp1:	
  1595                           
  1596                           ; 1 bytes @ 0x1D
  1597  003D                     	ds	1
  1598  003E                     ?i1_PWM_DutyCycle2:	
  1599  003E                     ___ftdiv@exp:	
  1600                           ; 0 bytes @ 0x1E
  1601                           
  1602  003E                     i1PWM_DutyCycle2@valor:	
  1603                           ; 1 bytes @ 0x1E
  1604                           
  1605                           
  1606                           ; 2 bytes @ 0x1E
  1607  003E                     	ds	1
  1608  003F                     ___ftdiv@sign:	
  1609  003F                     max_val@b:	
  1610                           ; 1 bytes @ 0x1F
  1611                           
  1612                           
  1613                           ; 3 bytes @ 0x1F
  1614  003F                     	ds	1
  1615  0040                     ?_trimf:	
  1616  0040                     ?_trapmf:	
  1617                           ; 3 bytes @ 0x20
  1618                           
  1619  0040                     trimf@x:	
  1620                           ; 3 bytes @ 0x20
  1621                           
  1622  0040                     trapmf@x:	
  1623                           ; 3 bytes @ 0x20
  1624                           
  1625                           
  1626                           ; 3 bytes @ 0x20
  1627  0040                     	ds	3
  1628  0043                     trimf@a:	
  1629  0043                     trapmf@a:	
  1630                           ; 3 bytes @ 0x23
  1631                           
  1632                           
  1633                           ; 3 bytes @ 0x23
  1634  0043                     	ds	3
  1635  0046                     trimf@b:	
  1636  0046                     trapmf@b:	
  1637                           ; 3 bytes @ 0x26
  1638                           
  1639                           
  1640                           ; 3 bytes @ 0x26
  1641  0046                     	ds	3
  1642  0049                     trimf@c:	
  1643  0049                     trapmf@c:	
  1644                           ; 3 bytes @ 0x29
  1645                           
  1646                           
  1647                           ; 3 bytes @ 0x29
  1648  0049                     	ds	3
  1649  004C                     trimf@ua:	
  1650  004C                     trapmf@d:	
  1651                           ; 3 bytes @ 0x2C
  1652                           
  1653                           
  1654                           ; 3 bytes @ 0x2C
  1655  004C                     	ds	3
  1656  004F                     trapmf@ua:	
  1657                           
  1658                           ; 3 bytes @ 0x2F
  1659  004F                     	ds	3
  1660  0052                     Fuzzy@freio:	
  1661                           
  1662                           ; 2 bytes @ 0x32
  1663  0052                     	ds	2
  1664  0054                     Fuzzy@tip:	
  1665                           
  1666                           ; 3 bytes @ 0x34
  1667  0054                     	ds	3
  1668  0057                     Fuzzy@a:	
  1669                           
  1670                           ; 2 bytes @ 0x37
  1671  0057                     	ds	2
  1672  0059                     Fuzzy@a_234:	
  1673                           
  1674                           ; 2 bytes @ 0x39
  1675  0059                     	ds	2
  1676  005B                     Fuzzy@a_235:	
  1677                           
  1678                           ; 2 bytes @ 0x3B
  1679  005B                     	ds	2
  1680  005D                     Fuzzy@mantem:	
  1681                           
  1682                           ; 3 bytes @ 0x3D
  1683  005D                     	ds	3
  1684  0060                     Fuzzy@reduz:	
  1685                           
  1686                           ; 3 bytes @ 0x40
  1687  0060                     	ds	3
  1688  0063                     Fuzzy@aumenta:	
  1689                           
  1690                           ; 3 bytes @ 0x43
  1691  0063                     	ds	3
  1692  0066                     Fuzzy@deltaRpm:	
  1693                           
  1694                           ; 3 bytes @ 0x46
  1695  0066                     	ds	3
  1696  0069                     ??_ISR:	
  1697                           
  1698                           ; 0 bytes @ 0x49
  1699  0069                     	ds	4
  1700                           
  1701                           	psect	maintext
  1702  0A0E                     __pmaintext:	
  1703 ;;
  1704 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1705 ;;
  1706 ;; *************** function _main *****************
  1707 ;; Defined at:
  1708 ;;		line 480 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;		None               void
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 17F/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0
  1724 ;;      Temps:          0       0       3       0       0
  1725 ;;      Totals:         0       0       3       0       0
  1726 ;;Total ram usage:        3 bytes
  1727 ;; Hardware stack levels required when called:    7
  1728 ;; This function calls:
  1729 ;;		_ADC_Init
  1730 ;;		_LCD_Clear
  1731 ;;		_LCD_Cursor
  1732 ;;		_LCD_Init
  1733 ;;		_LCD_WriteString
  1734 ;;		_PWM_DutyCycle1
  1735 ;;		_PWM_DutyCycle2
  1736 ;;		_PWM_Init
  1737 ;;		_TIMER0_Init
  1738 ;;		_TIMER0_Set
  1739 ;;		_USART_Init
  1740 ;;		_USART_WriteString
  1741 ;;		_sprintf
  1742 ;; This function is called by:
  1743 ;;		Startup code after reset
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _main
  1749  0A0E                     _main:	
  1750                           
  1751                           ;main.c: 482: TRISA = 0b00000001;
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1755  0A0E  3001               	movlw	1
  1756  0A0F  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0A10  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0A11  0085               	movwf	5	;volatile
  1759                           
  1760                           ;main.c: 483: PORTA = 0b00000001;
  1761  0A12  3001               	movlw	1
  1762  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0A15  0085               	movwf	5	;volatile
  1765                           
  1766                           ;main.c: 484: TRISB = 0b00000000;
  1767  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0A17  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0A18  0186               	clrf	6	;volatile
  1770                           
  1771                           ;main.c: 485: PORTB = 0b00000000;
  1772  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0A1B  0186               	clrf	6	;volatile
  1775                           
  1776                           ;main.c: 486: TRISC = 0b10000001;
  1777  0A1C  3081               	movlw	129
  1778  0A1D  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0A1E  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0A1F  0087               	movwf	7	;volatile
  1781                           
  1782                           ;main.c: 487: PORTC = 0b11000000;
  1783  0A20  30C0               	movlw	192
  1784  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0A23  0087               	movwf	7	;volatile
  1787                           
  1788                           ;main.c: 488: TRISD = 0b00000000;
  1789  0A24  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0A25  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0A26  0188               	clrf	8	;volatile
  1792                           
  1793                           ;main.c: 489: PORTD = 0b00000000;
  1794  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0A29  0188               	clrf	8	;volatile
  1797                           
  1798                           ;main.c: 490: TRISE = 0b00000000;
  1799  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  1801  0A2C  0189               	clrf	9	;volatile
  1802                           
  1803                           ;main.c: 491: PORTE = 0b00000000;
  1804  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0A2F  0189               	clrf	9	;volatile
  1807                           
  1808                           ;main.c: 494: T1CON = 0x03;
  1809  0A30  3003               	movlw	3
  1810  0A31  0090               	movwf	16	;volatile
  1811                           
  1812                           ;main.c: 495: TMR1L = 0x00;
  1813  0A32  018E               	clrf	14	;volatile
  1814                           
  1815                           ;main.c: 496: TMR1H = 0x00;
  1816  0A33  018F               	clrf	15	;volatile
  1817                           
  1818                           ;main.c: 499: USART_Init(115200);
  1819  0A34  3000               	movlw	0
  1820  0A35  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0A36  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0A37  00B2               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1823  0A38  3001               	movlw	1
  1824  0A39  00B1               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1825  0A3A  30C2               	movlw	194
  1826  0A3B  00B0               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1827  0A3C  3000               	movlw	0
  1828  0A3D  00AF               	movwf	USART_Init@BaudRate^(0+128)
  1829  0A3E  160A  118A  2365  120A  158A  	fcall	_USART_Init
  1830                           
  1831                           ;main.c: 500: TIMER0_Init();
  1832  0A43  160A  118A  2061  120A  158A  	fcall	_TIMER0_Init
  1833                           
  1834                           ;main.c: 501: ADC_Init();
  1835  0A48  160A  118A  208D  120A  158A  	fcall	_ADC_Init
  1836                           
  1837                           ;main.c: 502: PWM_Init();
  1838  0A4D  160A  118A  21DD  120A  158A  	fcall	_PWM_Init
  1839                           
  1840                           ;main.c: 503: LCD_Init();
  1841  0A52  160A  118A  2475  120A  158A  	fcall	_LCD_Init
  1842                           
  1843                           ;main.c: 506: INTCONbits.PEIE = 1;
  1844  0A57  170B               	bsf	11,6	;volatile
  1845                           
  1846                           ;main.c: 507: INTCONbits.GIE = 1;
  1847  0A58  178B               	bsf	11,7	;volatile
  1848                           
  1849                           ;main.c: 510: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1850  0A59  3033               	movlw	low (STR_11-__stringbase)
  1851  0A5A  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0A5B  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0A5C  00A1               	movwf	USART_WriteString@str^(0+128)
  1854  0A5D  3080               	movlw	128
  1855  0A5E  00A2               	movwf	(USART_WriteString@str+1)^(0+128)
  1856  0A5F  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1857                           
  1858                           ;main.c: 511: USART_WriteString("USART: 115.200bps\n\r");
  1859  0A64  3050               	movlw	low (STR_12-__stringbase)
  1860  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0A67  00A1               	movwf	USART_WriteString@str^(0+128)
  1863  0A68  3080               	movlw	128
  1864  0A69  00A2               	movwf	(USART_WriteString@str+1)^(0+128)
  1865  0A6A  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1866                           
  1867                           ;main.c: 514: LCD_Init();
  1868  0A6F  160A  118A  2475  120A  158A  	fcall	_LCD_Init
  1869                           
  1870                           ;main.c: 515: LCD_Cursor(0,0);
  1871  0A74  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0A75  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0A76  01A0               	clrf	LCD_Cursor@Col^(0+128)
  1874  0A77  3000               	movlw	0
  1875  0A78  160A  118A  2135  120A  158A  	fcall	_LCD_Cursor
  1876                           
  1877                           ;main.c: 516: LCD_WriteString("Inicializando...");
  1878  0A7D  3064               	movlw	low (STR_13-__stringbase)
  1879  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0A7F  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0A80  00A2               	movwf	LCD_WriteString@Str^(0+128)
  1882  0A81  3080               	movlw	128
  1883  0A82  00A3               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1884  0A83  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  1885                           
  1886                           ;main.c: 519: PWM_DutyCycle1(0);
  1887  0A88  3000               	movlw	0
  1888  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0A8B  00A0               	movwf	PWM_DutyCycle1@valor^(0+128)
  1891  0A8C  3000               	movlw	0
  1892  0A8D  00A1               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1893  0A8E  160A  118A  2155  120A  158A  	fcall	_PWM_DutyCycle1
  1894                           
  1895                           ;main.c: 520: PWM_DutyCycle2(0);
  1896  0A93  3000               	movlw	0
  1897  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0A95  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0A96  00A0               	movwf	PWM_DutyCycle2@valor^(0+128)
  1900  0A97  3000               	movlw	0
  1901  0A98  00A1               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1902  0A99  160A  118A  2176  120A  158A  	fcall	_PWM_DutyCycle2
  1903                           
  1904                           ;main.c: 523: TIMER0_Set(238);
  1905  0A9E  30EE               	movlw	238
  1906  0A9F  160A  118A  2047  120A  158A  	fcall	_TIMER0_Set
  1907                           
  1908                           ;main.c: 526: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1909  0AA4  3018               	movlw	24
  1910  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0AA6  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0AA7  00C1               	movwf	(??_main^(0+128)+2)
  1913  0AA8  3061               	movlw	97
  1914  0AA9  00C0               	movwf	(??_main^(0+128)+1)
  1915  0AAA  306E               	movlw	110
  1916  0AAB  00BF               	movwf	??_main^(0+128)
  1917  0AAC                     u4087:	
  1918  0AAC  0BBF               	decfsz	??_main^(0+128),f
  1919  0AAD  2AAC               	goto	u4087
  1920  0AAE  0BC0               	decfsz	(??_main^(0+128)+1),f
  1921  0AAF  2AAC               	goto	u4087
  1922  0AB0  0BC1               	decfsz	(??_main^(0+128)+2),f
  1923  0AB1  2AAC               	goto	u4087
  1924  0AB2  0000               	nop
  1925  0AB3                     l199:	
  1926                           ;main.c: 529: while(1)
  1927                           
  1928                           
  1929                           ;main.c: 530: {
  1930                           ;main.c: 534: sprintf(display_rpm,"%04d", rpm);
  1931  0AB3  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1932  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0AB6  00BF               	movwf	??_main^(0+128)
  1935  0AB7  083F               	movf	??_main^(0+128),w
  1936  0AB8  00AE               	movwf	sprintf@f^(0+128)
  1937  0AB9  0862               	movf	(_rpm+1)^(0+128),w
  1938  0ABA  01B0               	clrf	((?_sprintf+1)^(0+128)+1)
  1939  0ABB  07B0               	addwf	((?_sprintf+1)^(0+128)+1),f
  1940  0ABC  0861               	movf	_rpm^(0+128),w
  1941  0ABD  01AF               	clrf	(?_sprintf^(0+128)+1)
  1942  0ABE  07AF               	addwf	(?_sprintf^(0+128)+1),f
  1943  0ABF  30A7               	movlw	_display_rpm& (0+255)
  1944  0AC0  120A  158A  2649  120A  158A  	fcall	_sprintf
  1945                           
  1946                           ;main.c: 535: sprintf(display_pwm,"%04d", deltaV);
  1947  0AC5  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1948  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  1950  0AC8  00BF               	movwf	??_main^(0+128)
  1951  0AC9  083F               	movf	??_main^(0+128),w
  1952  0ACA  00AE               	movwf	sprintf@f^(0+128)
  1953  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0ACD  086E               	movf	_deltaV+1,w
  1956  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0AD0  01B0               	clrf	((?_sprintf+1)^(0+128)+1)
  1959  0AD1  07B0               	addwf	((?_sprintf+1)^(0+128)+1),f
  1960  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0AD4  086D               	movf	_deltaV,w
  1963  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0AD7  01AF               	clrf	(?_sprintf^(0+128)+1)
  1966  0AD8  07AF               	addwf	(?_sprintf^(0+128)+1),f
  1967  0AD9  309D               	movlw	_display_pwm& (0+255)
  1968  0ADA  120A  158A  2649  120A  158A  	fcall	_sprintf
  1969                           
  1970                           ;main.c: 539: USART_WriteString(display_rpm);
  1971  0ADF  30A7               	movlw	_display_rpm& (0+255)
  1972  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0AE2  00A1               	movwf	USART_WriteString@str^(0+128)
  1975  0AE3  3001               	movlw	1
  1976  0AE4  00A2               	movwf	(USART_WriteString@str+1)^(0+128)
  1977  0AE5  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1978                           
  1979                           ;main.c: 540: USART_WriteString("\n\r");
  1980  0AEA  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1981  0AEB  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0AEC  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0AED  00A1               	movwf	USART_WriteString@str^(0+128)
  1984  0AEE  3080               	movlw	128
  1985  0AEF  00A2               	movwf	(USART_WriteString@str+1)^(0+128)
  1986  0AF0  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1987                           
  1988                           ;main.c: 543: LCD_Clear();
  1989  0AF5  160A  118A  2226  120A  158A  	fcall	_LCD_Clear
  1990                           
  1991                           ;main.c: 544: LCD_Cursor(0,0);
  1992  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0AFC  01A0               	clrf	LCD_Cursor@Col^(0+128)
  1995  0AFD  3000               	movlw	0
  1996  0AFE  160A  118A  2135  120A  158A  	fcall	_LCD_Cursor
  1997                           
  1998                           ;main.c: 545: LCD_WriteString("RPM: ");
  1999  0B03  30C1               	movlw	low (STR_17-__stringbase)
  2000  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0B06  00A2               	movwf	LCD_WriteString@Str^(0+128)
  2003  0B07  3080               	movlw	128
  2004  0B08  00A3               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2005  0B09  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2006                           
  2007                           ;main.c: 546: LCD_Cursor(0,6);
  2008  0B0E  3006               	movlw	6
  2009  0B0F  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0B10  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0B11  00BF               	movwf	??_main^(0+128)
  2012  0B12  083F               	movf	??_main^(0+128),w
  2013  0B13  00A0               	movwf	LCD_Cursor@Col^(0+128)
  2014  0B14  3000               	movlw	0
  2015  0B15  160A  118A  2135  120A  158A  	fcall	_LCD_Cursor
  2016                           
  2017                           ;main.c: 547: LCD_WriteString(display_rpm);
  2018  0B1A  30A7               	movlw	_display_rpm& (0+255)
  2019  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0B1D  00A2               	movwf	LCD_WriteString@Str^(0+128)
  2022  0B1E  3001               	movlw	1
  2023  0B1F  00A3               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2024  0B20  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2025                           
  2026                           ;main.c: 548: LCD_Cursor(1,0);
  2027  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0B26  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0B27  01A0               	clrf	LCD_Cursor@Col^(0+128)
  2030  0B28  3001               	movlw	1
  2031  0B29  160A  118A  2135  120A  158A  	fcall	_LCD_Cursor
  2032                           
  2033                           ;main.c: 549: LCD_WriteString("Delta: ");
  2034  0B2E  30B9               	movlw	low (STR_18-__stringbase)
  2035  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0B30  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0B31  00A2               	movwf	LCD_WriteString@Str^(0+128)
  2038  0B32  3080               	movlw	128
  2039  0B33  00A3               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2040  0B34  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2041                           
  2042                           ;main.c: 550: LCD_Cursor(1,6);
  2043  0B39  3006               	movlw	6
  2044  0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0B3B  1303               	bcf	3,6	;RP1=0, select bank1
  2046  0B3C  00BF               	movwf	??_main^(0+128)
  2047  0B3D  083F               	movf	??_main^(0+128),w
  2048  0B3E  00A0               	movwf	LCD_Cursor@Col^(0+128)
  2049  0B3F  3001               	movlw	1
  2050  0B40  160A  118A  2135  120A  158A  	fcall	_LCD_Cursor
  2051                           
  2052                           ;main.c: 551: LCD_WriteString(display_pwm);
  2053  0B45  309D               	movlw	_display_pwm& (0+255)
  2054  0B46  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0B47  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0B48  00A2               	movwf	LCD_WriteString@Str^(0+128)
  2057  0B49  3001               	movlw	1
  2058  0B4A  00A3               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2059  0B4B  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2060                           
  2061                           ;main.c: 553: _delay((unsigned long)((200)*(18432000/4000.0)));
  2062  0B50  3005               	movlw	5
  2063  0B51  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0B52  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0B53  00C1               	movwf	(??_main^(0+128)+2)
  2066  0B54  30AD               	movlw	173
  2067  0B55  00C0               	movwf	(??_main^(0+128)+1)
  2068  0B56  30E0               	movlw	224
  2069  0B57  00BF               	movwf	??_main^(0+128)
  2070  0B58                     u4097:	
  2071  0B58  0BBF               	decfsz	??_main^(0+128),f
  2072  0B59  2B58               	goto	u4097
  2073  0B5A  0BC0               	decfsz	(??_main^(0+128)+1),f
  2074  0B5B  2B58               	goto	u4097
  2075  0B5C  0BC1               	decfsz	(??_main^(0+128)+2),f
  2076  0B5D  2B58               	goto	u4097
  2077  0B5E  2AB3               	goto	l199
  2078  0B5F                     __end_of_main:	
  2079                           
  2080                           	psect	text1
  2081  0E49                     __ptext1:	
  2082 ;; *************** function _sprintf *****************
  2083 ;; Defined at:
  2084 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  sp              1    wreg     PTR unsigned char 
  2087 ;;		 -> display_pwm(10), display_rpm(10), 
  2088 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2089 ;;		 -> STR_15(5), STR_14(5), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2092 ;;		 -> display_pwm(10), display_rpm(10), 
  2093 ;;  _val            4   22[BANK1 ] struct .
  2094 ;;  width           2   27[BANK1 ] int 
  2095 ;;  c               1   30[BANK1 ] char 
  2096 ;;  flag            1   26[BANK1 ] unsigned char 
  2097 ;;  prec            1   21[BANK1 ] char 
  2098 ;;  ap              1   20[BANK1 ] PTR void [1]
  2099 ;;		 -> ?_sprintf(2), 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2   14[BANK1 ] int 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         0       0       3       0       0
  2110 ;;      Locals:         0       0      11       0       0
  2111 ;;      Temps:          0       0       3       0       0
  2112 ;;      Totals:         0       0      17       0       0
  2113 ;;Total ram usage:       17 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    6
  2116 ;; This function calls:
  2117 ;;		___lwdiv
  2118 ;;		___lwmod
  2119 ;;		___wmul
  2120 ;;		_isdigit
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _sprintf
  2128  0E49                     _sprintf:	
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2132                           ;sprintf@sp stored from wreg
  2133  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0E4B  00BD               	movwf	sprintf@sp^(0+128)
  2136                           
  2137                           ;doprnt.c: 494: va_list ap;
  2138                           ;doprnt.c: 499: signed char c;
  2139                           ;doprnt.c: 501: int width;
  2140                           ;doprnt.c: 506: signed char prec;
  2141                           ;doprnt.c: 508: unsigned char flag;
  2142                           ;doprnt.c: 527: union {
  2143                           ;doprnt.c: 528: unsigned int _val;
  2144                           ;doprnt.c: 529: struct {
  2145                           ;doprnt.c: 530: const char * _cp;
  2146                           ;doprnt.c: 531: unsigned _len;
  2147                           ;doprnt.c: 532: } _str;
  2148                           ;doprnt.c: 533: } _val;
  2149                           ;doprnt.c: 542: *ap = __va_start();
  2150  0E4C  30AF               	movlw	(?_sprintf+1)& (0+255)
  2151  0E4D  00B1               	movwf	??_sprintf^(0+128)
  2152  0E4E  0831               	movf	??_sprintf^(0+128),w
  2153  0E4F  00B4               	movwf	sprintf@ap^(0+128)
  2154  0E50                     l3151:	
  2155                           ;doprnt.c: 545: while(c = *f++) {
  2156                           
  2157  0E50  3001               	movlw	1
  2158  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  2160  0E53  07AE               	addwf	sprintf@f^(0+128),f
  2161  0E54  30FF               	movlw	-1
  2162  0E55  072E               	addwf	sprintf@f^(0+128),w
  2163  0E56  0084               	movwf	4
  2164  0E57  120A  158A  200A  120A  158A  	fcall	stringdir
  2165  0E5C  00B1               	movwf	??_sprintf^(0+128)
  2166  0E5D  0831               	movf	??_sprintf^(0+128),w
  2167  0E5E  00BE               	movwf	sprintf@c^(0+128)
  2168  0E5F  08BE               	movf	sprintf@c^(0+128),f
  2169  0E60  1903               	btfsc	3,2
  2170  0E61  2FF9               	goto	l3153
  2171                           
  2172                           ;doprnt.c: 547: if(c != '%')
  2173  0E62  083E               	movf	sprintf@c^(0+128),w
  2174  0E63  3A25               	xorlw	37
  2175  0E64  1903               	skipnz
  2176  0E65  2E72               	goto	l3055
  2177                           
  2178                           ;doprnt.c: 549: {
  2179                           ;doprnt.c: 550: ((*sp++ = (c)));
  2180  0E66  083E               	movf	sprintf@c^(0+128),w
  2181  0E67  00B1               	movwf	??_sprintf^(0+128)
  2182  0E68  083D               	movf	sprintf@sp^(0+128),w
  2183  0E69  0084               	movwf	4
  2184  0E6A  0831               	movf	??_sprintf^(0+128),w
  2185  0E6B  1783               	bsf	3,7	;select IRP bank2
  2186  0E6C  0080               	movwf	0
  2187  0E6D  3001               	movlw	1
  2188  0E6E  00B1               	movwf	??_sprintf^(0+128)
  2189  0E6F  0831               	movf	??_sprintf^(0+128),w
  2190  0E70  07BD               	addwf	sprintf@sp^(0+128),f
  2191                           
  2192                           ;doprnt.c: 551: continue;
  2193  0E71  2E50               	goto	l3151
  2194  0E72                     l3055:	
  2195                           
  2196                           ;doprnt.c: 552: }
  2197                           ;doprnt.c: 555: width = 0;
  2198  0E72  01BB               	clrf	sprintf@width^(0+128)
  2199  0E73  01BC               	clrf	(sprintf@width+1)^(0+128)
  2200                           
  2201                           ;doprnt.c: 557: flag = 0;
  2202  0E74  01BA               	clrf	sprintf@flag^(0+128)
  2203                           
  2204                           ;doprnt.c: 560: switch(*f) {
  2205                           
  2206                           ;doprnt.c: 559: for(;;) {
  2207  0E75  2E7B               	goto	l3061
  2208  0E76                     l476:	
  2209                           ;doprnt.c: 588: case '0':
  2210                           
  2211                           
  2212                           ;doprnt.c: 589: flag |= 0x04;
  2213  0E76  153A               	bsf	sprintf@flag^(0+128),2
  2214                           
  2215                           ;doprnt.c: 590: f++;
  2216  0E77  3001               	movlw	1
  2217  0E78  00B1               	movwf	??_sprintf^(0+128)
  2218  0E79  0831               	movf	??_sprintf^(0+128),w
  2219  0E7A  07AE               	addwf	sprintf@f^(0+128),f
  2220  0E7B                     l3061:	
  2221                           ;doprnt.c: 593: }
  2222                           
  2223                           ;doprnt.c: 591: continue;
  2224                           
  2225  0E7B  082E               	movf	sprintf@f^(0+128),w
  2226  0E7C  0084               	movwf	4
  2227  0E7D  120A  158A  200A  120A  158A  	fcall	stringdir
  2228                           
  2229                           ; Switch size 1, requested type "space"
  2230                           ; Number of cases is 1, Range of values is 48 to 48
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte            4     3 (average)
  2234                           ; direct_byte           14    11 (fixed)
  2235                           ; jumptable            263     9 (fixed)
  2236                           ;	Chosen strategy is simple_byte
  2237  0E82  3A30               	xorlw	48	; case 48
  2238  0E83  1903               	skipnz
  2239  0E84  2E76               	goto	l476
  2240  0E85  2E86               	goto	l3063
  2241  0E86                     l3063:	
  2242                           ;doprnt.c: 595: }
  2243                           
  2244                           ;doprnt.c: 594: break;
  2245                           
  2246                           
  2247                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2248  0E86  082E               	movf	sprintf@f^(0+128),w
  2249  0E87  0084               	movwf	4
  2250  0E88  120A  158A  200A  120A  158A  	fcall	stringdir
  2251  0E8D  160A  118A  206C  120A  158A  	fcall	_isdigit
  2252  0E92  1C03               	btfss	3,0
  2253  0E93  2ED6               	goto	l3077
  2254                           
  2255                           ;doprnt.c: 607: width = 0;
  2256  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0E96  01BB               	clrf	sprintf@width^(0+128)
  2259  0E97  01BC               	clrf	(sprintf@width+1)^(0+128)
  2260  0E98                     l3067:	
  2261                           ;doprnt.c: 608: do {
  2262                           
  2263                           
  2264                           ;doprnt.c: 609: width *= 10;
  2265  0E98  300A               	movlw	10
  2266  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0E9B  00A0               	movwf	___wmul@multiplier^(0+128)
  2269  0E9C  3000               	movlw	0
  2270  0E9D  00A1               	movwf	(___wmul@multiplier^(0+128)+1)
  2271  0E9E  083C               	movf	(sprintf@width+1)^(0+128),w
  2272  0E9F  01A3               	clrf	(___wmul@multiplicand+1)^(0+128)
  2273  0EA0  07A3               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2274  0EA1  083B               	movf	sprintf@width^(0+128),w
  2275  0EA2  01A2               	clrf	___wmul@multiplicand^(0+128)
  2276  0EA3  07A2               	addwf	___wmul@multiplicand^(0+128),f
  2277  0EA4  160A  118A  2201  120A  158A  	fcall	___wmul
  2278  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2279  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2280  0EAB  0821               	movf	(?___wmul+1)^(0+128),w
  2281  0EAC  01BC               	clrf	(sprintf@width+1)^(0+128)
  2282  0EAD  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2283  0EAE  0820               	movf	?___wmul^(0+128),w
  2284  0EAF  01BB               	clrf	sprintf@width^(0+128)
  2285  0EB0  07BB               	addwf	sprintf@width^(0+128),f
  2286                           
  2287                           ;doprnt.c: 610: width += *f++ - '0';
  2288  0EB1  082E               	movf	sprintf@f^(0+128),w
  2289  0EB2  0084               	movwf	4
  2290  0EB3  120A  158A  200A  120A  158A  	fcall	stringdir
  2291  0EB8  3ED0               	addlw	208
  2292  0EB9  00B1               	movwf	??_sprintf^(0+128)
  2293  0EBA  30FF               	movlw	255
  2294  0EBB  1803               	skipnc
  2295  0EBC  3000               	movlw	0
  2296  0EBD  00B2               	movwf	(??_sprintf^(0+128)+1)
  2297  0EBE  0831               	movf	??_sprintf^(0+128),w
  2298  0EBF  07BB               	addwf	sprintf@width^(0+128),f
  2299  0EC0  1803               	skipnc
  2300  0EC1  0ABC               	incf	(sprintf@width+1)^(0+128),f
  2301  0EC2  0832               	movf	(??_sprintf+1)^(0+128),w
  2302  0EC3  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2303  0EC4  3001               	movlw	1
  2304  0EC5  00B1               	movwf	??_sprintf^(0+128)
  2305  0EC6  0831               	movf	??_sprintf^(0+128),w
  2306  0EC7  07AE               	addwf	sprintf@f^(0+128),f
  2307                           
  2308                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2309  0EC8  082E               	movf	sprintf@f^(0+128),w
  2310  0EC9  0084               	movwf	4
  2311  0ECA  120A  158A  200A  120A  158A  	fcall	stringdir
  2312  0ECF  160A  118A  206C  120A  158A  	fcall	_isdigit
  2313  0ED4  1803               	btfsc	3,0
  2314  0ED5  2E98               	goto	l3067
  2315  0ED6                     l3077:	
  2316                           ;doprnt.c: 831: }
  2317                           
  2318                           ;doprnt.c: 822: continue;
  2319                           
  2320                           ;doprnt.c: 811: default:
  2321                           
  2322                           ;doprnt.c: 707: case 'i':
  2323                           ;doprnt.c: 708: break;
  2324                           
  2325                           ;doprnt.c: 706: case 'd':
  2326                           
  2327                           ;doprnt.c: 647: goto alldone;
  2328                           
  2329                           ;doprnt.c: 646: case 0:
  2330                           
  2331                           ;doprnt.c: 617: }
  2332                           ;doprnt.c: 644: switch(c = *f++) {
  2333                           
  2334  0ED6  3001               	movlw	1
  2335  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0ED9  07AE               	addwf	sprintf@f^(0+128),f
  2338  0EDA  30FF               	movlw	-1
  2339  0EDB  072E               	addwf	sprintf@f^(0+128),w
  2340  0EDC  0084               	movwf	4
  2341  0EDD  120A  158A  200A  120A  158A  	fcall	stringdir
  2342  0EE2  00BE               	movwf	sprintf@c^(0+128)
  2343                           
  2344                           ; Switch size 1, requested type "space"
  2345                           ; Number of cases is 3, Range of values is 0 to 105
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte           10     6 (average)
  2349                           ; jumptable            260     6 (fixed)
  2350                           ;	Chosen strategy is simple_byte
  2351  0EE3  3A00               	xorlw	0	; case 0
  2352  0EE4  1903               	skipnz
  2353  0EE5  2FF9               	goto	l3153
  2354  0EE6  3A64               	xorlw	100	; case 100
  2355  0EE7  1903               	skipnz
  2356  0EE8  2EED               	goto	l3079
  2357  0EE9  3A0D               	xorlw	13	; case 105
  2358  0EEA  1903               	skipnz
  2359  0EEB  2EED               	goto	l3079
  2360  0EEC  2E50               	goto	l3151
  2361  0EED                     l3079:	
  2362                           
  2363                           ;doprnt.c: 1262: {
  2364                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2365  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0EEF  0834               	movf	sprintf@ap^(0+128),w
  2368  0EF0  0084               	movwf	4
  2369  0EF1  1383               	bcf	3,7	;select IRP bank0
  2370  0EF2  0800               	movf	0,w
  2371  0EF3  00B6               	movwf	sprintf@_val^(0+128)
  2372  0EF4  0A84               	incf	4,f
  2373  0EF5  0800               	movf	0,w
  2374  0EF6  00B7               	movwf	(sprintf@_val+1)^(0+128)
  2375  0EF7  3002               	movlw	2
  2376  0EF8  00B1               	movwf	??_sprintf^(0+128)
  2377  0EF9  0831               	movf	??_sprintf^(0+128),w
  2378  0EFA  07B4               	addwf	sprintf@ap^(0+128),f
  2379                           
  2380                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2381  0EFB  1FB7               	btfss	(sprintf@_val+1)^(0+128),7
  2382  0EFC  2F06               	goto	l3089
  2383                           
  2384                           ;doprnt.c: 1271: flag |= 0x03;
  2385  0EFD  3003               	movlw	3
  2386  0EFE  00B1               	movwf	??_sprintf^(0+128)
  2387  0EFF  0831               	movf	??_sprintf^(0+128),w
  2388  0F00  04BA               	iorwf	sprintf@flag^(0+128),f
  2389                           
  2390                           ;doprnt.c: 1272: _val._val = -_val._val;
  2391  0F01  09B6               	comf	sprintf@_val^(0+128),f
  2392  0F02  09B7               	comf	(sprintf@_val+1)^(0+128),f
  2393  0F03  0AB6               	incf	sprintf@_val^(0+128),f
  2394  0F04  1903               	skipnz
  2395  0F05  0AB7               	incf	(sprintf@_val+1)^(0+128),f
  2396  0F06                     l3089:	
  2397                           
  2398                           ;doprnt.c: 1273: }
  2399                           ;doprnt.c: 1275: }
  2400                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2401  0F06  01BE               	clrf	sprintf@c^(0+128)
  2402  0F07  0ABE               	incf	sprintf@c^(0+128),f
  2403  0F08  083E               	movf	sprintf@c^(0+128),w
  2404  0F09  3A05               	xorlw	5
  2405  0F0A  1903               	btfsc	3,2
  2406  0F0B  2F2D               	goto	l3101
  2407  0F0C                     l3093:	
  2408                           
  2409                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2410  0F0C  083E               	movf	sprintf@c^(0+128),w
  2411  0F0D  00B1               	movwf	??_sprintf^(0+128)
  2412  0F0E  0731               	addwf	??_sprintf^(0+128),w
  2413  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2414  0F10  0084               	movwf	4
  2415  0F11  120A  158A  200A  120A  158A  	fcall	stringdir
  2416  0F16  00B2               	movwf	(??_sprintf+1)^(0+128)
  2417  0F17  120A  158A  200A  120A  158A  	fcall	stringdir
  2418  0F1C  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2419  0F1D  0833               	movf	(??_sprintf+2)^(0+128),w
  2420  0F1E  0237               	subwf	(sprintf@_val+1)^(0+128),w
  2421  0F1F  1D03               	skipz
  2422  0F20  2F23               	goto	u3735
  2423  0F21  0832               	movf	(??_sprintf+1)^(0+128),w
  2424  0F22  0236               	subwf	sprintf@_val^(0+128),w
  2425  0F23                     u3735:	
  2426  0F23  1C03               	btfss	3,0
  2427  0F24  2F2D               	goto	l3101
  2428                           
  2429                           ;doprnt.c: 1316: break;
  2430  0F25  3001               	movlw	1
  2431  0F26  00B1               	movwf	??_sprintf^(0+128)
  2432  0F27  0831               	movf	??_sprintf^(0+128),w
  2433  0F28  07BE               	addwf	sprintf@c^(0+128),f
  2434  0F29  083E               	movf	sprintf@c^(0+128),w
  2435  0F2A  3A05               	xorlw	5
  2436  0F2B  1D03               	skipz
  2437  0F2C  2F0C               	goto	l3093
  2438  0F2D                     l3101:	
  2439                           
  2440                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2441  0F2D  083C               	movf	(sprintf@width+1)^(0+128),w
  2442  0F2E  043B               	iorwf	sprintf@width^(0+128),w
  2443  0F2F  1903               	skipnz
  2444  0F30  2F3B               	goto	l494
  2445  0F31  083A               	movf	sprintf@flag^(0+128),w
  2446  0F32  3903               	andlw	3
  2447  0F33  1903               	btfsc	3,2
  2448  0F34  2F3B               	goto	l494
  2449                           
  2450                           ;doprnt.c: 1355: width--;
  2451  0F35  30FF               	movlw	255
  2452  0F36  07BB               	addwf	sprintf@width^(0+128),f
  2453  0F37  1803               	skipnc
  2454  0F38  0ABC               	incf	(sprintf@width+1)^(0+128),f
  2455  0F39  30FF               	movlw	255
  2456  0F3A  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2457  0F3B                     l494:	
  2458                           
  2459                           ;doprnt.c: 1390: if(width > c)
  2460  0F3B  083E               	movf	sprintf@c^(0+128),w
  2461  0F3C  00B1               	movwf	??_sprintf^(0+128)
  2462  0F3D  01B2               	clrf	(??_sprintf^(0+128)+1)
  2463  0F3E  1BB1               	btfsc	??_sprintf^(0+128),7
  2464  0F3F  03B2               	decf	(??_sprintf^(0+128)+1),f
  2465  0F40  0832               	movf	(??_sprintf+1)^(0+128),w
  2466  0F41  3A80               	xorlw	128
  2467  0F42  00B3               	movwf	(??_sprintf+2)^(0+128)
  2468  0F43  083C               	movf	(sprintf@width+1)^(0+128),w
  2469  0F44  3A80               	xorlw	128
  2470  0F45  0233               	subwf	(??_sprintf+2)^(0+128),w
  2471  0F46  1D03               	skipz
  2472  0F47  2F4A               	goto	u3775
  2473  0F48  083B               	movf	sprintf@width^(0+128),w
  2474  0F49  0231               	subwf	??_sprintf^(0+128),w
  2475  0F4A                     u3775:	
  2476  0F4A  1803               	skipnc
  2477  0F4B  2F5A               	goto	l3109
  2478                           
  2479                           ;doprnt.c: 1391: width -= c;
  2480  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2481  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2482  0F4E  083E               	movf	sprintf@c^(0+128),w
  2483  0F4F  00B1               	movwf	??_sprintf^(0+128)
  2484  0F50  01B2               	clrf	(??_sprintf^(0+128)+1)
  2485  0F51  1BB1               	btfsc	??_sprintf^(0+128),7
  2486  0F52  03B2               	decf	(??_sprintf^(0+128)+1),f
  2487  0F53  0831               	movf	??_sprintf^(0+128),w
  2488  0F54  02BB               	subwf	sprintf@width^(0+128),f
  2489  0F55  0832               	movf	(??_sprintf+1)^(0+128),w
  2490  0F56  1C03               	skipc
  2491  0F57  03BC               	decf	(sprintf@width+1)^(0+128),f
  2492  0F58  02BC               	subwf	(sprintf@width+1)^(0+128),f
  2493  0F59  2F5E               	goto	l3111
  2494  0F5A                     l3109:	
  2495                           
  2496                           ;doprnt.c: 1392: else
  2497                           ;doprnt.c: 1393: width = 0;
  2498  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0F5C  01BB               	clrf	sprintf@width^(0+128)
  2501  0F5D  01BC               	clrf	(sprintf@width+1)^(0+128)
  2502  0F5E                     l3111:	
  2503                           
  2504                           ;doprnt.c: 1396: if(flag & 0x04) {
  2505  0F5E  1D3A               	btfss	sprintf@flag^(0+128),2
  2506  0F5F  2F85               	goto	l3127
  2507                           
  2508                           ;doprnt.c: 1401: if(flag & 0x03)
  2509  0F60  083A               	movf	sprintf@flag^(0+128),w
  2510  0F61  3903               	andlw	3
  2511  0F62  1903               	btfsc	3,2
  2512  0F63  2F6F               	goto	l3119
  2513                           
  2514                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2515  0F64  302D               	movlw	45
  2516  0F65  00B1               	movwf	??_sprintf^(0+128)
  2517  0F66  083D               	movf	sprintf@sp^(0+128),w
  2518  0F67  0084               	movwf	4
  2519  0F68  0831               	movf	??_sprintf^(0+128),w
  2520  0F69  1783               	bsf	3,7	;select IRP bank2
  2521  0F6A  0080               	movwf	0
  2522  0F6B  3001               	movlw	1
  2523  0F6C  00B1               	movwf	??_sprintf^(0+128)
  2524  0F6D  0831               	movf	??_sprintf^(0+128),w
  2525  0F6E  07BD               	addwf	sprintf@sp^(0+128),f
  2526  0F6F                     l3119:	
  2527                           
  2528                           ;doprnt.c: 1424: if(width)
  2529  0F6F  083C               	movf	(sprintf@width+1)^(0+128),w
  2530  0F70  043B               	iorwf	sprintf@width^(0+128),w
  2531  0F71  1903               	skipnz
  2532  0F72  2FAD               	goto	l3141
  2533                           
  2534                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2535                           
  2536                           ;doprnt.c: 1425: do
  2537  0F73  3030               	movlw	48
  2538  0F74  00B1               	movwf	??_sprintf^(0+128)
  2539  0F75  083D               	movf	sprintf@sp^(0+128),w
  2540  0F76  0084               	movwf	4
  2541  0F77  0831               	movf	??_sprintf^(0+128),w
  2542  0F78  1783               	bsf	3,7	;select IRP bank2
  2543  0F79  0080               	movwf	0
  2544  0F7A  3001               	movlw	1
  2545  0F7B  00B1               	movwf	??_sprintf^(0+128)
  2546  0F7C  0831               	movf	??_sprintf^(0+128),w
  2547  0F7D  07BD               	addwf	sprintf@sp^(0+128),f
  2548                           
  2549                           ;doprnt.c: 1427: while(--width);
  2550  0F7E  30FF               	movlw	255
  2551  0F7F  07BB               	addwf	sprintf@width^(0+128),f
  2552  0F80  1803               	skipnc
  2553  0F81  0ABC               	incf	(sprintf@width+1)^(0+128),f
  2554  0F82  30FF               	movlw	255
  2555  0F83  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2556  0F84  2F6F               	goto	l3119
  2557  0F85                     l3127:	
  2558                           ;doprnt.c: 1429: } else
  2559                           
  2560                           
  2561                           ;doprnt.c: 1431: {
  2562                           ;doprnt.c: 1433: if(width
  2563                           ;doprnt.c: 1437: )
  2564  0F85  083C               	movf	(sprintf@width+1)^(0+128),w
  2565  0F86  043B               	iorwf	sprintf@width^(0+128),w
  2566  0F87  1903               	skipnz
  2567  0F88  2F9E               	goto	l3135
  2568  0F89                     l3129:	
  2569                           ;doprnt.c: 1438: do
  2570                           
  2571                           
  2572                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2573  0F89  3020               	movlw	32
  2574  0F8A  00B1               	movwf	??_sprintf^(0+128)
  2575  0F8B  083D               	movf	sprintf@sp^(0+128),w
  2576  0F8C  0084               	movwf	4
  2577  0F8D  0831               	movf	??_sprintf^(0+128),w
  2578  0F8E  1783               	bsf	3,7	;select IRP bank2
  2579  0F8F  0080               	movwf	0
  2580  0F90  3001               	movlw	1
  2581  0F91  00B1               	movwf	??_sprintf^(0+128)
  2582  0F92  0831               	movf	??_sprintf^(0+128),w
  2583  0F93  07BD               	addwf	sprintf@sp^(0+128),f
  2584                           
  2585                           ;doprnt.c: 1440: while(--width);
  2586  0F94  30FF               	movlw	255
  2587  0F95  07BB               	addwf	sprintf@width^(0+128),f
  2588  0F96  1803               	skipnc
  2589  0F97  0ABC               	incf	(sprintf@width+1)^(0+128),f
  2590  0F98  30FF               	movlw	255
  2591  0F99  07BC               	addwf	(sprintf@width+1)^(0+128),f
  2592  0F9A  083C               	movf	(sprintf@width+1)^(0+128),w
  2593  0F9B  043B               	iorwf	sprintf@width^(0+128),w
  2594  0F9C  1D03               	skipz
  2595  0F9D  2F89               	goto	l3129
  2596  0F9E                     l3135:	
  2597                           
  2598                           ;doprnt.c: 1447: if(flag & 0x03)
  2599  0F9E  083A               	movf	sprintf@flag^(0+128),w
  2600  0F9F  3903               	andlw	3
  2601  0FA0  1903               	btfsc	3,2
  2602  0FA1  2FAD               	goto	l3141
  2603                           
  2604                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2605  0FA2  302D               	movlw	45
  2606  0FA3  00B1               	movwf	??_sprintf^(0+128)
  2607  0FA4  083D               	movf	sprintf@sp^(0+128),w
  2608  0FA5  0084               	movwf	4
  2609  0FA6  0831               	movf	??_sprintf^(0+128),w
  2610  0FA7  1783               	bsf	3,7	;select IRP bank2
  2611  0FA8  0080               	movwf	0
  2612  0FA9  3001               	movlw	1
  2613  0FAA  00B1               	movwf	??_sprintf^(0+128)
  2614  0FAB  0831               	movf	??_sprintf^(0+128),w
  2615  0FAC  07BD               	addwf	sprintf@sp^(0+128),f
  2616  0FAD                     l3141:	
  2617                           
  2618                           ;doprnt.c: 1478: }
  2619                           ;doprnt.c: 1481: prec = c;
  2620  0FAD  083E               	movf	sprintf@c^(0+128),w
  2621  0FAE  00B1               	movwf	??_sprintf^(0+128)
  2622  0FAF  0831               	movf	??_sprintf^(0+128),w
  2623  0FB0  00B5               	movwf	sprintf@prec^(0+128)
  2624  0FB1                     l3149:	
  2625                           ;doprnt.c: 1483: while(prec--) {
  2626                           
  2627  0FB1  30FF               	movlw	-1
  2628  0FB2  00B1               	movwf	??_sprintf^(0+128)
  2629  0FB3  0831               	movf	??_sprintf^(0+128),w
  2630  0FB4  07B5               	addwf	sprintf@prec^(0+128),f
  2631  0FB5  0835               	movf	sprintf@prec^(0+128),w
  2632  0FB6  3AFF               	xorlw	-1
  2633  0FB7  1903               	btfsc	3,2
  2634  0FB8  2E50               	goto	l3151
  2635                           
  2636                           ;doprnt.c: 1487: {
  2637                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2638  0FB9  300A               	movlw	10
  2639  0FBA  00A8               	movwf	___lwmod@divisor^(0+128)
  2640  0FBB  3000               	movlw	0
  2641  0FBC  00A9               	movwf	(___lwmod@divisor^(0+128)+1)
  2642  0FBD  0835               	movf	sprintf@prec^(0+128),w
  2643  0FBE  00B1               	movwf	??_sprintf^(0+128)
  2644  0FBF  0731               	addwf	??_sprintf^(0+128),w
  2645  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2646  0FC1  0084               	movwf	4
  2647  0FC2  120A  158A  200A  120A  158A  	fcall	stringdir
  2648  0FC7  00A0               	movwf	___lwdiv@divisor^(0+128)
  2649  0FC8  120A  158A  200A  120A  158A  	fcall	stringdir
  2650  0FCD  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  2651  0FCE  0837               	movf	(sprintf@_val+1)^(0+128),w
  2652  0FCF  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  2653  0FD0  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2654  0FD1  0836               	movf	sprintf@_val^(0+128),w
  2655  0FD2  01A2               	clrf	___lwdiv@dividend^(0+128)
  2656  0FD3  07A2               	addwf	___lwdiv@dividend^(0+128),f
  2657  0FD4  160A  118A  2325  120A  158A  	fcall	___lwdiv
  2658  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2659  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2660  0FDB  0821               	movf	(?___lwdiv+1)^(0+128),w
  2661  0FDC  01AB               	clrf	(___lwmod@dividend+1)^(0+128)
  2662  0FDD  07AB               	addwf	(___lwmod@dividend+1)^(0+128),f
  2663  0FDE  0820               	movf	?___lwdiv^(0+128),w
  2664  0FDF  01AA               	clrf	___lwmod@dividend^(0+128)
  2665  0FE0  07AA               	addwf	___lwmod@dividend^(0+128),f
  2666  0FE1  160A  118A  22B1  120A  158A  	fcall	___lwmod
  2667  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2669  0FE8  0828               	movf	?___lwmod^(0+128),w
  2670  0FE9  3E30               	addlw	48
  2671  0FEA  00B2               	movwf	(??_sprintf+1)^(0+128)
  2672  0FEB  0832               	movf	(??_sprintf+1)^(0+128),w
  2673  0FEC  00BE               	movwf	sprintf@c^(0+128)
  2674                           
  2675                           ;doprnt.c: 1532: }
  2676                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2677  0FED  083E               	movf	sprintf@c^(0+128),w
  2678  0FEE  00B1               	movwf	??_sprintf^(0+128)
  2679  0FEF  083D               	movf	sprintf@sp^(0+128),w
  2680  0FF0  0084               	movwf	4
  2681  0FF1  0831               	movf	??_sprintf^(0+128),w
  2682  0FF2  1783               	bsf	3,7	;select IRP bank2
  2683  0FF3  0080               	movwf	0
  2684  0FF4  3001               	movlw	1
  2685  0FF5  00B1               	movwf	??_sprintf^(0+128)
  2686  0FF6  0831               	movf	??_sprintf^(0+128),w
  2687  0FF7  07BD               	addwf	sprintf@sp^(0+128),f
  2688  0FF8  2FB1               	goto	l3149
  2689  0FF9                     l3153:	
  2690                           ;doprnt.c: 1534: }
  2691                           ;doprnt.c: 1542: }
  2692                           ;doprnt.c: 1544: alldone:
  2693                           
  2694                           
  2695                           ;doprnt.c: 1547: *sp = 0;
  2696  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0FFB  083D               	movf	sprintf@sp^(0+128),w
  2699  0FFC  0084               	movwf	4
  2700  0FFD  1783               	bsf	3,7	;select IRP bank2
  2701  0FFE  0180               	clrf	0
  2702  0FFF  0008               	return
  2703  1000                     __end_of_sprintf:	
  2704                           ;doprnt.c: 1549: return 0;
  2705                           ;	Return value of _sprintf is never used
  2706                           
  2707                           
  2708                           	psect	text2
  2709  106C                     __ptext2:	
  2710 ;; *************** function _isdigit *****************
  2711 ;; Defined at:
  2712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  c               1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  c               1    1[BANK1 ] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;		None               void
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         0       0       0       0       0
  2727 ;;      Locals:         0       0       2       0       0
  2728 ;;      Temps:          0       0       0       0       0
  2729 ;;      Totals:         0       0       2       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    5
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_sprintf
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _isdigit
  2742  106C                     _isdigit:	
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2746                           ;isdigit@c stored from wreg
  2747  106C  1683               	bsf	3,5	;RP0=1, select bank1
  2748  106D  1303               	bcf	3,6	;RP1=0, select bank1
  2749  106E  00A1               	movwf	isdigit@c^(0+128)
  2750  106F  01A0               	clrf	_isdigit$1449^(0+128)
  2751  1070  303A               	movlw	58
  2752  1071  0221               	subwf	isdigit@c^(0+128),w
  2753  1072  1803               	skipnc
  2754  1073  287A               	goto	l2515
  2755  1074  3030               	movlw	48
  2756  1075  0221               	subwf	isdigit@c^(0+128),w
  2757  1076  1C03               	skipc
  2758  1077  287A               	goto	l2515
  2759  1078  01A0               	clrf	_isdigit$1449^(0+128)
  2760  1079  0AA0               	incf	_isdigit$1449^(0+128),f
  2761  107A                     l2515:	
  2762  107A  0C20               	rrf	_isdigit$1449^(0+128),w
  2763  107B  0008               	return
  2764  107C                     __end_of_isdigit:	
  2765                           
  2766                           	psect	text3
  2767  1201                     __ptext3:	
  2768 ;; *************** function ___wmul *****************
  2769 ;; Defined at:
  2770 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2773 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  product         2    4[BANK1 ] unsigned int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2    0[BANK1 ] unsigned int 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       4       0       0
  2786 ;;      Locals:         0       0       2       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       6       0       0
  2789 ;;Total ram usage:        6 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_sprintf
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function ___wmul
  2801  1201                     ___wmul:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2805  1201  1683               	bsf	3,5	;RP0=1, select bank1
  2806  1202  1303               	bcf	3,6	;RP1=0, select bank1
  2807  1203  01A4               	clrf	___wmul@product^(0+128)
  2808  1204  01A5               	clrf	(___wmul@product+1)^(0+128)
  2809  1205                     l2521:	
  2810  1205  1C20               	btfss	___wmul@multiplier^(0+128),0
  2811  1206  2A0D               	goto	l595
  2812  1207  0822               	movf	___wmul@multiplicand^(0+128),w
  2813  1208  07A4               	addwf	___wmul@product^(0+128),f
  2814  1209  1803               	skipnc
  2815  120A  0AA5               	incf	(___wmul@product+1)^(0+128),f
  2816  120B  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2817  120C  07A5               	addwf	(___wmul@product+1)^(0+128),f
  2818  120D                     l595:	
  2819  120D  3001               	movlw	1
  2820  120E                     u2805:	
  2821  120E  1003               	clrc
  2822  120F  0DA2               	rlf	___wmul@multiplicand^(0+128),f
  2823  1210  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2824  1211  3EFF               	addlw	-1
  2825  1212  1D03               	skipz
  2826  1213  2A0E               	goto	u2805
  2827  1214  3001               	movlw	1
  2828  1215                     u2815:	
  2829  1215  1003               	clrc
  2830  1216  0CA1               	rrf	(___wmul@multiplier+1)^(0+128),f
  2831  1217  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2832  1218  3EFF               	addlw	-1
  2833  1219  1D03               	skipz
  2834  121A  2A15               	goto	u2815
  2835  121B  0821               	movf	(___wmul@multiplier+1)^(0+128),w
  2836  121C  0420               	iorwf	___wmul@multiplier^(0+128),w
  2837  121D  1D03               	skipz
  2838  121E  2A05               	goto	l2521
  2839  121F  0825               	movf	(___wmul@product+1)^(0+128),w
  2840  1220  01A1               	clrf	(?___wmul+1)^(0+128)
  2841  1221  07A1               	addwf	(?___wmul+1)^(0+128),f
  2842  1222  0824               	movf	___wmul@product^(0+128),w
  2843  1223  01A0               	clrf	?___wmul^(0+128)
  2844  1224  07A0               	addwf	?___wmul^(0+128),f
  2845  1225  0008               	return
  2846  1226                     __end_of___wmul:	
  2847                           
  2848                           	psect	text4
  2849  12B1                     __ptext4:	
  2850 ;; *************** function ___lwmod *****************
  2851 ;; Defined at:
  2852 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    8[BANK1 ] unsigned int 
  2855 ;;  dividend        2   10[BANK1 ] unsigned int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  counter         1   13[BANK1 ] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2    8[BANK1 ] unsigned int 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       0       4       0       0
  2868 ;;      Locals:         0       0       1       0       0
  2869 ;;      Temps:          0       0       1       0       0
  2870 ;;      Totals:         0       0       6       0       0
  2871 ;;Total ram usage:        6 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    5
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_sprintf
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function ___lwmod
  2883  12B1                     ___lwmod:	
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2887  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  2888  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  2889  12B3  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  2890  12B4  0428               	iorwf	___lwmod@divisor^(0+128),w
  2891  12B5  1903               	skipnz
  2892  12B6  2AE0               	goto	l2709
  2893  12B7  01AD               	clrf	___lwmod@counter^(0+128)
  2894  12B8  0AAD               	incf	___lwmod@counter^(0+128),f
  2895  12B9                     l2699:	
  2896  12B9  1BA9               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2897  12BA  2AC7               	goto	l2701
  2898  12BB  3001               	movlw	1
  2899  12BC                     u3255:	
  2900  12BC  1003               	clrc
  2901  12BD  0DA8               	rlf	___lwmod@divisor^(0+128),f
  2902  12BE  0DA9               	rlf	(___lwmod@divisor+1)^(0+128),f
  2903  12BF  3EFF               	addlw	-1
  2904  12C0  1D03               	skipz
  2905  12C1  2ABC               	goto	u3255
  2906  12C2  3001               	movlw	1
  2907  12C3  00AC               	movwf	??___lwmod^(0+128)
  2908  12C4  082C               	movf	??___lwmod^(0+128),w
  2909  12C5  07AD               	addwf	___lwmod@counter^(0+128),f
  2910  12C6  2AB9               	goto	l2699
  2911  12C7                     l2701:	
  2912  12C7  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  2913  12C8  022B               	subwf	(___lwmod@dividend+1)^(0+128),w
  2914  12C9  1D03               	skipz
  2915  12CA  2ACD               	goto	u3275
  2916  12CB  0828               	movf	___lwmod@divisor^(0+128),w
  2917  12CC  022A               	subwf	___lwmod@dividend^(0+128),w
  2918  12CD                     u3275:	
  2919  12CD  1C03               	skipc
  2920  12CE  2AD5               	goto	l2705
  2921  12CF  0828               	movf	___lwmod@divisor^(0+128),w
  2922  12D0  02AA               	subwf	___lwmod@dividend^(0+128),f
  2923  12D1  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  2924  12D2  1C03               	skipc
  2925  12D3  03AB               	decf	(___lwmod@dividend+1)^(0+128),f
  2926  12D4  02AB               	subwf	(___lwmod@dividend+1)^(0+128),f
  2927  12D5                     l2705:	
  2928  12D5  3001               	movlw	1
  2929  12D6                     u3285:	
  2930  12D6  1003               	clrc
  2931  12D7  0CA9               	rrf	(___lwmod@divisor+1)^(0+128),f
  2932  12D8  0CA8               	rrf	___lwmod@divisor^(0+128),f
  2933  12D9  3EFF               	addlw	-1
  2934  12DA  1D03               	skipz
  2935  12DB  2AD6               	goto	u3285
  2936  12DC  3001               	movlw	1
  2937  12DD  02AD               	subwf	___lwmod@counter^(0+128),f
  2938  12DE  1D03               	btfss	3,2
  2939  12DF  2AC7               	goto	l2701
  2940  12E0                     l2709:	
  2941  12E0  082B               	movf	(___lwmod@dividend+1)^(0+128),w
  2942  12E1  01A9               	clrf	(?___lwmod+1)^(0+128)
  2943  12E2  07A9               	addwf	(?___lwmod+1)^(0+128),f
  2944  12E3  082A               	movf	___lwmod@dividend^(0+128),w
  2945  12E4  01A8               	clrf	?___lwmod^(0+128)
  2946  12E5  07A8               	addwf	?___lwmod^(0+128),f
  2947  12E6  0008               	return
  2948  12E7                     __end_of___lwmod:	
  2949                           
  2950                           	psect	text5
  2951  1325                     __ptext5:	
  2952 ;; *************** function ___lwdiv *****************
  2953 ;; Defined at:
  2954 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  divisor         2    0[BANK1 ] unsigned int 
  2957 ;;  dividend        2    2[BANK1 ] unsigned int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  quotient        2    5[BANK1 ] unsigned int 
  2960 ;;  counter         1    7[BANK1 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2    0[BANK1 ] unsigned int 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       4       0       0
  2971 ;;      Locals:         0       0       3       0       0
  2972 ;;      Temps:          0       0       1       0       0
  2973 ;;      Totals:         0       0       8       0       0
  2974 ;;Total ram usage:        8 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    5
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_sprintf
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function ___lwdiv
  2986  1325                     ___lwdiv:	
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2990  1325  1683               	bsf	3,5	;RP0=1, select bank1
  2991  1326  1303               	bcf	3,6	;RP1=0, select bank1
  2992  1327  01A5               	clrf	___lwdiv@quotient^(0+128)
  2993  1328  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  2994  1329  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2995  132A  0420               	iorwf	___lwdiv@divisor^(0+128),w
  2996  132B  1903               	skipnz
  2997  132C  2B5E               	goto	l2687
  2998  132D  01A7               	clrf	___lwdiv@counter^(0+128)
  2999  132E  0AA7               	incf	___lwdiv@counter^(0+128),f
  3000  132F                     l2675:	
  3001  132F  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3002  1330  2B3D               	goto	l2677
  3003  1331  3001               	movlw	1
  3004  1332                     u3185:	
  3005  1332  1003               	clrc
  3006  1333  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  3007  1334  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3008  1335  3EFF               	addlw	-1
  3009  1336  1D03               	skipz
  3010  1337  2B32               	goto	u3185
  3011  1338  3001               	movlw	1
  3012  1339  00A4               	movwf	??___lwdiv^(0+128)
  3013  133A  0824               	movf	??___lwdiv^(0+128),w
  3014  133B  07A7               	addwf	___lwdiv@counter^(0+128),f
  3015  133C  2B2F               	goto	l2675
  3016  133D                     l2677:	
  3017  133D  3001               	movlw	1
  3018  133E                     u3205:	
  3019  133E  1003               	clrc
  3020  133F  0DA5               	rlf	___lwdiv@quotient^(0+128),f
  3021  1340  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3022  1341  3EFF               	addlw	-1
  3023  1342  1D03               	skipz
  3024  1343  2B3E               	goto	u3205
  3025  1344  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3026  1345  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3027  1346  1D03               	skipz
  3028  1347  2B4A               	goto	u3215
  3029  1348  0820               	movf	___lwdiv@divisor^(0+128),w
  3030  1349  0222               	subwf	___lwdiv@dividend^(0+128),w
  3031  134A                     u3215:	
  3032  134A  1C03               	skipc
  3033  134B  2B53               	goto	l2683
  3034  134C  0820               	movf	___lwdiv@divisor^(0+128),w
  3035  134D  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3036  134E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3037  134F  1C03               	skipc
  3038  1350  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  3039  1351  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3040  1352  1425               	bsf	___lwdiv@quotient^(0+128),0
  3041  1353                     l2683:	
  3042  1353  3001               	movlw	1
  3043  1354                     u3225:	
  3044  1354  1003               	clrc
  3045  1355  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3046  1356  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3047  1357  3EFF               	addlw	-1
  3048  1358  1D03               	skipz
  3049  1359  2B54               	goto	u3225
  3050  135A  3001               	movlw	1
  3051  135B  02A7               	subwf	___lwdiv@counter^(0+128),f
  3052  135C  1D03               	btfss	3,2
  3053  135D  2B3D               	goto	l2677
  3054  135E                     l2687:	
  3055  135E  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  3056  135F  01A1               	clrf	(?___lwdiv+1)^(0+128)
  3057  1360  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  3058  1361  0825               	movf	___lwdiv@quotient^(0+128),w
  3059  1362  01A0               	clrf	?___lwdiv^(0+128)
  3060  1363  07A0               	addwf	?___lwdiv^(0+128),f
  3061  1364  0008               	return
  3062  1365                     __end_of___lwdiv:	
  3063                           
  3064                           	psect	text6
  3065  1280                     __ptext6:	
  3066 ;; *************** function _USART_WriteString *****************
  3067 ;; Defined at:
  3068 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3071 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3072 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3073 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3074 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;		None               void
  3079 ;; Registers used:
  3080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       2       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       0       2       0       0
  3090 ;;Total ram usage:        2 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    6
  3093 ;; This function calls:
  3094 ;;		_USART_WriteChar
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _USART_WriteString
  3102  1280                     _USART_WriteString:	
  3103  1280                     l2921:	
  3104                           ;usart.c: 54: while(*str != '\0')
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3108                           
  3109  1280  1683               	bsf	3,5	;RP0=1, select bank1
  3110  1281  1303               	bcf	3,6	;RP1=0, select bank1
  3111  1282  0822               	movf	(USART_WriteString@str+1)^(0+128),w
  3112  1283  1283               	bcf	3,5	;RP0=0, select bank0
  3113  1284  1303               	bcf	3,6	;RP1=0, select bank0
  3114  1285  00FF               	movwf	127
  3115  1286  1683               	bsf	3,5	;RP0=1, select bank1
  3116  1287  1303               	bcf	3,6	;RP1=0, select bank1
  3117  1288  0821               	movf	USART_WriteString@str^(0+128),w
  3118  1289  0084               	movwf	4
  3119  128A  1283               	bcf	3,5	;RP0=0, select bank0
  3120  128B  1303               	bcf	3,6	;RP1=0, select bank0
  3121  128C  120A  158A  2000  160A  118A  	fcall	stringtab
  3122  1291  3800               	iorlw	0
  3123  1292  1903               	btfsc	3,2
  3124  1293  0008               	return
  3125                           
  3126                           ;usart.c: 55: {
  3127                           ;usart.c: 56: USART_WriteChar(*str);
  3128  1294  1683               	bsf	3,5	;RP0=1, select bank1
  3129  1295  1303               	bcf	3,6	;RP1=0, select bank1
  3130  1296  0822               	movf	(USART_WriteString@str+1)^(0+128),w
  3131  1297  1283               	bcf	3,5	;RP0=0, select bank0
  3132  1298  1303               	bcf	3,6	;RP1=0, select bank0
  3133  1299  00FF               	movwf	127
  3134  129A  1683               	bsf	3,5	;RP0=1, select bank1
  3135  129B  1303               	bcf	3,6	;RP1=0, select bank1
  3136  129C  0821               	movf	USART_WriteString@str^(0+128),w
  3137  129D  0084               	movwf	4
  3138  129E  1283               	bcf	3,5	;RP0=0, select bank0
  3139  129F  1303               	bcf	3,6	;RP1=0, select bank0
  3140  12A0  120A  158A  2000  160A  118A  	fcall	stringtab
  3141  12A5  120A  158A  20DD  160A  118A  	fcall	_USART_WriteChar
  3142                           
  3143                           ;usart.c: 57: str++;
  3144  12AA  3001               	movlw	1
  3145  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  3146  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  3147  12AD  07A1               	addwf	USART_WriteString@str^(0+128),f
  3148  12AE  1803               	skipnc
  3149  12AF  0AA2               	incf	(USART_WriteString@str+1)^(0+128),f
  3150  12B0  2A80               	goto	l2921
  3151  12B1                     __end_of_USART_WriteString:	
  3152                           
  3153                           	psect	text7
  3154  08DD                     __ptext7:	
  3155 ;; *************** function _USART_WriteChar *****************
  3156 ;; Defined at:
  3157 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  byte            1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  byte            1    0[BANK1 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;		None               void
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       1       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         0       0       1       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    5
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_USART_WriteString
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _USART_WriteChar
  3187  08DD                     _USART_WriteChar:	
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _USART_WriteChar: [wreg]
  3191                           ;USART_WriteChar@byte stored from wreg
  3192  08DD  1683               	bsf	3,5	;RP0=1, select bank1
  3193  08DE  1303               	bcf	3,6	;RP1=0, select bank1
  3194  08DF  00A0               	movwf	USART_WriteChar@byte^(0+128)
  3195  08E0                     l224:	
  3196                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3197                           
  3198  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  3199  08E1  1E0C               	btfss	12,4	;volatile
  3200  08E2  28E0               	goto	l224
  3201                           
  3202                           ;usart.c: 47: TXREG = byte;
  3203  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  3204  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  3205  08E5  0820               	movf	USART_WriteChar@byte^(0+128),w
  3206  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  3207  08E7  1303               	bcf	3,6	;RP1=0, select bank0
  3208  08E8  0099               	movwf	25	;volatile
  3209  08E9  0008               	return
  3210  08EA                     __end_of_USART_WriteChar:	
  3211                           
  3212                           	psect	text8
  3213  1365                     __ptext8:	
  3214 ;; *************** function _USART_Init *****************
  3215 ;; Defined at:
  3216 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  BaudRate        4   15[BANK1 ] long 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       4       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       0       4       0       0
  3233 ;;      Totals:         0       0       8       0       0
  3234 ;;Total ram usage:        8 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    6
  3237 ;; This function calls:
  3238 ;;		___aldiv
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _USART_Init
  3246  1365                     _USART_Init:	
  3247                           
  3248                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3252  1365  1683               	bsf	3,5	;RP0=1, select bank1
  3253  1366  1303               	bcf	3,6	;RP1=0, select bank1
  3254  1367  082F               	movf	USART_Init@BaudRate^(0+128),w
  3255  1368  00B3               	movwf	??_USART_Init^(0+128)
  3256  1369  0830               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3257  136A  00B4               	movwf	(??_USART_Init^(0+128)+1)
  3258  136B  0831               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3259  136C  00B5               	movwf	(??_USART_Init^(0+128)+2)
  3260  136D  0832               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3261  136E  00B6               	movwf	(??_USART_Init^(0+128)+3)
  3262  136F  3004               	movlw	4
  3263  1370                     u3645:	
  3264  1370  1003               	clrc
  3265  1371  0DB3               	rlf	??_USART_Init^(0+128),f
  3266  1372  0DB4               	rlf	(??_USART_Init^(0+128)+1),f
  3267  1373  0DB5               	rlf	(??_USART_Init^(0+128)+2),f
  3268  1374  0DB6               	rlf	(??_USART_Init^(0+128)+3),f
  3269  1375  3EFF               	addlw	-1
  3270  1376  1D03               	skipz
  3271  1377  2B70               	goto	u3645
  3272  1378  0836               	movf	(??_USART_Init+3)^(0+128),w
  3273  1379  00A3               	movwf	(___aldiv@divisor+3)^(0+128)
  3274  137A  0835               	movf	(??_USART_Init+2)^(0+128),w
  3275  137B  00A2               	movwf	(___aldiv@divisor+2)^(0+128)
  3276  137C  0834               	movf	(??_USART_Init+1)^(0+128),w
  3277  137D  00A1               	movwf	(___aldiv@divisor+1)^(0+128)
  3278  137E  0833               	movf	??_USART_Init^(0+128),w
  3279  137F  00A0               	movwf	___aldiv@divisor^(0+128)
  3280  1380  3001               	movlw	1
  3281  1381  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  3282  1382  3019               	movlw	25
  3283  1383  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  3284  1384  3040               	movlw	64
  3285  1385  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  3286  1386  3000               	movlw	0
  3287  1387  00A4               	movwf	___aldiv@dividend^(0+128)
  3288  1388  120A  118A  2765   	fcall	___aldiv
  3289  138B  1683               	bsf	3,5	;RP0=1, select bank1
  3290  138C  1303               	bcf	3,6	;RP1=0, select bank1
  3291  138D  0820               	movf	?___aldiv^(0+128),w
  3292  138E  3EFF               	addlw	255
  3293  138F  0099               	movwf	25	;volatile
  3294                           
  3295                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3296  1390  1398               	bcf	24,7	;volatile
  3297                           
  3298                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3299  1391  1318               	bcf	24,6	;volatile
  3300                           
  3301                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3302  1392  1698               	bsf	24,5	;volatile
  3303                           
  3304                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3305  1393  1218               	bcf	24,4	;volatile
  3306                           
  3307                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3308  1394  1518               	bsf	24,2	;volatile
  3309                           
  3310                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3311  1395  1498               	bsf	24,1	;volatile
  3312                           
  3313                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3314  1396  1018               	bcf	24,0	;volatile
  3315                           
  3316                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3317  1397  1283               	bcf	3,5	;RP0=0, select bank0
  3318  1398  1303               	bcf	3,6	;RP1=0, select bank0
  3319  1399  1798               	bsf	24,7	;volatile
  3320                           
  3321                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3322  139A  1318               	bcf	24,6	;volatile
  3323                           
  3324                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3325  139B  1298               	bcf	24,5	;volatile
  3326                           
  3327                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3328  139C  1618               	bsf	24,4	;volatile
  3329                           
  3330                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3331  139D  1198               	bcf	24,3	;volatile
  3332                           
  3333                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3334  139E  1118               	bcf	24,2	;volatile
  3335                           
  3336                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3337  139F  1098               	bcf	24,1	;volatile
  3338                           
  3339                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3340  13A0  1018               	bcf	24,0	;volatile
  3341                           
  3342                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3343  13A1  1683               	bsf	3,5	;RP0=1, select bank1
  3344  13A2  1303               	bcf	3,6	;RP1=0, select bank1
  3345  13A3  120C               	bcf	12,4	;volatile
  3346                           
  3347                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3348  13A4  1283               	bcf	3,5	;RP0=0, select bank0
  3349  13A5  1303               	bcf	3,6	;RP1=0, select bank0
  3350  13A6  120C               	bcf	12,4	;volatile
  3351                           
  3352                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3353  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  3354  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  3355  13A9  168C               	bsf	12,5	;volatile
  3356                           
  3357                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3358  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  3359  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  3360  13AC  128C               	bcf	12,5	;volatile
  3361  13AD  0008               	return
  3362  13AE                     __end_of_USART_Init:	
  3363                           
  3364                           	psect	text9
  3365  0765                     __ptext9:	
  3366 ;; *************** function ___aldiv *****************
  3367 ;; Defined at:
  3368 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  divisor         4    0[BANK1 ] long 
  3371 ;;  dividend        4    4[BANK1 ] long 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  quotient        4   11[BANK1 ] long 
  3374 ;;  sign            1   10[BANK1 ] unsigned char 
  3375 ;;  counter         1    9[BANK1 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  4    0[BANK1 ] long 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       8       0       0
  3386 ;;      Locals:         0       0       6       0       0
  3387 ;;      Temps:          0       0       1       0       0
  3388 ;;      Totals:         0       0      15       0       0
  3389 ;;Total ram usage:       15 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    5
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_USART_Init
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function ___aldiv
  3401  0765                     ___aldiv:	
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3405  0765  1683               	bsf	3,5	;RP0=1, select bank1
  3406  0766  1303               	bcf	3,6	;RP1=0, select bank1
  3407  0767  01AA               	clrf	___aldiv@sign^(0+128)
  3408  0768  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  3409  0769  2F77               	goto	l650
  3410  076A  09A0               	comf	___aldiv@divisor^(0+128),f
  3411  076B  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  3412  076C  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  3413  076D  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  3414  076E  0AA0               	incf	___aldiv@divisor^(0+128),f
  3415  076F  1903               	skipnz
  3416  0770  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  3417  0771  1903               	skipnz
  3418  0772  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  3419  0773  1903               	skipnz
  3420  0774  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  3421  0775  01AA               	clrf	___aldiv@sign^(0+128)
  3422  0776  0AAA               	incf	___aldiv@sign^(0+128),f
  3423  0777                     l650:	
  3424  0777  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  3425  0778  2F88               	goto	l2541
  3426  0779  09A4               	comf	___aldiv@dividend^(0+128),f
  3427  077A  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  3428  077B  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  3429  077C  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  3430  077D  0AA4               	incf	___aldiv@dividend^(0+128),f
  3431  077E  1903               	skipnz
  3432  077F  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  3433  0780  1903               	skipnz
  3434  0781  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  3435  0782  1903               	skipnz
  3436  0783  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  3437  0784  3001               	movlw	1
  3438  0785  00A8               	movwf	??___aldiv^(0+128)
  3439  0786  0828               	movf	??___aldiv^(0+128),w
  3440  0787  06AA               	xorwf	___aldiv@sign^(0+128),f
  3441  0788                     l2541:	
  3442  0788  3000               	movlw	0
  3443  0789  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  3444  078A  3000               	movlw	0
  3445  078B  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  3446  078C  3000               	movlw	0
  3447  078D  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  3448  078E  3000               	movlw	0
  3449  078F  00AB               	movwf	___aldiv@quotient^(0+128)
  3450  0790  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  3451  0791  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3452  0792  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3453  0793  0420               	iorwf	___aldiv@divisor^(0+128),w
  3454  0794  1903               	skipnz
  3455  0795  2FDD               	goto	l2563
  3456  0796  01A9               	clrf	___aldiv@counter^(0+128)
  3457  0797  0AA9               	incf	___aldiv@counter^(0+128),f
  3458  0798                     l2549:	
  3459  0798  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3460  0799  2FA8               	goto	l2551
  3461  079A  3001               	movlw	1
  3462  079B  00A8               	movwf	??___aldiv^(0+128)
  3463  079C                     u2865:	
  3464  079C  1003               	clrc
  3465  079D  0DA0               	rlf	___aldiv@divisor^(0+128),f
  3466  079E  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  3467  079F  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  3468  07A0  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  3469  07A1  0BA8               	decfsz	??___aldiv^(0+128),f
  3470  07A2  2F9C               	goto	u2865
  3471  07A3  3001               	movlw	1
  3472  07A4  00A8               	movwf	??___aldiv^(0+128)
  3473  07A5  0828               	movf	??___aldiv^(0+128),w
  3474  07A6  07A9               	addwf	___aldiv@counter^(0+128),f
  3475  07A7  2F98               	goto	l2549
  3476  07A8                     l2551:	
  3477  07A8  3001               	movlw	1
  3478  07A9  00A8               	movwf	??___aldiv^(0+128)
  3479  07AA                     u2885:	
  3480  07AA  1003               	clrc
  3481  07AB  0DAB               	rlf	___aldiv@quotient^(0+128),f
  3482  07AC  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  3483  07AD  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  3484  07AE  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  3485  07AF  0BA8               	decfsz	??___aldiv^(0+128),f
  3486  07B0  2FAA               	goto	u2885
  3487  07B1  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  3488  07B2  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  3489  07B3  1D03               	skipz
  3490  07B4  2FBF               	goto	u2895
  3491  07B5  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  3492  07B6  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  3493  07B7  1D03               	skipz
  3494  07B8  2FBF               	goto	u2895
  3495  07B9  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  3496  07BA  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  3497  07BB  1D03               	skipz
  3498  07BC  2FBF               	goto	u2895
  3499  07BD  0820               	movf	___aldiv@divisor^(0+128),w
  3500  07BE  0224               	subwf	___aldiv@dividend^(0+128),w
  3501  07BF                     u2895:	
  3502  07BF  1C03               	skipc
  3503  07C0  2FD0               	goto	l2559
  3504  07C1  0820               	movf	___aldiv@divisor^(0+128),w
  3505  07C2  02A4               	subwf	___aldiv@dividend^(0+128),f
  3506  07C3  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  3507  07C4  1C03               	skipc
  3508  07C5  0F21               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3509  07C6  02A5               	subwf	(___aldiv@dividend+1)^(0+128),f
  3510  07C7  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  3511  07C8  1C03               	skipc
  3512  07C9  0F22               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3513  07CA  02A6               	subwf	(___aldiv@dividend+2)^(0+128),f
  3514  07CB  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  3515  07CC  1C03               	skipc
  3516  07CD  0F23               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3517  07CE  02A7               	subwf	(___aldiv@dividend+3)^(0+128),f
  3518  07CF  142B               	bsf	___aldiv@quotient^(0+128),0
  3519  07D0                     l2559:	
  3520  07D0  3001               	movlw	1
  3521  07D1                     u2905:	
  3522  07D1  1003               	clrc
  3523  07D2  0CA3               	rrf	(___aldiv@divisor+3)^(0+128),f
  3524  07D3  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  3525  07D4  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  3526  07D5  0CA0               	rrf	___aldiv@divisor^(0+128),f
  3527  07D6  3EFF               	addlw	-1
  3528  07D7  1D03               	skipz
  3529  07D8  2FD1               	goto	u2905
  3530  07D9  3001               	movlw	1
  3531  07DA  02A9               	subwf	___aldiv@counter^(0+128),f
  3532  07DB  1D03               	btfss	3,2
  3533  07DC  2FA8               	goto	l2551
  3534  07DD                     l2563:	
  3535  07DD  082A               	movf	___aldiv@sign^(0+128),w
  3536  07DE  1903               	btfsc	3,2
  3537  07DF  2FEB               	goto	l2567
  3538  07E0  09AB               	comf	___aldiv@quotient^(0+128),f
  3539  07E1  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  3540  07E2  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  3541  07E3  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  3542  07E4  0AAB               	incf	___aldiv@quotient^(0+128),f
  3543  07E5  1903               	skipnz
  3544  07E6  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  3545  07E7  1903               	skipnz
  3546  07E8  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  3547  07E9  1903               	skipnz
  3548  07EA  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  3549  07EB                     l2567:	
  3550  07EB  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  3551  07EC  00A3               	movwf	(?___aldiv+3)^(0+128)
  3552  07ED  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  3553  07EE  00A2               	movwf	(?___aldiv+2)^(0+128)
  3554  07EF  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  3555  07F0  00A1               	movwf	(?___aldiv+1)^(0+128)
  3556  07F1  082B               	movf	___aldiv@quotient^(0+128),w
  3557  07F2  00A0               	movwf	?___aldiv^(0+128)
  3558  07F3  0008               	return
  3559  07F4                     __end_of___aldiv:	
  3560                           
  3561                           	psect	text10
  3562  1047                     __ptext10:	
  3563 ;; *************** function _TIMER0_Set *****************
  3564 ;; Defined at:
  3565 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  contagens       1    wreg     unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  contagens       1    0[BANK1 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;		None               void
  3572 ;; Registers used:
  3573 ;;		wreg
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       0       0       0       0
  3580 ;;      Locals:         0       0       1       0       0
  3581 ;;      Temps:          0       0       0       0       0
  3582 ;;      Totals:         0       0       1       0       0
  3583 ;;Total ram usage:        1 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    5
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _TIMER0_Set
  3595  1047                     _TIMER0_Set:	
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _TIMER0_Set: [wreg]
  3599                           ;TIMER0_Set@contagens stored from wreg
  3600  1047  1683               	bsf	3,5	;RP0=1, select bank1
  3601  1048  1303               	bcf	3,6	;RP1=0, select bank1
  3602  1049  00A0               	movwf	TIMER0_Set@contagens^(0+128)
  3603                           
  3604                           ;timers.c: 22: TMR0 = contagens;
  3605  104A  0820               	movf	TIMER0_Set@contagens^(0+128),w
  3606  104B  1283               	bcf	3,5	;RP0=0, select bank0
  3607  104C  1303               	bcf	3,6	;RP1=0, select bank0
  3608  104D  0081               	movwf	1	;volatile
  3609  104E  0008               	return
  3610  104F                     __end_of_TIMER0_Set:	
  3611                           
  3612                           	psect	text11
  3613  1061                     __ptext11:	
  3614 ;; *************** function _TIMER0_Init *****************
  3615 ;; Defined at:
  3616 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		None
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0
  3633 ;;      Totals:         0       0       0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    5
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _TIMER0_Init
  3646  1061                     _TIMER0_Init:	
  3647                           
  3648                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3649                           
  3650                           ;incstack = 0
  3651                           ; Regs used in _TIMER0_Init: []
  3652  1061  1683               	bsf	3,5	;RP0=1, select bank1
  3653  1062  1303               	bcf	3,6	;RP1=0, select bank1
  3654  1063  1281               	bcf	1,5	;volatile
  3655                           
  3656                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3657  1064  1201               	bcf	1,4	;volatile
  3658                           
  3659                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3660  1065  1181               	bcf	1,3	;volatile
  3661                           
  3662                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3663  1066  1501               	bsf	1,2	;volatile
  3664                           
  3665                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3666  1067  1481               	bsf	1,1	;volatile
  3667                           
  3668                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3669  1068  1401               	bsf	1,0	;volatile
  3670                           
  3671                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3672  1069  110B               	bcf	11,2	;volatile
  3673                           
  3674                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3675  106A  168B               	bsf	11,5	;volatile
  3676  106B  0008               	return
  3677  106C                     __end_of_TIMER0_Init:	
  3678                           
  3679                           	psect	text12
  3680  11DD                     __ptext12:	
  3681 ;; *************** function _PWM_Init *****************
  3682 ;; Defined at:
  3683 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		wreg
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    5
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function _PWM_Init
  3713  11DD                     _PWM_Init:	
  3714                           
  3715                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _PWM_Init: [wreg]
  3719  11DD  1283               	bcf	3,5	;RP0=0, select bank0
  3720  11DE  1303               	bcf	3,6	;RP1=0, select bank0
  3721  11DF  1492               	bsf	18,1	;volatile
  3722                           
  3723                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3724  11E0  1012               	bcf	18,0	;volatile
  3725                           
  3726                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3727  11E1  1312               	bcf	18,6	;volatile
  3728                           
  3729                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3730  11E2  1292               	bcf	18,5	;volatile
  3731                           
  3732                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3733  11E3  1212               	bcf	18,4	;volatile
  3734                           
  3735                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3736  11E4  1192               	bcf	18,3	;volatile
  3737                           
  3738                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3739  11E5  1512               	bsf	18,2	;volatile
  3740                           
  3741                           ;pwm.c: 27: PR2 = 255;
  3742  11E6  30FF               	movlw	255
  3743  11E7  1683               	bsf	3,5	;RP0=1, select bank1
  3744  11E8  1303               	bcf	3,6	;RP1=0, select bank1
  3745  11E9  0092               	movwf	18	;volatile
  3746                           
  3747                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3748  11EA  1283               	bcf	3,5	;RP0=0, select bank0
  3749  11EB  1303               	bcf	3,6	;RP1=0, select bank0
  3750  11EC  1597               	bsf	23,3	;volatile
  3751                           
  3752                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3753  11ED  1517               	bsf	23,2	;volatile
  3754                           
  3755                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3756  11EE  1497               	bsf	23,1	;volatile
  3757                           
  3758                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3759  11EF  1417               	bsf	23,0	;volatile
  3760                           
  3761                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3762  11F0  1683               	bsf	3,5	;RP0=1, select bank1
  3763  11F1  1303               	bcf	3,6	;RP1=0, select bank1
  3764  11F2  150C               	bsf	12,2	;volatile
  3765                           
  3766                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3767  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  3768  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  3769  11F5  110C               	bcf	12,2	;volatile
  3770                           
  3771                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3772  11F6  159D               	bsf	29,3	;volatile
  3773                           
  3774                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3775  11F7  151D               	bsf	29,2	;volatile
  3776                           
  3777                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3778  11F8  149D               	bsf	29,1	;volatile
  3779                           
  3780                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3781  11F9  141D               	bsf	29,0	;volatile
  3782                           
  3783                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3784  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  3785  11FB  1303               	bcf	3,6	;RP1=0, select bank1
  3786  11FC  140D               	bsf	13,0	;volatile
  3787                           
  3788                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3789  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  3790  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  3791  11FF  100D               	bcf	13,0	;volatile
  3792  1200  0008               	return
  3793  1201                     __end_of_PWM_Init:	
  3794                           
  3795                           	psect	text13
  3796  1176                     __ptext13:	
  3797 ;; *************** function _PWM_DutyCycle2 *****************
  3798 ;; Defined at:
  3799 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  valor           2    0[BANK1 ] int 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         0       0       2       0       0
  3814 ;;      Locals:         0       0       0       0       0
  3815 ;;      Temps:          0       0       2       0       0
  3816 ;;      Totals:         0       0       4       0       0
  3817 ;;Total ram usage:        4 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    5
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _PWM_DutyCycle2
  3829  1176                     _PWM_DutyCycle2:	
  3830                           
  3831                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3832                           
  3833                           ;incstack = 0
  3834                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3835  1176  1683               	bsf	3,5	;RP0=1, select bank1
  3836  1177  1303               	bcf	3,6	;RP1=0, select bank1
  3837  1178  0821               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3838  1179  00A3               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3839  117A  0820               	movf	PWM_DutyCycle2@valor^(0+128),w
  3840  117B  00A2               	movwf	??_PWM_DutyCycle2^(0+128)
  3841  117C  0D23               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3842  117D  0CA3               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3843  117E  0CA2               	rrf	??_PWM_DutyCycle2^(0+128),f
  3844  117F  0D23               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3845  1180  0CA3               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3846  1181  0CA2               	rrf	??_PWM_DutyCycle2^(0+128),f
  3847  1182  0822               	movf	??_PWM_DutyCycle2^(0+128),w
  3848  1183  1283               	bcf	3,5	;RP0=0, select bank0
  3849  1184  1303               	bcf	3,6	;RP1=0, select bank0
  3850  1185  009B               	movwf	27	;volatile
  3851                           
  3852                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3853  1186  1683               	bsf	3,5	;RP0=1, select bank1
  3854  1187  1303               	bcf	3,6	;RP1=0, select bank1
  3855  1188  0820               	movf	PWM_DutyCycle2@valor^(0+128),w
  3856  1189  00A2               	movwf	??_PWM_DutyCycle2^(0+128)
  3857  118A  3003               	movlw	3
  3858  118B                     u3615:	
  3859  118B  1003               	clrc
  3860  118C  0DA2               	rlf	??_PWM_DutyCycle2^(0+128),f
  3861  118D  3EFF               	addlw	-1
  3862  118E  1D03               	skipz
  3863  118F  298B               	goto	u3615
  3864  1190  1003               	clrc
  3865  1191  0D22               	rlf	??_PWM_DutyCycle2^(0+128),w
  3866  1192  380C               	iorlw	12
  3867  1193  1283               	bcf	3,5	;RP0=0, select bank0
  3868  1194  1303               	bcf	3,6	;RP1=0, select bank0
  3869  1195  009D               	movwf	29	;volatile
  3870  1196  0008               	return
  3871  1197                     __end_of_PWM_DutyCycle2:	
  3872                           
  3873                           	psect	text14
  3874  1155                     __ptext14:	
  3875 ;; *************** function _PWM_DutyCycle1 *****************
  3876 ;; Defined at:
  3877 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  valor           2    0[BANK1 ] int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       2       0       0
  3892 ;;      Locals:         0       0       0       0       0
  3893 ;;      Temps:          0       0       2       0       0
  3894 ;;      Totals:         0       0       4       0       0
  3895 ;;Total ram usage:        4 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    5
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _PWM_DutyCycle1
  3907  1155                     _PWM_DutyCycle1:	
  3908                           
  3909                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3910                           
  3911                           ;incstack = 0
  3912                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3913  1155  1683               	bsf	3,5	;RP0=1, select bank1
  3914  1156  1303               	bcf	3,6	;RP1=0, select bank1
  3915  1157  0821               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3916  1158  00A3               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3917  1159  0820               	movf	PWM_DutyCycle1@valor^(0+128),w
  3918  115A  00A2               	movwf	??_PWM_DutyCycle1^(0+128)
  3919  115B  0D23               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3920  115C  0CA3               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3921  115D  0CA2               	rrf	??_PWM_DutyCycle1^(0+128),f
  3922  115E  0D23               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3923  115F  0CA3               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3924  1160  0CA2               	rrf	??_PWM_DutyCycle1^(0+128),f
  3925  1161  0822               	movf	??_PWM_DutyCycle1^(0+128),w
  3926  1162  1283               	bcf	3,5	;RP0=0, select bank0
  3927  1163  1303               	bcf	3,6	;RP1=0, select bank0
  3928  1164  0095               	movwf	21	;volatile
  3929                           
  3930                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3931  1165  1683               	bsf	3,5	;RP0=1, select bank1
  3932  1166  1303               	bcf	3,6	;RP1=0, select bank1
  3933  1167  0820               	movf	PWM_DutyCycle1@valor^(0+128),w
  3934  1168  00A2               	movwf	??_PWM_DutyCycle1^(0+128)
  3935  1169  3003               	movlw	3
  3936  116A                     u3675:	
  3937  116A  1003               	clrc
  3938  116B  0DA2               	rlf	??_PWM_DutyCycle1^(0+128),f
  3939  116C  3EFF               	addlw	-1
  3940  116D  1D03               	skipz
  3941  116E  296A               	goto	u3675
  3942  116F  1003               	clrc
  3943  1170  0D22               	rlf	??_PWM_DutyCycle1^(0+128),w
  3944  1171  380C               	iorlw	12
  3945  1172  1283               	bcf	3,5	;RP0=0, select bank0
  3946  1173  1303               	bcf	3,6	;RP1=0, select bank0
  3947  1174  0097               	movwf	23	;volatile
  3948  1175  0008               	return
  3949  1176                     __end_of_PWM_DutyCycle1:	
  3950                           
  3951                           	psect	text15
  3952  124F                     __ptext15:	
  3953 ;; *************** function _LCD_WriteString *****************
  3954 ;; Defined at:
  3955 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3958 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3959 ;;		 -> STR_13(17), 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       2       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       0       2       0       0
  3975 ;;Total ram usage:        2 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    6
  3978 ;; This function calls:
  3979 ;;		_LCD_WriteData
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _LCD_WriteString
  3987  124F                     _LCD_WriteString:	
  3988  124F                     l3041:	
  3989                           ;lcd.c: 63: while(*Str != '\0')
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3993                           
  3994  124F  1683               	bsf	3,5	;RP0=1, select bank1
  3995  1250  1303               	bcf	3,6	;RP1=0, select bank1
  3996  1251  0823               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3997  1252  1283               	bcf	3,5	;RP0=0, select bank0
  3998  1253  1303               	bcf	3,6	;RP1=0, select bank0
  3999  1254  00FF               	movwf	127
  4000  1255  1683               	bsf	3,5	;RP0=1, select bank1
  4001  1256  1303               	bcf	3,6	;RP1=0, select bank1
  4002  1257  0822               	movf	LCD_WriteString@Str^(0+128),w
  4003  1258  0084               	movwf	4
  4004  1259  1283               	bcf	3,5	;RP0=0, select bank0
  4005  125A  1303               	bcf	3,6	;RP1=0, select bank0
  4006  125B  120A  158A  2000  160A  118A  	fcall	stringtab
  4007  1260  3800               	iorlw	0
  4008  1261  1903               	btfsc	3,2
  4009  1262  0008               	return
  4010                           
  4011                           ;lcd.c: 64: {
  4012                           ;lcd.c: 65: LCD_WriteData(*Str);
  4013  1263  1683               	bsf	3,5	;RP0=1, select bank1
  4014  1264  1303               	bcf	3,6	;RP1=0, select bank1
  4015  1265  0823               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4016  1266  1283               	bcf	3,5	;RP0=0, select bank0
  4017  1267  1303               	bcf	3,6	;RP1=0, select bank0
  4018  1268  00FF               	movwf	127
  4019  1269  1683               	bsf	3,5	;RP0=1, select bank1
  4020  126A  1303               	bcf	3,6	;RP1=0, select bank1
  4021  126B  0822               	movf	LCD_WriteString@Str^(0+128),w
  4022  126C  0084               	movwf	4
  4023  126D  1283               	bcf	3,5	;RP0=0, select bank0
  4024  126E  1303               	bcf	3,6	;RP1=0, select bank0
  4025  126F  120A  158A  2000  160A  118A  	fcall	stringtab
  4026  1274  160A  118A  20CA  160A  118A  	fcall	_LCD_WriteData
  4027                           
  4028                           ;lcd.c: 66: Str++;
  4029  1279  3001               	movlw	1
  4030  127A  1683               	bsf	3,5	;RP0=1, select bank1
  4031  127B  1303               	bcf	3,6	;RP1=0, select bank1
  4032  127C  07A2               	addwf	LCD_WriteString@Str^(0+128),f
  4033  127D  1803               	skipnc
  4034  127E  0AA3               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4035  127F  2A4F               	goto	l3041
  4036  1280                     __end_of_LCD_WriteString:	
  4037                           
  4038                           	psect	text16
  4039  10CA                     __ptext16:	
  4040 ;; *************** function _LCD_WriteData *****************
  4041 ;; Defined at:
  4042 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  Byte            1    wreg     unsigned char 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  Byte            1    1[BANK1 ] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4056 ;;      Params:         0       0       0       0       0
  4057 ;;      Locals:         0       0       1       0       0
  4058 ;;      Temps:          0       0       1       0       0
  4059 ;;      Totals:         0       0       2       0       0
  4060 ;;Total ram usage:        2 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    5
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_LCD_WriteString
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           
  4071                           ;psect for function _LCD_WriteData
  4072  10CA                     _LCD_WriteData:	
  4073                           
  4074                           ;incstack = 0
  4075                           ; Regs used in _LCD_WriteData: [wreg]
  4076                           ;LCD_WriteData@Byte stored from wreg
  4077  10CA  1683               	bsf	3,5	;RP0=1, select bank1
  4078  10CB  1303               	bcf	3,6	;RP1=0, select bank1
  4079  10CC  00A1               	movwf	LCD_WriteData@Byte^(0+128)
  4080                           
  4081                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4082  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  4083  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  4084  10CF  1409               	bsf	9,0	;volatile
  4085                           
  4086                           ;lcd.c: 51: PORTD = Byte;
  4087  10D0  1683               	bsf	3,5	;RP0=1, select bank1
  4088  10D1  1303               	bcf	3,6	;RP1=0, select bank1
  4089  10D2  0821               	movf	LCD_WriteData@Byte^(0+128),w
  4090  10D3  1283               	bcf	3,5	;RP0=0, select bank0
  4091  10D4  1303               	bcf	3,6	;RP1=0, select bank0
  4092  10D5  0088               	movwf	8	;volatile
  4093                           
  4094                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4095  10D6  1489               	bsf	9,1	;volatile
  4096                           
  4097                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4098  10D7  303D               	movlw	61
  4099  10D8  1683               	bsf	3,5	;RP0=1, select bank1
  4100  10D9  1303               	bcf	3,6	;RP1=0, select bank1
  4101  10DA  00A0               	movwf	??_LCD_WriteData^(0+128)
  4102  10DB                     u4107:	
  4103  10DB  0BA0               	decfsz	??_LCD_WriteData^(0+128),f
  4104  10DC  28DB               	goto	u4107
  4105                           
  4106                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4107  10DD  1283               	bcf	3,5	;RP0=0, select bank0
  4108  10DE  1303               	bcf	3,6	;RP1=0, select bank0
  4109  10DF  1089               	bcf	9,1	;volatile
  4110  10E0  0008               	return
  4111  10E1                     __end_of_LCD_WriteData:	
  4112                           
  4113                           	psect	text17
  4114  1475                     __ptext17:	
  4115 ;; *************** function _LCD_Init *****************
  4116 ;; Defined at:
  4117 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;		None               void
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0
  4133 ;;      Temps:          0       0       2       0       0
  4134 ;;      Totals:         0       0       2       0       0
  4135 ;;Total ram usage:        2 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    6
  4138 ;; This function calls:
  4139 ;;		_LCD_WriteCmd
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _LCD_Init
  4147  1475                     _LCD_Init:	
  4148                           
  4149                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4153  1475  1683               	bsf	3,5	;RP0=1, select bank1
  4154  1476  1303               	bcf	3,6	;RP1=0, select bank1
  4155  1477  119F               	bcf	31,3	;volatile
  4156                           
  4157                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4158  1478  151F               	bsf	31,2	;volatile
  4159                           
  4160                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4161  1479  109F               	bcf	31,1	;volatile
  4162                           
  4163                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4164  147A  101F               	bcf	31,0	;volatile
  4165                           
  4166                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4167  147B  305A               	movlw	90
  4168  147C  00A3               	movwf	(??_LCD_Init^(0+128)+1)
  4169  147D  30C3               	movlw	195
  4170  147E  00A2               	movwf	??_LCD_Init^(0+128)
  4171  147F                     u4117:	
  4172  147F  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4173  1480  2C7F               	goto	u4117
  4174  1481  0BA3               	decfsz	(??_LCD_Init^(0+128)+1),f
  4175  1482  2C7F               	goto	u4117
  4176                           
  4177                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4178  1483  3030               	movlw	48
  4179  1484  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4180                           
  4181                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4182  1489  3018               	movlw	24
  4183  148A  1683               	bsf	3,5	;RP0=1, select bank1
  4184  148B  1303               	bcf	3,6	;RP1=0, select bank1
  4185  148C  00A3               	movwf	(??_LCD_Init^(0+128)+1)
  4186  148D  30EF               	movlw	239
  4187  148E  00A2               	movwf	??_LCD_Init^(0+128)
  4188  148F                     u4127:	
  4189  148F  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4190  1490  2C8F               	goto	u4127
  4191  1491  0BA3               	decfsz	(??_LCD_Init^(0+128)+1),f
  4192  1492  2C8F               	goto	u4127
  4193                           
  4194                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4195  1493  3030               	movlw	48
  4196  1494  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4197                           
  4198                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4199  1499  3099               	movlw	153
  4200  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4201  149B  1303               	bcf	3,6	;RP1=0, select bank1
  4202  149C  00A2               	movwf	??_LCD_Init^(0+128)
  4203  149D                     u4137:	
  4204  149D  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4205  149E  2C9D               	goto	u4137
  4206                           
  4207                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4208  149F  3030               	movlw	48
  4209  14A0  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4210                           
  4211                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4212  14A5  303D               	movlw	61
  4213  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  4214  14A7  1303               	bcf	3,6	;RP1=0, select bank1
  4215  14A8  00A2               	movwf	??_LCD_Init^(0+128)
  4216  14A9                     u4147:	
  4217  14A9  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4218  14AA  2CA9               	goto	u4147
  4219                           
  4220                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4221  14AB  3038               	movlw	56
  4222  14AC  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4223                           
  4224                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4225  14B1  303D               	movlw	61
  4226  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  4227  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  4228  14B4  00A2               	movwf	??_LCD_Init^(0+128)
  4229  14B5                     u4157:	
  4230  14B5  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4231  14B6  2CB5               	goto	u4157
  4232                           
  4233                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4234  14B7  3001               	movlw	1
  4235  14B8  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4236                           
  4237                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4238  14BD  300C               	movlw	12
  4239  14BE  1683               	bsf	3,5	;RP0=1, select bank1
  4240  14BF  1303               	bcf	3,6	;RP1=0, select bank1
  4241  14C0  00A3               	movwf	(??_LCD_Init^(0+128)+1)
  4242  14C1  30F7               	movlw	247
  4243  14C2  00A2               	movwf	??_LCD_Init^(0+128)
  4244  14C3                     u4167:	
  4245  14C3  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4246  14C4  2CC3               	goto	u4167
  4247  14C5  0BA3               	decfsz	(??_LCD_Init^(0+128)+1),f
  4248  14C6  2CC3               	goto	u4167
  4249                           
  4250                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4251  14C7  300C               	movlw	12
  4252  14C8  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4253                           
  4254                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4255  14CD  303D               	movlw	61
  4256  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  4257  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  4258  14D0  00A2               	movwf	??_LCD_Init^(0+128)
  4259  14D1                     u4177:	
  4260  14D1  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4261  14D2  2CD1               	goto	u4177
  4262                           
  4263                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4264  14D3  3006               	movlw	6
  4265  14D4  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4266                           
  4267                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4268  14D9  303D               	movlw	61
  4269  14DA  1683               	bsf	3,5	;RP0=1, select bank1
  4270  14DB  1303               	bcf	3,6	;RP1=0, select bank1
  4271  14DC  00A2               	movwf	??_LCD_Init^(0+128)
  4272  14DD                     u4187:	
  4273  14DD  0BA2               	decfsz	??_LCD_Init^(0+128),f
  4274  14DE  2CDD               	goto	u4187
  4275  14DF  0008               	return
  4276  14E0                     __end_of_LCD_Init:	
  4277                           
  4278                           	psect	text18
  4279  1135                     __ptext18:	
  4280 ;; *************** function _LCD_Cursor *****************
  4281 ;; Defined at:
  4282 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  Row             1    wreg     unsigned char 
  4285 ;;  Col             1    0[BANK1 ] unsigned char 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  Row             1    2[BANK1 ] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;		None               void
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4297 ;;      Params:         0       0       1       0       0
  4298 ;;      Locals:         0       0       1       0       0
  4299 ;;      Temps:          0       0       1       0       0
  4300 ;;      Totals:         0       0       3       0       0
  4301 ;;Total ram usage:        3 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    5
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function _LCD_Cursor
  4313  1135                     _LCD_Cursor:	
  4314                           
  4315                           ;incstack = 0
  4316                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4317                           ;LCD_Cursor@Row stored from wreg
  4318  1135  1683               	bsf	3,5	;RP0=1, select bank1
  4319  1136  1303               	bcf	3,6	;RP1=0, select bank1
  4320  1137  00A2               	movwf	LCD_Cursor@Row^(0+128)
  4321                           
  4322                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4323  1138  1283               	bcf	3,5	;RP0=0, select bank0
  4324  1139  1303               	bcf	3,6	;RP1=0, select bank0
  4325  113A  1009               	bcf	9,0	;volatile
  4326                           
  4327                           ;lcd.c: 14: if (Row == 0)
  4328  113B  1683               	bsf	3,5	;RP0=1, select bank1
  4329  113C  1303               	bcf	3,6	;RP1=0, select bank1
  4330  113D  08A2               	movf	LCD_Cursor@Row^(0+128),f
  4331  113E  1D03               	skipz
  4332  113F  2943               	goto	l3027
  4333                           
  4334                           ;lcd.c: 15: {
  4335                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4336  1140  0820               	movf	LCD_Cursor@Col^(0+128),w
  4337  1141  3E80               	addlw	128
  4338  1142  2947               	goto	L2
  4339  1143                     l3027:	
  4340                           ;lcd.c: 17: }
  4341                           
  4342                           
  4343                           ;lcd.c: 18: else
  4344                           ;lcd.c: 19: {
  4345                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4346  1143  1683               	bsf	3,5	;RP0=1, select bank1
  4347  1144  1303               	bcf	3,6	;RP1=0, select bank1
  4348  1145  0820               	movf	LCD_Cursor@Col^(0+128),w
  4349  1146  3EC0               	addlw	192
  4350  1147                     L2:	
  4351  1147  1283               	bcf	3,5	;RP0=0, select bank0
  4352  1148  1303               	bcf	3,6	;RP1=0, select bank0
  4353  1149  0088               	movwf	8	;volatile
  4354                           
  4355                           ;lcd.c: 21: }
  4356                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4357  114A  1489               	bsf	9,1	;volatile
  4358                           
  4359                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4360  114B  303D               	movlw	61
  4361  114C  1683               	bsf	3,5	;RP0=1, select bank1
  4362  114D  1303               	bcf	3,6	;RP1=0, select bank1
  4363  114E  00A1               	movwf	??_LCD_Cursor^(0+128)
  4364  114F                     u4197:	
  4365  114F  0BA1               	decfsz	??_LCD_Cursor^(0+128),f
  4366  1150  294F               	goto	u4197
  4367                           
  4368                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4369  1151  1283               	bcf	3,5	;RP0=0, select bank0
  4370  1152  1303               	bcf	3,6	;RP1=0, select bank0
  4371  1153  1089               	bcf	9,1	;volatile
  4372  1154  0008               	return
  4373  1155                     __end_of_LCD_Cursor:	
  4374                           
  4375                           	psect	text19
  4376  1226                     __ptext19:	
  4377 ;; *************** function _LCD_Clear *****************
  4378 ;; Defined at:
  4379 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;		None               void
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0
  4395 ;;      Temps:          0       0       2       0       0
  4396 ;;      Totals:         0       0       2       0       0
  4397 ;;Total ram usage:        2 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    6
  4400 ;; This function calls:
  4401 ;;		_LCD_WriteCmd
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _LCD_Clear
  4409  1226                     _LCD_Clear:	
  4410                           
  4411                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4415  1226  3001               	movlw	1
  4416  1227  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4417                           
  4418                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4419  122C  300C               	movlw	12
  4420  122D  1683               	bsf	3,5	;RP0=1, select bank1
  4421  122E  1303               	bcf	3,6	;RP1=0, select bank1
  4422  122F  00A3               	movwf	(??_LCD_Clear^(0+128)+1)
  4423  1230  30F7               	movlw	247
  4424  1231  00A2               	movwf	??_LCD_Clear^(0+128)
  4425  1232                     u4207:	
  4426  1232  0BA2               	decfsz	??_LCD_Clear^(0+128),f
  4427  1233  2A32               	goto	u4207
  4428  1234  0BA3               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4429  1235  2A32               	goto	u4207
  4430                           
  4431                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4432  1236  300C               	movlw	12
  4433  1237  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4434                           
  4435                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4436  123C  303D               	movlw	61
  4437  123D  1683               	bsf	3,5	;RP0=1, select bank1
  4438  123E  1303               	bcf	3,6	;RP1=0, select bank1
  4439  123F  00A2               	movwf	??_LCD_Clear^(0+128)
  4440  1240                     u4217:	
  4441  1240  0BA2               	decfsz	??_LCD_Clear^(0+128),f
  4442  1241  2A40               	goto	u4217
  4443                           
  4444                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4445  1242  3006               	movlw	6
  4446  1243  160A  118A  20B3  160A  118A  	fcall	_LCD_WriteCmd
  4447                           
  4448                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4449  1248  303D               	movlw	61
  4450  1249  1683               	bsf	3,5	;RP0=1, select bank1
  4451  124A  1303               	bcf	3,6	;RP1=0, select bank1
  4452  124B  00A2               	movwf	??_LCD_Clear^(0+128)
  4453  124C                     u4227:	
  4454  124C  0BA2               	decfsz	??_LCD_Clear^(0+128),f
  4455  124D  2A4C               	goto	u4227
  4456  124E  0008               	return
  4457  124F                     __end_of_LCD_Clear:	
  4458                           
  4459                           	psect	text20
  4460  10B3                     __ptext20:	
  4461 ;; *************** function _LCD_WriteCmd *****************
  4462 ;; Defined at:
  4463 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  Byte            1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  Byte            1    1[BANK1 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		wreg
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       0       0       0       0
  4478 ;;      Locals:         0       0       1       0       0
  4479 ;;      Temps:          0       0       1       0       0
  4480 ;;      Totals:         0       0       2       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    5
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_LCD_Clear
  4488 ;;		_LCD_Init
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _LCD_WriteCmd
  4494  10B3                     _LCD_WriteCmd:	
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _LCD_WriteCmd: [wreg]
  4498                           ;LCD_WriteCmd@Byte stored from wreg
  4499  10B3  1683               	bsf	3,5	;RP0=1, select bank1
  4500  10B4  1303               	bcf	3,6	;RP1=0, select bank1
  4501  10B5  00A1               	movwf	LCD_WriteCmd@Byte^(0+128)
  4502                           
  4503                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4504  10B6  1283               	bcf	3,5	;RP0=0, select bank0
  4505  10B7  1303               	bcf	3,6	;RP1=0, select bank0
  4506  10B8  1009               	bcf	9,0	;volatile
  4507                           
  4508                           ;lcd.c: 36: PORTD = Byte;
  4509  10B9  1683               	bsf	3,5	;RP0=1, select bank1
  4510  10BA  1303               	bcf	3,6	;RP1=0, select bank1
  4511  10BB  0821               	movf	LCD_WriteCmd@Byte^(0+128),w
  4512  10BC  1283               	bcf	3,5	;RP0=0, select bank0
  4513  10BD  1303               	bcf	3,6	;RP1=0, select bank0
  4514  10BE  0088               	movwf	8	;volatile
  4515                           
  4516                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4517  10BF  1489               	bsf	9,1	;volatile
  4518                           
  4519                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4520  10C0  303D               	movlw	61
  4521  10C1  1683               	bsf	3,5	;RP0=1, select bank1
  4522  10C2  1303               	bcf	3,6	;RP1=0, select bank1
  4523  10C3  00A0               	movwf	??_LCD_WriteCmd^(0+128)
  4524  10C4                     u4237:	
  4525  10C4  0BA0               	decfsz	??_LCD_WriteCmd^(0+128),f
  4526  10C5  28C4               	goto	u4237
  4527                           
  4528                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4529  10C6  1283               	bcf	3,5	;RP0=0, select bank0
  4530  10C7  1303               	bcf	3,6	;RP1=0, select bank0
  4531  10C8  1089               	bcf	9,1	;volatile
  4532  10C9  0008               	return
  4533  10CA                     __end_of_LCD_WriteCmd:	
  4534                           
  4535                           	psect	text21
  4536  108D                     __ptext21:	
  4537 ;; *************** function _ADC_Init *****************
  4538 ;; Defined at:
  4539 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    5
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _ADC_Init
  4569  108D                     _ADC_Init:	
  4570                           
  4571                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _ADC_Init: []
  4575  108D  1683               	bsf	3,5	;RP0=1, select bank1
  4576  108E  1303               	bcf	3,6	;RP1=0, select bank1
  4577  108F  179F               	bsf	31,7	;volatile
  4578                           
  4579                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4580  1090  159F               	bsf	31,3	;volatile
  4581                           
  4582                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4583  1091  151F               	bsf	31,2	;volatile
  4584                           
  4585                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4586  1092  149F               	bsf	31,1	;volatile
  4587                           
  4588                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4589  1093  101F               	bcf	31,0	;volatile
  4590                           
  4591                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4592  1094  1283               	bcf	3,5	;RP0=0, select bank0
  4593  1095  1303               	bcf	3,6	;RP1=0, select bank0
  4594  1096  179F               	bsf	31,7	;volatile
  4595                           
  4596                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4597  1097  131F               	bcf	31,6	;volatile
  4598                           
  4599                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4600  1098  1683               	bsf	3,5	;RP0=1, select bank1
  4601  1099  1303               	bcf	3,6	;RP1=0, select bank1
  4602  109A  130C               	bcf	12,6	;volatile
  4603                           
  4604                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4605  109B  1283               	bcf	3,5	;RP0=0, select bank0
  4606  109C  1303               	bcf	3,6	;RP1=0, select bank0
  4607  109D  130C               	bcf	12,6	;volatile
  4608  109E  0008               	return
  4609  109F                     __end_of_ADC_Init:	
  4610                           
  4611                           	psect	text22
  4612  0CB5                     __ptext22:	
  4613 ;; *************** function _ISR *****************
  4614 ;; Defined at:
  4615 ;;		line 323 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          0       4       0       0       0
  4632 ;;      Totals:         0       4       0       0       0
  4633 ;;Total ram usage:        4 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    4
  4636 ;; This function calls:
  4637 ;;		_Fuzzy
  4638 ;;		_USART_ReceiveChar
  4639 ;;		___lwtoft
  4640 ;;		i1_PWM_DutyCycle2
  4641 ;;		i1_TIMER0_Set
  4642 ;;		i1_USART_WriteString
  4643 ;;		i1___lwdiv
  4644 ;;		i1___wmul
  4645 ;; This function is called by:
  4646 ;;		Interrupt level 1
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _ISR
  4652  0CB5                     _ISR:	
  4653                           
  4654                           ;main.c: 326: if (PIR1bits.RCIF)
  4655  0CB5  1E8C               	btfss	12,5	;volatile
  4656  0CB6  2DDB               	goto	i1l3263
  4657                           
  4658                           ;main.c: 327: {
  4659                           ;main.c: 328: if (USART_ReceiveChar() == '0')
  4660  0CB7  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4661  0CBC  3A30               	xorlw	48
  4662  0CBD  1D03               	skipz
  4663  0CBE  2CD4               	goto	i1l3197
  4664                           
  4665                           ;main.c: 329: {
  4666                           ;main.c: 330: USART_WriteString("\n\rdesligado\n\r");
  4667  0CBF  30A0               	movlw	low (STR_1-__stringbase)
  4668  0CC0  00F1               	movwf	i1USART_WriteString@str
  4669  0CC1  3080               	movlw	128
  4670  0CC2  00F2               	movwf	i1USART_WriteString@str+1
  4671  0CC3  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4672                           
  4673                           ;main.c: 332: PWM_DutyCycle2(0);
  4674  0CC8  3000               	movlw	0
  4675  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  4676  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  4677  0CCB  00BE               	movwf	i1PWM_DutyCycle2@valor
  4678  0CCC  3000               	movlw	0
  4679  0CCD  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  4680  0CCE  160A  118A  20E1  120A  158A  	fcall	i1_PWM_DutyCycle2
  4681                           
  4682                           ;main.c: 333: return;
  4683  0CD3  2E3C               	goto	i1l179
  4684  0CD4                     i1l3197:	
  4685                           
  4686                           ;main.c: 334: }
  4687                           ;main.c: 336: if (USART_ReceiveChar() == '1')
  4688  0CD4  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4689  0CD9  3A31               	xorlw	49
  4690  0CDA  1D03               	skipz
  4691  0CDB  2CEB               	goto	i1l3203
  4692                           
  4693                           ;main.c: 337: {
  4694                           ;main.c: 338: USART_WriteString("\n\rpwm = \n\r");
  4695  0CDC  30AE               	movlw	low (STR_2-__stringbase)
  4696  0CDD  00F1               	movwf	i1USART_WriteString@str
  4697  0CDE  3080               	movlw	128
  4698  0CDF  00F2               	movwf	i1USART_WriteString@str+1
  4699  0CE0  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4700                           
  4701                           ;main.c: 339: setpointUI = 720;
  4702  0CE5  30D0               	movlw	208
  4703  0CE6  1683               	bsf	3,5	;RP0=1, select bank1
  4704  0CE7  1303               	bcf	3,6	;RP1=0, select bank1
  4705  0CE8  00ED               	movwf	_setpointUI^(0+128)
  4706  0CE9  3002               	movlw	2
  4707  0CEA  00EE               	movwf	(_setpointUI^(0+128)+1)
  4708  0CEB                     i1l3203:	
  4709                           
  4710                           ;main.c: 341: }
  4711                           ;main.c: 343: if (USART_ReceiveChar() == '2')
  4712  0CEB  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4713  0CF0  3A32               	xorlw	50
  4714  0CF1  1D03               	skipz
  4715  0CF2  2D02               	goto	i1l3209
  4716                           
  4717                           ;main.c: 344: {
  4718                           ;main.c: 345: USART_WriteString("\n\rpwm = \n\r");
  4719  0CF3  30AE               	movlw	low (STR_2-__stringbase)
  4720  0CF4  00F1               	movwf	i1USART_WriteString@str
  4721  0CF5  3080               	movlw	128
  4722  0CF6  00F2               	movwf	i1USART_WriteString@str+1
  4723  0CF7  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4724                           
  4725                           ;main.c: 346: setpointUI = 1450;
  4726  0CFC  30AA               	movlw	170
  4727  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  4728  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  4729  0CFF  00ED               	movwf	_setpointUI^(0+128)
  4730  0D00  3005               	movlw	5
  4731  0D01  00EE               	movwf	(_setpointUI^(0+128)+1)
  4732  0D02                     i1l3209:	
  4733                           
  4734                           ;main.c: 348: }
  4735                           ;main.c: 350: if (USART_ReceiveChar() == '3')
  4736  0D02  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4737  0D07  3A33               	xorlw	51
  4738  0D08  1D03               	skipz
  4739  0D09  2D19               	goto	i1l3215
  4740                           
  4741                           ;main.c: 351: {
  4742                           ;main.c: 352: USART_WriteString("\n\rpwm = \n\r");
  4743  0D0A  30AE               	movlw	low (STR_2-__stringbase)
  4744  0D0B  00F1               	movwf	i1USART_WriteString@str
  4745  0D0C  3080               	movlw	128
  4746  0D0D  00F2               	movwf	i1USART_WriteString@str+1
  4747  0D0E  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4748                           
  4749                           ;main.c: 353: setpointUI = 2828;
  4750  0D13  300C               	movlw	12
  4751  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  4752  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  4753  0D16  00ED               	movwf	_setpointUI^(0+128)
  4754  0D17  300B               	movlw	11
  4755  0D18  00EE               	movwf	(_setpointUI^(0+128)+1)
  4756  0D19                     i1l3215:	
  4757                           
  4758                           ;main.c: 355: }
  4759                           ;main.c: 357: if (USART_ReceiveChar() == '4')
  4760  0D19  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4761  0D1E  3A34               	xorlw	52
  4762  0D1F  1D03               	skipz
  4763  0D20  2D49               	goto	i1l3227
  4764                           
  4765                           ;main.c: 358: {
  4766                           ;main.c: 359: USART_WriteString("\n\rpwm = \n\r");
  4767  0D21  30AE               	movlw	low (STR_2-__stringbase)
  4768  0D22  00F1               	movwf	i1USART_WriteString@str
  4769  0D23  3080               	movlw	128
  4770  0D24  00F2               	movwf	i1USART_WriteString@str+1
  4771  0D25  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4772                           
  4773                           ;main.c: 360: pwm = 3256;
  4774  0D2A  30B8               	movlw	184
  4775  0D2B  1683               	bsf	3,5	;RP0=1, select bank1
  4776  0D2C  1303               	bcf	3,6	;RP1=0, select bank1
  4777  0D2D  00EB               	movwf	_pwm^(0+128)
  4778  0D2E  300C               	movlw	12
  4779  0D2F  00EC               	movwf	(_pwm^(0+128)+1)
  4780                           
  4781                           ;main.c: 361: PWM_DutyCycle2(pwm);
  4782  0D30  086C               	movf	(_pwm+1)^(0+128),w
  4783  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4784  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4785  0D33  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  4786  0D34  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  4787  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  4788  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  4789  0D37  086B               	movf	_pwm^(0+128),w
  4790  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0D3A  01BE               	clrf	i1PWM_DutyCycle2@valor
  4793  0D3B  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  4794  0D3C  160A  118A  20E1  120A  158A  	fcall	i1_PWM_DutyCycle2
  4795                           
  4796                           ;main.c: 362: if(PORTBbits.RB1 == 0)
  4797  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4799  0D43  1886               	btfsc	6,1	;volatile
  4800  0D44  2D47               	goto	i1l184
  4801                           
  4802                           ;main.c: 363: {
  4803                           ;main.c: 364: PORTBbits.RB1 = 1;
  4804  0D45  1486               	bsf	6,1	;volatile
  4805                           
  4806                           ;main.c: 365: }else{
  4807  0D46  2E3C               	goto	i1l179
  4808  0D47                     i1l184:	
  4809                           
  4810                           ;main.c: 366: PORTBbits.RB1 = 0;
  4811  0D47  1086               	bcf	6,1	;volatile
  4812                           
  4813                           ;main.c: 367: }
  4814                           ;main.c: 368: return;
  4815  0D48  2E3C               	goto	i1l179
  4816  0D49                     i1l3227:	
  4817                           
  4818                           ;main.c: 369: }
  4819                           ;main.c: 371: if (USART_ReceiveChar() == '5')
  4820  0D49  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4821  0D4E  3A35               	xorlw	53
  4822  0D4F  1D03               	skipz
  4823  0D50  2D60               	goto	i1l3233
  4824                           
  4825                           ;main.c: 372: {
  4826                           ;main.c: 373: USART_WriteString("\n\rpwm = \n\r");
  4827  0D51  30AE               	movlw	low (STR_2-__stringbase)
  4828  0D52  00F1               	movwf	i1USART_WriteString@str
  4829  0D53  3080               	movlw	128
  4830  0D54  00F2               	movwf	i1USART_WriteString@str+1
  4831  0D55  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4832                           
  4833                           ;main.c: 374: setpointUI = 4510;
  4834  0D5A  309E               	movlw	158
  4835  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  4836  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  4837  0D5D  00ED               	movwf	_setpointUI^(0+128)
  4838  0D5E  3011               	movlw	17
  4839  0D5F  00EE               	movwf	(_setpointUI^(0+128)+1)
  4840  0D60                     i1l3233:	
  4841                           
  4842                           ;main.c: 376: }
  4843                           ;main.c: 378: if (USART_ReceiveChar() == '6')
  4844  0D60  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4845  0D65  3A36               	xorlw	54
  4846  0D66  1D03               	skipz
  4847  0D67  2D77               	goto	i1l3239
  4848                           
  4849                           ;main.c: 379: {
  4850                           ;main.c: 380: USART_WriteString("\n\rpwm = 768\n\r");
  4851  0D68  3092               	movlw	low (STR_7-__stringbase)
  4852  0D69  00F1               	movwf	i1USART_WriteString@str
  4853  0D6A  3080               	movlw	128
  4854  0D6B  00F2               	movwf	i1USART_WriteString@str+1
  4855  0D6C  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4856                           
  4857                           ;main.c: 381: setpointUI = 5760;
  4858  0D71  3080               	movlw	128
  4859  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  4860  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  4861  0D74  00ED               	movwf	_setpointUI^(0+128)
  4862  0D75  3016               	movlw	22
  4863  0D76  00EE               	movwf	(_setpointUI^(0+128)+1)
  4864  0D77                     i1l3239:	
  4865                           
  4866                           ;main.c: 383: }
  4867                           ;main.c: 385: if (USART_ReceiveChar() == '7')
  4868  0D77  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4869  0D7C  3A37               	xorlw	55
  4870  0D7D  1D03               	skipz
  4871  0D7E  2D8E               	goto	i1l3245
  4872                           
  4873                           ;main.c: 386: {
  4874                           ;main.c: 387: USART_WriteString("\n\rpwm = 896\n\r");
  4875  0D7F  3084               	movlw	low (STR_8-__stringbase)
  4876  0D80  00F1               	movwf	i1USART_WriteString@str
  4877  0D81  3080               	movlw	128
  4878  0D82  00F2               	movwf	i1USART_WriteString@str+1
  4879  0D83  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4880                           
  4881                           ;main.c: 388: setpointUI = 6890;
  4882  0D88  30EA               	movlw	234
  4883  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  4885  0D8B  00ED               	movwf	_setpointUI^(0+128)
  4886  0D8C  301A               	movlw	26
  4887  0D8D  00EE               	movwf	(_setpointUI^(0+128)+1)
  4888  0D8E                     i1l3245:	
  4889                           
  4890                           ;main.c: 390: }
  4891                           ;main.c: 392: if (USART_ReceiveChar() == '8')
  4892  0D8E  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4893  0D93  3A38               	xorlw	56
  4894  0D94  1D03               	skipz
  4895  0D95  2DA5               	goto	i1l3251
  4896                           
  4897                           ;main.c: 393: {
  4898                           ;main.c: 394: USART_WriteString("\n\rpwm = \n\r");
  4899  0D96  30AE               	movlw	low (STR_2-__stringbase)
  4900  0D97  00F1               	movwf	i1USART_WriteString@str
  4901  0D98  3080               	movlw	128
  4902  0D99  00F2               	movwf	i1USART_WriteString@str+1
  4903  0D9A  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4904                           
  4905                           ;main.c: 395: setpointUI = 8100;
  4906  0D9F  30A4               	movlw	164
  4907  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  4908  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  4909  0DA2  00ED               	movwf	_setpointUI^(0+128)
  4910  0DA3  301F               	movlw	31
  4911  0DA4  00EE               	movwf	(_setpointUI^(0+128)+1)
  4912  0DA5                     i1l3251:	
  4913                           
  4914                           ;main.c: 397: }
  4915                           ;main.c: 399: if (USART_ReceiveChar() == '9')
  4916  0DA5  160A  118A  20FC  120A  158A  	fcall	_USART_ReceiveChar
  4917  0DAA  3A39               	xorlw	57
  4918  0DAB  1D03               	skipz
  4919  0DAC  2DBC               	goto	i1l3257
  4920                           
  4921                           ;main.c: 400: {
  4922                           ;main.c: 401: USART_WriteString("\n\rpwm = 1023\n\r");
  4923  0DAD  3075               	movlw	low (STR_10-__stringbase)
  4924  0DAE  00F1               	movwf	i1USART_WriteString@str
  4925  0DAF  3080               	movlw	128
  4926  0DB0  00F2               	movwf	i1USART_WriteString@str+1
  4927  0DB1  160A  118A  2197  120A  158A  	fcall	i1_USART_WriteString
  4928                           
  4929                           ;main.c: 402: setpointUI = 9000;
  4930  0DB6  3028               	movlw	40
  4931  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  4932  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  4933  0DB9  00ED               	movwf	_setpointUI^(0+128)
  4934  0DBA  3023               	movlw	35
  4935  0DBB  00EE               	movwf	(_setpointUI^(0+128)+1)
  4936  0DBC                     i1l3257:	
  4937                           
  4938                           ;main.c: 404: }
  4939                           ;main.c: 408: Fuzzy();
  4940  0DBC  120A  118A  2039  120A  158A  	fcall	_Fuzzy
  4941                           
  4942                           ;main.c: 409: tf = (setpointUI - 100);
  4943  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  4944  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  4945  0DC3  086D               	movf	_setpointUI^(0+128),w
  4946  0DC4  3E9C               	addlw	156
  4947  0DC5  00F8               	movwf	___lwtoft@c
  4948  0DC6  086E               	movf	(_setpointUI+1)^(0+128),w
  4949  0DC7  1803               	skipnc
  4950  0DC8  3E01               	addlw	1
  4951  0DC9  3EFF               	addlw	255
  4952  0DCA  00F9               	movwf	___lwtoft@c+1
  4953  0DCB  160A  118A  209F  120A  158A  	fcall	___lwtoft
  4954  0DD0  0878               	movf	?___lwtoft,w
  4955  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  4956  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  4957  0DD3  00E6               	movwf	_tf^(0+128)
  4958  0DD4  0879               	movf	?___lwtoft+1,w
  4959  0DD5  00E7               	movwf	(_tf+1)^(0+128)
  4960  0DD6  087A               	movf	?___lwtoft+2,w
  4961  0DD7  00E8               	movwf	(_tf+2)^(0+128)
  4962                           
  4963                           ;main.c: 411: PIR1bits.RCIF = 0;
  4964  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4965  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4966  0DDA  128C               	bcf	12,5	;volatile
  4967  0DDB                     i1l3263:	
  4968                           
  4969                           ;main.c: 412: }
  4970                           ;main.c: 415: if (PIR1bits.ADIF)
  4971  0DDB  1B0C               	btfsc	12,6	;volatile
  4972                           
  4973                           ;main.c: 416: {
  4974                           ;main.c: 420: PIR1bits.ADIF = 0;
  4975  0DDC  130C               	bcf	12,6	;volatile
  4976                           
  4977                           ;main.c: 421: }
  4978                           ;main.c: 425: if (INTCONbits.T0IF)
  4979  0DDD  1D0B               	btfss	11,2	;volatile
  4980  0DDE  2E38               	goto	i1l3289
  4981                           
  4982                           ;main.c: 426: {
  4983                           ;main.c: 428: TIMER0_Set(238);
  4984  0DDF  30EE               	movlw	238
  4985  0DE0  160A  118A  2039  120A  158A  	fcall	i1_TIMER0_Set
  4986                           
  4987                           ;main.c: 431: if (contagens_tm0 < 499)
  4988  0DE5  3001               	movlw	1
  4989  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  4990  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  4991  0DE8  025E               	subwf	(_contagens_tm0+1)^(0+128),w
  4992  0DE9  30F3               	movlw	243
  4993  0DEA  1903               	skipnz
  4994  0DEB  025D               	subwf	_contagens_tm0^(0+128),w
  4995  0DEC  1803               	skipnc
  4996  0DED  2DF8               	goto	i1l3275
  4997                           
  4998                           ;main.c: 432: {
  4999                           ;main.c: 434: contagens_tm0++;
  5000  0DEE  3001               	movlw	1
  5001  0DEF  07DD               	addwf	_contagens_tm0^(0+128),f
  5002  0DF0  1803               	skipnc
  5003  0DF1  0ADE               	incf	(_contagens_tm0+1)^(0+128),f
  5004  0DF2  3000               	movlw	0
  5005  0DF3  07DE               	addwf	(_contagens_tm0+1)^(0+128),f
  5006                           
  5007                           ;main.c: 437: PORTBbits.RB6 = 1;
  5008  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  5009  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  5010  0DF6  1706               	bsf	6,6	;volatile
  5011                           
  5012                           ;main.c: 438: }
  5013  0DF7  2E37               	goto	i1l3287
  5014  0DF8                     i1l3275:	
  5015                           
  5016                           ;main.c: 439: else
  5017                           ;main.c: 440: {
  5018                           ;main.c: 442: contagens_tm0 = 0;
  5019  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  5020  0DF9  1303               	bcf	3,6	;RP1=0, select bank1
  5021  0DFA  01DD               	clrf	_contagens_tm0^(0+128)
  5022  0DFB  01DE               	clrf	(_contagens_tm0+1)^(0+128)
  5023                           
  5024                           ;main.c: 445: pulsos = (TMR1H << 8) + TMR1L;
  5025  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0DFE  080F               	movf	15,w	;volatile
  5028  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  5029  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  5030  0E01  01E0               	clrf	(_pulsos+1)^(0+128)
  5031  0E02  07E0               	addwf	(_pulsos+1)^(0+128),f
  5032  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5034  0E05  080E               	movf	14,w	;volatile
  5035  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0E08  01DF               	clrf	_pulsos^(0+128)
  5038  0E09  07DF               	addwf	_pulsos^(0+128),f
  5039                           
  5040                           ;main.c: 446: rpm = ((pulsos / pas_cooler) * 120);
  5041  0E0A  086A               	movf	(_pas_cooler+1)^(0+128),w
  5042  0E0B  01F1               	clrf	i1___lwdiv@divisor+1
  5043  0E0C  07F1               	addwf	i1___lwdiv@divisor+1,f
  5044  0E0D  0869               	movf	_pas_cooler^(0+128),w
  5045  0E0E  01F0               	clrf	i1___lwdiv@divisor
  5046  0E0F  07F0               	addwf	i1___lwdiv@divisor,f
  5047  0E10  0860               	movf	(_pulsos+1)^(0+128),w
  5048  0E11  01F3               	clrf	i1___lwdiv@dividend+1
  5049  0E12  07F3               	addwf	i1___lwdiv@dividend+1,f
  5050  0E13  085F               	movf	_pulsos^(0+128),w
  5051  0E14  01F2               	clrf	i1___lwdiv@dividend
  5052  0E15  07F2               	addwf	i1___lwdiv@dividend,f
  5053  0E16  160A  118A  22E7  120A  158A  	fcall	i1___lwdiv
  5054  0E1B  0871               	movf	?i1___lwdiv+1,w
  5055  0E1C  01F9               	clrf	i1___wmul@multiplier+1
  5056  0E1D  07F9               	addwf	i1___wmul@multiplier+1,f
  5057  0E1E  0870               	movf	?i1___lwdiv,w
  5058  0E1F  01F8               	clrf	i1___wmul@multiplier
  5059  0E20  07F8               	addwf	i1___wmul@multiplier,f
  5060  0E21  3078               	movlw	120
  5061  0E22  00FA               	movwf	i1___wmul@multiplicand
  5062  0E23  3000               	movlw	0
  5063  0E24  00FB               	movwf	i1___wmul@multiplicand+1
  5064  0E25  160A  118A  21BA  120A  158A  	fcall	i1___wmul
  5065  0E2A  0879               	movf	?i1___wmul+1,w
  5066  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  5067  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  5068  0E2D  01E2               	clrf	(_rpm+1)^(0+128)
  5069  0E2E  07E2               	addwf	(_rpm+1)^(0+128),f
  5070  0E2F  0878               	movf	?i1___wmul,w
  5071  0E30  01E1               	clrf	_rpm^(0+128)
  5072  0E31  07E1               	addwf	_rpm^(0+128),f
  5073                           
  5074                           ;main.c: 449: TMR1L = 0x00;
  5075  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  5076  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  5077  0E34  018E               	clrf	14	;volatile
  5078                           
  5079                           ;main.c: 450: TMR1H = 0x00;
  5080  0E35  018F               	clrf	15	;volatile
  5081                           
  5082                           ;main.c: 453: PORTBbits.RB6 = 0;
  5083  0E36  1306               	bcf	6,6	;volatile
  5084  0E37                     i1l3287:	
  5085                           
  5086                           ;main.c: 454: }
  5087                           ;main.c: 457: INTCONbits.T0IF = 0;
  5088  0E37  110B               	bcf	11,2	;volatile
  5089  0E38                     i1l3289:	
  5090                           
  5091                           ;main.c: 458: }
  5092                           ;main.c: 461: if (PIR1bits.TMR1IF)
  5093  0E38  180C               	btfsc	12,0	;volatile
  5094                           
  5095                           ;main.c: 462: {
  5096                           ;main.c: 466: PIR1bits.TMR1IF = 0;
  5097  0E39  100C               	bcf	12,0	;volatile
  5098                           
  5099                           ;main.c: 467: }
  5100                           ;main.c: 470: if (PIR1bits.SSPIF)
  5101  0E3A  198C               	btfsc	12,3	;volatile
  5102                           
  5103                           ;main.c: 471: {
  5104                           ;main.c: 475: PIR1bits.SSPIF = 0;
  5105  0E3B  118C               	bcf	12,3	;volatile
  5106  0E3C                     i1l179:	
  5107  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  5109  0E3E  086C               	movf	??_ISR+3,w
  5110  0E3F  00FF               	movwf	127
  5111  0E40  086B               	movf	??_ISR+2,w
  5112  0E41  008A               	movwf	10
  5113  0E42  086A               	movf	??_ISR+1,w
  5114  0E43  0084               	movwf	4
  5115  0E44  0E69               	swapf	??_ISR^0,w
  5116  0E45  0083               	movwf	3
  5117  0E46  0EFE               	swapf	126,f
  5118  0E47  0E7E               	swapf	126,w
  5119  0E48  0009               	retfie
  5120  0E49                     __end_of_ISR:	
  5121                           
  5122                           	psect	intentry
  5123  0004                     __pintentry:	
  5124                           ;incstack = 0
  5125                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5126                           
  5127  0004                     interrupt_function:	
  5128  007E                     saved_w	set	btemp
  5129  0004  00FE               	movwf	btemp
  5130  0005  0E03               	swapf	3,w
  5131  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0008  00E9               	movwf	??_ISR
  5134  0009  0804               	movf	4,w
  5135  000A  00EA               	movwf	??_ISR+1
  5136  000B  080A               	movf	10,w
  5137  000C  00EB               	movwf	??_ISR+2
  5138  000D  087F               	movf	btemp+1,w
  5139  000E  00EC               	movwf	??_ISR+3
  5140  000F  120A  158A  2CB5   	ljmp	_ISR
  5141                           
  5142                           	psect	text23
  5143  11BA                     __ptext23:	
  5144 ;; *************** function i1___wmul *****************
  5145 ;; Defined at:
  5146 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  multiplier      2    8[COMMON] unsigned int 
  5149 ;;  multiplicand    2   10[COMMON] unsigned int 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  __wmul          2   12[COMMON] unsigned int 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    8[COMMON] unsigned int 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         4       0       0       0       0
  5162 ;;      Locals:         2       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0
  5164 ;;      Totals:         6       0       0       0       0
  5165 ;;Total ram usage:        6 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_ISR
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function i1___wmul
  5176  11BA                     i1___wmul:	
  5177                           
  5178                           ;incstack = 0
  5179                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5180  11BA  01FC               	clrf	i1___wmul@product
  5181  11BB  01FD               	clrf	i1___wmul@product+1
  5182  11BC                     i1l3171:	
  5183  11BC  1C78               	btfss	i1___wmul@multiplier,0
  5184  11BD  29C4               	goto	i1l595
  5185  11BE  087A               	movf	i1___wmul@multiplicand,w
  5186  11BF  07FC               	addwf	i1___wmul@product,f
  5187  11C0  1803               	skipnc
  5188  11C1  0AFD               	incf	i1___wmul@product+1,f
  5189  11C2  087B               	movf	i1___wmul@multiplicand+1,w
  5190  11C3  07FD               	addwf	i1___wmul@product+1,f
  5191  11C4                     i1l595:	
  5192  11C4  3001               	movlw	1
  5193  11C5                     u388_25:	
  5194  11C5  1003               	clrc
  5195  11C6  0DFA               	rlf	i1___wmul@multiplicand,f
  5196  11C7  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5197  11C8  3EFF               	addlw	-1
  5198  11C9  1D03               	skipz
  5199  11CA  29C5               	goto	u388_25
  5200  11CB  3001               	movlw	1
  5201  11CC                     u389_25:	
  5202  11CC  1003               	clrc
  5203  11CD  0CF9               	rrf	i1___wmul@multiplier+1,f
  5204  11CE  0CF8               	rrf	i1___wmul@multiplier,f
  5205  11CF  3EFF               	addlw	-1
  5206  11D0  1D03               	skipz
  5207  11D1  29CC               	goto	u389_25
  5208  11D2  0879               	movf	i1___wmul@multiplier+1,w
  5209  11D3  0478               	iorwf	i1___wmul@multiplier,w
  5210  11D4  1D03               	skipz
  5211  11D5  29BC               	goto	i1l3171
  5212  11D6  087D               	movf	i1___wmul@product+1,w
  5213  11D7  01F9               	clrf	?i1___wmul+1
  5214  11D8  07F9               	addwf	?i1___wmul+1,f
  5215  11D9  087C               	movf	i1___wmul@product,w
  5216  11DA  01F8               	clrf	?i1___wmul
  5217  11DB  07F8               	addwf	?i1___wmul,f
  5218  11DC  0008               	return
  5219  11DD                     __end_ofi1___wmul:	
  5220                           
  5221                           	psect	text24
  5222  1039                     __ptext24:	
  5223 ;; *************** function i1_TIMER0_Set *****************
  5224 ;; Defined at:
  5225 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  contagens       1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  contagens       1    0[COMMON] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         0       0       0       0       0
  5240 ;;      Locals:         1       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0
  5242 ;;      Totals:         1       0       0       0       0
  5243 ;;Total ram usage:        1 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_ISR
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           
  5253                           ;psect for function i1_TIMER0_Set
  5254  1039                     i1_TIMER0_Set:	
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in i1_TIMER0_Set: [wreg]
  5258                           ;i1TIMER0_Set@contagens stored from wreg
  5259  1039  00F0               	movwf	i1TIMER0_Set@contagens
  5260                           
  5261                           ;timers.c: 22: TMR0 = contagens;
  5262  103A  0870               	movf	i1TIMER0_Set@contagens,w
  5263  103B  1283               	bcf	3,5	;RP0=0, select bank0
  5264  103C  1303               	bcf	3,6	;RP1=0, select bank0
  5265  103D  0081               	movwf	1	;volatile
  5266  103E  0008               	return
  5267  103F                     __end_ofi1_TIMER0_Set:	
  5268                           
  5269                           	psect	text25
  5270  10FC                     __ptext25:	
  5271 ;; *************** function _USART_ReceiveChar *****************
  5272 ;; Defined at:
  5273 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  byte            1    4[COMMON] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      unsigned char 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         1       0       0       0       0
  5289 ;;      Temps:          1       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    2
  5294 ;; This function calls:
  5295 ;;		i1_USART_WriteString
  5296 ;; This function is called by:
  5297 ;;		_ISR
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _USART_ReceiveChar
  5303  10FC                     _USART_ReceiveChar:	
  5304                           
  5305                           ;usart.c: 65: unsigned char byte;
  5306                           ;usart.c: 67: if (!OERR)
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5310  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  5311  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  5312  10FE  1898               	btfsc	24,1	;volatile
  5313  10FF  2905               	goto	i1l2901
  5314                           
  5315                           ;usart.c: 68: {
  5316                           ;usart.c: 69: byte = RCREG;
  5317  1100  081A               	movf	26,w	;volatile
  5318  1101  00F3               	movwf	??_USART_ReceiveChar
  5319  1102  0873               	movf	??_USART_ReceiveChar,w
  5320  1103  00F4               	movwf	USART_ReceiveChar@byte
  5321  1104  2914               	goto	i1l2909
  5322  1105                     i1l2901:	
  5323                           ;usart.c: 71: }
  5324                           
  5325                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5326                           
  5327                           
  5328                           ;usart.c: 72: else
  5329                           ;usart.c: 73: {
  5330                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5331  1105  300B               	movlw	low (STR_19-__stringbase)
  5332  1106  00F1               	movwf	i1USART_WriteString@str
  5333  1107  3080               	movlw	128
  5334  1108  00F2               	movwf	i1USART_WriteString@str+1
  5335  1109  160A  118A  2197   	fcall	i1_USART_WriteString
  5336                           
  5337                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5338  110C  1283               	bcf	3,5	;RP0=0, select bank0
  5339  110D  1303               	bcf	3,6	;RP1=0, select bank0
  5340  110E  1218               	bcf	24,4	;volatile
  5341                           
  5342                           ;usart.c: 77: byte = RCREG;
  5343  110F  081A               	movf	26,w	;volatile
  5344  1110  00F3               	movwf	??_USART_ReceiveChar
  5345  1111  0873               	movf	??_USART_ReceiveChar,w
  5346  1112  00F4               	movwf	USART_ReceiveChar@byte
  5347                           
  5348                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5349  1113  1618               	bsf	24,4	;volatile
  5350  1114                     i1l2909:	
  5351                           
  5352                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5353  1114  128C               	bcf	12,5	;volatile
  5354                           
  5355                           ;usart.c: 80: }
  5356                           ;usart.c: 82: return(byte);
  5357  1115  0874               	movf	USART_ReceiveChar@byte,w
  5358  1116  0008               	return
  5359  1117                     __end_of_USART_ReceiveChar:	
  5360                           
  5361                           	psect	text26
  5362  1197                     __ptext26:	
  5363 ;; *************** function i1_USART_WriteString *****************
  5364 ;; Defined at:
  5365 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  str             2    1[COMMON] PTR const unsigned char 
  5368 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5369 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5370 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5371 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5383 ;;      Params:         2       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0
  5386 ;;      Totals:         2       0       0       0       0
  5387 ;;Total ram usage:        2 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    1
  5390 ;; This function calls:
  5391 ;;		i1_USART_WriteChar
  5392 ;; This function is called by:
  5393 ;;		_ISR
  5394 ;;		_USART_ReceiveChar
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function i1_USART_WriteString
  5400  1197                     i1_USART_WriteString:	
  5401  1197                     i1l2723:	
  5402                           ;usart.c: 54: while(*str != '\0')
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5406                           
  5407  1197  0872               	movf	i1USART_WriteString@str+1,w
  5408  1198  1283               	bcf	3,5	;RP0=0, select bank0
  5409  1199  1303               	bcf	3,6	;RP1=0, select bank0
  5410  119A  00FF               	movwf	127
  5411  119B  0871               	movf	i1USART_WriteString@str,w
  5412  119C  0084               	movwf	4
  5413  119D  120A  158A  2000  160A  118A  	fcall	stringtab
  5414  11A2  3800               	iorlw	0
  5415  11A3  1903               	btfsc	3,2
  5416  11A4  0008               	return
  5417                           
  5418                           ;usart.c: 55: {
  5419                           ;usart.c: 56: USART_WriteChar(*str);
  5420  11A5  0872               	movf	i1USART_WriteString@str+1,w
  5421  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  5422  11A7  1303               	bcf	3,6	;RP1=0, select bank0
  5423  11A8  00FF               	movwf	127
  5424  11A9  0871               	movf	i1USART_WriteString@str,w
  5425  11AA  0084               	movwf	4
  5426  11AB  120A  158A  2000  160A  118A  	fcall	stringtab
  5427  11B0  160A  118A  203F  160A  118A  	fcall	i1_USART_WriteChar
  5428                           
  5429                           ;usart.c: 57: str++;
  5430  11B5  3001               	movlw	1
  5431  11B6  07F1               	addwf	i1USART_WriteString@str,f
  5432  11B7  1803               	skipnc
  5433  11B8  0AF2               	incf	i1USART_WriteString@str+1,f
  5434  11B9  2997               	goto	i1l2723
  5435  11BA                     __end_ofi1_USART_WriteString:	
  5436                           
  5437                           	psect	text27
  5438  103F                     __ptext27:	
  5439 ;; *************** function i1_USART_WriteChar *****************
  5440 ;; Defined at:
  5441 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  byte            1    wreg     unsigned char 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  byte            1    0[COMMON] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;		None               void
  5448 ;; Registers used:
  5449 ;;		wreg
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       0       0       0       0
  5456 ;;      Locals:         1       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         1       0       0       0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		i1_USART_WriteString
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           
  5469                           ;psect for function i1_USART_WriteChar
  5470  103F                     i1_USART_WriteChar:	
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in i1_USART_WriteChar: [wreg]
  5474                           ;i1USART_WriteChar@byte stored from wreg
  5475  103F  00F0               	movwf	i1USART_WriteChar@byte
  5476  1040                     i1l224:	
  5477                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5478                           
  5479  1040  1283               	bcf	3,5	;RP0=0, select bank0
  5480  1041  1303               	bcf	3,6	;RP1=0, select bank0
  5481  1042  1E0C               	btfss	12,4	;volatile
  5482  1043  2840               	goto	i1l224
  5483                           
  5484                           ;usart.c: 47: TXREG = byte;
  5485  1044  0870               	movf	i1USART_WriteChar@byte,w
  5486  1045  0099               	movwf	25	;volatile
  5487  1046  0008               	return
  5488  1047                     __end_ofi1_USART_WriteChar:	
  5489                           
  5490                           	psect	text28
  5491  0039                     __ptext28:	
  5492 ;; *************** function _Fuzzy *****************
  5493 ;; Defined at:
  5494 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  a               2   59[BANK0 ] int 
  5499 ;;  a               2   57[BANK0 ] int 
  5500 ;;  a               2   55[BANK0 ] int 
  5501 ;;  deltaRpm        3   70[BANK0 ] float 
  5502 ;;  aumenta         3   67[BANK0 ] float 
  5503 ;;  reduz           3   64[BANK0 ] float 
  5504 ;;  mantem          3   61[BANK0 ] float 
  5505 ;;  tip             3   52[BANK0 ] float 
  5506 ;;  freio           2   50[BANK0 ] unsigned int 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;		None               void
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5516 ;;      Params:         0       0       0       0       0
  5517 ;;      Locals:         0      23       0       0       0
  5518 ;;      Temps:          0       0       0       0       0
  5519 ;;      Totals:         0      23       0       0       0
  5520 ;;Total ram usage:       23 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    3
  5523 ;; This function calls:
  5524 ;;		___ftadd
  5525 ;;		___ftdiv
  5526 ;;		___ftge
  5527 ;;		___ftmul
  5528 ;;		___ftneg
  5529 ;;		___fttol
  5530 ;;		___lwtoft
  5531 ;;		_max_val
  5532 ;;		_trapmf
  5533 ;;		_trimf
  5534 ;;		i1_PWM_DutyCycle2
  5535 ;;		i1___lwdiv
  5536 ;; This function is called by:
  5537 ;;		_ISR
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _Fuzzy
  5543  0039                     _Fuzzy:	
  5544                           
  5545                           ;main.c: 140: setpoint = (float)setpointUI;
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5549  0039  1683               	bsf	3,5	;RP0=1, select bank1
  5550  003A  1303               	bcf	3,6	;RP1=0, select bank1
  5551  003B  086E               	movf	(_setpointUI+1)^(0+128),w
  5552  003C  01F9               	clrf	___lwtoft@c+1
  5553  003D  07F9               	addwf	___lwtoft@c+1,f
  5554  003E  086D               	movf	_setpointUI^(0+128),w
  5555  003F  01F8               	clrf	___lwtoft@c
  5556  0040  07F8               	addwf	___lwtoft@c,f
  5557  0041  160A  118A  209F  120A  118A  	fcall	___lwtoft
  5558  0046  0878               	movf	?___lwtoft,w
  5559  0047  1683               	bsf	3,5	;RP0=1, select bank1
  5560  0048  1303               	bcf	3,6	;RP1=0, select bank1
  5561  0049  00E3               	movwf	_setpoint^(0+128)
  5562  004A  0879               	movf	?___lwtoft+1,w
  5563  004B  00E4               	movwf	(_setpoint+1)^(0+128)
  5564  004C  087A               	movf	?___lwtoft+2,w
  5565  004D  00E5               	movwf	(_setpoint+2)^(0+128)
  5566                           
  5567                           ;main.c: 141: float deltaRpm = 0;
  5568  004E  3000               	movlw	0
  5569  004F  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0050  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0051  00E6               	movwf	Fuzzy@deltaRpm
  5572  0052  3000               	movlw	0
  5573  0053  00E7               	movwf	Fuzzy@deltaRpm+1
  5574  0054  3000               	movlw	0
  5575  0055  00E8               	movwf	Fuzzy@deltaRpm+2
  5576                           
  5577                           ;main.c: 144: unsigned int freio = 0;
  5578  0056  01D2               	clrf	Fuzzy@freio
  5579  0057  01D3               	clrf	Fuzzy@freio+1
  5580                           
  5581                           ;main.c: 150: float mantem = 0;
  5582  0058  3000               	movlw	0
  5583  0059  00DD               	movwf	Fuzzy@mantem
  5584  005A  3000               	movlw	0
  5585  005B  00DE               	movwf	Fuzzy@mantem+1
  5586  005C  3000               	movlw	0
  5587  005D  00DF               	movwf	Fuzzy@mantem+2
  5588                           
  5589                           ;main.c: 151: float reduz = 0;
  5590  005E  3000               	movlw	0
  5591  005F  00E0               	movwf	Fuzzy@reduz
  5592  0060  3000               	movlw	0
  5593  0061  00E1               	movwf	Fuzzy@reduz+1
  5594  0062  3000               	movlw	0
  5595  0063  00E2               	movwf	Fuzzy@reduz+2
  5596                           
  5597                           ;main.c: 152: float aumenta = 0;
  5598  0064  3000               	movlw	0
  5599  0065  00E3               	movwf	Fuzzy@aumenta
  5600  0066  3000               	movlw	0
  5601  0067  00E4               	movwf	Fuzzy@aumenta+1
  5602  0068  3000               	movlw	0
  5603  0069  00E5               	movwf	Fuzzy@aumenta+2
  5604                           
  5605                           ;main.c: 153: float tip;
  5606                           ;main.c: 154: fitemp = 0;
  5607  006A  3000               	movlw	0
  5608  006B  1683               	bsf	3,5	;RP0=1, select bank1
  5609  006C  1303               	bcf	3,6	;RP1=0, select bank1
  5610  006D  00C5               	movwf	_fitemp^(0+128)
  5611  006E  3000               	movlw	0
  5612  006F  00C6               	movwf	(_fitemp+1)^(0+128)
  5613  0070  3000               	movlw	0
  5614  0071  00C7               	movwf	(_fitemp+2)^(0+128)
  5615                           
  5616                           ;main.c: 157: deltaRpm = (setpoint - tf);
  5617  0072  0863               	movf	_setpoint^(0+128),w
  5618  0073  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0074  1303               	bcf	3,6	;RP1=0, select bank0
  5620  0075  00A3               	movwf	___ftadd@f1
  5621  0076  1683               	bsf	3,5	;RP0=1, select bank1
  5622  0077  1303               	bcf	3,6	;RP1=0, select bank1
  5623  0078  0864               	movf	(_setpoint+1)^(0+128),w
  5624  0079  1283               	bcf	3,5	;RP0=0, select bank0
  5625  007A  1303               	bcf	3,6	;RP1=0, select bank0
  5626  007B  00A4               	movwf	___ftadd@f1+1
  5627  007C  1683               	bsf	3,5	;RP0=1, select bank1
  5628  007D  1303               	bcf	3,6	;RP1=0, select bank1
  5629  007E  0865               	movf	(_setpoint+2)^(0+128),w
  5630  007F  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0080  1303               	bcf	3,6	;RP1=0, select bank0
  5632  0081  00A5               	movwf	___ftadd@f1+2
  5633  0082  1683               	bsf	3,5	;RP0=1, select bank1
  5634  0083  1303               	bcf	3,6	;RP1=0, select bank1
  5635  0084  0866               	movf	_tf^(0+128),w
  5636  0085  1283               	bcf	3,5	;RP0=0, select bank0
  5637  0086  1303               	bcf	3,6	;RP1=0, select bank0
  5638  0087  00A0               	movwf	___ftneg@f1
  5639  0088  1683               	bsf	3,5	;RP0=1, select bank1
  5640  0089  1303               	bcf	3,6	;RP1=0, select bank1
  5641  008A  0867               	movf	(_tf+1)^(0+128),w
  5642  008B  1283               	bcf	3,5	;RP0=0, select bank0
  5643  008C  1303               	bcf	3,6	;RP1=0, select bank0
  5644  008D  00A1               	movwf	___ftneg@f1+1
  5645  008E  1683               	bsf	3,5	;RP0=1, select bank1
  5646  008F  1303               	bcf	3,6	;RP1=0, select bank1
  5647  0090  0868               	movf	(_tf+2)^(0+128),w
  5648  0091  1283               	bcf	3,5	;RP0=0, select bank0
  5649  0092  1303               	bcf	3,6	;RP1=0, select bank0
  5650  0093  00A2               	movwf	___ftneg@f1+2
  5651  0094  160A  118A  2057  120A  118A  	fcall	___ftneg
  5652  0099  1283               	bcf	3,5	;RP0=0, select bank0
  5653  009A  1303               	bcf	3,6	;RP1=0, select bank0
  5654  009B  0820               	movf	?___ftneg,w
  5655  009C  00A6               	movwf	___ftadd@f2
  5656  009D  0821               	movf	?___ftneg+1,w
  5657  009E  00A7               	movwf	___ftadd@f2+1
  5658  009F  0822               	movf	?___ftneg+2,w
  5659  00A0  00A8               	movwf	___ftadd@f2+2
  5660  00A1  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5661  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  5662  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  5663  00A8  0823               	movf	?___ftadd,w
  5664  00A9  00E6               	movwf	Fuzzy@deltaRpm
  5665  00AA  0824               	movf	?___ftadd+1,w
  5666  00AB  00E7               	movwf	Fuzzy@deltaRpm+1
  5667  00AC  0825               	movf	?___ftadd+2,w
  5668  00AD  00E8               	movwf	Fuzzy@deltaRpm+2
  5669                           
  5670                           ;main.c: 158: deltaRpm = (deltaRpm/100);
  5671  00AE  3000               	movlw	0
  5672  00AF  00B0               	movwf	___ftdiv@f2
  5673  00B0  30C8               	movlw	200
  5674  00B1  00B1               	movwf	___ftdiv@f2+1
  5675  00B2  3042               	movlw	66
  5676  00B3  00B2               	movwf	___ftdiv@f2+2
  5677  00B4  0866               	movf	Fuzzy@deltaRpm,w
  5678  00B5  00B3               	movwf	___ftdiv@f1
  5679  00B6  0867               	movf	Fuzzy@deltaRpm+1,w
  5680  00B7  00B4               	movwf	___ftdiv@f1+1
  5681  00B8  0868               	movf	Fuzzy@deltaRpm+2,w
  5682  00B9  00B5               	movwf	___ftdiv@f1+2
  5683  00BA  160A  118A  256E  120A  118A  	fcall	___ftdiv
  5684  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5685  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5686  00C1  0830               	movf	?___ftdiv,w
  5687  00C2  00E6               	movwf	Fuzzy@deltaRpm
  5688  00C3  0831               	movf	?___ftdiv+1,w
  5689  00C4  00E7               	movwf	Fuzzy@deltaRpm+1
  5690  00C5  0832               	movf	?___ftdiv+2,w
  5691  00C6  00E8               	movwf	Fuzzy@deltaRpm+2
  5692                           
  5693                           ;main.c: 162: if (deltaRpm <0)
  5694  00C7  0866               	movf	Fuzzy@deltaRpm,w
  5695  00C8  00B0               	movwf	___ftge@ff1
  5696  00C9  0867               	movf	Fuzzy@deltaRpm+1,w
  5697  00CA  00B1               	movwf	___ftge@ff1+1
  5698  00CB  0868               	movf	Fuzzy@deltaRpm+2,w
  5699  00CC  00B2               	movwf	___ftge@ff1+2
  5700  00CD  3000               	movlw	0
  5701  00CE  00B3               	movwf	___ftge@ff2
  5702  00CF  3000               	movlw	0
  5703  00D0  00B4               	movwf	___ftge@ff2+1
  5704  00D1  3000               	movlw	0
  5705  00D2  00B5               	movwf	___ftge@ff2+2
  5706  00D3  160A  118A  23AE  120A  118A  	fcall	___ftge
  5707  00D8  1803               	btfsc	3,0
  5708  00D9  28F9               	goto	i1l2779
  5709                           
  5710                           ;main.c: 163: {
  5711                           ;main.c: 164: deltaRpm = deltaRpm*-1;
  5712  00DA  3000               	movlw	0
  5713  00DB  00F8               	movwf	___ftmul@f1
  5714  00DC  3080               	movlw	128
  5715  00DD  00F9               	movwf	___ftmul@f1+1
  5716  00DE  30BF               	movlw	191
  5717  00DF  00FA               	movwf	___ftmul@f1+2
  5718  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5719  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5720  00E2  0866               	movf	Fuzzy@deltaRpm,w
  5721  00E3  00FB               	movwf	___ftmul@f2
  5722  00E4  0867               	movf	Fuzzy@deltaRpm+1,w
  5723  00E5  00FC               	movwf	___ftmul@f2+1
  5724  00E6  0868               	movf	Fuzzy@deltaRpm+2,w
  5725  00E7  00FD               	movwf	___ftmul@f2+2
  5726  00E8  160A  118A  2626  120A  118A  	fcall	___ftmul
  5727  00ED  0878               	movf	?___ftmul,w
  5728  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5729  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  5730  00F0  00E6               	movwf	Fuzzy@deltaRpm
  5731  00F1  0879               	movf	?___ftmul+1,w
  5732  00F2  00E7               	movwf	Fuzzy@deltaRpm+1
  5733  00F3  087A               	movf	?___ftmul+2,w
  5734  00F4  00E8               	movwf	Fuzzy@deltaRpm+2
  5735                           
  5736                           ;main.c: 165: freio = 1;
  5737  00F5  3001               	movlw	1
  5738  00F6  00D2               	movwf	Fuzzy@freio
  5739  00F7  3000               	movlw	0
  5740  00F8  00D3               	movwf	Fuzzy@freio+1
  5741  00F9                     i1l2779:	
  5742                           
  5743                           ;main.c: 166: }
  5744                           ;main.c: 168: if (deltaRpm >90) deltaRpm = 90;
  5745  00F9  3000               	movlw	0
  5746  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  5747  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  5748  00FC  00B0               	movwf	___ftge@ff1
  5749  00FD  30B4               	movlw	180
  5750  00FE  00B1               	movwf	___ftge@ff1+1
  5751  00FF  3042               	movlw	66
  5752  0100  00B2               	movwf	___ftge@ff1+2
  5753  0101  0866               	movf	Fuzzy@deltaRpm,w
  5754  0102  00B3               	movwf	___ftge@ff2
  5755  0103  0867               	movf	Fuzzy@deltaRpm+1,w
  5756  0104  00B4               	movwf	___ftge@ff2+1
  5757  0105  0868               	movf	Fuzzy@deltaRpm+2,w
  5758  0106  00B5               	movwf	___ftge@ff2+2
  5759  0107  160A  118A  23AE  120A  118A  	fcall	___ftge
  5760  010C  1803               	btfsc	3,0
  5761  010D  2916               	goto	i1l2783
  5762  010E  3000               	movlw	0
  5763  010F  1283               	bcf	3,5	;RP0=0, select bank0
  5764  0110  1303               	bcf	3,6	;RP1=0, select bank0
  5765  0111  00E6               	movwf	Fuzzy@deltaRpm
  5766  0112  30B4               	movlw	180
  5767  0113  00E7               	movwf	Fuzzy@deltaRpm+1
  5768  0114  3042               	movlw	66
  5769  0115  00E8               	movwf	Fuzzy@deltaRpm+2
  5770  0116                     i1l2783:	
  5771                           
  5772                           ;main.c: 171: if (deltaRpm < 25)
  5773  0116  1283               	bcf	3,5	;RP0=0, select bank0
  5774  0117  1303               	bcf	3,6	;RP1=0, select bank0
  5775  0118  0866               	movf	Fuzzy@deltaRpm,w
  5776  0119  00B0               	movwf	___ftge@ff1
  5777  011A  0867               	movf	Fuzzy@deltaRpm+1,w
  5778  011B  00B1               	movwf	___ftge@ff1+1
  5779  011C  0868               	movf	Fuzzy@deltaRpm+2,w
  5780  011D  00B2               	movwf	___ftge@ff1+2
  5781  011E  3000               	movlw	0
  5782  011F  00B3               	movwf	___ftge@ff2
  5783  0120  30C8               	movlw	200
  5784  0121  00B4               	movwf	___ftge@ff2+1
  5785  0122  3041               	movlw	65
  5786  0123  00B5               	movwf	___ftge@ff2+2
  5787  0124  160A  118A  23AE  120A  118A  	fcall	___ftge
  5788  0129  1803               	btfsc	3,0
  5789  012A  2A8B               	goto	i1l2807
  5790                           
  5791                           ;main.c: 172: {
  5792                           ;main.c: 176: fitemp = trapmf(deltaRpm, 0,0,13,32);
  5793  012B  1283               	bcf	3,5	;RP0=0, select bank0
  5794  012C  1303               	bcf	3,6	;RP1=0, select bank0
  5795  012D  0866               	movf	Fuzzy@deltaRpm,w
  5796  012E  00C0               	movwf	trapmf@x
  5797  012F  0867               	movf	Fuzzy@deltaRpm+1,w
  5798  0130  00C1               	movwf	trapmf@x+1
  5799  0131  0868               	movf	Fuzzy@deltaRpm+2,w
  5800  0132  00C2               	movwf	trapmf@x+2
  5801  0133  3000               	movlw	0
  5802  0134  00C3               	movwf	trapmf@a
  5803  0135  3000               	movlw	0
  5804  0136  00C4               	movwf	trapmf@a+1
  5805  0137  3000               	movlw	0
  5806  0138  00C5               	movwf	trapmf@a+2
  5807  0139  3000               	movlw	0
  5808  013A  00C6               	movwf	trapmf@b
  5809  013B  3000               	movlw	0
  5810  013C  00C7               	movwf	trapmf@b+1
  5811  013D  3000               	movlw	0
  5812  013E  00C8               	movwf	trapmf@b+2
  5813  013F  3000               	movlw	0
  5814  0140  00C9               	movwf	trapmf@c
  5815  0141  3050               	movlw	80
  5816  0142  00CA               	movwf	trapmf@c+1
  5817  0143  3041               	movlw	65
  5818  0144  00CB               	movwf	trapmf@c+2
  5819  0145  3000               	movlw	0
  5820  0146  00CC               	movwf	trapmf@d
  5821  0147  3000               	movlw	0
  5822  0148  00CD               	movwf	trapmf@d+1
  5823  0149  3042               	movlw	66
  5824  014A  00CE               	movwf	trapmf@d+2
  5825  014B  120A  158A  235F  120A  118A  	fcall	_trapmf
  5826  0150  1283               	bcf	3,5	;RP0=0, select bank0
  5827  0151  1303               	bcf	3,6	;RP1=0, select bank0
  5828  0152  0840               	movf	?_trapmf,w
  5829  0153  1683               	bsf	3,5	;RP0=1, select bank1
  5830  0154  1303               	bcf	3,6	;RP1=0, select bank1
  5831  0155  00C5               	movwf	_fitemp^(0+128)
  5832  0156  1283               	bcf	3,5	;RP0=0, select bank0
  5833  0157  1303               	bcf	3,6	;RP1=0, select bank0
  5834  0158  0841               	movf	?_trapmf+1,w
  5835  0159  1683               	bsf	3,5	;RP0=1, select bank1
  5836  015A  1303               	bcf	3,6	;RP1=0, select bank1
  5837  015B  00C6               	movwf	(_fitemp+1)^(0+128)
  5838  015C  1283               	bcf	3,5	;RP0=0, select bank0
  5839  015D  1303               	bcf	3,6	;RP1=0, select bank0
  5840  015E  0842               	movf	?_trapmf+2,w
  5841  015F  1683               	bsf	3,5	;RP0=1, select bank1
  5842  0160  1303               	bcf	3,6	;RP1=0, select bank1
  5843  0161  00C7               	movwf	(_fitemp+2)^(0+128)
  5844                           
  5845                           ;main.c: 179: fop_rule1 = max_val(fitemp,0.1);
  5846  0162  0845               	movf	_fitemp^(0+128),w
  5847  0163  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0164  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0165  00BC               	movwf	max_val@a
  5850  0166  1683               	bsf	3,5	;RP0=1, select bank1
  5851  0167  1303               	bcf	3,6	;RP1=0, select bank1
  5852  0168  0846               	movf	(_fitemp+1)^(0+128),w
  5853  0169  1283               	bcf	3,5	;RP0=0, select bank0
  5854  016A  1303               	bcf	3,6	;RP1=0, select bank0
  5855  016B  00BD               	movwf	max_val@a+1
  5856  016C  1683               	bsf	3,5	;RP0=1, select bank1
  5857  016D  1303               	bcf	3,6	;RP1=0, select bank1
  5858  016E  0847               	movf	(_fitemp+2)^(0+128),w
  5859  016F  1283               	bcf	3,5	;RP0=0, select bank0
  5860  0170  1303               	bcf	3,6	;RP1=0, select bank0
  5861  0171  00BE               	movwf	max_val@a+2
  5862  0172  30CD               	movlw	205
  5863  0173  00BF               	movwf	max_val@b
  5864  0174  30CC               	movlw	204
  5865  0175  00C0               	movwf	max_val@b+1
  5866  0176  303D               	movlw	61
  5867  0177  00C1               	movwf	max_val@b+2
  5868  0178  160A  118A  2117  120A  118A  	fcall	_max_val
  5869  017D  1283               	bcf	3,5	;RP0=0, select bank0
  5870  017E  1303               	bcf	3,6	;RP1=0, select bank0
  5871  017F  083C               	movf	?_max_val,w
  5872  0180  1683               	bsf	3,5	;RP0=1, select bank1
  5873  0181  1303               	bcf	3,6	;RP1=0, select bank1
  5874  0182  00C8               	movwf	_fop_rule1^(0+128)
  5875  0183  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0184  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0185  083D               	movf	?_max_val+1,w
  5878  0186  1683               	bsf	3,5	;RP0=1, select bank1
  5879  0187  1303               	bcf	3,6	;RP1=0, select bank1
  5880  0188  00C9               	movwf	(_fop_rule1+1)^(0+128)
  5881  0189  1283               	bcf	3,5	;RP0=0, select bank0
  5882  018A  1303               	bcf	3,6	;RP1=0, select bank0
  5883  018B  083E               	movf	?_max_val+2,w
  5884  018C  1683               	bsf	3,5	;RP0=1, select bank1
  5885  018D  1303               	bcf	3,6	;RP1=0, select bank1
  5886  018E  00CA               	movwf	(_fop_rule1+2)^(0+128)
  5887                           
  5888                           ;main.c: 182: x=0;
  5889  018F  3000               	movlw	0
  5890  0190  00D7               	movwf	_x^(0+128)
  5891  0191  3000               	movlw	0
  5892  0192  00D8               	movwf	(_x+1)^(0+128)
  5893  0193  3000               	movlw	0
  5894  0194  00D9               	movwf	(_x+2)^(0+128)
  5895                           
  5896                           ;main.c: 183: y=0;
  5897  0195  3000               	movlw	0
  5898  0196  00DA               	movwf	_y^(0+128)
  5899  0197  3000               	movlw	0
  5900  0198  00DB               	movwf	(_y+1)^(0+128)
  5901  0199  3000               	movlw	0
  5902  019A  00DC               	movwf	(_y+2)^(0+128)
  5903                           
  5904                           ;main.c: 184: for (int a=0; a<=90; a++)
  5905  019B  1283               	bcf	3,5	;RP0=0, select bank0
  5906  019C  1303               	bcf	3,6	;RP1=0, select bank0
  5907  019D  01D7               	clrf	Fuzzy@a
  5908  019E  01D8               	clrf	Fuzzy@a+1
  5909  019F  0858               	movf	Fuzzy@a+1,w
  5910  01A0  3A80               	xorlw	128
  5911  01A1  00FF               	movwf	127
  5912  01A2  3080               	movlw	128
  5913  01A3  027F               	subwf	127,w
  5914  01A4  1D03               	skipz
  5915  01A5  29A8               	goto	u342_25
  5916  01A6  305B               	movlw	91
  5917  01A7  0257               	subwf	Fuzzy@a,w
  5918  01A8                     u342_25:	
  5919  01A8  1803               	btfsc	3,0
  5920  01A9  2A8B               	goto	i1l2807
  5921  01AA                     i1l2797:	
  5922                           
  5923                           ;main.c: 185: {
  5924                           ;main.c: 186: y = trapmf(x,0,0,13,32);
  5925  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  5926  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  5927  01AC  0857               	movf	_x^(0+128),w
  5928  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  5929  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  5930  01AF  00C0               	movwf	trapmf@x
  5931  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  5932  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  5933  01B2  0858               	movf	(_x+1)^(0+128),w
  5934  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  5935  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  5936  01B5  00C1               	movwf	trapmf@x+1
  5937  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  5938  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  5939  01B8  0859               	movf	(_x+2)^(0+128),w
  5940  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  5941  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  5942  01BB  00C2               	movwf	trapmf@x+2
  5943  01BC  3000               	movlw	0
  5944  01BD  00C3               	movwf	trapmf@a
  5945  01BE  3000               	movlw	0
  5946  01BF  00C4               	movwf	trapmf@a+1
  5947  01C0  3000               	movlw	0
  5948  01C1  00C5               	movwf	trapmf@a+2
  5949  01C2  3000               	movlw	0
  5950  01C3  00C6               	movwf	trapmf@b
  5951  01C4  3000               	movlw	0
  5952  01C5  00C7               	movwf	trapmf@b+1
  5953  01C6  3000               	movlw	0
  5954  01C7  00C8               	movwf	trapmf@b+2
  5955  01C8  3000               	movlw	0
  5956  01C9  00C9               	movwf	trapmf@c
  5957  01CA  3050               	movlw	80
  5958  01CB  00CA               	movwf	trapmf@c+1
  5959  01CC  3041               	movlw	65
  5960  01CD  00CB               	movwf	trapmf@c+2
  5961  01CE  3000               	movlw	0
  5962  01CF  00CC               	movwf	trapmf@d
  5963  01D0  3000               	movlw	0
  5964  01D1  00CD               	movwf	trapmf@d+1
  5965  01D2  3042               	movlw	66
  5966  01D3  00CE               	movwf	trapmf@d+2
  5967  01D4  120A  158A  235F  120A  118A  	fcall	_trapmf
  5968  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  5969  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  5970  01DB  0840               	movf	?_trapmf,w
  5971  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  5972  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  5973  01DE  00DA               	movwf	_y^(0+128)
  5974  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  5975  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  5976  01E1  0841               	movf	?_trapmf+1,w
  5977  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  5978  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  5979  01E4  00DB               	movwf	(_y+1)^(0+128)
  5980  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  5981  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  5982  01E7  0842               	movf	?_trapmf+2,w
  5983  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  5984  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  5985  01EA  00DC               	movwf	(_y+2)^(0+128)
  5986                           
  5987                           ;main.c: 188: if (y > fop_rule1)
  5988  01EB  0848               	movf	_fop_rule1^(0+128),w
  5989  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  5990  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  5991  01EE  00B0               	movwf	___ftge@ff1
  5992  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  5993  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  5994  01F1  0849               	movf	(_fop_rule1+1)^(0+128),w
  5995  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  5996  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  5997  01F4  00B1               	movwf	___ftge@ff1+1
  5998  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  5999  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  6000  01F7  084A               	movf	(_fop_rule1+2)^(0+128),w
  6001  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  6002  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  6003  01FA  00B2               	movwf	___ftge@ff1+2
  6004  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  6005  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  6006  01FD  085A               	movf	_y^(0+128),w
  6007  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  6008  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0200  00B3               	movwf	___ftge@ff2
  6010  0201  1683               	bsf	3,5	;RP0=1, select bank1
  6011  0202  1303               	bcf	3,6	;RP1=0, select bank1
  6012  0203  085B               	movf	(_y+1)^(0+128),w
  6013  0204  1283               	bcf	3,5	;RP0=0, select bank0
  6014  0205  1303               	bcf	3,6	;RP1=0, select bank0
  6015  0206  00B4               	movwf	___ftge@ff2+1
  6016  0207  1683               	bsf	3,5	;RP0=1, select bank1
  6017  0208  1303               	bcf	3,6	;RP1=0, select bank1
  6018  0209  085C               	movf	(_y+2)^(0+128),w
  6019  020A  1283               	bcf	3,5	;RP0=0, select bank0
  6020  020B  1303               	bcf	3,6	;RP1=0, select bank0
  6021  020C  00B5               	movwf	___ftge@ff2+2
  6022  020D  160A  118A  23AE  120A  118A  	fcall	___ftge
  6023  0212  1803               	btfsc	3,0
  6024  0213  2A24               	goto	i1l2801
  6025                           
  6026                           ;main.c: 189: {
  6027                           ;main.c: 190: reduz += fop_rule1;
  6028  0214  1683               	bsf	3,5	;RP0=1, select bank1
  6029  0215  1303               	bcf	3,6	;RP1=0, select bank1
  6030  0216  0848               	movf	_fop_rule1^(0+128),w
  6031  0217  1283               	bcf	3,5	;RP0=0, select bank0
  6032  0218  1303               	bcf	3,6	;RP1=0, select bank0
  6033  0219  00A3               	movwf	___ftadd@f1
  6034  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6035  021B  1303               	bcf	3,6	;RP1=0, select bank1
  6036  021C  0849               	movf	(_fop_rule1+1)^(0+128),w
  6037  021D  1283               	bcf	3,5	;RP0=0, select bank0
  6038  021E  1303               	bcf	3,6	;RP1=0, select bank0
  6039  021F  00A4               	movwf	___ftadd@f1+1
  6040  0220  1683               	bsf	3,5	;RP0=1, select bank1
  6041  0221  1303               	bcf	3,6	;RP1=0, select bank1
  6042  0222  084A               	movf	(_fop_rule1+2)^(0+128),w
  6043  0223  2A33               	goto	L3
  6044  0224                     i1l2801:	
  6045                           ;main.c: 191: }
  6046                           
  6047                           
  6048                           ;main.c: 192: else
  6049                           ;main.c: 193: {
  6050                           ;main.c: 194: reduz += y;
  6051  0224  1683               	bsf	3,5	;RP0=1, select bank1
  6052  0225  1303               	bcf	3,6	;RP1=0, select bank1
  6053  0226  085A               	movf	_y^(0+128),w
  6054  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0228  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0229  00A3               	movwf	___ftadd@f1
  6057  022A  1683               	bsf	3,5	;RP0=1, select bank1
  6058  022B  1303               	bcf	3,6	;RP1=0, select bank1
  6059  022C  085B               	movf	(_y+1)^(0+128),w
  6060  022D  1283               	bcf	3,5	;RP0=0, select bank0
  6061  022E  1303               	bcf	3,6	;RP1=0, select bank0
  6062  022F  00A4               	movwf	___ftadd@f1+1
  6063  0230  1683               	bsf	3,5	;RP0=1, select bank1
  6064  0231  1303               	bcf	3,6	;RP1=0, select bank1
  6065  0232  085C               	movf	(_y+2)^(0+128),w
  6066  0233                     L3:	
  6067  0233  1283               	bcf	3,5	;RP0=0, select bank0
  6068  0234  1303               	bcf	3,6	;RP1=0, select bank0
  6069  0235  00A5               	movwf	___ftadd@f1+2
  6070  0236  0860               	movf	Fuzzy@reduz,w
  6071  0237  00A6               	movwf	___ftadd@f2
  6072  0238  0861               	movf	Fuzzy@reduz+1,w
  6073  0239  00A7               	movwf	___ftadd@f2+1
  6074  023A  0862               	movf	Fuzzy@reduz+2,w
  6075  023B  00A8               	movwf	___ftadd@f2+2
  6076  023C  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6077  0241  1283               	bcf	3,5	;RP0=0, select bank0
  6078  0242  1303               	bcf	3,6	;RP1=0, select bank0
  6079  0243  0823               	movf	?___ftadd,w
  6080  0244  00E0               	movwf	Fuzzy@reduz
  6081  0245  0824               	movf	?___ftadd+1,w
  6082  0246  00E1               	movwf	Fuzzy@reduz+1
  6083  0247  0825               	movf	?___ftadd+2,w
  6084  0248  00E2               	movwf	Fuzzy@reduz+2
  6085                           
  6086                           ;main.c: 195: }
  6087                           ;main.c: 197: x=x+1;
  6088  0249  3000               	movlw	0
  6089  024A  00A3               	movwf	___ftadd@f1
  6090  024B  3080               	movlw	128
  6091  024C  00A4               	movwf	___ftadd@f1+1
  6092  024D  303F               	movlw	63
  6093  024E  00A5               	movwf	___ftadd@f1+2
  6094  024F  1683               	bsf	3,5	;RP0=1, select bank1
  6095  0250  1303               	bcf	3,6	;RP1=0, select bank1
  6096  0251  0857               	movf	_x^(0+128),w
  6097  0252  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0253  1303               	bcf	3,6	;RP1=0, select bank0
  6099  0254  00A6               	movwf	___ftadd@f2
  6100  0255  1683               	bsf	3,5	;RP0=1, select bank1
  6101  0256  1303               	bcf	3,6	;RP1=0, select bank1
  6102  0257  0858               	movf	(_x+1)^(0+128),w
  6103  0258  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0259  1303               	bcf	3,6	;RP1=0, select bank0
  6105  025A  00A7               	movwf	___ftadd@f2+1
  6106  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6107  025C  1303               	bcf	3,6	;RP1=0, select bank1
  6108  025D  0859               	movf	(_x+2)^(0+128),w
  6109  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6110  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6111  0260  00A8               	movwf	___ftadd@f2+2
  6112  0261  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6113  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0267  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0268  0823               	movf	?___ftadd,w
  6116  0269  1683               	bsf	3,5	;RP0=1, select bank1
  6117  026A  1303               	bcf	3,6	;RP1=0, select bank1
  6118  026B  00D7               	movwf	_x^(0+128)
  6119  026C  1283               	bcf	3,5	;RP0=0, select bank0
  6120  026D  1303               	bcf	3,6	;RP1=0, select bank0
  6121  026E  0824               	movf	?___ftadd+1,w
  6122  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6123  0270  1303               	bcf	3,6	;RP1=0, select bank1
  6124  0271  00D8               	movwf	(_x+1)^(0+128)
  6125  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6126  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6127  0274  0825               	movf	?___ftadd+2,w
  6128  0275  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0276  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0277  00D9               	movwf	(_x+2)^(0+128)
  6131  0278  3001               	movlw	1
  6132  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6133  027A  1303               	bcf	3,6	;RP1=0, select bank0
  6134  027B  07D7               	addwf	Fuzzy@a,f
  6135  027C  1803               	skipnc
  6136  027D  0AD8               	incf	Fuzzy@a+1,f
  6137  027E  3000               	movlw	0
  6138  027F  07D8               	addwf	Fuzzy@a+1,f
  6139  0280  0858               	movf	Fuzzy@a+1,w
  6140  0281  3A80               	xorlw	128
  6141  0282  00FF               	movwf	127
  6142  0283  3080               	movlw	128
  6143  0284  027F               	subwf	127,w
  6144  0285  1D03               	skipz
  6145  0286  2A89               	goto	u344_25
  6146  0287  305B               	movlw	91
  6147  0288  0257               	subwf	Fuzzy@a,w
  6148  0289                     u344_25:	
  6149  0289  1C03               	skipc
  6150  028A  29AA               	goto	i1l2797
  6151  028B                     i1l2807:	
  6152                           
  6153                           ;main.c: 198: }
  6154                           ;main.c: 200: }
  6155                           ;main.c: 206: if ((deltaRpm > 20) && (deltaRpm < 70))
  6156  028B  3000               	movlw	0
  6157  028C  1283               	bcf	3,5	;RP0=0, select bank0
  6158  028D  1303               	bcf	3,6	;RP1=0, select bank0
  6159  028E  00B0               	movwf	___ftge@ff1
  6160  028F  30A0               	movlw	160
  6161  0290  00B1               	movwf	___ftge@ff1+1
  6162  0291  3041               	movlw	65
  6163  0292  00B2               	movwf	___ftge@ff1+2
  6164  0293  0866               	movf	Fuzzy@deltaRpm,w
  6165  0294  00B3               	movwf	___ftge@ff2
  6166  0295  0867               	movf	Fuzzy@deltaRpm+1,w
  6167  0296  00B4               	movwf	___ftge@ff2+1
  6168  0297  0868               	movf	Fuzzy@deltaRpm+2,w
  6169  0298  00B5               	movwf	___ftge@ff2+2
  6170  0299  160A  118A  23AE  120A  118A  	fcall	___ftge
  6171  029E  1803               	btfsc	3,0
  6172  029F  2C09               	goto	i1l2833
  6173  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  6174  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  6175  02A2  0866               	movf	Fuzzy@deltaRpm,w
  6176  02A3  00B0               	movwf	___ftge@ff1
  6177  02A4  0867               	movf	Fuzzy@deltaRpm+1,w
  6178  02A5  00B1               	movwf	___ftge@ff1+1
  6179  02A6  0868               	movf	Fuzzy@deltaRpm+2,w
  6180  02A7  00B2               	movwf	___ftge@ff1+2
  6181  02A8  3000               	movlw	0
  6182  02A9  00B3               	movwf	___ftge@ff2
  6183  02AA  308C               	movlw	140
  6184  02AB  00B4               	movwf	___ftge@ff2+1
  6185  02AC  3042               	movlw	66
  6186  02AD  00B5               	movwf	___ftge@ff2+2
  6187  02AE  160A  118A  23AE  120A  118A  	fcall	___ftge
  6188  02B3  1803               	btfsc	3,0
  6189  02B4  2C09               	goto	i1l2833
  6190                           
  6191                           ;main.c: 207: {
  6192                           ;main.c: 210: fitemp = trimf(deltaRpm, 9, 45, 81);
  6193  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  6194  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  6195  02B7  0866               	movf	Fuzzy@deltaRpm,w
  6196  02B8  00C0               	movwf	trimf@x
  6197  02B9  0867               	movf	Fuzzy@deltaRpm+1,w
  6198  02BA  00C1               	movwf	trimf@x+1
  6199  02BB  0868               	movf	Fuzzy@deltaRpm+2,w
  6200  02BC  00C2               	movwf	trimf@x+2
  6201  02BD  3000               	movlw	0
  6202  02BE  00C3               	movwf	trimf@a
  6203  02BF  3010               	movlw	16
  6204  02C0  00C4               	movwf	trimf@a+1
  6205  02C1  3041               	movlw	65
  6206  02C2  00C5               	movwf	trimf@a+2
  6207  02C3  3000               	movlw	0
  6208  02C4  00C6               	movwf	trimf@b
  6209  02C5  3034               	movlw	52
  6210  02C6  00C7               	movwf	trimf@b+1
  6211  02C7  3042               	movlw	66
  6212  02C8  00C8               	movwf	trimf@b+2
  6213  02C9  3000               	movlw	0
  6214  02CA  00C9               	movwf	trimf@c
  6215  02CB  30A2               	movlw	162
  6216  02CC  00CA               	movwf	trimf@c+1
  6217  02CD  3042               	movlw	66
  6218  02CE  00CB               	movwf	trimf@c+2
  6219  02CF  120A  158A  20EA  120A  118A  	fcall	_trimf
  6220  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  6221  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  6222  02D6  0840               	movf	?_trimf,w
  6223  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  6224  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  6225  02D9  00C5               	movwf	_fitemp^(0+128)
  6226  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  6227  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  6228  02DC  0841               	movf	?_trimf+1,w
  6229  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  6230  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  6231  02DF  00C6               	movwf	(_fitemp+1)^(0+128)
  6232  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  6233  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  6234  02E2  0842               	movf	?_trimf+2,w
  6235  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  6236  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  6237  02E5  00C7               	movwf	(_fitemp+2)^(0+128)
  6238                           
  6239                           ;main.c: 213: fop_rule2 = max_val(fitemp,0.1);
  6240  02E6  0845               	movf	_fitemp^(0+128),w
  6241  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  6242  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  6243  02E9  00BC               	movwf	max_val@a
  6244  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  6245  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  6246  02EC  0846               	movf	(_fitemp+1)^(0+128),w
  6247  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  6248  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  6249  02EF  00BD               	movwf	max_val@a+1
  6250  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  6251  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  6252  02F2  0847               	movf	(_fitemp+2)^(0+128),w
  6253  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  6254  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  6255  02F5  00BE               	movwf	max_val@a+2
  6256  02F6  30CD               	movlw	205
  6257  02F7  00BF               	movwf	max_val@b
  6258  02F8  30CC               	movlw	204
  6259  02F9  00C0               	movwf	max_val@b+1
  6260  02FA  303D               	movlw	61
  6261  02FB  00C1               	movwf	max_val@b+2
  6262  02FC  160A  118A  2117  120A  118A  	fcall	_max_val
  6263  0301  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0302  1303               	bcf	3,6	;RP1=0, select bank0
  6265  0303  083C               	movf	?_max_val,w
  6266  0304  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0305  1303               	bcf	3,6	;RP1=0, select bank1
  6268  0306  00CB               	movwf	_fop_rule2^(0+128)
  6269  0307  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0308  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0309  083D               	movf	?_max_val+1,w
  6272  030A  1683               	bsf	3,5	;RP0=1, select bank1
  6273  030B  1303               	bcf	3,6	;RP1=0, select bank1
  6274  030C  00CC               	movwf	(_fop_rule2+1)^(0+128)
  6275  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6276  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6277  030F  083E               	movf	?_max_val+2,w
  6278  0310  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0311  1303               	bcf	3,6	;RP1=0, select bank1
  6280  0312  00CD               	movwf	(_fop_rule2+2)^(0+128)
  6281                           
  6282                           ;main.c: 216: x=0;
  6283  0313  3000               	movlw	0
  6284  0314  00D7               	movwf	_x^(0+128)
  6285  0315  3000               	movlw	0
  6286  0316  00D8               	movwf	(_x+1)^(0+128)
  6287  0317  3000               	movlw	0
  6288  0318  00D9               	movwf	(_x+2)^(0+128)
  6289                           
  6290                           ;main.c: 217: y=0;
  6291  0319  3000               	movlw	0
  6292  031A  00DA               	movwf	_y^(0+128)
  6293  031B  3000               	movlw	0
  6294  031C  00DB               	movwf	(_y+1)^(0+128)
  6295  031D  3000               	movlw	0
  6296  031E  00DC               	movwf	(_y+2)^(0+128)
  6297                           
  6298                           ;main.c: 218: for (int a=0; a<=90; a++)
  6299  031F  1283               	bcf	3,5	;RP0=0, select bank0
  6300  0320  1303               	bcf	3,6	;RP1=0, select bank0
  6301  0321  01D9               	clrf	Fuzzy@a_234
  6302  0322  01DA               	clrf	Fuzzy@a_234+1
  6303  0323  085A               	movf	Fuzzy@a_234+1,w
  6304  0324  3A80               	xorlw	128
  6305  0325  00FF               	movwf	127
  6306  0326  3080               	movlw	128
  6307  0327  027F               	subwf	127,w
  6308  0328  1D03               	skipz
  6309  0329  2B2C               	goto	u347_25
  6310  032A  305B               	movlw	91
  6311  032B  0259               	subwf	Fuzzy@a_234,w
  6312  032C                     u347_25:	
  6313  032C  1803               	btfsc	3,0
  6314  032D  2C09               	goto	i1l2833
  6315  032E                     i1l2823:	
  6316                           
  6317                           ;main.c: 219: {
  6318                           ;main.c: 220: y = trimf(x, 9, 45, 81);
  6319  032E  1683               	bsf	3,5	;RP0=1, select bank1
  6320  032F  1303               	bcf	3,6	;RP1=0, select bank1
  6321  0330  0857               	movf	_x^(0+128),w
  6322  0331  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0332  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0333  00C0               	movwf	trimf@x
  6325  0334  1683               	bsf	3,5	;RP0=1, select bank1
  6326  0335  1303               	bcf	3,6	;RP1=0, select bank1
  6327  0336  0858               	movf	(_x+1)^(0+128),w
  6328  0337  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0338  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0339  00C1               	movwf	trimf@x+1
  6331  033A  1683               	bsf	3,5	;RP0=1, select bank1
  6332  033B  1303               	bcf	3,6	;RP1=0, select bank1
  6333  033C  0859               	movf	(_x+2)^(0+128),w
  6334  033D  1283               	bcf	3,5	;RP0=0, select bank0
  6335  033E  1303               	bcf	3,6	;RP1=0, select bank0
  6336  033F  00C2               	movwf	trimf@x+2
  6337  0340  3000               	movlw	0
  6338  0341  00C3               	movwf	trimf@a
  6339  0342  3010               	movlw	16
  6340  0343  00C4               	movwf	trimf@a+1
  6341  0344  3041               	movlw	65
  6342  0345  00C5               	movwf	trimf@a+2
  6343  0346  3000               	movlw	0
  6344  0347  00C6               	movwf	trimf@b
  6345  0348  3034               	movlw	52
  6346  0349  00C7               	movwf	trimf@b+1
  6347  034A  3042               	movlw	66
  6348  034B  00C8               	movwf	trimf@b+2
  6349  034C  3000               	movlw	0
  6350  034D  00C9               	movwf	trimf@c
  6351  034E  30A2               	movlw	162
  6352  034F  00CA               	movwf	trimf@c+1
  6353  0350  3042               	movlw	66
  6354  0351  00CB               	movwf	trimf@c+2
  6355  0352  120A  158A  20EA  120A  118A  	fcall	_trimf
  6356  0357  1283               	bcf	3,5	;RP0=0, select bank0
  6357  0358  1303               	bcf	3,6	;RP1=0, select bank0
  6358  0359  0840               	movf	?_trimf,w
  6359  035A  1683               	bsf	3,5	;RP0=1, select bank1
  6360  035B  1303               	bcf	3,6	;RP1=0, select bank1
  6361  035C  00DA               	movwf	_y^(0+128)
  6362  035D  1283               	bcf	3,5	;RP0=0, select bank0
  6363  035E  1303               	bcf	3,6	;RP1=0, select bank0
  6364  035F  0841               	movf	?_trimf+1,w
  6365  0360  1683               	bsf	3,5	;RP0=1, select bank1
  6366  0361  1303               	bcf	3,6	;RP1=0, select bank1
  6367  0362  00DB               	movwf	(_y+1)^(0+128)
  6368  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6369  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6370  0365  0842               	movf	?_trimf+2,w
  6371  0366  1683               	bsf	3,5	;RP0=1, select bank1
  6372  0367  1303               	bcf	3,6	;RP1=0, select bank1
  6373  0368  00DC               	movwf	(_y+2)^(0+128)
  6374                           
  6375                           ;main.c: 222: if (y >= fop_rule2)
  6376  0369  085A               	movf	_y^(0+128),w
  6377  036A  1283               	bcf	3,5	;RP0=0, select bank0
  6378  036B  1303               	bcf	3,6	;RP1=0, select bank0
  6379  036C  00B0               	movwf	___ftge@ff1
  6380  036D  1683               	bsf	3,5	;RP0=1, select bank1
  6381  036E  1303               	bcf	3,6	;RP1=0, select bank1
  6382  036F  085B               	movf	(_y+1)^(0+128),w
  6383  0370  1283               	bcf	3,5	;RP0=0, select bank0
  6384  0371  1303               	bcf	3,6	;RP1=0, select bank0
  6385  0372  00B1               	movwf	___ftge@ff1+1
  6386  0373  1683               	bsf	3,5	;RP0=1, select bank1
  6387  0374  1303               	bcf	3,6	;RP1=0, select bank1
  6388  0375  085C               	movf	(_y+2)^(0+128),w
  6389  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0378  00B2               	movwf	___ftge@ff1+2
  6392  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6393  037A  1303               	bcf	3,6	;RP1=0, select bank1
  6394  037B  084B               	movf	_fop_rule2^(0+128),w
  6395  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6396  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6397  037E  00B3               	movwf	___ftge@ff2
  6398  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6399  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6400  0381  084C               	movf	(_fop_rule2+1)^(0+128),w
  6401  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0384  00B4               	movwf	___ftge@ff2+1
  6404  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6405  0386  1303               	bcf	3,6	;RP1=0, select bank1
  6406  0387  084D               	movf	(_fop_rule2+2)^(0+128),w
  6407  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6409  038A  00B5               	movwf	___ftge@ff2+2
  6410  038B  160A  118A  23AE  120A  118A  	fcall	___ftge
  6411  0390  1C03               	btfss	3,0
  6412  0391  2BA2               	goto	i1l2827
  6413                           
  6414                           ;main.c: 223: {
  6415                           ;main.c: 224: mantem += fop_rule2;
  6416  0392  1683               	bsf	3,5	;RP0=1, select bank1
  6417  0393  1303               	bcf	3,6	;RP1=0, select bank1
  6418  0394  084B               	movf	_fop_rule2^(0+128),w
  6419  0395  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0396  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0397  00A3               	movwf	___ftadd@f1
  6422  0398  1683               	bsf	3,5	;RP0=1, select bank1
  6423  0399  1303               	bcf	3,6	;RP1=0, select bank1
  6424  039A  084C               	movf	(_fop_rule2+1)^(0+128),w
  6425  039B  1283               	bcf	3,5	;RP0=0, select bank0
  6426  039C  1303               	bcf	3,6	;RP1=0, select bank0
  6427  039D  00A4               	movwf	___ftadd@f1+1
  6428  039E  1683               	bsf	3,5	;RP0=1, select bank1
  6429  039F  1303               	bcf	3,6	;RP1=0, select bank1
  6430  03A0  084D               	movf	(_fop_rule2+2)^(0+128),w
  6431  03A1  2BB1               	goto	L4
  6432  03A2                     i1l2827:	
  6433                           ;main.c: 225: }
  6434                           
  6435                           
  6436                           ;main.c: 226: else
  6437                           ;main.c: 227: {
  6438                           ;main.c: 228: mantem += y;
  6439  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  6440  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  6441  03A4  085A               	movf	_y^(0+128),w
  6442  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  6443  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  6444  03A7  00A3               	movwf	___ftadd@f1
  6445  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  6446  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  6447  03AA  085B               	movf	(_y+1)^(0+128),w
  6448  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  6449  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  6450  03AD  00A4               	movwf	___ftadd@f1+1
  6451  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  6452  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  6453  03B0  085C               	movf	(_y+2)^(0+128),w
  6454  03B1                     L4:	
  6455  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  6456  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  6457  03B3  00A5               	movwf	___ftadd@f1+2
  6458  03B4  085D               	movf	Fuzzy@mantem,w
  6459  03B5  00A6               	movwf	___ftadd@f2
  6460  03B6  085E               	movf	Fuzzy@mantem+1,w
  6461  03B7  00A7               	movwf	___ftadd@f2+1
  6462  03B8  085F               	movf	Fuzzy@mantem+2,w
  6463  03B9  00A8               	movwf	___ftadd@f2+2
  6464  03BA  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6465  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  6466  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  6467  03C1  0823               	movf	?___ftadd,w
  6468  03C2  00DD               	movwf	Fuzzy@mantem
  6469  03C3  0824               	movf	?___ftadd+1,w
  6470  03C4  00DE               	movwf	Fuzzy@mantem+1
  6471  03C5  0825               	movf	?___ftadd+2,w
  6472  03C6  00DF               	movwf	Fuzzy@mantem+2
  6473                           
  6474                           ;main.c: 229: }
  6475                           ;main.c: 231: x=x+1;
  6476  03C7  3000               	movlw	0
  6477  03C8  00A3               	movwf	___ftadd@f1
  6478  03C9  3080               	movlw	128
  6479  03CA  00A4               	movwf	___ftadd@f1+1
  6480  03CB  303F               	movlw	63
  6481  03CC  00A5               	movwf	___ftadd@f1+2
  6482  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  6483  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  6484  03CF  0857               	movf	_x^(0+128),w
  6485  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  6486  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  6487  03D2  00A6               	movwf	___ftadd@f2
  6488  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  6489  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  6490  03D5  0858               	movf	(_x+1)^(0+128),w
  6491  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  6492  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  6493  03D8  00A7               	movwf	___ftadd@f2+1
  6494  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  6495  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  6496  03DB  0859               	movf	(_x+2)^(0+128),w
  6497  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  6498  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  6499  03DE  00A8               	movwf	___ftadd@f2+2
  6500  03DF  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6501  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  6502  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  6503  03E6  0823               	movf	?___ftadd,w
  6504  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  6505  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  6506  03E9  00D7               	movwf	_x^(0+128)
  6507  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  6508  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  6509  03EC  0824               	movf	?___ftadd+1,w
  6510  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  6511  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  6512  03EF  00D8               	movwf	(_x+1)^(0+128)
  6513  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  6514  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  6515  03F2  0825               	movf	?___ftadd+2,w
  6516  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  6517  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  6518  03F5  00D9               	movwf	(_x+2)^(0+128)
  6519  03F6  3001               	movlw	1
  6520  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6521  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6522  03F9  07D9               	addwf	Fuzzy@a_234,f
  6523  03FA  1803               	skipnc
  6524  03FB  0ADA               	incf	Fuzzy@a_234+1,f
  6525  03FC  3000               	movlw	0
  6526  03FD  07DA               	addwf	Fuzzy@a_234+1,f
  6527  03FE  085A               	movf	Fuzzy@a_234+1,w
  6528  03FF  3A80               	xorlw	128
  6529  0400  00FF               	movwf	127
  6530  0401  3080               	movlw	128
  6531  0402  027F               	subwf	127,w
  6532  0403  1D03               	skipz
  6533  0404  2C07               	goto	u349_25
  6534  0405  305B               	movlw	91
  6535  0406  0259               	subwf	Fuzzy@a_234,w
  6536  0407                     u349_25:	
  6537  0407  1C03               	skipc
  6538  0408  2B2E               	goto	i1l2823
  6539  0409                     i1l2833:	
  6540                           
  6541                           ;main.c: 232: }
  6542                           ;main.c: 234: }
  6543                           ;main.c: 240: if (deltaRpm > 70 )
  6544  0409  3000               	movlw	0
  6545  040A  1283               	bcf	3,5	;RP0=0, select bank0
  6546  040B  1303               	bcf	3,6	;RP1=0, select bank0
  6547  040C  00B0               	movwf	___ftge@ff1
  6548  040D  308C               	movlw	140
  6549  040E  00B1               	movwf	___ftge@ff1+1
  6550  040F  3042               	movlw	66
  6551  0410  00B2               	movwf	___ftge@ff1+2
  6552  0411  0866               	movf	Fuzzy@deltaRpm,w
  6553  0412  00B3               	movwf	___ftge@ff2
  6554  0413  0867               	movf	Fuzzy@deltaRpm+1,w
  6555  0414  00B4               	movwf	___ftge@ff2+1
  6556  0415  0868               	movf	Fuzzy@deltaRpm+2,w
  6557  0416  00B5               	movwf	___ftge@ff2+2
  6558  0417  160A  118A  23AE  120A  118A  	fcall	___ftge
  6559  041C  1803               	btfsc	3,0
  6560  041D  2D7E               	goto	i1l2857
  6561                           
  6562                           ;main.c: 241: {
  6563                           ;main.c: 244: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  6564  041E  1283               	bcf	3,5	;RP0=0, select bank0
  6565  041F  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0420  0866               	movf	Fuzzy@deltaRpm,w
  6567  0421  00C0               	movwf	trapmf@x
  6568  0422  0867               	movf	Fuzzy@deltaRpm+1,w
  6569  0423  00C1               	movwf	trapmf@x+1
  6570  0424  0868               	movf	Fuzzy@deltaRpm+2,w
  6571  0425  00C2               	movwf	trapmf@x+2
  6572  0426  3000               	movlw	0
  6573  0427  00C3               	movwf	trapmf@a
  6574  0428  3078               	movlw	120
  6575  0429  00C4               	movwf	trapmf@a+1
  6576  042A  3042               	movlw	66
  6577  042B  00C5               	movwf	trapmf@a+2
  6578  042C  3000               	movlw	0
  6579  042D  00C6               	movwf	trapmf@b
  6580  042E  309E               	movlw	158
  6581  042F  00C7               	movwf	trapmf@b+1
  6582  0430  3042               	movlw	66
  6583  0431  00C8               	movwf	trapmf@b+2
  6584  0432  3000               	movlw	0
  6585  0433  00C9               	movwf	trapmf@c
  6586  0434  30B4               	movlw	180
  6587  0435  00CA               	movwf	trapmf@c+1
  6588  0436  3042               	movlw	66
  6589  0437  00CB               	movwf	trapmf@c+2
  6590  0438  3000               	movlw	0
  6591  0439  00CC               	movwf	trapmf@d
  6592  043A  30B4               	movlw	180
  6593  043B  00CD               	movwf	trapmf@d+1
  6594  043C  3042               	movlw	66
  6595  043D  00CE               	movwf	trapmf@d+2
  6596  043E  120A  158A  235F  120A  118A  	fcall	_trapmf
  6597  0443  1283               	bcf	3,5	;RP0=0, select bank0
  6598  0444  1303               	bcf	3,6	;RP1=0, select bank0
  6599  0445  0840               	movf	?_trapmf,w
  6600  0446  1683               	bsf	3,5	;RP0=1, select bank1
  6601  0447  1303               	bcf	3,6	;RP1=0, select bank1
  6602  0448  00C5               	movwf	_fitemp^(0+128)
  6603  0449  1283               	bcf	3,5	;RP0=0, select bank0
  6604  044A  1303               	bcf	3,6	;RP1=0, select bank0
  6605  044B  0841               	movf	?_trapmf+1,w
  6606  044C  1683               	bsf	3,5	;RP0=1, select bank1
  6607  044D  1303               	bcf	3,6	;RP1=0, select bank1
  6608  044E  00C6               	movwf	(_fitemp+1)^(0+128)
  6609  044F  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0450  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0451  0842               	movf	?_trapmf+2,w
  6612  0452  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0453  1303               	bcf	3,6	;RP1=0, select bank1
  6614  0454  00C7               	movwf	(_fitemp+2)^(0+128)
  6615                           
  6616                           ;main.c: 248: fop_rule3 = max_val(fitemp,0.1);
  6617  0455  0845               	movf	_fitemp^(0+128),w
  6618  0456  1283               	bcf	3,5	;RP0=0, select bank0
  6619  0457  1303               	bcf	3,6	;RP1=0, select bank0
  6620  0458  00BC               	movwf	max_val@a
  6621  0459  1683               	bsf	3,5	;RP0=1, select bank1
  6622  045A  1303               	bcf	3,6	;RP1=0, select bank1
  6623  045B  0846               	movf	(_fitemp+1)^(0+128),w
  6624  045C  1283               	bcf	3,5	;RP0=0, select bank0
  6625  045D  1303               	bcf	3,6	;RP1=0, select bank0
  6626  045E  00BD               	movwf	max_val@a+1
  6627  045F  1683               	bsf	3,5	;RP0=1, select bank1
  6628  0460  1303               	bcf	3,6	;RP1=0, select bank1
  6629  0461  0847               	movf	(_fitemp+2)^(0+128),w
  6630  0462  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0463  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0464  00BE               	movwf	max_val@a+2
  6633  0465  30CD               	movlw	205
  6634  0466  00BF               	movwf	max_val@b
  6635  0467  30CC               	movlw	204
  6636  0468  00C0               	movwf	max_val@b+1
  6637  0469  303D               	movlw	61
  6638  046A  00C1               	movwf	max_val@b+2
  6639  046B  160A  118A  2117  120A  118A  	fcall	_max_val
  6640  0470  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0471  1303               	bcf	3,6	;RP1=0, select bank0
  6642  0472  083C               	movf	?_max_val,w
  6643  0473  1683               	bsf	3,5	;RP0=1, select bank1
  6644  0474  1303               	bcf	3,6	;RP1=0, select bank1
  6645  0475  00CE               	movwf	_fop_rule3^(0+128)
  6646  0476  1283               	bcf	3,5	;RP0=0, select bank0
  6647  0477  1303               	bcf	3,6	;RP1=0, select bank0
  6648  0478  083D               	movf	?_max_val+1,w
  6649  0479  1683               	bsf	3,5	;RP0=1, select bank1
  6650  047A  1303               	bcf	3,6	;RP1=0, select bank1
  6651  047B  00CF               	movwf	(_fop_rule3+1)^(0+128)
  6652  047C  1283               	bcf	3,5	;RP0=0, select bank0
  6653  047D  1303               	bcf	3,6	;RP1=0, select bank0
  6654  047E  083E               	movf	?_max_val+2,w
  6655  047F  1683               	bsf	3,5	;RP0=1, select bank1
  6656  0480  1303               	bcf	3,6	;RP1=0, select bank1
  6657  0481  00D0               	movwf	(_fop_rule3+2)^(0+128)
  6658                           
  6659                           ;main.c: 251: x=0;
  6660  0482  3000               	movlw	0
  6661  0483  00D7               	movwf	_x^(0+128)
  6662  0484  3000               	movlw	0
  6663  0485  00D8               	movwf	(_x+1)^(0+128)
  6664  0486  3000               	movlw	0
  6665  0487  00D9               	movwf	(_x+2)^(0+128)
  6666                           
  6667                           ;main.c: 252: y=0;
  6668  0488  3000               	movlw	0
  6669  0489  00DA               	movwf	_y^(0+128)
  6670  048A  3000               	movlw	0
  6671  048B  00DB               	movwf	(_y+1)^(0+128)
  6672  048C  3000               	movlw	0
  6673  048D  00DC               	movwf	(_y+2)^(0+128)
  6674                           
  6675                           ;main.c: 253: for (int a=0; a<=90; a++)
  6676  048E  1283               	bcf	3,5	;RP0=0, select bank0
  6677  048F  1303               	bcf	3,6	;RP1=0, select bank0
  6678  0490  01DB               	clrf	Fuzzy@a_235
  6679  0491  01DC               	clrf	Fuzzy@a_235+1
  6680  0492  085C               	movf	Fuzzy@a_235+1,w
  6681  0493  3A80               	xorlw	128
  6682  0494  00FF               	movwf	127
  6683  0495  3080               	movlw	128
  6684  0496  027F               	subwf	127,w
  6685  0497  1D03               	skipz
  6686  0498  2C9B               	goto	u351_25
  6687  0499  305B               	movlw	91
  6688  049A  025B               	subwf	Fuzzy@a_235,w
  6689  049B                     u351_25:	
  6690  049B  1803               	btfsc	3,0
  6691  049C  2D7E               	goto	i1l2857
  6692  049D                     i1l2847:	
  6693                           
  6694                           ;main.c: 254: {
  6695                           ;main.c: 255: y = trapmf(x, 62, 79, 90, 90);
  6696  049D  1683               	bsf	3,5	;RP0=1, select bank1
  6697  049E  1303               	bcf	3,6	;RP1=0, select bank1
  6698  049F  0857               	movf	_x^(0+128),w
  6699  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  6700  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  6701  04A2  00C0               	movwf	trapmf@x
  6702  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  6703  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  6704  04A5  0858               	movf	(_x+1)^(0+128),w
  6705  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  6706  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  6707  04A8  00C1               	movwf	trapmf@x+1
  6708  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  6709  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  6710  04AB  0859               	movf	(_x+2)^(0+128),w
  6711  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  6712  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  6713  04AE  00C2               	movwf	trapmf@x+2
  6714  04AF  3000               	movlw	0
  6715  04B0  00C3               	movwf	trapmf@a
  6716  04B1  3078               	movlw	120
  6717  04B2  00C4               	movwf	trapmf@a+1
  6718  04B3  3042               	movlw	66
  6719  04B4  00C5               	movwf	trapmf@a+2
  6720  04B5  3000               	movlw	0
  6721  04B6  00C6               	movwf	trapmf@b
  6722  04B7  309E               	movlw	158
  6723  04B8  00C7               	movwf	trapmf@b+1
  6724  04B9  3042               	movlw	66
  6725  04BA  00C8               	movwf	trapmf@b+2
  6726  04BB  3000               	movlw	0
  6727  04BC  00C9               	movwf	trapmf@c
  6728  04BD  30B4               	movlw	180
  6729  04BE  00CA               	movwf	trapmf@c+1
  6730  04BF  3042               	movlw	66
  6731  04C0  00CB               	movwf	trapmf@c+2
  6732  04C1  3000               	movlw	0
  6733  04C2  00CC               	movwf	trapmf@d
  6734  04C3  30B4               	movlw	180
  6735  04C4  00CD               	movwf	trapmf@d+1
  6736  04C5  3042               	movlw	66
  6737  04C6  00CE               	movwf	trapmf@d+2
  6738  04C7  120A  158A  235F  120A  118A  	fcall	_trapmf
  6739  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  6740  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  6741  04CE  0840               	movf	?_trapmf,w
  6742  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  6743  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  6744  04D1  00DA               	movwf	_y^(0+128)
  6745  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  6746  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  6747  04D4  0841               	movf	?_trapmf+1,w
  6748  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  6749  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  6750  04D7  00DB               	movwf	(_y+1)^(0+128)
  6751  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  6752  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  6753  04DA  0842               	movf	?_trapmf+2,w
  6754  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  6755  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  6756  04DD  00DC               	movwf	(_y+2)^(0+128)
  6757                           
  6758                           ;main.c: 257: if (y >= fop_rule3)
  6759  04DE  085A               	movf	_y^(0+128),w
  6760  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  6761  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  6762  04E1  00B0               	movwf	___ftge@ff1
  6763  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  6764  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  6765  04E4  085B               	movf	(_y+1)^(0+128),w
  6766  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  6767  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  6768  04E7  00B1               	movwf	___ftge@ff1+1
  6769  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  6770  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  6771  04EA  085C               	movf	(_y+2)^(0+128),w
  6772  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  6773  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  6774  04ED  00B2               	movwf	___ftge@ff1+2
  6775  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  6776  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  6777  04F0  084E               	movf	_fop_rule3^(0+128),w
  6778  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6779  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6780  04F3  00B3               	movwf	___ftge@ff2
  6781  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  6782  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  6783  04F6  084F               	movf	(_fop_rule3+1)^(0+128),w
  6784  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  6785  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  6786  04F9  00B4               	movwf	___ftge@ff2+1
  6787  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  6788  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  6789  04FC  0850               	movf	(_fop_rule3+2)^(0+128),w
  6790  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6791  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  6792  04FF  00B5               	movwf	___ftge@ff2+2
  6793  0500  160A  118A  23AE  120A  118A  	fcall	___ftge
  6794  0505  1C03               	btfss	3,0
  6795  0506  2D17               	goto	i1l2851
  6796                           
  6797                           ;main.c: 258: {
  6798                           ;main.c: 259: aumenta += fop_rule3;
  6799  0507  1683               	bsf	3,5	;RP0=1, select bank1
  6800  0508  1303               	bcf	3,6	;RP1=0, select bank1
  6801  0509  084E               	movf	_fop_rule3^(0+128),w
  6802  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6803  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6804  050C  00A3               	movwf	___ftadd@f1
  6805  050D  1683               	bsf	3,5	;RP0=1, select bank1
  6806  050E  1303               	bcf	3,6	;RP1=0, select bank1
  6807  050F  084F               	movf	(_fop_rule3+1)^(0+128),w
  6808  0510  1283               	bcf	3,5	;RP0=0, select bank0
  6809  0511  1303               	bcf	3,6	;RP1=0, select bank0
  6810  0512  00A4               	movwf	___ftadd@f1+1
  6811  0513  1683               	bsf	3,5	;RP0=1, select bank1
  6812  0514  1303               	bcf	3,6	;RP1=0, select bank1
  6813  0515  0850               	movf	(_fop_rule3+2)^(0+128),w
  6814  0516  2D26               	goto	L5
  6815  0517                     i1l2851:	
  6816                           ;main.c: 260: }
  6817                           
  6818                           
  6819                           ;main.c: 261: else
  6820                           ;main.c: 262: {
  6821                           ;main.c: 263: aumenta += y;
  6822  0517  1683               	bsf	3,5	;RP0=1, select bank1
  6823  0518  1303               	bcf	3,6	;RP1=0, select bank1
  6824  0519  085A               	movf	_y^(0+128),w
  6825  051A  1283               	bcf	3,5	;RP0=0, select bank0
  6826  051B  1303               	bcf	3,6	;RP1=0, select bank0
  6827  051C  00A3               	movwf	___ftadd@f1
  6828  051D  1683               	bsf	3,5	;RP0=1, select bank1
  6829  051E  1303               	bcf	3,6	;RP1=0, select bank1
  6830  051F  085B               	movf	(_y+1)^(0+128),w
  6831  0520  1283               	bcf	3,5	;RP0=0, select bank0
  6832  0521  1303               	bcf	3,6	;RP1=0, select bank0
  6833  0522  00A4               	movwf	___ftadd@f1+1
  6834  0523  1683               	bsf	3,5	;RP0=1, select bank1
  6835  0524  1303               	bcf	3,6	;RP1=0, select bank1
  6836  0525  085C               	movf	(_y+2)^(0+128),w
  6837  0526                     L5:	
  6838  0526  1283               	bcf	3,5	;RP0=0, select bank0
  6839  0527  1303               	bcf	3,6	;RP1=0, select bank0
  6840  0528  00A5               	movwf	___ftadd@f1+2
  6841  0529  0863               	movf	Fuzzy@aumenta,w
  6842  052A  00A6               	movwf	___ftadd@f2
  6843  052B  0864               	movf	Fuzzy@aumenta+1,w
  6844  052C  00A7               	movwf	___ftadd@f2+1
  6845  052D  0865               	movf	Fuzzy@aumenta+2,w
  6846  052E  00A8               	movwf	___ftadd@f2+2
  6847  052F  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6848  0534  1283               	bcf	3,5	;RP0=0, select bank0
  6849  0535  1303               	bcf	3,6	;RP1=0, select bank0
  6850  0536  0823               	movf	?___ftadd,w
  6851  0537  00E3               	movwf	Fuzzy@aumenta
  6852  0538  0824               	movf	?___ftadd+1,w
  6853  0539  00E4               	movwf	Fuzzy@aumenta+1
  6854  053A  0825               	movf	?___ftadd+2,w
  6855  053B  00E5               	movwf	Fuzzy@aumenta+2
  6856                           
  6857                           ;main.c: 264: }
  6858                           ;main.c: 266: x=x+1;
  6859  053C  3000               	movlw	0
  6860  053D  00A3               	movwf	___ftadd@f1
  6861  053E  3080               	movlw	128
  6862  053F  00A4               	movwf	___ftadd@f1+1
  6863  0540  303F               	movlw	63
  6864  0541  00A5               	movwf	___ftadd@f1+2
  6865  0542  1683               	bsf	3,5	;RP0=1, select bank1
  6866  0543  1303               	bcf	3,6	;RP1=0, select bank1
  6867  0544  0857               	movf	_x^(0+128),w
  6868  0545  1283               	bcf	3,5	;RP0=0, select bank0
  6869  0546  1303               	bcf	3,6	;RP1=0, select bank0
  6870  0547  00A6               	movwf	___ftadd@f2
  6871  0548  1683               	bsf	3,5	;RP0=1, select bank1
  6872  0549  1303               	bcf	3,6	;RP1=0, select bank1
  6873  054A  0858               	movf	(_x+1)^(0+128),w
  6874  054B  1283               	bcf	3,5	;RP0=0, select bank0
  6875  054C  1303               	bcf	3,6	;RP1=0, select bank0
  6876  054D  00A7               	movwf	___ftadd@f2+1
  6877  054E  1683               	bsf	3,5	;RP0=1, select bank1
  6878  054F  1303               	bcf	3,6	;RP1=0, select bank1
  6879  0550  0859               	movf	(_x+2)^(0+128),w
  6880  0551  1283               	bcf	3,5	;RP0=0, select bank0
  6881  0552  1303               	bcf	3,6	;RP1=0, select bank0
  6882  0553  00A8               	movwf	___ftadd@f2+2
  6883  0554  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6884  0559  1283               	bcf	3,5	;RP0=0, select bank0
  6885  055A  1303               	bcf	3,6	;RP1=0, select bank0
  6886  055B  0823               	movf	?___ftadd,w
  6887  055C  1683               	bsf	3,5	;RP0=1, select bank1
  6888  055D  1303               	bcf	3,6	;RP1=0, select bank1
  6889  055E  00D7               	movwf	_x^(0+128)
  6890  055F  1283               	bcf	3,5	;RP0=0, select bank0
  6891  0560  1303               	bcf	3,6	;RP1=0, select bank0
  6892  0561  0824               	movf	?___ftadd+1,w
  6893  0562  1683               	bsf	3,5	;RP0=1, select bank1
  6894  0563  1303               	bcf	3,6	;RP1=0, select bank1
  6895  0564  00D8               	movwf	(_x+1)^(0+128)
  6896  0565  1283               	bcf	3,5	;RP0=0, select bank0
  6897  0566  1303               	bcf	3,6	;RP1=0, select bank0
  6898  0567  0825               	movf	?___ftadd+2,w
  6899  0568  1683               	bsf	3,5	;RP0=1, select bank1
  6900  0569  1303               	bcf	3,6	;RP1=0, select bank1
  6901  056A  00D9               	movwf	(_x+2)^(0+128)
  6902  056B  3001               	movlw	1
  6903  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6904  056D  1303               	bcf	3,6	;RP1=0, select bank0
  6905  056E  07DB               	addwf	Fuzzy@a_235,f
  6906  056F  1803               	skipnc
  6907  0570  0ADC               	incf	Fuzzy@a_235+1,f
  6908  0571  3000               	movlw	0
  6909  0572  07DC               	addwf	Fuzzy@a_235+1,f
  6910  0573  085C               	movf	Fuzzy@a_235+1,w
  6911  0574  3A80               	xorlw	128
  6912  0575  00FF               	movwf	127
  6913  0576  3080               	movlw	128
  6914  0577  027F               	subwf	127,w
  6915  0578  1D03               	skipz
  6916  0579  2D7C               	goto	u353_25
  6917  057A  305B               	movlw	91
  6918  057B  025B               	subwf	Fuzzy@a_235,w
  6919  057C                     u353_25:	
  6920  057C  1C03               	skipc
  6921  057D  2C9D               	goto	i1l2847
  6922  057E                     i1l2857:	
  6923                           
  6924                           ;main.c: 267: }
  6925                           ;main.c: 269: }
  6926                           ;main.c: 272: if (deltaRpm < 25)
  6927  057E  1283               	bcf	3,5	;RP0=0, select bank0
  6928  057F  1303               	bcf	3,6	;RP1=0, select bank0
  6929  0580  0866               	movf	Fuzzy@deltaRpm,w
  6930  0581  00B0               	movwf	___ftge@ff1
  6931  0582  0867               	movf	Fuzzy@deltaRpm+1,w
  6932  0583  00B1               	movwf	___ftge@ff1+1
  6933  0584  0868               	movf	Fuzzy@deltaRpm+2,w
  6934  0585  00B2               	movwf	___ftge@ff1+2
  6935  0586  3000               	movlw	0
  6936  0587  00B3               	movwf	___ftge@ff2
  6937  0588  30C8               	movlw	200
  6938  0589  00B4               	movwf	___ftge@ff2+1
  6939  058A  3041               	movlw	65
  6940  058B  00B5               	movwf	___ftge@ff2+2
  6941  058C  160A  118A  23AE  120A  118A  	fcall	___ftge
  6942  0591  1803               	btfsc	3,0
  6943  0592  2D9B               	goto	i1l2861
  6944                           
  6945                           ;main.c: 273: {
  6946                           ;main.c: 274: tip = reduz;
  6947  0593  1283               	bcf	3,5	;RP0=0, select bank0
  6948  0594  1303               	bcf	3,6	;RP1=0, select bank0
  6949  0595  0860               	movf	Fuzzy@reduz,w
  6950  0596  00D4               	movwf	Fuzzy@tip
  6951  0597  0861               	movf	Fuzzy@reduz+1,w
  6952  0598  00D5               	movwf	Fuzzy@tip+1
  6953  0599  0862               	movf	Fuzzy@reduz+2,w
  6954  059A  2DD4               	goto	L7
  6955  059B                     i1l2861:	
  6956                           ;main.c: 275: }else
  6957                           
  6958                           
  6959                           ;main.c: 276: if (deltaRpm >= 25 && deltaRpm < 75)
  6960  059B  1283               	bcf	3,5	;RP0=0, select bank0
  6961  059C  1303               	bcf	3,6	;RP1=0, select bank0
  6962  059D  0866               	movf	Fuzzy@deltaRpm,w
  6963  059E  00B0               	movwf	___ftge@ff1
  6964  059F  0867               	movf	Fuzzy@deltaRpm+1,w
  6965  05A0  00B1               	movwf	___ftge@ff1+1
  6966  05A1  0868               	movf	Fuzzy@deltaRpm+2,w
  6967  05A2  00B2               	movwf	___ftge@ff1+2
  6968  05A3  3000               	movlw	0
  6969  05A4  00B3               	movwf	___ftge@ff2
  6970  05A5  30C8               	movlw	200
  6971  05A6  00B4               	movwf	___ftge@ff2+1
  6972  05A7  3041               	movlw	65
  6973  05A8  00B5               	movwf	___ftge@ff2+2
  6974  05A9  160A  118A  23AE  120A  118A  	fcall	___ftge
  6975  05AE  1C03               	btfss	3,0
  6976  05AF  2DCD               	goto	i1l2867
  6977  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  6978  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  6979  05B2  0866               	movf	Fuzzy@deltaRpm,w
  6980  05B3  00B0               	movwf	___ftge@ff1
  6981  05B4  0867               	movf	Fuzzy@deltaRpm+1,w
  6982  05B5  00B1               	movwf	___ftge@ff1+1
  6983  05B6  0868               	movf	Fuzzy@deltaRpm+2,w
  6984  05B7  00B2               	movwf	___ftge@ff1+2
  6985  05B8  3000               	movlw	0
  6986  05B9  00B3               	movwf	___ftge@ff2
  6987  05BA  3096               	movlw	150
  6988  05BB  00B4               	movwf	___ftge@ff2+1
  6989  05BC  3042               	movlw	66
  6990  05BD  00B5               	movwf	___ftge@ff2+2
  6991  05BE  160A  118A  23AE  120A  118A  	fcall	___ftge
  6992  05C3  1803               	btfsc	3,0
  6993  05C4  2DCD               	goto	i1l2867
  6994                           
  6995                           ;main.c: 277: {
  6996                           ;main.c: 278: tip = mantem;
  6997  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  6998  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  6999  05C7  085D               	movf	Fuzzy@mantem,w
  7000  05C8  00D4               	movwf	Fuzzy@tip
  7001  05C9  085E               	movf	Fuzzy@mantem+1,w
  7002  05CA  00D5               	movwf	Fuzzy@tip+1
  7003  05CB  085F               	movf	Fuzzy@mantem+2,w
  7004  05CC  2DD4               	goto	L7
  7005  05CD                     i1l2867:	
  7006                           ;main.c: 279: }else
  7007                           
  7008                           
  7009                           ;main.c: 280: {
  7010                           ;main.c: 281: tip = aumenta;
  7011  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  7012  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  7013  05CF  0863               	movf	Fuzzy@aumenta,w
  7014  05D0  00D4               	movwf	Fuzzy@tip
  7015  05D1  0864               	movf	Fuzzy@aumenta+1,w
  7016  05D2  00D5               	movwf	Fuzzy@tip+1
  7017  05D3  0865               	movf	Fuzzy@aumenta+2,w
  7018  05D4                     L7:	
  7019  05D4  00D6               	movwf	Fuzzy@tip+2
  7020                           
  7021                           ;main.c: 282: }
  7022                           ;main.c: 285: total_area = 90;
  7023  05D5  3000               	movlw	0
  7024  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  7025  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  7026  05D8  00D4               	movwf	_total_area^(0+128)
  7027  05D9  30B4               	movlw	180
  7028  05DA  00D5               	movwf	(_total_area+1)^(0+128)
  7029  05DB  3042               	movlw	66
  7030  05DC  00D6               	movwf	(_total_area+2)^(0+128)
  7031                           
  7032                           ;main.c: 286: sum = 0;
  7033  05DD  3000               	movlw	0
  7034  05DE  00D1               	movwf	_sum^(0+128)
  7035  05DF  3000               	movlw	0
  7036  05E0  00D2               	movwf	(_sum+1)^(0+128)
  7037  05E1  3000               	movlw	0
  7038  05E2  00D3               	movwf	(_sum+2)^(0+128)
  7039                           
  7040                           ;main.c: 287: sum = sum + tip;
  7041  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  7042  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  7043  05E5  0854               	movf	Fuzzy@tip,w
  7044  05E6  00A3               	movwf	___ftadd@f1
  7045  05E7  0855               	movf	Fuzzy@tip+1,w
  7046  05E8  00A4               	movwf	___ftadd@f1+1
  7047  05E9  0856               	movf	Fuzzy@tip+2,w
  7048  05EA  00A5               	movwf	___ftadd@f1+2
  7049  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  7050  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  7051  05ED  0851               	movf	_sum^(0+128),w
  7052  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  7053  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  7054  05F0  00A6               	movwf	___ftadd@f2
  7055  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  7056  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  7057  05F3  0852               	movf	(_sum+1)^(0+128),w
  7058  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  7059  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  7060  05F6  00A7               	movwf	___ftadd@f2+1
  7061  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  7062  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  7063  05F9  0853               	movf	(_sum+2)^(0+128),w
  7064  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  7065  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  7066  05FC  00A8               	movwf	___ftadd@f2+2
  7067  05FD  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7068  0602  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0603  1303               	bcf	3,6	;RP1=0, select bank0
  7070  0604  0823               	movf	?___ftadd,w
  7071  0605  1683               	bsf	3,5	;RP0=1, select bank1
  7072  0606  1303               	bcf	3,6	;RP1=0, select bank1
  7073  0607  00D1               	movwf	_sum^(0+128)
  7074  0608  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0609  1303               	bcf	3,6	;RP1=0, select bank0
  7076  060A  0824               	movf	?___ftadd+1,w
  7077  060B  1683               	bsf	3,5	;RP0=1, select bank1
  7078  060C  1303               	bcf	3,6	;RP1=0, select bank1
  7079  060D  00D2               	movwf	(_sum+1)^(0+128)
  7080  060E  1283               	bcf	3,5	;RP0=0, select bank0
  7081  060F  1303               	bcf	3,6	;RP1=0, select bank0
  7082  0610  0825               	movf	?___ftadd+2,w
  7083  0611  1683               	bsf	3,5	;RP0=1, select bank1
  7084  0612  1303               	bcf	3,6	;RP1=0, select bank1
  7085  0613  00D3               	movwf	(_sum+2)^(0+128)
  7086                           
  7087                           ;main.c: 290: ativa_fan = sum/total_area;
  7088  0614  0854               	movf	_total_area^(0+128),w
  7089  0615  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0616  1303               	bcf	3,6	;RP1=0, select bank0
  7091  0617  00B0               	movwf	___ftdiv@f2
  7092  0618  1683               	bsf	3,5	;RP0=1, select bank1
  7093  0619  1303               	bcf	3,6	;RP1=0, select bank1
  7094  061A  0855               	movf	(_total_area+1)^(0+128),w
  7095  061B  1283               	bcf	3,5	;RP0=0, select bank0
  7096  061C  1303               	bcf	3,6	;RP1=0, select bank0
  7097  061D  00B1               	movwf	___ftdiv@f2+1
  7098  061E  1683               	bsf	3,5	;RP0=1, select bank1
  7099  061F  1303               	bcf	3,6	;RP1=0, select bank1
  7100  0620  0856               	movf	(_total_area+2)^(0+128),w
  7101  0621  1283               	bcf	3,5	;RP0=0, select bank0
  7102  0622  1303               	bcf	3,6	;RP1=0, select bank0
  7103  0623  00B2               	movwf	___ftdiv@f2+2
  7104  0624  1683               	bsf	3,5	;RP0=1, select bank1
  7105  0625  1303               	bcf	3,6	;RP1=0, select bank1
  7106  0626  0851               	movf	_sum^(0+128),w
  7107  0627  1283               	bcf	3,5	;RP0=0, select bank0
  7108  0628  1303               	bcf	3,6	;RP1=0, select bank0
  7109  0629  00B3               	movwf	___ftdiv@f1
  7110  062A  1683               	bsf	3,5	;RP0=1, select bank1
  7111  062B  1303               	bcf	3,6	;RP1=0, select bank1
  7112  062C  0852               	movf	(_sum+1)^(0+128),w
  7113  062D  1283               	bcf	3,5	;RP0=0, select bank0
  7114  062E  1303               	bcf	3,6	;RP1=0, select bank0
  7115  062F  00B4               	movwf	___ftdiv@f1+1
  7116  0630  1683               	bsf	3,5	;RP0=1, select bank1
  7117  0631  1303               	bcf	3,6	;RP1=0, select bank1
  7118  0632  0853               	movf	(_sum+2)^(0+128),w
  7119  0633  1283               	bcf	3,5	;RP0=0, select bank0
  7120  0634  1303               	bcf	3,6	;RP1=0, select bank0
  7121  0635  00B5               	movwf	___ftdiv@f1+2
  7122  0636  160A  118A  256E  120A  118A  	fcall	___ftdiv
  7123  063B  1283               	bcf	3,5	;RP0=0, select bank0
  7124  063C  1303               	bcf	3,6	;RP1=0, select bank0
  7125  063D  0830               	movf	?___ftdiv,w
  7126  063E  1683               	bsf	3,5	;RP0=1, select bank1
  7127  063F  1303               	bcf	3,6	;RP1=0, select bank1
  7128  0640  00C2               	movwf	_ativa_fan^(0+128)
  7129  0641  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0642  1303               	bcf	3,6	;RP1=0, select bank0
  7131  0643  0831               	movf	?___ftdiv+1,w
  7132  0644  1683               	bsf	3,5	;RP0=1, select bank1
  7133  0645  1303               	bcf	3,6	;RP1=0, select bank1
  7134  0646  00C3               	movwf	(_ativa_fan+1)^(0+128)
  7135  0647  1283               	bcf	3,5	;RP0=0, select bank0
  7136  0648  1303               	bcf	3,6	;RP1=0, select bank0
  7137  0649  0832               	movf	?___ftdiv+2,w
  7138  064A  1683               	bsf	3,5	;RP0=1, select bank1
  7139  064B  1303               	bcf	3,6	;RP1=0, select bank1
  7140  064C  00C4               	movwf	(_ativa_fan+2)^(0+128)
  7141                           
  7142                           ;main.c: 293: ativa_fan = ativa_fan*100;
  7143  064D  3000               	movlw	0
  7144  064E  00F8               	movwf	___ftmul@f1
  7145  064F  30C8               	movlw	200
  7146  0650  00F9               	movwf	___ftmul@f1+1
  7147  0651  3042               	movlw	66
  7148  0652  00FA               	movwf	___ftmul@f1+2
  7149  0653  0842               	movf	_ativa_fan^(0+128),w
  7150  0654  00FB               	movwf	___ftmul@f2
  7151  0655  0843               	movf	(_ativa_fan+1)^(0+128),w
  7152  0656  00FC               	movwf	___ftmul@f2+1
  7153  0657  0844               	movf	(_ativa_fan+2)^(0+128),w
  7154  0658  00FD               	movwf	___ftmul@f2+2
  7155  0659  160A  118A  2626  120A  118A  	fcall	___ftmul
  7156  065E  0878               	movf	?___ftmul,w
  7157  065F  1683               	bsf	3,5	;RP0=1, select bank1
  7158  0660  1303               	bcf	3,6	;RP1=0, select bank1
  7159  0661  00C2               	movwf	_ativa_fan^(0+128)
  7160  0662  0879               	movf	?___ftmul+1,w
  7161  0663  00C3               	movwf	(_ativa_fan+1)^(0+128)
  7162  0664  087A               	movf	?___ftmul+2,w
  7163  0665  00C4               	movwf	(_ativa_fan+2)^(0+128)
  7164                           
  7165                           ;main.c: 294: deltaV = (unsigned int)ativa_fan;
  7166  0666  0842               	movf	_ativa_fan^(0+128),w
  7167  0667  1283               	bcf	3,5	;RP0=0, select bank0
  7168  0668  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0669  00B0               	movwf	___fttol@f1
  7170  066A  1683               	bsf	3,5	;RP0=1, select bank1
  7171  066B  1303               	bcf	3,6	;RP1=0, select bank1
  7172  066C  0843               	movf	(_ativa_fan+1)^(0+128),w
  7173  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7174  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7175  066F  00B1               	movwf	___fttol@f1+1
  7176  0670  1683               	bsf	3,5	;RP0=1, select bank1
  7177  0671  1303               	bcf	3,6	;RP1=0, select bank1
  7178  0672  0844               	movf	(_ativa_fan+2)^(0+128),w
  7179  0673  1283               	bcf	3,5	;RP0=0, select bank0
  7180  0674  1303               	bcf	3,6	;RP1=0, select bank0
  7181  0675  00B2               	movwf	___fttol@f1+2
  7182  0676  160A  118A  24E0  120A  118A  	fcall	___fttol
  7183  067B  1283               	bcf	3,5	;RP0=0, select bank0
  7184  067C  1303               	bcf	3,6	;RP1=0, select bank0
  7185  067D  0831               	movf	?___fttol+1,w
  7186  067E  01EE               	clrf	_deltaV+1
  7187  067F  07EE               	addwf	_deltaV+1,f
  7188  0680  0830               	movf	?___fttol,w
  7189  0681  01ED               	clrf	_deltaV
  7190  0682  07ED               	addwf	_deltaV,f
  7191                           
  7192                           ;main.c: 295: setpointUI = (setpointUI / 20);
  7193  0683  3014               	movlw	20
  7194  0684  00F0               	movwf	i1___lwdiv@divisor
  7195  0685  3000               	movlw	0
  7196  0686  00F1               	movwf	i1___lwdiv@divisor+1
  7197  0687  1683               	bsf	3,5	;RP0=1, select bank1
  7198  0688  1303               	bcf	3,6	;RP1=0, select bank1
  7199  0689  086E               	movf	(_setpointUI+1)^(0+128),w
  7200  068A  01F3               	clrf	i1___lwdiv@dividend+1
  7201  068B  07F3               	addwf	i1___lwdiv@dividend+1,f
  7202  068C  086D               	movf	_setpointUI^(0+128),w
  7203  068D  01F2               	clrf	i1___lwdiv@dividend
  7204  068E  07F2               	addwf	i1___lwdiv@dividend,f
  7205  068F  160A  118A  22E7  120A  118A  	fcall	i1___lwdiv
  7206  0694  0871               	movf	?i1___lwdiv+1,w
  7207  0695  1683               	bsf	3,5	;RP0=1, select bank1
  7208  0696  1303               	bcf	3,6	;RP1=0, select bank1
  7209  0697  01EE               	clrf	(_setpointUI+1)^(0+128)
  7210  0698  07EE               	addwf	(_setpointUI+1)^(0+128),f
  7211  0699  0870               	movf	?i1___lwdiv,w
  7212  069A  01ED               	clrf	_setpointUI^(0+128)
  7213  069B  07ED               	addwf	_setpointUI^(0+128),f
  7214                           
  7215                           ;main.c: 297: if (freio = 1)
  7216  069C  3001               	movlw	1
  7217  069D  1283               	bcf	3,5	;RP0=0, select bank0
  7218  069E  1303               	bcf	3,6	;RP1=0, select bank0
  7219  069F  00D2               	movwf	Fuzzy@freio
  7220  06A0  3000               	movlw	0
  7221  06A1  00D3               	movwf	Fuzzy@freio+1
  7222                           
  7223                           ;main.c: 298: {
  7224                           ;main.c: 299: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  7225  06A2  3000               	movlw	0
  7226  06A3  00B0               	movwf	___ftge@ff1
  7227  06A4  3000               	movlw	0
  7228  06A5  00B1               	movwf	___ftge@ff1+1
  7229  06A6  3000               	movlw	0
  7230  06A7  00B2               	movwf	___ftge@ff1+2
  7231  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  7232  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  7233  06AA  0866               	movf	_tf^(0+128),w
  7234  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  7235  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  7236  06AD  00A3               	movwf	___ftadd@f1
  7237  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  7238  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  7239  06B0  0867               	movf	(_tf+1)^(0+128),w
  7240  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  7241  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  7242  06B3  00A4               	movwf	___ftadd@f1+1
  7243  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  7244  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  7245  06B6  0868               	movf	(_tf+2)^(0+128),w
  7246  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7247  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7248  06B9  00A5               	movwf	___ftadd@f1+2
  7249  06BA  086E               	movf	_deltaV+1,w
  7250  06BB  01F9               	clrf	___lwtoft@c+1
  7251  06BC  07F9               	addwf	___lwtoft@c+1,f
  7252  06BD  086D               	movf	_deltaV,w
  7253  06BE  01F8               	clrf	___lwtoft@c
  7254  06BF  07F8               	addwf	___lwtoft@c,f
  7255  06C0  160A  118A  209F  120A  118A  	fcall	___lwtoft
  7256  06C5  0878               	movf	?___lwtoft,w
  7257  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  7258  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  7259  06C8  00A6               	movwf	___ftadd@f2
  7260  06C9  0879               	movf	?___lwtoft+1,w
  7261  06CA  00A7               	movwf	___ftadd@f2+1
  7262  06CB  087A               	movf	?___lwtoft+2,w
  7263  06CC  00A8               	movwf	___ftadd@f2+2
  7264  06CD  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7265  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  7266  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  7267  06D4  0823               	movf	?___ftadd,w
  7268  06D5  00B3               	movwf	___ftge@ff2
  7269  06D6  0824               	movf	?___ftadd+1,w
  7270  06D7  00B4               	movwf	___ftge@ff2+1
  7271  06D8  0825               	movf	?___ftadd+2,w
  7272  06D9  00B5               	movwf	___ftge@ff2+2
  7273  06DA  160A  118A  23AE  120A  118A  	fcall	___ftge
  7274  06DF  1803               	btfsc	3,0
  7275  06E0  0008               	return
  7276  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  7277  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  7278  06E3  0866               	movf	_tf^(0+128),w
  7279  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  7280  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  7281  06E6  00A3               	movwf	___ftadd@f1
  7282  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  7283  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  7284  06E9  0867               	movf	(_tf+1)^(0+128),w
  7285  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  7286  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  7287  06EC  00A4               	movwf	___ftadd@f1+1
  7288  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  7289  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  7290  06EF  0868               	movf	(_tf+2)^(0+128),w
  7291  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  7292  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  7293  06F2  00A5               	movwf	___ftadd@f1+2
  7294  06F3  086E               	movf	_deltaV+1,w
  7295  06F4  01F9               	clrf	___lwtoft@c+1
  7296  06F5  07F9               	addwf	___lwtoft@c+1,f
  7297  06F6  086D               	movf	_deltaV,w
  7298  06F7  01F8               	clrf	___lwtoft@c
  7299  06F8  07F8               	addwf	___lwtoft@c,f
  7300  06F9  160A  118A  209F  120A  118A  	fcall	___lwtoft
  7301  06FE  0878               	movf	?___lwtoft,w
  7302  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  7303  0700  1303               	bcf	3,6	;RP1=0, select bank0
  7304  0701  00A6               	movwf	___ftadd@f2
  7305  0702  0879               	movf	?___lwtoft+1,w
  7306  0703  00A7               	movwf	___ftadd@f2+1
  7307  0704  087A               	movf	?___lwtoft+2,w
  7308  0705  00A8               	movwf	___ftadd@f2+2
  7309  0706  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7310  070B  1283               	bcf	3,5	;RP0=0, select bank0
  7311  070C  1303               	bcf	3,6	;RP1=0, select bank0
  7312  070D  0823               	movf	?___ftadd,w
  7313  070E  00B0               	movwf	___ftge@ff1
  7314  070F  0824               	movf	?___ftadd+1,w
  7315  0710  00B1               	movwf	___ftge@ff1+1
  7316  0711  0825               	movf	?___ftadd+2,w
  7317  0712  00B2               	movwf	___ftge@ff1+2
  7318  0713  3000               	movlw	0
  7319  0714  00B3               	movwf	___ftge@ff2
  7320  0715  307F               	movlw	127
  7321  0716  00B4               	movwf	___ftge@ff2+1
  7322  0717  3044               	movlw	68
  7323  0718  00B5               	movwf	___ftge@ff2+2
  7324  0719  160A  118A  23AE  120A  118A  	fcall	___ftge
  7325  071E  1803               	btfsc	3,0
  7326  071F  0008               	return
  7327                           
  7328                           ;main.c: 300: {
  7329                           ;main.c: 301: PWM_DutyCycle2(tf + deltaV);
  7330  0720  1283               	bcf	3,5	;RP0=0, select bank0
  7331  0721  1303               	bcf	3,6	;RP1=0, select bank0
  7332  0722  086E               	movf	_deltaV+1,w
  7333  0723  01F9               	clrf	___lwtoft@c+1
  7334  0724  07F9               	addwf	___lwtoft@c+1,f
  7335  0725  086D               	movf	_deltaV,w
  7336  0726  01F8               	clrf	___lwtoft@c
  7337  0727  07F8               	addwf	___lwtoft@c,f
  7338  0728  160A  118A  209F  120A  118A  	fcall	___lwtoft
  7339  072D  0878               	movf	?___lwtoft,w
  7340  072E  1283               	bcf	3,5	;RP0=0, select bank0
  7341  072F  1303               	bcf	3,6	;RP1=0, select bank0
  7342  0730  00A6               	movwf	___ftadd@f2
  7343  0731  0879               	movf	?___lwtoft+1,w
  7344  0732  00A7               	movwf	___ftadd@f2+1
  7345  0733  087A               	movf	?___lwtoft+2,w
  7346  0734  00A8               	movwf	___ftadd@f2+2
  7347  0735  1683               	bsf	3,5	;RP0=1, select bank1
  7348  0736  1303               	bcf	3,6	;RP1=0, select bank1
  7349  0737  0866               	movf	_tf^(0+128),w
  7350  0738  1283               	bcf	3,5	;RP0=0, select bank0
  7351  0739  1303               	bcf	3,6	;RP1=0, select bank0
  7352  073A  00A3               	movwf	___ftadd@f1
  7353  073B  1683               	bsf	3,5	;RP0=1, select bank1
  7354  073C  1303               	bcf	3,6	;RP1=0, select bank1
  7355  073D  0867               	movf	(_tf+1)^(0+128),w
  7356  073E  1283               	bcf	3,5	;RP0=0, select bank0
  7357  073F  1303               	bcf	3,6	;RP1=0, select bank0
  7358  0740  00A4               	movwf	___ftadd@f1+1
  7359  0741  1683               	bsf	3,5	;RP0=1, select bank1
  7360  0742  1303               	bcf	3,6	;RP1=0, select bank1
  7361  0743  0868               	movf	(_tf+2)^(0+128),w
  7362  0744  1283               	bcf	3,5	;RP0=0, select bank0
  7363  0745  1303               	bcf	3,6	;RP1=0, select bank0
  7364  0746  00A5               	movwf	___ftadd@f1+2
  7365  0747  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7366  074C  1283               	bcf	3,5	;RP0=0, select bank0
  7367  074D  1303               	bcf	3,6	;RP1=0, select bank0
  7368  074E  0823               	movf	?___ftadd,w
  7369  074F  00B0               	movwf	___fttol@f1
  7370  0750  0824               	movf	?___ftadd+1,w
  7371  0751  00B1               	movwf	___fttol@f1+1
  7372  0752  0825               	movf	?___ftadd+2,w
  7373  0753  00B2               	movwf	___fttol@f1+2
  7374  0754  160A  118A  24E0  120A  118A  	fcall	___fttol
  7375  0759  1283               	bcf	3,5	;RP0=0, select bank0
  7376  075A  1303               	bcf	3,6	;RP1=0, select bank0
  7377  075B  0831               	movf	?___fttol+1,w
  7378  075C  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  7379  075D  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  7380  075E  0830               	movf	?___fttol,w
  7381  075F  01BE               	clrf	i1PWM_DutyCycle2@valor
  7382  0760  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  7383  0761  160A  118A  20E1   	fcall	i1_PWM_DutyCycle2
  7384                           
  7385                           ;main.c: 302: }
  7386                           ;main.c: 303: }else
  7387  0764  0008               	return
  7388  0765                     __end_of_Fuzzy:	
  7389                           ;main.c: 306: {
  7390                           ;main.c: 307: PWM_DutyCycle2(tf - deltaV);
  7391                           
  7392                           ;main.c: 304: {
  7393                           ;main.c: 305: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  7394                           
  7395                           
  7396                           	psect	text29
  7397  12E7                     __ptext29:	
  7398 ;; *************** function i1___lwdiv *****************
  7399 ;; Defined at:
  7400 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  divisor         2    0[COMMON] unsigned int 
  7403 ;;  dividend        2    2[COMMON] unsigned int 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7406 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  2    0[COMMON] unsigned int 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7416 ;;      Params:         4       0       0       0       0
  7417 ;;      Locals:         3       0       0       0       0
  7418 ;;      Temps:          1       0       0       0       0
  7419 ;;      Totals:         8       0       0       0       0
  7420 ;;Total ram usage:        8 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_Fuzzy
  7426 ;;		_ISR
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function i1___lwdiv
  7432  12E7                     i1___lwdiv:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7436  12E7  01F5               	clrf	i1___lwdiv@quotient
  7437  12E8  01F6               	clrf	i1___lwdiv@quotient+1
  7438  12E9  0871               	movf	i1___lwdiv@divisor+1,w
  7439  12EA  0470               	iorwf	i1___lwdiv@divisor,w
  7440  12EB  1903               	skipnz
  7441  12EC  2B1E               	goto	i1l2751
  7442  12ED  01F7               	clrf	i1___lwdiv@counter
  7443  12EE  0AF7               	incf	i1___lwdiv@counter,f
  7444  12EF                     i1l2739:	
  7445  12EF  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  7446  12F0  2AFD               	goto	i1l2741
  7447  12F1  3001               	movlw	1
  7448  12F2                     u333_25:	
  7449  12F2  1003               	clrc
  7450  12F3  0DF0               	rlf	i1___lwdiv@divisor,f
  7451  12F4  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7452  12F5  3EFF               	addlw	-1
  7453  12F6  1D03               	skipz
  7454  12F7  2AF2               	goto	u333_25
  7455  12F8  3001               	movlw	1
  7456  12F9  00F4               	movwf	??i1___lwdiv
  7457  12FA  0874               	movf	??i1___lwdiv,w
  7458  12FB  07F7               	addwf	i1___lwdiv@counter,f
  7459  12FC  2AEF               	goto	i1l2739
  7460  12FD                     i1l2741:	
  7461  12FD  3001               	movlw	1
  7462  12FE                     u335_25:	
  7463  12FE  1003               	clrc
  7464  12FF  0DF5               	rlf	i1___lwdiv@quotient,f
  7465  1300  0DF6               	rlf	i1___lwdiv@quotient+1,f
  7466  1301  3EFF               	addlw	-1
  7467  1302  1D03               	skipz
  7468  1303  2AFE               	goto	u335_25
  7469  1304  0871               	movf	i1___lwdiv@divisor+1,w
  7470  1305  0273               	subwf	i1___lwdiv@dividend+1,w
  7471  1306  1D03               	skipz
  7472  1307  2B0A               	goto	u336_25
  7473  1308  0870               	movf	i1___lwdiv@divisor,w
  7474  1309  0272               	subwf	i1___lwdiv@dividend,w
  7475  130A                     u336_25:	
  7476  130A  1C03               	skipc
  7477  130B  2B13               	goto	i1l2747
  7478  130C  0870               	movf	i1___lwdiv@divisor,w
  7479  130D  02F2               	subwf	i1___lwdiv@dividend,f
  7480  130E  0871               	movf	i1___lwdiv@divisor+1,w
  7481  130F  1C03               	skipc
  7482  1310  03F3               	decf	i1___lwdiv@dividend+1,f
  7483  1311  02F3               	subwf	i1___lwdiv@dividend+1,f
  7484  1312  1475               	bsf	i1___lwdiv@quotient,0
  7485  1313                     i1l2747:	
  7486  1313  3001               	movlw	1
  7487  1314                     u337_25:	
  7488  1314  1003               	clrc
  7489  1315  0CF1               	rrf	i1___lwdiv@divisor+1,f
  7490  1316  0CF0               	rrf	i1___lwdiv@divisor,f
  7491  1317  3EFF               	addlw	-1
  7492  1318  1D03               	skipz
  7493  1319  2B14               	goto	u337_25
  7494  131A  3001               	movlw	1
  7495  131B  02F7               	subwf	i1___lwdiv@counter,f
  7496  131C  1D03               	btfss	3,2
  7497  131D  2AFD               	goto	i1l2741
  7498  131E                     i1l2751:	
  7499  131E  0876               	movf	i1___lwdiv@quotient+1,w
  7500  131F  01F1               	clrf	?i1___lwdiv+1
  7501  1320  07F1               	addwf	?i1___lwdiv+1,f
  7502  1321  0875               	movf	i1___lwdiv@quotient,w
  7503  1322  01F0               	clrf	?i1___lwdiv
  7504  1323  07F0               	addwf	?i1___lwdiv,f
  7505  1324  0008               	return
  7506  1325                     __end_ofi1___lwdiv:	
  7507                           
  7508                           	psect	text30
  7509  10E1                     __ptext30:	
  7510 ;; *************** function i1_PWM_DutyCycle2 *****************
  7511 ;; Defined at:
  7512 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  valor           2   30[BANK0 ] int 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;		None               void
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7526 ;;      Params:         0       2       0       0       0
  7527 ;;      Locals:         0       0       0       0       0
  7528 ;;      Temps:          2       0       0       0       0
  7529 ;;      Totals:         2       2       0       0       0
  7530 ;;Total ram usage:        4 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_Fuzzy
  7536 ;;		_ISR
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function i1_PWM_DutyCycle2
  7542  10E1                     i1_PWM_DutyCycle2:	
  7543                           
  7544                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7548  10E1  1283               	bcf	3,5	;RP0=0, select bank0
  7549  10E2  1303               	bcf	3,6	;RP1=0, select bank0
  7550  10E3  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  7551  10E4  00FD               	movwf	??i1_PWM_DutyCycle2+1
  7552  10E5  083E               	movf	i1PWM_DutyCycle2@valor,w
  7553  10E6  00FC               	movwf	??i1_PWM_DutyCycle2
  7554  10E7  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7555  10E8  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7556  10E9  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7557  10EA  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7558  10EB  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7559  10EC  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7560  10ED  087C               	movf	??i1_PWM_DutyCycle2,w
  7561  10EE  009B               	movwf	27	;volatile
  7562                           
  7563                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7564  10EF  083E               	movf	i1PWM_DutyCycle2@valor,w
  7565  10F0  00FC               	movwf	??i1_PWM_DutyCycle2
  7566  10F1  3003               	movlw	3
  7567  10F2                     u331_25:	
  7568  10F2  1003               	clrc
  7569  10F3  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  7570  10F4  3EFF               	addlw	-1
  7571  10F5  1D03               	skipz
  7572  10F6  28F2               	goto	u331_25
  7573  10F7  1003               	clrc
  7574  10F8  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  7575  10F9  380C               	iorlw	12
  7576  10FA  009D               	movwf	29	;volatile
  7577  10FB  0008               	return
  7578  10FC                     __end_ofi1_PWM_DutyCycle2:	
  7579                           
  7580                           	psect	text31
  7581  08EA                     __ptext31:	
  7582 ;; *************** function _trimf *****************
  7583 ;; Defined at:
  7584 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  x               3   32[BANK0 ] float 
  7587 ;;  a               3   35[BANK0 ] float 
  7588 ;;  b               3   38[BANK0 ] float 
  7589 ;;  c               3   41[BANK0 ] float 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  ua              3   44[BANK0 ] float 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  3   32[BANK0 ] float 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         0      12       0       0       0
  7602 ;;      Locals:         0       3       0       0       0
  7603 ;;      Temps:          0       0       0       0       0
  7604 ;;      Totals:         0      15       0       0       0
  7605 ;;Total ram usage:       15 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    2
  7608 ;; This function calls:
  7609 ;;		___ftadd
  7610 ;;		___ftdiv
  7611 ;;		___ftge
  7612 ;;		___ftneg
  7613 ;; This function is called by:
  7614 ;;		_Fuzzy
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           
  7619                           ;psect for function _trimf
  7620  08EA                     _trimf:	
  7621                           
  7622                           ;main.c: 70: float ua = 0;
  7623                           
  7624                           ;incstack = 0
  7625                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7626  08EA  3000               	movlw	0
  7627  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  7628  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  7629  08ED  00CC               	movwf	trimf@ua
  7630  08EE  3000               	movlw	0
  7631  08EF  00CD               	movwf	trimf@ua+1
  7632  08F0  3000               	movlw	0
  7633  08F1  00CE               	movwf	trimf@ua+2
  7634                           
  7635                           ;main.c: 72: if (x <= a)
  7636  08F2  0843               	movf	trimf@a,w
  7637  08F3  00B0               	movwf	___ftge@ff1
  7638  08F4  0844               	movf	trimf@a+1,w
  7639  08F5  00B1               	movwf	___ftge@ff1+1
  7640  08F6  0845               	movf	trimf@a+2,w
  7641  08F7  00B2               	movwf	___ftge@ff1+2
  7642  08F8  0840               	movf	trimf@x,w
  7643  08F9  00B3               	movwf	___ftge@ff2
  7644  08FA  0841               	movf	trimf@x+1,w
  7645  08FB  00B4               	movwf	___ftge@ff2+1
  7646  08FC  0842               	movf	trimf@x+2,w
  7647  08FD  00B5               	movwf	___ftge@ff2+2
  7648  08FE  160A  118A  23AE  120A  158A  	fcall	___ftge
  7649  0903  1803               	btfsc	3,0
  7650  0904  29FD               	goto	L12
  7651                           
  7652                           ;main.c: 74: else if ((a < x) && (x <= b))
  7653                           
  7654                           ;main.c: 73: ua = 0;
  7655  0905  1283               	bcf	3,5	;RP0=0, select bank0
  7656  0906  1303               	bcf	3,6	;RP1=0, select bank0
  7657  0907  0843               	movf	trimf@a,w
  7658  0908  00B0               	movwf	___ftge@ff1
  7659  0909  0844               	movf	trimf@a+1,w
  7660  090A  00B1               	movwf	___ftge@ff1+1
  7661  090B  0845               	movf	trimf@a+2,w
  7662  090C  00B2               	movwf	___ftge@ff1+2
  7663  090D  0840               	movf	trimf@x,w
  7664  090E  00B3               	movwf	___ftge@ff2
  7665  090F  0841               	movf	trimf@x+1,w
  7666  0910  00B4               	movwf	___ftge@ff2+1
  7667  0911  0842               	movf	trimf@x+2,w
  7668  0912  00B5               	movwf	___ftge@ff2+2
  7669  0913  160A  118A  23AE  120A  158A  	fcall	___ftge
  7670  0918  1803               	btfsc	3,0
  7671  0919  2963               	goto	i1l2435
  7672  091A  1283               	bcf	3,5	;RP0=0, select bank0
  7673  091B  1303               	bcf	3,6	;RP1=0, select bank0
  7674  091C  0846               	movf	trimf@b,w
  7675  091D  00B0               	movwf	___ftge@ff1
  7676  091E  0847               	movf	trimf@b+1,w
  7677  091F  00B1               	movwf	___ftge@ff1+1
  7678  0920  0848               	movf	trimf@b+2,w
  7679  0921  00B2               	movwf	___ftge@ff1+2
  7680  0922  0840               	movf	trimf@x,w
  7681  0923  00B3               	movwf	___ftge@ff2
  7682  0924  0841               	movf	trimf@x+1,w
  7683  0925  00B4               	movwf	___ftge@ff2+1
  7684  0926  0842               	movf	trimf@x+2,w
  7685  0927  00B5               	movwf	___ftge@ff2+2
  7686  0928  160A  118A  23AE  120A  158A  	fcall	___ftge
  7687  092D  1C03               	btfss	3,0
  7688  092E  2963               	goto	i1l2435
  7689                           
  7690                           ;main.c: 75: ua = ((x - a) / (b - a));
  7691  092F  1283               	bcf	3,5	;RP0=0, select bank0
  7692  0930  1303               	bcf	3,6	;RP1=0, select bank0
  7693  0931  0846               	movf	trimf@b,w
  7694  0932  00A3               	movwf	___ftadd@f1
  7695  0933  0847               	movf	trimf@b+1,w
  7696  0934  00A4               	movwf	___ftadd@f1+1
  7697  0935  0848               	movf	trimf@b+2,w
  7698  0936  00A5               	movwf	___ftadd@f1+2
  7699  0937  0843               	movf	trimf@a,w
  7700  0938  00A0               	movwf	___ftneg@f1
  7701  0939  0844               	movf	trimf@a+1,w
  7702  093A  00A1               	movwf	___ftneg@f1+1
  7703  093B  0845               	movf	trimf@a+2,w
  7704  093C  00A2               	movwf	___ftneg@f1+2
  7705  093D  160A  118A  2057  120A  158A  	fcall	___ftneg
  7706  0942  1283               	bcf	3,5	;RP0=0, select bank0
  7707  0943  1303               	bcf	3,6	;RP1=0, select bank0
  7708  0944  0820               	movf	?___ftneg,w
  7709  0945  00A6               	movwf	___ftadd@f2
  7710  0946  0821               	movf	?___ftneg+1,w
  7711  0947  00A7               	movwf	___ftadd@f2+1
  7712  0948  0822               	movf	?___ftneg+2,w
  7713  0949  00A8               	movwf	___ftadd@f2+2
  7714  094A  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7715  094F  1283               	bcf	3,5	;RP0=0, select bank0
  7716  0950  1303               	bcf	3,6	;RP1=0, select bank0
  7717  0951  0823               	movf	?___ftadd,w
  7718  0952  00B0               	movwf	___ftdiv@f2
  7719  0953  0824               	movf	?___ftadd+1,w
  7720  0954  00B1               	movwf	___ftdiv@f2+1
  7721  0955  0825               	movf	?___ftadd+2,w
  7722  0956  00B2               	movwf	___ftdiv@f2+2
  7723  0957  0840               	movf	trimf@x,w
  7724  0958  00A3               	movwf	___ftadd@f1
  7725  0959  0841               	movf	trimf@x+1,w
  7726  095A  00A4               	movwf	___ftadd@f1+1
  7727  095B  0842               	movf	trimf@x+2,w
  7728  095C  00A5               	movwf	___ftadd@f1+2
  7729  095D  0843               	movf	trimf@a,w
  7730  095E  00A0               	movwf	___ftneg@f1
  7731  095F  0844               	movf	trimf@a+1,w
  7732  0960  00A1               	movwf	___ftneg@f1+1
  7733  0961  0845               	movf	trimf@a+2,w
  7734  0962  29C0               	goto	L13
  7735  0963                     i1l2435:	
  7736                           
  7737                           ;main.c: 76: else if ((b < x) && (x <= c))
  7738  0963  1283               	bcf	3,5	;RP0=0, select bank0
  7739  0964  1303               	bcf	3,6	;RP1=0, select bank0
  7740  0965  0846               	movf	trimf@b,w
  7741  0966  00B0               	movwf	___ftge@ff1
  7742  0967  0847               	movf	trimf@b+1,w
  7743  0968  00B1               	movwf	___ftge@ff1+1
  7744  0969  0848               	movf	trimf@b+2,w
  7745  096A  00B2               	movwf	___ftge@ff1+2
  7746  096B  0840               	movf	trimf@x,w
  7747  096C  00B3               	movwf	___ftge@ff2
  7748  096D  0841               	movf	trimf@x+1,w
  7749  096E  00B4               	movwf	___ftge@ff2+1
  7750  096F  0842               	movf	trimf@x+2,w
  7751  0970  00B5               	movwf	___ftge@ff2+2
  7752  0971  160A  118A  23AE  120A  158A  	fcall	___ftge
  7753  0976  1803               	btfsc	3,0
  7754  0977  29E8               	goto	i1l2441
  7755  0978  1283               	bcf	3,5	;RP0=0, select bank0
  7756  0979  1303               	bcf	3,6	;RP1=0, select bank0
  7757  097A  0849               	movf	trimf@c,w
  7758  097B  00B0               	movwf	___ftge@ff1
  7759  097C  084A               	movf	trimf@c+1,w
  7760  097D  00B1               	movwf	___ftge@ff1+1
  7761  097E  084B               	movf	trimf@c+2,w
  7762  097F  00B2               	movwf	___ftge@ff1+2
  7763  0980  0840               	movf	trimf@x,w
  7764  0981  00B3               	movwf	___ftge@ff2
  7765  0982  0841               	movf	trimf@x+1,w
  7766  0983  00B4               	movwf	___ftge@ff2+1
  7767  0984  0842               	movf	trimf@x+2,w
  7768  0985  00B5               	movwf	___ftge@ff2+2
  7769  0986  160A  118A  23AE  120A  158A  	fcall	___ftge
  7770  098B  1C03               	btfss	3,0
  7771  098C  29E8               	goto	i1l2441
  7772                           
  7773                           ;main.c: 77: ua = ((x - c) / (b - c));
  7774  098D  1283               	bcf	3,5	;RP0=0, select bank0
  7775  098E  1303               	bcf	3,6	;RP1=0, select bank0
  7776  098F  0846               	movf	trimf@b,w
  7777  0990  00A3               	movwf	___ftadd@f1
  7778  0991  0847               	movf	trimf@b+1,w
  7779  0992  00A4               	movwf	___ftadd@f1+1
  7780  0993  0848               	movf	trimf@b+2,w
  7781  0994  00A5               	movwf	___ftadd@f1+2
  7782  0995  0849               	movf	trimf@c,w
  7783  0996  00A0               	movwf	___ftneg@f1
  7784  0997  084A               	movf	trimf@c+1,w
  7785  0998  00A1               	movwf	___ftneg@f1+1
  7786  0999  084B               	movf	trimf@c+2,w
  7787  099A  00A2               	movwf	___ftneg@f1+2
  7788  099B  160A  118A  2057  120A  158A  	fcall	___ftneg
  7789  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  7790  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  7791  09A2  0820               	movf	?___ftneg,w
  7792  09A3  00A6               	movwf	___ftadd@f2
  7793  09A4  0821               	movf	?___ftneg+1,w
  7794  09A5  00A7               	movwf	___ftadd@f2+1
  7795  09A6  0822               	movf	?___ftneg+2,w
  7796  09A7  00A8               	movwf	___ftadd@f2+2
  7797  09A8  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7798  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  7799  09AE  1303               	bcf	3,6	;RP1=0, select bank0
  7800  09AF  0823               	movf	?___ftadd,w
  7801  09B0  00B0               	movwf	___ftdiv@f2
  7802  09B1  0824               	movf	?___ftadd+1,w
  7803  09B2  00B1               	movwf	___ftdiv@f2+1
  7804  09B3  0825               	movf	?___ftadd+2,w
  7805  09B4  00B2               	movwf	___ftdiv@f2+2
  7806  09B5  0840               	movf	trimf@x,w
  7807  09B6  00A3               	movwf	___ftadd@f1
  7808  09B7  0841               	movf	trimf@x+1,w
  7809  09B8  00A4               	movwf	___ftadd@f1+1
  7810  09B9  0842               	movf	trimf@x+2,w
  7811  09BA  00A5               	movwf	___ftadd@f1+2
  7812  09BB  0849               	movf	trimf@c,w
  7813  09BC  00A0               	movwf	___ftneg@f1
  7814  09BD  084A               	movf	trimf@c+1,w
  7815  09BE  00A1               	movwf	___ftneg@f1+1
  7816  09BF  084B               	movf	trimf@c+2,w
  7817  09C0                     L13:	
  7818  09C0  00A2               	movwf	___ftneg@f1+2
  7819  09C1  160A  118A  2057  120A  158A  	fcall	___ftneg
  7820  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  7821  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  7822  09C8  0820               	movf	?___ftneg,w
  7823  09C9  00A6               	movwf	___ftadd@f2
  7824  09CA  0821               	movf	?___ftneg+1,w
  7825  09CB  00A7               	movwf	___ftadd@f2+1
  7826  09CC  0822               	movf	?___ftneg+2,w
  7827  09CD  00A8               	movwf	___ftadd@f2+2
  7828  09CE  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7829  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  7830  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  7831  09D5  0823               	movf	?___ftadd,w
  7832  09D6  00B3               	movwf	___ftdiv@f1
  7833  09D7  0824               	movf	?___ftadd+1,w
  7834  09D8  00B4               	movwf	___ftdiv@f1+1
  7835  09D9  0825               	movf	?___ftadd+2,w
  7836  09DA  00B5               	movwf	___ftdiv@f1+2
  7837  09DB  160A  118A  256E  120A  158A  	fcall	___ftdiv
  7838  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  7839  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  7840  09E2  0830               	movf	?___ftdiv,w
  7841  09E3  00CC               	movwf	trimf@ua
  7842  09E4  0831               	movf	?___ftdiv+1,w
  7843  09E5  00CD               	movwf	trimf@ua+1
  7844  09E6  0832               	movf	?___ftdiv+2,w
  7845  09E7  2A04               	goto	L10
  7846  09E8                     i1l2441:	
  7847                           
  7848                           ;main.c: 78: else if (x > c)
  7849  09E8  1283               	bcf	3,5	;RP0=0, select bank0
  7850  09E9  1303               	bcf	3,6	;RP1=0, select bank0
  7851  09EA  0849               	movf	trimf@c,w
  7852  09EB  00B0               	movwf	___ftge@ff1
  7853  09EC  084A               	movf	trimf@c+1,w
  7854  09ED  00B1               	movwf	___ftge@ff1+1
  7855  09EE  084B               	movf	trimf@c+2,w
  7856  09EF  00B2               	movwf	___ftge@ff1+2
  7857  09F0  0840               	movf	trimf@x,w
  7858  09F1  00B3               	movwf	___ftge@ff2
  7859  09F2  0841               	movf	trimf@x+1,w
  7860  09F3  00B4               	movwf	___ftge@ff2+1
  7861  09F4  0842               	movf	trimf@x+2,w
  7862  09F5  00B5               	movwf	___ftge@ff2+2
  7863  09F6  160A  118A  23AE  120A  158A  	fcall	___ftge
  7864  09FB  1803               	btfsc	3,0
  7865  09FC  2A05               	goto	i1l118
  7866  09FD                     L12:	
  7867                           
  7868                           ;main.c: 79: ua = 0;
  7869  09FD  3000               	movlw	0
  7870  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  7871  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  7872  0A00  00CC               	movwf	trimf@ua
  7873  0A01  3000               	movlw	0
  7874  0A02  00CD               	movwf	trimf@ua+1
  7875  0A03  3000               	movlw	0
  7876  0A04                     L10:	
  7877  0A04  00CE               	movwf	trimf@ua+2
  7878  0A05                     i1l118:	
  7879                           
  7880                           ;main.c: 81: return(ua);
  7881  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  7882  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  7883  0A07  084C               	movf	trimf@ua,w
  7884  0A08  00C0               	movwf	?_trimf
  7885  0A09  084D               	movf	trimf@ua+1,w
  7886  0A0A  00C1               	movwf	?_trimf+1
  7887  0A0B  084E               	movf	trimf@ua+2,w
  7888  0A0C  00C2               	movwf	?_trimf+2
  7889  0A0D  0008               	return
  7890  0A0E                     __end_of_trimf:	
  7891                           
  7892                           	psect	text32
  7893  0B5F                     __ptext32:	
  7894 ;; *************** function _trapmf *****************
  7895 ;; Defined at:
  7896 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  x               3   32[BANK0 ] float 
  7899 ;;  a               3   35[BANK0 ] float 
  7900 ;;  b               3   38[BANK0 ] float 
  7901 ;;  c               3   41[BANK0 ] float 
  7902 ;;  d               3   44[BANK0 ] float 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  ua              3   47[BANK0 ] float 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  3   32[BANK0 ] float 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0, pclath, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7914 ;;      Params:         0      15       0       0       0
  7915 ;;      Locals:         0       3       0       0       0
  7916 ;;      Temps:          0       0       0       0       0
  7917 ;;      Totals:         0      18       0       0       0
  7918 ;;Total ram usage:       18 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    2
  7921 ;; This function calls:
  7922 ;;		___ftadd
  7923 ;;		___ftdiv
  7924 ;;		___ftge
  7925 ;;		___ftneg
  7926 ;; This function is called by:
  7927 ;;		_Fuzzy
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function _trapmf
  7933  0B5F                     _trapmf:	
  7934                           
  7935                           ;main.c: 89: float ua = 0;
  7936                           
  7937                           ;incstack = 0
  7938                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7939  0B5F  3000               	movlw	0
  7940  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  7941  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  7942  0B62  00CF               	movwf	trapmf@ua
  7943  0B63  3000               	movlw	0
  7944  0B64  00D0               	movwf	trapmf@ua+1
  7945  0B65  3000               	movlw	0
  7946  0B66  00D1               	movwf	trapmf@ua+2
  7947                           
  7948                           ;main.c: 91: if (x <= a)
  7949  0B67  0843               	movf	trapmf@a,w
  7950  0B68  00B0               	movwf	___ftge@ff1
  7951  0B69  0844               	movf	trapmf@a+1,w
  7952  0B6A  00B1               	movwf	___ftge@ff1+1
  7953  0B6B  0845               	movf	trapmf@a+2,w
  7954  0B6C  00B2               	movwf	___ftge@ff1+2
  7955  0B6D  0840               	movf	trapmf@x,w
  7956  0B6E  00B3               	movwf	___ftge@ff2
  7957  0B6F  0841               	movf	trapmf@x+1,w
  7958  0B70  00B4               	movwf	___ftge@ff2+1
  7959  0B71  0842               	movf	trapmf@x+2,w
  7960  0B72  00B5               	movwf	___ftge@ff2+2
  7961  0B73  160A  118A  23AE  120A  158A  	fcall	___ftge
  7962  0B78  1803               	btfsc	3,0
  7963  0B79  2CA4               	goto	L18
  7964                           
  7965                           ;main.c: 93: else if ((a < x) && (x <= b))
  7966                           
  7967                           ;main.c: 92: ua = 0;
  7968  0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  7970  0B7C  0843               	movf	trapmf@a,w
  7971  0B7D  00B0               	movwf	___ftge@ff1
  7972  0B7E  0844               	movf	trapmf@a+1,w
  7973  0B7F  00B1               	movwf	___ftge@ff1+1
  7974  0B80  0845               	movf	trapmf@a+2,w
  7975  0B81  00B2               	movwf	___ftge@ff1+2
  7976  0B82  0840               	movf	trapmf@x,w
  7977  0B83  00B3               	movwf	___ftge@ff2
  7978  0B84  0841               	movf	trapmf@x+1,w
  7979  0B85  00B4               	movwf	___ftge@ff2+1
  7980  0B86  0842               	movf	trapmf@x+2,w
  7981  0B87  00B5               	movwf	___ftge@ff2+2
  7982  0B88  160A  118A  23AE  120A  158A  	fcall	___ftge
  7983  0B8D  1803               	btfsc	3,0
  7984  0B8E  2BD8               	goto	i1l2459
  7985  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  7986  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  7987  0B91  0846               	movf	trapmf@b,w
  7988  0B92  00B0               	movwf	___ftge@ff1
  7989  0B93  0847               	movf	trapmf@b+1,w
  7990  0B94  00B1               	movwf	___ftge@ff1+1
  7991  0B95  0848               	movf	trapmf@b+2,w
  7992  0B96  00B2               	movwf	___ftge@ff1+2
  7993  0B97  0840               	movf	trapmf@x,w
  7994  0B98  00B3               	movwf	___ftge@ff2
  7995  0B99  0841               	movf	trapmf@x+1,w
  7996  0B9A  00B4               	movwf	___ftge@ff2+1
  7997  0B9B  0842               	movf	trapmf@x+2,w
  7998  0B9C  00B5               	movwf	___ftge@ff2+2
  7999  0B9D  160A  118A  23AE  120A  158A  	fcall	___ftge
  8000  0BA2  1C03               	btfss	3,0
  8001  0BA3  2BD8               	goto	i1l2459
  8002                           
  8003                           ;main.c: 94: ua = ((x - a) / (b - a));
  8004  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0BA6  0846               	movf	trapmf@b,w
  8007  0BA7  00A3               	movwf	___ftadd@f1
  8008  0BA8  0847               	movf	trapmf@b+1,w
  8009  0BA9  00A4               	movwf	___ftadd@f1+1
  8010  0BAA  0848               	movf	trapmf@b+2,w
  8011  0BAB  00A5               	movwf	___ftadd@f1+2
  8012  0BAC  0843               	movf	trapmf@a,w
  8013  0BAD  00A0               	movwf	___ftneg@f1
  8014  0BAE  0844               	movf	trapmf@a+1,w
  8015  0BAF  00A1               	movwf	___ftneg@f1+1
  8016  0BB0  0845               	movf	trapmf@a+2,w
  8017  0BB1  00A2               	movwf	___ftneg@f1+2
  8018  0BB2  160A  118A  2057  120A  158A  	fcall	___ftneg
  8019  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  8020  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  8021  0BB9  0820               	movf	?___ftneg,w
  8022  0BBA  00A6               	movwf	___ftadd@f2
  8023  0BBB  0821               	movf	?___ftneg+1,w
  8024  0BBC  00A7               	movwf	___ftadd@f2+1
  8025  0BBD  0822               	movf	?___ftneg+2,w
  8026  0BBE  00A8               	movwf	___ftadd@f2+2
  8027  0BBF  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8028  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  8029  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  8030  0BC6  0823               	movf	?___ftadd,w
  8031  0BC7  00B0               	movwf	___ftdiv@f2
  8032  0BC8  0824               	movf	?___ftadd+1,w
  8033  0BC9  00B1               	movwf	___ftdiv@f2+1
  8034  0BCA  0825               	movf	?___ftadd+2,w
  8035  0BCB  00B2               	movwf	___ftdiv@f2+2
  8036  0BCC  0840               	movf	trapmf@x,w
  8037  0BCD  00A3               	movwf	___ftadd@f1
  8038  0BCE  0841               	movf	trapmf@x+1,w
  8039  0BCF  00A4               	movwf	___ftadd@f1+1
  8040  0BD0  0842               	movf	trapmf@x+2,w
  8041  0BD1  00A5               	movwf	___ftadd@f1+2
  8042  0BD2  0843               	movf	trapmf@a,w
  8043  0BD3  00A0               	movwf	___ftneg@f1
  8044  0BD4  0844               	movf	trapmf@a+1,w
  8045  0BD5  00A1               	movwf	___ftneg@f1+1
  8046  0BD6  0845               	movf	trapmf@a+2,w
  8047  0BD7  2C67               	goto	L20
  8048  0BD8                     i1l2459:	
  8049                           
  8050                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8051  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  8052  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  8053  0BDA  0840               	movf	trapmf@x,w
  8054  0BDB  00B0               	movwf	___ftge@ff1
  8055  0BDC  0841               	movf	trapmf@x+1,w
  8056  0BDD  00B1               	movwf	___ftge@ff1+1
  8057  0BDE  0842               	movf	trapmf@x+2,w
  8058  0BDF  00B2               	movwf	___ftge@ff1+2
  8059  0BE0  0846               	movf	trapmf@b,w
  8060  0BE1  00B3               	movwf	___ftge@ff2
  8061  0BE2  0847               	movf	trapmf@b+1,w
  8062  0BE3  00B4               	movwf	___ftge@ff2+1
  8063  0BE4  0848               	movf	trapmf@b+2,w
  8064  0BE5  00B5               	movwf	___ftge@ff2+2
  8065  0BE6  160A  118A  23AE  120A  158A  	fcall	___ftge
  8066  0BEB  1C03               	btfss	3,0
  8067  0BEC  2C0A               	goto	i1l2465
  8068  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  8069  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  8070  0BEF  0849               	movf	trapmf@c,w
  8071  0BF0  00B0               	movwf	___ftge@ff1
  8072  0BF1  084A               	movf	trapmf@c+1,w
  8073  0BF2  00B1               	movwf	___ftge@ff1+1
  8074  0BF3  084B               	movf	trapmf@c+2,w
  8075  0BF4  00B2               	movwf	___ftge@ff1+2
  8076  0BF5  0840               	movf	trapmf@x,w
  8077  0BF6  00B3               	movwf	___ftge@ff2
  8078  0BF7  0841               	movf	trapmf@x+1,w
  8079  0BF8  00B4               	movwf	___ftge@ff2+1
  8080  0BF9  0842               	movf	trapmf@x+2,w
  8081  0BFA  00B5               	movwf	___ftge@ff2+2
  8082  0BFB  160A  118A  23AE  120A  158A  	fcall	___ftge
  8083  0C00  1C03               	btfss	3,0
  8084  0C01  2C0A               	goto	i1l2465
  8085                           
  8086                           ;main.c: 96: ua = 1;
  8087  0C02  3000               	movlw	0
  8088  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  8089  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  8090  0C05  00CF               	movwf	trapmf@ua
  8091  0C06  3080               	movlw	128
  8092  0C07  00D0               	movwf	trapmf@ua+1
  8093  0C08  303F               	movlw	63
  8094  0C09  2CAB               	goto	L17
  8095  0C0A                     i1l2465:	
  8096                           
  8097                           ;main.c: 97: else if ((c < x) && (x <= d))
  8098  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8099  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8100  0C0C  0849               	movf	trapmf@c,w
  8101  0C0D  00B0               	movwf	___ftge@ff1
  8102  0C0E  084A               	movf	trapmf@c+1,w
  8103  0C0F  00B1               	movwf	___ftge@ff1+1
  8104  0C10  084B               	movf	trapmf@c+2,w
  8105  0C11  00B2               	movwf	___ftge@ff1+2
  8106  0C12  0840               	movf	trapmf@x,w
  8107  0C13  00B3               	movwf	___ftge@ff2
  8108  0C14  0841               	movf	trapmf@x+1,w
  8109  0C15  00B4               	movwf	___ftge@ff2+1
  8110  0C16  0842               	movf	trapmf@x+2,w
  8111  0C17  00B5               	movwf	___ftge@ff2+2
  8112  0C18  160A  118A  23AE  120A  158A  	fcall	___ftge
  8113  0C1D  1803               	btfsc	3,0
  8114  0C1E  2C8F               	goto	i1l2471
  8115  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  8116  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  8117  0C21  084C               	movf	trapmf@d,w
  8118  0C22  00B0               	movwf	___ftge@ff1
  8119  0C23  084D               	movf	trapmf@d+1,w
  8120  0C24  00B1               	movwf	___ftge@ff1+1
  8121  0C25  084E               	movf	trapmf@d+2,w
  8122  0C26  00B2               	movwf	___ftge@ff1+2
  8123  0C27  0840               	movf	trapmf@x,w
  8124  0C28  00B3               	movwf	___ftge@ff2
  8125  0C29  0841               	movf	trapmf@x+1,w
  8126  0C2A  00B4               	movwf	___ftge@ff2+1
  8127  0C2B  0842               	movf	trapmf@x+2,w
  8128  0C2C  00B5               	movwf	___ftge@ff2+2
  8129  0C2D  160A  118A  23AE  120A  158A  	fcall	___ftge
  8130  0C32  1C03               	btfss	3,0
  8131  0C33  2C8F               	goto	i1l2471
  8132                           
  8133                           ;main.c: 98: ua = ((d - x) / (d - c));
  8134  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  8135  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  8136  0C36  084C               	movf	trapmf@d,w
  8137  0C37  00A3               	movwf	___ftadd@f1
  8138  0C38  084D               	movf	trapmf@d+1,w
  8139  0C39  00A4               	movwf	___ftadd@f1+1
  8140  0C3A  084E               	movf	trapmf@d+2,w
  8141  0C3B  00A5               	movwf	___ftadd@f1+2
  8142  0C3C  0849               	movf	trapmf@c,w
  8143  0C3D  00A0               	movwf	___ftneg@f1
  8144  0C3E  084A               	movf	trapmf@c+1,w
  8145  0C3F  00A1               	movwf	___ftneg@f1+1
  8146  0C40  084B               	movf	trapmf@c+2,w
  8147  0C41  00A2               	movwf	___ftneg@f1+2
  8148  0C42  160A  118A  2057  120A  158A  	fcall	___ftneg
  8149  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  8150  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  8151  0C49  0820               	movf	?___ftneg,w
  8152  0C4A  00A6               	movwf	___ftadd@f2
  8153  0C4B  0821               	movf	?___ftneg+1,w
  8154  0C4C  00A7               	movwf	___ftadd@f2+1
  8155  0C4D  0822               	movf	?___ftneg+2,w
  8156  0C4E  00A8               	movwf	___ftadd@f2+2
  8157  0C4F  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8158  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  8159  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  8160  0C56  0823               	movf	?___ftadd,w
  8161  0C57  00B0               	movwf	___ftdiv@f2
  8162  0C58  0824               	movf	?___ftadd+1,w
  8163  0C59  00B1               	movwf	___ftdiv@f2+1
  8164  0C5A  0825               	movf	?___ftadd+2,w
  8165  0C5B  00B2               	movwf	___ftdiv@f2+2
  8166  0C5C  084C               	movf	trapmf@d,w
  8167  0C5D  00A3               	movwf	___ftadd@f1
  8168  0C5E  084D               	movf	trapmf@d+1,w
  8169  0C5F  00A4               	movwf	___ftadd@f1+1
  8170  0C60  084E               	movf	trapmf@d+2,w
  8171  0C61  00A5               	movwf	___ftadd@f1+2
  8172  0C62  0840               	movf	trapmf@x,w
  8173  0C63  00A0               	movwf	___ftneg@f1
  8174  0C64  0841               	movf	trapmf@x+1,w
  8175  0C65  00A1               	movwf	___ftneg@f1+1
  8176  0C66  0842               	movf	trapmf@x+2,w
  8177  0C67                     L20:	
  8178  0C67  00A2               	movwf	___ftneg@f1+2
  8179  0C68  160A  118A  2057  120A  158A  	fcall	___ftneg
  8180  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  8181  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  8182  0C6F  0820               	movf	?___ftneg,w
  8183  0C70  00A6               	movwf	___ftadd@f2
  8184  0C71  0821               	movf	?___ftneg+1,w
  8185  0C72  00A7               	movwf	___ftadd@f2+1
  8186  0C73  0822               	movf	?___ftneg+2,w
  8187  0C74  00A8               	movwf	___ftadd@f2+2
  8188  0C75  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8189  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  8190  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  8191  0C7C  0823               	movf	?___ftadd,w
  8192  0C7D  00B3               	movwf	___ftdiv@f1
  8193  0C7E  0824               	movf	?___ftadd+1,w
  8194  0C7F  00B4               	movwf	___ftdiv@f1+1
  8195  0C80  0825               	movf	?___ftadd+2,w
  8196  0C81  00B5               	movwf	___ftdiv@f1+2
  8197  0C82  160A  118A  256E  120A  158A  	fcall	___ftdiv
  8198  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  8199  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  8200  0C89  0830               	movf	?___ftdiv,w
  8201  0C8A  00CF               	movwf	trapmf@ua
  8202  0C8B  0831               	movf	?___ftdiv+1,w
  8203  0C8C  00D0               	movwf	trapmf@ua+1
  8204  0C8D  0832               	movf	?___ftdiv+2,w
  8205  0C8E  2CAB               	goto	L17
  8206  0C8F                     i1l2471:	
  8207                           
  8208                           ;main.c: 99: else if (x > d)
  8209  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  8210  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  8211  0C91  084C               	movf	trapmf@d,w
  8212  0C92  00B0               	movwf	___ftge@ff1
  8213  0C93  084D               	movf	trapmf@d+1,w
  8214  0C94  00B1               	movwf	___ftge@ff1+1
  8215  0C95  084E               	movf	trapmf@d+2,w
  8216  0C96  00B2               	movwf	___ftge@ff1+2
  8217  0C97  0840               	movf	trapmf@x,w
  8218  0C98  00B3               	movwf	___ftge@ff2
  8219  0C99  0841               	movf	trapmf@x+1,w
  8220  0C9A  00B4               	movwf	___ftge@ff2+1
  8221  0C9B  0842               	movf	trapmf@x+2,w
  8222  0C9C  00B5               	movwf	___ftge@ff2+2
  8223  0C9D  160A  118A  23AE  120A  158A  	fcall	___ftge
  8224  0CA2  1803               	btfsc	3,0
  8225  0CA3  2CAC               	goto	i1l128
  8226  0CA4                     L18:	
  8227                           
  8228                           ;main.c: 100: ua = 0;
  8229  0CA4  3000               	movlw	0
  8230  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  8231  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  8232  0CA7  00CF               	movwf	trapmf@ua
  8233  0CA8  3000               	movlw	0
  8234  0CA9  00D0               	movwf	trapmf@ua+1
  8235  0CAA  3000               	movlw	0
  8236  0CAB                     L17:	
  8237  0CAB  00D1               	movwf	trapmf@ua+2
  8238  0CAC                     i1l128:	
  8239                           
  8240                           ;main.c: 102: return(ua);
  8241  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  8242  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  8243  0CAE  084F               	movf	trapmf@ua,w
  8244  0CAF  00C0               	movwf	?_trapmf
  8245  0CB0  0850               	movf	trapmf@ua+1,w
  8246  0CB1  00C1               	movwf	?_trapmf+1
  8247  0CB2  0851               	movf	trapmf@ua+2,w
  8248  0CB3  00C2               	movwf	?_trapmf+2
  8249  0CB4  0008               	return
  8250  0CB5                     __end_of_trapmf:	
  8251                           
  8252                           	psect	text33
  8253  1057                     __ptext33:	
  8254 ;; *************** function ___ftneg *****************
  8255 ;; Defined at:
  8256 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  f1              3    0[BANK0 ] float 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  3    0[BANK0 ] float 
  8263 ;; Registers used:
  8264 ;;		wreg
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8270 ;;      Params:         0       3       0       0       0
  8271 ;;      Locals:         0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0
  8273 ;;      Totals:         0       3       0       0       0
  8274 ;;Total ram usage:        3 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_trimf
  8280 ;;		_trapmf
  8281 ;;		_Fuzzy
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function ___ftneg
  8287  1057                     ___ftneg:	
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in ___ftneg: [wreg]
  8291  1057  1283               	bcf	3,5	;RP0=0, select bank0
  8292  1058  1303               	bcf	3,6	;RP1=0, select bank0
  8293  1059  0822               	movf	___ftneg@f1+2,w
  8294  105A  0421               	iorwf	___ftneg@f1+1,w
  8295  105B  0420               	iorwf	___ftneg@f1,w
  8296  105C  1903               	skipnz
  8297  105D  0008               	return
  8298  105E  3080               	movlw	128
  8299  105F  06A2               	xorwf	___ftneg@f1+2,f
  8300  1060  0008               	return
  8301  1061                     __end_of___ftneg:	
  8302                           
  8303                           	psect	text34
  8304  156E                     __ptext34:	
  8305 ;; *************** function ___ftdiv *****************
  8306 ;; Defined at:
  8307 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  f2              3   16[BANK0 ] float 
  8310 ;;  f1              3   19[BANK0 ] float 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  f3              3   27[BANK0 ] float 
  8313 ;;  sign            1   31[BANK0 ] unsigned char 
  8314 ;;  exp             1   30[BANK0 ] unsigned char 
  8315 ;;  cntr            1   26[BANK0 ] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  3   16[BANK0 ] float 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, pclath, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8325 ;;      Params:         0       6       0       0       0
  8326 ;;      Locals:         0       6       0       0       0
  8327 ;;      Temps:          0       4       0       0       0
  8328 ;;      Totals:         0      16       0       0       0
  8329 ;;Total ram usage:       16 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    1
  8332 ;; This function calls:
  8333 ;;		___ftpack
  8334 ;; This function is called by:
  8335 ;;		_trimf
  8336 ;;		_trapmf
  8337 ;;		_Fuzzy
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function ___ftdiv
  8343  156E                     ___ftdiv:	
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8347  156E  1283               	bcf	3,5	;RP0=0, select bank0
  8348  156F  1303               	bcf	3,6	;RP1=0, select bank0
  8349  1570  0833               	movf	___ftdiv@f1,w
  8350  1571  00B6               	movwf	??___ftdiv
  8351  1572  0834               	movf	___ftdiv@f1+1,w
  8352  1573  00B7               	movwf	??___ftdiv+1
  8353  1574  0835               	movf	___ftdiv@f1+2,w
  8354  1575  00B8               	movwf	??___ftdiv+2
  8355  1576  1003               	clrc
  8356  1577  0D37               	rlf	??___ftdiv+1,w
  8357  1578  0D38               	rlf	??___ftdiv+2,w
  8358  1579  00B9               	movwf	??___ftdiv+3
  8359  157A  0839               	movf	??___ftdiv+3,w
  8360  157B  00BE               	movwf	___ftdiv@exp
  8361  157C  08BE               	movf	___ftdiv@exp,f
  8362  157D  1D03               	skipz
  8363  157E  2D86               	goto	i1l2355
  8364  157F  3000               	movlw	0
  8365  1580  00B0               	movwf	?___ftdiv
  8366  1581  3000               	movlw	0
  8367  1582  00B1               	movwf	?___ftdiv+1
  8368  1583  3000               	movlw	0
  8369  1584  00B2               	movwf	?___ftdiv+2
  8370  1585  0008               	return
  8371  1586                     i1l2355:	
  8372  1586  0830               	movf	___ftdiv@f2,w
  8373  1587  00B6               	movwf	??___ftdiv
  8374  1588  0831               	movf	___ftdiv@f2+1,w
  8375  1589  00B7               	movwf	??___ftdiv+1
  8376  158A  0832               	movf	___ftdiv@f2+2,w
  8377  158B  00B8               	movwf	??___ftdiv+2
  8378  158C  1003               	clrc
  8379  158D  0D37               	rlf	??___ftdiv+1,w
  8380  158E  0D38               	rlf	??___ftdiv+2,w
  8381  158F  00B9               	movwf	??___ftdiv+3
  8382  1590  0839               	movf	??___ftdiv+3,w
  8383  1591  00BF               	movwf	___ftdiv@sign
  8384  1592  08BF               	movf	___ftdiv@sign,f
  8385  1593  1D03               	skipz
  8386  1594  2D9C               	goto	i1l2361
  8387  1595  3000               	movlw	0
  8388  1596  00B0               	movwf	?___ftdiv
  8389  1597  3000               	movlw	0
  8390  1598  00B1               	movwf	?___ftdiv+1
  8391  1599  3000               	movlw	0
  8392  159A  00B2               	movwf	?___ftdiv+2
  8393  159B  0008               	return
  8394  159C                     i1l2361:	
  8395  159C  3000               	movlw	0
  8396  159D  00BB               	movwf	___ftdiv@f3
  8397  159E  3000               	movlw	0
  8398  159F  00BC               	movwf	___ftdiv@f3+1
  8399  15A0  3000               	movlw	0
  8400  15A1  00BD               	movwf	___ftdiv@f3+2
  8401  15A2  3089               	movlw	137
  8402  15A3  073F               	addwf	___ftdiv@sign,w
  8403  15A4  00B6               	movwf	??___ftdiv
  8404  15A5  0836               	movf	??___ftdiv,w
  8405  15A6  02BE               	subwf	___ftdiv@exp,f
  8406  15A7  0833               	movf	___ftdiv@f1,w
  8407  15A8  00B6               	movwf	??___ftdiv
  8408  15A9  0834               	movf	___ftdiv@f1+1,w
  8409  15AA  00B7               	movwf	??___ftdiv+1
  8410  15AB  0835               	movf	___ftdiv@f1+2,w
  8411  15AC  00B8               	movwf	??___ftdiv+2
  8412  15AD  3010               	movlw	16
  8413  15AE                     u248_25:	
  8414  15AE  1003               	clrc
  8415  15AF  0CB8               	rrf	??___ftdiv+2,f
  8416  15B0  0CB7               	rrf	??___ftdiv+1,f
  8417  15B1  0CB6               	rrf	??___ftdiv,f
  8418  15B2  3EFF               	addlw	-1
  8419  15B3  1D03               	skipz
  8420  15B4  2DAE               	goto	u248_25
  8421  15B5  0836               	movf	??___ftdiv,w
  8422  15B6  00B9               	movwf	??___ftdiv+3
  8423  15B7  0839               	movf	??___ftdiv+3,w
  8424  15B8  00BF               	movwf	___ftdiv@sign
  8425  15B9  0830               	movf	___ftdiv@f2,w
  8426  15BA  00B6               	movwf	??___ftdiv
  8427  15BB  0831               	movf	___ftdiv@f2+1,w
  8428  15BC  00B7               	movwf	??___ftdiv+1
  8429  15BD  0832               	movf	___ftdiv@f2+2,w
  8430  15BE  00B8               	movwf	??___ftdiv+2
  8431  15BF  3010               	movlw	16
  8432  15C0                     u249_25:	
  8433  15C0  1003               	clrc
  8434  15C1  0CB8               	rrf	??___ftdiv+2,f
  8435  15C2  0CB7               	rrf	??___ftdiv+1,f
  8436  15C3  0CB6               	rrf	??___ftdiv,f
  8437  15C4  3EFF               	addlw	-1
  8438  15C5  1D03               	skipz
  8439  15C6  2DC0               	goto	u249_25
  8440  15C7  0836               	movf	??___ftdiv,w
  8441  15C8  00B9               	movwf	??___ftdiv+3
  8442  15C9  0839               	movf	??___ftdiv+3,w
  8443  15CA  06BF               	xorwf	___ftdiv@sign,f
  8444  15CB  3080               	movlw	128
  8445  15CC  00B6               	movwf	??___ftdiv
  8446  15CD  0836               	movf	??___ftdiv,w
  8447  15CE  05BF               	andwf	___ftdiv@sign,f
  8448  15CF  17B4               	bsf	___ftdiv@f1+1,7
  8449  15D0  30FF               	movlw	255
  8450  15D1  05B3               	andwf	___ftdiv@f1,f
  8451  15D2  30FF               	movlw	255
  8452  15D3  05B4               	andwf	___ftdiv@f1+1,f
  8453  15D4  3000               	movlw	0
  8454  15D5  05B5               	andwf	___ftdiv@f1+2,f
  8455  15D6  17B1               	bsf	___ftdiv@f2+1,7
  8456  15D7  30FF               	movlw	255
  8457  15D8  05B0               	andwf	___ftdiv@f2,f
  8458  15D9  30FF               	movlw	255
  8459  15DA  05B1               	andwf	___ftdiv@f2+1,f
  8460  15DB  3000               	movlw	0
  8461  15DC  05B2               	andwf	___ftdiv@f2+2,f
  8462  15DD  3018               	movlw	24
  8463  15DE  00B6               	movwf	??___ftdiv
  8464  15DF  0836               	movf	??___ftdiv,w
  8465  15E0  00BA               	movwf	___ftdiv@cntr
  8466  15E1                     i1l2375:	
  8467  15E1  3001               	movlw	1
  8468  15E2                     u250_25:	
  8469  15E2  1003               	clrc
  8470  15E3  0DBB               	rlf	___ftdiv@f3,f
  8471  15E4  0DBC               	rlf	___ftdiv@f3+1,f
  8472  15E5  0DBD               	rlf	___ftdiv@f3+2,f
  8473  15E6  3EFF               	addlw	-1
  8474  15E7  1D03               	skipz
  8475  15E8  2DE2               	goto	u250_25
  8476  15E9  0832               	movf	___ftdiv@f2+2,w
  8477  15EA  0235               	subwf	___ftdiv@f1+2,w
  8478  15EB  1D03               	skipz
  8479  15EC  2DF3               	goto	u251_25
  8480  15ED  0831               	movf	___ftdiv@f2+1,w
  8481  15EE  0234               	subwf	___ftdiv@f1+1,w
  8482  15EF  1D03               	skipz
  8483  15F0  2DF3               	goto	u251_25
  8484  15F1  0830               	movf	___ftdiv@f2,w
  8485  15F2  0233               	subwf	___ftdiv@f1,w
  8486  15F3                     u251_25:	
  8487  15F3  1C03               	skipc
  8488  15F4  2E00               	goto	i1l2383
  8489  15F5  0830               	movf	___ftdiv@f2,w
  8490  15F6  02B3               	subwf	___ftdiv@f1,f
  8491  15F7  0831               	movf	___ftdiv@f2+1,w
  8492  15F8  1C03               	skipc
  8493  15F9  0F31               	incfsz	___ftdiv@f2+1,w
  8494  15FA  02B4               	subwf	___ftdiv@f1+1,f
  8495  15FB  0832               	movf	___ftdiv@f2+2,w
  8496  15FC  1C03               	skipc
  8497  15FD  0A32               	incf	___ftdiv@f2+2,w
  8498  15FE  02B5               	subwf	___ftdiv@f1+2,f
  8499  15FF  143B               	bsf	___ftdiv@f3,0
  8500  1600                     i1l2383:	
  8501  1600  3001               	movlw	1
  8502  1601                     u252_25:	
  8503  1601  1003               	clrc
  8504  1602  0DB3               	rlf	___ftdiv@f1,f
  8505  1603  0DB4               	rlf	___ftdiv@f1+1,f
  8506  1604  0DB5               	rlf	___ftdiv@f1+2,f
  8507  1605  3EFF               	addlw	-1
  8508  1606  1D03               	skipz
  8509  1607  2E01               	goto	u252_25
  8510  1608  3001               	movlw	1
  8511  1609  02BA               	subwf	___ftdiv@cntr,f
  8512  160A  1D03               	btfss	3,2
  8513  160B  2DE1               	goto	i1l2375
  8514  160C  083B               	movf	___ftdiv@f3,w
  8515  160D  00F0               	movwf	___ftpack@arg
  8516  160E  083C               	movf	___ftdiv@f3+1,w
  8517  160F  00F1               	movwf	___ftpack@arg+1
  8518  1610  083D               	movf	___ftdiv@f3+2,w
  8519  1611  00F2               	movwf	___ftpack@arg+2
  8520  1612  083E               	movf	___ftdiv@exp,w
  8521  1613  00B6               	movwf	??___ftdiv
  8522  1614  0836               	movf	??___ftdiv,w
  8523  1615  00F3               	movwf	___ftpack@exp
  8524  1616  083F               	movf	___ftdiv@sign,w
  8525  1617  00B7               	movwf	??___ftdiv+1
  8526  1618  0837               	movf	??___ftdiv+1,w
  8527  1619  00F4               	movwf	___ftpack@sign
  8528  161A  160A  118A  240D   	fcall	___ftpack
  8529  161D  0870               	movf	?___ftpack,w
  8530  161E  1283               	bcf	3,5	;RP0=0, select bank0
  8531  161F  1303               	bcf	3,6	;RP1=0, select bank0
  8532  1620  00B0               	movwf	?___ftdiv
  8533  1621  0871               	movf	?___ftpack+1,w
  8534  1622  00B1               	movwf	?___ftdiv+1
  8535  1623  0872               	movf	?___ftpack+2,w
  8536  1624  00B2               	movwf	?___ftdiv+2
  8537  1625  0008               	return
  8538  1626                     __end_of___ftdiv:	
  8539                           
  8540                           	psect	text35
  8541  16F7                     __ptext35:	
  8542 ;; *************** function ___ftadd *****************
  8543 ;; Defined at:
  8544 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  f1              3    3[BANK0 ] float 
  8547 ;;  f2              3    6[BANK0 ] float 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  exp1            1   15[BANK0 ] unsigned char 
  8550 ;;  exp2            1   14[BANK0 ] unsigned char 
  8551 ;;  sign            1   13[BANK0 ] unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  3    3[BANK0 ] float 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         0       6       0       0       0
  8562 ;;      Locals:         0       3       0       0       0
  8563 ;;      Temps:          0       4       0       0       0
  8564 ;;      Totals:         0      13       0       0       0
  8565 ;;Total ram usage:       13 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    1
  8568 ;; This function calls:
  8569 ;;		___ftpack
  8570 ;; This function is called by:
  8571 ;;		_trimf
  8572 ;;		_trapmf
  8573 ;;		_Fuzzy
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function ___ftadd
  8579  16F7                     ___ftadd:	
  8580                           
  8581                           ;incstack = 0
  8582                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8583  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8584  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8585  16F9  0823               	movf	___ftadd@f1,w
  8586  16FA  00A9               	movwf	??___ftadd
  8587  16FB  0824               	movf	___ftadd@f1+1,w
  8588  16FC  00AA               	movwf	??___ftadd+1
  8589  16FD  0825               	movf	___ftadd@f1+2,w
  8590  16FE  00AB               	movwf	??___ftadd+2
  8591  16FF  1003               	clrc
  8592  1700  0D2A               	rlf	??___ftadd+1,w
  8593  1701  0D2B               	rlf	??___ftadd+2,w
  8594  1702  00AC               	movwf	??___ftadd+3
  8595  1703  082C               	movf	??___ftadd+3,w
  8596  1704  00AF               	movwf	___ftadd@exp1
  8597  1705  0826               	movf	___ftadd@f2,w
  8598  1706  00A9               	movwf	??___ftadd
  8599  1707  0827               	movf	___ftadd@f2+1,w
  8600  1708  00AA               	movwf	??___ftadd+1
  8601  1709  0828               	movf	___ftadd@f2+2,w
  8602  170A  00AB               	movwf	??___ftadd+2
  8603  170B  1003               	clrc
  8604  170C  0D2A               	rlf	??___ftadd+1,w
  8605  170D  0D2B               	rlf	??___ftadd+2,w
  8606  170E  00AC               	movwf	??___ftadd+3
  8607  170F  082C               	movf	??___ftadd+3,w
  8608  1710  00AE               	movwf	___ftadd@exp2
  8609  1711  082F               	movf	___ftadd@exp1,w
  8610  1712  1903               	btfsc	3,2
  8611  1713  2F20               	goto	i1l2285
  8612  1714  082E               	movf	___ftadd@exp2,w
  8613  1715  022F               	subwf	___ftadd@exp1,w
  8614  1716  1803               	skipnc
  8615  1717  2F27               	goto	i1l2289
  8616  1718  032F               	decf	___ftadd@exp1,w
  8617  1719  3AFF               	xorlw	255
  8618  171A  072E               	addwf	___ftadd@exp2,w
  8619  171B  00A9               	movwf	??___ftadd
  8620  171C  3019               	movlw	25
  8621  171D  0229               	subwf	??___ftadd,w
  8622  171E  1C03               	skipc
  8623  171F  2F27               	goto	i1l2289
  8624  1720                     i1l2285:	
  8625  1720  0826               	movf	___ftadd@f2,w
  8626  1721  00A3               	movwf	?___ftadd
  8627  1722  0827               	movf	___ftadd@f2+1,w
  8628  1723  00A4               	movwf	?___ftadd+1
  8629  1724  0828               	movf	___ftadd@f2+2,w
  8630  1725  00A5               	movwf	?___ftadd+2
  8631  1726  0008               	return
  8632  1727                     i1l2289:	
  8633  1727  082E               	movf	___ftadd@exp2,w
  8634  1728  1903               	btfsc	3,2
  8635  1729  0008               	return
  8636  172A  082F               	movf	___ftadd@exp1,w
  8637  172B  022E               	subwf	___ftadd@exp2,w
  8638  172C  1803               	skipnc
  8639  172D  2F36               	goto	i1l2295
  8640  172E  032E               	decf	___ftadd@exp2,w
  8641  172F  3AFF               	xorlw	255
  8642  1730  072F               	addwf	___ftadd@exp1,w
  8643  1731  00A9               	movwf	??___ftadd
  8644  1732  3019               	movlw	25
  8645  1733  0229               	subwf	??___ftadd,w
  8646  1734  1803               	btfsc	3,0
  8647  1735  0008               	return
  8648  1736                     i1l2295:	
  8649  1736  3006               	movlw	6
  8650  1737  00A9               	movwf	??___ftadd
  8651  1738  0829               	movf	??___ftadd,w
  8652  1739  00AD               	movwf	___ftadd@sign
  8653  173A  1BA5               	btfsc	___ftadd@f1+2,7
  8654  173B  17AD               	bsf	___ftadd@sign,7
  8655  173C  1BA8               	btfsc	___ftadd@f2+2,7
  8656  173D  172D               	bsf	___ftadd@sign,6
  8657  173E  17A4               	bsf	___ftadd@f1+1,7
  8658  173F  30FF               	movlw	255
  8659  1740  05A3               	andwf	___ftadd@f1,f
  8660  1741  30FF               	movlw	255
  8661  1742  05A4               	andwf	___ftadd@f1+1,f
  8662  1743  3000               	movlw	0
  8663  1744  05A5               	andwf	___ftadd@f1+2,f
  8664  1745  17A7               	bsf	___ftadd@f2+1,7
  8665  1746  30FF               	movlw	255
  8666  1747  05A6               	andwf	___ftadd@f2,f
  8667  1748  30FF               	movlw	255
  8668  1749  05A7               	andwf	___ftadd@f2+1,f
  8669  174A  3000               	movlw	0
  8670  174B  05A8               	andwf	___ftadd@f2+2,f
  8671  174C  082E               	movf	___ftadd@exp2,w
  8672  174D  022F               	subwf	___ftadd@exp1,w
  8673  174E  1803               	skipnc
  8674  174F  2F76               	goto	i1l2317
  8675  1750                     i1l2307:	
  8676  1750  3001               	movlw	1
  8677  1751                     u231_25:	
  8678  1751  1003               	clrc
  8679  1752  0DA6               	rlf	___ftadd@f2,f
  8680  1753  0DA7               	rlf	___ftadd@f2+1,f
  8681  1754  0DA8               	rlf	___ftadd@f2+2,f
  8682  1755  3EFF               	addlw	-1
  8683  1756  1D03               	skipz
  8684  1757  2F51               	goto	u231_25
  8685  1758  3001               	movlw	1
  8686  1759  02AE               	subwf	___ftadd@exp2,f
  8687  175A  082E               	movf	___ftadd@exp2,w
  8688  175B  062F               	xorwf	___ftadd@exp1,w
  8689  175C  1903               	skipnz
  8690  175D  2F71               	goto	i1l2315
  8691  175E  3001               	movlw	1
  8692  175F  02AD               	subwf	___ftadd@sign,f
  8693  1760  082D               	movf	___ftadd@sign,w
  8694  1761  3907               	andlw	7
  8695  1762  1903               	btfsc	3,2
  8696  1763  2F71               	goto	i1l2315
  8697  1764  2F50               	goto	i1l2307
  8698  1765                     i1l2313:	
  8699  1765  3001               	movlw	1
  8700  1766                     u234_25:	
  8701  1766  1003               	clrc
  8702  1767  0CA5               	rrf	___ftadd@f1+2,f
  8703  1768  0CA4               	rrf	___ftadd@f1+1,f
  8704  1769  0CA3               	rrf	___ftadd@f1,f
  8705  176A  3EFF               	addlw	-1
  8706  176B  1D03               	skipz
  8707  176C  2F66               	goto	u234_25
  8708  176D  3001               	movlw	1
  8709  176E  00A9               	movwf	??___ftadd
  8710  176F  0829               	movf	??___ftadd,w
  8711  1770  07AF               	addwf	___ftadd@exp1,f
  8712  1771                     i1l2315:	
  8713  1771  082F               	movf	___ftadd@exp1,w
  8714  1772  062E               	xorwf	___ftadd@exp2,w
  8715  1773  1903               	btfsc	3,2
  8716  1774  2F9F               	goto	i1l785
  8717  1775  2F65               	goto	i1l2313
  8718  1776                     i1l2317:	
  8719  1776  082F               	movf	___ftadd@exp1,w
  8720  1777  022E               	subwf	___ftadd@exp2,w
  8721  1778  1803               	skipnc
  8722  1779  2F9F               	goto	i1l785
  8723  177A                     i1l2319:	
  8724  177A  3001               	movlw	1
  8725  177B                     u237_25:	
  8726  177B  1003               	clrc
  8727  177C  0DA3               	rlf	___ftadd@f1,f
  8728  177D  0DA4               	rlf	___ftadd@f1+1,f
  8729  177E  0DA5               	rlf	___ftadd@f1+2,f
  8730  177F  3EFF               	addlw	-1
  8731  1780  1D03               	skipz
  8732  1781  2F7B               	goto	u237_25
  8733  1782  3001               	movlw	1
  8734  1783  02AF               	subwf	___ftadd@exp1,f
  8735  1784  082E               	movf	___ftadd@exp2,w
  8736  1785  062F               	xorwf	___ftadd@exp1,w
  8737  1786  1903               	skipnz
  8738  1787  2F9B               	goto	i1l2327
  8739  1788  3001               	movlw	1
  8740  1789  02AD               	subwf	___ftadd@sign,f
  8741  178A  082D               	movf	___ftadd@sign,w
  8742  178B  3907               	andlw	7
  8743  178C  1903               	btfsc	3,2
  8744  178D  2F9B               	goto	i1l2327
  8745  178E  2F7A               	goto	i1l2319
  8746  178F                     i1l2325:	
  8747  178F  3001               	movlw	1
  8748  1790                     u240_25:	
  8749  1790  1003               	clrc
  8750  1791  0CA8               	rrf	___ftadd@f2+2,f
  8751  1792  0CA7               	rrf	___ftadd@f2+1,f
  8752  1793  0CA6               	rrf	___ftadd@f2,f
  8753  1794  3EFF               	addlw	-1
  8754  1795  1D03               	skipz
  8755  1796  2F90               	goto	u240_25
  8756  1797  3001               	movlw	1
  8757  1798  00A9               	movwf	??___ftadd
  8758  1799  0829               	movf	??___ftadd,w
  8759  179A  07AE               	addwf	___ftadd@exp2,f
  8760  179B                     i1l2327:	
  8761  179B  082F               	movf	___ftadd@exp1,w
  8762  179C  062E               	xorwf	___ftadd@exp2,w
  8763  179D  1D03               	skipz
  8764  179E  2F8F               	goto	i1l2325
  8765  179F                     i1l785:	
  8766  179F  1FAD               	btfss	___ftadd@sign,7
  8767  17A0  2FB1               	goto	i1l2331
  8768  17A1  30FF               	movlw	255
  8769  17A2  06A3               	xorwf	___ftadd@f1,f
  8770  17A3  30FF               	movlw	255
  8771  17A4  06A4               	xorwf	___ftadd@f1+1,f
  8772  17A5  30FF               	movlw	255
  8773  17A6  06A5               	xorwf	___ftadd@f1+2,f
  8774  17A7  3001               	movlw	1
  8775  17A8  07A3               	addwf	___ftadd@f1,f
  8776  17A9  3000               	movlw	0
  8777  17AA  1803               	skipnc
  8778  17AB  3001               	movlw	1
  8779  17AC  07A4               	addwf	___ftadd@f1+1,f
  8780  17AD  3000               	movlw	0
  8781  17AE  1803               	skipnc
  8782  17AF  3001               	movlw	1
  8783  17B0  07A5               	addwf	___ftadd@f1+2,f
  8784  17B1                     i1l2331:	
  8785  17B1  1F2D               	btfss	___ftadd@sign,6
  8786  17B2  2FC3               	goto	i1l2335
  8787  17B3  30FF               	movlw	255
  8788  17B4  06A6               	xorwf	___ftadd@f2,f
  8789  17B5  30FF               	movlw	255
  8790  17B6  06A7               	xorwf	___ftadd@f2+1,f
  8791  17B7  30FF               	movlw	255
  8792  17B8  06A8               	xorwf	___ftadd@f2+2,f
  8793  17B9  3001               	movlw	1
  8794  17BA  07A6               	addwf	___ftadd@f2,f
  8795  17BB  3000               	movlw	0
  8796  17BC  1803               	skipnc
  8797  17BD  3001               	movlw	1
  8798  17BE  07A7               	addwf	___ftadd@f2+1,f
  8799  17BF  3000               	movlw	0
  8800  17C0  1803               	skipnc
  8801  17C1  3001               	movlw	1
  8802  17C2  07A8               	addwf	___ftadd@f2+2,f
  8803  17C3                     i1l2335:	
  8804  17C3  01AD               	clrf	___ftadd@sign
  8805  17C4  0823               	movf	___ftadd@f1,w
  8806  17C5  07A6               	addwf	___ftadd@f2,f
  8807  17C6  0824               	movf	___ftadd@f1+1,w
  8808  17C7  1103               	clrz
  8809  17C8  1803               	skipnc
  8810  17C9  0A24               	incf	___ftadd@f1+1,w
  8811  17CA  1D03               	btfss	3,2
  8812  17CB  07A7               	addwf	___ftadd@f2+1,f
  8813  17CC  0825               	movf	___ftadd@f1+2,w
  8814  17CD  1103               	clrz
  8815  17CE  1803               	skipnc
  8816  17CF  0A25               	incf	___ftadd@f1+2,w
  8817  17D0  1D03               	btfss	3,2
  8818  17D1  07A8               	addwf	___ftadd@f2+2,f
  8819  17D2  1FA8               	btfss	___ftadd@f2+2,7
  8820  17D3  2FE6               	goto	i1l2345
  8821  17D4  30FF               	movlw	255
  8822  17D5  06A6               	xorwf	___ftadd@f2,f
  8823  17D6  30FF               	movlw	255
  8824  17D7  06A7               	xorwf	___ftadd@f2+1,f
  8825  17D8  30FF               	movlw	255
  8826  17D9  06A8               	xorwf	___ftadd@f2+2,f
  8827  17DA  3001               	movlw	1
  8828  17DB  07A6               	addwf	___ftadd@f2,f
  8829  17DC  3000               	movlw	0
  8830  17DD  1803               	skipnc
  8831  17DE  3001               	movlw	1
  8832  17DF  07A7               	addwf	___ftadd@f2+1,f
  8833  17E0  3000               	movlw	0
  8834  17E1  1803               	skipnc
  8835  17E2  3001               	movlw	1
  8836  17E3  07A8               	addwf	___ftadd@f2+2,f
  8837  17E4  01AD               	clrf	___ftadd@sign
  8838  17E5  0AAD               	incf	___ftadd@sign,f
  8839  17E6                     i1l2345:	
  8840  17E6  0826               	movf	___ftadd@f2,w
  8841  17E7  00F0               	movwf	___ftpack@arg
  8842  17E8  0827               	movf	___ftadd@f2+1,w
  8843  17E9  00F1               	movwf	___ftpack@arg+1
  8844  17EA  0828               	movf	___ftadd@f2+2,w
  8845  17EB  00F2               	movwf	___ftpack@arg+2
  8846  17EC  082F               	movf	___ftadd@exp1,w
  8847  17ED  00A9               	movwf	??___ftadd
  8848  17EE  0829               	movf	??___ftadd,w
  8849  17EF  00F3               	movwf	___ftpack@exp
  8850  17F0  082D               	movf	___ftadd@sign,w
  8851  17F1  00AA               	movwf	??___ftadd+1
  8852  17F2  082A               	movf	??___ftadd+1,w
  8853  17F3  00F4               	movwf	___ftpack@sign
  8854  17F4  160A  118A  240D   	fcall	___ftpack
  8855  17F7  0870               	movf	?___ftpack,w
  8856  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8857  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8858  17FA  00A3               	movwf	?___ftadd
  8859  17FB  0871               	movf	?___ftpack+1,w
  8860  17FC  00A4               	movwf	?___ftadd+1
  8861  17FD  0872               	movf	?___ftpack+2,w
  8862  17FE  00A5               	movwf	?___ftadd+2
  8863  17FF  0008               	return
  8864  1800                     __end_of___ftadd:	
  8865                           
  8866                           	psect	text36
  8867  1117                     __ptext36:	
  8868 ;; *************** function _max_val *****************
  8869 ;; Defined at:
  8870 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  a               3   28[BANK0 ] float 
  8873 ;;  b               3   31[BANK0 ] float 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  3   28[BANK0 ] float 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0, pclath, cstack
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8885 ;;      Params:         0       6       0       0       0
  8886 ;;      Locals:         0       0       0       0       0
  8887 ;;      Temps:          0       0       0       0       0
  8888 ;;      Totals:         0       6       0       0       0
  8889 ;;Total ram usage:        6 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    1
  8892 ;; This function calls:
  8893 ;;		___ftge
  8894 ;; This function is called by:
  8895 ;;		_Fuzzy
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           
  8900                           ;psect for function _max_val
  8901  1117                     _max_val:	
  8902                           
  8903                           ;main.c: 119: if (a > b)
  8904                           
  8905                           ;incstack = 0
  8906                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8907  1117  1283               	bcf	3,5	;RP0=0, select bank0
  8908  1118  1303               	bcf	3,6	;RP1=0, select bank0
  8909  1119  083F               	movf	max_val@b,w
  8910  111A  00B0               	movwf	___ftge@ff1
  8911  111B  0840               	movf	max_val@b+1,w
  8912  111C  00B1               	movwf	___ftge@ff1+1
  8913  111D  0841               	movf	max_val@b+2,w
  8914  111E  00B2               	movwf	___ftge@ff1+2
  8915  111F  083C               	movf	max_val@a,w
  8916  1120  00B3               	movwf	___ftge@ff2
  8917  1121  083D               	movf	max_val@a+1,w
  8918  1122  00B4               	movwf	___ftge@ff2+1
  8919  1123  083E               	movf	max_val@a+2,w
  8920  1124  00B5               	movwf	___ftge@ff2+2
  8921  1125  160A  118A  23AE  160A  118A  	fcall	___ftge
  8922  112A  1C03               	btfss	3,0
  8923  112B  0008               	return
  8924                           
  8925                           ;main.c: 121: else
  8926                           ;main.c: 122: return b;
  8927                           
  8928                           ;main.c: 120: return a;
  8929  112C  1283               	bcf	3,5	;RP0=0, select bank0
  8930  112D  1303               	bcf	3,6	;RP1=0, select bank0
  8931  112E  083F               	movf	max_val@b,w
  8932  112F  00BC               	movwf	?_max_val
  8933  1130  0840               	movf	max_val@b+1,w
  8934  1131  00BD               	movwf	?_max_val+1
  8935  1132  0841               	movf	max_val@b+2,w
  8936  1133  00BE               	movwf	?_max_val+2
  8937  1134  0008               	return
  8938  1135                     __end_of_max_val:	
  8939                           
  8940                           	psect	text37
  8941  13AE                     __ptext37:	
  8942 ;; *************** function ___ftge *****************
  8943 ;; Defined at:
  8944 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  ff1             3   16[BANK0 ] float 
  8947 ;;  ff2             3   19[BANK0 ] float 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;		None               void
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8959 ;;      Params:         0       6       0       0       0
  8960 ;;      Locals:         0       0       0       0       0
  8961 ;;      Temps:          0       6       0       0       0
  8962 ;;      Totals:         0      12       0       0       0
  8963 ;;Total ram usage:       12 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_trimf
  8969 ;;		_trapmf
  8970 ;;		_max_val
  8971 ;;		_Fuzzy
  8972 ;;		_min_val
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function ___ftge
  8978  13AE                     ___ftge:	
  8979                           
  8980                           ;incstack = 0
  8981                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8982  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  8983  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  8984  13B0  1FB2               	btfss	___ftge@ff1+2,7
  8985  13B1  2BD7               	goto	i1l2395
  8986  13B2  3000               	movlw	0
  8987  13B3  00B6               	movwf	??___ftge
  8988  13B4  3000               	movlw	0
  8989  13B5  00B7               	movwf	??___ftge+1
  8990  13B6  3080               	movlw	128
  8991  13B7  00B8               	movwf	??___ftge+2
  8992  13B8  0930               	comf	___ftge@ff1,w
  8993  13B9  00B9               	movwf	??___ftge+3
  8994  13BA  0931               	comf	___ftge@ff1+1,w
  8995  13BB  00BA               	movwf	??___ftge+4
  8996  13BC  0932               	comf	___ftge@ff1+2,w
  8997  13BD  00BB               	movwf	??___ftge+5
  8998  13BE  0AB9               	incf	??___ftge+3,f
  8999  13BF  1903               	skipnz
  9000  13C0  0ABA               	incf	??___ftge+4,f
  9001  13C1  1903               	skipnz
  9002  13C2  0ABB               	incf	??___ftge+5,f
  9003  13C3  0839               	movf	??___ftge+3,w
  9004  13C4  07B6               	addwf	??___ftge,f
  9005  13C5  083A               	movf	??___ftge+4,w
  9006  13C6  1803               	skipnc
  9007  13C7  0F3A               	incfsz	??___ftge+4,w
  9008  13C8  2BCA               	goto	u255_21
  9009  13C9  2BCB               	goto	u255_22
  9010  13CA                     u255_21:	
  9011  13CA  07B7               	addwf	??___ftge+1,f
  9012  13CB                     u255_22:	
  9013  13CB  083B               	movf	??___ftge+5,w
  9014  13CC  1803               	skipnc
  9015  13CD  0F3B               	incfsz	??___ftge+5,w
  9016  13CE  2BD0               	goto	u255_23
  9017  13CF  2BD1               	goto	u255_24
  9018  13D0                     u255_23:	
  9019  13D0  07B8               	addwf	??___ftge+2,f
  9020  13D1                     u255_24:	
  9021  13D1  0836               	movf	??___ftge,w
  9022  13D2  00B0               	movwf	___ftge@ff1
  9023  13D3  0837               	movf	??___ftge+1,w
  9024  13D4  00B1               	movwf	___ftge@ff1+1
  9025  13D5  0838               	movf	??___ftge+2,w
  9026  13D6  00B2               	movwf	___ftge@ff1+2
  9027  13D7                     i1l2395:	
  9028  13D7  1FB5               	btfss	___ftge@ff2+2,7
  9029  13D8  2BFE               	goto	i1l2399
  9030  13D9  3000               	movlw	0
  9031  13DA  00B6               	movwf	??___ftge
  9032  13DB  3000               	movlw	0
  9033  13DC  00B7               	movwf	??___ftge+1
  9034  13DD  3080               	movlw	128
  9035  13DE  00B8               	movwf	??___ftge+2
  9036  13DF  0933               	comf	___ftge@ff2,w
  9037  13E0  00B9               	movwf	??___ftge+3
  9038  13E1  0934               	comf	___ftge@ff2+1,w
  9039  13E2  00BA               	movwf	??___ftge+4
  9040  13E3  0935               	comf	___ftge@ff2+2,w
  9041  13E4  00BB               	movwf	??___ftge+5
  9042  13E5  0AB9               	incf	??___ftge+3,f
  9043  13E6  1903               	skipnz
  9044  13E7  0ABA               	incf	??___ftge+4,f
  9045  13E8  1903               	skipnz
  9046  13E9  0ABB               	incf	??___ftge+5,f
  9047  13EA  0839               	movf	??___ftge+3,w
  9048  13EB  07B6               	addwf	??___ftge,f
  9049  13EC  083A               	movf	??___ftge+4,w
  9050  13ED  1803               	skipnc
  9051  13EE  0F3A               	incfsz	??___ftge+4,w
  9052  13EF  2BF1               	goto	u257_21
  9053  13F0  2BF2               	goto	u257_22
  9054  13F1                     u257_21:	
  9055  13F1  07B7               	addwf	??___ftge+1,f
  9056  13F2                     u257_22:	
  9057  13F2  083B               	movf	??___ftge+5,w
  9058  13F3  1803               	skipnc
  9059  13F4  0F3B               	incfsz	??___ftge+5,w
  9060  13F5  2BF7               	goto	u257_23
  9061  13F6  2BF8               	goto	u257_24
  9062  13F7                     u257_23:	
  9063  13F7  07B8               	addwf	??___ftge+2,f
  9064  13F8                     u257_24:	
  9065  13F8  0836               	movf	??___ftge,w
  9066  13F9  00B3               	movwf	___ftge@ff2
  9067  13FA  0837               	movf	??___ftge+1,w
  9068  13FB  00B4               	movwf	___ftge@ff2+1
  9069  13FC  0838               	movf	??___ftge+2,w
  9070  13FD  00B5               	movwf	___ftge@ff2+2
  9071  13FE                     i1l2399:	
  9072  13FE  3080               	movlw	128
  9073  13FF  06B2               	xorwf	___ftge@ff1+2,f
  9074  1400  3080               	movlw	128
  9075  1401  06B5               	xorwf	___ftge@ff2+2,f
  9076  1402  0835               	movf	___ftge@ff2+2,w
  9077  1403  0232               	subwf	___ftge@ff1+2,w
  9078  1404  1D03               	skipz
  9079  1405  0008               	return
  9080  1406  0834               	movf	___ftge@ff2+1,w
  9081  1407  0231               	subwf	___ftge@ff1+1,w
  9082  1408  1D03               	skipz
  9083  1409  0008               	return
  9084  140A  0833               	movf	___ftge@ff2,w
  9085  140B  0230               	subwf	___ftge@ff1,w
  9086  140C  0008               	return
  9087  140D                     __end_of___ftge:	
  9088                           
  9089                           	psect	text38
  9090  109F                     __ptext38:	
  9091 ;; *************** function ___lwtoft *****************
  9092 ;; Defined at:
  9093 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  c               2    8[COMMON] unsigned int 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  3    8[COMMON] float 
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, status,0, pclath, cstack
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9107 ;;      Params:         3       0       0       0       0
  9108 ;;      Locals:         0       0       0       0       0
  9109 ;;      Temps:          1       0       0       0       0
  9110 ;;      Totals:         4       0       0       0       0
  9111 ;;Total ram usage:        4 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    1
  9114 ;; This function calls:
  9115 ;;		___ftpack
  9116 ;; This function is called by:
  9117 ;;		_Fuzzy
  9118 ;;		_ISR
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           
  9123                           ;psect for function ___lwtoft
  9124  109F                     ___lwtoft:	
  9125                           
  9126                           ;incstack = 0
  9127                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9128  109F  0878               	movf	___lwtoft@c,w
  9129  10A0  00F0               	movwf	___ftpack@arg
  9130  10A1  0879               	movf	___lwtoft@c+1,w
  9131  10A2  00F1               	movwf	___ftpack@arg+1
  9132  10A3  01F2               	clrf	___ftpack@arg+2
  9133  10A4  308E               	movlw	142
  9134  10A5  00FB               	movwf	??___lwtoft
  9135  10A6  087B               	movf	??___lwtoft,w
  9136  10A7  00F3               	movwf	___ftpack@exp
  9137  10A8  01F4               	clrf	___ftpack@sign
  9138  10A9  160A  118A  240D   	fcall	___ftpack
  9139  10AC  0870               	movf	?___ftpack,w
  9140  10AD  00F8               	movwf	?___lwtoft
  9141  10AE  0871               	movf	?___ftpack+1,w
  9142  10AF  00F9               	movwf	?___lwtoft+1
  9143  10B0  0872               	movf	?___ftpack+2,w
  9144  10B1  00FA               	movwf	?___lwtoft+2
  9145  10B2  0008               	return
  9146  10B3                     __end_of___lwtoft:	
  9147                           
  9148                           	psect	text39
  9149  14E0                     __ptext39:	
  9150 ;; *************** function ___fttol *****************
  9151 ;; Defined at:
  9152 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  f1              3   16[BANK0 ] float 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  lval            4   25[BANK0 ] unsigned long 
  9157 ;;  exp1            1   29[BANK0 ] unsigned char 
  9158 ;;  sign1           1   24[BANK0 ] unsigned char 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  4   16[BANK0 ] long 
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9168 ;;      Params:         0       4       0       0       0
  9169 ;;      Locals:         0       6       0       0       0
  9170 ;;      Temps:          0       4       0       0       0
  9171 ;;      Totals:         0      14       0       0       0
  9172 ;;Total ram usage:       14 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_Fuzzy
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           
  9182                           ;psect for function ___fttol
  9183  14E0                     ___fttol:	
  9184                           
  9185                           ;incstack = 0
  9186                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9187  14E0  1283               	bcf	3,5	;RP0=0, select bank0
  9188  14E1  1303               	bcf	3,6	;RP1=0, select bank0
  9189  14E2  0830               	movf	___fttol@f1,w
  9190  14E3  00B4               	movwf	??___fttol
  9191  14E4  0831               	movf	___fttol@f1+1,w
  9192  14E5  00B5               	movwf	??___fttol+1
  9193  14E6  0832               	movf	___fttol@f1+2,w
  9194  14E7  00B6               	movwf	??___fttol+2
  9195  14E8  1003               	clrc
  9196  14E9  0D35               	rlf	??___fttol+1,w
  9197  14EA  0D36               	rlf	??___fttol+2,w
  9198  14EB  00B7               	movwf	??___fttol+3
  9199  14EC  0837               	movf	??___fttol+3,w
  9200  14ED  00BD               	movwf	___fttol@exp1
  9201  14EE  08BD               	movf	___fttol@exp1,f
  9202  14EF  1D03               	skipz
  9203  14F0  2CFA               	goto	i1l2627
  9204  14F1  3000               	movlw	0
  9205  14F2  00B3               	movwf	?___fttol+3
  9206  14F3  3000               	movlw	0
  9207  14F4  00B2               	movwf	?___fttol+2
  9208  14F5  3000               	movlw	0
  9209  14F6  00B1               	movwf	?___fttol+1
  9210  14F7  3000               	movlw	0
  9211  14F8  00B0               	movwf	?___fttol
  9212  14F9  0008               	return
  9213  14FA                     i1l2627:	
  9214  14FA  0830               	movf	___fttol@f1,w
  9215  14FB  00B4               	movwf	??___fttol
  9216  14FC  0831               	movf	___fttol@f1+1,w
  9217  14FD  00B5               	movwf	??___fttol+1
  9218  14FE  0832               	movf	___fttol@f1+2,w
  9219  14FF  00B6               	movwf	??___fttol+2
  9220  1500  3017               	movlw	23
  9221  1501                     u308_25:	
  9222  1501  1003               	clrc
  9223  1502  0CB6               	rrf	??___fttol+2,f
  9224  1503  0CB5               	rrf	??___fttol+1,f
  9225  1504  0CB4               	rrf	??___fttol,f
  9226  1505  3EFF               	addlw	-1
  9227  1506  1D03               	skipz
  9228  1507  2D01               	goto	u308_25
  9229  1508  0834               	movf	??___fttol,w
  9230  1509  00B7               	movwf	??___fttol+3
  9231  150A  0837               	movf	??___fttol+3,w
  9232  150B  00B8               	movwf	___fttol@sign1
  9233  150C  17B1               	bsf	___fttol@f1+1,7
  9234  150D  30FF               	movlw	255
  9235  150E  05B0               	andwf	___fttol@f1,f
  9236  150F  30FF               	movlw	255
  9237  1510  05B1               	andwf	___fttol@f1+1,f
  9238  1511  3000               	movlw	0
  9239  1512  05B2               	andwf	___fttol@f1+2,f
  9240  1513  0830               	movf	___fttol@f1,w
  9241  1514  00B9               	movwf	___fttol@lval
  9242  1515  0831               	movf	___fttol@f1+1,w
  9243  1516  00BA               	movwf	___fttol@lval+1
  9244  1517  0832               	movf	___fttol@f1+2,w
  9245  1518  00BB               	movwf	___fttol@lval+2
  9246  1519  01BC               	clrf	___fttol@lval+3
  9247  151A  308E               	movlw	142
  9248  151B  02BD               	subwf	___fttol@exp1,f
  9249  151C  1FBD               	btfss	___fttol@exp1,7
  9250  151D  2D3C               	goto	i1l2647
  9251  151E  083D               	movf	___fttol@exp1,w
  9252  151F  3A80               	xorlw	128
  9253  1520  3E8F               	addlw	143
  9254  1521  1803               	skipnc
  9255  1522  2D2C               	goto	i1l2645
  9256  1523  3000               	movlw	0
  9257  1524  00B3               	movwf	?___fttol+3
  9258  1525  3000               	movlw	0
  9259  1526  00B2               	movwf	?___fttol+2
  9260  1527  3000               	movlw	0
  9261  1528  00B1               	movwf	?___fttol+1
  9262  1529  3000               	movlw	0
  9263  152A  00B0               	movwf	?___fttol
  9264  152B  0008               	return
  9265  152C                     i1l2645:	
  9266  152C  3001               	movlw	1
  9267  152D                     u311_25:	
  9268  152D  1003               	clrc
  9269  152E  0CBC               	rrf	___fttol@lval+3,f
  9270  152F  0CBB               	rrf	___fttol@lval+2,f
  9271  1530  0CBA               	rrf	___fttol@lval+1,f
  9272  1531  0CB9               	rrf	___fttol@lval,f
  9273  1532  3EFF               	addlw	-1
  9274  1533  1D03               	skipz
  9275  1534  2D2D               	goto	u311_25
  9276  1535  3001               	movlw	1
  9277  1536  00B4               	movwf	??___fttol
  9278  1537  0834               	movf	??___fttol,w
  9279  1538  07BD               	addwf	___fttol@exp1,f
  9280  1539  1903               	btfsc	3,2
  9281  153A  2D57               	goto	i1l2657
  9282  153B  2D2C               	goto	i1l2645
  9283  153C                     i1l2647:	
  9284  153C  3018               	movlw	24
  9285  153D  023D               	subwf	___fttol@exp1,w
  9286  153E  1C03               	skipc
  9287  153F  2D54               	goto	i1l2655
  9288  1540  3000               	movlw	0
  9289  1541  00B3               	movwf	?___fttol+3
  9290  1542  3000               	movlw	0
  9291  1543  00B2               	movwf	?___fttol+2
  9292  1544  3000               	movlw	0
  9293  1545  00B1               	movwf	?___fttol+1
  9294  1546  3000               	movlw	0
  9295  1547  00B0               	movwf	?___fttol
  9296  1548  0008               	return
  9297  1549                     i1l2653:	
  9298  1549  3001               	movlw	1
  9299  154A  00B4               	movwf	??___fttol
  9300  154B                     u314_25:	
  9301  154B  1003               	clrc
  9302  154C  0DB9               	rlf	___fttol@lval,f
  9303  154D  0DBA               	rlf	___fttol@lval+1,f
  9304  154E  0DBB               	rlf	___fttol@lval+2,f
  9305  154F  0DBC               	rlf	___fttol@lval+3,f
  9306  1550  0BB4               	decfsz	??___fttol,f
  9307  1551  2D4B               	goto	u314_25
  9308  1552  3001               	movlw	1
  9309  1553  02BD               	subwf	___fttol@exp1,f
  9310  1554                     i1l2655:	
  9311  1554  08BD               	movf	___fttol@exp1,f
  9312  1555  1D03               	skipz
  9313  1556  2D49               	goto	i1l2653
  9314  1557                     i1l2657:	
  9315  1557  0838               	movf	___fttol@sign1,w
  9316  1558  1903               	btfsc	3,2
  9317  1559  2D65               	goto	i1l2661
  9318  155A  09B9               	comf	___fttol@lval,f
  9319  155B  09BA               	comf	___fttol@lval+1,f
  9320  155C  09BB               	comf	___fttol@lval+2,f
  9321  155D  09BC               	comf	___fttol@lval+3,f
  9322  155E  0AB9               	incf	___fttol@lval,f
  9323  155F  1903               	skipnz
  9324  1560  0ABA               	incf	___fttol@lval+1,f
  9325  1561  1903               	skipnz
  9326  1562  0ABB               	incf	___fttol@lval+2,f
  9327  1563  1903               	skipnz
  9328  1564  0ABC               	incf	___fttol@lval+3,f
  9329  1565                     i1l2661:	
  9330  1565  083C               	movf	___fttol@lval+3,w
  9331  1566  00B3               	movwf	?___fttol+3
  9332  1567  083B               	movf	___fttol@lval+2,w
  9333  1568  00B2               	movwf	?___fttol+2
  9334  1569  083A               	movf	___fttol@lval+1,w
  9335  156A  00B1               	movwf	?___fttol+1
  9336  156B  0839               	movf	___fttol@lval,w
  9337  156C  00B0               	movwf	?___fttol
  9338  156D  0008               	return
  9339  156E                     __end_of___fttol:	
  9340                           
  9341                           	psect	text40
  9342  1626                     __ptext40:	
  9343 ;; *************** function ___ftmul *****************
  9344 ;; Defined at:
  9345 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  f1              3    8[COMMON] float 
  9348 ;;  f2              3   11[COMMON] float 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9351 ;;  sign            1    9[BANK0 ] unsigned char 
  9352 ;;  cntr            1    8[BANK0 ] unsigned char 
  9353 ;;  exp             1    4[BANK0 ] unsigned char 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  3    8[COMMON] float 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0, pclath, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9363 ;;      Params:         6       0       0       0       0
  9364 ;;      Locals:         0       6       0       0       0
  9365 ;;      Temps:          0       4       0       0       0
  9366 ;;      Totals:         6      10       0       0       0
  9367 ;;Total ram usage:       16 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    1
  9370 ;; This function calls:
  9371 ;;		___ftpack
  9372 ;; This function is called by:
  9373 ;;		_Fuzzy
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           
  9378                           ;psect for function ___ftmul
  9379  1626                     ___ftmul:	
  9380                           
  9381                           ;incstack = 0
  9382                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9383  1626  0878               	movf	___ftmul@f1,w
  9384  1627  1283               	bcf	3,5	;RP0=0, select bank0
  9385  1628  1303               	bcf	3,6	;RP1=0, select bank0
  9386  1629  00A0               	movwf	??___ftmul
  9387  162A  0879               	movf	___ftmul@f1+1,w
  9388  162B  00A1               	movwf	??___ftmul+1
  9389  162C  087A               	movf	___ftmul@f1+2,w
  9390  162D  00A2               	movwf	??___ftmul+2
  9391  162E  1003               	clrc
  9392  162F  0D21               	rlf	??___ftmul+1,w
  9393  1630  0D22               	rlf	??___ftmul+2,w
  9394  1631  00A3               	movwf	??___ftmul+3
  9395  1632  0823               	movf	??___ftmul+3,w
  9396  1633  00A4               	movwf	___ftmul@exp
  9397  1634  08A4               	movf	___ftmul@exp,f
  9398  1635  1D03               	skipz
  9399  1636  2E3E               	goto	i1l2577
  9400  1637  3000               	movlw	0
  9401  1638  00F8               	movwf	?___ftmul
  9402  1639  3000               	movlw	0
  9403  163A  00F9               	movwf	?___ftmul+1
  9404  163B  3000               	movlw	0
  9405  163C  00FA               	movwf	?___ftmul+2
  9406  163D  0008               	return
  9407  163E                     i1l2577:	
  9408  163E  087B               	movf	___ftmul@f2,w
  9409  163F  00A0               	movwf	??___ftmul
  9410  1640  087C               	movf	___ftmul@f2+1,w
  9411  1641  00A1               	movwf	??___ftmul+1
  9412  1642  087D               	movf	___ftmul@f2+2,w
  9413  1643  00A2               	movwf	??___ftmul+2
  9414  1644  1003               	clrc
  9415  1645  0D21               	rlf	??___ftmul+1,w
  9416  1646  0D22               	rlf	??___ftmul+2,w
  9417  1647  00A3               	movwf	??___ftmul+3
  9418  1648  0823               	movf	??___ftmul+3,w
  9419  1649  00A9               	movwf	___ftmul@sign
  9420  164A  08A9               	movf	___ftmul@sign,f
  9421  164B  1D03               	skipz
  9422  164C  2E54               	goto	i1l2583
  9423  164D  3000               	movlw	0
  9424  164E  00F8               	movwf	?___ftmul
  9425  164F  3000               	movlw	0
  9426  1650  00F9               	movwf	?___ftmul+1
  9427  1651  3000               	movlw	0
  9428  1652  00FA               	movwf	?___ftmul+2
  9429  1653  0008               	return
  9430  1654                     i1l2583:	
  9431  1654  0829               	movf	___ftmul@sign,w
  9432  1655  3E7B               	addlw	123
  9433  1656  00A0               	movwf	??___ftmul
  9434  1657  0820               	movf	??___ftmul,w
  9435  1658  07A4               	addwf	___ftmul@exp,f
  9436  1659  0878               	movf	___ftmul@f1,w
  9437  165A  00A0               	movwf	??___ftmul
  9438  165B  0879               	movf	___ftmul@f1+1,w
  9439  165C  00A1               	movwf	??___ftmul+1
  9440  165D  087A               	movf	___ftmul@f1+2,w
  9441  165E  00A2               	movwf	??___ftmul+2
  9442  165F  3010               	movlw	16
  9443  1660                     u295_25:	
  9444  1660  1003               	clrc
  9445  1661  0CA2               	rrf	??___ftmul+2,f
  9446  1662  0CA1               	rrf	??___ftmul+1,f
  9447  1663  0CA0               	rrf	??___ftmul,f
  9448  1664  3EFF               	addlw	-1
  9449  1665  1D03               	skipz
  9450  1666  2E60               	goto	u295_25
  9451  1667  0820               	movf	??___ftmul,w
  9452  1668  00A3               	movwf	??___ftmul+3
  9453  1669  0823               	movf	??___ftmul+3,w
  9454  166A  00A9               	movwf	___ftmul@sign
  9455  166B  087B               	movf	___ftmul@f2,w
  9456  166C  00A0               	movwf	??___ftmul
  9457  166D  087C               	movf	___ftmul@f2+1,w
  9458  166E  00A1               	movwf	??___ftmul+1
  9459  166F  087D               	movf	___ftmul@f2+2,w
  9460  1670  00A2               	movwf	??___ftmul+2
  9461  1671  3010               	movlw	16
  9462  1672                     u296_25:	
  9463  1672  1003               	clrc
  9464  1673  0CA2               	rrf	??___ftmul+2,f
  9465  1674  0CA1               	rrf	??___ftmul+1,f
  9466  1675  0CA0               	rrf	??___ftmul,f
  9467  1676  3EFF               	addlw	-1
  9468  1677  1D03               	skipz
  9469  1678  2E72               	goto	u296_25
  9470  1679  0820               	movf	??___ftmul,w
  9471  167A  00A3               	movwf	??___ftmul+3
  9472  167B  0823               	movf	??___ftmul+3,w
  9473  167C  06A9               	xorwf	___ftmul@sign,f
  9474  167D  3080               	movlw	128
  9475  167E  00A0               	movwf	??___ftmul
  9476  167F  0820               	movf	??___ftmul,w
  9477  1680  05A9               	andwf	___ftmul@sign,f
  9478  1681  17F9               	bsf	___ftmul@f1+1,7
  9479  1682  17FC               	bsf	___ftmul@f2+1,7
  9480  1683  30FF               	movlw	255
  9481  1684  05FB               	andwf	___ftmul@f2,f
  9482  1685  30FF               	movlw	255
  9483  1686  05FC               	andwf	___ftmul@f2+1,f
  9484  1687  3000               	movlw	0
  9485  1688  05FD               	andwf	___ftmul@f2+2,f
  9486  1689  3000               	movlw	0
  9487  168A  00A5               	movwf	___ftmul@f3_as_product
  9488  168B  3000               	movlw	0
  9489  168C  00A6               	movwf	___ftmul@f3_as_product+1
  9490  168D  3000               	movlw	0
  9491  168E  00A7               	movwf	___ftmul@f3_as_product+2
  9492  168F  3007               	movlw	7
  9493  1690  00A0               	movwf	??___ftmul
  9494  1691  0820               	movf	??___ftmul,w
  9495  1692  00A8               	movwf	___ftmul@cntr
  9496  1693                     i1l2595:	
  9497  1693  1C78               	btfss	___ftmul@f1,0
  9498  1694  2EA3               	goto	i1l2599
  9499  1695  087B               	movf	___ftmul@f2,w
  9500  1696  07A5               	addwf	___ftmul@f3_as_product,f
  9501  1697  087C               	movf	___ftmul@f2+1,w
  9502  1698  1103               	clrz
  9503  1699  1803               	skipnc
  9504  169A  0A7C               	incf	___ftmul@f2+1,w
  9505  169B  1D03               	btfss	3,2
  9506  169C  07A6               	addwf	___ftmul@f3_as_product+1,f
  9507  169D  087D               	movf	___ftmul@f2+2,w
  9508  169E  1103               	clrz
  9509  169F  1803               	skipnc
  9510  16A0  0A7D               	incf	___ftmul@f2+2,w
  9511  16A1  1D03               	btfss	3,2
  9512  16A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  9513  16A3                     i1l2599:	
  9514  16A3  3001               	movlw	1
  9515  16A4                     u299_25:	
  9516  16A4  1003               	clrc
  9517  16A5  0CFA               	rrf	___ftmul@f1+2,f
  9518  16A6  0CF9               	rrf	___ftmul@f1+1,f
  9519  16A7  0CF8               	rrf	___ftmul@f1,f
  9520  16A8  3EFF               	addlw	-1
  9521  16A9  1D03               	skipz
  9522  16AA  2EA4               	goto	u299_25
  9523  16AB  3001               	movlw	1
  9524  16AC                     u300_25:	
  9525  16AC  1003               	clrc
  9526  16AD  0DFB               	rlf	___ftmul@f2,f
  9527  16AE  0DFC               	rlf	___ftmul@f2+1,f
  9528  16AF  0DFD               	rlf	___ftmul@f2+2,f
  9529  16B0  3EFF               	addlw	-1
  9530  16B1  1D03               	skipz
  9531  16B2  2EAC               	goto	u300_25
  9532  16B3  3001               	movlw	1
  9533  16B4  02A8               	subwf	___ftmul@cntr,f
  9534  16B5  1D03               	btfss	3,2
  9535  16B6  2E93               	goto	i1l2595
  9536  16B7  3009               	movlw	9
  9537  16B8  00A0               	movwf	??___ftmul
  9538  16B9  0820               	movf	??___ftmul,w
  9539  16BA  00A8               	movwf	___ftmul@cntr
  9540  16BB                     i1l2607:	
  9541  16BB  1C78               	btfss	___ftmul@f1,0
  9542  16BC  2ECB               	goto	i1l2611
  9543  16BD  087B               	movf	___ftmul@f2,w
  9544  16BE  07A5               	addwf	___ftmul@f3_as_product,f
  9545  16BF  087C               	movf	___ftmul@f2+1,w
  9546  16C0  1103               	clrz
  9547  16C1  1803               	skipnc
  9548  16C2  0A7C               	incf	___ftmul@f2+1,w
  9549  16C3  1D03               	btfss	3,2
  9550  16C4  07A6               	addwf	___ftmul@f3_as_product+1,f
  9551  16C5  087D               	movf	___ftmul@f2+2,w
  9552  16C6  1103               	clrz
  9553  16C7  1803               	skipnc
  9554  16C8  0A7D               	incf	___ftmul@f2+2,w
  9555  16C9  1D03               	btfss	3,2
  9556  16CA  07A7               	addwf	___ftmul@f3_as_product+2,f
  9557  16CB                     i1l2611:	
  9558  16CB  3001               	movlw	1
  9559  16CC                     u304_25:	
  9560  16CC  1003               	clrc
  9561  16CD  0CFA               	rrf	___ftmul@f1+2,f
  9562  16CE  0CF9               	rrf	___ftmul@f1+1,f
  9563  16CF  0CF8               	rrf	___ftmul@f1,f
  9564  16D0  3EFF               	addlw	-1
  9565  16D1  1D03               	skipz
  9566  16D2  2ECC               	goto	u304_25
  9567  16D3  3001               	movlw	1
  9568  16D4                     u305_25:	
  9569  16D4  1003               	clrc
  9570  16D5  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9571  16D6  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9572  16D7  0CA5               	rrf	___ftmul@f3_as_product,f
  9573  16D8  3EFF               	addlw	-1
  9574  16D9  1D03               	skipz
  9575  16DA  2ED4               	goto	u305_25
  9576  16DB  3001               	movlw	1
  9577  16DC  02A8               	subwf	___ftmul@cntr,f
  9578  16DD  1D03               	btfss	3,2
  9579  16DE  2EBB               	goto	i1l2607
  9580  16DF  0825               	movf	___ftmul@f3_as_product,w
  9581  16E0  00F0               	movwf	___ftpack@arg
  9582  16E1  0826               	movf	___ftmul@f3_as_product+1,w
  9583  16E2  00F1               	movwf	___ftpack@arg+1
  9584  16E3  0827               	movf	___ftmul@f3_as_product+2,w
  9585  16E4  00F2               	movwf	___ftpack@arg+2
  9586  16E5  0824               	movf	___ftmul@exp,w
  9587  16E6  00A0               	movwf	??___ftmul
  9588  16E7  0820               	movf	??___ftmul,w
  9589  16E8  00F3               	movwf	___ftpack@exp
  9590  16E9  0829               	movf	___ftmul@sign,w
  9591  16EA  00A1               	movwf	??___ftmul+1
  9592  16EB  0821               	movf	??___ftmul+1,w
  9593  16EC  00F4               	movwf	___ftpack@sign
  9594  16ED  160A  118A  240D   	fcall	___ftpack
  9595  16F0  0870               	movf	?___ftpack,w
  9596  16F1  00F8               	movwf	?___ftmul
  9597  16F2  0871               	movf	?___ftpack+1,w
  9598  16F3  00F9               	movwf	?___ftmul+1
  9599  16F4  0872               	movf	?___ftpack+2,w
  9600  16F5  00FA               	movwf	?___ftmul+2
  9601  16F6  0008               	return
  9602  16F7                     __end_of___ftmul:	
  9603                           
  9604                           	psect	text41
  9605  140D                     __ptext41:	
  9606 ;; *************** function ___ftpack *****************
  9607 ;; Defined at:
  9608 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  arg             3    0[COMMON] unsigned um
  9611 ;;  exp             1    3[COMMON] unsigned char 
  9612 ;;  sign            1    4[COMMON] unsigned char 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  3    0[COMMON] float 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2, status,0
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9624 ;;      Params:         5       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0
  9626 ;;      Temps:          3       0       0       0       0
  9627 ;;      Totals:         8       0       0       0       0
  9628 ;;Total ram usage:        8 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		___ftadd
  9634 ;;		___ftdiv
  9635 ;;		___ftmul
  9636 ;;		___lwtoft
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           
  9641                           ;psect for function ___ftpack
  9642  140D                     ___ftpack:	
  9643                           
  9644                           ;incstack = 0
  9645                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9646  140D  0873               	movf	___ftpack@exp,w
  9647  140E  1903               	btfsc	3,2
  9648  140F  2C15               	goto	i1l2251
  9649  1410  0872               	movf	___ftpack@arg+2,w
  9650  1411  0471               	iorwf	___ftpack@arg+1,w
  9651  1412  0470               	iorwf	___ftpack@arg,w
  9652  1413  1D03               	skipz
  9653  1414  2C28               	goto	i1l2257
  9654  1415                     i1l2251:	
  9655  1415  3000               	movlw	0
  9656  1416  00F0               	movwf	?___ftpack
  9657  1417  3000               	movlw	0
  9658  1418  00F1               	movwf	?___ftpack+1
  9659  1419  3000               	movlw	0
  9660  141A  00F2               	movwf	?___ftpack+2
  9661  141B  0008               	return
  9662  141C                     i1l2255:	
  9663  141C  3001               	movlw	1
  9664  141D  00F5               	movwf	??___ftpack
  9665  141E  0875               	movf	??___ftpack,w
  9666  141F  07F3               	addwf	___ftpack@exp,f
  9667  1420  3001               	movlw	1
  9668  1421                     u213_25:	
  9669  1421  1003               	clrc
  9670  1422  0CF2               	rrf	___ftpack@arg+2,f
  9671  1423  0CF1               	rrf	___ftpack@arg+1,f
  9672  1424  0CF0               	rrf	___ftpack@arg,f
  9673  1425  3EFF               	addlw	-1
  9674  1426  1D03               	skipz
  9675  1427  2C21               	goto	u213_25
  9676  1428                     i1l2257:	
  9677  1428  30FE               	movlw	254
  9678  1429  0572               	andwf	___ftpack@arg+2,w
  9679  142A  1903               	btfsc	3,2
  9680  142B  2C43               	goto	i1l756
  9681  142C  2C1C               	goto	i1l2255
  9682  142D                     i1l2259:	
  9683  142D  3001               	movlw	1
  9684  142E  00F5               	movwf	??___ftpack
  9685  142F  0875               	movf	??___ftpack,w
  9686  1430  07F3               	addwf	___ftpack@exp,f
  9687  1431  3001               	movlw	1
  9688  1432  07F0               	addwf	___ftpack@arg,f
  9689  1433  3000               	movlw	0
  9690  1434  1803               	skipnc
  9691  1435  3001               	movlw	1
  9692  1436  07F1               	addwf	___ftpack@arg+1,f
  9693  1437  3000               	movlw	0
  9694  1438  1803               	skipnc
  9695  1439  3001               	movlw	1
  9696  143A  07F2               	addwf	___ftpack@arg+2,f
  9697  143B  3001               	movlw	1
  9698  143C                     u215_25:	
  9699  143C  1003               	clrc
  9700  143D  0CF2               	rrf	___ftpack@arg+2,f
  9701  143E  0CF1               	rrf	___ftpack@arg+1,f
  9702  143F  0CF0               	rrf	___ftpack@arg,f
  9703  1440  3EFF               	addlw	-1
  9704  1441  1D03               	skipz
  9705  1442  2C3C               	goto	u215_25
  9706  1443                     i1l756:	
  9707  1443  30FF               	movlw	255
  9708  1444  0572               	andwf	___ftpack@arg+2,w
  9709  1445  1903               	btfsc	3,2
  9710  1446  2C52               	goto	i1l2267
  9711  1447  2C2D               	goto	i1l2259
  9712  1448                     i1l2265:	
  9713  1448  3001               	movlw	1
  9714  1449  02F3               	subwf	___ftpack@exp,f
  9715  144A  3001               	movlw	1
  9716  144B                     u217_25:	
  9717  144B  1003               	clrc
  9718  144C  0DF0               	rlf	___ftpack@arg,f
  9719  144D  0DF1               	rlf	___ftpack@arg+1,f
  9720  144E  0DF2               	rlf	___ftpack@arg+2,f
  9721  144F  3EFF               	addlw	-1
  9722  1450  1D03               	skipz
  9723  1451  2C4B               	goto	u217_25
  9724  1452                     i1l2267:	
  9725  1452  1FF1               	btfss	___ftpack@arg+1,7
  9726  1453  2C48               	goto	i1l2265
  9727  1454  1873               	btfsc	___ftpack@exp,0
  9728  1455  2C5C               	goto	i1l762
  9729  1456  30FF               	movlw	255
  9730  1457  05F0               	andwf	___ftpack@arg,f
  9731  1458  307F               	movlw	127
  9732  1459  05F1               	andwf	___ftpack@arg+1,f
  9733  145A  30FF               	movlw	255
  9734  145B  05F2               	andwf	___ftpack@arg+2,f
  9735  145C                     i1l762:	
  9736  145C  1003               	clrc
  9737  145D  0CF3               	rrf	___ftpack@exp,f
  9738  145E  0873               	movf	___ftpack@exp,w
  9739  145F  00F5               	movwf	??___ftpack
  9740  1460  01F6               	clrf	??___ftpack+1
  9741  1461  01F7               	clrf	??___ftpack+2
  9742  1462  3010               	movlw	16
  9743  1463                     u220_25:	
  9744  1463  1003               	clrc
  9745  1464  0DF5               	rlf	??___ftpack,f
  9746  1465  0DF6               	rlf	??___ftpack+1,f
  9747  1466  0DF7               	rlf	??___ftpack+2,f
  9748  1467  3EFF               	addlw	-1
  9749  1468  1D03               	skipz
  9750  1469  2C63               	goto	u220_25
  9751  146A  0875               	movf	??___ftpack,w
  9752  146B  04F0               	iorwf	___ftpack@arg,f
  9753  146C  0876               	movf	??___ftpack+1,w
  9754  146D  04F1               	iorwf	___ftpack@arg+1,f
  9755  146E  0877               	movf	??___ftpack+2,w
  9756  146F  04F2               	iorwf	___ftpack@arg+2,f
  9757  1470  0874               	movf	___ftpack@sign,w
  9758  1471  1903               	btfsc	3,2
  9759  1472  0008               	return
  9760  1473  17F2               	bsf	___ftpack@arg+2,7
  9761  1474  0008               	return
  9762  1475                     __end_of___ftpack:	
  9763  007E                     btemp	set	126	;btemp
  9764  007E                     wtemp	set	126
  9765  007E                     wtemp0	set	126
  9766  0080                     wtemp1	set	128
  9767  0082                     wtemp2	set	130
  9768  0084                     wtemp3	set	132
  9769  0086                     wtemp4	set	134
  9770  0088                     wtemp5	set	136
  9771  007F                     wtemp6	set	127
  9772  007E                     ttemp	set	126
  9773  007E                     ttemp0	set	126
  9774  0081                     ttemp1	set	129
  9775  0084                     ttemp2	set	132
  9776  0087                     ttemp3	set	135
  9777  007F                     ttemp4	set	127
  9778  007E                     ltemp	set	126
  9779  007E                     ltemp0	set	126
  9780  0082                     ltemp1	set	130
  9781  0086                     ltemp2	set	134
  9782  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        12
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     34      79
    BANK3            96      0      33
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_DutyCycle2
    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4667
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2205
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     442
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     260
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   61160
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   57268
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     148
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     i1___lwdiv
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      21       9       34.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CD      12        0.0%
ABS                  0      0      CD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Jun 06 19:20:36 2022

           ?i1_PWM_DutyCycle2 003E                             _x 00D7                             _y 00DA  
                           pc 0002                   ?_LCD_Cursor 00A0       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00E6                            fsr 0004           ___wmul@multiplicand 00A2  
          ??i1_PWM_DutyCycle2 007C              i1___wmul@product 007C                  ___ftadd@exp1 002F  
                ___ftadd@exp2 002E                 _contagens_tm0 00DD                  ___ftadd@sign 002D  
                         l224 08E0                           l199 0AB3                           l650 0777  
                         l476 0E76                           l494 0F3B                           l595 120D  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0CB5  
                         _rpm 00E1                           fsr0 0004                           _pwm 00EB  
                         _sum 00D1    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00A4                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 003A                  ___ftdiv@sign 003F  
                        l3101 0F2D            LCD_WriteString@Str 00A2                          l3111 0F5E  
                        l3041 124F                          l3027 1143                          l3141 0FAD  
                        l3109 0F5A                          l3061 0E7B                          l3135 0F9E  
                        l3119 0F6F                          l3127 0F85                          l3063 0E86  
                        l3055 0E72                          l3151 0E50                          l2521 1205  
                        l3129 0F89                          l3153 0FF9                          l2515 107A  
                        l3067 0E98                          l2541 0788                          l2701 12C7  
                        l3149 0FB1                          l3093 0F0C                          l3077 0ED6  
                        l2551 07A8                          l3079 0EED                          l2705 12D5  
                        l3089 0F06                          l2563 07DD                          l2549 0798  
                        l2709 12E0                          l2567 07EB                          l2559 07D0  
                        l2921 1280                          l2683 1353                          l2675 132F  
                        l2677 133D                          l2687 135E                          l2699 12B9  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3205 133E                          u3215 134A                          u3225 1354  
                        u4107 10DB                          u4117 147F                          u4207 1232  
                        u4127 148F                          u3255 12BC                          u4217 1240  
                        u4137 149D                          u3185 1332                          u4227 124C  
                        u4147 14A9                          u3275 12CD                          u4237 10C4  
                        u4157 14B5                          u3285 12D6                          u2805 120E  
                        u4167 14C3                          u3615 118B                          u2815 1215  
                        u4087 0AAC                          u4177 14D1                          u2905 07D1  
                        u4097 0B58                          u4187 14DD                          u4197 114F  
                        u3645 1370                          u3735 0F23                          u2865 079C  
                        u3675 116A                          u2885 07AA                          u2895 07BF  
                        u3775 0F4A                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0A0E                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          btemp 007E  
            __end_of_ADC_Init 109F                          ltemp 007E                          start 0012  
                        ttemp 007E                          wtemp 007E                 ?_LCD_WriteCmd 0070  
               _LCD_WriteData 10CA                  ___ftmul@cntr 0028                  ___ftmul@sign 0029  
     __end_of_USART_WriteChar 08EA                         ??_ISR 0069                  ___fttol@exp1 003D  
                ___fttol@lval 0039                   ?_TIMER0_Set 0070              __end_of_LCD_Init 14E0  
             __end_of___aldiv 07F4                         ?_main 0070                         _EEADR 010D  
             __end_of___ftadd 1800                         STR_10 0884                         STR_11 0842  
                       STR_12 085F                         STR_13 0873                         STR_14 08D6  
                       STR_15 08D6                         STR_16 08C5                         STR_17 08D0  
               __CFG_WDTE$OFF 0000                         STR_18 08C8                         STR_19 081A  
             __end_of___ftdiv 1626               __end_of___ftneg 1061               __end_of___ftmul 16F7  
                       _T1CON 0010               __end_of___fttol 156E               __end_of___lwdiv 1365  
                       i1l118 0A05                         i1l128 0CAC                         i1l224 1040  
                       i1l184 0D47               __end_of___lwmod 12E7                         i1l179 0E3C  
                       i1l762 145C                         i1l595 11C4                         i1l756 1443  
                       i1l785 179F                         _RCREG 001A                         _TMR1H 000F  
                       _TMR1L 000E                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019                 __CFG_PWRTE$ON 0000                         _Fuzzy 0039  
                       _derro 0190               __end_of_dpowers 081A               __end_of_max_val 1135  
             __end_of_isdigit 107C                 ___ftpack@sign 0074                         _trimf 08EA  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020                         pclath 000A  
            __end_of_PWM_Init 1201              __end_ofi1___wmul 11DD                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 1000  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00A0                ?_LCD_WriteData 0070  
                 ?_USART_Init 00AF         i1TIMER0_Set@contagens 0070               __initialization 0015  
                __end_of_main 0B5F                        ??_main 00BF                 ___fttol@sign1 0038  
                ?_TIMER0_Init 0070             __end_of_LCD_Clear 124F                    Fuzzy@a_234 0059  
                  Fuzzy@a_235 005B                        ?_Fuzzy 0070                    Fuzzy@freio 0052  
                  Fuzzy@reduz 0060                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 1475                        ?_trimf 0040  
                      i1l2313 1765                        i1l2251 1415                        i1l2331 17B1  
                      i1l2315 1771                        i1l2307 1750                        i1l3203 0CEB  
                      i1l2325 178F                        i1l2317 1776                        i1l2255 141C  
                      i1l2335 17C3                        i1l2327 179B                        i1l2319 177A  
                      i1l3215 0D19                        i1l2265 1448                        i1l2257 1428  
                      i1l2345 17E6                        i1l2361 159C                        i1l2441 09E8  
                      i1l3233 0D60                        i1l3209 0D02                        i1l2267 1452  
                      i1l2259 142D                        i1l2611 16CB                        i1l2355 1586  
                      i1l2435 0963                        i1l3171 11BC                        i1l3251 0DA5  
                      i1l3227 0D49                        i1l2285 1720                        i1l3245 0D8E  
                      i1l2607 16BB                        i1l2295 1736                        i1l2383 1600  
                      i1l2375 15E1                        i1l2471 0C8F                        i1l3239 0D77  
                      i1l3263 0DDB                        i1l2289 1727                        i1l2465 0C0A  
                      i1l2801 0224                        i1l3257 0DBC                        i1l2627 14FA  
                      i1l2395 13D7                        i1l2459 0BD8                        i1l2723 1197  
                      i1l3275 0DF8                        i1l2661 1565                        i1l2653 1549  
                      i1l2645 152C                        i1l2741 12FD                        i1l2901 1105  
                      i1l3197 0CD4                        i1l2583 1654                        i1l2655 1554  
                      i1l2647 153C                        i1l2399 13FE                        i1l2751 131E  
                      i1l2823 032E                        i1l2807 028B                        i1l3287 0E37  
                      i1l2577 163E                        i1l2657 1557                        i1l2833 0409  
                      i1l3289 0E38                        i1l2595 1693                        i1l2747 1313  
                      i1l2739 12EF                        i1l2851 0517                        i1l2827 03A2  
                      i1l2861 059B                        i1l2909 1114                        i1l2599 16A3  
                      i1l2847 049D                        i1l2783 0116                        i1l2857 057E  
                      i1l2867 05CD                        i1l2779 00F9                        u220_25 1463  
                      u300_25 16AC                        i1l2797 01AA                        u213_25 1421  
                      u215_25 143C                        u311_25 152D                        u231_25 1751  
                      u304_25 16CC                        u240_25 1790                        u217_25 144B  
                      u305_25 16D4                        u314_25 154B                        u234_25 1766  
                      u250_25 15E2                        u251_25 15F3                        u331_25 10F2  
                      u308_25 1501                        u252_25 1601                        u237_25 177B  
                      u333_25 12F2                        u342_25 01A8                        u255_21 13CA  
                      u255_22 13CB                        u255_23 13D0                        u255_24 13D1  
                      u335_25 12FE                        u351_25 049B                        u248_25 15AE  
                      u336_25 130A                        u344_25 0289                        u257_21 13F1  
                      u257_22 13F2                        u257_23 13F7                        u257_24 13F8  
                      u249_25 15C0                        u337_25 1314                        u353_25 057C  
            __end_of___lwtoft 10B3                        u347_25 032C                        u349_25 0407  
         __size_of_TIMER0_Set 0008                        u295_25 1660                        u296_25 1672  
                      u299_25 16A4                        u388_25 11C5                        u389_25 11CC  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 0057  
            LCD_WriteCmd@Byte 00A1           i1_USART_WriteString 1197                        ___ftge 13AE  
                   ??___aldiv 00A8                        ___wmul 1201                     ??___ftadd 0029  
              _PWM_DutyCycle1 1155                _PWM_DutyCycle2 1176              ?_USART_WriteChar 0070  
                   ??___ftdiv 0036                     ??___ftneg 007C                        _deltaV 006D  
                   ??___ftmul 0020                     ??___fttol 0034                     ??___lwdiv 00A4  
                   ??___lwmod 00AC                        _fitemp 00C5         USART_ReceiveChar@byte 0074  
                      _trapmf 0B5F                        _pulsos 00DF                        _status 0197  
       ___ftmul@f3_as_product 0025                     ??_max_val 007C             __end_ofi1___lwdiv 1325  
                   ??_isdigit 00A0                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 0043  
                      trimf@b 0046                        trimf@c 0049                        trimf@x 0040  
                   ??_sprintf 00B1                 ?i1_TIMER0_Set 0070       __end_of__initialization 0035  
                   ?_LCD_Init 0070                    ___ftadd@f1 0023                    ___ftadd@f2 0026  
             ??_LCD_WriteData 00A0                    ___ftge@ff1 0030                    ___ftge@ff2 0033  
                  ___ftdiv@f1 0033                    ___ftdiv@f2 0030                    ___ftdiv@f3 003B  
                  ___ftneg@f1 0020        __end_of_PWM_DutyCycle1 1176        __end_of_PWM_DutyCycle2 1197  
                  ___ftmul@f1 0078                    ___ftmul@f2 007B                    ___fttol@f1 0030  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 0765                  __pidataBANK1 07F4  
               LCD_Cursor@Col 00A0                 LCD_Cursor@Row 00A2                  ??_LCD_Cursor 00A1  
             _LCD_WriteString 124F                 __end_of_trimf 0A0E                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00A0          __end_of_LCD_WriteCmd 10CA         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 00BB                       ??_trimf 007C                    __pbssBANK0 006D  
                  __pbssBANK1 00C2                    __pbssBANK3 0190            __end_of_LCD_Cursor 1155  
                  ??_LCD_Init 00A2         i1USART_WriteChar@byte 0070                 Fuzzy@deltaRpm 0066  
             ?_PWM_DutyCycle1 00A0               ?_PWM_DutyCycle2 00A0                    __pmaintext 0A0E  
                 Fuzzy@mantem 005D                       ?___ftge 0030                       ?___wmul 00A0  
                  __pintentry 0004                  ??_TIMER0_Set 00A0                       _CCP1CON 0017  
                     _CCP2CON 001D                     ?___ftpack 0070                       ?_trapmf 0040  
                  ??_PWM_Init 00A0                    ??i1___wmul 007C                     ?___lwtoft 0078  
        __size_of_TIMER0_Init 000B                       _SSPCON2 0091                    __stringtab 0800  
          __end_of_TIMER0_Set 104F       __end_of_LCD_WriteString 1280                     _ADCResult 0193  
                ??_USART_Init 00B3             LCD_WriteData@Byte 00A1                       ___aldiv 0765  
             __size_of___ftge 005F                       ___ftadd 16F7                       ___ftdiv 156E  
                     ___ftneg 1057               __size_of___wmul 0025                       ___ftmul 1626  
                     ___fttol 14E0                       ___lwdiv 1325                       ___lwmod 12B1  
                  ??___ftpack 0075                       __ptext1 0E49                       __ptext2 106C  
                     __ptext3 1201                       __ptext4 12B1                       __ptext5 1325  
                     __ptext6 1280                       __ptext7 08DD                       __ptext8 1365  
                     __ptext9 0765                    _pas_cooler 00E9                    ??___lwtoft 007B  
             __size_of_trapmf 0156                  __size_of_ISR 0194                     _T1CONbits 0010  
                     _dpowers 0810             i1___lwdiv@divisor 0070                     _T2CONbits 0012  
                     _max_val 1117                       _isdigit 106C             i1___lwdiv@counter 0077  
            ___aldiv@dividend 00A4                     _LCD_Clear 1226            __end_of_USART_Init 13AE  
                     _sprintf 0E49                       clrloop0 1050          end_of_initialization 0035  
                   _RCSTAbits 0018              ___aldiv@quotient 00AB                       trapmf@a 0043  
                     trapmf@b 0046                       trapmf@c 0049                       trapmf@d 004C  
                     trapmf@x 0040                       trimf@ua 004C          __end_ofi1_TIMER0_Set 103F  
       i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006  
                   _PORTEbits 0009                    _setpointUI 00ED                    ?_LCD_Clear 0070  
            i1_PWM_DutyCycle2 10E1             __size_of_ADC_Init 0012                     i1___lwdiv 12E7  
                _contador_rb6 0195           PWM_DutyCycle1@valor 00A0                    _total_area 00D4  
         PWM_DutyCycle2@valor 00A0                   _CCP1CONbits 0017                   ___ftdiv@exp 003E  
                 _CCP2CONbits 001D                     _TXSTAbits 0098              ?_LCD_WriteString 00A2  
           __size_of_LCD_Init 006B                  _LCD_WriteCmd 10B3                   ___ftmul@exp 0024  
              __end_of___ftge 140D                __end_of___wmul 1226             i1_USART_WriteChar 103F  
          ?i1_USART_WriteChar 0070                __end_of_trapmf 0CB5      __size_of_USART_WriteChar 000D  
           __size_of_PWM_Init 0024           start_initialization 0015             __size_ofi1___wmul 0023  
                 __end_of_ISR 0E49           ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070  
            ??_PWM_DutyCycle1 00A2              ??_PWM_DutyCycle2 00A2         __end_of_LCD_WriteData 10E1  
           _USART_ReceiveChar 10FC                      ??___ftge 0036            ?_USART_ReceiveChar 0070  
   __end_ofi1_USART_WriteChar 1047                      ??___wmul 00A4                    init_fetch0 107C  
                 __pdataBANK1 00E3   __end_ofi1_USART_WriteString 11BA                      ??_trapmf 007C  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
                 ??_LCD_Clear 00A2           __end_of__stringdata 08DB                  _isdigit$1449 00A0  
                 sprintf@_val 00B6                   sprintf@flag 00BA                   sprintf@prec 00B5  
   __end_of_USART_ReceiveChar 1117         __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00A2  
         TIMER0_Set@contagens 00A0                  Fuzzy@aumenta 0063                      ?___aldiv 00A0  
                    ?___ftadd 0023                      ?___ftdiv 0030                      ?___ftneg 0020  
                    ?___ftmul 0078                      ?___fttol 0030                      ?___lwdiv 00A0  
                    ?___lwmod 00A8                     __pstrings 0800                     _ativa_fan 00C2  
               ??_TIMER0_Init 00A0            USART_Init@BaudRate 00AF                      ?_max_val 003C  
                    ?_isdigit 0070                      _ADC_Init 108D                     _fop_rule1 00C8  
                   _fop_rule2 00CB                     _fop_rule3 00CE                __size_of_Fuzzy 072C  
            ___lwdiv@quotient 00A5                   ??i1___lwdiv 0074                      ?_sprintf 00AE  
              __size_of_trimf 0124             ??_USART_WriteChar 00A0                  i1_TIMER0_Set 1039  
             ___aldiv@divisor 00A0             interrupt_function 0004               ___aldiv@counter 00A9  
                    _LCD_Init 1475                ___wmul@product 00A4                     clear_ram0 104F  
                    _PIE1bits 008C                      _PIE2bits 008D                      _PIR1bits 000C  
                    _PIR2bits 000D                     _temp_lida 0199      __end_ofi1_PWM_DutyCycle2 10FC  
                   _tempo_rb6 019B    __size_ofi1_USART_WriteChar 0008                   _display_rpm 01A7  
                 _display_pwm 019D                    _ADCON0bits 001F                   __stringbase 080F  
                  _ADCON1bits 009F                   __stringdata 081A                      _PWM_Init 11DD  
           ___wmul@multiplier 00A0                      i1___wmul 11BA           __end_of_TIMER0_Init 106C  
  __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C                      Fuzzy@tip 0054  
            __size_of___aldiv 008F              __size_of___ftadd 0109              __size_of___ftdiv 00B8  
            __size_of___ftneg 000A              __size_of___ftmul 00D1              __size_of___fttol 008E  
            __size_of___lwdiv 0040              __size_of___lwmod 0036                      ___ftpack 140D  
          __end_of__stringtab 0810                      ___lwtoft 109F              __size_of_max_val 001E  
            __size_of_isdigit 0010               ___lwdiv@divisor 00A0               ___lwdiv@counter 00A7  
           _USART_WriteString 1280                      __ptext10 1047                      __ptext11 1061  
                    __ptext20 10B3                      __ptext12 11DD                      __ptext21 108D  
                    __ptext13 1176                      __ptext30 10E1                      __ptext22 0CB5  
                    __ptext14 1155                      __ptext31 08EA                      __ptext23 11BA  
                    __ptext15 124F                      __ptext40 1626                      __ptext32 0B5F  
                    __ptext24 1039                      __ptext16 10CA                      __ptext41 140D  
                    __ptext33 1057                      __ptext25 10FC                      __ptext17 1475  
                    __ptext34 156E                      __ptext26 1197                      __ptext18 1135  
                    __ptext35 16F7                      __ptext27 103F                      __ptext19 1226  
                    __ptext36 1117                      __ptext28 0039                      __ptext37 13AE  
                    __ptext29 12E7                      __ptext38 109F                      __ptext39 14E0  
          ?_USART_WriteString 00A1              __size_of_sprintf 01B7            i1___lwdiv@dividend 0072  
               __size_of_main 0151           USART_WriteChar@byte 00A0           ??_USART_WriteString 00A3  
      i1USART_WriteString@str 0071                      _setpoint 00E3                    _LCD_Cursor 1135  
    __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075                   _TIMER0_Init 1061  
                  _INTCONbits 000B     __end_of_USART_WriteString 12B1                      max_val@a 003C  
                    max_val@b 003F                      init_ram0 1080                      isdigit@c 00A1  
                    intlevel1 0000                     sprintf@ap 00B4                     sprintf@sp 00BD  
            ___lwmod@dividend 00AA                     stringcode 080A          USART_WriteString@str 00A1  
                  _TIMER0_Set 1047                      trapmf@ua 004F               _USART_WriteChar 08DD  
                    sprintf@c 00BE                      sprintf@f 00AE               ___lwmod@divisor 00A8  
             ___lwmod@counter 00AD                      stringdir 080A                      stringtab 0800  
                ___aldiv@sign 00AA        __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 003E                    _SSPCONbits 0014  
                  _USART_Init 1365  
