

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 12:13:11 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  07FD                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  07FD  3407               	retlw	7
   607  07FE  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  10BB                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  10BB  3400               	retlw	0
   614  10BC  34A0               	retlw	160
   615  10BD  3441               	retlw	65
   616                           
   617                           ;initializer for _tf
   618  10BE  3400               	retlw	0
   619  10BF  34A0               	retlw	160
   620  10C0  3441               	retlw	65
   621                           
   622                           	psect	stringtext
   623  1800                     __pstringtext:	
   624  1800                     stringtab:	
   625  1800                     __stringtab:	
   626                           
   627                           ;	String table - string pointers are 2 bytes each
   628  1800  1BFF               	btfsc	btemp+1,7
   629  1801  280A               	ljmp	stringcode
   630  1802  1383               	bcf	3,7
   631  1803  187F               	btfsc	btemp+1,0
   632  1804  1783               	bsf	3,7
   633  1805  0800               	movf	0,w
   634  1806  0A84               	incf	4,f
   635  1807  1903               	skipnz
   636  1808  0AFF               	incf	btemp+1,f
   637  1809  0008               	return
   638  180A                     stringcode:	
   639  180A  087F               	movf	btemp+1,w
   640  180B  397F               	andlw	127
   641  180C  008A               	movwf	10
   642  180D  0804               	movf	4,w
   643  180E  0A84               	incf	4,f
   644  180F  1903               	skipnz
   645  1810  0AFF               	incf	btemp+1,f
   646  1811  0082               	movwf	2
   647  1812                     __stringbase:	
   648  1812                     __end_of__stringtab:	
   649  1812                     _dpowers:	
   650  1812  3401               	retlw	1
   651  1813  3400               	retlw	0
   652  1814  340A               	retlw	10
   653  1815  3400               	retlw	0
   654  1816  3464               	retlw	100
   655  1817  3400               	retlw	0
   656  1818  34E8               	retlw	232
   657  1819  3403               	retlw	3
   658  181A  3410               	retlw	16
   659  181B  3427               	retlw	39
   660  181C                     __end_of_dpowers:	
   661  000E                     _TMR1	set	14
   662  001F                     _ADCON0bits	set	31
   663  001E                     _ADRESH	set	30
   664  0017                     _CCP1CON	set	23
   665  0017                     _CCP1CONbits	set	23
   666  001D                     _CCP2CON	set	29
   667  001D                     _CCP2CONbits	set	29
   668  0015                     _CCPR1L	set	21
   669  001B                     _CCPR2L	set	27
   670  000B                     _INTCONbits	set	11
   671  000C                     _PIR1bits	set	12
   672  000D                     _PIR2bits	set	13
   673  0005                     _PORTA	set	5
   674  0006                     _PORTB	set	6
   675  0006                     _PORTBbits	set	6
   676  0007                     _PORTC	set	7
   677  0008                     _PORTD	set	8
   678  0009                     _PORTE	set	9
   679  0009                     _PORTEbits	set	9
   680  001A                     _RCREG	set	26
   681  0018                     _RCSTAbits	set	24
   682  0013                     _SSPBUF	set	19
   683  0014                     _SSPCONbits	set	20
   684  0010                     _T1CON	set	16
   685  0010                     _T1CONbits	set	16
   686  0012                     _T2CONbits	set	18
   687  0001                     _TMR0	set	1
   688  000F                     _TMR1H	set	15
   689  000E                     _TMR1L	set	14
   690  0019                     _TXREG	set	25
   691  00C1                     _OERR	set	193
   692  009F                     _ADCON1bits	set	159
   693  009E                     _ADRESL	set	158
   694  0081                     _OPTION_REGbits	set	129
   695  008C                     _PIE1bits	set	140
   696  008D                     _PIE2bits	set	141
   697  0092                     _PR2	set	146
   698  0099                     _SPBRG	set	153
   699  0093                     _SSPADD	set	147
   700  0091                     _SSPCON2	set	145
   701  0091                     _SSPCON2bits	set	145
   702  0094                     _SSPSTATbits	set	148
   703  0085                     _TRISA	set	133
   704  0086                     _TRISB	set	134
   705  0087                     _TRISC	set	135
   706  0088                     _TRISD	set	136
   707  0089                     _TRISE	set	137
   708  0098                     _TXSTAbits	set	152
   709  010D                     _EEADR	set	269
   710  010C                     _EEDATA	set	268
   711  018C                     _EECON1bits	set	396
   712  018D                     _EECON2	set	397
   713  181C                     __stringdata:	
   714  181C                     STR_19:	
   715  181C  340A               	retlw	10
   716  181D  340D               	retlw	13
   717  181E  3420               	retlw	32	;' '
   718  181F  342D               	retlw	45	;'-'
   719  1820  342D               	retlw	45	;'-'
   720  1821  342D               	retlw	45	;'-'
   721  1822  342D               	retlw	45	;'-'
   722  1823  342D               	retlw	45	;'-'
   723  1824  342D               	retlw	45	;'-'
   724  1825  342D               	retlw	45	;'-'
   725  1826  3420               	retlw	32	;' '
   726  1827  3445               	retlw	69	;'E'
   727  1828  3453               	retlw	83	;'S'
   728  1829  3454               	retlw	84	;'T'
   729  182A  344F               	retlw	79	;'O'
   730  182B  3455               	retlw	85	;'U'
   731  182C  3452               	retlw	82	;'R'
   732  182D  344F               	retlw	79	;'O'
   733  182E  3420               	retlw	32	;' '
   734  182F  3444               	retlw	68	;'D'
   735  1830  3445               	retlw	69	;'E'
   736  1831  3420               	retlw	32	;' '
   737  1832  3450               	retlw	80	;'P'
   738  1833  3449               	retlw	73	;'I'
   739  1834  344C               	retlw	76	;'L'
   740  1835  3448               	retlw	72	;'H'
   741  1836  3441               	retlw	65	;'A'
   742  1837  3420               	retlw	32	;' '
   743  1838  342D               	retlw	45	;'-'
   744  1839  342D               	retlw	45	;'-'
   745  183A  342D               	retlw	45	;'-'
   746  183B  342D               	retlw	45	;'-'
   747  183C  342D               	retlw	45	;'-'
   748  183D  342D               	retlw	45	;'-'
   749  183E  342D               	retlw	45	;'-'
   750  183F  3420               	retlw	32	;' '
   751  1840  340A               	retlw	10
   752  1841  340D               	retlw	13
   753  1842  3420               	retlw	32	;' '
   754  1843  3400               	retlw	0
   755  1844                     STR_11:	
   756  1844  3449               	retlw	73	;'I'
   757  1845  346E               	retlw	110	;'n'
   758  1846  3469               	retlw	105	;'i'
   759  1847  3463               	retlw	99	;'c'
   760  1848  3469               	retlw	105	;'i'
   761  1849  3461               	retlw	97	;'a'
   762  184A  346C               	retlw	108	;'l'
   763  184B  3469               	retlw	105	;'i'
   764  184C  347A               	retlw	122	;'z'
   765  184D  3461               	retlw	97	;'a'
   766  184E  346E               	retlw	110	;'n'
   767  184F  3464               	retlw	100	;'d'
   768  1850  346F               	retlw	111	;'o'
   769  1851  3420               	retlw	32	;' '
   770  1852  346F               	retlw	111	;'o'
   771  1853  3420               	retlw	32	;' '
   772  1854  3450               	retlw	80	;'P'
   773  1855  3449               	retlw	73	;'I'
   774  1856  3443               	retlw	67	;'C'
   775  1857  3431               	retlw	49	;'1'
   776  1858  3436               	retlw	54	;'6'
   777  1859  3446               	retlw	70	;'F'
   778  185A  3438               	retlw	56	;'8'
   779  185B  3437               	retlw	55	;'7'
   780  185C  3437               	retlw	55	;'7'
   781  185D  3441               	retlw	65	;'A'
   782  185E  340A               	retlw	10
   783  185F  340D               	retlw	13
   784  1860  3400               	retlw	0
   785  1861                     STR_12:	
   786  1861  3455               	retlw	85	;'U'
   787  1862  3453               	retlw	83	;'S'
   788  1863  3441               	retlw	65	;'A'
   789  1864  3452               	retlw	82	;'R'
   790  1865  3454               	retlw	84	;'T'
   791  1866  343A               	retlw	58	;':'
   792  1867  3420               	retlw	32	;' '
   793  1868  3431               	retlw	49	;'1'
   794  1869  3431               	retlw	49	;'1'
   795  186A  3435               	retlw	53	;'5'
   796  186B  342E               	retlw	46	;'.'
   797  186C  3432               	retlw	50	;'2'
   798  186D  3430               	retlw	48	;'0'
   799  186E  3430               	retlw	48	;'0'
   800  186F  3462               	retlw	98	;'b'
   801  1870  3470               	retlw	112	;'p'
   802  1871  3473               	retlw	115	;'s'
   803  1872  340A               	retlw	10
   804  1873  340D               	retlw	13
   805  1874  3400               	retlw	0
   806  1875                     STR_13:	
   807  1875  3449               	retlw	73	;'I'
   808  1876  346E               	retlw	110	;'n'
   809  1877  3469               	retlw	105	;'i'
   810  1878  3463               	retlw	99	;'c'
   811  1879  3469               	retlw	105	;'i'
   812  187A  3461               	retlw	97	;'a'
   813  187B  346C               	retlw	108	;'l'
   814  187C  3469               	retlw	105	;'i'
   815  187D  347A               	retlw	122	;'z'
   816  187E  3461               	retlw	97	;'a'
   817  187F  346E               	retlw	110	;'n'
   818  1880  3464               	retlw	100	;'d'
   819  1881  346F               	retlw	111	;'o'
   820  1882  342E               	retlw	46	;'.'
   821  1883  342E               	retlw	46	;'.'
   822  1884  342E               	retlw	46	;'.'
   823  1885  3400               	retlw	0
   824  1886                     STR_9:	
   825  1886  340A               	retlw	10
   826  1887  340D               	retlw	13
   827  1888  3470               	retlw	112	;'p'
   828  1889  3477               	retlw	119	;'w'
   829  188A  346D               	retlw	109	;'m'
   830  188B  3420               	retlw	32	;' '
   831  188C  343D               	retlw	61	;'='
   832  188D  3420               	retlw	32	;' '
   833  188E  3431               	retlw	49	;'1'
   834  188F  3430               	retlw	48	;'0'
   835  1890  3430               	retlw	48	;'0'
   836  1891  3430               	retlw	48	;'0'
   837  1892  340A               	retlw	10
   838  1893  340D               	retlw	13
   839  1894  3400               	retlw	0
   840  1895                     STR_10:	
   841  1895  340A               	retlw	10
   842  1896  340D               	retlw	13
   843  1897  3470               	retlw	112	;'p'
   844  1898  3477               	retlw	119	;'w'
   845  1899  346D               	retlw	109	;'m'
   846  189A  3420               	retlw	32	;' '
   847  189B  343D               	retlw	61	;'='
   848  189C  3420               	retlw	32	;' '
   849  189D  3431               	retlw	49	;'1'
   850  189E  3430               	retlw	48	;'0'
   851  189F  3432               	retlw	50	;'2'
   852  18A0  3433               	retlw	51	;'3'
   853  18A1  340A               	retlw	10
   854  18A2  340D               	retlw	13
   855  18A3  3400               	retlw	0
   856  18A4                     STR_6:	
   857  18A4  340A               	retlw	10
   858  18A5  340D               	retlw	13
   859  18A6  3470               	retlw	112	;'p'
   860  18A7  3477               	retlw	119	;'w'
   861  18A8  346D               	retlw	109	;'m'
   862  18A9  3420               	retlw	32	;' '
   863  18AA  343D               	retlw	61	;'='
   864  18AB  3420               	retlw	32	;' '
   865  18AC  3435               	retlw	53	;'5'
   866  18AD  3431               	retlw	49	;'1'
   867  18AE  3432               	retlw	50	;'2'
   868  18AF  340A               	retlw	10
   869  18B0  340D               	retlw	13
   870  18B1  3400               	retlw	0
   871  18B2                     STR_5:	
   872  18B2  340A               	retlw	10
   873  18B3  340D               	retlw	13
   874  18B4  3470               	retlw	112	;'p'
   875  18B5  3477               	retlw	119	;'w'
   876  18B6  346D               	retlw	109	;'m'
   877  18B7  3420               	retlw	32	;' '
   878  18B8  343D               	retlw	61	;'='
   879  18B9  3420               	retlw	32	;' '
   880  18BA  3432               	retlw	50	;'2'
   881  18BB  3435               	retlw	53	;'5'
   882  18BC  3436               	retlw	54	;'6'
   883  18BD  340A               	retlw	10
   884  18BE  340D               	retlw	13
   885  18BF  3400               	retlw	0
   886  18C0                     STR_8:	
   887  18C0  340A               	retlw	10
   888  18C1  340D               	retlw	13
   889  18C2  3470               	retlw	112	;'p'
   890  18C3  3477               	retlw	119	;'w'
   891  18C4  346D               	retlw	109	;'m'
   892  18C5  3420               	retlw	32	;' '
   893  18C6  343D               	retlw	61	;'='
   894  18C7  3420               	retlw	32	;' '
   895  18C8  3438               	retlw	56	;'8'
   896  18C9  3439               	retlw	57	;'9'
   897  18CA  3436               	retlw	54	;'6'
   898  18CB  340A               	retlw	10
   899  18CC  340D               	retlw	13
   900  18CD  3400               	retlw	0
   901  18CE                     STR_4:	
   902  18CE  340A               	retlw	10
   903  18CF  340D               	retlw	13
   904  18D0  3470               	retlw	112	;'p'
   905  18D1  3477               	retlw	119	;'w'
   906  18D2  346D               	retlw	109	;'m'
   907  18D3  3420               	retlw	32	;' '
   908  18D4  343D               	retlw	61	;'='
   909  18D5  3420               	retlw	32	;' '
   910  18D6  3431               	retlw	49	;'1'
   911  18D7  3432               	retlw	50	;'2'
   912  18D8  3438               	retlw	56	;'8'
   913  18D9  340A               	retlw	10
   914  18DA  340D               	retlw	13
   915  18DB  3400               	retlw	0
   916  18DC                     STR_7:	
   917  18DC  340A               	retlw	10
   918  18DD  340D               	retlw	13
   919  18DE  3470               	retlw	112	;'p'
   920  18DF  3477               	retlw	119	;'w'
   921  18E0  346D               	retlw	109	;'m'
   922  18E1  3420               	retlw	32	;' '
   923  18E2  343D               	retlw	61	;'='
   924  18E3  3420               	retlw	32	;' '
   925  18E4  3437               	retlw	55	;'7'
   926  18E5  3436               	retlw	54	;'6'
   927  18E6  3438               	retlw	56	;'8'
   928  18E7  340A               	retlw	10
   929  18E8  340D               	retlw	13
   930  18E9  3400               	retlw	0
   931  18EA                     STR_1:	
   932  18EA  340A               	retlw	10
   933  18EB  340D               	retlw	13
   934  18EC  3464               	retlw	100	;'d'
   935  18ED  3465               	retlw	101	;'e'
   936  18EE  3473               	retlw	115	;'s'
   937  18EF  346C               	retlw	108	;'l'
   938  18F0  3469               	retlw	105	;'i'
   939  18F1  3467               	retlw	103	;'g'
   940  18F2  3461               	retlw	97	;'a'
   941  18F3  3464               	retlw	100	;'d'
   942  18F4  346F               	retlw	111	;'o'
   943  18F5  340A               	retlw	10
   944  18F6  340D               	retlw	13
   945  18F7  3400               	retlw	0
   946  18F8                     STR_2:	
   947  18F8  340A               	retlw	10
   948  18F9  340D               	retlw	13
   949  18FA  3470               	retlw	112	;'p'
   950  18FB  3477               	retlw	119	;'w'
   951  18FC  346D               	retlw	109	;'m'
   952  18FD  3420               	retlw	32	;' '
   953  18FE  343D               	retlw	61	;'='
   954  18FF  3420               	retlw	32	;' '
   955  1900  3433               	retlw	51	;'3'
   956  1901  3432               	retlw	50	;'2'
   957  1902  340A               	retlw	10
   958  1903  340D               	retlw	13
   959  1904  3400               	retlw	0
   960  1905                     STR_3:	
   961  1905  340A               	retlw	10
   962  1906  340D               	retlw	13
   963  1907  3470               	retlw	112	;'p'
   964  1908  3477               	retlw	119	;'w'
   965  1909  346D               	retlw	109	;'m'
   966  190A  3420               	retlw	32	;' '
   967  190B  343D               	retlw	61	;'='
   968  190C  3420               	retlw	32	;' '
   969  190D  3436               	retlw	54	;'6'
   970  190E  3434               	retlw	52	;'4'
   971  190F  340A               	retlw	10
   972  1910  340D               	retlw	13
   973  1911  3400               	retlw	0
   974  1912                     STR_17:	
   975  1912  3452               	retlw	82	;'R'
   976  1913  3450               	retlw	80	;'P'
   977  1914  344D               	retlw	77	;'M'
   978  1915  343A               	retlw	58	;':'
   979  1916  3420               	retlw	32	;' '
   980  1917  3400               	retlw	0
   981  1918                     STR_18:	
   982  1918  3450               	retlw	80	;'P'
   983  1919  3457               	retlw	87	;'W'
   984  191A  344D               	retlw	77	;'M'
   985  191B  343A               	retlw	58	;':'
   986  191C  3420               	retlw	32	;' '
   987  191D  3400               	retlw	0
   988  191E                     STR_14:	
   989  191E  3425               	retlw	37	;'%'
   990  191F  3430               	retlw	48	;'0'
   991  1920  3434               	retlw	52	;'4'
   992  1921  3464               	retlw	100	;'d'
   993  1922  3400               	retlw	0
   994  1923                     __end_of__stringdata:	
   995                           
   996                           ; #config settings
   997  0000                     
   998                           	psect	cinit
   999  0019                     start_initialization:	
  1000  0019                     __initialization:	
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003  0019  1383               	bcf	3,7	;select IRP bank0
  1004  001A  30A0               	movlw	low __pbssBANK1
  1005  001B  0084               	movwf	4
  1006  001C  30C7               	movlw	low (__pbssBANK1+39)
  1007  001D  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1008                           
  1009                           ; Clear objects allocated to BANK3
  1010  0022  1783               	bsf	3,7	;select IRP bank2
  1011  0023  3090               	movlw	low __pbssBANK3
  1012  0024  0084               	movwf	4
  1013  0025  30C1               	movlw	low (__pbssBANK3+49)
  1014  0026  120A  158A  2001  120A  118A  	fcall	clear_ram0
  1015                           
  1016                           ; Initialize objects allocated to BANK3
  1017  002B  1683               	bsf	3,5	;RP0=1, select bank3
  1018  002C  1703               	bsf	3,6	;RP1=1, select bank3
  1019  002D  160A  118A  20BB  120A  118A  	fcall	__pidataBANK3	;fetch initializer
  1020  0032  00CC               	movwf	__pdataBANK3& (0+127)
  1021  0033  160A  118A  20BC  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
  1022  0038  00CD               	movwf	(__pdataBANK3+1)& (0+127)
  1023  0039  160A  118A  20BD  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
  1024  003E  00CE               	movwf	(__pdataBANK3+2)& (0+127)
  1025  003F  160A  118A  20BE  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
  1026  0044  00CF               	movwf	(__pdataBANK3+3)& (0+127)
  1027  0045  160A  118A  20BF  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
  1028  004A  00D0               	movwf	(__pdataBANK3+4)& (0+127)
  1029  004B  160A  118A  20C0  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
  1030  0050  00D1               	movwf	(__pdataBANK3+5)& (0+127)
  1031                           
  1032                           ; Initialize objects allocated to BANK1
  1033  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0053  120A  118A  27FD  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1036  0058  00E5               	movwf	__pdataBANK1& (0+127)
  1037  0059  120A  118A  27FE   	fcall	__pidataBANK1+1	;fetch initializer
  1038  005C  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1039  005D                     end_of_initialization:	
  1040                           ;End of C runtime variable initialization code
  1041                           
  1042  005D                     __end_of__initialization:	
  1043  005D  0183               	clrf	3
  1044  005E  120A  158A  2923   	ljmp	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssBANK1
  1047  00A0                     __pbssBANK1:	
  1048  00A0                     _fitemp:	
  1049  00A0                     	ds	3
  1050  00A3                     _fop_rule1:	
  1051  00A3                     	ds	3
  1052  00A6                     _fop_rule2:	
  1053  00A6                     	ds	3
  1054  00A9                     _fop_rule3:	
  1055  00A9                     	ds	3
  1056  00AC                     _sum:	
  1057  00AC                     	ds	3
  1058  00AF                     _temp:	
  1059  00AF                     	ds	3
  1060  00B2                     _total_area:	
  1061  00B2                     	ds	3
  1062  00B5                     _x:	
  1063  00B5                     	ds	3
  1064  00B8                     _y:	
  1065  00B8                     	ds	3
  1066  00BB                     _ADCResult:	
  1067  00BB                     	ds	2
  1068  00BD                     _contagens_tm0:	
  1069  00BD                     	ds	2
  1070  00BF                     _deltaV:	
  1071  00BF                     	ds	2
  1072  00C1                     _pulsos:	
  1073  00C1                     	ds	2
  1074  00C3                     _pwm:	
  1075  00C3                     	ds	2
  1076  00C5                     _rpm:	
  1077  00C5                     	ds	2
  1078                           
  1079                           	psect	dataBANK1
  1080  00E5                     __pdataBANK1:	
  1081  00E5                     _pas_cooler:	
  1082  00E5                     	ds	2
  1083                           
  1084                           	psect	bssBANK3
  1085  0190                     __pbssBANK3:	
  1086  0190                     _ativa_fan:	
  1087  0190                     	ds	3
  1088  0193                     _derro:	
  1089  0193                     	ds	3
  1090  0196                     _fisetpoint:	
  1091  0196                     	ds	3
  1092  0199                     _foTip:	
  1093  0199                     	ds	3
  1094  019C                     _posicao_do_grafico:	
  1095  019C                     	ds	3
  1096  019F                     _posicao_do_grafico_food:	
  1097  019F                     	ds	3
  1098  01A2                     _posicao_do_grafico_service:	
  1099  01A2                     	ds	3
  1100  01A5                     _contador_rb6:	
  1101  01A5                     	ds	2
  1102  01A7                     _status:	
  1103  01A7                     	ds	2
  1104  01A9                     _temp_lida:	
  1105  01A9                     	ds	2
  1106  01AB                     _tempo_rb6:	
  1107  01AB                     	ds	2
  1108  01AD                     _display_pwm:	
  1109  01AD                     	ds	10
  1110  01B7                     _display_rpm:	
  1111  01B7                     	ds	10
  1112                           
  1113                           	psect	dataBANK3
  1114  01CC                     __pdataBANK3:	
  1115  01CC                     _setpoint:	
  1116  01CC                     	ds	3
  1117  01CF                     _tf:	
  1118  01CF                     	ds	3
  1119                           
  1120                           	psect	clrtext
  1121  0801                     clear_ram0:	
  1122                           ;	Called with FSR containing the base address, and
  1123                           ;	W with the last address+1
  1124                           
  1125  0801  0064               	clrwdt	;clear the watchdog before getting into this loop
  1126  0802                     clrloop0:	
  1127  0802  0180               	clrf	0	;clear RAM location pointed to by FSR
  1128  0803  0A84               	incf	4,f	;increment pointer
  1129  0804  0604               	xorwf	4,w	;XOR with final address
  1130  0805  1903               	btfsc	3,2	;have we reached the end yet?
  1131  0806  3400               	retlw	0	;all done for this memory range, return
  1132  0807  0604               	xorwf	4,w	;XOR again to restore value
  1133  0808  2802               	goto	clrloop0	;do the next byte
  1134                           
  1135                           	psect	cstackBANK3
  1136  01C1                     __pcstackBANK3:	
  1137  01C1                     sprintf@ap:	
  1138                           
  1139                           ; 1 bytes @ 0x0
  1140  01C1                     	ds	1
  1141  01C2                     sprintf@prec:	
  1142                           
  1143                           ; 1 bytes @ 0x1
  1144  01C2                     	ds	1
  1145  01C3                     sprintf@_val:	
  1146                           
  1147                           ; 4 bytes @ 0x2
  1148  01C3                     	ds	4
  1149  01C7                     sprintf@flag:	
  1150                           
  1151                           ; 1 bytes @ 0x6
  1152  01C7                     	ds	1
  1153  01C8                     sprintf@width:	
  1154                           
  1155                           ; 2 bytes @ 0x7
  1156  01C8                     	ds	2
  1157  01CA                     sprintf@sp:	
  1158                           
  1159                           ; 1 bytes @ 0x9
  1160  01CA                     	ds	1
  1161  01CB                     sprintf@c:	
  1162                           
  1163                           ; 1 bytes @ 0xA
  1164  01CB                     	ds	1
  1165                           
  1166                           	psect	cstackBANK1
  1167  00C7                     __pcstackBANK1:	
  1168  00C7                     ??_ISR:	
  1169                           
  1170                           ; 0 bytes @ 0x0
  1171  00C7                     	ds	4
  1172  00CB                     ?_PWM_DutyCycle2:	
  1173  00CB                     ??_TIMER0_Set:	
  1174                           ; 0 bytes @ 0x4
  1175                           
  1176  00CB                     ??_TIMER0_Init:	
  1177                           ; 0 bytes @ 0x4
  1178                           
  1179  00CB                     ??_ADC_Init:	
  1180                           ; 0 bytes @ 0x4
  1181                           
  1182  00CB                     ??_PWM_Init:	
  1183                           ; 0 bytes @ 0x4
  1184                           
  1185  00CB                     ?_LCD_Cursor:	
  1186                           ; 0 bytes @ 0x4
  1187                           
  1188  00CB                     ?_PWM_DutyCycle1:	
  1189                           ; 0 bytes @ 0x4
  1190                           
  1191  00CB                     ??_isdigit:	
  1192                           ; 0 bytes @ 0x4
  1193                           
  1194  00CB                     ??_USART_WriteChar:	
  1195                           ; 0 bytes @ 0x4
  1196                           
  1197  00CB                     ??_LCD_WriteCmd:	
  1198                           ; 0 bytes @ 0x4
  1199                           
  1200  00CB                     ??_LCD_WriteData:	
  1201                           ; 0 bytes @ 0x4
  1202                           
  1203  00CB                     ?___wmul:	
  1204                           ; 0 bytes @ 0x4
  1205                           
  1206  00CB                     ?___lwdiv:	
  1207                           ; 2 bytes @ 0x4
  1208                           
  1209  00CB                     ?___aldiv:	
  1210                           ; 2 bytes @ 0x4
  1211                           
  1212  00CB                     USART_WriteChar@byte:	
  1213                           ; 4 bytes @ 0x4
  1214                           
  1215  00CB                     TIMER0_Set@contagens:	
  1216                           ; 1 bytes @ 0x4
  1217                           
  1218  00CB                     LCD_Cursor@Col:	
  1219                           ; 1 bytes @ 0x4
  1220                           
  1221  00CB                     _isdigit$1454:	
  1222                           ; 1 bytes @ 0x4
  1223                           
  1224  00CB                     PWM_DutyCycle1@valor:	
  1225                           ; 1 bytes @ 0x4
  1226                           
  1227  00CB                     PWM_DutyCycle2@valor:	
  1228                           ; 2 bytes @ 0x4
  1229                           
  1230  00CB                     ___wmul@multiplier:	
  1231                           ; 2 bytes @ 0x4
  1232                           
  1233  00CB                     ___lwdiv@divisor:	
  1234                           ; 2 bytes @ 0x4
  1235                           
  1236  00CB                     ___aldiv@divisor:	
  1237                           ; 2 bytes @ 0x4
  1238                           
  1239                           
  1240                           ; 4 bytes @ 0x4
  1241  00CB                     	ds	1
  1242  00CC                     ?_USART_WriteString:	
  1243  00CC                     ??_LCD_Cursor:	
  1244                           ; 0 bytes @ 0x5
  1245                           
  1246  00CC                     LCD_WriteCmd@Byte:	
  1247                           ; 0 bytes @ 0x5
  1248                           
  1249  00CC                     LCD_WriteData@Byte:	
  1250                           ; 1 bytes @ 0x5
  1251                           
  1252  00CC                     isdigit@c:	
  1253                           ; 1 bytes @ 0x5
  1254                           
  1255  00CC                     USART_WriteString@str:	
  1256                           ; 1 bytes @ 0x5
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x5
  1260  00CC                     	ds	1
  1261  00CD                     ??_PWM_DutyCycle2:	
  1262  00CD                     ??_LCD_Init:	
  1263                           ; 0 bytes @ 0x6
  1264                           
  1265  00CD                     ?_LCD_WriteString:	
  1266                           ; 0 bytes @ 0x6
  1267                           
  1268  00CD                     ??_PWM_DutyCycle1:	
  1269                           ; 0 bytes @ 0x6
  1270                           
  1271  00CD                     ??_LCD_Clear:	
  1272                           ; 0 bytes @ 0x6
  1273                           
  1274  00CD                     LCD_Cursor@Row:	
  1275                           ; 0 bytes @ 0x6
  1276                           
  1277  00CD                     LCD_WriteString@Str:	
  1278                           ; 1 bytes @ 0x6
  1279                           
  1280  00CD                     ___wmul@multiplicand:	
  1281                           ; 2 bytes @ 0x6
  1282                           
  1283  00CD                     ___lwdiv@dividend:	
  1284                           ; 2 bytes @ 0x6
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x6
  1288  00CD                     	ds	1
  1289  00CE                     ??_USART_WriteString:	
  1290                           
  1291                           ; 0 bytes @ 0x7
  1292  00CE                     	ds	1
  1293  00CF                     ??_LCD_WriteString:	
  1294  00CF                     ??___wmul:	
  1295                           ; 0 bytes @ 0x8
  1296                           
  1297  00CF                     ??___lwdiv:	
  1298                           ; 0 bytes @ 0x8
  1299                           
  1300  00CF                     ___wmul@product:	
  1301                           ; 0 bytes @ 0x8
  1302                           
  1303  00CF                     ___aldiv@dividend:	
  1304                           ; 2 bytes @ 0x8
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0x8
  1308  00CF                     	ds	1
  1309  00D0                     ___lwdiv@counter:	
  1310                           
  1311                           ; 1 bytes @ 0x9
  1312  00D0                     	ds	1
  1313  00D1                     ___lwdiv@quotient:	
  1314                           
  1315                           ; 2 bytes @ 0xA
  1316  00D1                     	ds	2
  1317  00D3                     ??___aldiv:	
  1318  00D3                     ?___lwmod:	
  1319                           ; 0 bytes @ 0xC
  1320                           
  1321  00D3                     ___lwmod@divisor:	
  1322                           ; 2 bytes @ 0xC
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0xC
  1326  00D3                     	ds	1
  1327  00D4                     ___aldiv@counter:	
  1328                           
  1329                           ; 1 bytes @ 0xD
  1330  00D4                     	ds	1
  1331  00D5                     ___aldiv@sign:	
  1332  00D5                     ___lwmod@dividend:	
  1333                           ; 1 bytes @ 0xE
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0xE
  1337  00D5                     	ds	1
  1338  00D6                     ___aldiv@quotient:	
  1339                           
  1340                           ; 4 bytes @ 0xF
  1341  00D6                     	ds	1
  1342  00D7                     ??___lwmod:	
  1343                           
  1344                           ; 0 bytes @ 0x10
  1345  00D7                     	ds	1
  1346  00D8                     ___lwmod@counter:	
  1347                           
  1348                           ; 1 bytes @ 0x11
  1349  00D8                     	ds	1
  1350  00D9                     ?_sprintf:	
  1351  00D9                     sprintf@f:	
  1352                           ; 2 bytes @ 0x12
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0x12
  1356  00D9                     	ds	1
  1357  00DA                     ?_USART_Init:	
  1358  00DA                     USART_Init@BaudRate:	
  1359                           ; 0 bytes @ 0x13
  1360                           
  1361                           
  1362                           ; 4 bytes @ 0x13
  1363  00DA                     	ds	3
  1364  00DD                     ??_sprintf:	
  1365                           
  1366                           ; 0 bytes @ 0x16
  1367  00DD                     	ds	1
  1368  00DE                     ??_USART_Init:	
  1369                           
  1370                           ; 0 bytes @ 0x17
  1371  00DE                     	ds	4
  1372  00E2                     ??_main:	
  1373                           
  1374                           ; 0 bytes @ 0x1B
  1375  00E2                     	ds	3
  1376                           
  1377                           	psect	cstackCOMMON
  1378  0070                     __pcstackCOMMON:	
  1379  0070                     ?_TIMER0_Set:	
  1380  0070                     ?_TIMER0_Init:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0070                     ?_ADC_Init:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0070                     ?_PWM_Init:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0070                     ?_LCD_Init:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0070                     ?_LCD_Clear:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0070                     ?_isdigit:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0070                     ?_Fuzzy:	
  1399                           ; 1 bit 
  1400                           
  1401  0070                     ?_ISR:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0070                     ?_main:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0070                     ?_USART_WriteChar:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0070                     ?_LCD_WriteCmd:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0070                     ?_LCD_WriteData:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0070                     ?___ftge:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0070                     ?i1_USART_WriteChar:	
  1420                           ; 1 bit 
  1421                           
  1422  0070                     ??i1_USART_WriteChar:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0070                     ?i1_TIMER0_Set:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0070                     ??i1_TIMER0_Set:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0070                     ?i1_PWM_DutyCycle2:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0070                     ?_USART_ReceiveChar:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0070                     ?i1___lwdiv:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?___ftpack:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  0070                     ?___ftneg:	
  1444                           ; 3 bytes @ 0x0
  1445                           
  1446  0070                     ?___fttol:	
  1447                           ; 3 bytes @ 0x0
  1448                           
  1449  0070                     i1USART_WriteChar@byte:	
  1450                           ; 4 bytes @ 0x0
  1451                           
  1452  0070                     i1TIMER0_Set@contagens:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     i1PWM_DutyCycle2@valor:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     i1___lwdiv@divisor:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461  0070                     ___ftpack@arg:	
  1462                           ; 2 bytes @ 0x0
  1463                           
  1464  0070                     ___ftge@ff1:	
  1465                           ; 3 bytes @ 0x0
  1466                           
  1467  0070                     ___ftneg@f1:	
  1468                           ; 3 bytes @ 0x0
  1469                           
  1470  0070                     ___fttol@f1:	
  1471                           ; 3 bytes @ 0x0
  1472                           
  1473                           
  1474                           ; 3 bytes @ 0x0
  1475  0070                     	ds	1
  1476  0071                     ?i1_USART_WriteString:	
  1477  0071                     i1USART_WriteString@str:	
  1478                           ; 0 bytes @ 0x1
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x1
  1482  0071                     	ds	1
  1483  0072                     ??i1_PWM_DutyCycle2:	
  1484  0072                     i1___lwdiv@dividend:	
  1485                           ; 0 bytes @ 0x2
  1486                           
  1487                           
  1488                           ; 2 bytes @ 0x2
  1489  0072                     	ds	1
  1490  0073                     ??_USART_ReceiveChar:	
  1491  0073                     ??___ftneg:	
  1492                           ; 0 bytes @ 0x3
  1493                           
  1494  0073                     ??i1_USART_WriteString:	
  1495                           ; 0 bytes @ 0x3
  1496                           
  1497  0073                     ___ftpack@exp:	
  1498                           ; 0 bytes @ 0x3
  1499                           
  1500  0073                     ___ftge@ff2:	
  1501                           ; 1 bytes @ 0x3
  1502                           
  1503                           
  1504                           ; 3 bytes @ 0x3
  1505  0073                     	ds	1
  1506  0074                     ??___fttol:	
  1507  0074                     ??i1___lwdiv:	
  1508                           ; 0 bytes @ 0x4
  1509                           
  1510  0074                     USART_ReceiveChar@byte:	
  1511                           ; 0 bytes @ 0x4
  1512                           
  1513  0074                     ___ftpack@sign:	
  1514                           ; 1 bytes @ 0x4
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x4
  1518  0074                     	ds	1
  1519  0075                     ??___ftpack:	
  1520  0075                     i1___lwdiv@quotient:	
  1521                           ; 0 bytes @ 0x5
  1522                           
  1523                           
  1524                           ; 2 bytes @ 0x5
  1525  0075                     	ds	1
  1526  0076                     ??___ftge:	
  1527                           
  1528                           ; 0 bytes @ 0x6
  1529  0076                     	ds	1
  1530  0077                     i1___lwdiv@counter:	
  1531                           
  1532                           ; 1 bytes @ 0x7
  1533  0077                     	ds	1
  1534  0078                     ?i1___wmul:	
  1535  0078                     ?___ftmul:	
  1536                           ; 2 bytes @ 0x8
  1537                           
  1538  0078                     ?___lwtoft:	
  1539                           ; 3 bytes @ 0x8
  1540                           
  1541  0078                     ___fttol@sign1:	
  1542                           ; 3 bytes @ 0x8
  1543                           
  1544  0078                     ___lwtoft@c:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  0078                     i1___wmul@multiplier:	
  1548                           ; 2 bytes @ 0x8
  1549                           
  1550  0078                     ___ftmul@f1:	
  1551                           ; 2 bytes @ 0x8
  1552                           
  1553                           
  1554                           ; 3 bytes @ 0x8
  1555  0078                     	ds	1
  1556  0079                     ___fttol@lval:	
  1557                           
  1558                           ; 4 bytes @ 0x9
  1559  0079                     	ds	1
  1560  007A                     i1___wmul@multiplicand:	
  1561                           
  1562                           ; 2 bytes @ 0xA
  1563  007A                     	ds	1
  1564  007B                     ??___lwtoft:	
  1565  007B                     ___ftmul@f2:	
  1566                           ; 0 bytes @ 0xB
  1567                           
  1568                           
  1569                           ; 3 bytes @ 0xB
  1570  007B                     	ds	1
  1571  007C                     ??_max_val:	
  1572  007C                     ??i1___wmul:	
  1573                           ; 0 bytes @ 0xC
  1574                           
  1575  007C                     i1___wmul@product:	
  1576                           ; 0 bytes @ 0xC
  1577                           
  1578                           
  1579                           ; 2 bytes @ 0xC
  1580  007C                     	ds	1
  1581  007D                     ___fttol@exp1:	
  1582                           
  1583                           ; 1 bytes @ 0xD
  1584  007D                     	ds	1
  1585  007E                     ??_trimf:	
  1586  007E                     ??_trapmf:	
  1587                           ; 0 bytes @ 0xE
  1588                           
  1589  007E                     ??_Fuzzy:	
  1590                           ; 0 bytes @ 0xE
  1591                           
  1592                           
  1593                           	psect	cstackBANK0
  1594  0020                     __pcstackBANK0:	
  1595                           ; 0 bytes @ 0xE
  1596                           
  1597  0020                     ??___ftmul:	
  1598  0020                     ?_max_val:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0020                     max_val@a:	
  1602                           ; 3 bytes @ 0x0
  1603                           
  1604                           
  1605                           ; 3 bytes @ 0x0
  1606  0020                     	ds	3
  1607  0023                     max_val@b:	
  1608                           
  1609                           ; 3 bytes @ 0x3
  1610  0023                     	ds	1
  1611  0024                     ___ftmul@exp:	
  1612                           
  1613                           ; 1 bytes @ 0x4
  1614  0024                     	ds	1
  1615  0025                     ___ftmul@f3_as_product:	
  1616                           
  1617                           ; 3 bytes @ 0x5
  1618  0025                     	ds	3
  1619  0028                     ___ftmul@cntr:	
  1620                           
  1621                           ; 1 bytes @ 0x8
  1622  0028                     	ds	1
  1623  0029                     ___ftmul@sign:	
  1624                           
  1625                           ; 1 bytes @ 0x9
  1626  0029                     	ds	1
  1627  002A                     ?___ftadd:	
  1628  002A                     ___ftadd@f1:	
  1629                           ; 3 bytes @ 0xA
  1630                           
  1631                           
  1632                           ; 3 bytes @ 0xA
  1633  002A                     	ds	3
  1634  002D                     ___ftadd@f2:	
  1635                           
  1636                           ; 3 bytes @ 0xD
  1637  002D                     	ds	3
  1638  0030                     ??___ftadd:	
  1639                           
  1640                           ; 0 bytes @ 0x10
  1641  0030                     	ds	4
  1642  0034                     ___ftadd@sign:	
  1643                           
  1644                           ; 1 bytes @ 0x14
  1645  0034                     	ds	1
  1646  0035                     ___ftadd@exp2:	
  1647                           
  1648                           ; 1 bytes @ 0x15
  1649  0035                     	ds	1
  1650  0036                     ___ftadd@exp1:	
  1651                           
  1652                           ; 1 bytes @ 0x16
  1653  0036                     	ds	1
  1654  0037                     ?___ftdiv:	
  1655  0037                     ___ftdiv@f2:	
  1656                           ; 3 bytes @ 0x17
  1657                           
  1658                           
  1659                           ; 3 bytes @ 0x17
  1660  0037                     	ds	3
  1661  003A                     ___ftdiv@f1:	
  1662                           
  1663                           ; 3 bytes @ 0x1A
  1664  003A                     	ds	3
  1665  003D                     ??___ftdiv:	
  1666                           
  1667                           ; 0 bytes @ 0x1D
  1668  003D                     	ds	4
  1669  0041                     ___ftdiv@cntr:	
  1670                           
  1671                           ; 1 bytes @ 0x21
  1672  0041                     	ds	1
  1673  0042                     ___ftdiv@f3:	
  1674                           
  1675                           ; 3 bytes @ 0x22
  1676  0042                     	ds	3
  1677  0045                     ___ftdiv@exp:	
  1678                           
  1679                           ; 1 bytes @ 0x25
  1680  0045                     	ds	1
  1681  0046                     ___ftdiv@sign:	
  1682                           
  1683                           ; 1 bytes @ 0x26
  1684  0046                     	ds	1
  1685  0047                     ?_trimf:	
  1686  0047                     ?_trapmf:	
  1687                           ; 3 bytes @ 0x27
  1688                           
  1689  0047                     trimf@x:	
  1690                           ; 3 bytes @ 0x27
  1691                           
  1692  0047                     trapmf@x:	
  1693                           ; 3 bytes @ 0x27
  1694                           
  1695                           
  1696                           ; 3 bytes @ 0x27
  1697  0047                     	ds	3
  1698  004A                     trimf@a:	
  1699  004A                     trapmf@a:	
  1700                           ; 3 bytes @ 0x2A
  1701                           
  1702                           
  1703                           ; 3 bytes @ 0x2A
  1704  004A                     	ds	3
  1705  004D                     trimf@b:	
  1706  004D                     trapmf@b:	
  1707                           ; 3 bytes @ 0x2D
  1708                           
  1709                           
  1710                           ; 3 bytes @ 0x2D
  1711  004D                     	ds	3
  1712  0050                     trimf@c:	
  1713  0050                     trapmf@c:	
  1714                           ; 3 bytes @ 0x30
  1715                           
  1716                           
  1717                           ; 3 bytes @ 0x30
  1718  0050                     	ds	3
  1719  0053                     trimf@ua:	
  1720  0053                     trapmf@d:	
  1721                           ; 3 bytes @ 0x33
  1722                           
  1723                           
  1724                           ; 3 bytes @ 0x33
  1725  0053                     	ds	3
  1726  0056                     trapmf@ua:	
  1727                           
  1728                           ; 3 bytes @ 0x36
  1729  0056                     	ds	3
  1730  0059                     Fuzzy@a:	
  1731                           
  1732                           ; 2 bytes @ 0x39
  1733  0059                     	ds	2
  1734  005B                     Fuzzy@a_237:	
  1735                           
  1736                           ; 2 bytes @ 0x3B
  1737  005B                     	ds	2
  1738  005D                     Fuzzy@a_238:	
  1739                           
  1740                           ; 2 bytes @ 0x3D
  1741  005D                     	ds	2
  1742  005F                     Fuzzy@a_239:	
  1743                           
  1744                           ; 2 bytes @ 0x3F
  1745  005F                     	ds	2
  1746  0061                     Fuzzy@a_240:	
  1747                           
  1748                           ; 2 bytes @ 0x41
  1749  0061                     	ds	2
  1750  0063                     Fuzzy@tip:	
  1751                           
  1752                           ; 3 bytes @ 0x43
  1753  0063                     	ds	3
  1754  0066                     Fuzzy@mantem:	
  1755                           
  1756                           ; 3 bytes @ 0x46
  1757  0066                     	ds	3
  1758  0069                     Fuzzy@reduz:	
  1759                           
  1760                           ; 3 bytes @ 0x49
  1761  0069                     	ds	3
  1762  006C                     Fuzzy@aumenta:	
  1763                           
  1764                           ; 3 bytes @ 0x4C
  1765  006C                     	ds	3
  1766                           
  1767                           	psect	maintext
  1768  0923                     __pmaintext:	
  1769 ;;
  1770 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1771 ;;
  1772 ;; *************** function _main *****************
  1773 ;; Defined at:
  1774 ;;		line 480 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 17F/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          0       0       3       0       0
  1791 ;;      Totals:         0       0       3       0       0
  1792 ;;Total ram usage:        3 bytes
  1793 ;; Hardware stack levels required when called:    7
  1794 ;; This function calls:
  1795 ;;		_ADC_Init
  1796 ;;		_LCD_Clear
  1797 ;;		_LCD_Cursor
  1798 ;;		_LCD_Init
  1799 ;;		_LCD_WriteString
  1800 ;;		_PWM_DutyCycle1
  1801 ;;		_PWM_DutyCycle2
  1802 ;;		_PWM_Init
  1803 ;;		_TIMER0_Init
  1804 ;;		_TIMER0_Set
  1805 ;;		_USART_Init
  1806 ;;		_USART_WriteString
  1807 ;;		_sprintf
  1808 ;; This function is called by:
  1809 ;;		Startup code after reset
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _main
  1815  0923                     _main:	
  1816                           
  1817                           ;main.c: 482: TRISA = 0b00000001;
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1821  0923  3001               	movlw	1
  1822  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0926  0085               	movwf	5	;volatile
  1825                           
  1826                           ;main.c: 483: PORTA = 0b00000001;
  1827  0927  3001               	movlw	1
  1828  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1830  092A  0085               	movwf	5	;volatile
  1831                           
  1832                           ;main.c: 484: TRISB = 0b00000000;
  1833  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1834  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1835  092D  0186               	clrf	6	;volatile
  1836                           
  1837                           ;main.c: 485: PORTB = 0b00000000;
  1838  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1839  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0930  0186               	clrf	6	;volatile
  1841                           
  1842                           ;main.c: 486: TRISC = 0b10000001;
  1843  0931  3081               	movlw	129
  1844  0932  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0933  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0934  0087               	movwf	7	;volatile
  1847                           
  1848                           ;main.c: 487: PORTC = 0b11000000;
  1849  0935  30C0               	movlw	192
  1850  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0938  0087               	movwf	7	;volatile
  1853                           
  1854                           ;main.c: 488: TRISD = 0b00000000;
  1855  0939  1683               	bsf	3,5	;RP0=1, select bank1
  1856  093A  1303               	bcf	3,6	;RP1=0, select bank1
  1857  093B  0188               	clrf	8	;volatile
  1858                           
  1859                           ;main.c: 489: PORTD = 0b00000000;
  1860  093C  1283               	bcf	3,5	;RP0=0, select bank0
  1861  093D  1303               	bcf	3,6	;RP1=0, select bank0
  1862  093E  0188               	clrf	8	;volatile
  1863                           
  1864                           ;main.c: 490: TRISE = 0b00000000;
  1865  093F  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0940  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0941  0189               	clrf	9	;volatile
  1868                           
  1869                           ;main.c: 491: PORTE = 0b00000000;
  1870  0942  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0943  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0944  0189               	clrf	9	;volatile
  1873                           
  1874                           ;main.c: 494: T1CON = 0x03;
  1875  0945  3003               	movlw	3
  1876  0946  0090               	movwf	16	;volatile
  1877                           
  1878                           ;main.c: 495: TMR1L = 0x00;
  1879  0947  018E               	clrf	14	;volatile
  1880                           
  1881                           ;main.c: 496: TMR1H = 0x00;
  1882  0948  018F               	clrf	15	;volatile
  1883                           
  1884                           ;main.c: 499: USART_Init(115200);
  1885  0949  3000               	movlw	0
  1886  094A  1683               	bsf	3,5	;RP0=1, select bank1
  1887  094B  1303               	bcf	3,6	;RP1=0, select bank1
  1888  094C  00DD               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1889  094D  3001               	movlw	1
  1890  094E  00DC               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1891  094F  30C2               	movlw	194
  1892  0950  00DB               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1893  0951  3000               	movlw	0
  1894  0952  00DA               	movwf	USART_Init@BaudRate^(0+128)
  1895  0953  120A  158A  2009  120A  158A  	fcall	_USART_Init
  1896                           
  1897                           ;main.c: 500: TIMER0_Init();
  1898  0958  160A  118A  20D9  120A  158A  	fcall	_TIMER0_Init
  1899                           
  1900                           ;main.c: 501: ADC_Init();
  1901  095D  160A  118A  2101  120A  158A  	fcall	_ADC_Init
  1902                           
  1903                           ;main.c: 502: PWM_Init();
  1904  0962  160A  118A  2251  120A  158A  	fcall	_PWM_Init
  1905                           
  1906                           ;main.c: 503: LCD_Init();
  1907  0967  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1908                           
  1909                           ;main.c: 506: INTCONbits.PEIE = 1;
  1910  096C  170B               	bsf	11,6	;volatile
  1911                           
  1912                           ;main.c: 507: INTCONbits.GIE = 1;
  1913  096D  178B               	bsf	11,7	;volatile
  1914                           
  1915                           ;main.c: 510: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1916  096E  3044               	movlw	low (STR_11| (0+32768))
  1917  096F  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0970  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0971  00CC               	movwf	USART_WriteString@str^(0+128)
  1920  0972  3098               	movlw	high (STR_11| (0+32768))
  1921  0973  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1922  0974  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  1923                           
  1924                           ;main.c: 511: USART_WriteString("USART: 115.200bps\n\r");
  1925  0979  3061               	movlw	low (STR_12| (0+32768))
  1926  097A  1683               	bsf	3,5	;RP0=1, select bank1
  1927  097B  1303               	bcf	3,6	;RP1=0, select bank1
  1928  097C  00CC               	movwf	USART_WriteString@str^(0+128)
  1929  097D  3098               	movlw	high (STR_12| (0+32768))
  1930  097E  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1931  097F  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  1932                           
  1933                           ;main.c: 514: LCD_Init();
  1934  0984  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1935                           
  1936                           ;main.c: 515: LCD_Cursor(0,0);
  1937  0989  1683               	bsf	3,5	;RP0=1, select bank1
  1938  098A  1303               	bcf	3,6	;RP1=0, select bank1
  1939  098B  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1940  098C  3000               	movlw	0
  1941  098D  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  1942                           
  1943                           ;main.c: 516: LCD_WriteString("Inicializando...");
  1944  0992  3075               	movlw	low (STR_13| (0+32768))
  1945  0993  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0994  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0995  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1948  0996  3098               	movlw	high (STR_13| (0+32768))
  1949  0997  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  1950  0998  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  1951                           
  1952                           ;main.c: 519: PWM_DutyCycle1(0);
  1953  099D  3000               	movlw	0
  1954  099E  1683               	bsf	3,5	;RP0=1, select bank1
  1955  099F  1303               	bcf	3,6	;RP1=0, select bank1
  1956  09A0  00CB               	movwf	PWM_DutyCycle1@valor^(0+128)
  1957  09A1  3000               	movlw	0
  1958  09A2  00CC               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1959  09A3  160A  118A  21C9  120A  158A  	fcall	_PWM_DutyCycle1
  1960                           
  1961                           ;main.c: 520: PWM_DutyCycle2(0);
  1962  09A8  3000               	movlw	0
  1963  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  1964  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  1965  09AB  00CB               	movwf	PWM_DutyCycle2@valor^(0+128)
  1966  09AC  3000               	movlw	0
  1967  09AD  00CC               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1968  09AE  160A  118A  21EA  120A  158A  	fcall	_PWM_DutyCycle2
  1969                           
  1970                           ;main.c: 523: TIMER0_Set(238);
  1971  09B3  30EE               	movlw	238
  1972  09B4  160A  118A  20D1  120A  158A  	fcall	_TIMER0_Set
  1973                           
  1974                           ;main.c: 526: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1975  09B9  3018               	movlw	24
  1976  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  1977  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  1978  09BC  00E4               	movwf	(??_main^(0+128)+2)
  1979  09BD  3061               	movlw	97
  1980  09BE  00E3               	movwf	(??_main^(0+128)+1)
  1981  09BF  306E               	movlw	110
  1982  09C0  00E2               	movwf	??_main^(0+128)
  1983  09C1                     u4527:	
  1984  09C1  0BE2               	decfsz	??_main^(0+128),f
  1985  09C2  29C1               	goto	u4527
  1986  09C3  0BE3               	decfsz	(??_main^(0+128)+1),f
  1987  09C4  29C1               	goto	u4527
  1988  09C5  0BE4               	decfsz	(??_main^(0+128)+2),f
  1989  09C6  29C1               	goto	u4527
  1990  09C7  0000               	nop
  1991  09C8                     l212:	
  1992                           ;main.c: 529: while(1)
  1993                           
  1994                           
  1995                           ;main.c: 530: {
  1996                           ;main.c: 534: sprintf(display_rpm,"%04d", rpm);
  1997  09C8  301E               	movlw	low (STR_14| (0+32768))
  1998  09C9  1683               	bsf	3,5	;RP0=1, select bank1
  1999  09CA  1303               	bcf	3,6	;RP1=0, select bank1
  2000  09CB  00D9               	movwf	sprintf@f^(0+128)
  2001  09CC  3099               	movlw	high (STR_14| (0+32768))
  2002  09CD  00DA               	movwf	(sprintf@f^(0+128)+1)
  2003  09CE  0846               	movf	(_rpm+1)^(0+128),w
  2004  09CF  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  2005  09D0  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  2006  09D1  0845               	movf	_rpm^(0+128),w
  2007  09D2  01DB               	clrf	(?_sprintf^(0+128)+2)
  2008  09D3  07DB               	addwf	(?_sprintf^(0+128)+2),f
  2009  09D4  30B7               	movlw	_display_rpm& (0+255)
  2010  09D5  120A  158A  255F  120A  158A  	fcall	_sprintf
  2011                           
  2012                           ;main.c: 535: sprintf(display_pwm,"%04d", pwm);
  2013  09DA  301E               	movlw	low (STR_14| (0+32768))
  2014  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  2015  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  2016  09DD  00D9               	movwf	sprintf@f^(0+128)
  2017  09DE  3099               	movlw	high (STR_14| (0+32768))
  2018  09DF  00DA               	movwf	(sprintf@f^(0+128)+1)
  2019  09E0  0844               	movf	(_pwm+1)^(0+128),w
  2020  09E1  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  2021  09E2  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  2022  09E3  0843               	movf	_pwm^(0+128),w
  2023  09E4  01DB               	clrf	(?_sprintf^(0+128)+2)
  2024  09E5  07DB               	addwf	(?_sprintf^(0+128)+2),f
  2025  09E6  30AD               	movlw	_display_pwm& (0+255)
  2026  09E7  120A  158A  255F  120A  158A  	fcall	_sprintf
  2027                           
  2028                           ;main.c: 539: USART_WriteString(display_rpm);
  2029  09EC  30B7               	movlw	_display_rpm& (0+255)
  2030  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  2031  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  2032  09EF  00CC               	movwf	USART_WriteString@str^(0+128)
  2033  09F0  3001               	movlw	1
  2034  09F1  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  2035  09F2  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  2036                           
  2037                           ;main.c: 540: USART_WriteString("\n\r");
  2038  09F7  3092               	movlw	low ((STR_9+12)| (0+32768))
  2039  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  2040  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  2041  09FA  00CC               	movwf	USART_WriteString@str^(0+128)
  2042  09FB  3098               	movlw	high ((STR_9+12)| (0+32768))
  2043  09FC  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  2044  09FD  160A  118A  22F4  120A  158A  	fcall	_USART_WriteString
  2045                           
  2046                           ;main.c: 543: LCD_Clear();
  2047  0A02  160A  118A  229A  120A  158A  	fcall	_LCD_Clear
  2048                           
  2049                           ;main.c: 544: LCD_Cursor(0,0);
  2050  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  2051  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  2052  0A09  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2053  0A0A  3000               	movlw	0
  2054  0A0B  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2055                           
  2056                           ;main.c: 545: LCD_WriteString("RPM: ");
  2057  0A10  3012               	movlw	low (STR_17| (0+32768))
  2058  0A11  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0A12  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0A13  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2061  0A14  3099               	movlw	high (STR_17| (0+32768))
  2062  0A15  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2063  0A16  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2064                           
  2065                           ;main.c: 546: LCD_Cursor(0,6);
  2066  0A1B  3006               	movlw	6
  2067  0A1C  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0A1D  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0A1E  00E2               	movwf	??_main^(0+128)
  2070  0A1F  0862               	movf	??_main^(0+128),w
  2071  0A20  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2072  0A21  3000               	movlw	0
  2073  0A22  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2074                           
  2075                           ;main.c: 547: LCD_WriteString(display_rpm);
  2076  0A27  30B7               	movlw	_display_rpm& (0+255)
  2077  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  2079  0A2A  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2080  0A2B  3001               	movlw	1
  2081  0A2C  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2082  0A2D  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2083                           
  2084                           ;main.c: 548: LCD_Cursor(1,0);
  2085  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0A34  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2088  0A35  3001               	movlw	1
  2089  0A36  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2090                           
  2091                           ;main.c: 549: LCD_WriteString("PWM: ");
  2092  0A3B  3018               	movlw	low (STR_18| (0+32768))
  2093  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0A3E  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2096  0A3F  3099               	movlw	high (STR_18| (0+32768))
  2097  0A40  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2098  0A41  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2099                           
  2100                           ;main.c: 550: LCD_Cursor(1,6);
  2101  0A46  3006               	movlw	6
  2102  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0A49  00E2               	movwf	??_main^(0+128)
  2105  0A4A  0862               	movf	??_main^(0+128),w
  2106  0A4B  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2107  0A4C  3001               	movlw	1
  2108  0A4D  160A  118A  21A9  120A  158A  	fcall	_LCD_Cursor
  2109                           
  2110                           ;main.c: 551: LCD_WriteString(display_pwm);
  2111  0A52  30AD               	movlw	_display_pwm& (0+255)
  2112  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0A55  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2115  0A56  3001               	movlw	1
  2116  0A57  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2117  0A58  160A  118A  22C3  120A  158A  	fcall	_LCD_WriteString
  2118                           
  2119                           ;main.c: 553: _delay((unsigned long)((200)*(18432000/4000.0)));
  2120  0A5D  3005               	movlw	5
  2121  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2122  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2123  0A60  00E4               	movwf	(??_main^(0+128)+2)
  2124  0A61  30AD               	movlw	173
  2125  0A62  00E3               	movwf	(??_main^(0+128)+1)
  2126  0A63  30E0               	movlw	224
  2127  0A64  00E2               	movwf	??_main^(0+128)
  2128  0A65                     u4537:	
  2129  0A65  0BE2               	decfsz	??_main^(0+128),f
  2130  0A66  2A65               	goto	u4537
  2131  0A67  0BE3               	decfsz	(??_main^(0+128)+1),f
  2132  0A68  2A65               	goto	u4537
  2133  0A69  0BE4               	decfsz	(??_main^(0+128)+2),f
  2134  0A6A  2A65               	goto	u4537
  2135  0A6B  29C8               	goto	l212
  2136  0A6C                     __end_of_main:	
  2137                           
  2138                           	psect	text1
  2139  0D5F                     __ptext1:	
  2140 ;; *************** function _sprintf *****************
  2141 ;; Defined at:
  2142 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  sp              1    wreg     PTR unsigned char 
  2145 ;;		 -> display_pwm(10), display_rpm(10), 
  2146 ;;  f               2   18[BANK1 ] PTR const unsigned char 
  2147 ;;		 -> STR_15(5), STR_14(5), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  2150 ;;		 -> display_pwm(10), display_rpm(10), 
  2151 ;;  _val            4    2[BANK3 ] struct .
  2152 ;;  width           2    7[BANK3 ] int 
  2153 ;;  c               1   10[BANK3 ] char 
  2154 ;;  flag            1    6[BANK3 ] unsigned char 
  2155 ;;  prec            1    1[BANK3 ] char 
  2156 ;;  ap              1    0[BANK3 ] PTR void [1]
  2157 ;;		 -> ?_sprintf(2), 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2   18[BANK1 ] int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       4       0       0
  2168 ;;      Locals:         0       0       0      11       0
  2169 ;;      Temps:          0       0       3       0       0
  2170 ;;      Totals:         0       0       7      11       0
  2171 ;;Total ram usage:       18 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    6
  2174 ;; This function calls:
  2175 ;;		___lwdiv
  2176 ;;		___lwmod
  2177 ;;		___wmul
  2178 ;;		_isdigit
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _sprintf
  2186  0D5F                     _sprintf:	
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2190                           ;sprintf@sp stored from wreg
  2191  0D5F  1683               	bsf	3,5	;RP0=1, select bank3
  2192  0D60  1703               	bsf	3,6	;RP1=1, select bank3
  2193  0D61  00CA               	movwf	sprintf@sp^(0+384)
  2194                           
  2195                           ;doprnt.c: 494: va_list ap;
  2196                           ;doprnt.c: 499: signed char c;
  2197                           ;doprnt.c: 501: int width;
  2198                           ;doprnt.c: 506: signed char prec;
  2199                           ;doprnt.c: 508: unsigned char flag;
  2200                           ;doprnt.c: 527: union {
  2201                           ;doprnt.c: 528: unsigned int _val;
  2202                           ;doprnt.c: 529: struct {
  2203                           ;doprnt.c: 530: const char * _cp;
  2204                           ;doprnt.c: 531: unsigned _len;
  2205                           ;doprnt.c: 532: } _str;
  2206                           ;doprnt.c: 533: } _val;
  2207                           ;doprnt.c: 542: *ap = __va_start();
  2208  0D62  30DB               	movlw	(?_sprintf+2)& (0+255)
  2209  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0D65  00DD               	movwf	??_sprintf^(0+128)
  2212  0D66  085D               	movf	??_sprintf^(0+128),w
  2213  0D67  1683               	bsf	3,5	;RP0=1, select bank3
  2214  0D68  1703               	bsf	3,6	;RP1=1, select bank3
  2215  0D69  00C1               	movwf	sprintf@ap^(0+384)
  2216  0D6A                     l3546:	
  2217                           ;doprnt.c: 545: while(c = *f++) {
  2218                           
  2219  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0D6C  085A               	movf	(sprintf@f+1)^(0+128),w
  2222  0D6D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2223  0D6E  0859               	movf	sprintf@f^(0+128),w
  2224  0D6F  00DD               	movwf	??_sprintf^(0+128)
  2225  0D70  0AD9               	incf	sprintf@f^(0+128),f
  2226  0D71  1903               	skipnz
  2227  0D72  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2228  0D73  085E               	movf	(??_sprintf+1)^(0+128),w
  2229  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0D76  00FF               	movwf	127
  2232  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0D79  085D               	movf	??_sprintf^(0+128),w
  2235  0D7A  0084               	movwf	4
  2236  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0D7D  160A  158A  2000  120A  158A  	fcall	stringtab
  2239  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2240  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2241  0D84  00DF               	movwf	(??_sprintf+2)^(0+128)
  2242  0D85  085F               	movf	(??_sprintf+2)^(0+128),w
  2243  0D86  1683               	bsf	3,5	;RP0=1, select bank3
  2244  0D87  1703               	bsf	3,6	;RP1=1, select bank3
  2245  0D88  00CB               	movwf	sprintf@c^(0+384)
  2246  0D89  08CB               	movf	sprintf@c^(0+384),f
  2247  0D8A  1903               	btfsc	3,2
  2248  0D8B  2FF9               	goto	l3548
  2249                           
  2250                           ;doprnt.c: 547: if(c != '%')
  2251  0D8C  084B               	movf	sprintf@c^(0+384),w
  2252  0D8D  3A25               	xorlw	37
  2253  0D8E  1903               	skipnz
  2254  0D8F  2DA4               	goto	l3452
  2255                           
  2256                           ;doprnt.c: 549: {
  2257                           ;doprnt.c: 550: ((*sp++ = (c)));
  2258  0D90  084B               	movf	sprintf@c^(0+384),w
  2259  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0D93  00DD               	movwf	??_sprintf^(0+128)
  2262  0D94  1683               	bsf	3,5	;RP0=1, select bank3
  2263  0D95  1703               	bsf	3,6	;RP1=1, select bank3
  2264  0D96  084A               	movf	sprintf@sp^(0+384),w
  2265  0D97  0084               	movwf	4
  2266  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0D9A  085D               	movf	??_sprintf^(0+128),w
  2269  0D9B  1783               	bsf	3,7	;select IRP bank2
  2270  0D9C  0080               	movwf	0
  2271  0D9D  3001               	movlw	1
  2272  0D9E  00DD               	movwf	??_sprintf^(0+128)
  2273  0D9F  085D               	movf	??_sprintf^(0+128),w
  2274  0DA0  1683               	bsf	3,5	;RP0=1, select bank3
  2275  0DA1  1703               	bsf	3,6	;RP1=1, select bank3
  2276  0DA2  07CA               	addwf	sprintf@sp^(0+384),f
  2277                           
  2278                           ;doprnt.c: 551: continue;
  2279  0DA3  2D6A               	goto	l3546
  2280  0DA4                     l3452:	
  2281                           
  2282                           ;doprnt.c: 552: }
  2283                           ;doprnt.c: 555: width = 0;
  2284  0DA4  01C8               	clrf	sprintf@width^(0+384)
  2285  0DA5  01C9               	clrf	(sprintf@width+1)^(0+384)
  2286                           
  2287                           ;doprnt.c: 557: flag = 0;
  2288  0DA6  01C7               	clrf	sprintf@flag^(0+384)
  2289                           
  2290                           ;doprnt.c: 560: switch(*f) {
  2291                           
  2292                           ;doprnt.c: 559: for(;;) {
  2293  0DA7  2DB1               	goto	l3456
  2294  0DA8                     l489:	
  2295                           ;doprnt.c: 588: case '0':
  2296                           
  2297                           
  2298                           ;doprnt.c: 589: flag |= 0x04;
  2299  0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  2300  0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  2301  0DAA  1547               	bsf	sprintf@flag^(0+384),2
  2302                           
  2303                           ;doprnt.c: 590: f++;
  2304  0DAB  3001               	movlw	1
  2305  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0DAE  07D9               	addwf	sprintf@f^(0+128),f
  2308  0DAF  1803               	skipnc
  2309  0DB0  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2310  0DB1                     l3456:	
  2311                           ;doprnt.c: 593: }
  2312                           
  2313                           ;doprnt.c: 591: continue;
  2314                           
  2315  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0DB3  085A               	movf	(sprintf@f+1)^(0+128),w
  2318  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0DB6  00FF               	movwf	127
  2321  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2323  0DB9  0859               	movf	sprintf@f^(0+128),w
  2324  0DBA  0084               	movwf	4
  2325  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0DBD  160A  158A  2000  120A  158A  	fcall	stringtab
  2328                           
  2329                           ; Switch size 1, requested type "space"
  2330                           ; Number of cases is 1, Range of values is 48 to 48
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte            4     3 (average)
  2334                           ; direct_byte           14    11 (fixed)
  2335                           ; jumptable            263     9 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  0DC2  3A30               	xorlw	48	; case 48
  2338  0DC3  1903               	skipnz
  2339  0DC4  2DA8               	goto	l489
  2340  0DC5  2DC6               	goto	l3458
  2341  0DC6                     l3458:	
  2342                           ;doprnt.c: 595: }
  2343                           
  2344                           ;doprnt.c: 594: break;
  2345                           
  2346                           
  2347                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2348  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0DC8  085A               	movf	(sprintf@f+1)^(0+128),w
  2351  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0DCB  00FF               	movwf	127
  2354  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0DCE  0859               	movf	sprintf@f^(0+128),w
  2357  0DCF  0084               	movwf	4
  2358  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0DD2  160A  158A  2000  120A  158A  	fcall	stringtab
  2361  0DD7  160A  118A  20F1  120A  158A  	fcall	_isdigit
  2362  0DDC  1C03               	btfss	3,0
  2363  0DDD  2E4A               	goto	l3472
  2364                           
  2365                           ;doprnt.c: 607: width = 0;
  2366  0DDE  1683               	bsf	3,5	;RP0=1, select bank3
  2367  0DDF  1703               	bsf	3,6	;RP1=1, select bank3
  2368  0DE0  01C8               	clrf	sprintf@width^(0+384)
  2369  0DE1  01C9               	clrf	(sprintf@width+1)^(0+384)
  2370  0DE2                     l3462:	
  2371                           ;doprnt.c: 608: do {
  2372                           
  2373                           
  2374                           ;doprnt.c: 609: width *= 10;
  2375  0DE2  300A               	movlw	10
  2376  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0DE5  00CB               	movwf	___wmul@multiplier^(0+128)
  2379  0DE6  3000               	movlw	0
  2380  0DE7  00CC               	movwf	(___wmul@multiplier^(0+128)+1)
  2381  0DE8  1683               	bsf	3,5	;RP0=1, select bank3
  2382  0DE9  1703               	bsf	3,6	;RP1=1, select bank3
  2383  0DEA  0849               	movf	(sprintf@width+1)^(0+384),w
  2384  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0DED  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
  2387  0DEE  07CE               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2388  0DEF  1683               	bsf	3,5	;RP0=1, select bank3
  2389  0DF0  1703               	bsf	3,6	;RP1=1, select bank3
  2390  0DF1  0848               	movf	sprintf@width^(0+384),w
  2391  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  2392  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  2393  0DF4  01CD               	clrf	___wmul@multiplicand^(0+128)
  2394  0DF5  07CD               	addwf	___wmul@multiplicand^(0+128),f
  2395  0DF6  160A  118A  2275  120A  158A  	fcall	___wmul
  2396  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0DFD  084C               	movf	(?___wmul+1)^(0+128),w
  2399  0DFE  1683               	bsf	3,5	;RP0=1, select bank3
  2400  0DFF  1703               	bsf	3,6	;RP1=1, select bank3
  2401  0E00  01C9               	clrf	(sprintf@width+1)^(0+384)
  2402  0E01  07C9               	addwf	(sprintf@width+1)^(0+384),f
  2403  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  2405  0E04  084B               	movf	?___wmul^(0+128),w
  2406  0E05  1683               	bsf	3,5	;RP0=1, select bank3
  2407  0E06  1703               	bsf	3,6	;RP1=1, select bank3
  2408  0E07  01C8               	clrf	sprintf@width^(0+384)
  2409  0E08  07C8               	addwf	sprintf@width^(0+384),f
  2410                           
  2411                           ;doprnt.c: 610: width += *f++ - '0';
  2412  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0E0B  085A               	movf	(sprintf@f+1)^(0+128),w
  2415  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0E0E  00FF               	movwf	127
  2418  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0E11  0859               	movf	sprintf@f^(0+128),w
  2421  0E12  0084               	movwf	4
  2422  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0E15  160A  158A  2000  120A  158A  	fcall	stringtab
  2425  0E1A  3ED0               	addlw	208
  2426  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0E1D  00DD               	movwf	??_sprintf^(0+128)
  2429  0E1E  30FF               	movlw	255
  2430  0E1F  1803               	skipnc
  2431  0E20  3000               	movlw	0
  2432  0E21  00DE               	movwf	(??_sprintf^(0+128)+1)
  2433  0E22  085D               	movf	??_sprintf^(0+128),w
  2434  0E23  1683               	bsf	3,5	;RP0=1, select bank3
  2435  0E24  1703               	bsf	3,6	;RP1=1, select bank3
  2436  0E25  07C8               	addwf	sprintf@width^(0+384),f
  2437  0E26  1803               	skipnc
  2438  0E27  0AC9               	incf	(sprintf@width+1)^(0+384),f
  2439  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0E2A  085E               	movf	(??_sprintf+1)^(0+128),w
  2442  0E2B  1683               	bsf	3,5	;RP0=1, select bank3
  2443  0E2C  1703               	bsf	3,6	;RP1=1, select bank3
  2444  0E2D  07C9               	addwf	(sprintf@width+1)^(0+384),f
  2445  0E2E  3001               	movlw	1
  2446  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0E31  07D9               	addwf	sprintf@f^(0+128),f
  2449  0E32  1803               	skipnc
  2450  0E33  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2451                           
  2452                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2453  0E34  085A               	movf	(sprintf@f+1)^(0+128),w
  2454  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0E37  00FF               	movwf	127
  2457  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2458  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0E3A  0859               	movf	sprintf@f^(0+128),w
  2460  0E3B  0084               	movwf	4
  2461  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0E3E  160A  158A  2000  120A  158A  	fcall	stringtab
  2464  0E43  160A  118A  20F1  120A  158A  	fcall	_isdigit
  2465  0E48  1803               	btfsc	3,0
  2466  0E49  2DE2               	goto	l3462
  2467  0E4A                     l3472:	
  2468                           ;doprnt.c: 831: }
  2469                           
  2470                           ;doprnt.c: 822: continue;
  2471                           
  2472                           ;doprnt.c: 811: default:
  2473                           
  2474                           ;doprnt.c: 707: case 'i':
  2475                           ;doprnt.c: 708: break;
  2476                           
  2477                           ;doprnt.c: 706: case 'd':
  2478                           
  2479                           ;doprnt.c: 647: goto alldone;
  2480                           
  2481                           ;doprnt.c: 646: case 0:
  2482                           
  2483                           ;doprnt.c: 617: }
  2484                           ;doprnt.c: 644: switch(c = *f++) {
  2485                           
  2486  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2487  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2488  0E4C  085A               	movf	(sprintf@f+1)^(0+128),w
  2489  0E4D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2490  0E4E  0859               	movf	sprintf@f^(0+128),w
  2491  0E4F  00DD               	movwf	??_sprintf^(0+128)
  2492  0E50  0AD9               	incf	sprintf@f^(0+128),f
  2493  0E51  1903               	skipnz
  2494  0E52  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2495  0E53  085E               	movf	(??_sprintf+1)^(0+128),w
  2496  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0E56  00FF               	movwf	127
  2499  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0E59  085D               	movf	??_sprintf^(0+128),w
  2502  0E5A  0084               	movwf	4
  2503  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0E5D  160A  158A  2000  120A  158A  	fcall	stringtab
  2506  0E62  1683               	bsf	3,5	;RP0=1, select bank3
  2507  0E63  1703               	bsf	3,6	;RP1=1, select bank3
  2508  0E64  00CB               	movwf	sprintf@c^(0+384)
  2509                           
  2510                           ; Switch size 1, requested type "space"
  2511                           ; Number of cases is 3, Range of values is 0 to 105
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte           10     6 (average)
  2515                           ; jumptable            260     6 (fixed)
  2516                           ;	Chosen strategy is simple_byte
  2517  0E65  3A00               	xorlw	0	; case 0
  2518  0E66  1903               	skipnz
  2519  0E67  2FF9               	goto	l3548
  2520  0E68  3A64               	xorlw	100	; case 100
  2521  0E69  1903               	skipnz
  2522  0E6A  2E6F               	goto	l3474
  2523  0E6B  3A0D               	xorlw	13	; case 105
  2524  0E6C  1903               	skipnz
  2525  0E6D  2E6F               	goto	l3474
  2526  0E6E  2D6A               	goto	l3546
  2527  0E6F                     l3474:	
  2528                           
  2529                           ;doprnt.c: 1262: {
  2530                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2531  0E6F  1683               	bsf	3,5	;RP0=1, select bank3
  2532  0E70  1703               	bsf	3,6	;RP1=1, select bank3
  2533  0E71  0841               	movf	sprintf@ap^(0+384),w
  2534  0E72  0084               	movwf	4
  2535  0E73  1383               	bcf	3,7	;select IRP bank0
  2536  0E74  0800               	movf	0,w
  2537  0E75  00C3               	movwf	sprintf@_val^(0+384)
  2538  0E76  0A84               	incf	4,f
  2539  0E77  0800               	movf	0,w
  2540  0E78  00C4               	movwf	(sprintf@_val+1)^(0+384)
  2541  0E79  3002               	movlw	2
  2542  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0E7C  00DD               	movwf	??_sprintf^(0+128)
  2545  0E7D  085D               	movf	??_sprintf^(0+128),w
  2546  0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  2547  0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  2548  0E80  07C1               	addwf	sprintf@ap^(0+384),f
  2549                           
  2550                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2551  0E81  1FC4               	btfss	(sprintf@_val+1)^(0+384),7
  2552  0E82  2E90               	goto	l3484
  2553                           
  2554                           ;doprnt.c: 1271: flag |= 0x03;
  2555  0E83  3003               	movlw	3
  2556  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  2557  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  2558  0E86  00DD               	movwf	??_sprintf^(0+128)
  2559  0E87  085D               	movf	??_sprintf^(0+128),w
  2560  0E88  1683               	bsf	3,5	;RP0=1, select bank3
  2561  0E89  1703               	bsf	3,6	;RP1=1, select bank3
  2562  0E8A  04C7               	iorwf	sprintf@flag^(0+384),f
  2563                           
  2564                           ;doprnt.c: 1272: _val._val = -_val._val;
  2565  0E8B  09C3               	comf	sprintf@_val^(0+384),f
  2566  0E8C  09C4               	comf	(sprintf@_val+1)^(0+384),f
  2567  0E8D  0AC3               	incf	sprintf@_val^(0+384),f
  2568  0E8E  1903               	skipnz
  2569  0E8F  0AC4               	incf	(sprintf@_val+1)^(0+384),f
  2570  0E90                     l3484:	
  2571                           
  2572                           ;doprnt.c: 1273: }
  2573                           ;doprnt.c: 1275: }
  2574                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2575  0E90  01CB               	clrf	sprintf@c^(0+384)
  2576  0E91  0ACB               	incf	sprintf@c^(0+384),f
  2577  0E92  084B               	movf	sprintf@c^(0+384),w
  2578  0E93  3A05               	xorlw	5
  2579  0E94  1903               	btfsc	3,2
  2580  0E95  2ECF               	goto	l3496
  2581  0E96                     l3488:	
  2582                           
  2583                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2584  0E96  084B               	movf	sprintf@c^(0+384),w
  2585  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  2586  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  2587  0E99  00DD               	movwf	??_sprintf^(0+128)
  2588  0E9A  075D               	addwf	??_sprintf^(0+128),w
  2589  0E9B  3E12               	addlw	low (_dpowers| (0+32768))
  2590  0E9C  0084               	movwf	4
  2591  0E9D  3098               	movlw	high (_dpowers| (0+32768))
  2592  0E9E  1803               	skipnc
  2593  0E9F  3E01               	addlw	1
  2594  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0EA2  00FF               	movwf	127
  2597  0EA3  160A  158A  2000  120A  158A  	fcall	stringtab
  2598  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0EAA  00DE               	movwf	(??_sprintf+1)^(0+128)
  2601  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0EAD  160A  158A  2000  120A  158A  	fcall	stringtab
  2604  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0EB4  00DF               	movwf	((??_sprintf+1)^(0+128)+1)
  2607  0EB5  085F               	movf	(??_sprintf+2)^(0+128),w
  2608  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  2609  0EB7  1703               	bsf	3,6	;RP1=1, select bank3
  2610  0EB8  0244               	subwf	(sprintf@_val+1)^(0+384),w
  2611  0EB9  1D03               	skipz
  2612  0EBA  2EC1               	goto	u4385
  2613  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  2615  0EBD  085E               	movf	(??_sprintf+1)^(0+128),w
  2616  0EBE  1683               	bsf	3,5	;RP0=1, select bank3
  2617  0EBF  1703               	bsf	3,6	;RP1=1, select bank3
  2618  0EC0  0243               	subwf	sprintf@_val^(0+384),w
  2619  0EC1                     u4385:	
  2620  0EC1  1C03               	btfss	3,0
  2621  0EC2  2ECF               	goto	l3496
  2622                           
  2623                           ;doprnt.c: 1316: break;
  2624  0EC3  3001               	movlw	1
  2625  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  2627  0EC6  00DD               	movwf	??_sprintf^(0+128)
  2628  0EC7  085D               	movf	??_sprintf^(0+128),w
  2629  0EC8  1683               	bsf	3,5	;RP0=1, select bank3
  2630  0EC9  1703               	bsf	3,6	;RP1=1, select bank3
  2631  0ECA  07CB               	addwf	sprintf@c^(0+384),f
  2632  0ECB  084B               	movf	sprintf@c^(0+384),w
  2633  0ECC  3A05               	xorlw	5
  2634  0ECD  1D03               	skipz
  2635  0ECE  2E96               	goto	l3488
  2636  0ECF                     l3496:	
  2637                           
  2638                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2639  0ECF  0849               	movf	(sprintf@width+1)^(0+384),w
  2640  0ED0  0448               	iorwf	sprintf@width^(0+384),w
  2641  0ED1  1903               	skipnz
  2642  0ED2  2EDD               	goto	l507
  2643  0ED3  0847               	movf	sprintf@flag^(0+384),w
  2644  0ED4  3903               	andlw	3
  2645  0ED5  1903               	btfsc	3,2
  2646  0ED6  2EDD               	goto	l507
  2647                           
  2648                           ;doprnt.c: 1355: width--;
  2649  0ED7  30FF               	movlw	255
  2650  0ED8  07C8               	addwf	sprintf@width^(0+384),f
  2651  0ED9  1803               	skipnc
  2652  0EDA  0AC9               	incf	(sprintf@width+1)^(0+384),f
  2653  0EDB  30FF               	movlw	255
  2654  0EDC  07C9               	addwf	(sprintf@width+1)^(0+384),f
  2655  0EDD                     l507:	
  2656                           
  2657                           ;doprnt.c: 1390: if(width > c)
  2658  0EDD  084B               	movf	sprintf@c^(0+384),w
  2659  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2661  0EE0  00DD               	movwf	??_sprintf^(0+128)
  2662  0EE1  01DE               	clrf	(??_sprintf^(0+128)+1)
  2663  0EE2  1BDD               	btfsc	??_sprintf^(0+128),7
  2664  0EE3  03DE               	decf	(??_sprintf^(0+128)+1),f
  2665  0EE4  085E               	movf	(??_sprintf+1)^(0+128),w
  2666  0EE5  3A80               	xorlw	128
  2667  0EE6  00DF               	movwf	(??_sprintf+2)^(0+128)
  2668  0EE7  1683               	bsf	3,5	;RP0=1, select bank3
  2669  0EE8  1703               	bsf	3,6	;RP1=1, select bank3
  2670  0EE9  0849               	movf	(sprintf@width+1)^(0+384),w
  2671  0EEA  3A80               	xorlw	128
  2672  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0EED  025F               	subwf	(??_sprintf+2)^(0+128),w
  2675  0EEE  1D03               	skipz
  2676  0EEF  2EF6               	goto	u4425
  2677  0EF0  1683               	bsf	3,5	;RP0=1, select bank3
  2678  0EF1  1703               	bsf	3,6	;RP1=1, select bank3
  2679  0EF2  0848               	movf	sprintf@width^(0+384),w
  2680  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  2681  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  2682  0EF5  025D               	subwf	??_sprintf^(0+128),w
  2683  0EF6                     u4425:	
  2684  0EF6  1803               	skipnc
  2685  0EF7  2F0E               	goto	l3504
  2686                           
  2687                           ;doprnt.c: 1391: width -= c;
  2688  0EF8  1683               	bsf	3,5	;RP0=1, select bank3
  2689  0EF9  1703               	bsf	3,6	;RP1=1, select bank3
  2690  0EFA  084B               	movf	sprintf@c^(0+384),w
  2691  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0EFD  00DD               	movwf	??_sprintf^(0+128)
  2694  0EFE  01DE               	clrf	(??_sprintf^(0+128)+1)
  2695  0EFF  1BDD               	btfsc	??_sprintf^(0+128),7
  2696  0F00  03DE               	decf	(??_sprintf^(0+128)+1),f
  2697  0F01  085D               	movf	??_sprintf^(0+128),w
  2698  0F02  1683               	bsf	3,5	;RP0=1, select bank3
  2699  0F03  1703               	bsf	3,6	;RP1=1, select bank3
  2700  0F04  02C8               	subwf	sprintf@width^(0+384),f
  2701  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0F06  1303               	bcf	3,6	;RP1=0, select bank1
  2703  0F07  085E               	movf	(??_sprintf+1)^(0+128),w
  2704  0F08  1683               	bsf	3,5	;RP0=1, select bank3
  2705  0F09  1703               	bsf	3,6	;RP1=1, select bank3
  2706  0F0A  1C03               	skipc
  2707  0F0B  03C9               	decf	(sprintf@width+1)^(0+384),f
  2708  0F0C  02C9               	subwf	(sprintf@width+1)^(0+384),f
  2709  0F0D  2F12               	goto	l3506
  2710  0F0E                     l3504:	
  2711                           
  2712                           ;doprnt.c: 1392: else
  2713                           ;doprnt.c: 1393: width = 0;
  2714  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2715  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2716  0F10  01C8               	clrf	sprintf@width^(0+384)
  2717  0F11  01C9               	clrf	(sprintf@width+1)^(0+384)
  2718  0F12                     l3506:	
  2719                           
  2720                           ;doprnt.c: 1396: if(flag & 0x04) {
  2721  0F12  1D47               	btfss	sprintf@flag^(0+384),2
  2722  0F13  2F49               	goto	l3522
  2723                           
  2724                           ;doprnt.c: 1401: if(flag & 0x03)
  2725  0F14  0847               	movf	sprintf@flag^(0+384),w
  2726  0F15  3903               	andlw	3
  2727  0F16  1903               	btfsc	3,2
  2728  0F17  2F2B               	goto	l3514
  2729                           
  2730                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2731  0F18  302D               	movlw	45
  2732  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0F1B  00DD               	movwf	??_sprintf^(0+128)
  2735  0F1C  1683               	bsf	3,5	;RP0=1, select bank3
  2736  0F1D  1703               	bsf	3,6	;RP1=1, select bank3
  2737  0F1E  084A               	movf	sprintf@sp^(0+384),w
  2738  0F1F  0084               	movwf	4
  2739  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0F22  085D               	movf	??_sprintf^(0+128),w
  2742  0F23  1783               	bsf	3,7	;select IRP bank2
  2743  0F24  0080               	movwf	0
  2744  0F25  3001               	movlw	1
  2745  0F26  00DD               	movwf	??_sprintf^(0+128)
  2746  0F27  085D               	movf	??_sprintf^(0+128),w
  2747  0F28  1683               	bsf	3,5	;RP0=1, select bank3
  2748  0F29  1703               	bsf	3,6	;RP1=1, select bank3
  2749  0F2A  07CA               	addwf	sprintf@sp^(0+384),f
  2750  0F2B                     l3514:	
  2751                           
  2752                           ;doprnt.c: 1424: if(width)
  2753  0F2B  0849               	movf	(sprintf@width+1)^(0+384),w
  2754  0F2C  0448               	iorwf	sprintf@width^(0+384),w
  2755  0F2D  1903               	skipnz
  2756  0F2E  2F81               	goto	l3536
  2757                           
  2758                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2759                           
  2760                           ;doprnt.c: 1425: do
  2761  0F2F  3030               	movlw	48
  2762  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0F32  00DD               	movwf	??_sprintf^(0+128)
  2765  0F33  1683               	bsf	3,5	;RP0=1, select bank3
  2766  0F34  1703               	bsf	3,6	;RP1=1, select bank3
  2767  0F35  084A               	movf	sprintf@sp^(0+384),w
  2768  0F36  0084               	movwf	4
  2769  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0F39  085D               	movf	??_sprintf^(0+128),w
  2772  0F3A  1783               	bsf	3,7	;select IRP bank2
  2773  0F3B  0080               	movwf	0
  2774  0F3C  3001               	movlw	1
  2775  0F3D  00DD               	movwf	??_sprintf^(0+128)
  2776  0F3E  085D               	movf	??_sprintf^(0+128),w
  2777  0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2778  0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2779  0F41  07CA               	addwf	sprintf@sp^(0+384),f
  2780                           
  2781                           ;doprnt.c: 1427: while(--width);
  2782  0F42  30FF               	movlw	255
  2783  0F43  07C8               	addwf	sprintf@width^(0+384),f
  2784  0F44  1803               	skipnc
  2785  0F45  0AC9               	incf	(sprintf@width+1)^(0+384),f
  2786  0F46  30FF               	movlw	255
  2787  0F47  07C9               	addwf	(sprintf@width+1)^(0+384),f
  2788  0F48  2F2B               	goto	l3514
  2789  0F49                     l3522:	
  2790                           ;doprnt.c: 1429: } else
  2791                           
  2792                           
  2793                           ;doprnt.c: 1431: {
  2794                           ;doprnt.c: 1433: if(width
  2795                           ;doprnt.c: 1437: )
  2796  0F49  0849               	movf	(sprintf@width+1)^(0+384),w
  2797  0F4A  0448               	iorwf	sprintf@width^(0+384),w
  2798  0F4B  1903               	skipnz
  2799  0F4C  2F6A               	goto	l3530
  2800  0F4D                     l3524:	
  2801                           ;doprnt.c: 1438: do
  2802                           
  2803                           
  2804                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2805  0F4D  3020               	movlw	32
  2806  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0F50  00DD               	movwf	??_sprintf^(0+128)
  2809  0F51  1683               	bsf	3,5	;RP0=1, select bank3
  2810  0F52  1703               	bsf	3,6	;RP1=1, select bank3
  2811  0F53  084A               	movf	sprintf@sp^(0+384),w
  2812  0F54  0084               	movwf	4
  2813  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0F57  085D               	movf	??_sprintf^(0+128),w
  2816  0F58  1783               	bsf	3,7	;select IRP bank2
  2817  0F59  0080               	movwf	0
  2818  0F5A  3001               	movlw	1
  2819  0F5B  00DD               	movwf	??_sprintf^(0+128)
  2820  0F5C  085D               	movf	??_sprintf^(0+128),w
  2821  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  2822  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  2823  0F5F  07CA               	addwf	sprintf@sp^(0+384),f
  2824                           
  2825                           ;doprnt.c: 1440: while(--width);
  2826  0F60  30FF               	movlw	255
  2827  0F61  07C8               	addwf	sprintf@width^(0+384),f
  2828  0F62  1803               	skipnc
  2829  0F63  0AC9               	incf	(sprintf@width+1)^(0+384),f
  2830  0F64  30FF               	movlw	255
  2831  0F65  07C9               	addwf	(sprintf@width+1)^(0+384),f
  2832  0F66  0849               	movf	(sprintf@width+1)^(0+384),w
  2833  0F67  0448               	iorwf	sprintf@width^(0+384),w
  2834  0F68  1D03               	skipz
  2835  0F69  2F4D               	goto	l3524
  2836  0F6A                     l3530:	
  2837                           
  2838                           ;doprnt.c: 1447: if(flag & 0x03)
  2839  0F6A  0847               	movf	sprintf@flag^(0+384),w
  2840  0F6B  3903               	andlw	3
  2841  0F6C  1903               	btfsc	3,2
  2842  0F6D  2F81               	goto	l3536
  2843                           
  2844                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2845  0F6E  302D               	movlw	45
  2846  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2847  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2848  0F71  00DD               	movwf	??_sprintf^(0+128)
  2849  0F72  1683               	bsf	3,5	;RP0=1, select bank3
  2850  0F73  1703               	bsf	3,6	;RP1=1, select bank3
  2851  0F74  084A               	movf	sprintf@sp^(0+384),w
  2852  0F75  0084               	movwf	4
  2853  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0F78  085D               	movf	??_sprintf^(0+128),w
  2856  0F79  1783               	bsf	3,7	;select IRP bank2
  2857  0F7A  0080               	movwf	0
  2858  0F7B  3001               	movlw	1
  2859  0F7C  00DD               	movwf	??_sprintf^(0+128)
  2860  0F7D  085D               	movf	??_sprintf^(0+128),w
  2861  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2862  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2863  0F80  07CA               	addwf	sprintf@sp^(0+384),f
  2864  0F81                     l3536:	
  2865                           
  2866                           ;doprnt.c: 1478: }
  2867                           ;doprnt.c: 1481: prec = c;
  2868  0F81  084B               	movf	sprintf@c^(0+384),w
  2869  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0F84  00DD               	movwf	??_sprintf^(0+128)
  2872  0F85  085D               	movf	??_sprintf^(0+128),w
  2873  0F86  1683               	bsf	3,5	;RP0=1, select bank3
  2874  0F87  1703               	bsf	3,6	;RP1=1, select bank3
  2875  0F88  00C2               	movwf	sprintf@prec^(0+384)
  2876  0F89                     l3544:	
  2877                           ;doprnt.c: 1483: while(prec--) {
  2878                           
  2879  0F89  30FF               	movlw	-1
  2880  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  2881  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  2882  0F8C  00DD               	movwf	??_sprintf^(0+128)
  2883  0F8D  085D               	movf	??_sprintf^(0+128),w
  2884  0F8E  1683               	bsf	3,5	;RP0=1, select bank3
  2885  0F8F  1703               	bsf	3,6	;RP1=1, select bank3
  2886  0F90  07C2               	addwf	sprintf@prec^(0+384),f
  2887  0F91  0842               	movf	sprintf@prec^(0+384),w
  2888  0F92  3AFF               	xorlw	-1
  2889  0F93  1903               	btfsc	3,2
  2890  0F94  2D6A               	goto	l3546
  2891                           
  2892                           ;doprnt.c: 1487: {
  2893                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2894  0F95  300A               	movlw	10
  2895  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2896  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2897  0F98  00D3               	movwf	___lwmod@divisor^(0+128)
  2898  0F99  3000               	movlw	0
  2899  0F9A  00D4               	movwf	(___lwmod@divisor^(0+128)+1)
  2900  0F9B  1683               	bsf	3,5	;RP0=1, select bank3
  2901  0F9C  1703               	bsf	3,6	;RP1=1, select bank3
  2902  0F9D  0842               	movf	sprintf@prec^(0+384),w
  2903  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2904  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2905  0FA0  00DD               	movwf	??_sprintf^(0+128)
  2906  0FA1  075D               	addwf	??_sprintf^(0+128),w
  2907  0FA2  3E12               	addlw	low (_dpowers| (0+32768))
  2908  0FA3  0084               	movwf	4
  2909  0FA4  3098               	movlw	high (_dpowers| (0+32768))
  2910  0FA5  1803               	skipnc
  2911  0FA6  3E01               	addlw	1
  2912  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0FA9  00FF               	movwf	127
  2915  0FAA  160A  158A  2000  120A  158A  	fcall	stringtab
  2916  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  2918  0FB1  00CB               	movwf	___lwdiv@divisor^(0+128)
  2919  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0FB4  160A  158A  2000  120A  158A  	fcall	stringtab
  2922  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  2924  0FBB  00CC               	movwf	(___lwdiv@divisor+1)^(0+128)
  2925  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  2926  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  2927  0FBE  0844               	movf	(sprintf@_val+1)^(0+384),w
  2928  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2930  0FC1  01CE               	clrf	(___lwdiv@dividend+1)^(0+128)
  2931  0FC2  07CE               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2932  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2933  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2934  0FC5  0843               	movf	sprintf@_val^(0+384),w
  2935  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0FC8  01CD               	clrf	___lwdiv@dividend^(0+128)
  2938  0FC9  07CD               	addwf	___lwdiv@dividend^(0+128),f
  2939  0FCA  160A  118A  2399  120A  158A  	fcall	___lwdiv
  2940  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0FD1  084C               	movf	(?___lwdiv+1)^(0+128),w
  2943  0FD2  01D6               	clrf	(___lwmod@dividend+1)^(0+128)
  2944  0FD3  07D6               	addwf	(___lwmod@dividend+1)^(0+128),f
  2945  0FD4  084B               	movf	?___lwdiv^(0+128),w
  2946  0FD5  01D5               	clrf	___lwmod@dividend^(0+128)
  2947  0FD6  07D5               	addwf	___lwmod@dividend^(0+128),f
  2948  0FD7  160A  118A  2325  120A  158A  	fcall	___lwmod
  2949  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0FDE  0853               	movf	?___lwmod^(0+128),w
  2952  0FDF  3E30               	addlw	48
  2953  0FE0  00DE               	movwf	(??_sprintf+1)^(0+128)
  2954  0FE1  085E               	movf	(??_sprintf+1)^(0+128),w
  2955  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  2956  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  2957  0FE4  00CB               	movwf	sprintf@c^(0+384)
  2958                           
  2959                           ;doprnt.c: 1532: }
  2960                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2961  0FE5  084B               	movf	sprintf@c^(0+384),w
  2962  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2964  0FE8  00DD               	movwf	??_sprintf^(0+128)
  2965  0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  2966  0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  2967  0FEB  084A               	movf	sprintf@sp^(0+384),w
  2968  0FEC  0084               	movwf	4
  2969  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0FEF  085D               	movf	??_sprintf^(0+128),w
  2972  0FF0  1783               	bsf	3,7	;select IRP bank2
  2973  0FF1  0080               	movwf	0
  2974  0FF2  3001               	movlw	1
  2975  0FF3  00DD               	movwf	??_sprintf^(0+128)
  2976  0FF4  085D               	movf	??_sprintf^(0+128),w
  2977  0FF5  1683               	bsf	3,5	;RP0=1, select bank3
  2978  0FF6  1703               	bsf	3,6	;RP1=1, select bank3
  2979  0FF7  07CA               	addwf	sprintf@sp^(0+384),f
  2980  0FF8  2F89               	goto	l3544
  2981  0FF9                     l3548:	
  2982                           ;doprnt.c: 1534: }
  2983                           ;doprnt.c: 1542: }
  2984                           ;doprnt.c: 1544: alldone:
  2985                           
  2986                           
  2987                           ;doprnt.c: 1547: *sp = 0;
  2988  0FF9  1683               	bsf	3,5	;RP0=1, select bank3
  2989  0FFA  1703               	bsf	3,6	;RP1=1, select bank3
  2990  0FFB  084A               	movf	sprintf@sp^(0+384),w
  2991  0FFC  0084               	movwf	4
  2992  0FFD  1783               	bsf	3,7	;select IRP bank2
  2993  0FFE  0180               	clrf	0
  2994  0FFF  0008               	return
  2995  1000                     __end_of_sprintf:	
  2996                           ;doprnt.c: 1549: return 0;
  2997                           ;	Return value of _sprintf is never used
  2998                           
  2999                           
  3000                           	psect	text2
  3001  10F1                     __ptext2:	
  3002 ;; *************** function _isdigit *****************
  3003 ;; Defined at:
  3004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  c               1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  c               1    5[BANK1 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;		None               void
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       2       0       0
  3020 ;;      Temps:          0       0       0       0       0
  3021 ;;      Totals:         0       0       2       0       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    5
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_sprintf
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _isdigit
  3034  10F1                     _isdigit:	
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3038                           ;isdigit@c stored from wreg
  3039  10F1  1683               	bsf	3,5	;RP0=1, select bank1
  3040  10F2  1303               	bcf	3,6	;RP1=0, select bank1
  3041  10F3  00CC               	movwf	isdigit@c^(0+128)
  3042  10F4  01CB               	clrf	_isdigit$1454^(0+128)
  3043  10F5  303A               	movlw	58
  3044  10F6  024C               	subwf	isdigit@c^(0+128),w
  3045  10F7  1803               	skipnc
  3046  10F8  28FF               	goto	l3380
  3047  10F9  3030               	movlw	48
  3048  10FA  024C               	subwf	isdigit@c^(0+128),w
  3049  10FB  1C03               	skipc
  3050  10FC  28FF               	goto	l3380
  3051  10FD  01CB               	clrf	_isdigit$1454^(0+128)
  3052  10FE  0ACB               	incf	_isdigit$1454^(0+128),f
  3053  10FF                     l3380:	
  3054  10FF  0C4B               	rrf	_isdigit$1454^(0+128),w
  3055  1100  0008               	return
  3056  1101                     __end_of_isdigit:	
  3057                           
  3058                           	psect	text3
  3059  1275                     __ptext3:	
  3060 ;; *************** function ___wmul *****************
  3061 ;; Defined at:
  3062 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  multiplier      2    4[BANK1 ] unsigned int 
  3065 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  product         2    8[BANK1 ] unsigned int 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    4[BANK1 ] unsigned int 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       4       0       0
  3078 ;;      Locals:         0       0       2       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       0       6       0       0
  3081 ;;Total ram usage:        6 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    5
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_sprintf
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function ___wmul
  3093  1275                     ___wmul:	
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3097  1275  1683               	bsf	3,5	;RP0=1, select bank1
  3098  1276  1303               	bcf	3,6	;RP1=0, select bank1
  3099  1277  01CF               	clrf	___wmul@product^(0+128)
  3100  1278  01D0               	clrf	(___wmul@product+1)^(0+128)
  3101  1279                     l3386:	
  3102  1279  1C4B               	btfss	___wmul@multiplier^(0+128),0
  3103  127A  2A81               	goto	l608
  3104  127B  084D               	movf	___wmul@multiplicand^(0+128),w
  3105  127C  07CF               	addwf	___wmul@product^(0+128),f
  3106  127D  1803               	skipnc
  3107  127E  0AD0               	incf	(___wmul@product+1)^(0+128),f
  3108  127F  084E               	movf	(___wmul@multiplicand+1)^(0+128),w
  3109  1280  07D0               	addwf	(___wmul@product+1)^(0+128),f
  3110  1281                     l608:	
  3111  1281  3001               	movlw	1
  3112  1282                     u4175:	
  3113  1282  1003               	clrc
  3114  1283  0DCD               	rlf	___wmul@multiplicand^(0+128),f
  3115  1284  0DCE               	rlf	(___wmul@multiplicand+1)^(0+128),f
  3116  1285  3EFF               	addlw	-1
  3117  1286  1D03               	skipz
  3118  1287  2A82               	goto	u4175
  3119  1288  3001               	movlw	1
  3120  1289                     u4185:	
  3121  1289  1003               	clrc
  3122  128A  0CCC               	rrf	(___wmul@multiplier+1)^(0+128),f
  3123  128B  0CCB               	rrf	___wmul@multiplier^(0+128),f
  3124  128C  3EFF               	addlw	-1
  3125  128D  1D03               	skipz
  3126  128E  2A89               	goto	u4185
  3127  128F  084C               	movf	(___wmul@multiplier+1)^(0+128),w
  3128  1290  044B               	iorwf	___wmul@multiplier^(0+128),w
  3129  1291  1D03               	skipz
  3130  1292  2A79               	goto	l3386
  3131  1293  0850               	movf	(___wmul@product+1)^(0+128),w
  3132  1294  01CC               	clrf	(?___wmul+1)^(0+128)
  3133  1295  07CC               	addwf	(?___wmul+1)^(0+128),f
  3134  1296  084F               	movf	___wmul@product^(0+128),w
  3135  1297  01CB               	clrf	?___wmul^(0+128)
  3136  1298  07CB               	addwf	?___wmul^(0+128),f
  3137  1299  0008               	return
  3138  129A                     __end_of___wmul:	
  3139                           
  3140                           	psect	text4
  3141  1325                     __ptext4:	
  3142 ;; *************** function ___lwmod *****************
  3143 ;; Defined at:
  3144 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  divisor         2   12[BANK1 ] unsigned int 
  3147 ;;  dividend        2   14[BANK1 ] unsigned int 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  counter         1   17[BANK1 ] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2   12[BANK1 ] unsigned int 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         0       0       4       0       0
  3160 ;;      Locals:         0       0       1       0       0
  3161 ;;      Temps:          0       0       1       0       0
  3162 ;;      Totals:         0       0       6       0       0
  3163 ;;Total ram usage:        6 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    5
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_sprintf
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function ___lwmod
  3175  1325                     ___lwmod:	
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3179  1325  1683               	bsf	3,5	;RP0=1, select bank1
  3180  1326  1303               	bcf	3,6	;RP1=0, select bank1
  3181  1327  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3182  1328  0453               	iorwf	___lwmod@divisor^(0+128),w
  3183  1329  1903               	skipnz
  3184  132A  2B54               	goto	l3440
  3185  132B  01D8               	clrf	___lwmod@counter^(0+128)
  3186  132C  0AD8               	incf	___lwmod@counter^(0+128),f
  3187  132D                     l3430:	
  3188  132D  1BD4               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3189  132E  2B3B               	goto	l3432
  3190  132F  3001               	movlw	1
  3191  1330                     u4285:	
  3192  1330  1003               	clrc
  3193  1331  0DD3               	rlf	___lwmod@divisor^(0+128),f
  3194  1332  0DD4               	rlf	(___lwmod@divisor+1)^(0+128),f
  3195  1333  3EFF               	addlw	-1
  3196  1334  1D03               	skipz
  3197  1335  2B30               	goto	u4285
  3198  1336  3001               	movlw	1
  3199  1337  00D7               	movwf	??___lwmod^(0+128)
  3200  1338  0857               	movf	??___lwmod^(0+128),w
  3201  1339  07D8               	addwf	___lwmod@counter^(0+128),f
  3202  133A  2B2D               	goto	l3430
  3203  133B                     l3432:	
  3204  133B  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3205  133C  0256               	subwf	(___lwmod@dividend+1)^(0+128),w
  3206  133D  1D03               	skipz
  3207  133E  2B41               	goto	u4305
  3208  133F  0853               	movf	___lwmod@divisor^(0+128),w
  3209  1340  0255               	subwf	___lwmod@dividend^(0+128),w
  3210  1341                     u4305:	
  3211  1341  1C03               	skipc
  3212  1342  2B49               	goto	l3436
  3213  1343  0853               	movf	___lwmod@divisor^(0+128),w
  3214  1344  02D5               	subwf	___lwmod@dividend^(0+128),f
  3215  1345  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3216  1346  1C03               	skipc
  3217  1347  03D6               	decf	(___lwmod@dividend+1)^(0+128),f
  3218  1348  02D6               	subwf	(___lwmod@dividend+1)^(0+128),f
  3219  1349                     l3436:	
  3220  1349  3001               	movlw	1
  3221  134A                     u4315:	
  3222  134A  1003               	clrc
  3223  134B  0CD4               	rrf	(___lwmod@divisor+1)^(0+128),f
  3224  134C  0CD3               	rrf	___lwmod@divisor^(0+128),f
  3225  134D  3EFF               	addlw	-1
  3226  134E  1D03               	skipz
  3227  134F  2B4A               	goto	u4315
  3228  1350  3001               	movlw	1
  3229  1351  02D8               	subwf	___lwmod@counter^(0+128),f
  3230  1352  1D03               	btfss	3,2
  3231  1353  2B3B               	goto	l3432
  3232  1354                     l3440:	
  3233  1354  0856               	movf	(___lwmod@dividend+1)^(0+128),w
  3234  1355  01D4               	clrf	(?___lwmod+1)^(0+128)
  3235  1356  07D4               	addwf	(?___lwmod+1)^(0+128),f
  3236  1357  0855               	movf	___lwmod@dividend^(0+128),w
  3237  1358  01D3               	clrf	?___lwmod^(0+128)
  3238  1359  07D3               	addwf	?___lwmod^(0+128),f
  3239  135A  0008               	return
  3240  135B                     __end_of___lwmod:	
  3241                           
  3242                           	psect	text5
  3243  1399                     __ptext5:	
  3244 ;; *************** function ___lwdiv *****************
  3245 ;; Defined at:
  3246 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  divisor         2    4[BANK1 ] unsigned int 
  3249 ;;  dividend        2    6[BANK1 ] unsigned int 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  quotient        2   10[BANK1 ] unsigned int 
  3252 ;;  counter         1    9[BANK1 ] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    4[BANK1 ] unsigned int 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       0       4       0       0
  3263 ;;      Locals:         0       0       3       0       0
  3264 ;;      Temps:          0       0       1       0       0
  3265 ;;      Totals:         0       0       8       0       0
  3266 ;;Total ram usage:        8 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    5
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_sprintf
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function ___lwdiv
  3278  1399                     ___lwdiv:	
  3279                           
  3280                           ;incstack = 0
  3281                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3282  1399  1683               	bsf	3,5	;RP0=1, select bank1
  3283  139A  1303               	bcf	3,6	;RP1=0, select bank1
  3284  139B  01D1               	clrf	___lwdiv@quotient^(0+128)
  3285  139C  01D2               	clrf	(___lwdiv@quotient+1)^(0+128)
  3286  139D  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3287  139E  044B               	iorwf	___lwdiv@divisor^(0+128),w
  3288  139F  1903               	skipnz
  3289  13A0  2BD2               	goto	l3418
  3290  13A1  01D0               	clrf	___lwdiv@counter^(0+128)
  3291  13A2  0AD0               	incf	___lwdiv@counter^(0+128),f
  3292  13A3                     l3406:	
  3293  13A3  1BCC               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3294  13A4  2BB1               	goto	l3408
  3295  13A5  3001               	movlw	1
  3296  13A6                     u4215:	
  3297  13A6  1003               	clrc
  3298  13A7  0DCB               	rlf	___lwdiv@divisor^(0+128),f
  3299  13A8  0DCC               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3300  13A9  3EFF               	addlw	-1
  3301  13AA  1D03               	skipz
  3302  13AB  2BA6               	goto	u4215
  3303  13AC  3001               	movlw	1
  3304  13AD  00CF               	movwf	??___lwdiv^(0+128)
  3305  13AE  084F               	movf	??___lwdiv^(0+128),w
  3306  13AF  07D0               	addwf	___lwdiv@counter^(0+128),f
  3307  13B0  2BA3               	goto	l3406
  3308  13B1                     l3408:	
  3309  13B1  3001               	movlw	1
  3310  13B2                     u4235:	
  3311  13B2  1003               	clrc
  3312  13B3  0DD1               	rlf	___lwdiv@quotient^(0+128),f
  3313  13B4  0DD2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3314  13B5  3EFF               	addlw	-1
  3315  13B6  1D03               	skipz
  3316  13B7  2BB2               	goto	u4235
  3317  13B8  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3318  13B9  024E               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3319  13BA  1D03               	skipz
  3320  13BB  2BBE               	goto	u4245
  3321  13BC  084B               	movf	___lwdiv@divisor^(0+128),w
  3322  13BD  024D               	subwf	___lwdiv@dividend^(0+128),w
  3323  13BE                     u4245:	
  3324  13BE  1C03               	skipc
  3325  13BF  2BC7               	goto	l3414
  3326  13C0  084B               	movf	___lwdiv@divisor^(0+128),w
  3327  13C1  02CD               	subwf	___lwdiv@dividend^(0+128),f
  3328  13C2  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3329  13C3  1C03               	skipc
  3330  13C4  03CE               	decf	(___lwdiv@dividend+1)^(0+128),f
  3331  13C5  02CE               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3332  13C6  1451               	bsf	___lwdiv@quotient^(0+128),0
  3333  13C7                     l3414:	
  3334  13C7  3001               	movlw	1
  3335  13C8                     u4255:	
  3336  13C8  1003               	clrc
  3337  13C9  0CCC               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3338  13CA  0CCB               	rrf	___lwdiv@divisor^(0+128),f
  3339  13CB  3EFF               	addlw	-1
  3340  13CC  1D03               	skipz
  3341  13CD  2BC8               	goto	u4255
  3342  13CE  3001               	movlw	1
  3343  13CF  02D0               	subwf	___lwdiv@counter^(0+128),f
  3344  13D0  1D03               	btfss	3,2
  3345  13D1  2BB1               	goto	l3408
  3346  13D2                     l3418:	
  3347  13D2  0852               	movf	(___lwdiv@quotient+1)^(0+128),w
  3348  13D3  01CC               	clrf	(?___lwdiv+1)^(0+128)
  3349  13D4  07CC               	addwf	(?___lwdiv+1)^(0+128),f
  3350  13D5  0851               	movf	___lwdiv@quotient^(0+128),w
  3351  13D6  01CB               	clrf	?___lwdiv^(0+128)
  3352  13D7  07CB               	addwf	?___lwdiv^(0+128),f
  3353  13D8  0008               	return
  3354  13D9                     __end_of___lwdiv:	
  3355                           
  3356                           	psect	text6
  3357  12F4                     __ptext6:	
  3358 ;; *************** function _USART_WriteString *****************
  3359 ;; Defined at:
  3360 ;;		line 52 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3363 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3364 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3365 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3366 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       0       2       0       0
  3379 ;;      Locals:         0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0
  3381 ;;      Totals:         0       0       2       0       0
  3382 ;;Total ram usage:        2 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    6
  3385 ;; This function calls:
  3386 ;;		_USART_WriteChar
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _USART_WriteString
  3394  12F4                     _USART_WriteString:	
  3395  12F4                     l2908:	
  3396                           ;usart.c: 54: while(*str != '\0')
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3400                           
  3401  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  3402  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  3403  12F6  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3404  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  3405  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  3406  12F9  00FF               	movwf	127
  3407  12FA  1683               	bsf	3,5	;RP0=1, select bank1
  3408  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  3409  12FC  084C               	movf	USART_WriteString@str^(0+128),w
  3410  12FD  0084               	movwf	4
  3411  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  3412  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  3413  1300  160A  158A  2000  160A  118A  	fcall	stringtab
  3414  1305  3800               	iorlw	0
  3415  1306  1903               	btfsc	3,2
  3416  1307  0008               	return
  3417                           
  3418                           ;usart.c: 55: {
  3419                           ;usart.c: 56: USART_WriteChar(*str);
  3420  1308  1683               	bsf	3,5	;RP0=1, select bank1
  3421  1309  1303               	bcf	3,6	;RP1=0, select bank1
  3422  130A  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3423  130B  1283               	bcf	3,5	;RP0=0, select bank0
  3424  130C  1303               	bcf	3,6	;RP1=0, select bank0
  3425  130D  00FF               	movwf	127
  3426  130E  1683               	bsf	3,5	;RP0=1, select bank1
  3427  130F  1303               	bcf	3,6	;RP1=0, select bank1
  3428  1310  084C               	movf	USART_WriteString@str^(0+128),w
  3429  1311  0084               	movwf	4
  3430  1312  1283               	bcf	3,5	;RP0=0, select bank0
  3431  1313  1303               	bcf	3,6	;RP1=0, select bank0
  3432  1314  160A  158A  2000  160A  118A  	fcall	stringtab
  3433  1319  160A  118A  20E4  160A  118A  	fcall	_USART_WriteChar
  3434                           
  3435                           ;usart.c: 57: str++;
  3436  131E  3001               	movlw	1
  3437  131F  1683               	bsf	3,5	;RP0=1, select bank1
  3438  1320  1303               	bcf	3,6	;RP1=0, select bank1
  3439  1321  07CC               	addwf	USART_WriteString@str^(0+128),f
  3440  1322  1803               	skipnc
  3441  1323  0ACD               	incf	(USART_WriteString@str+1)^(0+128),f
  3442  1324  2AF4               	goto	l2908
  3443  1325                     __end_of_USART_WriteString:	
  3444                           
  3445                           	psect	text7
  3446  10E4                     __ptext7:	
  3447 ;; *************** function _USART_WriteChar *****************
  3448 ;; Defined at:
  3449 ;;		line 44 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  byte            1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  byte            1    4[BANK1 ] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       0       0       0       0
  3464 ;;      Locals:         0       0       1       0       0
  3465 ;;      Temps:          0       0       0       0       0
  3466 ;;      Totals:         0       0       1       0       0
  3467 ;;Total ram usage:        1 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    5
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_USART_WriteString
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _USART_WriteChar
  3479  10E4                     _USART_WriteChar:	
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _USART_WriteChar: [wreg]
  3483                           ;USART_WriteChar@byte stored from wreg
  3484  10E4  1683               	bsf	3,5	;RP0=1, select bank1
  3485  10E5  1303               	bcf	3,6	;RP1=0, select bank1
  3486  10E6  00CB               	movwf	USART_WriteChar@byte^(0+128)
  3487  10E7                     l237:	
  3488                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3489                           
  3490  10E7  1283               	bcf	3,5	;RP0=0, select bank0
  3491  10E8  1E0C               	btfss	12,4	;volatile
  3492  10E9  28E7               	goto	l237
  3493                           
  3494                           ;usart.c: 47: TXREG = byte;
  3495  10EA  1683               	bsf	3,5	;RP0=1, select bank1
  3496  10EB  1303               	bcf	3,6	;RP1=0, select bank1
  3497  10EC  084B               	movf	USART_WriteChar@byte^(0+128),w
  3498  10ED  1283               	bcf	3,5	;RP0=0, select bank0
  3499  10EE  1303               	bcf	3,6	;RP1=0, select bank0
  3500  10EF  0099               	movwf	25	;volatile
  3501  10F0  0008               	return
  3502  10F1                     __end_of_USART_WriteChar:	
  3503                           
  3504                           	psect	text8
  3505  0809                     __ptext8:	
  3506 ;; *************** function _USART_Init *****************
  3507 ;; Defined at:
  3508 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  BaudRate        4   19[BANK1 ] long 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       0       4       0       0
  3523 ;;      Locals:         0       0       0       0       0
  3524 ;;      Temps:          0       0       4       0       0
  3525 ;;      Totals:         0       0       8       0       0
  3526 ;;Total ram usage:        8 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    6
  3529 ;; This function calls:
  3530 ;;		___aldiv
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _USART_Init
  3538  0809                     _USART_Init:	
  3539                           
  3540                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3544  0809  1683               	bsf	3,5	;RP0=1, select bank1
  3545  080A  1303               	bcf	3,6	;RP1=0, select bank1
  3546  080B  085A               	movf	USART_Init@BaudRate^(0+128),w
  3547  080C  00DE               	movwf	??_USART_Init^(0+128)
  3548  080D  085B               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3549  080E  00DF               	movwf	(??_USART_Init^(0+128)+1)
  3550  080F  085C               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3551  0810  00E0               	movwf	(??_USART_Init^(0+128)+2)
  3552  0811  085D               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3553  0812  00E1               	movwf	(??_USART_Init^(0+128)+3)
  3554  0813  3004               	movlw	4
  3555  0814                     u3625:	
  3556  0814  1003               	clrc
  3557  0815  0DDE               	rlf	??_USART_Init^(0+128),f
  3558  0816  0DDF               	rlf	(??_USART_Init^(0+128)+1),f
  3559  0817  0DE0               	rlf	(??_USART_Init^(0+128)+2),f
  3560  0818  0DE1               	rlf	(??_USART_Init^(0+128)+3),f
  3561  0819  3EFF               	addlw	-1
  3562  081A  1D03               	skipz
  3563  081B  2814               	goto	u3625
  3564  081C  0861               	movf	(??_USART_Init+3)^(0+128),w
  3565  081D  00CE               	movwf	(___aldiv@divisor+3)^(0+128)
  3566  081E  0860               	movf	(??_USART_Init+2)^(0+128),w
  3567  081F  00CD               	movwf	(___aldiv@divisor+2)^(0+128)
  3568  0820  085F               	movf	(??_USART_Init+1)^(0+128),w
  3569  0821  00CC               	movwf	(___aldiv@divisor+1)^(0+128)
  3570  0822  085E               	movf	??_USART_Init^(0+128),w
  3571  0823  00CB               	movwf	___aldiv@divisor^(0+128)
  3572  0824  3001               	movlw	1
  3573  0825  00D2               	movwf	(___aldiv@dividend+3)^(0+128)
  3574  0826  3019               	movlw	25
  3575  0827  00D1               	movwf	(___aldiv@dividend+2)^(0+128)
  3576  0828  3040               	movlw	64
  3577  0829  00D0               	movwf	(___aldiv@dividend+1)^(0+128)
  3578  082A  3000               	movlw	0
  3579  082B  00CF               	movwf	___aldiv@dividend^(0+128)
  3580  082C  160A  118A  2595   	fcall	___aldiv
  3581  082F  1683               	bsf	3,5	;RP0=1, select bank1
  3582  0830  1303               	bcf	3,6	;RP1=0, select bank1
  3583  0831  084B               	movf	?___aldiv^(0+128),w
  3584  0832  3EFF               	addlw	255
  3585  0833  0099               	movwf	25	;volatile
  3586                           
  3587                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3588  0834  1398               	bcf	24,7	;volatile
  3589                           
  3590                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3591  0835  1318               	bcf	24,6	;volatile
  3592                           
  3593                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3594  0836  1698               	bsf	24,5	;volatile
  3595                           
  3596                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3597  0837  1218               	bcf	24,4	;volatile
  3598                           
  3599                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3600  0838  1518               	bsf	24,2	;volatile
  3601                           
  3602                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3603  0839  1498               	bsf	24,1	;volatile
  3604                           
  3605                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3606  083A  1018               	bcf	24,0	;volatile
  3607                           
  3608                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3609  083B  1283               	bcf	3,5	;RP0=0, select bank0
  3610  083C  1303               	bcf	3,6	;RP1=0, select bank0
  3611  083D  1798               	bsf	24,7	;volatile
  3612                           
  3613                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3614  083E  1318               	bcf	24,6	;volatile
  3615                           
  3616                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3617  083F  1298               	bcf	24,5	;volatile
  3618                           
  3619                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3620  0840  1618               	bsf	24,4	;volatile
  3621                           
  3622                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3623  0841  1198               	bcf	24,3	;volatile
  3624                           
  3625                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3626  0842  1118               	bcf	24,2	;volatile
  3627                           
  3628                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3629  0843  1098               	bcf	24,1	;volatile
  3630                           
  3631                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3632  0844  1018               	bcf	24,0	;volatile
  3633                           
  3634                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3635  0845  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0846  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0847  120C               	bcf	12,4	;volatile
  3638                           
  3639                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3640  0848  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0849  1303               	bcf	3,6	;RP1=0, select bank0
  3642  084A  120C               	bcf	12,4	;volatile
  3643                           
  3644                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3645  084B  1683               	bsf	3,5	;RP0=1, select bank1
  3646  084C  1303               	bcf	3,6	;RP1=0, select bank1
  3647  084D  168C               	bsf	12,5	;volatile
  3648                           
  3649                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3650  084E  1283               	bcf	3,5	;RP0=0, select bank0
  3651  084F  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0850  128C               	bcf	12,5	;volatile
  3653  0851  0008               	return
  3654  0852                     __end_of_USART_Init:	
  3655                           
  3656                           	psect	text9
  3657  1595                     __ptext9:	
  3658 ;; *************** function ___aldiv *****************
  3659 ;; Defined at:
  3660 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  divisor         4    4[BANK1 ] long 
  3663 ;;  dividend        4    8[BANK1 ] long 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  quotient        4   15[BANK1 ] long 
  3666 ;;  sign            1   14[BANK1 ] unsigned char 
  3667 ;;  counter         1   13[BANK1 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  4    4[BANK1 ] long 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       8       0       0
  3678 ;;      Locals:         0       0       6       0       0
  3679 ;;      Temps:          0       0       1       0       0
  3680 ;;      Totals:         0       0      15       0       0
  3681 ;;Total ram usage:       15 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    5
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_USART_Init
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function ___aldiv
  3693  1595                     ___aldiv:	
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3697  1595  1683               	bsf	3,5	;RP0=1, select bank1
  3698  1596  1303               	bcf	3,6	;RP1=0, select bank1
  3699  1597  01D5               	clrf	___aldiv@sign^(0+128)
  3700  1598  1FCE               	btfss	(___aldiv@divisor+3)^(0+128),7
  3701  1599  2DA7               	goto	l663
  3702  159A  09CB               	comf	___aldiv@divisor^(0+128),f
  3703  159B  09CC               	comf	(___aldiv@divisor+1)^(0+128),f
  3704  159C  09CD               	comf	(___aldiv@divisor+2)^(0+128),f
  3705  159D  09CE               	comf	(___aldiv@divisor+3)^(0+128),f
  3706  159E  0ACB               	incf	___aldiv@divisor^(0+128),f
  3707  159F  1903               	skipnz
  3708  15A0  0ACC               	incf	(___aldiv@divisor+1)^(0+128),f
  3709  15A1  1903               	skipnz
  3710  15A2  0ACD               	incf	(___aldiv@divisor+2)^(0+128),f
  3711  15A3  1903               	skipnz
  3712  15A4  0ACE               	incf	(___aldiv@divisor+3)^(0+128),f
  3713  15A5  01D5               	clrf	___aldiv@sign^(0+128)
  3714  15A6  0AD5               	incf	___aldiv@sign^(0+128),f
  3715  15A7                     l663:	
  3716  15A7  1FD2               	btfss	(___aldiv@dividend+3)^(0+128),7
  3717  15A8  2DB8               	goto	l2556
  3718  15A9  09CF               	comf	___aldiv@dividend^(0+128),f
  3719  15AA  09D0               	comf	(___aldiv@dividend+1)^(0+128),f
  3720  15AB  09D1               	comf	(___aldiv@dividend+2)^(0+128),f
  3721  15AC  09D2               	comf	(___aldiv@dividend+3)^(0+128),f
  3722  15AD  0ACF               	incf	___aldiv@dividend^(0+128),f
  3723  15AE  1903               	skipnz
  3724  15AF  0AD0               	incf	(___aldiv@dividend+1)^(0+128),f
  3725  15B0  1903               	skipnz
  3726  15B1  0AD1               	incf	(___aldiv@dividend+2)^(0+128),f
  3727  15B2  1903               	skipnz
  3728  15B3  0AD2               	incf	(___aldiv@dividend+3)^(0+128),f
  3729  15B4  3001               	movlw	1
  3730  15B5  00D3               	movwf	??___aldiv^(0+128)
  3731  15B6  0853               	movf	??___aldiv^(0+128),w
  3732  15B7  06D5               	xorwf	___aldiv@sign^(0+128),f
  3733  15B8                     l2556:	
  3734  15B8  3000               	movlw	0
  3735  15B9  00D9               	movwf	(___aldiv@quotient+3)^(0+128)
  3736  15BA  3000               	movlw	0
  3737  15BB  00D8               	movwf	(___aldiv@quotient+2)^(0+128)
  3738  15BC  3000               	movlw	0
  3739  15BD  00D7               	movwf	(___aldiv@quotient+1)^(0+128)
  3740  15BE  3000               	movlw	0
  3741  15BF  00D6               	movwf	___aldiv@quotient^(0+128)
  3742  15C0  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3743  15C1  044D               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3744  15C2  044C               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3745  15C3  044B               	iorwf	___aldiv@divisor^(0+128),w
  3746  15C4  1903               	skipnz
  3747  15C5  2E0D               	goto	l2578
  3748  15C6  01D4               	clrf	___aldiv@counter^(0+128)
  3749  15C7  0AD4               	incf	___aldiv@counter^(0+128),f
  3750  15C8                     l2564:	
  3751  15C8  1BCE               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3752  15C9  2DD8               	goto	l2566
  3753  15CA  3001               	movlw	1
  3754  15CB  00D3               	movwf	??___aldiv^(0+128)
  3755  15CC                     u2895:	
  3756  15CC  1003               	clrc
  3757  15CD  0DCB               	rlf	___aldiv@divisor^(0+128),f
  3758  15CE  0DCC               	rlf	(___aldiv@divisor+1)^(0+128),f
  3759  15CF  0DCD               	rlf	(___aldiv@divisor+2)^(0+128),f
  3760  15D0  0DCE               	rlf	(___aldiv@divisor+3)^(0+128),f
  3761  15D1  0BD3               	decfsz	??___aldiv^(0+128),f
  3762  15D2  2DCC               	goto	u2895
  3763  15D3  3001               	movlw	1
  3764  15D4  00D3               	movwf	??___aldiv^(0+128)
  3765  15D5  0853               	movf	??___aldiv^(0+128),w
  3766  15D6  07D4               	addwf	___aldiv@counter^(0+128),f
  3767  15D7  2DC8               	goto	l2564
  3768  15D8                     l2566:	
  3769  15D8  3001               	movlw	1
  3770  15D9  00D3               	movwf	??___aldiv^(0+128)
  3771  15DA                     u2915:	
  3772  15DA  1003               	clrc
  3773  15DB  0DD6               	rlf	___aldiv@quotient^(0+128),f
  3774  15DC  0DD7               	rlf	(___aldiv@quotient+1)^(0+128),f
  3775  15DD  0DD8               	rlf	(___aldiv@quotient+2)^(0+128),f
  3776  15DE  0DD9               	rlf	(___aldiv@quotient+3)^(0+128),f
  3777  15DF  0BD3               	decfsz	??___aldiv^(0+128),f
  3778  15E0  2DDA               	goto	u2915
  3779  15E1  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3780  15E2  0252               	subwf	(___aldiv@dividend+3)^(0+128),w
  3781  15E3  1D03               	skipz
  3782  15E4  2DEF               	goto	u2925
  3783  15E5  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3784  15E6  0251               	subwf	(___aldiv@dividend+2)^(0+128),w
  3785  15E7  1D03               	skipz
  3786  15E8  2DEF               	goto	u2925
  3787  15E9  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3788  15EA  0250               	subwf	(___aldiv@dividend+1)^(0+128),w
  3789  15EB  1D03               	skipz
  3790  15EC  2DEF               	goto	u2925
  3791  15ED  084B               	movf	___aldiv@divisor^(0+128),w
  3792  15EE  024F               	subwf	___aldiv@dividend^(0+128),w
  3793  15EF                     u2925:	
  3794  15EF  1C03               	skipc
  3795  15F0  2E00               	goto	l2574
  3796  15F1  084B               	movf	___aldiv@divisor^(0+128),w
  3797  15F2  02CF               	subwf	___aldiv@dividend^(0+128),f
  3798  15F3  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3799  15F4  1C03               	skipc
  3800  15F5  0F4C               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3801  15F6  02D0               	subwf	(___aldiv@dividend+1)^(0+128),f
  3802  15F7  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3803  15F8  1C03               	skipc
  3804  15F9  0F4D               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3805  15FA  02D1               	subwf	(___aldiv@dividend+2)^(0+128),f
  3806  15FB  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3807  15FC  1C03               	skipc
  3808  15FD  0F4E               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3809  15FE  02D2               	subwf	(___aldiv@dividend+3)^(0+128),f
  3810  15FF  1456               	bsf	___aldiv@quotient^(0+128),0
  3811  1600                     l2574:	
  3812  1600  3001               	movlw	1
  3813  1601                     u2935:	
  3814  1601  1003               	clrc
  3815  1602  0CCE               	rrf	(___aldiv@divisor+3)^(0+128),f
  3816  1603  0CCD               	rrf	(___aldiv@divisor+2)^(0+128),f
  3817  1604  0CCC               	rrf	(___aldiv@divisor+1)^(0+128),f
  3818  1605  0CCB               	rrf	___aldiv@divisor^(0+128),f
  3819  1606  3EFF               	addlw	-1
  3820  1607  1D03               	skipz
  3821  1608  2E01               	goto	u2935
  3822  1609  3001               	movlw	1
  3823  160A  02D4               	subwf	___aldiv@counter^(0+128),f
  3824  160B  1D03               	btfss	3,2
  3825  160C  2DD8               	goto	l2566
  3826  160D                     l2578:	
  3827  160D  0855               	movf	___aldiv@sign^(0+128),w
  3828  160E  1903               	btfsc	3,2
  3829  160F  2E1B               	goto	l2582
  3830  1610  09D6               	comf	___aldiv@quotient^(0+128),f
  3831  1611  09D7               	comf	(___aldiv@quotient+1)^(0+128),f
  3832  1612  09D8               	comf	(___aldiv@quotient+2)^(0+128),f
  3833  1613  09D9               	comf	(___aldiv@quotient+3)^(0+128),f
  3834  1614  0AD6               	incf	___aldiv@quotient^(0+128),f
  3835  1615  1903               	skipnz
  3836  1616  0AD7               	incf	(___aldiv@quotient+1)^(0+128),f
  3837  1617  1903               	skipnz
  3838  1618  0AD8               	incf	(___aldiv@quotient+2)^(0+128),f
  3839  1619  1903               	skipnz
  3840  161A  0AD9               	incf	(___aldiv@quotient+3)^(0+128),f
  3841  161B                     l2582:	
  3842  161B  0859               	movf	(___aldiv@quotient+3)^(0+128),w
  3843  161C  00CE               	movwf	(?___aldiv+3)^(0+128)
  3844  161D  0858               	movf	(___aldiv@quotient+2)^(0+128),w
  3845  161E  00CD               	movwf	(?___aldiv+2)^(0+128)
  3846  161F  0857               	movf	(___aldiv@quotient+1)^(0+128),w
  3847  1620  00CC               	movwf	(?___aldiv+1)^(0+128)
  3848  1621  0856               	movf	___aldiv@quotient^(0+128),w
  3849  1622  00CB               	movwf	?___aldiv^(0+128)
  3850  1623  0008               	return
  3851  1624                     __end_of___aldiv:	
  3852                           
  3853                           	psect	text10
  3854  10D1                     __ptext10:	
  3855 ;; *************** function _TIMER0_Set *****************
  3856 ;; Defined at:
  3857 ;;		line 20 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  contagens       1    wreg     unsigned char 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  contagens       1    4[BANK1 ] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;		None               void
  3864 ;; Registers used:
  3865 ;;		wreg
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       0       0       0       0
  3872 ;;      Locals:         0       0       1       0       0
  3873 ;;      Temps:          0       0       0       0       0
  3874 ;;      Totals:         0       0       1       0       0
  3875 ;;Total ram usage:        1 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    5
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _TIMER0_Set
  3887  10D1                     _TIMER0_Set:	
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _TIMER0_Set: [wreg]
  3891                           ;TIMER0_Set@contagens stored from wreg
  3892  10D1  1683               	bsf	3,5	;RP0=1, select bank1
  3893  10D2  1303               	bcf	3,6	;RP1=0, select bank1
  3894  10D3  00CB               	movwf	TIMER0_Set@contagens^(0+128)
  3895                           
  3896                           ;timers.c: 22: TMR0 = contagens;
  3897  10D4  084B               	movf	TIMER0_Set@contagens^(0+128),w
  3898  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  3899  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  3900  10D7  0081               	movwf	1	;volatile
  3901  10D8  0008               	return
  3902  10D9                     __end_of_TIMER0_Set:	
  3903                           
  3904                           	psect	text11
  3905  10D9                     __ptext11:	
  3906 ;; *************** function _TIMER0_Init *****************
  3907 ;; Defined at:
  3908 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;		None               void
  3915 ;; Registers used:
  3916 ;;		None
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    5
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _TIMER0_Init
  3938  10D9                     _TIMER0_Init:	
  3939                           
  3940                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _TIMER0_Init: []
  3944  10D9  1683               	bsf	3,5	;RP0=1, select bank1
  3945  10DA  1303               	bcf	3,6	;RP1=0, select bank1
  3946  10DB  1281               	bcf	1,5	;volatile
  3947                           
  3948                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3949  10DC  1201               	bcf	1,4	;volatile
  3950                           
  3951                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3952  10DD  1181               	bcf	1,3	;volatile
  3953                           
  3954                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3955  10DE  1501               	bsf	1,2	;volatile
  3956                           
  3957                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3958  10DF  1481               	bsf	1,1	;volatile
  3959                           
  3960                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3961  10E0  1401               	bsf	1,0	;volatile
  3962                           
  3963                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3964  10E1  110B               	bcf	11,2	;volatile
  3965                           
  3966                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3967  10E2  168B               	bsf	11,5	;volatile
  3968  10E3  0008               	return
  3969  10E4                     __end_of_TIMER0_Init:	
  3970                           
  3971                           	psect	text12
  3972  1251                     __ptext12:	
  3973 ;; *************** function _PWM_Init *****************
  3974 ;; Defined at:
  3975 ;;		line 5 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;		None               void
  3982 ;; Registers used:
  3983 ;;		wreg
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    5
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _PWM_Init
  4005  1251                     _PWM_Init:	
  4006                           
  4007                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _PWM_Init: [wreg]
  4011  1251  1283               	bcf	3,5	;RP0=0, select bank0
  4012  1252  1303               	bcf	3,6	;RP1=0, select bank0
  4013  1253  1492               	bsf	18,1	;volatile
  4014                           
  4015                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  4016  1254  1012               	bcf	18,0	;volatile
  4017                           
  4018                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  4019  1255  1312               	bcf	18,6	;volatile
  4020                           
  4021                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  4022  1256  1292               	bcf	18,5	;volatile
  4023                           
  4024                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  4025  1257  1212               	bcf	18,4	;volatile
  4026                           
  4027                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  4028  1258  1192               	bcf	18,3	;volatile
  4029                           
  4030                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  4031  1259  1512               	bsf	18,2	;volatile
  4032                           
  4033                           ;pwm.c: 27: PR2 = 255;
  4034  125A  30FF               	movlw	255
  4035  125B  1683               	bsf	3,5	;RP0=1, select bank1
  4036  125C  1303               	bcf	3,6	;RP1=0, select bank1
  4037  125D  0092               	movwf	18	;volatile
  4038                           
  4039                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  4040  125E  1283               	bcf	3,5	;RP0=0, select bank0
  4041  125F  1303               	bcf	3,6	;RP1=0, select bank0
  4042  1260  1597               	bsf	23,3	;volatile
  4043                           
  4044                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  4045  1261  1517               	bsf	23,2	;volatile
  4046                           
  4047                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  4048  1262  1497               	bsf	23,1	;volatile
  4049                           
  4050                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  4051  1263  1417               	bsf	23,0	;volatile
  4052                           
  4053                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  4054  1264  1683               	bsf	3,5	;RP0=1, select bank1
  4055  1265  1303               	bcf	3,6	;RP1=0, select bank1
  4056  1266  150C               	bsf	12,2	;volatile
  4057                           
  4058                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  4059  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4060  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4061  1269  110C               	bcf	12,2	;volatile
  4062                           
  4063                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  4064  126A  159D               	bsf	29,3	;volatile
  4065                           
  4066                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  4067  126B  151D               	bsf	29,2	;volatile
  4068                           
  4069                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  4070  126C  149D               	bsf	29,1	;volatile
  4071                           
  4072                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  4073  126D  141D               	bsf	29,0	;volatile
  4074                           
  4075                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  4076  126E  1683               	bsf	3,5	;RP0=1, select bank1
  4077  126F  1303               	bcf	3,6	;RP1=0, select bank1
  4078  1270  140D               	bsf	13,0	;volatile
  4079                           
  4080                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  4081  1271  1283               	bcf	3,5	;RP0=0, select bank0
  4082  1272  1303               	bcf	3,6	;RP1=0, select bank0
  4083  1273  100D               	bcf	13,0	;volatile
  4084  1274  0008               	return
  4085  1275                     __end_of_PWM_Init:	
  4086                           
  4087                           	psect	text13
  4088  11EA                     __ptext13:	
  4089 ;; *************** function _PWM_DutyCycle2 *****************
  4090 ;; Defined at:
  4091 ;;		line 96 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  valor           2    4[BANK1 ] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       2       0       0
  4106 ;;      Locals:         0       0       0       0       0
  4107 ;;      Temps:          0       0       2       0       0
  4108 ;;      Totals:         0       0       4       0       0
  4109 ;;Total ram usage:        4 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    5
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _PWM_DutyCycle2
  4121  11EA                     _PWM_DutyCycle2:	
  4122                           
  4123                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  4127  11EA  1683               	bsf	3,5	;RP0=1, select bank1
  4128  11EB  1303               	bcf	3,6	;RP1=0, select bank1
  4129  11EC  084C               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  4130  11ED  00CE               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  4131  11EE  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4132  11EF  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4133  11F0  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4134  11F1  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4135  11F2  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4136  11F3  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4137  11F4  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4138  11F5  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4139  11F6  084D               	movf	??_PWM_DutyCycle2^(0+128),w
  4140  11F7  1283               	bcf	3,5	;RP0=0, select bank0
  4141  11F8  1303               	bcf	3,6	;RP1=0, select bank0
  4142  11F9  009B               	movwf	27	;volatile
  4143                           
  4144                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4145  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  4146  11FB  1303               	bcf	3,6	;RP1=0, select bank1
  4147  11FC  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4148  11FD  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4149  11FE  3003               	movlw	3
  4150  11FF                     u3595:	
  4151  11FF  1003               	clrc
  4152  1200  0DCD               	rlf	??_PWM_DutyCycle2^(0+128),f
  4153  1201  3EFF               	addlw	-1
  4154  1202  1D03               	skipz
  4155  1203  29FF               	goto	u3595
  4156  1204  1003               	clrc
  4157  1205  0D4D               	rlf	??_PWM_DutyCycle2^(0+128),w
  4158  1206  380C               	iorlw	12
  4159  1207  1283               	bcf	3,5	;RP0=0, select bank0
  4160  1208  1303               	bcf	3,6	;RP1=0, select bank0
  4161  1209  009D               	movwf	29	;volatile
  4162  120A  0008               	return
  4163  120B                     __end_of_PWM_DutyCycle2:	
  4164                           
  4165                           	psect	text14
  4166  11C9                     __ptext14:	
  4167 ;; *************** function _PWM_DutyCycle1 *****************
  4168 ;; Defined at:
  4169 ;;		line 64 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  valor           2    4[BANK1 ] int 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       0       2       0       0
  4184 ;;      Locals:         0       0       0       0       0
  4185 ;;      Temps:          0       0       2       0       0
  4186 ;;      Totals:         0       0       4       0       0
  4187 ;;Total ram usage:        4 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    5
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _PWM_DutyCycle1
  4199  11C9                     _PWM_DutyCycle1:	
  4200                           
  4201                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4205  11C9  1683               	bsf	3,5	;RP0=1, select bank1
  4206  11CA  1303               	bcf	3,6	;RP1=0, select bank1
  4207  11CB  084C               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4208  11CC  00CE               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4209  11CD  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4210  11CE  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4211  11CF  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4212  11D0  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4213  11D1  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4214  11D2  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4215  11D3  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4216  11D4  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4217  11D5  084D               	movf	??_PWM_DutyCycle1^(0+128),w
  4218  11D6  1283               	bcf	3,5	;RP0=0, select bank0
  4219  11D7  1303               	bcf	3,6	;RP1=0, select bank0
  4220  11D8  0095               	movwf	21	;volatile
  4221                           
  4222                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4223  11D9  1683               	bsf	3,5	;RP0=1, select bank1
  4224  11DA  1303               	bcf	3,6	;RP1=0, select bank1
  4225  11DB  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4226  11DC  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4227  11DD  3003               	movlw	3
  4228  11DE                     u3655:	
  4229  11DE  1003               	clrc
  4230  11DF  0DCD               	rlf	??_PWM_DutyCycle1^(0+128),f
  4231  11E0  3EFF               	addlw	-1
  4232  11E1  1D03               	skipz
  4233  11E2  29DE               	goto	u3655
  4234  11E3  1003               	clrc
  4235  11E4  0D4D               	rlf	??_PWM_DutyCycle1^(0+128),w
  4236  11E5  380C               	iorlw	12
  4237  11E6  1283               	bcf	3,5	;RP0=0, select bank0
  4238  11E7  1303               	bcf	3,6	;RP1=0, select bank0
  4239  11E8  0097               	movwf	23	;volatile
  4240  11E9  0008               	return
  4241  11EA                     __end_of_PWM_DutyCycle1:	
  4242                           
  4243                           	psect	text15
  4244  12C3                     __ptext15:	
  4245 ;; *************** function _LCD_WriteString *****************
  4246 ;; Defined at:
  4247 ;;		line 61 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4250 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4251 ;;		 -> STR_13(17), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       0       2       0       0
  4264 ;;      Locals:         0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0
  4266 ;;      Totals:         0       0       2       0       0
  4267 ;;Total ram usage:        2 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    6
  4270 ;; This function calls:
  4271 ;;		_LCD_WriteData
  4272 ;; This function is called by:
  4273 ;;		_main
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _LCD_WriteString
  4279  12C3                     _LCD_WriteString:	
  4280  12C3                     l3028:	
  4281                           ;lcd.c: 63: while(*Str != '\0')
  4282                           
  4283                           ;incstack = 0
  4284                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4285                           
  4286  12C3  1683               	bsf	3,5	;RP0=1, select bank1
  4287  12C4  1303               	bcf	3,6	;RP1=0, select bank1
  4288  12C5  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4289  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  4290  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  4291  12C8  00FF               	movwf	127
  4292  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  4293  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  4294  12CB  084D               	movf	LCD_WriteString@Str^(0+128),w
  4295  12CC  0084               	movwf	4
  4296  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  4297  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  4298  12CF  160A  158A  2000  160A  118A  	fcall	stringtab
  4299  12D4  3800               	iorlw	0
  4300  12D5  1903               	btfsc	3,2
  4301  12D6  0008               	return
  4302                           
  4303                           ;lcd.c: 64: {
  4304                           ;lcd.c: 65: LCD_WriteData(*Str);
  4305  12D7  1683               	bsf	3,5	;RP0=1, select bank1
  4306  12D8  1303               	bcf	3,6	;RP1=0, select bank1
  4307  12D9  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4308  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  4309  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  4310  12DC  00FF               	movwf	127
  4311  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  4312  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  4313  12DF  084D               	movf	LCD_WriteString@Str^(0+128),w
  4314  12E0  0084               	movwf	4
  4315  12E1  1283               	bcf	3,5	;RP0=0, select bank0
  4316  12E2  1303               	bcf	3,6	;RP1=0, select bank0
  4317  12E3  160A  158A  2000  160A  118A  	fcall	stringtab
  4318  12E8  160A  118A  213E  160A  118A  	fcall	_LCD_WriteData
  4319                           
  4320                           ;lcd.c: 66: Str++;
  4321  12ED  3001               	movlw	1
  4322  12EE  1683               	bsf	3,5	;RP0=1, select bank1
  4323  12EF  1303               	bcf	3,6	;RP1=0, select bank1
  4324  12F0  07CD               	addwf	LCD_WriteString@Str^(0+128),f
  4325  12F1  1803               	skipnc
  4326  12F2  0ACE               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4327  12F3  2AC3               	goto	l3028
  4328  12F4                     __end_of_LCD_WriteString:	
  4329                           
  4330                           	psect	text16
  4331  113E                     __ptext16:	
  4332 ;; *************** function _LCD_WriteData *****************
  4333 ;; Defined at:
  4334 ;;		line 47 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  Byte            1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  Byte            1    5[BANK1 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		wreg
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       1       0       0
  4350 ;;      Temps:          0       0       1       0       0
  4351 ;;      Totals:         0       0       2       0       0
  4352 ;;Total ram usage:        2 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    5
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_LCD_WriteString
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _LCD_WriteData
  4364  113E                     _LCD_WriteData:	
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _LCD_WriteData: [wreg]
  4368                           ;LCD_WriteData@Byte stored from wreg
  4369  113E  1683               	bsf	3,5	;RP0=1, select bank1
  4370  113F  1303               	bcf	3,6	;RP1=0, select bank1
  4371  1140  00CC               	movwf	LCD_WriteData@Byte^(0+128)
  4372                           
  4373                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4374  1141  1283               	bcf	3,5	;RP0=0, select bank0
  4375  1142  1303               	bcf	3,6	;RP1=0, select bank0
  4376  1143  1409               	bsf	9,0	;volatile
  4377                           
  4378                           ;lcd.c: 51: PORTD = Byte;
  4379  1144  1683               	bsf	3,5	;RP0=1, select bank1
  4380  1145  1303               	bcf	3,6	;RP1=0, select bank1
  4381  1146  084C               	movf	LCD_WriteData@Byte^(0+128),w
  4382  1147  1283               	bcf	3,5	;RP0=0, select bank0
  4383  1148  1303               	bcf	3,6	;RP1=0, select bank0
  4384  1149  0088               	movwf	8	;volatile
  4385                           
  4386                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4387  114A  1489               	bsf	9,1	;volatile
  4388                           
  4389                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4390  114B  303D               	movlw	61
  4391  114C  1683               	bsf	3,5	;RP0=1, select bank1
  4392  114D  1303               	bcf	3,6	;RP1=0, select bank1
  4393  114E  00CB               	movwf	??_LCD_WriteData^(0+128)
  4394  114F                     u4547:	
  4395  114F  0BCB               	decfsz	??_LCD_WriteData^(0+128),f
  4396  1150  294F               	goto	u4547
  4397                           
  4398                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4399  1151  1283               	bcf	3,5	;RP0=0, select bank0
  4400  1152  1303               	bcf	3,6	;RP1=0, select bank0
  4401  1153  1089               	bcf	9,1	;volatile
  4402  1154  0008               	return
  4403  1155                     __end_of_LCD_WriteData:	
  4404                           
  4405                           	psect	text17
  4406  149E                     __ptext17:	
  4407 ;; *************** function _LCD_Init *****************
  4408 ;; Defined at:
  4409 ;;		line 87 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       0       2       0       0
  4426 ;;      Totals:         0       0       2       0       0
  4427 ;;Total ram usage:        2 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    6
  4430 ;; This function calls:
  4431 ;;		_LCD_WriteCmd
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _LCD_Init
  4439  149E                     _LCD_Init:	
  4440                           
  4441                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4445  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4446  149F  1303               	bcf	3,6	;RP1=0, select bank1
  4447  14A0  119F               	bcf	31,3	;volatile
  4448                           
  4449                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4450  14A1  151F               	bsf	31,2	;volatile
  4451                           
  4452                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4453  14A2  109F               	bcf	31,1	;volatile
  4454                           
  4455                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4456  14A3  101F               	bcf	31,0	;volatile
  4457                           
  4458                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4459  14A4  305A               	movlw	90
  4460  14A5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4461  14A6  30C3               	movlw	195
  4462  14A7  00CD               	movwf	??_LCD_Init^(0+128)
  4463  14A8                     u4557:	
  4464  14A8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4465  14A9  2CA8               	goto	u4557
  4466  14AA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4467  14AB  2CA8               	goto	u4557
  4468                           
  4469                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4470  14AC  3030               	movlw	48
  4471  14AD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4472                           
  4473                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4474  14B2  3018               	movlw	24
  4475  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  4476  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  4477  14B5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4478  14B6  30EF               	movlw	239
  4479  14B7  00CD               	movwf	??_LCD_Init^(0+128)
  4480  14B8                     u4567:	
  4481  14B8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4482  14B9  2CB8               	goto	u4567
  4483  14BA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4484  14BB  2CB8               	goto	u4567
  4485                           
  4486                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4487  14BC  3030               	movlw	48
  4488  14BD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4489                           
  4490                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4491  14C2  3099               	movlw	153
  4492  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  4493  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  4494  14C5  00CD               	movwf	??_LCD_Init^(0+128)
  4495  14C6                     u4577:	
  4496  14C6  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4497  14C7  2CC6               	goto	u4577
  4498                           
  4499                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4500  14C8  3030               	movlw	48
  4501  14C9  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4502                           
  4503                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4504  14CE  303D               	movlw	61
  4505  14CF  1683               	bsf	3,5	;RP0=1, select bank1
  4506  14D0  1303               	bcf	3,6	;RP1=0, select bank1
  4507  14D1  00CD               	movwf	??_LCD_Init^(0+128)
  4508  14D2                     u4587:	
  4509  14D2  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4510  14D3  2CD2               	goto	u4587
  4511                           
  4512                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4513  14D4  3038               	movlw	56
  4514  14D5  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4515                           
  4516                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4517  14DA  303D               	movlw	61
  4518  14DB  1683               	bsf	3,5	;RP0=1, select bank1
  4519  14DC  1303               	bcf	3,6	;RP1=0, select bank1
  4520  14DD  00CD               	movwf	??_LCD_Init^(0+128)
  4521  14DE                     u4597:	
  4522  14DE  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4523  14DF  2CDE               	goto	u4597
  4524                           
  4525                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4526  14E0  3001               	movlw	1
  4527  14E1  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4528                           
  4529                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4530  14E6  300C               	movlw	12
  4531  14E7  1683               	bsf	3,5	;RP0=1, select bank1
  4532  14E8  1303               	bcf	3,6	;RP1=0, select bank1
  4533  14E9  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4534  14EA  30F7               	movlw	247
  4535  14EB  00CD               	movwf	??_LCD_Init^(0+128)
  4536  14EC                     u4607:	
  4537  14EC  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4538  14ED  2CEC               	goto	u4607
  4539  14EE  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4540  14EF  2CEC               	goto	u4607
  4541                           
  4542                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4543  14F0  300C               	movlw	12
  4544  14F1  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4545                           
  4546                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4547  14F6  303D               	movlw	61
  4548  14F7  1683               	bsf	3,5	;RP0=1, select bank1
  4549  14F8  1303               	bcf	3,6	;RP1=0, select bank1
  4550  14F9  00CD               	movwf	??_LCD_Init^(0+128)
  4551  14FA                     u4617:	
  4552  14FA  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4553  14FB  2CFA               	goto	u4617
  4554                           
  4555                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4556  14FC  3006               	movlw	6
  4557  14FD  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4558                           
  4559                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4560  1502  303D               	movlw	61
  4561  1503  1683               	bsf	3,5	;RP0=1, select bank1
  4562  1504  1303               	bcf	3,6	;RP1=0, select bank1
  4563  1505  00CD               	movwf	??_LCD_Init^(0+128)
  4564  1506                     u4627:	
  4565  1506  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4566  1507  2D06               	goto	u4627
  4567  1508  0008               	return
  4568  1509                     __end_of_LCD_Init:	
  4569                           
  4570                           	psect	text18
  4571  11A9                     __ptext18:	
  4572 ;; *************** function _LCD_Cursor *****************
  4573 ;; Defined at:
  4574 ;;		line 10 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  Row             1    wreg     unsigned char 
  4577 ;;  Col             1    4[BANK1 ] unsigned char 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  Row             1    6[BANK1 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;		None               void
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4589 ;;      Params:         0       0       1       0       0
  4590 ;;      Locals:         0       0       1       0       0
  4591 ;;      Temps:          0       0       1       0       0
  4592 ;;      Totals:         0       0       3       0       0
  4593 ;;Total ram usage:        3 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    5
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _LCD_Cursor
  4605  11A9                     _LCD_Cursor:	
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4609                           ;LCD_Cursor@Row stored from wreg
  4610  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  4611  11AA  1303               	bcf	3,6	;RP1=0, select bank1
  4612  11AB  00CD               	movwf	LCD_Cursor@Row^(0+128)
  4613                           
  4614                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4615  11AC  1283               	bcf	3,5	;RP0=0, select bank0
  4616  11AD  1303               	bcf	3,6	;RP1=0, select bank0
  4617  11AE  1009               	bcf	9,0	;volatile
  4618                           
  4619                           ;lcd.c: 14: if (Row == 0)
  4620  11AF  1683               	bsf	3,5	;RP0=1, select bank1
  4621  11B0  1303               	bcf	3,6	;RP1=0, select bank1
  4622  11B1  08CD               	movf	LCD_Cursor@Row^(0+128),f
  4623  11B2  1D03               	skipz
  4624  11B3  29B7               	goto	l3014
  4625                           
  4626                           ;lcd.c: 15: {
  4627                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4628  11B4  084B               	movf	LCD_Cursor@Col^(0+128),w
  4629  11B5  3E80               	addlw	128
  4630  11B6  29BB               	goto	L2
  4631  11B7                     l3014:	
  4632                           ;lcd.c: 17: }
  4633                           
  4634                           
  4635                           ;lcd.c: 18: else
  4636                           ;lcd.c: 19: {
  4637                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4638  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  4639  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  4640  11B9  084B               	movf	LCD_Cursor@Col^(0+128),w
  4641  11BA  3EC0               	addlw	192
  4642  11BB                     L2:	
  4643  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  4644  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  4645  11BD  0088               	movwf	8	;volatile
  4646                           
  4647                           ;lcd.c: 21: }
  4648                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4649  11BE  1489               	bsf	9,1	;volatile
  4650                           
  4651                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4652  11BF  303D               	movlw	61
  4653  11C0  1683               	bsf	3,5	;RP0=1, select bank1
  4654  11C1  1303               	bcf	3,6	;RP1=0, select bank1
  4655  11C2  00CC               	movwf	??_LCD_Cursor^(0+128)
  4656  11C3                     u4637:	
  4657  11C3  0BCC               	decfsz	??_LCD_Cursor^(0+128),f
  4658  11C4  29C3               	goto	u4637
  4659                           
  4660                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4661  11C5  1283               	bcf	3,5	;RP0=0, select bank0
  4662  11C6  1303               	bcf	3,6	;RP1=0, select bank0
  4663  11C7  1089               	bcf	9,1	;volatile
  4664  11C8  0008               	return
  4665  11C9                     __end_of_LCD_Cursor:	
  4666                           
  4667                           	psect	text19
  4668  129A                     __ptext19:	
  4669 ;; *************** function _LCD_Clear *****************
  4670 ;; Defined at:
  4671 ;;		line 71 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;		None               void
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0
  4687 ;;      Temps:          0       0       2       0       0
  4688 ;;      Totals:         0       0       2       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		_LCD_WriteCmd
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _LCD_Clear
  4701  129A                     _LCD_Clear:	
  4702                           
  4703                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4704                           
  4705                           ;incstack = 0
  4706                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4707  129A  3001               	movlw	1
  4708  129B  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4709                           
  4710                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4711  12A0  300C               	movlw	12
  4712  12A1  1683               	bsf	3,5	;RP0=1, select bank1
  4713  12A2  1303               	bcf	3,6	;RP1=0, select bank1
  4714  12A3  00CE               	movwf	(??_LCD_Clear^(0+128)+1)
  4715  12A4  30F7               	movlw	247
  4716  12A5  00CD               	movwf	??_LCD_Clear^(0+128)
  4717  12A6                     u4647:	
  4718  12A6  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4719  12A7  2AA6               	goto	u4647
  4720  12A8  0BCE               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4721  12A9  2AA6               	goto	u4647
  4722                           
  4723                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4724  12AA  300C               	movlw	12
  4725  12AB  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4726                           
  4727                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4728  12B0  303D               	movlw	61
  4729  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  4730  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  4731  12B3  00CD               	movwf	??_LCD_Clear^(0+128)
  4732  12B4                     u4657:	
  4733  12B4  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4734  12B5  2AB4               	goto	u4657
  4735                           
  4736                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4737  12B6  3006               	movlw	6
  4738  12B7  160A  118A  2127  160A  118A  	fcall	_LCD_WriteCmd
  4739                           
  4740                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4741  12BC  303D               	movlw	61
  4742  12BD  1683               	bsf	3,5	;RP0=1, select bank1
  4743  12BE  1303               	bcf	3,6	;RP1=0, select bank1
  4744  12BF  00CD               	movwf	??_LCD_Clear^(0+128)
  4745  12C0                     u4667:	
  4746  12C0  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4747  12C1  2AC0               	goto	u4667
  4748  12C2  0008               	return
  4749  12C3                     __end_of_LCD_Clear:	
  4750                           
  4751                           	psect	text20
  4752  1127                     __ptext20:	
  4753 ;; *************** function _LCD_WriteCmd *****************
  4754 ;; Defined at:
  4755 ;;		line 32 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\lcd.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  Byte            1    wreg     unsigned char 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  Byte            1    5[BANK1 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;		None               void
  4762 ;; Registers used:
  4763 ;;		wreg
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       0       0       0       0
  4770 ;;      Locals:         0       0       1       0       0
  4771 ;;      Temps:          0       0       1       0       0
  4772 ;;      Totals:         0       0       2       0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    5
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_LCD_Clear
  4780 ;;		_LCD_Init
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _LCD_WriteCmd
  4786  1127                     _LCD_WriteCmd:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _LCD_WriteCmd: [wreg]
  4790                           ;LCD_WriteCmd@Byte stored from wreg
  4791  1127  1683               	bsf	3,5	;RP0=1, select bank1
  4792  1128  1303               	bcf	3,6	;RP1=0, select bank1
  4793  1129  00CC               	movwf	LCD_WriteCmd@Byte^(0+128)
  4794                           
  4795                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4796  112A  1283               	bcf	3,5	;RP0=0, select bank0
  4797  112B  1303               	bcf	3,6	;RP1=0, select bank0
  4798  112C  1009               	bcf	9,0	;volatile
  4799                           
  4800                           ;lcd.c: 36: PORTD = Byte;
  4801  112D  1683               	bsf	3,5	;RP0=1, select bank1
  4802  112E  1303               	bcf	3,6	;RP1=0, select bank1
  4803  112F  084C               	movf	LCD_WriteCmd@Byte^(0+128),w
  4804  1130  1283               	bcf	3,5	;RP0=0, select bank0
  4805  1131  1303               	bcf	3,6	;RP1=0, select bank0
  4806  1132  0088               	movwf	8	;volatile
  4807                           
  4808                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4809  1133  1489               	bsf	9,1	;volatile
  4810                           
  4811                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4812  1134  303D               	movlw	61
  4813  1135  1683               	bsf	3,5	;RP0=1, select bank1
  4814  1136  1303               	bcf	3,6	;RP1=0, select bank1
  4815  1137  00CB               	movwf	??_LCD_WriteCmd^(0+128)
  4816  1138                     u4677:	
  4817  1138  0BCB               	decfsz	??_LCD_WriteCmd^(0+128),f
  4818  1139  2938               	goto	u4677
  4819                           
  4820                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4821  113A  1283               	bcf	3,5	;RP0=0, select bank0
  4822  113B  1303               	bcf	3,6	;RP1=0, select bank0
  4823  113C  1089               	bcf	9,1	;volatile
  4824  113D  0008               	return
  4825  113E                     __end_of_LCD_WriteCmd:	
  4826                           
  4827                           	psect	text21
  4828  1101                     __ptext21:	
  4829 ;; *************** function _ADC_Init *****************
  4830 ;; Defined at:
  4831 ;;		line 6 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\adc.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;		None               void
  4838 ;; Registers used:
  4839 ;;		None
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4845 ;;      Params:         0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0
  4848 ;;      Totals:         0       0       0       0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    5
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           
  4860                           ;psect for function _ADC_Init
  4861  1101                     _ADC_Init:	
  4862                           
  4863                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4864                           
  4865                           ;incstack = 0
  4866                           ; Regs used in _ADC_Init: []
  4867  1101  1683               	bsf	3,5	;RP0=1, select bank1
  4868  1102  1303               	bcf	3,6	;RP1=0, select bank1
  4869  1103  179F               	bsf	31,7	;volatile
  4870                           
  4871                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4872  1104  159F               	bsf	31,3	;volatile
  4873                           
  4874                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4875  1105  151F               	bsf	31,2	;volatile
  4876                           
  4877                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4878  1106  149F               	bsf	31,1	;volatile
  4879                           
  4880                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4881  1107  101F               	bcf	31,0	;volatile
  4882                           
  4883                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4884  1108  1283               	bcf	3,5	;RP0=0, select bank0
  4885  1109  1303               	bcf	3,6	;RP1=0, select bank0
  4886  110A  179F               	bsf	31,7	;volatile
  4887                           
  4888                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4889  110B  131F               	bcf	31,6	;volatile
  4890                           
  4891                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4892  110C  1683               	bsf	3,5	;RP0=1, select bank1
  4893  110D  1303               	bcf	3,6	;RP1=0, select bank1
  4894  110E  130C               	bcf	12,6	;volatile
  4895                           
  4896                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4897  110F  1283               	bcf	3,5	;RP0=0, select bank0
  4898  1110  1303               	bcf	3,6	;RP1=0, select bank0
  4899  1111  130C               	bcf	12,6	;volatile
  4900  1112  0008               	return
  4901  1113                     __end_of_ADC_Init:	
  4902                           
  4903                           	psect	text22
  4904  0BC2                     __ptext22:	
  4905 ;; *************** function _ISR *****************
  4906 ;; Defined at:
  4907 ;;		line 317 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;		None               void
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0
  4923 ;;      Temps:          0       0       4       0       0
  4924 ;;      Totals:         0       0       4       0       0
  4925 ;;Total ram usage:        4 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    4
  4928 ;; This function calls:
  4929 ;;		_Fuzzy
  4930 ;;		_USART_ReceiveChar
  4931 ;;		___lwtoft
  4932 ;;		i1_PWM_DutyCycle2
  4933 ;;		i1_TIMER0_Set
  4934 ;;		i1_USART_WriteString
  4935 ;;		i1___lwdiv
  4936 ;;		i1___wmul
  4937 ;; This function is called by:
  4938 ;;		Interrupt level 1
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _ISR
  4944  0BC2                     _ISR:	
  4945                           
  4946                           ;main.c: 320: if (PIR1bits.RCIF)
  4947  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0BC4  1E8C               	btfss	12,5	;volatile
  4950  0BC5  2CED               	goto	i1l3280
  4951                           
  4952                           ;main.c: 321: {
  4953                           ;main.c: 322: if (USART_ReceiveChar() == '0')
  4954  0BC6  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  4955  0BCB  3A30               	xorlw	48
  4956  0BCC  1D03               	skipz
  4957  0BCD  2BE7               	goto	i1l3210
  4958                           
  4959                           ;main.c: 323: {
  4960                           ;main.c: 324: USART_WriteString("\n\rdesligado\n\r");
  4961  0BCE  30EA               	movlw	low (STR_1| (0+32768))
  4962  0BCF  00F1               	movwf	i1USART_WriteString@str
  4963  0BD0  3098               	movlw	high (STR_1| (0+32768))
  4964  0BD1  00F2               	movwf	i1USART_WriteString@str+1
  4965  0BD2  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  4966                           
  4967                           ;main.c: 325: pwm = 0;
  4968  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  4969  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  4970  0BD9  01C3               	clrf	_pwm^(0+128)
  4971  0BDA  01C4               	clrf	(_pwm+1)^(0+128)
  4972                           
  4973                           ;main.c: 326: PWM_DutyCycle2(pwm);
  4974  0BDB  0844               	movf	(_pwm+1)^(0+128),w
  4975  0BDC  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4976  0BDD  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4977  0BDE  0843               	movf	_pwm^(0+128),w
  4978  0BDF  01F0               	clrf	i1PWM_DutyCycle2@valor
  4979  0BE0  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4980  0BE1  160A  118A  2155  120A  158A  	fcall	i1_PWM_DutyCycle2
  4981                           
  4982                           ;main.c: 327: return;
  4983  0BE6  2D4E               	goto	i1l190
  4984  0BE7                     i1l3210:	
  4985                           
  4986                           ;main.c: 328: }
  4987                           ;main.c: 330: if (USART_ReceiveChar() == '1')
  4988  0BE7  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  4989  0BEC  3A31               	xorlw	49
  4990  0BED  1D03               	skipz
  4991  0BEE  2BFE               	goto	i1l3216
  4992                           
  4993                           ;main.c: 331: {
  4994                           ;main.c: 332: USART_WriteString("\n\rpwm = 32\n\r");
  4995  0BEF  30F8               	movlw	low (STR_2| (0+32768))
  4996  0BF0  00F1               	movwf	i1USART_WriteString@str
  4997  0BF1  3098               	movlw	high (STR_2| (0+32768))
  4998  0BF2  00F2               	movwf	i1USART_WriteString@str+1
  4999  0BF3  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5000                           
  5001                           ;main.c: 333: pwm = 32;
  5002  0BF8  3020               	movlw	32
  5003  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  5004  0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  5005  0BFB  00C3               	movwf	_pwm^(0+128)
  5006  0BFC  3000               	movlw	0
  5007  0BFD  00C4               	movwf	(_pwm^(0+128)+1)
  5008  0BFE                     i1l3216:	
  5009                           
  5010                           ;main.c: 335: }
  5011                           ;main.c: 337: if (USART_ReceiveChar() == '2')
  5012  0BFE  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5013  0C03  3A32               	xorlw	50
  5014  0C04  1D03               	skipz
  5015  0C05  2C15               	goto	i1l3222
  5016                           
  5017                           ;main.c: 338: {
  5018                           ;main.c: 339: USART_WriteString("\n\rpwm = 64\n\r");
  5019  0C06  3005               	movlw	low (STR_3| (0+32768))
  5020  0C07  00F1               	movwf	i1USART_WriteString@str
  5021  0C08  3099               	movlw	high (STR_3| (0+32768))
  5022  0C09  00F2               	movwf	i1USART_WriteString@str+1
  5023  0C0A  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5024                           
  5025                           ;main.c: 340: pwm = 64;
  5026  0C0F  3040               	movlw	64
  5027  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  5028  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  5029  0C12  00C3               	movwf	_pwm^(0+128)
  5030  0C13  3000               	movlw	0
  5031  0C14  00C4               	movwf	(_pwm^(0+128)+1)
  5032  0C15                     i1l3222:	
  5033                           
  5034                           ;main.c: 342: }
  5035                           ;main.c: 344: if (USART_ReceiveChar() == '3')
  5036  0C15  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5037  0C1A  3A33               	xorlw	51
  5038  0C1B  1D03               	skipz
  5039  0C1C  2C33               	goto	i1l3232
  5040                           
  5041                           ;main.c: 345: {
  5042                           ;main.c: 346: USART_WriteString("\n\rpwm = 128\n\r");
  5043  0C1D  30CE               	movlw	low (STR_4| (0+32768))
  5044  0C1E  00F1               	movwf	i1USART_WriteString@str
  5045  0C1F  3098               	movlw	high (STR_4| (0+32768))
  5046  0C20  00F2               	movwf	i1USART_WriteString@str+1
  5047  0C21  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5048                           
  5049                           ;main.c: 347: pwm = 128;
  5050  0C26  3080               	movlw	128
  5051  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  5052  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  5053  0C29  00C3               	movwf	_pwm^(0+128)
  5054  0C2A  3000               	movlw	0
  5055  0C2B  00C4               	movwf	(_pwm^(0+128)+1)
  5056                           
  5057                           ;main.c: 349: if(PORTBbits.RB0 == 0)
  5058  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0C2E  1806               	btfsc	6,0	;volatile
  5061  0C2F  2C32               	goto	i1l194
  5062                           
  5063                           ;main.c: 350: {
  5064                           ;main.c: 351: PORTBbits.RB0 = 1;
  5065  0C30  1406               	bsf	6,0	;volatile
  5066                           
  5067                           ;main.c: 352: }else{
  5068  0C31  2C33               	goto	i1l3232
  5069  0C32                     i1l194:	
  5070                           
  5071                           ;main.c: 353: PORTBbits.RB0 = 0;
  5072  0C32  1006               	bcf	6,0	;volatile
  5073  0C33                     i1l3232:	
  5074                           
  5075                           ;main.c: 354: }
  5076                           ;main.c: 355: }
  5077                           ;main.c: 357: if (USART_ReceiveChar() == '4')
  5078  0C33  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5079  0C38  3A34               	xorlw	52
  5080  0C39  1D03               	skipz
  5081  0C3A  2C5D               	goto	i1l3244
  5082                           
  5083                           ;main.c: 358: {
  5084                           ;main.c: 359: USART_WriteString("\n\rpwm = 256\n\r");
  5085  0C3B  30B2               	movlw	low (STR_5| (0+32768))
  5086  0C3C  00F1               	movwf	i1USART_WriteString@str
  5087  0C3D  3098               	movlw	high (STR_5| (0+32768))
  5088  0C3E  00F2               	movwf	i1USART_WriteString@str+1
  5089  0C3F  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5090                           
  5091                           ;main.c: 360: pwm = 256;
  5092  0C44  3000               	movlw	0
  5093  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  5094  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  5095  0C47  00C3               	movwf	_pwm^(0+128)
  5096  0C48  3001               	movlw	1
  5097  0C49  00C4               	movwf	(_pwm^(0+128)+1)
  5098                           
  5099                           ;main.c: 361: PWM_DutyCycle2(pwm);
  5100  0C4A  0844               	movf	(_pwm+1)^(0+128),w
  5101  0C4B  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  5102  0C4C  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  5103  0C4D  0843               	movf	_pwm^(0+128),w
  5104  0C4E  01F0               	clrf	i1PWM_DutyCycle2@valor
  5105  0C4F  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  5106  0C50  160A  118A  2155  120A  158A  	fcall	i1_PWM_DutyCycle2
  5107                           
  5108                           ;main.c: 362: if(PORTBbits.RB1 == 0)
  5109  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0C57  1886               	btfsc	6,1	;volatile
  5112  0C58  2C5B               	goto	i1l197
  5113                           
  5114                           ;main.c: 363: {
  5115                           ;main.c: 364: PORTBbits.RB1 = 1;
  5116  0C59  1486               	bsf	6,1	;volatile
  5117                           
  5118                           ;main.c: 365: }else{
  5119  0C5A  2D4E               	goto	i1l190
  5120  0C5B                     i1l197:	
  5121                           
  5122                           ;main.c: 366: PORTBbits.RB1 = 0;
  5123  0C5B  1086               	bcf	6,1	;volatile
  5124                           
  5125                           ;main.c: 367: }
  5126                           ;main.c: 368: return;
  5127  0C5C  2D4E               	goto	i1l190
  5128  0C5D                     i1l3244:	
  5129                           
  5130                           ;main.c: 369: }
  5131                           ;main.c: 371: if (USART_ReceiveChar() == '5')
  5132  0C5D  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5133  0C62  3A35               	xorlw	53
  5134  0C63  1D03               	skipz
  5135  0C64  2C74               	goto	i1l3250
  5136                           
  5137                           ;main.c: 372: {
  5138                           ;main.c: 373: USART_WriteString("\n\rpwm = 512\n\r");
  5139  0C65  30A4               	movlw	low (STR_6| (0+32768))
  5140  0C66  00F1               	movwf	i1USART_WriteString@str
  5141  0C67  3098               	movlw	high (STR_6| (0+32768))
  5142  0C68  00F2               	movwf	i1USART_WriteString@str+1
  5143  0C69  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5144                           
  5145                           ;main.c: 374: pwm = 512;
  5146  0C6E  3000               	movlw	0
  5147  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  5148  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  5149  0C71  00C3               	movwf	_pwm^(0+128)
  5150  0C72  3002               	movlw	2
  5151  0C73  00C4               	movwf	(_pwm^(0+128)+1)
  5152  0C74                     i1l3250:	
  5153                           
  5154                           ;main.c: 376: }
  5155                           ;main.c: 378: if (USART_ReceiveChar() == '6')
  5156  0C74  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5157  0C79  3A36               	xorlw	54
  5158  0C7A  1D03               	skipz
  5159  0C7B  2C8B               	goto	i1l3256
  5160                           
  5161                           ;main.c: 379: {
  5162                           ;main.c: 380: USART_WriteString("\n\rpwm = 768\n\r");
  5163  0C7C  30DC               	movlw	low (STR_7| (0+32768))
  5164  0C7D  00F1               	movwf	i1USART_WriteString@str
  5165  0C7E  3098               	movlw	high (STR_7| (0+32768))
  5166  0C7F  00F2               	movwf	i1USART_WriteString@str+1
  5167  0C80  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5168                           
  5169                           ;main.c: 381: pwm = 768;
  5170  0C85  3000               	movlw	0
  5171  0C86  1683               	bsf	3,5	;RP0=1, select bank1
  5172  0C87  1303               	bcf	3,6	;RP1=0, select bank1
  5173  0C88  00C3               	movwf	_pwm^(0+128)
  5174  0C89  3003               	movlw	3
  5175  0C8A  00C4               	movwf	(_pwm^(0+128)+1)
  5176  0C8B                     i1l3256:	
  5177                           
  5178                           ;main.c: 383: }
  5179                           ;main.c: 385: if (USART_ReceiveChar() == '7')
  5180  0C8B  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5181  0C90  3A37               	xorlw	55
  5182  0C91  1D03               	skipz
  5183  0C92  2CA2               	goto	i1l3262
  5184                           
  5185                           ;main.c: 386: {
  5186                           ;main.c: 387: USART_WriteString("\n\rpwm = 896\n\r");
  5187  0C93  30C0               	movlw	low (STR_8| (0+32768))
  5188  0C94  00F1               	movwf	i1USART_WriteString@str
  5189  0C95  3098               	movlw	high (STR_8| (0+32768))
  5190  0C96  00F2               	movwf	i1USART_WriteString@str+1
  5191  0C97  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5192                           
  5193                           ;main.c: 388: pwm = 896;
  5194  0C9C  3080               	movlw	128
  5195  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  5196  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  5197  0C9F  00C3               	movwf	_pwm^(0+128)
  5198  0CA0  3003               	movlw	3
  5199  0CA1  00C4               	movwf	(_pwm^(0+128)+1)
  5200  0CA2                     i1l3262:	
  5201                           
  5202                           ;main.c: 390: }
  5203                           ;main.c: 392: if (USART_ReceiveChar() == '8')
  5204  0CA2  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5205  0CA7  3A38               	xorlw	56
  5206  0CA8  1D03               	skipz
  5207  0CA9  2CB9               	goto	i1l3268
  5208                           
  5209                           ;main.c: 393: {
  5210                           ;main.c: 394: USART_WriteString("\n\rpwm = 1000\n\r");
  5211  0CAA  3086               	movlw	low (STR_9| (0+32768))
  5212  0CAB  00F1               	movwf	i1USART_WriteString@str
  5213  0CAC  3098               	movlw	high (STR_9| (0+32768))
  5214  0CAD  00F2               	movwf	i1USART_WriteString@str+1
  5215  0CAE  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5216                           
  5217                           ;main.c: 395: pwm = 1000;
  5218  0CB3  30E8               	movlw	232
  5219  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  5220  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  5221  0CB6  00C3               	movwf	_pwm^(0+128)
  5222  0CB7  3003               	movlw	3
  5223  0CB8  00C4               	movwf	(_pwm^(0+128)+1)
  5224  0CB9                     i1l3268:	
  5225                           
  5226                           ;main.c: 397: }
  5227                           ;main.c: 399: if (USART_ReceiveChar() == '9')
  5228  0CB9  160A  118A  2170  120A  158A  	fcall	_USART_ReceiveChar
  5229  0CBE  3A39               	xorlw	57
  5230  0CBF  1D03               	skipz
  5231  0CC0  2CD0               	goto	i1l3274
  5232                           
  5233                           ;main.c: 400: {
  5234                           ;main.c: 401: USART_WriteString("\n\rpwm = 1023\n\r");
  5235  0CC1  3095               	movlw	low (STR_10| (0+32768))
  5236  0CC2  00F1               	movwf	i1USART_WriteString@str
  5237  0CC3  3098               	movlw	high (STR_10| (0+32768))
  5238  0CC4  00F2               	movwf	i1USART_WriteString@str+1
  5239  0CC5  160A  118A  220B  120A  158A  	fcall	i1_USART_WriteString
  5240                           
  5241                           ;main.c: 402: pwm = 1023;
  5242  0CCA  30FF               	movlw	255
  5243  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  5244  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  5245  0CCD  00C3               	movwf	_pwm^(0+128)
  5246  0CCE  3003               	movlw	3
  5247  0CCF  00C4               	movwf	(_pwm^(0+128)+1)
  5248  0CD0                     i1l3274:	
  5249                           
  5250                           ;main.c: 404: }
  5251                           ;main.c: 408: Fuzzy();
  5252  0CD0  120A  118A  2061  120A  158A  	fcall	_Fuzzy
  5253                           
  5254                           ;main.c: 409: tf = pwm;
  5255  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  5256  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  5257  0CD7  0844               	movf	(_pwm+1)^(0+128),w
  5258  0CD8  01F9               	clrf	___lwtoft@c+1
  5259  0CD9  07F9               	addwf	___lwtoft@c+1,f
  5260  0CDA  0843               	movf	_pwm^(0+128),w
  5261  0CDB  01F8               	clrf	___lwtoft@c
  5262  0CDC  07F8               	addwf	___lwtoft@c,f
  5263  0CDD  160A  118A  2113  120A  158A  	fcall	___lwtoft
  5264  0CE2  0878               	movf	?___lwtoft,w
  5265  0CE3  1683               	bsf	3,5	;RP0=1, select bank3
  5266  0CE4  1703               	bsf	3,6	;RP1=1, select bank3
  5267  0CE5  00CF               	movwf	_tf^(0+384)
  5268  0CE6  0879               	movf	?___lwtoft+1,w
  5269  0CE7  00D0               	movwf	(_tf+1)^(0+384)
  5270  0CE8  087A               	movf	?___lwtoft+2,w
  5271  0CE9  00D1               	movwf	(_tf+2)^(0+384)
  5272                           
  5273                           ;main.c: 411: PIR1bits.RCIF = 0;
  5274  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0CEC  128C               	bcf	12,5	;volatile
  5277  0CED                     i1l3280:	
  5278                           
  5279                           ;main.c: 412: }
  5280                           ;main.c: 415: if (PIR1bits.ADIF)
  5281  0CED  1B0C               	btfsc	12,6	;volatile
  5282                           
  5283                           ;main.c: 416: {
  5284                           ;main.c: 420: PIR1bits.ADIF = 0;
  5285  0CEE  130C               	bcf	12,6	;volatile
  5286                           
  5287                           ;main.c: 421: }
  5288                           ;main.c: 425: if (INTCONbits.T0IF)
  5289  0CEF  1D0B               	btfss	11,2	;volatile
  5290  0CF0  2D4A               	goto	i1l3306
  5291                           
  5292                           ;main.c: 426: {
  5293                           ;main.c: 428: TIMER0_Set(238);
  5294  0CF1  30EE               	movlw	238
  5295  0CF2  160A  118A  20B5  120A  158A  	fcall	i1_TIMER0_Set
  5296                           
  5297                           ;main.c: 431: if (contagens_tm0 < 499)
  5298  0CF7  3001               	movlw	1
  5299  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  5300  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  5301  0CFA  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  5302  0CFB  30F3               	movlw	243
  5303  0CFC  1903               	skipnz
  5304  0CFD  023D               	subwf	_contagens_tm0^(0+128),w
  5305  0CFE  1803               	skipnc
  5306  0CFF  2D0A               	goto	i1l3292
  5307                           
  5308                           ;main.c: 432: {
  5309                           ;main.c: 434: contagens_tm0++;
  5310  0D00  3001               	movlw	1
  5311  0D01  07BD               	addwf	_contagens_tm0^(0+128),f
  5312  0D02  1803               	skipnc
  5313  0D03  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  5314  0D04  3000               	movlw	0
  5315  0D05  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  5316                           
  5317                           ;main.c: 437: PORTBbits.RB6 = 1;
  5318  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0D08  1706               	bsf	6,6	;volatile
  5321                           
  5322                           ;main.c: 438: }
  5323  0D09  2D49               	goto	i1l3304
  5324  0D0A                     i1l3292:	
  5325                           
  5326                           ;main.c: 439: else
  5327                           ;main.c: 440: {
  5328                           ;main.c: 442: contagens_tm0 = 0;
  5329  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  5330  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  5331  0D0C  01BD               	clrf	_contagens_tm0^(0+128)
  5332  0D0D  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  5333                           
  5334                           ;main.c: 445: pulsos = (TMR1H << 8) + TMR1L;
  5335  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0D10  080F               	movf	15,w	;volatile
  5338  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  5339  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  5340  0D13  01C2               	clrf	(_pulsos+1)^(0+128)
  5341  0D14  07C2               	addwf	(_pulsos+1)^(0+128),f
  5342  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  5343  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  5344  0D17  080E               	movf	14,w	;volatile
  5345  0D18  1683               	bsf	3,5	;RP0=1, select bank1
  5346  0D19  1303               	bcf	3,6	;RP1=0, select bank1
  5347  0D1A  01C1               	clrf	_pulsos^(0+128)
  5348  0D1B  07C1               	addwf	_pulsos^(0+128),f
  5349                           
  5350                           ;main.c: 446: rpm = ((pulsos / pas_cooler) * 120);
  5351  0D1C  0866               	movf	(_pas_cooler+1)^(0+128),w
  5352  0D1D  01F1               	clrf	i1___lwdiv@divisor+1
  5353  0D1E  07F1               	addwf	i1___lwdiv@divisor+1,f
  5354  0D1F  0865               	movf	_pas_cooler^(0+128),w
  5355  0D20  01F0               	clrf	i1___lwdiv@divisor
  5356  0D21  07F0               	addwf	i1___lwdiv@divisor,f
  5357  0D22  0842               	movf	(_pulsos+1)^(0+128),w
  5358  0D23  01F3               	clrf	i1___lwdiv@dividend+1
  5359  0D24  07F3               	addwf	i1___lwdiv@dividend+1,f
  5360  0D25  0841               	movf	_pulsos^(0+128),w
  5361  0D26  01F2               	clrf	i1___lwdiv@dividend
  5362  0D27  07F2               	addwf	i1___lwdiv@dividend,f
  5363  0D28  160A  118A  235B  120A  158A  	fcall	i1___lwdiv
  5364  0D2D  0871               	movf	?i1___lwdiv+1,w
  5365  0D2E  01F9               	clrf	i1___wmul@multiplier+1
  5366  0D2F  07F9               	addwf	i1___wmul@multiplier+1,f
  5367  0D30  0870               	movf	?i1___lwdiv,w
  5368  0D31  01F8               	clrf	i1___wmul@multiplier
  5369  0D32  07F8               	addwf	i1___wmul@multiplier,f
  5370  0D33  3078               	movlw	120
  5371  0D34  00FA               	movwf	i1___wmul@multiplicand
  5372  0D35  3000               	movlw	0
  5373  0D36  00FB               	movwf	i1___wmul@multiplicand+1
  5374  0D37  160A  118A  222E  120A  158A  	fcall	i1___wmul
  5375  0D3C  0879               	movf	?i1___wmul+1,w
  5376  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  5377  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  5378  0D3F  01C6               	clrf	(_rpm+1)^(0+128)
  5379  0D40  07C6               	addwf	(_rpm+1)^(0+128),f
  5380  0D41  0878               	movf	?i1___wmul,w
  5381  0D42  01C5               	clrf	_rpm^(0+128)
  5382  0D43  07C5               	addwf	_rpm^(0+128),f
  5383                           
  5384                           ;main.c: 449: TMR1L = 0x00;
  5385  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5386  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5387  0D46  018E               	clrf	14	;volatile
  5388                           
  5389                           ;main.c: 450: TMR1H = 0x00;
  5390  0D47  018F               	clrf	15	;volatile
  5391                           
  5392                           ;main.c: 453: PORTBbits.RB6 = 0;
  5393  0D48  1306               	bcf	6,6	;volatile
  5394  0D49                     i1l3304:	
  5395                           
  5396                           ;main.c: 454: }
  5397                           ;main.c: 457: INTCONbits.T0IF = 0;
  5398  0D49  110B               	bcf	11,2	;volatile
  5399  0D4A                     i1l3306:	
  5400                           
  5401                           ;main.c: 458: }
  5402                           ;main.c: 461: if (PIR1bits.TMR1IF)
  5403  0D4A  180C               	btfsc	12,0	;volatile
  5404                           
  5405                           ;main.c: 462: {
  5406                           ;main.c: 466: PIR1bits.TMR1IF = 0;
  5407  0D4B  100C               	bcf	12,0	;volatile
  5408                           
  5409                           ;main.c: 467: }
  5410                           ;main.c: 470: if (PIR1bits.SSPIF)
  5411  0D4C  198C               	btfsc	12,3	;volatile
  5412                           
  5413                           ;main.c: 471: {
  5414                           ;main.c: 475: PIR1bits.SSPIF = 0;
  5415  0D4D  118C               	bcf	12,3	;volatile
  5416  0D4E                     i1l190:	
  5417  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  5418  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  5419  0D50  084A               	movf	(??_ISR+3)^(0+128),w
  5420  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0D53  00FF               	movwf	127
  5423  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  5424  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  5425  0D56  0849               	movf	(??_ISR+2)^(0+128),w
  5426  0D57  008A               	movwf	10
  5427  0D58  0848               	movf	(??_ISR+1)^(0+128),w
  5428  0D59  0084               	movwf	4
  5429  0D5A  0E47               	swapf	??_ISR^(0+128),w
  5430  0D5B  0083               	movwf	3
  5431  0D5C  0EFE               	swapf	126,f
  5432  0D5D  0E7E               	swapf	126,w
  5433  0D5E  0009               	retfie
  5434  0D5F                     __end_of_ISR:	
  5435                           
  5436                           	psect	intentry
  5437  0004                     __pintentry:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5440                           
  5441  0004                     interrupt_function:	
  5442  007E                     saved_w	set	btemp
  5443  0004  00FE               	movwf	btemp
  5444  0005  0E03               	swapf	3,w
  5445  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5446  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5447  0008  00C7               	movwf	??_ISR^(0+128)
  5448  0009  0804               	movf	4,w
  5449  000A  00C8               	movwf	(??_ISR+1)^(0+128)
  5450  000B  080A               	movf	10,w
  5451  000C  00C9               	movwf	(??_ISR+2)^(0+128)
  5452  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5453  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5454  000F  087F               	movf	btemp+1,w
  5455  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5456  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5457  0012  00CA               	movwf	(??_ISR+3)^(0+128)
  5458  0013  120A  158A  2BC2   	ljmp	_ISR
  5459                           
  5460                           	psect	text23
  5461  122E                     __ptext23:	
  5462 ;; *************** function i1___wmul *****************
  5463 ;; Defined at:
  5464 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  multiplier      2    8[COMMON] unsigned int 
  5467 ;;  multiplicand    2   10[COMMON] unsigned int 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  __wmul          2   12[COMMON] unsigned int 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2    8[COMMON] unsigned int 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5479 ;;      Params:         4       0       0       0       0
  5480 ;;      Locals:         2       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0
  5482 ;;      Totals:         6       0       0       0       0
  5483 ;;Total ram usage:        6 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_ISR
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function i1___wmul
  5494  122E                     i1___wmul:	
  5495                           
  5496                           ;incstack = 0
  5497                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5498  122E  01FC               	clrf	i1___wmul@product
  5499  122F  01FD               	clrf	i1___wmul@product+1
  5500  1230                     i1l3156:	
  5501  1230  1C78               	btfss	i1___wmul@multiplier,0
  5502  1231  2A38               	goto	i1l608
  5503  1232  087A               	movf	i1___wmul@multiplicand,w
  5504  1233  07FC               	addwf	i1___wmul@product,f
  5505  1234  1803               	skipnc
  5506  1235  0AFD               	incf	i1___wmul@product+1,f
  5507  1236  087B               	movf	i1___wmul@multiplicand+1,w
  5508  1237  07FD               	addwf	i1___wmul@product+1,f
  5509  1238                     i1l608:	
  5510  1238  3001               	movlw	1
  5511  1239                     u386_25:	
  5512  1239  1003               	clrc
  5513  123A  0DFA               	rlf	i1___wmul@multiplicand,f
  5514  123B  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5515  123C  3EFF               	addlw	-1
  5516  123D  1D03               	skipz
  5517  123E  2A39               	goto	u386_25
  5518  123F  3001               	movlw	1
  5519  1240                     u387_25:	
  5520  1240  1003               	clrc
  5521  1241  0CF9               	rrf	i1___wmul@multiplier+1,f
  5522  1242  0CF8               	rrf	i1___wmul@multiplier,f
  5523  1243  3EFF               	addlw	-1
  5524  1244  1D03               	skipz
  5525  1245  2A40               	goto	u387_25
  5526  1246  0879               	movf	i1___wmul@multiplier+1,w
  5527  1247  0478               	iorwf	i1___wmul@multiplier,w
  5528  1248  1D03               	skipz
  5529  1249  2A30               	goto	i1l3156
  5530  124A  087D               	movf	i1___wmul@product+1,w
  5531  124B  01F9               	clrf	?i1___wmul+1
  5532  124C  07F9               	addwf	?i1___wmul+1,f
  5533  124D  087C               	movf	i1___wmul@product,w
  5534  124E  01F8               	clrf	?i1___wmul
  5535  124F  07F8               	addwf	?i1___wmul,f
  5536  1250  0008               	return
  5537  1251                     __end_ofi1___wmul:	
  5538                           
  5539                           	psect	text24
  5540  135B                     __ptext24:	
  5541 ;; *************** function i1___lwdiv *****************
  5542 ;; Defined at:
  5543 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  divisor         2    0[COMMON] unsigned int 
  5546 ;;  dividend        2    2[COMMON] unsigned int 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5549 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  2    0[COMMON] unsigned int 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5559 ;;      Params:         4       0       0       0       0
  5560 ;;      Locals:         3       0       0       0       0
  5561 ;;      Temps:          1       0       0       0       0
  5562 ;;      Totals:         8       0       0       0       0
  5563 ;;Total ram usage:        8 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_ISR
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function i1___lwdiv
  5574  135B                     i1___lwdiv:	
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5578  135B  01F5               	clrf	i1___lwdiv@quotient
  5579  135C  01F6               	clrf	i1___lwdiv@quotient+1
  5580  135D  0871               	movf	i1___lwdiv@divisor+1,w
  5581  135E  0470               	iorwf	i1___lwdiv@divisor,w
  5582  135F  1903               	skipnz
  5583  1360  2B92               	goto	i1l3188
  5584  1361  01F7               	clrf	i1___lwdiv@counter
  5585  1362  0AF7               	incf	i1___lwdiv@counter,f
  5586  1363                     i1l3176:	
  5587  1363  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5588  1364  2B71               	goto	i1l3178
  5589  1365  3001               	movlw	1
  5590  1366                     u390_25:	
  5591  1366  1003               	clrc
  5592  1367  0DF0               	rlf	i1___lwdiv@divisor,f
  5593  1368  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5594  1369  3EFF               	addlw	-1
  5595  136A  1D03               	skipz
  5596  136B  2B66               	goto	u390_25
  5597  136C  3001               	movlw	1
  5598  136D  00F4               	movwf	??i1___lwdiv
  5599  136E  0874               	movf	??i1___lwdiv,w
  5600  136F  07F7               	addwf	i1___lwdiv@counter,f
  5601  1370  2B63               	goto	i1l3176
  5602  1371                     i1l3178:	
  5603  1371  3001               	movlw	1
  5604  1372                     u392_25:	
  5605  1372  1003               	clrc
  5606  1373  0DF5               	rlf	i1___lwdiv@quotient,f
  5607  1374  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5608  1375  3EFF               	addlw	-1
  5609  1376  1D03               	skipz
  5610  1377  2B72               	goto	u392_25
  5611  1378  0871               	movf	i1___lwdiv@divisor+1,w
  5612  1379  0273               	subwf	i1___lwdiv@dividend+1,w
  5613  137A  1D03               	skipz
  5614  137B  2B7E               	goto	u393_25
  5615  137C  0870               	movf	i1___lwdiv@divisor,w
  5616  137D  0272               	subwf	i1___lwdiv@dividend,w
  5617  137E                     u393_25:	
  5618  137E  1C03               	skipc
  5619  137F  2B87               	goto	i1l3184
  5620  1380  0870               	movf	i1___lwdiv@divisor,w
  5621  1381  02F2               	subwf	i1___lwdiv@dividend,f
  5622  1382  0871               	movf	i1___lwdiv@divisor+1,w
  5623  1383  1C03               	skipc
  5624  1384  03F3               	decf	i1___lwdiv@dividend+1,f
  5625  1385  02F3               	subwf	i1___lwdiv@dividend+1,f
  5626  1386  1475               	bsf	i1___lwdiv@quotient,0
  5627  1387                     i1l3184:	
  5628  1387  3001               	movlw	1
  5629  1388                     u394_25:	
  5630  1388  1003               	clrc
  5631  1389  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5632  138A  0CF0               	rrf	i1___lwdiv@divisor,f
  5633  138B  3EFF               	addlw	-1
  5634  138C  1D03               	skipz
  5635  138D  2B88               	goto	u394_25
  5636  138E  3001               	movlw	1
  5637  138F  02F7               	subwf	i1___lwdiv@counter,f
  5638  1390  1D03               	btfss	3,2
  5639  1391  2B71               	goto	i1l3178
  5640  1392                     i1l3188:	
  5641  1392  0876               	movf	i1___lwdiv@quotient+1,w
  5642  1393  01F1               	clrf	?i1___lwdiv+1
  5643  1394  07F1               	addwf	?i1___lwdiv+1,f
  5644  1395  0875               	movf	i1___lwdiv@quotient,w
  5645  1396  01F0               	clrf	?i1___lwdiv
  5646  1397  07F0               	addwf	?i1___lwdiv,f
  5647  1398  0008               	return
  5648  1399                     __end_ofi1___lwdiv:	
  5649                           
  5650                           	psect	text25
  5651  10B5                     __ptext25:	
  5652 ;; *************** function i1_TIMER0_Set *****************
  5653 ;; Defined at:
  5654 ;;		line 20 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\timers.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  contagens       1    wreg     unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  contagens       1    0[COMMON] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;		None               void
  5661 ;; Registers used:
  5662 ;;		wreg
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5668 ;;      Params:         0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0
  5671 ;;      Totals:         1       0       0       0       0
  5672 ;;Total ram usage:        1 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_ISR
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           
  5682                           ;psect for function i1_TIMER0_Set
  5683  10B5                     i1_TIMER0_Set:	
  5684                           
  5685                           ;incstack = 0
  5686                           ; Regs used in i1_TIMER0_Set: [wreg]
  5687                           ;i1TIMER0_Set@contagens stored from wreg
  5688  10B5  00F0               	movwf	i1TIMER0_Set@contagens
  5689                           
  5690                           ;timers.c: 22: TMR0 = contagens;
  5691  10B6  0870               	movf	i1TIMER0_Set@contagens,w
  5692  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  5693  10B8  1303               	bcf	3,6	;RP1=0, select bank0
  5694  10B9  0081               	movwf	1	;volatile
  5695  10BA  0008               	return
  5696  10BB                     __end_ofi1_TIMER0_Set:	
  5697                           
  5698                           	psect	text26
  5699  1170                     __ptext26:	
  5700 ;; *************** function _USART_ReceiveChar *****************
  5701 ;; Defined at:
  5702 ;;		line 63 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;		None
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  byte            1    4[COMMON] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      unsigned char 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5716 ;;      Params:         0       0       0       0       0
  5717 ;;      Locals:         1       0       0       0       0
  5718 ;;      Temps:          1       0       0       0       0
  5719 ;;      Totals:         2       0       0       0       0
  5720 ;;Total ram usage:        2 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    2
  5723 ;; This function calls:
  5724 ;;		i1_USART_WriteString
  5725 ;; This function is called by:
  5726 ;;		_ISR
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _USART_ReceiveChar
  5732  1170                     _USART_ReceiveChar:	
  5733                           
  5734                           ;usart.c: 65: unsigned char byte;
  5735                           ;usart.c: 67: if (!OERR)
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5739  1170  1283               	bcf	3,5	;RP0=0, select bank0
  5740  1171  1303               	bcf	3,6	;RP1=0, select bank0
  5741  1172  1898               	btfsc	24,1	;volatile
  5742  1173  2979               	goto	i1l2888
  5743                           
  5744                           ;usart.c: 68: {
  5745                           ;usart.c: 69: byte = RCREG;
  5746  1174  081A               	movf	26,w	;volatile
  5747  1175  00F3               	movwf	??_USART_ReceiveChar
  5748  1176  0873               	movf	??_USART_ReceiveChar,w
  5749  1177  00F4               	movwf	USART_ReceiveChar@byte
  5750  1178  2988               	goto	i1l2896
  5751  1179                     i1l2888:	
  5752                           ;usart.c: 71: }
  5753                           
  5754                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5755                           
  5756                           
  5757                           ;usart.c: 72: else
  5758                           ;usart.c: 73: {
  5759                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5760  1179  301C               	movlw	low (STR_19| (0+32768))
  5761  117A  00F1               	movwf	i1USART_WriteString@str
  5762  117B  3098               	movlw	high (STR_19| (0+32768))
  5763  117C  00F2               	movwf	i1USART_WriteString@str+1
  5764  117D  160A  118A  220B   	fcall	i1_USART_WriteString
  5765                           
  5766                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5767  1180  1283               	bcf	3,5	;RP0=0, select bank0
  5768  1181  1303               	bcf	3,6	;RP1=0, select bank0
  5769  1182  1218               	bcf	24,4	;volatile
  5770                           
  5771                           ;usart.c: 77: byte = RCREG;
  5772  1183  081A               	movf	26,w	;volatile
  5773  1184  00F3               	movwf	??_USART_ReceiveChar
  5774  1185  0873               	movf	??_USART_ReceiveChar,w
  5775  1186  00F4               	movwf	USART_ReceiveChar@byte
  5776                           
  5777                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5778  1187  1618               	bsf	24,4	;volatile
  5779  1188                     i1l2896:	
  5780                           
  5781                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5782  1188  128C               	bcf	12,5	;volatile
  5783                           
  5784                           ;usart.c: 80: }
  5785                           ;usart.c: 82: return(byte);
  5786  1189  0874               	movf	USART_ReceiveChar@byte,w
  5787  118A  0008               	return
  5788  118B                     __end_of_USART_ReceiveChar:	
  5789                           
  5790                           	psect	text27
  5791  120B                     __ptext27:	
  5792 ;; *************** function i1_USART_WriteString *****************
  5793 ;; Defined at:
  5794 ;;		line 52 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  str             2    1[COMMON] PTR const unsigned char 
  5797 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5798 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5799 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5800 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;		None               void
  5805 ;; Registers used:
  5806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         2       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0
  5815 ;;      Totals:         2       0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		i1_USART_WriteChar
  5821 ;; This function is called by:
  5822 ;;		_ISR
  5823 ;;		_USART_ReceiveChar
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function i1_USART_WriteString
  5829  120B                     i1_USART_WriteString:	
  5830  120B                     i1l2738:	
  5831                           ;usart.c: 54: while(*str != '\0')
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5835                           
  5836  120B  0872               	movf	i1USART_WriteString@str+1,w
  5837  120C  1283               	bcf	3,5	;RP0=0, select bank0
  5838  120D  1303               	bcf	3,6	;RP1=0, select bank0
  5839  120E  00FF               	movwf	127
  5840  120F  0871               	movf	i1USART_WriteString@str,w
  5841  1210  0084               	movwf	4
  5842  1211  160A  158A  2000  160A  118A  	fcall	stringtab
  5843  1216  3800               	iorlw	0
  5844  1217  1903               	btfsc	3,2
  5845  1218  0008               	return
  5846                           
  5847                           ;usart.c: 55: {
  5848                           ;usart.c: 56: USART_WriteChar(*str);
  5849  1219  0872               	movf	i1USART_WriteString@str+1,w
  5850  121A  1283               	bcf	3,5	;RP0=0, select bank0
  5851  121B  1303               	bcf	3,6	;RP1=0, select bank0
  5852  121C  00FF               	movwf	127
  5853  121D  0871               	movf	i1USART_WriteString@str,w
  5854  121E  0084               	movwf	4
  5855  121F  160A  158A  2000  160A  118A  	fcall	stringtab
  5856  1224  160A  118A  20C9  160A  118A  	fcall	i1_USART_WriteChar
  5857                           
  5858                           ;usart.c: 57: str++;
  5859  1229  3001               	movlw	1
  5860  122A  07F1               	addwf	i1USART_WriteString@str,f
  5861  122B  1803               	skipnc
  5862  122C  0AF2               	incf	i1USART_WriteString@str+1,f
  5863  122D  2A0B               	goto	i1l2738
  5864  122E                     __end_ofi1_USART_WriteString:	
  5865                           
  5866                           	psect	text28
  5867  10C9                     __ptext28:	
  5868 ;; *************** function i1_USART_WriteChar *****************
  5869 ;; Defined at:
  5870 ;;		line 44 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\usart.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  byte            1    wreg     unsigned char 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;  byte            1    0[COMMON] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;		None               void
  5877 ;; Registers used:
  5878 ;;		wreg
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       0       0       0       0
  5885 ;;      Locals:         1       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0
  5887 ;;      Totals:         1       0       0       0       0
  5888 ;;Total ram usage:        1 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		i1_USART_WriteString
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function i1_USART_WriteChar
  5899  10C9                     i1_USART_WriteChar:	
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in i1_USART_WriteChar: [wreg]
  5903                           ;i1USART_WriteChar@byte stored from wreg
  5904  10C9  00F0               	movwf	i1USART_WriteChar@byte
  5905  10CA                     i1l237:	
  5906                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5907                           
  5908  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  5909  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  5910  10CC  1E0C               	btfss	12,4	;volatile
  5911  10CD  28CA               	goto	i1l237
  5912                           
  5913                           ;usart.c: 47: TXREG = byte;
  5914  10CE  0870               	movf	i1USART_WriteChar@byte,w
  5915  10CF  0099               	movwf	25	;volatile
  5916  10D0  0008               	return
  5917  10D1                     __end_ofi1_USART_WriteChar:	
  5918                           
  5919                           	psect	text29
  5920  0061                     __ptext29:	
  5921 ;; *************** function _Fuzzy *****************
  5922 ;; Defined at:
  5923 ;;		line 141 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  a               2   61[BANK0 ] int 
  5928 ;;  a               2   59[BANK0 ] int 
  5929 ;;  a               2   57[BANK0 ] int 
  5930 ;;  a               2   65[BANK0 ] int 
  5931 ;;  a               2   63[BANK0 ] int 
  5932 ;;  aumenta         3   76[BANK0 ] float 
  5933 ;;  reduz           3   73[BANK0 ] float 
  5934 ;;  mantem          3   70[BANK0 ] float 
  5935 ;;  tip             3   67[BANK0 ] float 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;		None               void
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5945 ;;      Params:         0       0       0       0       0
  5946 ;;      Locals:         0      22       0       0       0
  5947 ;;      Temps:          0       0       0       0       0
  5948 ;;      Totals:         0      22       0       0       0
  5949 ;;Total ram usage:       22 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    3
  5952 ;; This function calls:
  5953 ;;		___ftadd
  5954 ;;		___ftdiv
  5955 ;;		___ftge
  5956 ;;		___ftmul
  5957 ;;		___ftneg
  5958 ;;		___fttol
  5959 ;;		___lwtoft
  5960 ;;		_max_val
  5961 ;;		_trapmf
  5962 ;;		_trimf
  5963 ;;		i1_PWM_DutyCycle2
  5964 ;; This function is called by:
  5965 ;;		_ISR
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _Fuzzy
  5971  0061                     _Fuzzy:	
  5972                           
  5973                           ;main.c: 152: setpoint = (float)pwm;
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5977  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5978  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5979  0063  0844               	movf	(_pwm+1)^(0+128),w
  5980  0064  01F9               	clrf	___lwtoft@c+1
  5981  0065  07F9               	addwf	___lwtoft@c+1,f
  5982  0066  0843               	movf	_pwm^(0+128),w
  5983  0067  01F8               	clrf	___lwtoft@c
  5984  0068  07F8               	addwf	___lwtoft@c,f
  5985  0069  160A  118A  2113  120A  118A  	fcall	___lwtoft
  5986  006E  0878               	movf	?___lwtoft,w
  5987  006F  1683               	bsf	3,5	;RP0=1, select bank3
  5988  0070  1703               	bsf	3,6	;RP1=1, select bank3
  5989  0071  00CC               	movwf	_setpoint^(0+384)
  5990  0072  0879               	movf	?___lwtoft+1,w
  5991  0073  00CD               	movwf	(_setpoint+1)^(0+384)
  5992  0074  087A               	movf	?___lwtoft+2,w
  5993  0075  00CE               	movwf	(_setpoint+2)^(0+384)
  5994                           
  5995                           ;main.c: 154: float mantem;
  5996                           ;main.c: 155: float reduz;
  5997                           ;main.c: 156: float aumenta;
  5998                           ;main.c: 157: float tip;
  5999                           ;main.c: 159: fitemp =0;
  6000  0076  3000               	movlw	0
  6001  0077  1683               	bsf	3,5	;RP0=1, select bank1
  6002  0078  1303               	bcf	3,6	;RP1=0, select bank1
  6003  0079  00A0               	movwf	_fitemp^(0+128)
  6004  007A  3000               	movlw	0
  6005  007B  00A1               	movwf	(_fitemp+1)^(0+128)
  6006  007C  3000               	movlw	0
  6007  007D  00A2               	movwf	(_fitemp+2)^(0+128)
  6008                           
  6009                           ;main.c: 162: temp = (setpoint - tf);
  6010  007E  1683               	bsf	3,5	;RP0=1, select bank3
  6011  007F  1703               	bsf	3,6	;RP1=1, select bank3
  6012  0080  084C               	movf	_setpoint^(0+384),w
  6013  0081  1283               	bcf	3,5	;RP0=0, select bank0
  6014  0082  1303               	bcf	3,6	;RP1=0, select bank0
  6015  0083  00AA               	movwf	___ftadd@f1
  6016  0084  1683               	bsf	3,5	;RP0=1, select bank3
  6017  0085  1703               	bsf	3,6	;RP1=1, select bank3
  6018  0086  084D               	movf	(_setpoint+1)^(0+384),w
  6019  0087  1283               	bcf	3,5	;RP0=0, select bank0
  6020  0088  1303               	bcf	3,6	;RP1=0, select bank0
  6021  0089  00AB               	movwf	___ftadd@f1+1
  6022  008A  1683               	bsf	3,5	;RP0=1, select bank3
  6023  008B  1703               	bsf	3,6	;RP1=1, select bank3
  6024  008C  084E               	movf	(_setpoint+2)^(0+384),w
  6025  008D  1283               	bcf	3,5	;RP0=0, select bank0
  6026  008E  1303               	bcf	3,6	;RP1=0, select bank0
  6027  008F  00AC               	movwf	___ftadd@f1+2
  6028  0090  1683               	bsf	3,5	;RP0=1, select bank3
  6029  0091  1703               	bsf	3,6	;RP1=1, select bank3
  6030  0092  084F               	movf	_tf^(0+384),w
  6031  0093  00F0               	movwf	___ftneg@f1
  6032  0094  0850               	movf	(_tf+1)^(0+384),w
  6033  0095  00F1               	movwf	___ftneg@f1+1
  6034  0096  0851               	movf	(_tf+2)^(0+384),w
  6035  0097  00F2               	movwf	___ftneg@f1+2
  6036  0098  160A  118A  20C1  120A  118A  	fcall	___ftneg
  6037  009D  0870               	movf	?___ftneg,w
  6038  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6039  009F  1303               	bcf	3,6	;RP1=0, select bank0
  6040  00A0  00AD               	movwf	___ftadd@f2
  6041  00A1  0871               	movf	?___ftneg+1,w
  6042  00A2  00AE               	movwf	___ftadd@f2+1
  6043  00A3  0872               	movf	?___ftneg+2,w
  6044  00A4  00AF               	movwf	___ftadd@f2+2
  6045  00A5  120A  118A  26F4  120A  118A  	fcall	___ftadd
  6046  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  6047  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  6048  00AC  082A               	movf	?___ftadd,w
  6049  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  6050  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  6051  00AF  00AF               	movwf	_temp^(0+128)
  6052  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6053  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  6054  00B2  082B               	movf	?___ftadd+1,w
  6055  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  6056  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  6057  00B5  00B0               	movwf	(_temp+1)^(0+128)
  6058  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  6059  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  6060  00B8  082C               	movf	?___ftadd+2,w
  6061  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  6062  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  6063  00BB  00B1               	movwf	(_temp+2)^(0+128)
  6064                           
  6065                           ;main.c: 163: deltaV = temp;
  6066  00BC  082F               	movf	_temp^(0+128),w
  6067  00BD  00F0               	movwf	___fttol@f1
  6068  00BE  0830               	movf	(_temp+1)^(0+128),w
  6069  00BF  00F1               	movwf	___fttol@f1+1
  6070  00C0  0831               	movf	(_temp+2)^(0+128),w
  6071  00C1  00F2               	movwf	___fttol@f1+2
  6072  00C2  160A  118A  2509  120A  118A  	fcall	___fttol
  6073  00C7  0871               	movf	?___fttol+1,w
  6074  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  6075  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  6076  00CA  01C0               	clrf	(_deltaV+1)^(0+128)
  6077  00CB  07C0               	addwf	(_deltaV+1)^(0+128),f
  6078  00CC  0870               	movf	?___fttol,w
  6079  00CD  01BF               	clrf	_deltaV^(0+128)
  6080  00CE  07BF               	addwf	_deltaV^(0+128),f
  6081                           
  6082                           ;main.c: 165: if (temp >100) temp = 100;
  6083  00CF  3000               	movlw	0
  6084  00D0  00F0               	movwf	___ftge@ff1
  6085  00D1  30C8               	movlw	200
  6086  00D2  00F1               	movwf	___ftge@ff1+1
  6087  00D3  3042               	movlw	66
  6088  00D4  00F2               	movwf	___ftge@ff1+2
  6089  00D5  082F               	movf	_temp^(0+128),w
  6090  00D6  00F3               	movwf	___ftge@ff2
  6091  00D7  0830               	movf	(_temp+1)^(0+128),w
  6092  00D8  00F4               	movwf	___ftge@ff2+1
  6093  00D9  0831               	movf	(_temp+2)^(0+128),w
  6094  00DA  00F5               	movwf	___ftge@ff2+2
  6095  00DB  160A  118A  23D9  120A  118A  	fcall	___ftge
  6096  00E0  1803               	btfsc	3,0
  6097  00E1  28EA               	goto	i1l2756
  6098  00E2  3000               	movlw	0
  6099  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  6100  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  6101  00E5  00AF               	movwf	_temp^(0+128)
  6102  00E6  30C8               	movlw	200
  6103  00E7  00B0               	movwf	(_temp+1)^(0+128)
  6104  00E8  3042               	movlw	66
  6105  00E9  00B1               	movwf	(_temp+2)^(0+128)
  6106  00EA                     i1l2756:	
  6107                           
  6108                           ;main.c: 166: if (temp <0) temp = 0;
  6109  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6110  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  6111  00EC  082F               	movf	_temp^(0+128),w
  6112  00ED  00F0               	movwf	___ftge@ff1
  6113  00EE  0830               	movf	(_temp+1)^(0+128),w
  6114  00EF  00F1               	movwf	___ftge@ff1+1
  6115  00F0  0831               	movf	(_temp+2)^(0+128),w
  6116  00F1  00F2               	movwf	___ftge@ff1+2
  6117  00F2  3000               	movlw	0
  6118  00F3  00F3               	movwf	___ftge@ff2
  6119  00F4  3000               	movlw	0
  6120  00F5  00F4               	movwf	___ftge@ff2+1
  6121  00F6  3000               	movlw	0
  6122  00F7  00F5               	movwf	___ftge@ff2+2
  6123  00F8  160A  118A  23D9  120A  118A  	fcall	___ftge
  6124  00FD  1803               	btfsc	3,0
  6125  00FE  2907               	goto	i1l2760
  6126  00FF  3000               	movlw	0
  6127  0100  1683               	bsf	3,5	;RP0=1, select bank1
  6128  0101  1303               	bcf	3,6	;RP1=0, select bank1
  6129  0102  00AF               	movwf	_temp^(0+128)
  6130  0103  3000               	movlw	0
  6131  0104  00B0               	movwf	(_temp+1)^(0+128)
  6132  0105  3000               	movlw	0
  6133  0106  00B1               	movwf	(_temp+2)^(0+128)
  6134  0107                     i1l2760:	
  6135                           
  6136                           ;main.c: 169: if (temp < 25)
  6137  0107  1683               	bsf	3,5	;RP0=1, select bank1
  6138  0108  1303               	bcf	3,6	;RP1=0, select bank1
  6139  0109  082F               	movf	_temp^(0+128),w
  6140  010A  00F0               	movwf	___ftge@ff1
  6141  010B  0830               	movf	(_temp+1)^(0+128),w
  6142  010C  00F1               	movwf	___ftge@ff1+1
  6143  010D  0831               	movf	(_temp+2)^(0+128),w
  6144  010E  00F2               	movwf	___ftge@ff1+2
  6145  010F  3000               	movlw	0
  6146  0110  00F3               	movwf	___ftge@ff2
  6147  0111  30C8               	movlw	200
  6148  0112  00F4               	movwf	___ftge@ff2+1
  6149  0113  3041               	movlw	65
  6150  0114  00F5               	movwf	___ftge@ff2+2
  6151  0115  160A  118A  23D9  120A  118A  	fcall	___ftge
  6152  011A  1803               	btfsc	3,0
  6153  011B  2A70               	goto	i1l2784
  6154                           
  6155                           ;main.c: 170: {
  6156                           ;main.c: 173: fitemp = trapmf(temp, 0,0,13,32);
  6157  011C  1683               	bsf	3,5	;RP0=1, select bank1
  6158  011D  1303               	bcf	3,6	;RP1=0, select bank1
  6159  011E  082F               	movf	_temp^(0+128),w
  6160  011F  1283               	bcf	3,5	;RP0=0, select bank0
  6161  0120  1303               	bcf	3,6	;RP1=0, select bank0
  6162  0121  00C7               	movwf	trapmf@x
  6163  0122  1683               	bsf	3,5	;RP0=1, select bank1
  6164  0123  1303               	bcf	3,6	;RP1=0, select bank1
  6165  0124  0830               	movf	(_temp+1)^(0+128),w
  6166  0125  1283               	bcf	3,5	;RP0=0, select bank0
  6167  0126  1303               	bcf	3,6	;RP1=0, select bank0
  6168  0127  00C8               	movwf	trapmf@x+1
  6169  0128  1683               	bsf	3,5	;RP0=1, select bank1
  6170  0129  1303               	bcf	3,6	;RP1=0, select bank1
  6171  012A  0831               	movf	(_temp+2)^(0+128),w
  6172  012B  1283               	bcf	3,5	;RP0=0, select bank0
  6173  012C  1303               	bcf	3,6	;RP1=0, select bank0
  6174  012D  00C9               	movwf	trapmf@x+2
  6175  012E  3000               	movlw	0
  6176  012F  00CA               	movwf	trapmf@a
  6177  0130  3000               	movlw	0
  6178  0131  00CB               	movwf	trapmf@a+1
  6179  0132  3000               	movlw	0
  6180  0133  00CC               	movwf	trapmf@a+2
  6181  0134  3000               	movlw	0
  6182  0135  00CD               	movwf	trapmf@b
  6183  0136  3000               	movlw	0
  6184  0137  00CE               	movwf	trapmf@b+1
  6185  0138  3000               	movlw	0
  6186  0139  00CF               	movwf	trapmf@b+2
  6187  013A  3000               	movlw	0
  6188  013B  00D0               	movwf	trapmf@c
  6189  013C  3050               	movlw	80
  6190  013D  00D1               	movwf	trapmf@c+1
  6191  013E  3041               	movlw	65
  6192  013F  00D2               	movwf	trapmf@c+2
  6193  0140  3000               	movlw	0
  6194  0141  00D3               	movwf	trapmf@d
  6195  0142  3000               	movlw	0
  6196  0143  00D4               	movwf	trapmf@d+1
  6197  0144  3042               	movlw	66
  6198  0145  00D5               	movwf	trapmf@d+2
  6199  0146  120A  158A  226C  120A  118A  	fcall	_trapmf
  6200  014B  1283               	bcf	3,5	;RP0=0, select bank0
  6201  014C  1303               	bcf	3,6	;RP1=0, select bank0
  6202  014D  0847               	movf	?_trapmf,w
  6203  014E  1683               	bsf	3,5	;RP0=1, select bank1
  6204  014F  1303               	bcf	3,6	;RP1=0, select bank1
  6205  0150  00A0               	movwf	_fitemp^(0+128)
  6206  0151  1283               	bcf	3,5	;RP0=0, select bank0
  6207  0152  1303               	bcf	3,6	;RP1=0, select bank0
  6208  0153  0848               	movf	?_trapmf+1,w
  6209  0154  1683               	bsf	3,5	;RP0=1, select bank1
  6210  0155  1303               	bcf	3,6	;RP1=0, select bank1
  6211  0156  00A1               	movwf	(_fitemp+1)^(0+128)
  6212  0157  1283               	bcf	3,5	;RP0=0, select bank0
  6213  0158  1303               	bcf	3,6	;RP1=0, select bank0
  6214  0159  0849               	movf	?_trapmf+2,w
  6215  015A  1683               	bsf	3,5	;RP0=1, select bank1
  6216  015B  1303               	bcf	3,6	;RP1=0, select bank1
  6217  015C  00A2               	movwf	(_fitemp+2)^(0+128)
  6218                           
  6219                           ;main.c: 176: fop_rule1 = max_val(fitemp,0.1);
  6220  015D  0820               	movf	_fitemp^(0+128),w
  6221  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6222  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6223  0160  00A0               	movwf	max_val@a
  6224  0161  1683               	bsf	3,5	;RP0=1, select bank1
  6225  0162  1303               	bcf	3,6	;RP1=0, select bank1
  6226  0163  0821               	movf	(_fitemp+1)^(0+128),w
  6227  0164  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0165  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0166  00A1               	movwf	max_val@a+1
  6230  0167  1683               	bsf	3,5	;RP0=1, select bank1
  6231  0168  1303               	bcf	3,6	;RP1=0, select bank1
  6232  0169  0822               	movf	(_fitemp+2)^(0+128),w
  6233  016A  1283               	bcf	3,5	;RP0=0, select bank0
  6234  016B  1303               	bcf	3,6	;RP1=0, select bank0
  6235  016C  00A2               	movwf	max_val@a+2
  6236  016D  30CD               	movlw	205
  6237  016E  00A3               	movwf	max_val@b
  6238  016F  30CC               	movlw	204
  6239  0170  00A4               	movwf	max_val@b+1
  6240  0171  303D               	movlw	61
  6241  0172  00A5               	movwf	max_val@b+2
  6242  0173  160A  118A  218B  120A  118A  	fcall	_max_val
  6243  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6244  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6245  017A  0820               	movf	?_max_val,w
  6246  017B  1683               	bsf	3,5	;RP0=1, select bank1
  6247  017C  1303               	bcf	3,6	;RP1=0, select bank1
  6248  017D  00A3               	movwf	_fop_rule1^(0+128)
  6249  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6250  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0180  0821               	movf	?_max_val+1,w
  6252  0181  1683               	bsf	3,5	;RP0=1, select bank1
  6253  0182  1303               	bcf	3,6	;RP1=0, select bank1
  6254  0183  00A4               	movwf	(_fop_rule1+1)^(0+128)
  6255  0184  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0185  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0186  0822               	movf	?_max_val+2,w
  6258  0187  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0188  1303               	bcf	3,6	;RP1=0, select bank1
  6260  0189  00A5               	movwf	(_fop_rule1+2)^(0+128)
  6261                           
  6262                           ;main.c: 179: x=0;
  6263  018A  3000               	movlw	0
  6264  018B  00B5               	movwf	_x^(0+128)
  6265  018C  3000               	movlw	0
  6266  018D  00B6               	movwf	(_x+1)^(0+128)
  6267  018E  3000               	movlw	0
  6268  018F  00B7               	movwf	(_x+2)^(0+128)
  6269                           
  6270                           ;main.c: 180: y=0;
  6271  0190  3000               	movlw	0
  6272  0191  00B8               	movwf	_y^(0+128)
  6273  0192  3000               	movlw	0
  6274  0193  00B9               	movwf	(_y+1)^(0+128)
  6275  0194  3000               	movlw	0
  6276  0195  00BA               	movwf	(_y+2)^(0+128)
  6277                           
  6278                           ;main.c: 181: for (int a=0; a<=90; a++)
  6279  0196  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0197  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0198  01D9               	clrf	Fuzzy@a
  6282  0199  01DA               	clrf	Fuzzy@a+1
  6283  019A  085A               	movf	Fuzzy@a+1,w
  6284  019B  3A80               	xorlw	128
  6285  019C  00FF               	movwf	127
  6286  019D  3080               	movlw	128
  6287  019E  027F               	subwf	127,w
  6288  019F  1D03               	skipz
  6289  01A0  29A3               	goto	u338_25
  6290  01A1  305B               	movlw	91
  6291  01A2  0259               	subwf	Fuzzy@a,w
  6292  01A3                     u338_25:	
  6293  01A3  1803               	btfsc	3,0
  6294  01A4  2A70               	goto	i1l2784
  6295  01A5                     i1l2774:	
  6296                           
  6297                           ;main.c: 182: {
  6298                           ;main.c: 183: y = trapmf(x,0,0,13,32);
  6299  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  6300  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  6301  01A7  0835               	movf	_x^(0+128),w
  6302  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6303  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  6304  01AA  00C7               	movwf	trapmf@x
  6305  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6306  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  6307  01AD  0836               	movf	(_x+1)^(0+128),w
  6308  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  6309  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  6310  01B0  00C8               	movwf	trapmf@x+1
  6311  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  6312  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  6313  01B3  0837               	movf	(_x+2)^(0+128),w
  6314  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  6315  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  6316  01B6  00C9               	movwf	trapmf@x+2
  6317  01B7  3000               	movlw	0
  6318  01B8  00CA               	movwf	trapmf@a
  6319  01B9  3000               	movlw	0
  6320  01BA  00CB               	movwf	trapmf@a+1
  6321  01BB  3000               	movlw	0
  6322  01BC  00CC               	movwf	trapmf@a+2
  6323  01BD  3000               	movlw	0
  6324  01BE  00CD               	movwf	trapmf@b
  6325  01BF  3000               	movlw	0
  6326  01C0  00CE               	movwf	trapmf@b+1
  6327  01C1  3000               	movlw	0
  6328  01C2  00CF               	movwf	trapmf@b+2
  6329  01C3  3000               	movlw	0
  6330  01C4  00D0               	movwf	trapmf@c
  6331  01C5  3050               	movlw	80
  6332  01C6  00D1               	movwf	trapmf@c+1
  6333  01C7  3041               	movlw	65
  6334  01C8  00D2               	movwf	trapmf@c+2
  6335  01C9  3000               	movlw	0
  6336  01CA  00D3               	movwf	trapmf@d
  6337  01CB  3000               	movlw	0
  6338  01CC  00D4               	movwf	trapmf@d+1
  6339  01CD  3042               	movlw	66
  6340  01CE  00D5               	movwf	trapmf@d+2
  6341  01CF  120A  158A  226C  120A  118A  	fcall	_trapmf
  6342  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6343  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  6344  01D6  0847               	movf	?_trapmf,w
  6345  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  6346  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  6347  01D9  00B8               	movwf	_y^(0+128)
  6348  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6349  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6350  01DC  0848               	movf	?_trapmf+1,w
  6351  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  6352  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  6353  01DF  00B9               	movwf	(_y+1)^(0+128)
  6354  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6355  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  6356  01E2  0849               	movf	?_trapmf+2,w
  6357  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6358  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  6359  01E5  00BA               	movwf	(_y+2)^(0+128)
  6360                           
  6361                           ;main.c: 185: if (y > fop_rule1)
  6362  01E6  0823               	movf	_fop_rule1^(0+128),w
  6363  01E7  00F0               	movwf	___ftge@ff1
  6364  01E8  0824               	movf	(_fop_rule1+1)^(0+128),w
  6365  01E9  00F1               	movwf	___ftge@ff1+1
  6366  01EA  0825               	movf	(_fop_rule1+2)^(0+128),w
  6367  01EB  00F2               	movwf	___ftge@ff1+2
  6368  01EC  0838               	movf	_y^(0+128),w
  6369  01ED  00F3               	movwf	___ftge@ff2
  6370  01EE  0839               	movf	(_y+1)^(0+128),w
  6371  01EF  00F4               	movwf	___ftge@ff2+1
  6372  01F0  083A               	movf	(_y+2)^(0+128),w
  6373  01F1  00F5               	movwf	___ftge@ff2+2
  6374  01F2  160A  118A  23D9  120A  118A  	fcall	___ftge
  6375  01F7  1803               	btfsc	3,0
  6376  01F8  2A09               	goto	i1l2778
  6377                           
  6378                           ;main.c: 186: {
  6379                           ;main.c: 187: mantem += fop_rule1;
  6380  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  6381  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  6382  01FB  0823               	movf	_fop_rule1^(0+128),w
  6383  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  6384  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  6385  01FE  00AA               	movwf	___ftadd@f1
  6386  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  6387  0200  1303               	bcf	3,6	;RP1=0, select bank1
  6388  0201  0824               	movf	(_fop_rule1+1)^(0+128),w
  6389  0202  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0203  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0204  00AB               	movwf	___ftadd@f1+1
  6392  0205  1683               	bsf	3,5	;RP0=1, select bank1
  6393  0206  1303               	bcf	3,6	;RP1=0, select bank1
  6394  0207  0825               	movf	(_fop_rule1+2)^(0+128),w
  6395  0208  2A18               	goto	L3
  6396  0209                     i1l2778:	
  6397                           ;main.c: 188: }
  6398                           
  6399                           
  6400                           ;main.c: 189: else
  6401                           ;main.c: 190: {
  6402                           ;main.c: 191: mantem += y;
  6403  0209  1683               	bsf	3,5	;RP0=1, select bank1
  6404  020A  1303               	bcf	3,6	;RP1=0, select bank1
  6405  020B  0838               	movf	_y^(0+128),w
  6406  020C  1283               	bcf	3,5	;RP0=0, select bank0
  6407  020D  1303               	bcf	3,6	;RP1=0, select bank0
  6408  020E  00AA               	movwf	___ftadd@f1
  6409  020F  1683               	bsf	3,5	;RP0=1, select bank1
  6410  0210  1303               	bcf	3,6	;RP1=0, select bank1
  6411  0211  0839               	movf	(_y+1)^(0+128),w
  6412  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6413  0213  1303               	bcf	3,6	;RP1=0, select bank0
  6414  0214  00AB               	movwf	___ftadd@f1+1
  6415  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6416  0216  1303               	bcf	3,6	;RP1=0, select bank1
  6417  0217  083A               	movf	(_y+2)^(0+128),w
  6418  0218                     L3:	
  6419  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6421  021A  00AC               	movwf	___ftadd@f1+2
  6422  021B  0866               	movf	Fuzzy@mantem,w
  6423  021C  00AD               	movwf	___ftadd@f2
  6424  021D  0867               	movf	Fuzzy@mantem+1,w
  6425  021E  00AE               	movwf	___ftadd@f2+1
  6426  021F  0868               	movf	Fuzzy@mantem+2,w
  6427  0220  00AF               	movwf	___ftadd@f2+2
  6428  0221  120A  118A  26F4  120A  118A  	fcall	___ftadd
  6429  0226  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0227  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0228  082A               	movf	?___ftadd,w
  6432  0229  00E6               	movwf	Fuzzy@mantem
  6433  022A  082B               	movf	?___ftadd+1,w
  6434  022B  00E7               	movwf	Fuzzy@mantem+1
  6435  022C  082C               	movf	?___ftadd+2,w
  6436  022D  00E8               	movwf	Fuzzy@mantem+2
  6437                           
  6438                           ;main.c: 192: }
  6439                           ;main.c: 194: x=x+1;
  6440  022E  3000               	movlw	0
  6441  022F  00AA               	movwf	___ftadd@f1
  6442  0230  3080               	movlw	128
  6443  0231  00AB               	movwf	___ftadd@f1+1
  6444  0232  303F               	movlw	63
  6445  0233  00AC               	movwf	___ftadd@f1+2
  6446  0234  1683               	bsf	3,5	;RP0=1, select bank1
  6447  0235  1303               	bcf	3,6	;RP1=0, select bank1
  6448  0236  0835               	movf	_x^(0+128),w
  6449  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6450  0238  1303               	bcf	3,6	;RP1=0, select bank0
  6451  0239  00AD               	movwf	___ftadd@f2
  6452  023A  1683               	bsf	3,5	;RP0=1, select bank1
  6453  023B  1303               	bcf	3,6	;RP1=0, select bank1
  6454  023C  0836               	movf	(_x+1)^(0+128),w
  6455  023D  1283               	bcf	3,5	;RP0=0, select bank0
  6456  023E  1303               	bcf	3,6	;RP1=0, select bank0
  6457  023F  00AE               	movwf	___ftadd@f2+1
  6458  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6459  0241  1303               	bcf	3,6	;RP1=0, select bank1
  6460  0242  0837               	movf	(_x+2)^(0+128),w
  6461  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0244  1303               	bcf	3,6	;RP1=0, select bank0
  6463  0245  00AF               	movwf	___ftadd@f2+2
  6464  0246  120A  118A  26F4  120A  118A  	fcall	___ftadd
  6465  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6466  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6467  024D  082A               	movf	?___ftadd,w
  6468  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6469  024F  1303               	bcf	3,6	;RP1=0, select bank1
  6470  0250  00B5               	movwf	_x^(0+128)
  6471  0251  1283               	bcf	3,5	;RP0=0, select bank0
  6472  0252  1303               	bcf	3,6	;RP1=0, select bank0
  6473  0253  082B               	movf	?___ftadd+1,w
  6474  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0255  1303               	bcf	3,6	;RP1=0, select bank1
  6476  0256  00B6               	movwf	(_x+1)^(0+128)
  6477  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6478  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6479  0259  082C               	movf	?___ftadd+2,w
  6480  025A  1683               	bsf	3,5	;RP0=1, select bank1
  6481  025B  1303               	bcf	3,6	;RP1=0, select bank1
  6482  025C  00B7               	movwf	(_x+2)^(0+128)
  6483  025D  3001               	movlw	1
  6484  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6485  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6486  0260  07D9               	addwf	Fuzzy@a,f
  6487  0261  1803               	skipnc
  6488  0262  0ADA               	incf	Fuzzy@a+1,f
  6489  0263  3000               	movlw	0
  6490  0264  07DA               	addwf	Fuzzy@a+1,f
  6491  0265  085A               	movf	Fuzzy@a+1,w
  6492  0266  3A80               	xorlw	128
  6493  0267  00FF               	movwf	127
  6494  0268  3080               	movlw	128
  6495  0269  027F               	subwf	127,w
  6496  026A  1D03               	skipz
  6497  026B  2A6E               	goto	u340_25
  6498  026C  305B               	movlw	91
  6499  026D  0259               	subwf	Fuzzy@a,w
  6500  026E                     u340_25:	
  6501  026E  1C03               	skipc
  6502  026F  29A5               	goto	i1l2774
  6503  0270                     i1l2784:	
  6504                           
  6505                           ;main.c: 195: }
  6506                           ;main.c: 197: }
  6507                           ;main.c: 203: if ((temp > 20) && (temp < 70))
  6508  0270  3000               	movlw	0
  6509  0271  00F0               	movwf	___ftge@ff1
  6510  0272  30A0               	movlw	160
  6511  0273  00F1               	movwf	___ftge@ff1+1
  6512  0274  3041               	movlw	65
  6513  0275  00F2               	movwf	___ftge@ff1+2
  6514  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6515  0277  1303               	bcf	3,6	;RP1=0, select bank1
  6516  0278  082F               	movf	_temp^(0+128),w
  6517  0279  00F3               	movwf	___ftge@ff2
  6518  027A  0830               	movf	(_temp+1)^(0+128),w
  6519  027B  00F4               	movwf	___ftge@ff2+1
  6520  027C  0831               	movf	(_temp+2)^(0+128),w
  6521  027D  00F5               	movwf	___ftge@ff2+2
  6522  027E  160A  118A  23D9  120A  118A  	fcall	___ftge
  6523  0283  1803               	btfsc	3,0
  6524  0284  2BE2               	goto	i1l2810
  6525  0285  1683               	bsf	3,5	;RP0=1, select bank1
  6526  0286  1303               	bcf	3,6	;RP1=0, select bank1
  6527  0287  082F               	movf	_temp^(0+128),w
  6528  0288  00F0               	movwf	___ftge@ff1
  6529  0289  0830               	movf	(_temp+1)^(0+128),w
  6530  028A  00F1               	movwf	___ftge@ff1+1
  6531  028B  0831               	movf	(_temp+2)^(0+128),w
  6532  028C  00F2               	movwf	___ftge@ff1+2
  6533  028D  3000               	movlw	0
  6534  028E  00F3               	movwf	___ftge@ff2
  6535  028F  308C               	movlw	140
  6536  0290  00F4               	movwf	___ftge@ff2+1
  6537  0291  3042               	movlw	66
  6538  0292  00F5               	movwf	___ftge@ff2+2
  6539  0293  160A  118A  23D9  120A  118A  	fcall	___ftge
  6540  0298  1803               	btfsc	3,0
  6541  0299  2BE2               	goto	i1l2810
  6542                           
  6543                           ;main.c: 204: {
  6544                           ;main.c: 206: fitemp = trimf(temp, 9, 45, 81);
  6545  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6546  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6547  029C  082F               	movf	_temp^(0+128),w
  6548  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6549  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6550  029F  00C7               	movwf	trimf@x
  6551  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6552  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6553  02A2  0830               	movf	(_temp+1)^(0+128),w
  6554  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6555  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6556  02A5  00C8               	movwf	trimf@x+1
  6557  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6558  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  6559  02A8  0831               	movf	(_temp+2)^(0+128),w
  6560  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6561  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6562  02AB  00C9               	movwf	trimf@x+2
  6563  02AC  3000               	movlw	0
  6564  02AD  00CA               	movwf	trimf@a
  6565  02AE  3010               	movlw	16
  6566  02AF  00CB               	movwf	trimf@a+1
  6567  02B0  3041               	movlw	65
  6568  02B1  00CC               	movwf	trimf@a+2
  6569  02B2  3000               	movlw	0
  6570  02B3  00CD               	movwf	trimf@b
  6571  02B4  3034               	movlw	52
  6572  02B5  00CE               	movwf	trimf@b+1
  6573  02B6  3042               	movlw	66
  6574  02B7  00CF               	movwf	trimf@b+2
  6575  02B8  3000               	movlw	0
  6576  02B9  00D0               	movwf	trimf@c
  6577  02BA  30A2               	movlw	162
  6578  02BB  00D1               	movwf	trimf@c+1
  6579  02BC  3042               	movlw	66
  6580  02BD  00D2               	movwf	trimf@c+2
  6581  02BE  160A  118A  26DC  120A  118A  	fcall	_trimf
  6582  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  6583  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  6584  02C5  0847               	movf	?_trimf,w
  6585  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6586  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  6587  02C8  00A0               	movwf	_fitemp^(0+128)
  6588  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6589  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  6590  02CB  0848               	movf	?_trimf+1,w
  6591  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  6592  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  6593  02CE  00A1               	movwf	(_fitemp+1)^(0+128)
  6594  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6595  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  6596  02D1  0849               	movf	?_trimf+2,w
  6597  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  6598  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  6599  02D4  00A2               	movwf	(_fitemp+2)^(0+128)
  6600                           
  6601                           ;main.c: 209: fop_rule2 = max_val(fitemp,0.1);
  6602  02D5  0820               	movf	_fitemp^(0+128),w
  6603  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  6604  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  6605  02D8  00A0               	movwf	max_val@a
  6606  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6607  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6608  02DB  0821               	movf	(_fitemp+1)^(0+128),w
  6609  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6610  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6611  02DE  00A1               	movwf	max_val@a+1
  6612  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  6613  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  6614  02E1  0822               	movf	(_fitemp+2)^(0+128),w
  6615  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  6616  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  6617  02E4  00A2               	movwf	max_val@a+2
  6618  02E5  30CD               	movlw	205
  6619  02E6  00A3               	movwf	max_val@b
  6620  02E7  30CC               	movlw	204
  6621  02E8  00A4               	movwf	max_val@b+1
  6622  02E9  303D               	movlw	61
  6623  02EA  00A5               	movwf	max_val@b+2
  6624  02EB  160A  118A  218B  120A  118A  	fcall	_max_val
  6625  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6626  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6627  02F2  0820               	movf	?_max_val,w
  6628  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6629  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  6630  02F5  00A6               	movwf	_fop_rule2^(0+128)
  6631  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6632  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6633  02F8  0821               	movf	?_max_val+1,w
  6634  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  6635  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6636  02FB  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6637  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  6638  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  6639  02FE  0822               	movf	?_max_val+2,w
  6640  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  6641  0300  1303               	bcf	3,6	;RP1=0, select bank1
  6642  0301  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6643                           
  6644                           ;main.c: 212: x=0;
  6645  0302  3000               	movlw	0
  6646  0303  00B5               	movwf	_x^(0+128)
  6647  0304  3000               	movlw	0
  6648  0305  00B6               	movwf	(_x+1)^(0+128)
  6649  0306  3000               	movlw	0
  6650  0307  00B7               	movwf	(_x+2)^(0+128)
  6651                           
  6652                           ;main.c: 213: y=0;
  6653  0308  3000               	movlw	0
  6654  0309  00B8               	movwf	_y^(0+128)
  6655  030A  3000               	movlw	0
  6656  030B  00B9               	movwf	(_y+1)^(0+128)
  6657  030C  3000               	movlw	0
  6658  030D  00BA               	movwf	(_y+2)^(0+128)
  6659                           
  6660                           ;main.c: 214: for (int a=0; a<=90; a++)
  6661  030E  1283               	bcf	3,5	;RP0=0, select bank0
  6662  030F  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0310  01DB               	clrf	Fuzzy@a_237
  6664  0311  01DC               	clrf	Fuzzy@a_237+1
  6665  0312  085C               	movf	Fuzzy@a_237+1,w
  6666  0313  3A80               	xorlw	128
  6667  0314  00FF               	movwf	127
  6668  0315  3080               	movlw	128
  6669  0316  027F               	subwf	127,w
  6670  0317  1D03               	skipz
  6671  0318  2B1B               	goto	u343_25
  6672  0319  305B               	movlw	91
  6673  031A  025B               	subwf	Fuzzy@a_237,w
  6674  031B                     u343_25:	
  6675  031B  1803               	btfsc	3,0
  6676  031C  2BE2               	goto	i1l2810
  6677  031D                     i1l2800:	
  6678                           
  6679                           ;main.c: 215: {
  6680                           ;main.c: 216: y = trimf(x, 9, 45, 81);
  6681  031D  1683               	bsf	3,5	;RP0=1, select bank1
  6682  031E  1303               	bcf	3,6	;RP1=0, select bank1
  6683  031F  0835               	movf	_x^(0+128),w
  6684  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0322  00C7               	movwf	trimf@x
  6687  0323  1683               	bsf	3,5	;RP0=1, select bank1
  6688  0324  1303               	bcf	3,6	;RP1=0, select bank1
  6689  0325  0836               	movf	(_x+1)^(0+128),w
  6690  0326  1283               	bcf	3,5	;RP0=0, select bank0
  6691  0327  1303               	bcf	3,6	;RP1=0, select bank0
  6692  0328  00C8               	movwf	trimf@x+1
  6693  0329  1683               	bsf	3,5	;RP0=1, select bank1
  6694  032A  1303               	bcf	3,6	;RP1=0, select bank1
  6695  032B  0837               	movf	(_x+2)^(0+128),w
  6696  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6697  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6698  032E  00C9               	movwf	trimf@x+2
  6699  032F  3000               	movlw	0
  6700  0330  00CA               	movwf	trimf@a
  6701  0331  3010               	movlw	16
  6702  0332  00CB               	movwf	trimf@a+1
  6703  0333  3041               	movlw	65
  6704  0334  00CC               	movwf	trimf@a+2
  6705  0335  3000               	movlw	0
  6706  0336  00CD               	movwf	trimf@b
  6707  0337  3034               	movlw	52
  6708  0338  00CE               	movwf	trimf@b+1
  6709  0339  3042               	movlw	66
  6710  033A  00CF               	movwf	trimf@b+2
  6711  033B  3000               	movlw	0
  6712  033C  00D0               	movwf	trimf@c
  6713  033D  30A2               	movlw	162
  6714  033E  00D1               	movwf	trimf@c+1
  6715  033F  3042               	movlw	66
  6716  0340  00D2               	movwf	trimf@c+2
  6717  0341  160A  118A  26DC  120A  118A  	fcall	_trimf
  6718  0346  1283               	bcf	3,5	;RP0=0, select bank0
  6719  0347  1303               	bcf	3,6	;RP1=0, select bank0
  6720  0348  0847               	movf	?_trimf,w
  6721  0349  1683               	bsf	3,5	;RP0=1, select bank1
  6722  034A  1303               	bcf	3,6	;RP1=0, select bank1
  6723  034B  00B8               	movwf	_y^(0+128)
  6724  034C  1283               	bcf	3,5	;RP0=0, select bank0
  6725  034D  1303               	bcf	3,6	;RP1=0, select bank0
  6726  034E  0848               	movf	?_trimf+1,w
  6727  034F  1683               	bsf	3,5	;RP0=1, select bank1
  6728  0350  1303               	bcf	3,6	;RP1=0, select bank1
  6729  0351  00B9               	movwf	(_y+1)^(0+128)
  6730  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6732  0354  0849               	movf	?_trimf+2,w
  6733  0355  1683               	bsf	3,5	;RP0=1, select bank1
  6734  0356  1303               	bcf	3,6	;RP1=0, select bank1
  6735  0357  00BA               	movwf	(_y+2)^(0+128)
  6736                           
  6737                           ;main.c: 218: if (y >= fop_rule2)
  6738  0358  0838               	movf	_y^(0+128),w
  6739  0359  00F0               	movwf	___ftge@ff1
  6740  035A  0839               	movf	(_y+1)^(0+128),w
  6741  035B  00F1               	movwf	___ftge@ff1+1
  6742  035C  083A               	movf	(_y+2)^(0+128),w
  6743  035D  00F2               	movwf	___ftge@ff1+2
  6744  035E  0826               	movf	_fop_rule2^(0+128),w
  6745  035F  00F3               	movwf	___ftge@ff2
  6746  0360  0827               	movf	(_fop_rule2+1)^(0+128),w
  6747  0361  00F4               	movwf	___ftge@ff2+1
  6748  0362  0828               	movf	(_fop_rule2+2)^(0+128),w
  6749  0363  00F5               	movwf	___ftge@ff2+2
  6750  0364  160A  118A  23D9  120A  118A  	fcall	___ftge
  6751  0369  1C03               	btfss	3,0
  6752  036A  2B7B               	goto	i1l2804
  6753                           
  6754                           ;main.c: 219: {
  6755                           ;main.c: 220: reduz += fop_rule2;
  6756  036B  1683               	bsf	3,5	;RP0=1, select bank1
  6757  036C  1303               	bcf	3,6	;RP1=0, select bank1
  6758  036D  0826               	movf	_fop_rule2^(0+128),w
  6759  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6760  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6761  0370  00AA               	movwf	___ftadd@f1
  6762  0371  1683               	bsf	3,5	;RP0=1, select bank1
  6763  0372  1303               	bcf	3,6	;RP1=0, select bank1
  6764  0373  0827               	movf	(_fop_rule2+1)^(0+128),w
  6765  0374  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0375  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0376  00AB               	movwf	___ftadd@f1+1
  6768  0377  1683               	bsf	3,5	;RP0=1, select bank1
  6769  0378  1303               	bcf	3,6	;RP1=0, select bank1
  6770  0379  0828               	movf	(_fop_rule2+2)^(0+128),w
  6771  037A  2B8A               	goto	L4
  6772  037B                     i1l2804:	
  6773                           ;main.c: 221: }
  6774                           
  6775                           
  6776                           ;main.c: 222: else
  6777                           ;main.c: 223: {
  6778                           ;main.c: 224: reduz += y;
  6779  037B  1683               	bsf	3,5	;RP0=1, select bank1
  6780  037C  1303               	bcf	3,6	;RP1=0, select bank1
  6781  037D  0838               	movf	_y^(0+128),w
  6782  037E  1283               	bcf	3,5	;RP0=0, select bank0
  6783  037F  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0380  00AA               	movwf	___ftadd@f1
  6785  0381  1683               	bsf	3,5	;RP0=1, select bank1
  6786  0382  1303               	bcf	3,6	;RP1=0, select bank1
  6787  0383  0839               	movf	(_y+1)^(0+128),w
  6788  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6789  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6790  0386  00AB               	movwf	___ftadd@f1+1
  6791  0387  1683               	bsf	3,5	;RP0=1, select bank1
  6792  0388  1303               	bcf	3,6	;RP1=0, select bank1
  6793  0389  083A               	movf	(_y+2)^(0+128),w
  6794  038A                     L4:	
  6795  038A  1283               	bcf	3,5	;RP0=0, select bank0
  6796  038B  1303               	bcf	3,6	;RP1=0, select bank0
  6797  038C  00AC               	movwf	___ftadd@f1+2
  6798  038D  0869               	movf	Fuzzy@reduz,w
  6799  038E  00AD               	movwf	___ftadd@f2
  6800  038F  086A               	movf	Fuzzy@reduz+1,w
  6801  0390  00AE               	movwf	___ftadd@f2+1
  6802  0391  086B               	movf	Fuzzy@reduz+2,w
  6803  0392  00AF               	movwf	___ftadd@f2+2
  6804  0393  120A  118A  26F4  120A  118A  	fcall	___ftadd
  6805  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6806  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6807  039A  082A               	movf	?___ftadd,w
  6808  039B  00E9               	movwf	Fuzzy@reduz
  6809  039C  082B               	movf	?___ftadd+1,w
  6810  039D  00EA               	movwf	Fuzzy@reduz+1
  6811  039E  082C               	movf	?___ftadd+2,w
  6812  039F  00EB               	movwf	Fuzzy@reduz+2
  6813                           
  6814                           ;main.c: 225: }
  6815                           ;main.c: 227: x=x+1;
  6816  03A0  3000               	movlw	0
  6817  03A1  00AA               	movwf	___ftadd@f1
  6818  03A2  3080               	movlw	128
  6819  03A3  00AB               	movwf	___ftadd@f1+1
  6820  03A4  303F               	movlw	63
  6821  03A5  00AC               	movwf	___ftadd@f1+2
  6822  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  6823  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  6824  03A8  0835               	movf	_x^(0+128),w
  6825  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6826  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6827  03AB  00AD               	movwf	___ftadd@f2
  6828  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  6829  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  6830  03AE  0836               	movf	(_x+1)^(0+128),w
  6831  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  6832  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  6833  03B1  00AE               	movwf	___ftadd@f2+1
  6834  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  6835  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  6836  03B4  0837               	movf	(_x+2)^(0+128),w
  6837  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  6838  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  6839  03B7  00AF               	movwf	___ftadd@f2+2
  6840  03B8  120A  118A  26F4  120A  118A  	fcall	___ftadd
  6841  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6842  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6843  03BF  082A               	movf	?___ftadd,w
  6844  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  6845  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  6846  03C2  00B5               	movwf	_x^(0+128)
  6847  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6848  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6849  03C5  082B               	movf	?___ftadd+1,w
  6850  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6851  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6852  03C8  00B6               	movwf	(_x+1)^(0+128)
  6853  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6854  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6855  03CB  082C               	movf	?___ftadd+2,w
  6856  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  6857  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  6858  03CE  00B7               	movwf	(_x+2)^(0+128)
  6859  03CF  3001               	movlw	1
  6860  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  6861  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  6862  03D2  07DB               	addwf	Fuzzy@a_237,f
  6863  03D3  1803               	skipnc
  6864  03D4  0ADC               	incf	Fuzzy@a_237+1,f
  6865  03D5  3000               	movlw	0
  6866  03D6  07DC               	addwf	Fuzzy@a_237+1,f
  6867  03D7  085C               	movf	Fuzzy@a_237+1,w
  6868  03D8  3A80               	xorlw	128
  6869  03D9  00FF               	movwf	127
  6870  03DA  3080               	movlw	128
  6871  03DB  027F               	subwf	127,w
  6872  03DC  1D03               	skipz
  6873  03DD  2BE0               	goto	u345_25
  6874  03DE  305B               	movlw	91
  6875  03DF  025B               	subwf	Fuzzy@a_237,w
  6876  03E0                     u345_25:	
  6877  03E0  1C03               	skipc
  6878  03E1  2B1D               	goto	i1l2800
  6879  03E2                     i1l2810:	
  6880                           
  6881                           ;main.c: 228: }
  6882                           ;main.c: 230: }
  6883                           ;main.c: 236: if (temp > 70 )
  6884  03E2  3000               	movlw	0
  6885  03E3  00F0               	movwf	___ftge@ff1
  6886  03E4  308C               	movlw	140
  6887  03E5  00F1               	movwf	___ftge@ff1+1
  6888  03E6  3042               	movlw	66
  6889  03E7  00F2               	movwf	___ftge@ff1+2
  6890  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6891  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6892  03EA  082F               	movf	_temp^(0+128),w
  6893  03EB  00F3               	movwf	___ftge@ff2
  6894  03EC  0830               	movf	(_temp+1)^(0+128),w
  6895  03ED  00F4               	movwf	___ftge@ff2+1
  6896  03EE  0831               	movf	(_temp+2)^(0+128),w
  6897  03EF  00F5               	movwf	___ftge@ff2+2
  6898  03F0  160A  118A  23D9  120A  118A  	fcall	___ftge
  6899  03F5  1803               	btfsc	3,0
  6900  03F6  2D4B               	goto	i1l2834
  6901                           
  6902                           ;main.c: 237: {
  6903                           ;main.c: 239: fitemp = trapmf(temp, 62, 79, 90, 90);
  6904  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  6905  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  6906  03F9  082F               	movf	_temp^(0+128),w
  6907  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  6908  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  6909  03FC  00C7               	movwf	trapmf@x
  6910  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  6911  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  6912  03FF  0830               	movf	(_temp+1)^(0+128),w
  6913  0400  1283               	bcf	3,5	;RP0=0, select bank0
  6914  0401  1303               	bcf	3,6	;RP1=0, select bank0
  6915  0402  00C8               	movwf	trapmf@x+1
  6916  0403  1683               	bsf	3,5	;RP0=1, select bank1
  6917  0404  1303               	bcf	3,6	;RP1=0, select bank1
  6918  0405  0831               	movf	(_temp+2)^(0+128),w
  6919  0406  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0407  1303               	bcf	3,6	;RP1=0, select bank0
  6921  0408  00C9               	movwf	trapmf@x+2
  6922  0409  3000               	movlw	0
  6923  040A  00CA               	movwf	trapmf@a
  6924  040B  3078               	movlw	120
  6925  040C  00CB               	movwf	trapmf@a+1
  6926  040D  3042               	movlw	66
  6927  040E  00CC               	movwf	trapmf@a+2
  6928  040F  3000               	movlw	0
  6929  0410  00CD               	movwf	trapmf@b
  6930  0411  309E               	movlw	158
  6931  0412  00CE               	movwf	trapmf@b+1
  6932  0413  3042               	movlw	66
  6933  0414  00CF               	movwf	trapmf@b+2
  6934  0415  3000               	movlw	0
  6935  0416  00D0               	movwf	trapmf@c
  6936  0417  30B4               	movlw	180
  6937  0418  00D1               	movwf	trapmf@c+1
  6938  0419  3042               	movlw	66
  6939  041A  00D2               	movwf	trapmf@c+2
  6940  041B  3000               	movlw	0
  6941  041C  00D3               	movwf	trapmf@d
  6942  041D  30B4               	movlw	180
  6943  041E  00D4               	movwf	trapmf@d+1
  6944  041F  3042               	movlw	66
  6945  0420  00D5               	movwf	trapmf@d+2
  6946  0421  120A  158A  226C  120A  118A  	fcall	_trapmf
  6947  0426  1283               	bcf	3,5	;RP0=0, select bank0
  6948  0427  1303               	bcf	3,6	;RP1=0, select bank0
  6949  0428  0847               	movf	?_trapmf,w
  6950  0429  1683               	bsf	3,5	;RP0=1, select bank1
  6951  042A  1303               	bcf	3,6	;RP1=0, select bank1
  6952  042B  00A0               	movwf	_fitemp^(0+128)
  6953  042C  1283               	bcf	3,5	;RP0=0, select bank0
  6954  042D  1303               	bcf	3,6	;RP1=0, select bank0
  6955  042E  0848               	movf	?_trapmf+1,w
  6956  042F  1683               	bsf	3,5	;RP0=1, select bank1
  6957  0430  1303               	bcf	3,6	;RP1=0, select bank1
  6958  0431  00A1               	movwf	(_fitemp+1)^(0+128)
  6959  0432  1283               	bcf	3,5	;RP0=0, select bank0
  6960  0433  1303               	bcf	3,6	;RP1=0, select bank0
  6961  0434  0849               	movf	?_trapmf+2,w
  6962  0435  1683               	bsf	3,5	;RP0=1, select bank1
  6963  0436  1303               	bcf	3,6	;RP1=0, select bank1
  6964  0437  00A2               	movwf	(_fitemp+2)^(0+128)
  6965                           
  6966                           ;main.c: 243: fop_rule3 = max_val(fitemp,0.1);
  6967  0438  0820               	movf	_fitemp^(0+128),w
  6968  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6969  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6970  043B  00A0               	movwf	max_val@a
  6971  043C  1683               	bsf	3,5	;RP0=1, select bank1
  6972  043D  1303               	bcf	3,6	;RP1=0, select bank1
  6973  043E  0821               	movf	(_fitemp+1)^(0+128),w
  6974  043F  1283               	bcf	3,5	;RP0=0, select bank0
  6975  0440  1303               	bcf	3,6	;RP1=0, select bank0
  6976  0441  00A1               	movwf	max_val@a+1
  6977  0442  1683               	bsf	3,5	;RP0=1, select bank1
  6978  0443  1303               	bcf	3,6	;RP1=0, select bank1
  6979  0444  0822               	movf	(_fitemp+2)^(0+128),w
  6980  0445  1283               	bcf	3,5	;RP0=0, select bank0
  6981  0446  1303               	bcf	3,6	;RP1=0, select bank0
  6982  0447  00A2               	movwf	max_val@a+2
  6983  0448  30CD               	movlw	205
  6984  0449  00A3               	movwf	max_val@b
  6985  044A  30CC               	movlw	204
  6986  044B  00A4               	movwf	max_val@b+1
  6987  044C  303D               	movlw	61
  6988  044D  00A5               	movwf	max_val@b+2
  6989  044E  160A  118A  218B  120A  118A  	fcall	_max_val
  6990  0453  1283               	bcf	3,5	;RP0=0, select bank0
  6991  0454  1303               	bcf	3,6	;RP1=0, select bank0
  6992  0455  0820               	movf	?_max_val,w
  6993  0456  1683               	bsf	3,5	;RP0=1, select bank1
  6994  0457  1303               	bcf	3,6	;RP1=0, select bank1
  6995  0458  00A9               	movwf	_fop_rule3^(0+128)
  6996  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6997  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6998  045B  0821               	movf	?_max_val+1,w
  6999  045C  1683               	bsf	3,5	;RP0=1, select bank1
  7000  045D  1303               	bcf	3,6	;RP1=0, select bank1
  7001  045E  00AA               	movwf	(_fop_rule3+1)^(0+128)
  7002  045F  1283               	bcf	3,5	;RP0=0, select bank0
  7003  0460  1303               	bcf	3,6	;RP1=0, select bank0
  7004  0461  0822               	movf	?_max_val+2,w
  7005  0462  1683               	bsf	3,5	;RP0=1, select bank1
  7006  0463  1303               	bcf	3,6	;RP1=0, select bank1
  7007  0464  00AB               	movwf	(_fop_rule3+2)^(0+128)
  7008                           
  7009                           ;main.c: 246: x=0;
  7010  0465  3000               	movlw	0
  7011  0466  00B5               	movwf	_x^(0+128)
  7012  0467  3000               	movlw	0
  7013  0468  00B6               	movwf	(_x+1)^(0+128)
  7014  0469  3000               	movlw	0
  7015  046A  00B7               	movwf	(_x+2)^(0+128)
  7016                           
  7017                           ;main.c: 247: y=0;
  7018  046B  3000               	movlw	0
  7019  046C  00B8               	movwf	_y^(0+128)
  7020  046D  3000               	movlw	0
  7021  046E  00B9               	movwf	(_y+1)^(0+128)
  7022  046F  3000               	movlw	0
  7023  0470  00BA               	movwf	(_y+2)^(0+128)
  7024                           
  7025                           ;main.c: 248: for (int a=0; a<=90; a++)
  7026  0471  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0472  1303               	bcf	3,6	;RP1=0, select bank0
  7028  0473  01DD               	clrf	Fuzzy@a_238
  7029  0474  01DE               	clrf	Fuzzy@a_238+1
  7030  0475  085E               	movf	Fuzzy@a_238+1,w
  7031  0476  3A80               	xorlw	128
  7032  0477  00FF               	movwf	127
  7033  0478  3080               	movlw	128
  7034  0479  027F               	subwf	127,w
  7035  047A  1D03               	skipz
  7036  047B  2C7E               	goto	u347_25
  7037  047C  305B               	movlw	91
  7038  047D  025D               	subwf	Fuzzy@a_238,w
  7039  047E                     u347_25:	
  7040  047E  1803               	btfsc	3,0
  7041  047F  2D4B               	goto	i1l2834
  7042  0480                     i1l2824:	
  7043                           
  7044                           ;main.c: 249: {
  7045                           ;main.c: 250: y = trapmf(x, 62, 79, 90, 90);
  7046  0480  1683               	bsf	3,5	;RP0=1, select bank1
  7047  0481  1303               	bcf	3,6	;RP1=0, select bank1
  7048  0482  0835               	movf	_x^(0+128),w
  7049  0483  1283               	bcf	3,5	;RP0=0, select bank0
  7050  0484  1303               	bcf	3,6	;RP1=0, select bank0
  7051  0485  00C7               	movwf	trapmf@x
  7052  0486  1683               	bsf	3,5	;RP0=1, select bank1
  7053  0487  1303               	bcf	3,6	;RP1=0, select bank1
  7054  0488  0836               	movf	(_x+1)^(0+128),w
  7055  0489  1283               	bcf	3,5	;RP0=0, select bank0
  7056  048A  1303               	bcf	3,6	;RP1=0, select bank0
  7057  048B  00C8               	movwf	trapmf@x+1
  7058  048C  1683               	bsf	3,5	;RP0=1, select bank1
  7059  048D  1303               	bcf	3,6	;RP1=0, select bank1
  7060  048E  0837               	movf	(_x+2)^(0+128),w
  7061  048F  1283               	bcf	3,5	;RP0=0, select bank0
  7062  0490  1303               	bcf	3,6	;RP1=0, select bank0
  7063  0491  00C9               	movwf	trapmf@x+2
  7064  0492  3000               	movlw	0
  7065  0493  00CA               	movwf	trapmf@a
  7066  0494  3078               	movlw	120
  7067  0495  00CB               	movwf	trapmf@a+1
  7068  0496  3042               	movlw	66
  7069  0497  00CC               	movwf	trapmf@a+2
  7070  0498  3000               	movlw	0
  7071  0499  00CD               	movwf	trapmf@b
  7072  049A  309E               	movlw	158
  7073  049B  00CE               	movwf	trapmf@b+1
  7074  049C  3042               	movlw	66
  7075  049D  00CF               	movwf	trapmf@b+2
  7076  049E  3000               	movlw	0
  7077  049F  00D0               	movwf	trapmf@c
  7078  04A0  30B4               	movlw	180
  7079  04A1  00D1               	movwf	trapmf@c+1
  7080  04A2  3042               	movlw	66
  7081  04A3  00D2               	movwf	trapmf@c+2
  7082  04A4  3000               	movlw	0
  7083  04A5  00D3               	movwf	trapmf@d
  7084  04A6  30B4               	movlw	180
  7085  04A7  00D4               	movwf	trapmf@d+1
  7086  04A8  3042               	movlw	66
  7087  04A9  00D5               	movwf	trapmf@d+2
  7088  04AA  120A  158A  226C  120A  118A  	fcall	_trapmf
  7089  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  7090  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  7091  04B1  0847               	movf	?_trapmf,w
  7092  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  7093  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  7094  04B4  00B8               	movwf	_y^(0+128)
  7095  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  7096  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  7097  04B7  0848               	movf	?_trapmf+1,w
  7098  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  7099  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  7100  04BA  00B9               	movwf	(_y+1)^(0+128)
  7101  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  7102  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  7103  04BD  0849               	movf	?_trapmf+2,w
  7104  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  7105  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  7106  04C0  00BA               	movwf	(_y+2)^(0+128)
  7107                           
  7108                           ;main.c: 252: if (y >= fop_rule3)
  7109  04C1  0838               	movf	_y^(0+128),w
  7110  04C2  00F0               	movwf	___ftge@ff1
  7111  04C3  0839               	movf	(_y+1)^(0+128),w
  7112  04C4  00F1               	movwf	___ftge@ff1+1
  7113  04C5  083A               	movf	(_y+2)^(0+128),w
  7114  04C6  00F2               	movwf	___ftge@ff1+2
  7115  04C7  0829               	movf	_fop_rule3^(0+128),w
  7116  04C8  00F3               	movwf	___ftge@ff2
  7117  04C9  082A               	movf	(_fop_rule3+1)^(0+128),w
  7118  04CA  00F4               	movwf	___ftge@ff2+1
  7119  04CB  082B               	movf	(_fop_rule3+2)^(0+128),w
  7120  04CC  00F5               	movwf	___ftge@ff2+2
  7121  04CD  160A  118A  23D9  120A  118A  	fcall	___ftge
  7122  04D2  1C03               	btfss	3,0
  7123  04D3  2CE4               	goto	i1l2828
  7124                           
  7125                           ;main.c: 253: {
  7126                           ;main.c: 254: aumenta += fop_rule3;
  7127  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  7128  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  7129  04D6  0829               	movf	_fop_rule3^(0+128),w
  7130  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  7131  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  7132  04D9  00AA               	movwf	___ftadd@f1
  7133  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  7134  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  7135  04DC  082A               	movf	(_fop_rule3+1)^(0+128),w
  7136  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  7137  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  7138  04DF  00AB               	movwf	___ftadd@f1+1
  7139  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  7140  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  7141  04E2  082B               	movf	(_fop_rule3+2)^(0+128),w
  7142  04E3  2CF3               	goto	L5
  7143  04E4                     i1l2828:	
  7144                           ;main.c: 255: }
  7145                           
  7146                           
  7147                           ;main.c: 256: else
  7148                           ;main.c: 257: {
  7149                           ;main.c: 258: aumenta += y;
  7150  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  7151  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  7152  04E6  0838               	movf	_y^(0+128),w
  7153  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  7154  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  7155  04E9  00AA               	movwf	___ftadd@f1
  7156  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  7157  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  7158  04EC  0839               	movf	(_y+1)^(0+128),w
  7159  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  7160  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  7161  04EF  00AB               	movwf	___ftadd@f1+1
  7162  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  7163  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  7164  04F2  083A               	movf	(_y+2)^(0+128),w
  7165  04F3                     L5:	
  7166  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  7167  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  7168  04F5  00AC               	movwf	___ftadd@f1+2
  7169  04F6  086C               	movf	Fuzzy@aumenta,w
  7170  04F7  00AD               	movwf	___ftadd@f2
  7171  04F8  086D               	movf	Fuzzy@aumenta+1,w
  7172  04F9  00AE               	movwf	___ftadd@f2+1
  7173  04FA  086E               	movf	Fuzzy@aumenta+2,w
  7174  04FB  00AF               	movwf	___ftadd@f2+2
  7175  04FC  120A  118A  26F4  120A  118A  	fcall	___ftadd
  7176  0501  1283               	bcf	3,5	;RP0=0, select bank0
  7177  0502  1303               	bcf	3,6	;RP1=0, select bank0
  7178  0503  082A               	movf	?___ftadd,w
  7179  0504  00EC               	movwf	Fuzzy@aumenta
  7180  0505  082B               	movf	?___ftadd+1,w
  7181  0506  00ED               	movwf	Fuzzy@aumenta+1
  7182  0507  082C               	movf	?___ftadd+2,w
  7183  0508  00EE               	movwf	Fuzzy@aumenta+2
  7184                           
  7185                           ;main.c: 259: }
  7186                           ;main.c: 261: x=x+1;
  7187  0509  3000               	movlw	0
  7188  050A  00AA               	movwf	___ftadd@f1
  7189  050B  3080               	movlw	128
  7190  050C  00AB               	movwf	___ftadd@f1+1
  7191  050D  303F               	movlw	63
  7192  050E  00AC               	movwf	___ftadd@f1+2
  7193  050F  1683               	bsf	3,5	;RP0=1, select bank1
  7194  0510  1303               	bcf	3,6	;RP1=0, select bank1
  7195  0511  0835               	movf	_x^(0+128),w
  7196  0512  1283               	bcf	3,5	;RP0=0, select bank0
  7197  0513  1303               	bcf	3,6	;RP1=0, select bank0
  7198  0514  00AD               	movwf	___ftadd@f2
  7199  0515  1683               	bsf	3,5	;RP0=1, select bank1
  7200  0516  1303               	bcf	3,6	;RP1=0, select bank1
  7201  0517  0836               	movf	(_x+1)^(0+128),w
  7202  0518  1283               	bcf	3,5	;RP0=0, select bank0
  7203  0519  1303               	bcf	3,6	;RP1=0, select bank0
  7204  051A  00AE               	movwf	___ftadd@f2+1
  7205  051B  1683               	bsf	3,5	;RP0=1, select bank1
  7206  051C  1303               	bcf	3,6	;RP1=0, select bank1
  7207  051D  0837               	movf	(_x+2)^(0+128),w
  7208  051E  1283               	bcf	3,5	;RP0=0, select bank0
  7209  051F  1303               	bcf	3,6	;RP1=0, select bank0
  7210  0520  00AF               	movwf	___ftadd@f2+2
  7211  0521  120A  118A  26F4  120A  118A  	fcall	___ftadd
  7212  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7213  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7214  0528  082A               	movf	?___ftadd,w
  7215  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7216  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7217  052B  00B5               	movwf	_x^(0+128)
  7218  052C  1283               	bcf	3,5	;RP0=0, select bank0
  7219  052D  1303               	bcf	3,6	;RP1=0, select bank0
  7220  052E  082B               	movf	?___ftadd+1,w
  7221  052F  1683               	bsf	3,5	;RP0=1, select bank1
  7222  0530  1303               	bcf	3,6	;RP1=0, select bank1
  7223  0531  00B6               	movwf	(_x+1)^(0+128)
  7224  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7225  0533  1303               	bcf	3,6	;RP1=0, select bank0
  7226  0534  082C               	movf	?___ftadd+2,w
  7227  0535  1683               	bsf	3,5	;RP0=1, select bank1
  7228  0536  1303               	bcf	3,6	;RP1=0, select bank1
  7229  0537  00B7               	movwf	(_x+2)^(0+128)
  7230  0538  3001               	movlw	1
  7231  0539  1283               	bcf	3,5	;RP0=0, select bank0
  7232  053A  1303               	bcf	3,6	;RP1=0, select bank0
  7233  053B  07DD               	addwf	Fuzzy@a_238,f
  7234  053C  1803               	skipnc
  7235  053D  0ADE               	incf	Fuzzy@a_238+1,f
  7236  053E  3000               	movlw	0
  7237  053F  07DE               	addwf	Fuzzy@a_238+1,f
  7238  0540  085E               	movf	Fuzzy@a_238+1,w
  7239  0541  3A80               	xorlw	128
  7240  0542  00FF               	movwf	127
  7241  0543  3080               	movlw	128
  7242  0544  027F               	subwf	127,w
  7243  0545  1D03               	skipz
  7244  0546  2D49               	goto	u349_25
  7245  0547  305B               	movlw	91
  7246  0548  025D               	subwf	Fuzzy@a_238,w
  7247  0549                     u349_25:	
  7248  0549  1C03               	skipc
  7249  054A  2C80               	goto	i1l2824
  7250  054B                     i1l2834:	
  7251                           
  7252                           ;main.c: 262: }
  7253                           ;main.c: 264: }
  7254                           ;main.c: 267: for (int a=0; a<1; a++)
  7255  054B  1283               	bcf	3,5	;RP0=0, select bank0
  7256  054C  1303               	bcf	3,6	;RP1=0, select bank0
  7257  054D  01DF               	clrf	Fuzzy@a_239
  7258  054E  01E0               	clrf	Fuzzy@a_239+1
  7259  054F  0860               	movf	Fuzzy@a_239+1,w
  7260  0550  3A80               	xorlw	128
  7261  0551  00FF               	movwf	127
  7262  0552  3080               	movlw	128
  7263  0553  027F               	subwf	127,w
  7264  0554  1D03               	skipz
  7265  0555  2D58               	goto	u350_25
  7266  0556  3001               	movlw	1
  7267  0557  025F               	subwf	Fuzzy@a_239,w
  7268  0558                     u350_25:	
  7269  0558  1803               	btfsc	3,0
  7270  0559  2DC2               	goto	i1l2854
  7271  055A                     i1l2840:	
  7272                           
  7273                           ;main.c: 268: {
  7274                           ;main.c: 269: if (temp < 25)
  7275  055A  1683               	bsf	3,5	;RP0=1, select bank1
  7276  055B  1303               	bcf	3,6	;RP1=0, select bank1
  7277  055C  082F               	movf	_temp^(0+128),w
  7278  055D  00F0               	movwf	___ftge@ff1
  7279  055E  0830               	movf	(_temp+1)^(0+128),w
  7280  055F  00F1               	movwf	___ftge@ff1+1
  7281  0560  0831               	movf	(_temp+2)^(0+128),w
  7282  0561  00F2               	movwf	___ftge@ff1+2
  7283  0562  3000               	movlw	0
  7284  0563  00F3               	movwf	___ftge@ff2
  7285  0564  30C8               	movlw	200
  7286  0565  00F4               	movwf	___ftge@ff2+1
  7287  0566  3041               	movlw	65
  7288  0567  00F5               	movwf	___ftge@ff2+2
  7289  0568  160A  118A  23D9  120A  118A  	fcall	___ftge
  7290  056D  1803               	btfsc	3,0
  7291  056E  2D77               	goto	i1l2844
  7292                           
  7293                           ;main.c: 270: {
  7294                           ;main.c: 271: tip = mantem;
  7295  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7296  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7297  0571  0866               	movf	Fuzzy@mantem,w
  7298  0572  00E3               	movwf	Fuzzy@tip
  7299  0573  0867               	movf	Fuzzy@mantem+1,w
  7300  0574  00E4               	movwf	Fuzzy@tip+1
  7301  0575  0868               	movf	Fuzzy@mantem+2,w
  7302  0576  2DB0               	goto	L7
  7303  0577                     i1l2844:	
  7304                           ;main.c: 272: }else
  7305                           
  7306                           
  7307                           ;main.c: 273: if (temp >= 25 && temp < 75)
  7308  0577  1683               	bsf	3,5	;RP0=1, select bank1
  7309  0578  1303               	bcf	3,6	;RP1=0, select bank1
  7310  0579  082F               	movf	_temp^(0+128),w
  7311  057A  00F0               	movwf	___ftge@ff1
  7312  057B  0830               	movf	(_temp+1)^(0+128),w
  7313  057C  00F1               	movwf	___ftge@ff1+1
  7314  057D  0831               	movf	(_temp+2)^(0+128),w
  7315  057E  00F2               	movwf	___ftge@ff1+2
  7316  057F  3000               	movlw	0
  7317  0580  00F3               	movwf	___ftge@ff2
  7318  0581  30C8               	movlw	200
  7319  0582  00F4               	movwf	___ftge@ff2+1
  7320  0583  3041               	movlw	65
  7321  0584  00F5               	movwf	___ftge@ff2+2
  7322  0585  160A  118A  23D9  120A  118A  	fcall	___ftge
  7323  058A  1C03               	btfss	3,0
  7324  058B  2DA9               	goto	i1l2850
  7325  058C  1683               	bsf	3,5	;RP0=1, select bank1
  7326  058D  1303               	bcf	3,6	;RP1=0, select bank1
  7327  058E  082F               	movf	_temp^(0+128),w
  7328  058F  00F0               	movwf	___ftge@ff1
  7329  0590  0830               	movf	(_temp+1)^(0+128),w
  7330  0591  00F1               	movwf	___ftge@ff1+1
  7331  0592  0831               	movf	(_temp+2)^(0+128),w
  7332  0593  00F2               	movwf	___ftge@ff1+2
  7333  0594  3000               	movlw	0
  7334  0595  00F3               	movwf	___ftge@ff2
  7335  0596  3096               	movlw	150
  7336  0597  00F4               	movwf	___ftge@ff2+1
  7337  0598  3042               	movlw	66
  7338  0599  00F5               	movwf	___ftge@ff2+2
  7339  059A  160A  118A  23D9  120A  118A  	fcall	___ftge
  7340  059F  1803               	btfsc	3,0
  7341  05A0  2DA9               	goto	i1l2850
  7342                           
  7343                           ;main.c: 274: {
  7344                           ;main.c: 275: tip = reduz;
  7345  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  7346  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  7347  05A3  0869               	movf	Fuzzy@reduz,w
  7348  05A4  00E3               	movwf	Fuzzy@tip
  7349  05A5  086A               	movf	Fuzzy@reduz+1,w
  7350  05A6  00E4               	movwf	Fuzzy@tip+1
  7351  05A7  086B               	movf	Fuzzy@reduz+2,w
  7352  05A8  2DB0               	goto	L7
  7353  05A9                     i1l2850:	
  7354                           ;main.c: 276: }else
  7355                           
  7356                           
  7357                           ;main.c: 277: {
  7358                           ;main.c: 278: tip = aumenta;
  7359  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  7360  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  7361  05AB  086C               	movf	Fuzzy@aumenta,w
  7362  05AC  00E3               	movwf	Fuzzy@tip
  7363  05AD  086D               	movf	Fuzzy@aumenta+1,w
  7364  05AE  00E4               	movwf	Fuzzy@tip+1
  7365  05AF  086E               	movf	Fuzzy@aumenta+2,w
  7366  05B0                     L7:	
  7367  05B0  00E5               	movwf	Fuzzy@tip+2
  7368  05B1  3001               	movlw	1
  7369  05B2  07DF               	addwf	Fuzzy@a_239,f
  7370  05B3  1803               	skipnc
  7371  05B4  0AE0               	incf	Fuzzy@a_239+1,f
  7372  05B5  3000               	movlw	0
  7373  05B6  07E0               	addwf	Fuzzy@a_239+1,f
  7374  05B7  0860               	movf	Fuzzy@a_239+1,w
  7375  05B8  3A80               	xorlw	128
  7376  05B9  00FF               	movwf	127
  7377  05BA  3080               	movlw	128
  7378  05BB  027F               	subwf	127,w
  7379  05BC  1D03               	skipz
  7380  05BD  2DC0               	goto	u354_25
  7381  05BE  3001               	movlw	1
  7382  05BF  025F               	subwf	Fuzzy@a_239,w
  7383  05C0                     u354_25:	
  7384  05C0  1C03               	skipc
  7385  05C1  2D5A               	goto	i1l2840
  7386  05C2                     i1l2854:	
  7387                           
  7388                           ;main.c: 279: }
  7389                           ;main.c: 280: }
  7390                           ;main.c: 283: x = 0;
  7391  05C2  3000               	movlw	0
  7392  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  7393  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  7394  05C5  00B5               	movwf	_x^(0+128)
  7395  05C6  3000               	movlw	0
  7396  05C7  00B6               	movwf	(_x+1)^(0+128)
  7397  05C8  3000               	movlw	0
  7398  05C9  00B7               	movwf	(_x+2)^(0+128)
  7399                           
  7400                           ;main.c: 284: total_area = 0;
  7401  05CA  3000               	movlw	0
  7402  05CB  00B2               	movwf	_total_area^(0+128)
  7403  05CC  3000               	movlw	0
  7404  05CD  00B3               	movwf	(_total_area+1)^(0+128)
  7405  05CE  3000               	movlw	0
  7406  05CF  00B4               	movwf	(_total_area+2)^(0+128)
  7407                           
  7408                           ;main.c: 285: sum = 0;
  7409  05D0  3000               	movlw	0
  7410  05D1  00AC               	movwf	_sum^(0+128)
  7411  05D2  3000               	movlw	0
  7412  05D3  00AD               	movwf	(_sum+1)^(0+128)
  7413  05D4  3000               	movlw	0
  7414  05D5  00AE               	movwf	(_sum+2)^(0+128)
  7415                           
  7416                           ;main.c: 286: for (int a=0; a<1; a++)
  7417  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  7418  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  7419  05D8  01E1               	clrf	Fuzzy@a_240
  7420  05D9  01E2               	clrf	Fuzzy@a_240+1
  7421  05DA  0862               	movf	Fuzzy@a_240+1,w
  7422  05DB  3A80               	xorlw	128
  7423  05DC  00FF               	movwf	127
  7424  05DD  3080               	movlw	128
  7425  05DE  027F               	subwf	127,w
  7426  05DF  1D03               	skipz
  7427  05E0  2DE3               	goto	u355_25
  7428  05E1  3001               	movlw	1
  7429  05E2  0261               	subwf	Fuzzy@a_240,w
  7430  05E3                     u355_25:	
  7431  05E3  1803               	btfsc	3,0
  7432  05E4  2E9C               	goto	i1l2868
  7433  05E5                     i1l2862:	
  7434                           
  7435                           ;main.c: 287: {
  7436                           ;main.c: 288: total_area = total_area + tip;
  7437  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  7438  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  7439  05E7  0863               	movf	Fuzzy@tip,w
  7440  05E8  00AA               	movwf	___ftadd@f1
  7441  05E9  0864               	movf	Fuzzy@tip+1,w
  7442  05EA  00AB               	movwf	___ftadd@f1+1
  7443  05EB  0865               	movf	Fuzzy@tip+2,w
  7444  05EC  00AC               	movwf	___ftadd@f1+2
  7445  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  7446  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  7447  05EF  0832               	movf	_total_area^(0+128),w
  7448  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  7449  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  7450  05F2  00AD               	movwf	___ftadd@f2
  7451  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  7452  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  7453  05F5  0833               	movf	(_total_area+1)^(0+128),w
  7454  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7455  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7456  05F8  00AE               	movwf	___ftadd@f2+1
  7457  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  7458  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  7459  05FB  0834               	movf	(_total_area+2)^(0+128),w
  7460  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  7461  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  7462  05FE  00AF               	movwf	___ftadd@f2+2
  7463  05FF  120A  118A  26F4  120A  118A  	fcall	___ftadd
  7464  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0606  082A               	movf	?___ftadd,w
  7467  0607  1683               	bsf	3,5	;RP0=1, select bank1
  7468  0608  1303               	bcf	3,6	;RP1=0, select bank1
  7469  0609  00B2               	movwf	_total_area^(0+128)
  7470  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7471  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7472  060C  082B               	movf	?___ftadd+1,w
  7473  060D  1683               	bsf	3,5	;RP0=1, select bank1
  7474  060E  1303               	bcf	3,6	;RP1=0, select bank1
  7475  060F  00B3               	movwf	(_total_area+1)^(0+128)
  7476  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7477  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7478  0612  082C               	movf	?___ftadd+2,w
  7479  0613  1683               	bsf	3,5	;RP0=1, select bank1
  7480  0614  1303               	bcf	3,6	;RP1=0, select bank1
  7481  0615  00B4               	movwf	(_total_area+2)^(0+128)
  7482                           
  7483                           ;main.c: 289: sum = sum + (x * tip);
  7484  0616  082C               	movf	_sum^(0+128),w
  7485  0617  1283               	bcf	3,5	;RP0=0, select bank0
  7486  0618  1303               	bcf	3,6	;RP1=0, select bank0
  7487  0619  00AA               	movwf	___ftadd@f1
  7488  061A  1683               	bsf	3,5	;RP0=1, select bank1
  7489  061B  1303               	bcf	3,6	;RP1=0, select bank1
  7490  061C  082D               	movf	(_sum+1)^(0+128),w
  7491  061D  1283               	bcf	3,5	;RP0=0, select bank0
  7492  061E  1303               	bcf	3,6	;RP1=0, select bank0
  7493  061F  00AB               	movwf	___ftadd@f1+1
  7494  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7495  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7496  0622  082E               	movf	(_sum+2)^(0+128),w
  7497  0623  1283               	bcf	3,5	;RP0=0, select bank0
  7498  0624  1303               	bcf	3,6	;RP1=0, select bank0
  7499  0625  00AC               	movwf	___ftadd@f1+2
  7500  0626  0863               	movf	Fuzzy@tip,w
  7501  0627  00F8               	movwf	___ftmul@f1
  7502  0628  0864               	movf	Fuzzy@tip+1,w
  7503  0629  00F9               	movwf	___ftmul@f1+1
  7504  062A  0865               	movf	Fuzzy@tip+2,w
  7505  062B  00FA               	movwf	___ftmul@f1+2
  7506  062C  1683               	bsf	3,5	;RP0=1, select bank1
  7507  062D  1303               	bcf	3,6	;RP1=0, select bank1
  7508  062E  0835               	movf	_x^(0+128),w
  7509  062F  00FB               	movwf	___ftmul@f2
  7510  0630  0836               	movf	(_x+1)^(0+128),w
  7511  0631  00FC               	movwf	___ftmul@f2+1
  7512  0632  0837               	movf	(_x+2)^(0+128),w
  7513  0633  00FD               	movwf	___ftmul@f2+2
  7514  0634  120A  158A  2052  120A  118A  	fcall	___ftmul
  7515  0639  0878               	movf	?___ftmul,w
  7516  063A  1283               	bcf	3,5	;RP0=0, select bank0
  7517  063B  1303               	bcf	3,6	;RP1=0, select bank0
  7518  063C  00AD               	movwf	___ftadd@f2
  7519  063D  0879               	movf	?___ftmul+1,w
  7520  063E  00AE               	movwf	___ftadd@f2+1
  7521  063F  087A               	movf	?___ftmul+2,w
  7522  0640  00AF               	movwf	___ftadd@f2+2
  7523  0641  120A  118A  26F4  120A  118A  	fcall	___ftadd
  7524  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7525  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7526  0648  082A               	movf	?___ftadd,w
  7527  0649  1683               	bsf	3,5	;RP0=1, select bank1
  7528  064A  1303               	bcf	3,6	;RP1=0, select bank1
  7529  064B  00AC               	movwf	_sum^(0+128)
  7530  064C  1283               	bcf	3,5	;RP0=0, select bank0
  7531  064D  1303               	bcf	3,6	;RP1=0, select bank0
  7532  064E  082B               	movf	?___ftadd+1,w
  7533  064F  1683               	bsf	3,5	;RP0=1, select bank1
  7534  0650  1303               	bcf	3,6	;RP1=0, select bank1
  7535  0651  00AD               	movwf	(_sum+1)^(0+128)
  7536  0652  1283               	bcf	3,5	;RP0=0, select bank0
  7537  0653  1303               	bcf	3,6	;RP1=0, select bank0
  7538  0654  082C               	movf	?___ftadd+2,w
  7539  0655  1683               	bsf	3,5	;RP0=1, select bank1
  7540  0656  1303               	bcf	3,6	;RP1=0, select bank1
  7541  0657  00AE               	movwf	(_sum+2)^(0+128)
  7542                           
  7543                           ;main.c: 291: x=x+1;
  7544  0658  3000               	movlw	0
  7545  0659  1283               	bcf	3,5	;RP0=0, select bank0
  7546  065A  1303               	bcf	3,6	;RP1=0, select bank0
  7547  065B  00AA               	movwf	___ftadd@f1
  7548  065C  3080               	movlw	128
  7549  065D  00AB               	movwf	___ftadd@f1+1
  7550  065E  303F               	movlw	63
  7551  065F  00AC               	movwf	___ftadd@f1+2
  7552  0660  1683               	bsf	3,5	;RP0=1, select bank1
  7553  0661  1303               	bcf	3,6	;RP1=0, select bank1
  7554  0662  0835               	movf	_x^(0+128),w
  7555  0663  1283               	bcf	3,5	;RP0=0, select bank0
  7556  0664  1303               	bcf	3,6	;RP1=0, select bank0
  7557  0665  00AD               	movwf	___ftadd@f2
  7558  0666  1683               	bsf	3,5	;RP0=1, select bank1
  7559  0667  1303               	bcf	3,6	;RP1=0, select bank1
  7560  0668  0836               	movf	(_x+1)^(0+128),w
  7561  0669  1283               	bcf	3,5	;RP0=0, select bank0
  7562  066A  1303               	bcf	3,6	;RP1=0, select bank0
  7563  066B  00AE               	movwf	___ftadd@f2+1
  7564  066C  1683               	bsf	3,5	;RP0=1, select bank1
  7565  066D  1303               	bcf	3,6	;RP1=0, select bank1
  7566  066E  0837               	movf	(_x+2)^(0+128),w
  7567  066F  1283               	bcf	3,5	;RP0=0, select bank0
  7568  0670  1303               	bcf	3,6	;RP1=0, select bank0
  7569  0671  00AF               	movwf	___ftadd@f2+2
  7570  0672  120A  118A  26F4  120A  118A  	fcall	___ftadd
  7571  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7572  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7573  0679  082A               	movf	?___ftadd,w
  7574  067A  1683               	bsf	3,5	;RP0=1, select bank1
  7575  067B  1303               	bcf	3,6	;RP1=0, select bank1
  7576  067C  00B5               	movwf	_x^(0+128)
  7577  067D  1283               	bcf	3,5	;RP0=0, select bank0
  7578  067E  1303               	bcf	3,6	;RP1=0, select bank0
  7579  067F  082B               	movf	?___ftadd+1,w
  7580  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7581  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7582  0682  00B6               	movwf	(_x+1)^(0+128)
  7583  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7584  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7585  0685  082C               	movf	?___ftadd+2,w
  7586  0686  1683               	bsf	3,5	;RP0=1, select bank1
  7587  0687  1303               	bcf	3,6	;RP1=0, select bank1
  7588  0688  00B7               	movwf	(_x+2)^(0+128)
  7589  0689  3001               	movlw	1
  7590  068A  1283               	bcf	3,5	;RP0=0, select bank0
  7591  068B  1303               	bcf	3,6	;RP1=0, select bank0
  7592  068C  07E1               	addwf	Fuzzy@a_240,f
  7593  068D  1803               	skipnc
  7594  068E  0AE2               	incf	Fuzzy@a_240+1,f
  7595  068F  3000               	movlw	0
  7596  0690  07E2               	addwf	Fuzzy@a_240+1,f
  7597  0691  0862               	movf	Fuzzy@a_240+1,w
  7598  0692  3A80               	xorlw	128
  7599  0693  00FF               	movwf	127
  7600  0694  3080               	movlw	128
  7601  0695  027F               	subwf	127,w
  7602  0696  1D03               	skipz
  7603  0697  2E9A               	goto	u356_25
  7604  0698  3001               	movlw	1
  7605  0699  0261               	subwf	Fuzzy@a_240,w
  7606  069A                     u356_25:	
  7607  069A  1C03               	skipc
  7608  069B  2DE5               	goto	i1l2862
  7609  069C                     i1l2868:	
  7610                           
  7611                           ;main.c: 292: }
  7612                           ;main.c: 295: ativa_fan = sum/total_area;
  7613  069C  1683               	bsf	3,5	;RP0=1, select bank1
  7614  069D  1303               	bcf	3,6	;RP1=0, select bank1
  7615  069E  0832               	movf	_total_area^(0+128),w
  7616  069F  1283               	bcf	3,5	;RP0=0, select bank0
  7617  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  7618  06A1  00B7               	movwf	___ftdiv@f2
  7619  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  7620  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  7621  06A4  0833               	movf	(_total_area+1)^(0+128),w
  7622  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7623  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7624  06A7  00B8               	movwf	___ftdiv@f2+1
  7625  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  7626  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  7627  06AA  0834               	movf	(_total_area+2)^(0+128),w
  7628  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  7629  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  7630  06AD  00B9               	movwf	___ftdiv@f2+2
  7631  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  7632  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  7633  06B0  082C               	movf	_sum^(0+128),w
  7634  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  7635  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  7636  06B3  00BA               	movwf	___ftdiv@f1
  7637  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  7638  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  7639  06B6  082D               	movf	(_sum+1)^(0+128),w
  7640  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  7641  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  7642  06B9  00BB               	movwf	___ftdiv@f1+1
  7643  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  7644  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  7645  06BC  082E               	movf	(_sum+2)^(0+128),w
  7646  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7647  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7648  06BF  00BC               	movwf	___ftdiv@f1+2
  7649  06C0  160A  118A  2624  120A  118A  	fcall	___ftdiv
  7650  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  7651  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  7652  06C7  0837               	movf	?___ftdiv,w
  7653  06C8  1683               	bsf	3,5	;RP0=1, select bank3
  7654  06C9  1703               	bsf	3,6	;RP1=1, select bank3
  7655  06CA  0090               	movwf	_ativa_fan^(0+384)
  7656  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  7657  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  7658  06CD  0838               	movf	?___ftdiv+1,w
  7659  06CE  1683               	bsf	3,5	;RP0=1, select bank3
  7660  06CF  1703               	bsf	3,6	;RP1=1, select bank3
  7661  06D0  0091               	movwf	(_ativa_fan+1)^(0+384)
  7662  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  7663  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  7664  06D3  0839               	movf	?___ftdiv+2,w
  7665  06D4  1683               	bsf	3,5	;RP0=1, select bank3
  7666  06D5  1703               	bsf	3,6	;RP1=1, select bank3
  7667  06D6  0092               	movwf	(_ativa_fan+2)^(0+384)
  7668                           
  7669                           ;main.c: 296: posicao_do_grafico = ativa_fan;
  7670  06D7  0810               	movf	_ativa_fan^(0+384),w
  7671  06D8  009C               	movwf	_posicao_do_grafico^(0+384)
  7672  06D9  0811               	movf	(_ativa_fan+1)^(0+384),w
  7673  06DA  009D               	movwf	(_posicao_do_grafico+1)^(0+384)
  7674  06DB  0812               	movf	(_ativa_fan+2)^(0+384),w
  7675  06DC  009E               	movwf	(_posicao_do_grafico+2)^(0+384)
  7676                           
  7677                           ;main.c: 300: if (deltaV >0 && deltaV < 1020)
  7678  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  7679  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  7680  06DF  0840               	movf	(_deltaV+1)^(0+128),w
  7681  06E0  043F               	iorwf	_deltaV^(0+128),w
  7682  06E1  1903               	skipnz
  7683  06E2  0008               	return
  7684  06E3  3003               	movlw	3
  7685  06E4  0240               	subwf	(_deltaV+1)^(0+128),w
  7686  06E5  30FC               	movlw	252
  7687  06E6  1903               	skipnz
  7688  06E7  023F               	subwf	_deltaV^(0+128),w
  7689  06E8  1803               	skipnc
  7690  06E9  0008               	return
  7691                           
  7692                           ;main.c: 301: {
  7693                           ;main.c: 302: PWM_DutyCycle2(deltaV);
  7694  06EA  0840               	movf	(_deltaV+1)^(0+128),w
  7695  06EB  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7696  06EC  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7697  06ED  083F               	movf	_deltaV^(0+128),w
  7698  06EE  01F0               	clrf	i1PWM_DutyCycle2@valor
  7699  06EF  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7700  06F0  160A  118A  2155   	fcall	i1_PWM_DutyCycle2
  7701  06F3  0008               	return
  7702  06F4                     __end_of_Fuzzy:	
  7703                           
  7704                           	psect	text30
  7705  1155                     __ptext30:	
  7706 ;; *************** function i1_PWM_DutyCycle2 *****************
  7707 ;; Defined at:
  7708 ;;		line 96 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\pwm.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  valor           2    0[COMMON] int 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;		None               void
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7722 ;;      Params:         2       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0
  7724 ;;      Temps:          2       0       0       0       0
  7725 ;;      Totals:         4       0       0       0       0
  7726 ;;Total ram usage:        4 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_Fuzzy
  7732 ;;		_ISR
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function i1_PWM_DutyCycle2
  7738  1155                     i1_PWM_DutyCycle2:	
  7739                           
  7740                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7741                           
  7742                           ;incstack = 0
  7743                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7744  1155  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7745  1156  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7746  1157  0870               	movf	i1PWM_DutyCycle2@valor,w
  7747  1158  00F2               	movwf	??i1_PWM_DutyCycle2
  7748  1159  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7749  115A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7750  115B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7751  115C  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7752  115D  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7753  115E  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7754  115F  0872               	movf	??i1_PWM_DutyCycle2,w
  7755  1160  1283               	bcf	3,5	;RP0=0, select bank0
  7756  1161  1303               	bcf	3,6	;RP1=0, select bank0
  7757  1162  009B               	movwf	27	;volatile
  7758                           
  7759                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7760  1163  0870               	movf	i1PWM_DutyCycle2@valor,w
  7761  1164  00F2               	movwf	??i1_PWM_DutyCycle2
  7762  1165  3003               	movlw	3
  7763  1166                     u334_25:	
  7764  1166  1003               	clrc
  7765  1167  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7766  1168  3EFF               	addlw	-1
  7767  1169  1D03               	skipz
  7768  116A  2966               	goto	u334_25
  7769  116B  1003               	clrc
  7770  116C  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7771  116D  380C               	iorlw	12
  7772  116E  009D               	movwf	29	;volatile
  7773  116F  0008               	return
  7774  1170                     __end_ofi1_PWM_DutyCycle2:	
  7775                           
  7776                           	psect	text31
  7777  16DC                     __ptext31:	
  7778 ;; *************** function _trimf *****************
  7779 ;; Defined at:
  7780 ;;		line 80 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  x               3   39[BANK0 ] float 
  7783 ;;  a               3   42[BANK0 ] float 
  7784 ;;  b               3   45[BANK0 ] float 
  7785 ;;  c               3   48[BANK0 ] float 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  ua              3   51[BANK0 ] float 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  3   39[BANK0 ] float 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0, pclath, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7797 ;;      Params:         0      12       0       0       0
  7798 ;;      Locals:         0       3       0       0       0
  7799 ;;      Temps:          0       0       0       0       0
  7800 ;;      Totals:         0      15       0       0       0
  7801 ;;Total ram usage:       15 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    2
  7804 ;; This function calls:
  7805 ;;		___ftadd
  7806 ;;		___ftdiv
  7807 ;;		___ftge
  7808 ;;		___ftneg
  7809 ;; This function is called by:
  7810 ;;		_Fuzzy
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           
  7815                           ;psect for function _trimf
  7816  16DC                     _trimf:	
  7817                           
  7818                           ;main.c: 82: float ua = 0;
  7819                           
  7820                           ;incstack = 0
  7821                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7822  16DC  3000               	movlw	0
  7823  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  7824  16DE  1303               	bcf	3,6	;RP1=0, select bank0
  7825  16DF  00D3               	movwf	trimf@ua
  7826  16E0  3000               	movlw	0
  7827  16E1  00D4               	movwf	trimf@ua+1
  7828  16E2  3000               	movlw	0
  7829  16E3  00D5               	movwf	trimf@ua+2
  7830                           
  7831                           ;main.c: 84: if (x <= a)
  7832  16E4  084A               	movf	trimf@a,w
  7833  16E5  00F0               	movwf	___ftge@ff1
  7834  16E6  084B               	movf	trimf@a+1,w
  7835  16E7  00F1               	movwf	___ftge@ff1+1
  7836  16E8  084C               	movf	trimf@a+2,w
  7837  16E9  00F2               	movwf	___ftge@ff1+2
  7838  16EA  0847               	movf	trimf@x,w
  7839  16EB  00F3               	movwf	___ftge@ff2
  7840  16EC  0848               	movf	trimf@x+1,w
  7841  16ED  00F4               	movwf	___ftge@ff2+1
  7842  16EE  0849               	movf	trimf@x+2,w
  7843  16EF  00F5               	movwf	___ftge@ff2+2
  7844  16F0  160A  118A  23D9  160A  118A  	fcall	___ftge
  7845  16F5  1803               	btfsc	3,0
  7846  16F6  2FEF               	goto	L12
  7847                           
  7848                           ;main.c: 86: else if ((a < x) && (x <= b))
  7849                           
  7850                           ;main.c: 85: ua = 0;
  7851  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7852  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  7853  16F9  084A               	movf	trimf@a,w
  7854  16FA  00F0               	movwf	___ftge@ff1
  7855  16FB  084B               	movf	trimf@a+1,w
  7856  16FC  00F1               	movwf	___ftge@ff1+1
  7857  16FD  084C               	movf	trimf@a+2,w
  7858  16FE  00F2               	movwf	___ftge@ff1+2
  7859  16FF  0847               	movf	trimf@x,w
  7860  1700  00F3               	movwf	___ftge@ff2
  7861  1701  0848               	movf	trimf@x+1,w
  7862  1702  00F4               	movwf	___ftge@ff2+1
  7863  1703  0849               	movf	trimf@x+2,w
  7864  1704  00F5               	movwf	___ftge@ff2+2
  7865  1705  160A  118A  23D9  160A  118A  	fcall	___ftge
  7866  170A  1803               	btfsc	3,0
  7867  170B  2F55               	goto	i1l2450
  7868  170C  1283               	bcf	3,5	;RP0=0, select bank0
  7869  170D  1303               	bcf	3,6	;RP1=0, select bank0
  7870  170E  084D               	movf	trimf@b,w
  7871  170F  00F0               	movwf	___ftge@ff1
  7872  1710  084E               	movf	trimf@b+1,w
  7873  1711  00F1               	movwf	___ftge@ff1+1
  7874  1712  084F               	movf	trimf@b+2,w
  7875  1713  00F2               	movwf	___ftge@ff1+2
  7876  1714  0847               	movf	trimf@x,w
  7877  1715  00F3               	movwf	___ftge@ff2
  7878  1716  0848               	movf	trimf@x+1,w
  7879  1717  00F4               	movwf	___ftge@ff2+1
  7880  1718  0849               	movf	trimf@x+2,w
  7881  1719  00F5               	movwf	___ftge@ff2+2
  7882  171A  160A  118A  23D9  160A  118A  	fcall	___ftge
  7883  171F  1C03               	btfss	3,0
  7884  1720  2F55               	goto	i1l2450
  7885                           
  7886                           ;main.c: 87: ua = ((x - a) / (b - a));
  7887  1721  1283               	bcf	3,5	;RP0=0, select bank0
  7888  1722  1303               	bcf	3,6	;RP1=0, select bank0
  7889  1723  084D               	movf	trimf@b,w
  7890  1724  00AA               	movwf	___ftadd@f1
  7891  1725  084E               	movf	trimf@b+1,w
  7892  1726  00AB               	movwf	___ftadd@f1+1
  7893  1727  084F               	movf	trimf@b+2,w
  7894  1728  00AC               	movwf	___ftadd@f1+2
  7895  1729  084A               	movf	trimf@a,w
  7896  172A  00F0               	movwf	___ftneg@f1
  7897  172B  084B               	movf	trimf@a+1,w
  7898  172C  00F1               	movwf	___ftneg@f1+1
  7899  172D  084C               	movf	trimf@a+2,w
  7900  172E  00F2               	movwf	___ftneg@f1+2
  7901  172F  160A  118A  20C1  160A  118A  	fcall	___ftneg
  7902  1734  0870               	movf	?___ftneg,w
  7903  1735  1283               	bcf	3,5	;RP0=0, select bank0
  7904  1736  1303               	bcf	3,6	;RP1=0, select bank0
  7905  1737  00AD               	movwf	___ftadd@f2
  7906  1738  0871               	movf	?___ftneg+1,w
  7907  1739  00AE               	movwf	___ftadd@f2+1
  7908  173A  0872               	movf	?___ftneg+2,w
  7909  173B  00AF               	movwf	___ftadd@f2+2
  7910  173C  120A  118A  26F4  160A  118A  	fcall	___ftadd
  7911  1741  1283               	bcf	3,5	;RP0=0, select bank0
  7912  1742  1303               	bcf	3,6	;RP1=0, select bank0
  7913  1743  082A               	movf	?___ftadd,w
  7914  1744  00B7               	movwf	___ftdiv@f2
  7915  1745  082B               	movf	?___ftadd+1,w
  7916  1746  00B8               	movwf	___ftdiv@f2+1
  7917  1747  082C               	movf	?___ftadd+2,w
  7918  1748  00B9               	movwf	___ftdiv@f2+2
  7919  1749  0847               	movf	trimf@x,w
  7920  174A  00AA               	movwf	___ftadd@f1
  7921  174B  0848               	movf	trimf@x+1,w
  7922  174C  00AB               	movwf	___ftadd@f1+1
  7923  174D  0849               	movf	trimf@x+2,w
  7924  174E  00AC               	movwf	___ftadd@f1+2
  7925  174F  084A               	movf	trimf@a,w
  7926  1750  00F0               	movwf	___ftneg@f1
  7927  1751  084B               	movf	trimf@a+1,w
  7928  1752  00F1               	movwf	___ftneg@f1+1
  7929  1753  084C               	movf	trimf@a+2,w
  7930  1754  2FB2               	goto	L13
  7931  1755                     i1l2450:	
  7932                           
  7933                           ;main.c: 88: else if ((b < x) && (x <= c))
  7934  1755  1283               	bcf	3,5	;RP0=0, select bank0
  7935  1756  1303               	bcf	3,6	;RP1=0, select bank0
  7936  1757  084D               	movf	trimf@b,w
  7937  1758  00F0               	movwf	___ftge@ff1
  7938  1759  084E               	movf	trimf@b+1,w
  7939  175A  00F1               	movwf	___ftge@ff1+1
  7940  175B  084F               	movf	trimf@b+2,w
  7941  175C  00F2               	movwf	___ftge@ff1+2
  7942  175D  0847               	movf	trimf@x,w
  7943  175E  00F3               	movwf	___ftge@ff2
  7944  175F  0848               	movf	trimf@x+1,w
  7945  1760  00F4               	movwf	___ftge@ff2+1
  7946  1761  0849               	movf	trimf@x+2,w
  7947  1762  00F5               	movwf	___ftge@ff2+2
  7948  1763  160A  118A  23D9  160A  118A  	fcall	___ftge
  7949  1768  1803               	btfsc	3,0
  7950  1769  2FDA               	goto	i1l2456
  7951  176A  1283               	bcf	3,5	;RP0=0, select bank0
  7952  176B  1303               	bcf	3,6	;RP1=0, select bank0
  7953  176C  0850               	movf	trimf@c,w
  7954  176D  00F0               	movwf	___ftge@ff1
  7955  176E  0851               	movf	trimf@c+1,w
  7956  176F  00F1               	movwf	___ftge@ff1+1
  7957  1770  0852               	movf	trimf@c+2,w
  7958  1771  00F2               	movwf	___ftge@ff1+2
  7959  1772  0847               	movf	trimf@x,w
  7960  1773  00F3               	movwf	___ftge@ff2
  7961  1774  0848               	movf	trimf@x+1,w
  7962  1775  00F4               	movwf	___ftge@ff2+1
  7963  1776  0849               	movf	trimf@x+2,w
  7964  1777  00F5               	movwf	___ftge@ff2+2
  7965  1778  160A  118A  23D9  160A  118A  	fcall	___ftge
  7966  177D  1C03               	btfss	3,0
  7967  177E  2FDA               	goto	i1l2456
  7968                           
  7969                           ;main.c: 89: ua = ((x - c) / (b - c));
  7970  177F  1283               	bcf	3,5	;RP0=0, select bank0
  7971  1780  1303               	bcf	3,6	;RP1=0, select bank0
  7972  1781  084D               	movf	trimf@b,w
  7973  1782  00AA               	movwf	___ftadd@f1
  7974  1783  084E               	movf	trimf@b+1,w
  7975  1784  00AB               	movwf	___ftadd@f1+1
  7976  1785  084F               	movf	trimf@b+2,w
  7977  1786  00AC               	movwf	___ftadd@f1+2
  7978  1787  0850               	movf	trimf@c,w
  7979  1788  00F0               	movwf	___ftneg@f1
  7980  1789  0851               	movf	trimf@c+1,w
  7981  178A  00F1               	movwf	___ftneg@f1+1
  7982  178B  0852               	movf	trimf@c+2,w
  7983  178C  00F2               	movwf	___ftneg@f1+2
  7984  178D  160A  118A  20C1  160A  118A  	fcall	___ftneg
  7985  1792  0870               	movf	?___ftneg,w
  7986  1793  1283               	bcf	3,5	;RP0=0, select bank0
  7987  1794  1303               	bcf	3,6	;RP1=0, select bank0
  7988  1795  00AD               	movwf	___ftadd@f2
  7989  1796  0871               	movf	?___ftneg+1,w
  7990  1797  00AE               	movwf	___ftadd@f2+1
  7991  1798  0872               	movf	?___ftneg+2,w
  7992  1799  00AF               	movwf	___ftadd@f2+2
  7993  179A  120A  118A  26F4  160A  118A  	fcall	___ftadd
  7994  179F  1283               	bcf	3,5	;RP0=0, select bank0
  7995  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  7996  17A1  082A               	movf	?___ftadd,w
  7997  17A2  00B7               	movwf	___ftdiv@f2
  7998  17A3  082B               	movf	?___ftadd+1,w
  7999  17A4  00B8               	movwf	___ftdiv@f2+1
  8000  17A5  082C               	movf	?___ftadd+2,w
  8001  17A6  00B9               	movwf	___ftdiv@f2+2
  8002  17A7  0847               	movf	trimf@x,w
  8003  17A8  00AA               	movwf	___ftadd@f1
  8004  17A9  0848               	movf	trimf@x+1,w
  8005  17AA  00AB               	movwf	___ftadd@f1+1
  8006  17AB  0849               	movf	trimf@x+2,w
  8007  17AC  00AC               	movwf	___ftadd@f1+2
  8008  17AD  0850               	movf	trimf@c,w
  8009  17AE  00F0               	movwf	___ftneg@f1
  8010  17AF  0851               	movf	trimf@c+1,w
  8011  17B0  00F1               	movwf	___ftneg@f1+1
  8012  17B1  0852               	movf	trimf@c+2,w
  8013  17B2                     L13:	
  8014  17B2  00F2               	movwf	___ftneg@f1+2
  8015  17B3  160A  118A  20C1  160A  118A  	fcall	___ftneg
  8016  17B8  0870               	movf	?___ftneg,w
  8017  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  8018  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  8019  17BB  00AD               	movwf	___ftadd@f2
  8020  17BC  0871               	movf	?___ftneg+1,w
  8021  17BD  00AE               	movwf	___ftadd@f2+1
  8022  17BE  0872               	movf	?___ftneg+2,w
  8023  17BF  00AF               	movwf	___ftadd@f2+2
  8024  17C0  120A  118A  26F4  160A  118A  	fcall	___ftadd
  8025  17C5  1283               	bcf	3,5	;RP0=0, select bank0
  8026  17C6  1303               	bcf	3,6	;RP1=0, select bank0
  8027  17C7  082A               	movf	?___ftadd,w
  8028  17C8  00BA               	movwf	___ftdiv@f1
  8029  17C9  082B               	movf	?___ftadd+1,w
  8030  17CA  00BB               	movwf	___ftdiv@f1+1
  8031  17CB  082C               	movf	?___ftadd+2,w
  8032  17CC  00BC               	movwf	___ftdiv@f1+2
  8033  17CD  160A  118A  2624  160A  118A  	fcall	___ftdiv
  8034  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  8035  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  8036  17D4  0837               	movf	?___ftdiv,w
  8037  17D5  00D3               	movwf	trimf@ua
  8038  17D6  0838               	movf	?___ftdiv+1,w
  8039  17D7  00D4               	movwf	trimf@ua+1
  8040  17D8  0839               	movf	?___ftdiv+2,w
  8041  17D9  2FF6               	goto	L10
  8042  17DA                     i1l2456:	
  8043                           
  8044                           ;main.c: 90: else if (x > c)
  8045  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  8046  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  8047  17DC  0850               	movf	trimf@c,w
  8048  17DD  00F0               	movwf	___ftge@ff1
  8049  17DE  0851               	movf	trimf@c+1,w
  8050  17DF  00F1               	movwf	___ftge@ff1+1
  8051  17E0  0852               	movf	trimf@c+2,w
  8052  17E1  00F2               	movwf	___ftge@ff1+2
  8053  17E2  0847               	movf	trimf@x,w
  8054  17E3  00F3               	movwf	___ftge@ff2
  8055  17E4  0848               	movf	trimf@x+1,w
  8056  17E5  00F4               	movwf	___ftge@ff2+1
  8057  17E6  0849               	movf	trimf@x+2,w
  8058  17E7  00F5               	movwf	___ftge@ff2+2
  8059  17E8  160A  118A  23D9  160A  118A  	fcall	___ftge
  8060  17ED  1803               	btfsc	3,0
  8061  17EE  2FF7               	goto	i1l128
  8062  17EF                     L12:	
  8063                           
  8064                           ;main.c: 91: ua = 0;
  8065  17EF  3000               	movlw	0
  8066  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  8067  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  8068  17F2  00D3               	movwf	trimf@ua
  8069  17F3  3000               	movlw	0
  8070  17F4  00D4               	movwf	trimf@ua+1
  8071  17F5  3000               	movlw	0
  8072  17F6                     L10:	
  8073  17F6  00D5               	movwf	trimf@ua+2
  8074  17F7                     i1l128:	
  8075                           
  8076                           ;main.c: 93: return(ua);
  8077  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  8078  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  8079  17F9  0853               	movf	trimf@ua,w
  8080  17FA  00C7               	movwf	?_trimf
  8081  17FB  0854               	movf	trimf@ua+1,w
  8082  17FC  00C8               	movwf	?_trimf+1
  8083  17FD  0855               	movf	trimf@ua+2,w
  8084  17FE  00C9               	movwf	?_trimf+2
  8085  17FF  0008               	return
  8086  1800                     __end_of_trimf:	
  8087                           
  8088                           	psect	text32
  8089  0A6C                     __ptext32:	
  8090 ;; *************** function _trapmf *****************
  8091 ;; Defined at:
  8092 ;;		line 99 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  x               3   39[BANK0 ] float 
  8095 ;;  a               3   42[BANK0 ] float 
  8096 ;;  b               3   45[BANK0 ] float 
  8097 ;;  c               3   48[BANK0 ] float 
  8098 ;;  d               3   51[BANK0 ] float 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  ua              3   54[BANK0 ] float 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  3   39[BANK0 ] float 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0, pclath, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8110 ;;      Params:         0      15       0       0       0
  8111 ;;      Locals:         0       3       0       0       0
  8112 ;;      Temps:          0       0       0       0       0
  8113 ;;      Totals:         0      18       0       0       0
  8114 ;;Total ram usage:       18 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    2
  8117 ;; This function calls:
  8118 ;;		___ftadd
  8119 ;;		___ftdiv
  8120 ;;		___ftge
  8121 ;;		___ftneg
  8122 ;; This function is called by:
  8123 ;;		_Fuzzy
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _trapmf
  8129  0A6C                     _trapmf:	
  8130                           
  8131                           ;main.c: 101: float ua = 0;
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  8135  0A6C  3000               	movlw	0
  8136  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  8137  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  8138  0A6F  00D6               	movwf	trapmf@ua
  8139  0A70  3000               	movlw	0
  8140  0A71  00D7               	movwf	trapmf@ua+1
  8141  0A72  3000               	movlw	0
  8142  0A73  00D8               	movwf	trapmf@ua+2
  8143                           
  8144                           ;main.c: 103: if (x <= a)
  8145  0A74  084A               	movf	trapmf@a,w
  8146  0A75  00F0               	movwf	___ftge@ff1
  8147  0A76  084B               	movf	trapmf@a+1,w
  8148  0A77  00F1               	movwf	___ftge@ff1+1
  8149  0A78  084C               	movf	trapmf@a+2,w
  8150  0A79  00F2               	movwf	___ftge@ff1+2
  8151  0A7A  0847               	movf	trapmf@x,w
  8152  0A7B  00F3               	movwf	___ftge@ff2
  8153  0A7C  0848               	movf	trapmf@x+1,w
  8154  0A7D  00F4               	movwf	___ftge@ff2+1
  8155  0A7E  0849               	movf	trapmf@x+2,w
  8156  0A7F  00F5               	movwf	___ftge@ff2+2
  8157  0A80  160A  118A  23D9  120A  158A  	fcall	___ftge
  8158  0A85  1803               	btfsc	3,0
  8159  0A86  2BB1               	goto	L18
  8160                           
  8161                           ;main.c: 105: else if ((a < x) && (x <= b))
  8162                           
  8163                           ;main.c: 104: ua = 0;
  8164  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  8165  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  8166  0A89  084A               	movf	trapmf@a,w
  8167  0A8A  00F0               	movwf	___ftge@ff1
  8168  0A8B  084B               	movf	trapmf@a+1,w
  8169  0A8C  00F1               	movwf	___ftge@ff1+1
  8170  0A8D  084C               	movf	trapmf@a+2,w
  8171  0A8E  00F2               	movwf	___ftge@ff1+2
  8172  0A8F  0847               	movf	trapmf@x,w
  8173  0A90  00F3               	movwf	___ftge@ff2
  8174  0A91  0848               	movf	trapmf@x+1,w
  8175  0A92  00F4               	movwf	___ftge@ff2+1
  8176  0A93  0849               	movf	trapmf@x+2,w
  8177  0A94  00F5               	movwf	___ftge@ff2+2
  8178  0A95  160A  118A  23D9  120A  158A  	fcall	___ftge
  8179  0A9A  1803               	btfsc	3,0
  8180  0A9B  2AE5               	goto	i1l2474
  8181  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  8182  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  8183  0A9E  084D               	movf	trapmf@b,w
  8184  0A9F  00F0               	movwf	___ftge@ff1
  8185  0AA0  084E               	movf	trapmf@b+1,w
  8186  0AA1  00F1               	movwf	___ftge@ff1+1
  8187  0AA2  084F               	movf	trapmf@b+2,w
  8188  0AA3  00F2               	movwf	___ftge@ff1+2
  8189  0AA4  0847               	movf	trapmf@x,w
  8190  0AA5  00F3               	movwf	___ftge@ff2
  8191  0AA6  0848               	movf	trapmf@x+1,w
  8192  0AA7  00F4               	movwf	___ftge@ff2+1
  8193  0AA8  0849               	movf	trapmf@x+2,w
  8194  0AA9  00F5               	movwf	___ftge@ff2+2
  8195  0AAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8196  0AAF  1C03               	btfss	3,0
  8197  0AB0  2AE5               	goto	i1l2474
  8198                           
  8199                           ;main.c: 106: ua = ((x - a) / (b - a));
  8200  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8201  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  8202  0AB3  084D               	movf	trapmf@b,w
  8203  0AB4  00AA               	movwf	___ftadd@f1
  8204  0AB5  084E               	movf	trapmf@b+1,w
  8205  0AB6  00AB               	movwf	___ftadd@f1+1
  8206  0AB7  084F               	movf	trapmf@b+2,w
  8207  0AB8  00AC               	movwf	___ftadd@f1+2
  8208  0AB9  084A               	movf	trapmf@a,w
  8209  0ABA  00F0               	movwf	___ftneg@f1
  8210  0ABB  084B               	movf	trapmf@a+1,w
  8211  0ABC  00F1               	movwf	___ftneg@f1+1
  8212  0ABD  084C               	movf	trapmf@a+2,w
  8213  0ABE  00F2               	movwf	___ftneg@f1+2
  8214  0ABF  160A  118A  20C1  120A  158A  	fcall	___ftneg
  8215  0AC4  0870               	movf	?___ftneg,w
  8216  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8217  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8218  0AC7  00AD               	movwf	___ftadd@f2
  8219  0AC8  0871               	movf	?___ftneg+1,w
  8220  0AC9  00AE               	movwf	___ftadd@f2+1
  8221  0ACA  0872               	movf	?___ftneg+2,w
  8222  0ACB  00AF               	movwf	___ftadd@f2+2
  8223  0ACC  120A  118A  26F4  120A  158A  	fcall	___ftadd
  8224  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8225  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8226  0AD3  082A               	movf	?___ftadd,w
  8227  0AD4  00B7               	movwf	___ftdiv@f2
  8228  0AD5  082B               	movf	?___ftadd+1,w
  8229  0AD6  00B8               	movwf	___ftdiv@f2+1
  8230  0AD7  082C               	movf	?___ftadd+2,w
  8231  0AD8  00B9               	movwf	___ftdiv@f2+2
  8232  0AD9  0847               	movf	trapmf@x,w
  8233  0ADA  00AA               	movwf	___ftadd@f1
  8234  0ADB  0848               	movf	trapmf@x+1,w
  8235  0ADC  00AB               	movwf	___ftadd@f1+1
  8236  0ADD  0849               	movf	trapmf@x+2,w
  8237  0ADE  00AC               	movwf	___ftadd@f1+2
  8238  0ADF  084A               	movf	trapmf@a,w
  8239  0AE0  00F0               	movwf	___ftneg@f1
  8240  0AE1  084B               	movf	trapmf@a+1,w
  8241  0AE2  00F1               	movwf	___ftneg@f1+1
  8242  0AE3  084C               	movf	trapmf@a+2,w
  8243  0AE4  2B74               	goto	L20
  8244  0AE5                     i1l2474:	
  8245                           
  8246                           ;main.c: 107: else if ((b <= x) && (x <= c))
  8247  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0AE7  0847               	movf	trapmf@x,w
  8250  0AE8  00F0               	movwf	___ftge@ff1
  8251  0AE9  0848               	movf	trapmf@x+1,w
  8252  0AEA  00F1               	movwf	___ftge@ff1+1
  8253  0AEB  0849               	movf	trapmf@x+2,w
  8254  0AEC  00F2               	movwf	___ftge@ff1+2
  8255  0AED  084D               	movf	trapmf@b,w
  8256  0AEE  00F3               	movwf	___ftge@ff2
  8257  0AEF  084E               	movf	trapmf@b+1,w
  8258  0AF0  00F4               	movwf	___ftge@ff2+1
  8259  0AF1  084F               	movf	trapmf@b+2,w
  8260  0AF2  00F5               	movwf	___ftge@ff2+2
  8261  0AF3  160A  118A  23D9  120A  158A  	fcall	___ftge
  8262  0AF8  1C03               	btfss	3,0
  8263  0AF9  2B17               	goto	i1l2480
  8264  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0AFC  0850               	movf	trapmf@c,w
  8267  0AFD  00F0               	movwf	___ftge@ff1
  8268  0AFE  0851               	movf	trapmf@c+1,w
  8269  0AFF  00F1               	movwf	___ftge@ff1+1
  8270  0B00  0852               	movf	trapmf@c+2,w
  8271  0B01  00F2               	movwf	___ftge@ff1+2
  8272  0B02  0847               	movf	trapmf@x,w
  8273  0B03  00F3               	movwf	___ftge@ff2
  8274  0B04  0848               	movf	trapmf@x+1,w
  8275  0B05  00F4               	movwf	___ftge@ff2+1
  8276  0B06  0849               	movf	trapmf@x+2,w
  8277  0B07  00F5               	movwf	___ftge@ff2+2
  8278  0B08  160A  118A  23D9  120A  158A  	fcall	___ftge
  8279  0B0D  1C03               	btfss	3,0
  8280  0B0E  2B17               	goto	i1l2480
  8281                           
  8282                           ;main.c: 108: ua = 1;
  8283  0B0F  3000               	movlw	0
  8284  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  8285  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  8286  0B12  00D6               	movwf	trapmf@ua
  8287  0B13  3080               	movlw	128
  8288  0B14  00D7               	movwf	trapmf@ua+1
  8289  0B15  303F               	movlw	63
  8290  0B16  2BB8               	goto	L17
  8291  0B17                     i1l2480:	
  8292                           
  8293                           ;main.c: 109: else if ((c < x) && (x <= d))
  8294  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  8295  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  8296  0B19  0850               	movf	trapmf@c,w
  8297  0B1A  00F0               	movwf	___ftge@ff1
  8298  0B1B  0851               	movf	trapmf@c+1,w
  8299  0B1C  00F1               	movwf	___ftge@ff1+1
  8300  0B1D  0852               	movf	trapmf@c+2,w
  8301  0B1E  00F2               	movwf	___ftge@ff1+2
  8302  0B1F  0847               	movf	trapmf@x,w
  8303  0B20  00F3               	movwf	___ftge@ff2
  8304  0B21  0848               	movf	trapmf@x+1,w
  8305  0B22  00F4               	movwf	___ftge@ff2+1
  8306  0B23  0849               	movf	trapmf@x+2,w
  8307  0B24  00F5               	movwf	___ftge@ff2+2
  8308  0B25  160A  118A  23D9  120A  158A  	fcall	___ftge
  8309  0B2A  1803               	btfsc	3,0
  8310  0B2B  2B9C               	goto	i1l2486
  8311  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  8312  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  8313  0B2E  0853               	movf	trapmf@d,w
  8314  0B2F  00F0               	movwf	___ftge@ff1
  8315  0B30  0854               	movf	trapmf@d+1,w
  8316  0B31  00F1               	movwf	___ftge@ff1+1
  8317  0B32  0855               	movf	trapmf@d+2,w
  8318  0B33  00F2               	movwf	___ftge@ff1+2
  8319  0B34  0847               	movf	trapmf@x,w
  8320  0B35  00F3               	movwf	___ftge@ff2
  8321  0B36  0848               	movf	trapmf@x+1,w
  8322  0B37  00F4               	movwf	___ftge@ff2+1
  8323  0B38  0849               	movf	trapmf@x+2,w
  8324  0B39  00F5               	movwf	___ftge@ff2+2
  8325  0B3A  160A  118A  23D9  120A  158A  	fcall	___ftge
  8326  0B3F  1C03               	btfss	3,0
  8327  0B40  2B9C               	goto	i1l2486
  8328                           
  8329                           ;main.c: 110: ua = ((d - x) / (d - c));
  8330  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  8331  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  8332  0B43  0853               	movf	trapmf@d,w
  8333  0B44  00AA               	movwf	___ftadd@f1
  8334  0B45  0854               	movf	trapmf@d+1,w
  8335  0B46  00AB               	movwf	___ftadd@f1+1
  8336  0B47  0855               	movf	trapmf@d+2,w
  8337  0B48  00AC               	movwf	___ftadd@f1+2
  8338  0B49  0850               	movf	trapmf@c,w
  8339  0B4A  00F0               	movwf	___ftneg@f1
  8340  0B4B  0851               	movf	trapmf@c+1,w
  8341  0B4C  00F1               	movwf	___ftneg@f1+1
  8342  0B4D  0852               	movf	trapmf@c+2,w
  8343  0B4E  00F2               	movwf	___ftneg@f1+2
  8344  0B4F  160A  118A  20C1  120A  158A  	fcall	___ftneg
  8345  0B54  0870               	movf	?___ftneg,w
  8346  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8347  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  8348  0B57  00AD               	movwf	___ftadd@f2
  8349  0B58  0871               	movf	?___ftneg+1,w
  8350  0B59  00AE               	movwf	___ftadd@f2+1
  8351  0B5A  0872               	movf	?___ftneg+2,w
  8352  0B5B  00AF               	movwf	___ftadd@f2+2
  8353  0B5C  120A  118A  26F4  120A  158A  	fcall	___ftadd
  8354  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8355  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8356  0B63  082A               	movf	?___ftadd,w
  8357  0B64  00B7               	movwf	___ftdiv@f2
  8358  0B65  082B               	movf	?___ftadd+1,w
  8359  0B66  00B8               	movwf	___ftdiv@f2+1
  8360  0B67  082C               	movf	?___ftadd+2,w
  8361  0B68  00B9               	movwf	___ftdiv@f2+2
  8362  0B69  0853               	movf	trapmf@d,w
  8363  0B6A  00AA               	movwf	___ftadd@f1
  8364  0B6B  0854               	movf	trapmf@d+1,w
  8365  0B6C  00AB               	movwf	___ftadd@f1+1
  8366  0B6D  0855               	movf	trapmf@d+2,w
  8367  0B6E  00AC               	movwf	___ftadd@f1+2
  8368  0B6F  0847               	movf	trapmf@x,w
  8369  0B70  00F0               	movwf	___ftneg@f1
  8370  0B71  0848               	movf	trapmf@x+1,w
  8371  0B72  00F1               	movwf	___ftneg@f1+1
  8372  0B73  0849               	movf	trapmf@x+2,w
  8373  0B74                     L20:	
  8374  0B74  00F2               	movwf	___ftneg@f1+2
  8375  0B75  160A  118A  20C1  120A  158A  	fcall	___ftneg
  8376  0B7A  0870               	movf	?___ftneg,w
  8377  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  8378  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  8379  0B7D  00AD               	movwf	___ftadd@f2
  8380  0B7E  0871               	movf	?___ftneg+1,w
  8381  0B7F  00AE               	movwf	___ftadd@f2+1
  8382  0B80  0872               	movf	?___ftneg+2,w
  8383  0B81  00AF               	movwf	___ftadd@f2+2
  8384  0B82  120A  118A  26F4  120A  158A  	fcall	___ftadd
  8385  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8386  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  8387  0B89  082A               	movf	?___ftadd,w
  8388  0B8A  00BA               	movwf	___ftdiv@f1
  8389  0B8B  082B               	movf	?___ftadd+1,w
  8390  0B8C  00BB               	movwf	___ftdiv@f1+1
  8391  0B8D  082C               	movf	?___ftadd+2,w
  8392  0B8E  00BC               	movwf	___ftdiv@f1+2
  8393  0B8F  160A  118A  2624  120A  158A  	fcall	___ftdiv
  8394  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  8395  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  8396  0B96  0837               	movf	?___ftdiv,w
  8397  0B97  00D6               	movwf	trapmf@ua
  8398  0B98  0838               	movf	?___ftdiv+1,w
  8399  0B99  00D7               	movwf	trapmf@ua+1
  8400  0B9A  0839               	movf	?___ftdiv+2,w
  8401  0B9B  2BB8               	goto	L17
  8402  0B9C                     i1l2486:	
  8403                           
  8404                           ;main.c: 111: else if (x > d)
  8405  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8406  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8407  0B9E  0853               	movf	trapmf@d,w
  8408  0B9F  00F0               	movwf	___ftge@ff1
  8409  0BA0  0854               	movf	trapmf@d+1,w
  8410  0BA1  00F1               	movwf	___ftge@ff1+1
  8411  0BA2  0855               	movf	trapmf@d+2,w
  8412  0BA3  00F2               	movwf	___ftge@ff1+2
  8413  0BA4  0847               	movf	trapmf@x,w
  8414  0BA5  00F3               	movwf	___ftge@ff2
  8415  0BA6  0848               	movf	trapmf@x+1,w
  8416  0BA7  00F4               	movwf	___ftge@ff2+1
  8417  0BA8  0849               	movf	trapmf@x+2,w
  8418  0BA9  00F5               	movwf	___ftge@ff2+2
  8419  0BAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8420  0BAF  1803               	btfsc	3,0
  8421  0BB0  2BB9               	goto	i1l138
  8422  0BB1                     L18:	
  8423                           
  8424                           ;main.c: 112: ua = 0;
  8425  0BB1  3000               	movlw	0
  8426  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  8427  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  8428  0BB4  00D6               	movwf	trapmf@ua
  8429  0BB5  3000               	movlw	0
  8430  0BB6  00D7               	movwf	trapmf@ua+1
  8431  0BB7  3000               	movlw	0
  8432  0BB8                     L17:	
  8433  0BB8  00D8               	movwf	trapmf@ua+2
  8434  0BB9                     i1l138:	
  8435                           
  8436                           ;main.c: 114: return(ua);
  8437  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8438  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8439  0BBB  0856               	movf	trapmf@ua,w
  8440  0BBC  00C7               	movwf	?_trapmf
  8441  0BBD  0857               	movf	trapmf@ua+1,w
  8442  0BBE  00C8               	movwf	?_trapmf+1
  8443  0BBF  0858               	movf	trapmf@ua+2,w
  8444  0BC0  00C9               	movwf	?_trapmf+2
  8445  0BC1  0008               	return
  8446  0BC2                     __end_of_trapmf:	
  8447                           
  8448                           	psect	text33
  8449  10C1                     __ptext33:	
  8450 ;; *************** function ___ftneg *****************
  8451 ;; Defined at:
  8452 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  f1              3    0[COMMON] float 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  3    0[COMMON] float 
  8459 ;; Registers used:
  8460 ;;		wreg
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8466 ;;      Params:         3       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0
  8469 ;;      Totals:         3       0       0       0       0
  8470 ;;Total ram usage:        3 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_trimf
  8476 ;;		_trapmf
  8477 ;;		_Fuzzy
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function ___ftneg
  8483  10C1                     ___ftneg:	
  8484                           
  8485                           ;incstack = 0
  8486                           ; Regs used in ___ftneg: [wreg]
  8487  10C1  0872               	movf	___ftneg@f1+2,w
  8488  10C2  0471               	iorwf	___ftneg@f1+1,w
  8489  10C3  0470               	iorwf	___ftneg@f1,w
  8490  10C4  1903               	skipnz
  8491  10C5  0008               	return
  8492  10C6  3080               	movlw	128
  8493  10C7  06F2               	xorwf	___ftneg@f1+2,f
  8494  10C8  0008               	return
  8495  10C9                     __end_of___ftneg:	
  8496                           
  8497                           	psect	text34
  8498  1624                     __ptext34:	
  8499 ;; *************** function ___ftdiv *****************
  8500 ;; Defined at:
  8501 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  f2              3   23[BANK0 ] float 
  8504 ;;  f1              3   26[BANK0 ] float 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  f3              3   34[BANK0 ] float 
  8507 ;;  sign            1   38[BANK0 ] unsigned char 
  8508 ;;  exp             1   37[BANK0 ] unsigned char 
  8509 ;;  cntr            1   33[BANK0 ] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  3   23[BANK0 ] float 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8519 ;;      Params:         0       6       0       0       0
  8520 ;;      Locals:         0       6       0       0       0
  8521 ;;      Temps:          0       4       0       0       0
  8522 ;;      Totals:         0      16       0       0       0
  8523 ;;Total ram usage:       16 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    1
  8526 ;; This function calls:
  8527 ;;		___ftpack
  8528 ;; This function is called by:
  8529 ;;		_trimf
  8530 ;;		_trapmf
  8531 ;;		_Fuzzy
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           
  8536                           ;psect for function ___ftdiv
  8537  1624                     ___ftdiv:	
  8538                           
  8539                           ;incstack = 0
  8540                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8541  1624  1283               	bcf	3,5	;RP0=0, select bank0
  8542  1625  1303               	bcf	3,6	;RP1=0, select bank0
  8543  1626  083A               	movf	___ftdiv@f1,w
  8544  1627  00BD               	movwf	??___ftdiv
  8545  1628  083B               	movf	___ftdiv@f1+1,w
  8546  1629  00BE               	movwf	??___ftdiv+1
  8547  162A  083C               	movf	___ftdiv@f1+2,w
  8548  162B  00BF               	movwf	??___ftdiv+2
  8549  162C  1003               	clrc
  8550  162D  0D3E               	rlf	??___ftdiv+1,w
  8551  162E  0D3F               	rlf	??___ftdiv+2,w
  8552  162F  00C0               	movwf	??___ftdiv+3
  8553  1630  0840               	movf	??___ftdiv+3,w
  8554  1631  00C5               	movwf	___ftdiv@exp
  8555  1632  08C5               	movf	___ftdiv@exp,f
  8556  1633  1D03               	skipz
  8557  1634  2E3C               	goto	i1l2370
  8558  1635  3000               	movlw	0
  8559  1636  00B7               	movwf	?___ftdiv
  8560  1637  3000               	movlw	0
  8561  1638  00B8               	movwf	?___ftdiv+1
  8562  1639  3000               	movlw	0
  8563  163A  00B9               	movwf	?___ftdiv+2
  8564  163B  0008               	return
  8565  163C                     i1l2370:	
  8566  163C  0837               	movf	___ftdiv@f2,w
  8567  163D  00BD               	movwf	??___ftdiv
  8568  163E  0838               	movf	___ftdiv@f2+1,w
  8569  163F  00BE               	movwf	??___ftdiv+1
  8570  1640  0839               	movf	___ftdiv@f2+2,w
  8571  1641  00BF               	movwf	??___ftdiv+2
  8572  1642  1003               	clrc
  8573  1643  0D3E               	rlf	??___ftdiv+1,w
  8574  1644  0D3F               	rlf	??___ftdiv+2,w
  8575  1645  00C0               	movwf	??___ftdiv+3
  8576  1646  0840               	movf	??___ftdiv+3,w
  8577  1647  00C6               	movwf	___ftdiv@sign
  8578  1648  08C6               	movf	___ftdiv@sign,f
  8579  1649  1D03               	skipz
  8580  164A  2E52               	goto	i1l2376
  8581  164B  3000               	movlw	0
  8582  164C  00B7               	movwf	?___ftdiv
  8583  164D  3000               	movlw	0
  8584  164E  00B8               	movwf	?___ftdiv+1
  8585  164F  3000               	movlw	0
  8586  1650  00B9               	movwf	?___ftdiv+2
  8587  1651  0008               	return
  8588  1652                     i1l2376:	
  8589  1652  3000               	movlw	0
  8590  1653  00C2               	movwf	___ftdiv@f3
  8591  1654  3000               	movlw	0
  8592  1655  00C3               	movwf	___ftdiv@f3+1
  8593  1656  3000               	movlw	0
  8594  1657  00C4               	movwf	___ftdiv@f3+2
  8595  1658  3089               	movlw	137
  8596  1659  0746               	addwf	___ftdiv@sign,w
  8597  165A  00BD               	movwf	??___ftdiv
  8598  165B  083D               	movf	??___ftdiv,w
  8599  165C  02C5               	subwf	___ftdiv@exp,f
  8600  165D  083A               	movf	___ftdiv@f1,w
  8601  165E  00BD               	movwf	??___ftdiv
  8602  165F  083B               	movf	___ftdiv@f1+1,w
  8603  1660  00BE               	movwf	??___ftdiv+1
  8604  1661  083C               	movf	___ftdiv@f1+2,w
  8605  1662  00BF               	movwf	??___ftdiv+2
  8606  1663  3010               	movlw	16
  8607  1664                     u251_25:	
  8608  1664  1003               	clrc
  8609  1665  0CBF               	rrf	??___ftdiv+2,f
  8610  1666  0CBE               	rrf	??___ftdiv+1,f
  8611  1667  0CBD               	rrf	??___ftdiv,f
  8612  1668  3EFF               	addlw	-1
  8613  1669  1D03               	skipz
  8614  166A  2E64               	goto	u251_25
  8615  166B  083D               	movf	??___ftdiv,w
  8616  166C  00C0               	movwf	??___ftdiv+3
  8617  166D  0840               	movf	??___ftdiv+3,w
  8618  166E  00C6               	movwf	___ftdiv@sign
  8619  166F  0837               	movf	___ftdiv@f2,w
  8620  1670  00BD               	movwf	??___ftdiv
  8621  1671  0838               	movf	___ftdiv@f2+1,w
  8622  1672  00BE               	movwf	??___ftdiv+1
  8623  1673  0839               	movf	___ftdiv@f2+2,w
  8624  1674  00BF               	movwf	??___ftdiv+2
  8625  1675  3010               	movlw	16
  8626  1676                     u252_25:	
  8627  1676  1003               	clrc
  8628  1677  0CBF               	rrf	??___ftdiv+2,f
  8629  1678  0CBE               	rrf	??___ftdiv+1,f
  8630  1679  0CBD               	rrf	??___ftdiv,f
  8631  167A  3EFF               	addlw	-1
  8632  167B  1D03               	skipz
  8633  167C  2E76               	goto	u252_25
  8634  167D  083D               	movf	??___ftdiv,w
  8635  167E  00C0               	movwf	??___ftdiv+3
  8636  167F  0840               	movf	??___ftdiv+3,w
  8637  1680  06C6               	xorwf	___ftdiv@sign,f
  8638  1681  3080               	movlw	128
  8639  1682  00BD               	movwf	??___ftdiv
  8640  1683  083D               	movf	??___ftdiv,w
  8641  1684  05C6               	andwf	___ftdiv@sign,f
  8642  1685  17BB               	bsf	___ftdiv@f1+1,7
  8643  1686  30FF               	movlw	255
  8644  1687  05BA               	andwf	___ftdiv@f1,f
  8645  1688  30FF               	movlw	255
  8646  1689  05BB               	andwf	___ftdiv@f1+1,f
  8647  168A  3000               	movlw	0
  8648  168B  05BC               	andwf	___ftdiv@f1+2,f
  8649  168C  17B8               	bsf	___ftdiv@f2+1,7
  8650  168D  30FF               	movlw	255
  8651  168E  05B7               	andwf	___ftdiv@f2,f
  8652  168F  30FF               	movlw	255
  8653  1690  05B8               	andwf	___ftdiv@f2+1,f
  8654  1691  3000               	movlw	0
  8655  1692  05B9               	andwf	___ftdiv@f2+2,f
  8656  1693  3018               	movlw	24
  8657  1694  00BD               	movwf	??___ftdiv
  8658  1695  083D               	movf	??___ftdiv,w
  8659  1696  00C1               	movwf	___ftdiv@cntr
  8660  1697                     i1l2390:	
  8661  1697  3001               	movlw	1
  8662  1698                     u253_25:	
  8663  1698  1003               	clrc
  8664  1699  0DC2               	rlf	___ftdiv@f3,f
  8665  169A  0DC3               	rlf	___ftdiv@f3+1,f
  8666  169B  0DC4               	rlf	___ftdiv@f3+2,f
  8667  169C  3EFF               	addlw	-1
  8668  169D  1D03               	skipz
  8669  169E  2E98               	goto	u253_25
  8670  169F  0839               	movf	___ftdiv@f2+2,w
  8671  16A0  023C               	subwf	___ftdiv@f1+2,w
  8672  16A1  1D03               	skipz
  8673  16A2  2EA9               	goto	u254_25
  8674  16A3  0838               	movf	___ftdiv@f2+1,w
  8675  16A4  023B               	subwf	___ftdiv@f1+1,w
  8676  16A5  1D03               	skipz
  8677  16A6  2EA9               	goto	u254_25
  8678  16A7  0837               	movf	___ftdiv@f2,w
  8679  16A8  023A               	subwf	___ftdiv@f1,w
  8680  16A9                     u254_25:	
  8681  16A9  1C03               	skipc
  8682  16AA  2EB6               	goto	i1l2398
  8683  16AB  0837               	movf	___ftdiv@f2,w
  8684  16AC  02BA               	subwf	___ftdiv@f1,f
  8685  16AD  0838               	movf	___ftdiv@f2+1,w
  8686  16AE  1C03               	skipc
  8687  16AF  0F38               	incfsz	___ftdiv@f2+1,w
  8688  16B0  02BB               	subwf	___ftdiv@f1+1,f
  8689  16B1  0839               	movf	___ftdiv@f2+2,w
  8690  16B2  1C03               	skipc
  8691  16B3  0A39               	incf	___ftdiv@f2+2,w
  8692  16B4  02BC               	subwf	___ftdiv@f1+2,f
  8693  16B5  1442               	bsf	___ftdiv@f3,0
  8694  16B6                     i1l2398:	
  8695  16B6  3001               	movlw	1
  8696  16B7                     u255_25:	
  8697  16B7  1003               	clrc
  8698  16B8  0DBA               	rlf	___ftdiv@f1,f
  8699  16B9  0DBB               	rlf	___ftdiv@f1+1,f
  8700  16BA  0DBC               	rlf	___ftdiv@f1+2,f
  8701  16BB  3EFF               	addlw	-1
  8702  16BC  1D03               	skipz
  8703  16BD  2EB7               	goto	u255_25
  8704  16BE  3001               	movlw	1
  8705  16BF  02C1               	subwf	___ftdiv@cntr,f
  8706  16C0  1D03               	btfss	3,2
  8707  16C1  2E97               	goto	i1l2390
  8708  16C2  0842               	movf	___ftdiv@f3,w
  8709  16C3  00F0               	movwf	___ftpack@arg
  8710  16C4  0843               	movf	___ftdiv@f3+1,w
  8711  16C5  00F1               	movwf	___ftpack@arg+1
  8712  16C6  0844               	movf	___ftdiv@f3+2,w
  8713  16C7  00F2               	movwf	___ftpack@arg+2
  8714  16C8  0845               	movf	___ftdiv@exp,w
  8715  16C9  00BD               	movwf	??___ftdiv
  8716  16CA  083D               	movf	??___ftdiv,w
  8717  16CB  00F3               	movwf	___ftpack@exp
  8718  16CC  0846               	movf	___ftdiv@sign,w
  8719  16CD  00BE               	movwf	??___ftdiv+1
  8720  16CE  083E               	movf	??___ftdiv+1,w
  8721  16CF  00F4               	movwf	___ftpack@sign
  8722  16D0  160A  118A  2436   	fcall	___ftpack
  8723  16D3  0870               	movf	?___ftpack,w
  8724  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  8725  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  8726  16D6  00B7               	movwf	?___ftdiv
  8727  16D7  0871               	movf	?___ftpack+1,w
  8728  16D8  00B8               	movwf	?___ftdiv+1
  8729  16D9  0872               	movf	?___ftpack+2,w
  8730  16DA  00B9               	movwf	?___ftdiv+2
  8731  16DB  0008               	return
  8732  16DC                     __end_of___ftdiv:	
  8733                           
  8734                           	psect	text35
  8735  06F4                     __ptext35:	
  8736 ;; *************** function ___ftadd *****************
  8737 ;; Defined at:
  8738 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  f1              3   10[BANK0 ] float 
  8741 ;;  f2              3   13[BANK0 ] float 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  exp1            1   22[BANK0 ] unsigned char 
  8744 ;;  exp2            1   21[BANK0 ] unsigned char 
  8745 ;;  sign            1   20[BANK0 ] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  3   10[BANK0 ] float 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0, pclath, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8755 ;;      Params:         0       6       0       0       0
  8756 ;;      Locals:         0       3       0       0       0
  8757 ;;      Temps:          0       4       0       0       0
  8758 ;;      Totals:         0      13       0       0       0
  8759 ;;Total ram usage:       13 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    1
  8762 ;; This function calls:
  8763 ;;		___ftpack
  8764 ;; This function is called by:
  8765 ;;		_trimf
  8766 ;;		_trapmf
  8767 ;;		_Fuzzy
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function ___ftadd
  8773  06F4                     ___ftadd:	
  8774                           
  8775                           ;incstack = 0
  8776                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8777  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  8778  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  8779  06F6  082A               	movf	___ftadd@f1,w
  8780  06F7  00B0               	movwf	??___ftadd
  8781  06F8  082B               	movf	___ftadd@f1+1,w
  8782  06F9  00B1               	movwf	??___ftadd+1
  8783  06FA  082C               	movf	___ftadd@f1+2,w
  8784  06FB  00B2               	movwf	??___ftadd+2
  8785  06FC  1003               	clrc
  8786  06FD  0D31               	rlf	??___ftadd+1,w
  8787  06FE  0D32               	rlf	??___ftadd+2,w
  8788  06FF  00B3               	movwf	??___ftadd+3
  8789  0700  0833               	movf	??___ftadd+3,w
  8790  0701  00B6               	movwf	___ftadd@exp1
  8791  0702  082D               	movf	___ftadd@f2,w
  8792  0703  00B0               	movwf	??___ftadd
  8793  0704  082E               	movf	___ftadd@f2+1,w
  8794  0705  00B1               	movwf	??___ftadd+1
  8795  0706  082F               	movf	___ftadd@f2+2,w
  8796  0707  00B2               	movwf	??___ftadd+2
  8797  0708  1003               	clrc
  8798  0709  0D31               	rlf	??___ftadd+1,w
  8799  070A  0D32               	rlf	??___ftadd+2,w
  8800  070B  00B3               	movwf	??___ftadd+3
  8801  070C  0833               	movf	??___ftadd+3,w
  8802  070D  00B5               	movwf	___ftadd@exp2
  8803  070E  0836               	movf	___ftadd@exp1,w
  8804  070F  1903               	btfsc	3,2
  8805  0710  2F1D               	goto	i1l2300
  8806  0711  0835               	movf	___ftadd@exp2,w
  8807  0712  0236               	subwf	___ftadd@exp1,w
  8808  0713  1803               	skipnc
  8809  0714  2F24               	goto	i1l2304
  8810  0715  0336               	decf	___ftadd@exp1,w
  8811  0716  3AFF               	xorlw	255
  8812  0717  0735               	addwf	___ftadd@exp2,w
  8813  0718  00B0               	movwf	??___ftadd
  8814  0719  3019               	movlw	25
  8815  071A  0230               	subwf	??___ftadd,w
  8816  071B  1C03               	skipc
  8817  071C  2F24               	goto	i1l2304
  8818  071D                     i1l2300:	
  8819  071D  082D               	movf	___ftadd@f2,w
  8820  071E  00AA               	movwf	?___ftadd
  8821  071F  082E               	movf	___ftadd@f2+1,w
  8822  0720  00AB               	movwf	?___ftadd+1
  8823  0721  082F               	movf	___ftadd@f2+2,w
  8824  0722  00AC               	movwf	?___ftadd+2
  8825  0723  0008               	return
  8826  0724                     i1l2304:	
  8827  0724  0835               	movf	___ftadd@exp2,w
  8828  0725  1903               	btfsc	3,2
  8829  0726  0008               	return
  8830  0727  0836               	movf	___ftadd@exp1,w
  8831  0728  0235               	subwf	___ftadd@exp2,w
  8832  0729  1803               	skipnc
  8833  072A  2F33               	goto	i1l2310
  8834  072B  0335               	decf	___ftadd@exp2,w
  8835  072C  3AFF               	xorlw	255
  8836  072D  0736               	addwf	___ftadd@exp1,w
  8837  072E  00B0               	movwf	??___ftadd
  8838  072F  3019               	movlw	25
  8839  0730  0230               	subwf	??___ftadd,w
  8840  0731  1803               	btfsc	3,0
  8841  0732  0008               	return
  8842  0733                     i1l2310:	
  8843  0733  3006               	movlw	6
  8844  0734  00B0               	movwf	??___ftadd
  8845  0735  0830               	movf	??___ftadd,w
  8846  0736  00B4               	movwf	___ftadd@sign
  8847  0737  1BAC               	btfsc	___ftadd@f1+2,7
  8848  0738  17B4               	bsf	___ftadd@sign,7
  8849  0739  1BAF               	btfsc	___ftadd@f2+2,7
  8850  073A  1734               	bsf	___ftadd@sign,6
  8851  073B  17AB               	bsf	___ftadd@f1+1,7
  8852  073C  30FF               	movlw	255
  8853  073D  05AA               	andwf	___ftadd@f1,f
  8854  073E  30FF               	movlw	255
  8855  073F  05AB               	andwf	___ftadd@f1+1,f
  8856  0740  3000               	movlw	0
  8857  0741  05AC               	andwf	___ftadd@f1+2,f
  8858  0742  17AE               	bsf	___ftadd@f2+1,7
  8859  0743  30FF               	movlw	255
  8860  0744  05AD               	andwf	___ftadd@f2,f
  8861  0745  30FF               	movlw	255
  8862  0746  05AE               	andwf	___ftadd@f2+1,f
  8863  0747  3000               	movlw	0
  8864  0748  05AF               	andwf	___ftadd@f2+2,f
  8865  0749  0835               	movf	___ftadd@exp2,w
  8866  074A  0236               	subwf	___ftadd@exp1,w
  8867  074B  1803               	skipnc
  8868  074C  2F73               	goto	i1l2332
  8869  074D                     i1l2322:	
  8870  074D  3001               	movlw	1
  8871  074E                     u234_25:	
  8872  074E  1003               	clrc
  8873  074F  0DAD               	rlf	___ftadd@f2,f
  8874  0750  0DAE               	rlf	___ftadd@f2+1,f
  8875  0751  0DAF               	rlf	___ftadd@f2+2,f
  8876  0752  3EFF               	addlw	-1
  8877  0753  1D03               	skipz
  8878  0754  2F4E               	goto	u234_25
  8879  0755  3001               	movlw	1
  8880  0756  02B5               	subwf	___ftadd@exp2,f
  8881  0757  0835               	movf	___ftadd@exp2,w
  8882  0758  0636               	xorwf	___ftadd@exp1,w
  8883  0759  1903               	skipnz
  8884  075A  2F6E               	goto	i1l2330
  8885  075B  3001               	movlw	1
  8886  075C  02B4               	subwf	___ftadd@sign,f
  8887  075D  0834               	movf	___ftadd@sign,w
  8888  075E  3907               	andlw	7
  8889  075F  1903               	btfsc	3,2
  8890  0760  2F6E               	goto	i1l2330
  8891  0761  2F4D               	goto	i1l2322
  8892  0762                     i1l2328:	
  8893  0762  3001               	movlw	1
  8894  0763                     u237_25:	
  8895  0763  1003               	clrc
  8896  0764  0CAC               	rrf	___ftadd@f1+2,f
  8897  0765  0CAB               	rrf	___ftadd@f1+1,f
  8898  0766  0CAA               	rrf	___ftadd@f1,f
  8899  0767  3EFF               	addlw	-1
  8900  0768  1D03               	skipz
  8901  0769  2F63               	goto	u237_25
  8902  076A  3001               	movlw	1
  8903  076B  00B0               	movwf	??___ftadd
  8904  076C  0830               	movf	??___ftadd,w
  8905  076D  07B6               	addwf	___ftadd@exp1,f
  8906  076E                     i1l2330:	
  8907  076E  0836               	movf	___ftadd@exp1,w
  8908  076F  0635               	xorwf	___ftadd@exp2,w
  8909  0770  1903               	btfsc	3,2
  8910  0771  2F9C               	goto	i1l798
  8911  0772  2F62               	goto	i1l2328
  8912  0773                     i1l2332:	
  8913  0773  0836               	movf	___ftadd@exp1,w
  8914  0774  0235               	subwf	___ftadd@exp2,w
  8915  0775  1803               	skipnc
  8916  0776  2F9C               	goto	i1l798
  8917  0777                     i1l2334:	
  8918  0777  3001               	movlw	1
  8919  0778                     u240_25:	
  8920  0778  1003               	clrc
  8921  0779  0DAA               	rlf	___ftadd@f1,f
  8922  077A  0DAB               	rlf	___ftadd@f1+1,f
  8923  077B  0DAC               	rlf	___ftadd@f1+2,f
  8924  077C  3EFF               	addlw	-1
  8925  077D  1D03               	skipz
  8926  077E  2F78               	goto	u240_25
  8927  077F  3001               	movlw	1
  8928  0780  02B6               	subwf	___ftadd@exp1,f
  8929  0781  0835               	movf	___ftadd@exp2,w
  8930  0782  0636               	xorwf	___ftadd@exp1,w
  8931  0783  1903               	skipnz
  8932  0784  2F98               	goto	i1l2342
  8933  0785  3001               	movlw	1
  8934  0786  02B4               	subwf	___ftadd@sign,f
  8935  0787  0834               	movf	___ftadd@sign,w
  8936  0788  3907               	andlw	7
  8937  0789  1903               	btfsc	3,2
  8938  078A  2F98               	goto	i1l2342
  8939  078B  2F77               	goto	i1l2334
  8940  078C                     i1l2340:	
  8941  078C  3001               	movlw	1
  8942  078D                     u243_25:	
  8943  078D  1003               	clrc
  8944  078E  0CAF               	rrf	___ftadd@f2+2,f
  8945  078F  0CAE               	rrf	___ftadd@f2+1,f
  8946  0790  0CAD               	rrf	___ftadd@f2,f
  8947  0791  3EFF               	addlw	-1
  8948  0792  1D03               	skipz
  8949  0793  2F8D               	goto	u243_25
  8950  0794  3001               	movlw	1
  8951  0795  00B0               	movwf	??___ftadd
  8952  0796  0830               	movf	??___ftadd,w
  8953  0797  07B5               	addwf	___ftadd@exp2,f
  8954  0798                     i1l2342:	
  8955  0798  0836               	movf	___ftadd@exp1,w
  8956  0799  0635               	xorwf	___ftadd@exp2,w
  8957  079A  1D03               	skipz
  8958  079B  2F8C               	goto	i1l2340
  8959  079C                     i1l798:	
  8960  079C  1FB4               	btfss	___ftadd@sign,7
  8961  079D  2FAE               	goto	i1l2346
  8962  079E  30FF               	movlw	255
  8963  079F  06AA               	xorwf	___ftadd@f1,f
  8964  07A0  30FF               	movlw	255
  8965  07A1  06AB               	xorwf	___ftadd@f1+1,f
  8966  07A2  30FF               	movlw	255
  8967  07A3  06AC               	xorwf	___ftadd@f1+2,f
  8968  07A4  3001               	movlw	1
  8969  07A5  07AA               	addwf	___ftadd@f1,f
  8970  07A6  3000               	movlw	0
  8971  07A7  1803               	skipnc
  8972  07A8  3001               	movlw	1
  8973  07A9  07AB               	addwf	___ftadd@f1+1,f
  8974  07AA  3000               	movlw	0
  8975  07AB  1803               	skipnc
  8976  07AC  3001               	movlw	1
  8977  07AD  07AC               	addwf	___ftadd@f1+2,f
  8978  07AE                     i1l2346:	
  8979  07AE  1F34               	btfss	___ftadd@sign,6
  8980  07AF  2FC0               	goto	i1l2350
  8981  07B0  30FF               	movlw	255
  8982  07B1  06AD               	xorwf	___ftadd@f2,f
  8983  07B2  30FF               	movlw	255
  8984  07B3  06AE               	xorwf	___ftadd@f2+1,f
  8985  07B4  30FF               	movlw	255
  8986  07B5  06AF               	xorwf	___ftadd@f2+2,f
  8987  07B6  3001               	movlw	1
  8988  07B7  07AD               	addwf	___ftadd@f2,f
  8989  07B8  3000               	movlw	0
  8990  07B9  1803               	skipnc
  8991  07BA  3001               	movlw	1
  8992  07BB  07AE               	addwf	___ftadd@f2+1,f
  8993  07BC  3000               	movlw	0
  8994  07BD  1803               	skipnc
  8995  07BE  3001               	movlw	1
  8996  07BF  07AF               	addwf	___ftadd@f2+2,f
  8997  07C0                     i1l2350:	
  8998  07C0  01B4               	clrf	___ftadd@sign
  8999  07C1  082A               	movf	___ftadd@f1,w
  9000  07C2  07AD               	addwf	___ftadd@f2,f
  9001  07C3  082B               	movf	___ftadd@f1+1,w
  9002  07C4  1103               	clrz
  9003  07C5  1803               	skipnc
  9004  07C6  0A2B               	incf	___ftadd@f1+1,w
  9005  07C7  1D03               	btfss	3,2
  9006  07C8  07AE               	addwf	___ftadd@f2+1,f
  9007  07C9  082C               	movf	___ftadd@f1+2,w
  9008  07CA  1103               	clrz
  9009  07CB  1803               	skipnc
  9010  07CC  0A2C               	incf	___ftadd@f1+2,w
  9011  07CD  1D03               	btfss	3,2
  9012  07CE  07AF               	addwf	___ftadd@f2+2,f
  9013  07CF  1FAF               	btfss	___ftadd@f2+2,7
  9014  07D0  2FE3               	goto	i1l2360
  9015  07D1  30FF               	movlw	255
  9016  07D2  06AD               	xorwf	___ftadd@f2,f
  9017  07D3  30FF               	movlw	255
  9018  07D4  06AE               	xorwf	___ftadd@f2+1,f
  9019  07D5  30FF               	movlw	255
  9020  07D6  06AF               	xorwf	___ftadd@f2+2,f
  9021  07D7  3001               	movlw	1
  9022  07D8  07AD               	addwf	___ftadd@f2,f
  9023  07D9  3000               	movlw	0
  9024  07DA  1803               	skipnc
  9025  07DB  3001               	movlw	1
  9026  07DC  07AE               	addwf	___ftadd@f2+1,f
  9027  07DD  3000               	movlw	0
  9028  07DE  1803               	skipnc
  9029  07DF  3001               	movlw	1
  9030  07E0  07AF               	addwf	___ftadd@f2+2,f
  9031  07E1  01B4               	clrf	___ftadd@sign
  9032  07E2  0AB4               	incf	___ftadd@sign,f
  9033  07E3                     i1l2360:	
  9034  07E3  082D               	movf	___ftadd@f2,w
  9035  07E4  00F0               	movwf	___ftpack@arg
  9036  07E5  082E               	movf	___ftadd@f2+1,w
  9037  07E6  00F1               	movwf	___ftpack@arg+1
  9038  07E7  082F               	movf	___ftadd@f2+2,w
  9039  07E8  00F2               	movwf	___ftpack@arg+2
  9040  07E9  0836               	movf	___ftadd@exp1,w
  9041  07EA  00B0               	movwf	??___ftadd
  9042  07EB  0830               	movf	??___ftadd,w
  9043  07EC  00F3               	movwf	___ftpack@exp
  9044  07ED  0834               	movf	___ftadd@sign,w
  9045  07EE  00B1               	movwf	??___ftadd+1
  9046  07EF  0831               	movf	??___ftadd+1,w
  9047  07F0  00F4               	movwf	___ftpack@sign
  9048  07F1  160A  118A  2436   	fcall	___ftpack
  9049  07F4  0870               	movf	?___ftpack,w
  9050  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  9051  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  9052  07F7  00AA               	movwf	?___ftadd
  9053  07F8  0871               	movf	?___ftpack+1,w
  9054  07F9  00AB               	movwf	?___ftadd+1
  9055  07FA  0872               	movf	?___ftpack+2,w
  9056  07FB  00AC               	movwf	?___ftadd+2
  9057  07FC  0008               	return
  9058  07FD                     __end_of___ftadd:	
  9059                           
  9060                           	psect	text36
  9061  118B                     __ptext36:	
  9062 ;; *************** function _max_val *****************
  9063 ;; Defined at:
  9064 ;;		line 129 in file "C:\Users\Ricardo\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Ultimo C no MPLAB\main.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  a               3    0[BANK0 ] float 
  9067 ;;  b               3    3[BANK0 ] float 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  3    0[BANK0 ] float 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0, pclath, cstack
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9079 ;;      Params:         0       6       0       0       0
  9080 ;;      Locals:         0       0       0       0       0
  9081 ;;      Temps:          0       0       0       0       0
  9082 ;;      Totals:         0       6       0       0       0
  9083 ;;Total ram usage:        6 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; Hardware stack levels required when called:    1
  9086 ;; This function calls:
  9087 ;;		___ftge
  9088 ;; This function is called by:
  9089 ;;		_Fuzzy
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _max_val
  9095  118B                     _max_val:	
  9096                           
  9097                           ;main.c: 131: if (a > b)
  9098                           
  9099                           ;incstack = 0
  9100                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  9101  118B  1283               	bcf	3,5	;RP0=0, select bank0
  9102  118C  1303               	bcf	3,6	;RP1=0, select bank0
  9103  118D  0823               	movf	max_val@b,w
  9104  118E  00F0               	movwf	___ftge@ff1
  9105  118F  0824               	movf	max_val@b+1,w
  9106  1190  00F1               	movwf	___ftge@ff1+1
  9107  1191  0825               	movf	max_val@b+2,w
  9108  1192  00F2               	movwf	___ftge@ff1+2
  9109  1193  0820               	movf	max_val@a,w
  9110  1194  00F3               	movwf	___ftge@ff2
  9111  1195  0821               	movf	max_val@a+1,w
  9112  1196  00F4               	movwf	___ftge@ff2+1
  9113  1197  0822               	movf	max_val@a+2,w
  9114  1198  00F5               	movwf	___ftge@ff2+2
  9115  1199  160A  118A  23D9  160A  118A  	fcall	___ftge
  9116  119E  1C03               	btfss	3,0
  9117  119F  0008               	return
  9118                           
  9119                           ;main.c: 133: else
  9120                           ;main.c: 134: return b;
  9121                           
  9122                           ;main.c: 132: return a;
  9123  11A0  1283               	bcf	3,5	;RP0=0, select bank0
  9124  11A1  1303               	bcf	3,6	;RP1=0, select bank0
  9125  11A2  0823               	movf	max_val@b,w
  9126  11A3  00A0               	movwf	?_max_val
  9127  11A4  0824               	movf	max_val@b+1,w
  9128  11A5  00A1               	movwf	?_max_val+1
  9129  11A6  0825               	movf	max_val@b+2,w
  9130  11A7  00A2               	movwf	?_max_val+2
  9131  11A8  0008               	return
  9132  11A9                     __end_of_max_val:	
  9133                           
  9134                           	psect	text37
  9135  13D9                     __ptext37:	
  9136 ;; *************** function ___ftge *****************
  9137 ;; Defined at:
  9138 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  ff1             3    0[COMMON] float 
  9141 ;;  ff2             3    3[COMMON] float 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;		None               void
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9153 ;;      Params:         6       0       0       0       0
  9154 ;;      Locals:         0       0       0       0       0
  9155 ;;      Temps:          6       0       0       0       0
  9156 ;;      Totals:        12       0       0       0       0
  9157 ;;Total ram usage:       12 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_trimf
  9163 ;;		_trapmf
  9164 ;;		_max_val
  9165 ;;		_Fuzzy
  9166 ;;		_min_val
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           
  9171                           ;psect for function ___ftge
  9172  13D9                     ___ftge:	
  9173                           
  9174                           ;incstack = 0
  9175                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9176  13D9  1FF2               	btfss	___ftge@ff1+2,7
  9177  13DA  2C00               	goto	i1l2410
  9178  13DB  3000               	movlw	0
  9179  13DC  00F6               	movwf	??___ftge
  9180  13DD  3000               	movlw	0
  9181  13DE  00F7               	movwf	??___ftge+1
  9182  13DF  3080               	movlw	128
  9183  13E0  00F8               	movwf	??___ftge+2
  9184  13E1  0970               	comf	___ftge@ff1,w
  9185  13E2  00F9               	movwf	??___ftge+3
  9186  13E3  0971               	comf	___ftge@ff1+1,w
  9187  13E4  00FA               	movwf	??___ftge+4
  9188  13E5  0972               	comf	___ftge@ff1+2,w
  9189  13E6  00FB               	movwf	??___ftge+5
  9190  13E7  0AF9               	incf	??___ftge+3,f
  9191  13E8  1903               	skipnz
  9192  13E9  0AFA               	incf	??___ftge+4,f
  9193  13EA  1903               	skipnz
  9194  13EB  0AFB               	incf	??___ftge+5,f
  9195  13EC  0879               	movf	??___ftge+3,w
  9196  13ED  07F6               	addwf	??___ftge,f
  9197  13EE  087A               	movf	??___ftge+4,w
  9198  13EF  1803               	skipnc
  9199  13F0  0F7A               	incfsz	??___ftge+4,w
  9200  13F1  2BF3               	goto	u258_21
  9201  13F2  2BF4               	goto	u258_22
  9202  13F3                     u258_21:	
  9203  13F3  07F7               	addwf	??___ftge+1,f
  9204  13F4                     u258_22:	
  9205  13F4  087B               	movf	??___ftge+5,w
  9206  13F5  1803               	skipnc
  9207  13F6  0F7B               	incfsz	??___ftge+5,w
  9208  13F7  2BF9               	goto	u258_23
  9209  13F8  2BFA               	goto	u258_24
  9210  13F9                     u258_23:	
  9211  13F9  07F8               	addwf	??___ftge+2,f
  9212  13FA                     u258_24:	
  9213  13FA  0876               	movf	??___ftge,w
  9214  13FB  00F0               	movwf	___ftge@ff1
  9215  13FC  0877               	movf	??___ftge+1,w
  9216  13FD  00F1               	movwf	___ftge@ff1+1
  9217  13FE  0878               	movf	??___ftge+2,w
  9218  13FF  00F2               	movwf	___ftge@ff1+2
  9219  1400                     i1l2410:	
  9220  1400  1FF5               	btfss	___ftge@ff2+2,7
  9221  1401  2C27               	goto	i1l2414
  9222  1402  3000               	movlw	0
  9223  1403  00F6               	movwf	??___ftge
  9224  1404  3000               	movlw	0
  9225  1405  00F7               	movwf	??___ftge+1
  9226  1406  3080               	movlw	128
  9227  1407  00F8               	movwf	??___ftge+2
  9228  1408  0973               	comf	___ftge@ff2,w
  9229  1409  00F9               	movwf	??___ftge+3
  9230  140A  0974               	comf	___ftge@ff2+1,w
  9231  140B  00FA               	movwf	??___ftge+4
  9232  140C  0975               	comf	___ftge@ff2+2,w
  9233  140D  00FB               	movwf	??___ftge+5
  9234  140E  0AF9               	incf	??___ftge+3,f
  9235  140F  1903               	skipnz
  9236  1410  0AFA               	incf	??___ftge+4,f
  9237  1411  1903               	skipnz
  9238  1412  0AFB               	incf	??___ftge+5,f
  9239  1413  0879               	movf	??___ftge+3,w
  9240  1414  07F6               	addwf	??___ftge,f
  9241  1415  087A               	movf	??___ftge+4,w
  9242  1416  1803               	skipnc
  9243  1417  0F7A               	incfsz	??___ftge+4,w
  9244  1418  2C1A               	goto	u260_21
  9245  1419  2C1B               	goto	u260_22
  9246  141A                     u260_21:	
  9247  141A  07F7               	addwf	??___ftge+1,f
  9248  141B                     u260_22:	
  9249  141B  087B               	movf	??___ftge+5,w
  9250  141C  1803               	skipnc
  9251  141D  0F7B               	incfsz	??___ftge+5,w
  9252  141E  2C20               	goto	u260_23
  9253  141F  2C21               	goto	u260_24
  9254  1420                     u260_23:	
  9255  1420  07F8               	addwf	??___ftge+2,f
  9256  1421                     u260_24:	
  9257  1421  0876               	movf	??___ftge,w
  9258  1422  00F3               	movwf	___ftge@ff2
  9259  1423  0877               	movf	??___ftge+1,w
  9260  1424  00F4               	movwf	___ftge@ff2+1
  9261  1425  0878               	movf	??___ftge+2,w
  9262  1426  00F5               	movwf	___ftge@ff2+2
  9263  1427                     i1l2414:	
  9264  1427  3080               	movlw	128
  9265  1428  06F2               	xorwf	___ftge@ff1+2,f
  9266  1429  3080               	movlw	128
  9267  142A  06F5               	xorwf	___ftge@ff2+2,f
  9268  142B  0875               	movf	___ftge@ff2+2,w
  9269  142C  0272               	subwf	___ftge@ff1+2,w
  9270  142D  1D03               	skipz
  9271  142E  0008               	return
  9272  142F  0874               	movf	___ftge@ff2+1,w
  9273  1430  0271               	subwf	___ftge@ff1+1,w
  9274  1431  1D03               	skipz
  9275  1432  0008               	return
  9276  1433  0873               	movf	___ftge@ff2,w
  9277  1434  0270               	subwf	___ftge@ff1,w
  9278  1435  0008               	return
  9279  1436                     __end_of___ftge:	
  9280                           
  9281                           	psect	text38
  9282  1113                     __ptext38:	
  9283 ;; *************** function ___lwtoft *****************
  9284 ;; Defined at:
  9285 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  c               2    8[COMMON] unsigned int 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  3    8[COMMON] float 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0, pclath, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9299 ;;      Params:         3       0       0       0       0
  9300 ;;      Locals:         0       0       0       0       0
  9301 ;;      Temps:          1       0       0       0       0
  9302 ;;      Totals:         4       0       0       0       0
  9303 ;;Total ram usage:        4 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; Hardware stack levels required when called:    1
  9306 ;; This function calls:
  9307 ;;		___ftpack
  9308 ;; This function is called by:
  9309 ;;		_Fuzzy
  9310 ;;		_ISR
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           
  9315                           ;psect for function ___lwtoft
  9316  1113                     ___lwtoft:	
  9317                           
  9318                           ;incstack = 0
  9319                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9320  1113  0878               	movf	___lwtoft@c,w
  9321  1114  00F0               	movwf	___ftpack@arg
  9322  1115  0879               	movf	___lwtoft@c+1,w
  9323  1116  00F1               	movwf	___ftpack@arg+1
  9324  1117  01F2               	clrf	___ftpack@arg+2
  9325  1118  308E               	movlw	142
  9326  1119  00FB               	movwf	??___lwtoft
  9327  111A  087B               	movf	??___lwtoft,w
  9328  111B  00F3               	movwf	___ftpack@exp
  9329  111C  01F4               	clrf	___ftpack@sign
  9330  111D  160A  118A  2436   	fcall	___ftpack
  9331  1120  0870               	movf	?___ftpack,w
  9332  1121  00F8               	movwf	?___lwtoft
  9333  1122  0871               	movf	?___ftpack+1,w
  9334  1123  00F9               	movwf	?___lwtoft+1
  9335  1124  0872               	movf	?___ftpack+2,w
  9336  1125  00FA               	movwf	?___lwtoft+2
  9337  1126  0008               	return
  9338  1127                     __end_of___lwtoft:	
  9339                           
  9340                           	psect	text39
  9341  1509                     __ptext39:	
  9342 ;; *************** function ___fttol *****************
  9343 ;; Defined at:
  9344 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  f1              3    0[COMMON] float 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  lval            4    9[COMMON] unsigned long 
  9349 ;;  exp1            1   13[COMMON] unsigned char 
  9350 ;;  sign1           1    8[COMMON] unsigned char 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  4    0[COMMON] long 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9360 ;;      Params:         4       0       0       0       0
  9361 ;;      Locals:         6       0       0       0       0
  9362 ;;      Temps:          4       0       0       0       0
  9363 ;;      Totals:        14       0       0       0       0
  9364 ;;Total ram usage:       14 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_Fuzzy
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function ___fttol
  9375  1509                     ___fttol:	
  9376                           
  9377                           ;incstack = 0
  9378                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9379  1509  0870               	movf	___fttol@f1,w
  9380  150A  00F4               	movwf	??___fttol
  9381  150B  0871               	movf	___fttol@f1+1,w
  9382  150C  00F5               	movwf	??___fttol+1
  9383  150D  0872               	movf	___fttol@f1+2,w
  9384  150E  00F6               	movwf	??___fttol+2
  9385  150F  1003               	clrc
  9386  1510  0D75               	rlf	??___fttol+1,w
  9387  1511  0D76               	rlf	??___fttol+2,w
  9388  1512  00F7               	movwf	??___fttol+3
  9389  1513  0877               	movf	??___fttol+3,w
  9390  1514  00FD               	movwf	___fttol@exp1
  9391  1515  08FD               	movf	___fttol@exp1,f
  9392  1516  1D03               	skipz
  9393  1517  2D21               	goto	i1l2642
  9394  1518  3000               	movlw	0
  9395  1519  00F3               	movwf	?___fttol+3
  9396  151A  3000               	movlw	0
  9397  151B  00F2               	movwf	?___fttol+2
  9398  151C  3000               	movlw	0
  9399  151D  00F1               	movwf	?___fttol+1
  9400  151E  3000               	movlw	0
  9401  151F  00F0               	movwf	?___fttol
  9402  1520  0008               	return
  9403  1521                     i1l2642:	
  9404  1521  0870               	movf	___fttol@f1,w
  9405  1522  00F4               	movwf	??___fttol
  9406  1523  0871               	movf	___fttol@f1+1,w
  9407  1524  00F5               	movwf	??___fttol+1
  9408  1525  0872               	movf	___fttol@f1+2,w
  9409  1526  00F6               	movwf	??___fttol+2
  9410  1527  3017               	movlw	23
  9411  1528                     u311_25:	
  9412  1528  1003               	clrc
  9413  1529  0CF6               	rrf	??___fttol+2,f
  9414  152A  0CF5               	rrf	??___fttol+1,f
  9415  152B  0CF4               	rrf	??___fttol,f
  9416  152C  3EFF               	addlw	-1
  9417  152D  1D03               	skipz
  9418  152E  2D28               	goto	u311_25
  9419  152F  0874               	movf	??___fttol,w
  9420  1530  00F7               	movwf	??___fttol+3
  9421  1531  0877               	movf	??___fttol+3,w
  9422  1532  00F8               	movwf	___fttol@sign1
  9423  1533  17F1               	bsf	___fttol@f1+1,7
  9424  1534  30FF               	movlw	255
  9425  1535  05F0               	andwf	___fttol@f1,f
  9426  1536  30FF               	movlw	255
  9427  1537  05F1               	andwf	___fttol@f1+1,f
  9428  1538  3000               	movlw	0
  9429  1539  05F2               	andwf	___fttol@f1+2,f
  9430  153A  0870               	movf	___fttol@f1,w
  9431  153B  00F9               	movwf	___fttol@lval
  9432  153C  0871               	movf	___fttol@f1+1,w
  9433  153D  00FA               	movwf	___fttol@lval+1
  9434  153E  0872               	movf	___fttol@f1+2,w
  9435  153F  00FB               	movwf	___fttol@lval+2
  9436  1540  01FC               	clrf	___fttol@lval+3
  9437  1541  308E               	movlw	142
  9438  1542  02FD               	subwf	___fttol@exp1,f
  9439  1543  1FFD               	btfss	___fttol@exp1,7
  9440  1544  2D63               	goto	i1l2662
  9441  1545  087D               	movf	___fttol@exp1,w
  9442  1546  3A80               	xorlw	128
  9443  1547  3E8F               	addlw	143
  9444  1548  1803               	skipnc
  9445  1549  2D53               	goto	i1l2660
  9446  154A  3000               	movlw	0
  9447  154B  00F3               	movwf	?___fttol+3
  9448  154C  3000               	movlw	0
  9449  154D  00F2               	movwf	?___fttol+2
  9450  154E  3000               	movlw	0
  9451  154F  00F1               	movwf	?___fttol+1
  9452  1550  3000               	movlw	0
  9453  1551  00F0               	movwf	?___fttol
  9454  1552  0008               	return
  9455  1553                     i1l2660:	
  9456  1553  3001               	movlw	1
  9457  1554                     u314_25:	
  9458  1554  1003               	clrc
  9459  1555  0CFC               	rrf	___fttol@lval+3,f
  9460  1556  0CFB               	rrf	___fttol@lval+2,f
  9461  1557  0CFA               	rrf	___fttol@lval+1,f
  9462  1558  0CF9               	rrf	___fttol@lval,f
  9463  1559  3EFF               	addlw	-1
  9464  155A  1D03               	skipz
  9465  155B  2D54               	goto	u314_25
  9466  155C  3001               	movlw	1
  9467  155D  00F4               	movwf	??___fttol
  9468  155E  0874               	movf	??___fttol,w
  9469  155F  07FD               	addwf	___fttol@exp1,f
  9470  1560  1903               	btfsc	3,2
  9471  1561  2D7E               	goto	i1l2672
  9472  1562  2D53               	goto	i1l2660
  9473  1563                     i1l2662:	
  9474  1563  3018               	movlw	24
  9475  1564  027D               	subwf	___fttol@exp1,w
  9476  1565  1C03               	skipc
  9477  1566  2D7B               	goto	i1l2670
  9478  1567  3000               	movlw	0
  9479  1568  00F3               	movwf	?___fttol+3
  9480  1569  3000               	movlw	0
  9481  156A  00F2               	movwf	?___fttol+2
  9482  156B  3000               	movlw	0
  9483  156C  00F1               	movwf	?___fttol+1
  9484  156D  3000               	movlw	0
  9485  156E  00F0               	movwf	?___fttol
  9486  156F  0008               	return
  9487  1570                     i1l2668:	
  9488  1570  3001               	movlw	1
  9489  1571  00F4               	movwf	??___fttol
  9490  1572                     u317_25:	
  9491  1572  1003               	clrc
  9492  1573  0DF9               	rlf	___fttol@lval,f
  9493  1574  0DFA               	rlf	___fttol@lval+1,f
  9494  1575  0DFB               	rlf	___fttol@lval+2,f
  9495  1576  0DFC               	rlf	___fttol@lval+3,f
  9496  1577  0BF4               	decfsz	??___fttol,f
  9497  1578  2D72               	goto	u317_25
  9498  1579  3001               	movlw	1
  9499  157A  02FD               	subwf	___fttol@exp1,f
  9500  157B                     i1l2670:	
  9501  157B  08FD               	movf	___fttol@exp1,f
  9502  157C  1D03               	skipz
  9503  157D  2D70               	goto	i1l2668
  9504  157E                     i1l2672:	
  9505  157E  0878               	movf	___fttol@sign1,w
  9506  157F  1903               	btfsc	3,2
  9507  1580  2D8C               	goto	i1l2676
  9508  1581  09F9               	comf	___fttol@lval,f
  9509  1582  09FA               	comf	___fttol@lval+1,f
  9510  1583  09FB               	comf	___fttol@lval+2,f
  9511  1584  09FC               	comf	___fttol@lval+3,f
  9512  1585  0AF9               	incf	___fttol@lval,f
  9513  1586  1903               	skipnz
  9514  1587  0AFA               	incf	___fttol@lval+1,f
  9515  1588  1903               	skipnz
  9516  1589  0AFB               	incf	___fttol@lval+2,f
  9517  158A  1903               	skipnz
  9518  158B  0AFC               	incf	___fttol@lval+3,f
  9519  158C                     i1l2676:	
  9520  158C  087C               	movf	___fttol@lval+3,w
  9521  158D  00F3               	movwf	?___fttol+3
  9522  158E  087B               	movf	___fttol@lval+2,w
  9523  158F  00F2               	movwf	?___fttol+2
  9524  1590  087A               	movf	___fttol@lval+1,w
  9525  1591  00F1               	movwf	?___fttol+1
  9526  1592  0879               	movf	___fttol@lval,w
  9527  1593  00F0               	movwf	?___fttol
  9528  1594  0008               	return
  9529  1595                     __end_of___fttol:	
  9530                           
  9531                           	psect	text40
  9532  0852                     __ptext40:	
  9533 ;; *************** function ___ftmul *****************
  9534 ;; Defined at:
  9535 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  f1              3    8[COMMON] float 
  9538 ;;  f2              3   11[COMMON] float 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9541 ;;  sign            1    9[BANK0 ] unsigned char 
  9542 ;;  cntr            1    8[BANK0 ] unsigned char 
  9543 ;;  exp             1    4[BANK0 ] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  3    8[COMMON] float 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0, pclath, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9553 ;;      Params:         6       0       0       0       0
  9554 ;;      Locals:         0       6       0       0       0
  9555 ;;      Temps:          0       4       0       0       0
  9556 ;;      Totals:         6      10       0       0       0
  9557 ;;Total ram usage:       16 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    1
  9560 ;; This function calls:
  9561 ;;		___ftpack
  9562 ;; This function is called by:
  9563 ;;		_Fuzzy
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           
  9568                           ;psect for function ___ftmul
  9569  0852                     ___ftmul:	
  9570                           
  9571                           ;incstack = 0
  9572                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9573  0852  0878               	movf	___ftmul@f1,w
  9574  0853  1283               	bcf	3,5	;RP0=0, select bank0
  9575  0854  1303               	bcf	3,6	;RP1=0, select bank0
  9576  0855  00A0               	movwf	??___ftmul
  9577  0856  0879               	movf	___ftmul@f1+1,w
  9578  0857  00A1               	movwf	??___ftmul+1
  9579  0858  087A               	movf	___ftmul@f1+2,w
  9580  0859  00A2               	movwf	??___ftmul+2
  9581  085A  1003               	clrc
  9582  085B  0D21               	rlf	??___ftmul+1,w
  9583  085C  0D22               	rlf	??___ftmul+2,w
  9584  085D  00A3               	movwf	??___ftmul+3
  9585  085E  0823               	movf	??___ftmul+3,w
  9586  085F  00A4               	movwf	___ftmul@exp
  9587  0860  08A4               	movf	___ftmul@exp,f
  9588  0861  1D03               	skipz
  9589  0862  286A               	goto	i1l2592
  9590  0863  3000               	movlw	0
  9591  0864  00F8               	movwf	?___ftmul
  9592  0865  3000               	movlw	0
  9593  0866  00F9               	movwf	?___ftmul+1
  9594  0867  3000               	movlw	0
  9595  0868  00FA               	movwf	?___ftmul+2
  9596  0869  0008               	return
  9597  086A                     i1l2592:	
  9598  086A  087B               	movf	___ftmul@f2,w
  9599  086B  00A0               	movwf	??___ftmul
  9600  086C  087C               	movf	___ftmul@f2+1,w
  9601  086D  00A1               	movwf	??___ftmul+1
  9602  086E  087D               	movf	___ftmul@f2+2,w
  9603  086F  00A2               	movwf	??___ftmul+2
  9604  0870  1003               	clrc
  9605  0871  0D21               	rlf	??___ftmul+1,w
  9606  0872  0D22               	rlf	??___ftmul+2,w
  9607  0873  00A3               	movwf	??___ftmul+3
  9608  0874  0823               	movf	??___ftmul+3,w
  9609  0875  00A9               	movwf	___ftmul@sign
  9610  0876  08A9               	movf	___ftmul@sign,f
  9611  0877  1D03               	skipz
  9612  0878  2880               	goto	i1l2598
  9613  0879  3000               	movlw	0
  9614  087A  00F8               	movwf	?___ftmul
  9615  087B  3000               	movlw	0
  9616  087C  00F9               	movwf	?___ftmul+1
  9617  087D  3000               	movlw	0
  9618  087E  00FA               	movwf	?___ftmul+2
  9619  087F  0008               	return
  9620  0880                     i1l2598:	
  9621  0880  0829               	movf	___ftmul@sign,w
  9622  0881  3E7B               	addlw	123
  9623  0882  00A0               	movwf	??___ftmul
  9624  0883  0820               	movf	??___ftmul,w
  9625  0884  07A4               	addwf	___ftmul@exp,f
  9626  0885  0878               	movf	___ftmul@f1,w
  9627  0886  00A0               	movwf	??___ftmul
  9628  0887  0879               	movf	___ftmul@f1+1,w
  9629  0888  00A1               	movwf	??___ftmul+1
  9630  0889  087A               	movf	___ftmul@f1+2,w
  9631  088A  00A2               	movwf	??___ftmul+2
  9632  088B  3010               	movlw	16
  9633  088C                     u298_25:	
  9634  088C  1003               	clrc
  9635  088D  0CA2               	rrf	??___ftmul+2,f
  9636  088E  0CA1               	rrf	??___ftmul+1,f
  9637  088F  0CA0               	rrf	??___ftmul,f
  9638  0890  3EFF               	addlw	-1
  9639  0891  1D03               	skipz
  9640  0892  288C               	goto	u298_25
  9641  0893  0820               	movf	??___ftmul,w
  9642  0894  00A3               	movwf	??___ftmul+3
  9643  0895  0823               	movf	??___ftmul+3,w
  9644  0896  00A9               	movwf	___ftmul@sign
  9645  0897  087B               	movf	___ftmul@f2,w
  9646  0898  00A0               	movwf	??___ftmul
  9647  0899  087C               	movf	___ftmul@f2+1,w
  9648  089A  00A1               	movwf	??___ftmul+1
  9649  089B  087D               	movf	___ftmul@f2+2,w
  9650  089C  00A2               	movwf	??___ftmul+2
  9651  089D  3010               	movlw	16
  9652  089E                     u299_25:	
  9653  089E  1003               	clrc
  9654  089F  0CA2               	rrf	??___ftmul+2,f
  9655  08A0  0CA1               	rrf	??___ftmul+1,f
  9656  08A1  0CA0               	rrf	??___ftmul,f
  9657  08A2  3EFF               	addlw	-1
  9658  08A3  1D03               	skipz
  9659  08A4  289E               	goto	u299_25
  9660  08A5  0820               	movf	??___ftmul,w
  9661  08A6  00A3               	movwf	??___ftmul+3
  9662  08A7  0823               	movf	??___ftmul+3,w
  9663  08A8  06A9               	xorwf	___ftmul@sign,f
  9664  08A9  3080               	movlw	128
  9665  08AA  00A0               	movwf	??___ftmul
  9666  08AB  0820               	movf	??___ftmul,w
  9667  08AC  05A9               	andwf	___ftmul@sign,f
  9668  08AD  17F9               	bsf	___ftmul@f1+1,7
  9669  08AE  17FC               	bsf	___ftmul@f2+1,7
  9670  08AF  30FF               	movlw	255
  9671  08B0  05FB               	andwf	___ftmul@f2,f
  9672  08B1  30FF               	movlw	255
  9673  08B2  05FC               	andwf	___ftmul@f2+1,f
  9674  08B3  3000               	movlw	0
  9675  08B4  05FD               	andwf	___ftmul@f2+2,f
  9676  08B5  3000               	movlw	0
  9677  08B6  00A5               	movwf	___ftmul@f3_as_product
  9678  08B7  3000               	movlw	0
  9679  08B8  00A6               	movwf	___ftmul@f3_as_product+1
  9680  08B9  3000               	movlw	0
  9681  08BA  00A7               	movwf	___ftmul@f3_as_product+2
  9682  08BB  3007               	movlw	7
  9683  08BC  00A0               	movwf	??___ftmul
  9684  08BD  0820               	movf	??___ftmul,w
  9685  08BE  00A8               	movwf	___ftmul@cntr
  9686  08BF                     i1l2610:	
  9687  08BF  1C78               	btfss	___ftmul@f1,0
  9688  08C0  28CF               	goto	i1l2614
  9689  08C1  087B               	movf	___ftmul@f2,w
  9690  08C2  07A5               	addwf	___ftmul@f3_as_product,f
  9691  08C3  087C               	movf	___ftmul@f2+1,w
  9692  08C4  1103               	clrz
  9693  08C5  1803               	skipnc
  9694  08C6  0A7C               	incf	___ftmul@f2+1,w
  9695  08C7  1D03               	btfss	3,2
  9696  08C8  07A6               	addwf	___ftmul@f3_as_product+1,f
  9697  08C9  087D               	movf	___ftmul@f2+2,w
  9698  08CA  1103               	clrz
  9699  08CB  1803               	skipnc
  9700  08CC  0A7D               	incf	___ftmul@f2+2,w
  9701  08CD  1D03               	btfss	3,2
  9702  08CE  07A7               	addwf	___ftmul@f3_as_product+2,f
  9703  08CF                     i1l2614:	
  9704  08CF  3001               	movlw	1
  9705  08D0                     u302_25:	
  9706  08D0  1003               	clrc
  9707  08D1  0CFA               	rrf	___ftmul@f1+2,f
  9708  08D2  0CF9               	rrf	___ftmul@f1+1,f
  9709  08D3  0CF8               	rrf	___ftmul@f1,f
  9710  08D4  3EFF               	addlw	-1
  9711  08D5  1D03               	skipz
  9712  08D6  28D0               	goto	u302_25
  9713  08D7  3001               	movlw	1
  9714  08D8                     u303_25:	
  9715  08D8  1003               	clrc
  9716  08D9  0DFB               	rlf	___ftmul@f2,f
  9717  08DA  0DFC               	rlf	___ftmul@f2+1,f
  9718  08DB  0DFD               	rlf	___ftmul@f2+2,f
  9719  08DC  3EFF               	addlw	-1
  9720  08DD  1D03               	skipz
  9721  08DE  28D8               	goto	u303_25
  9722  08DF  3001               	movlw	1
  9723  08E0  02A8               	subwf	___ftmul@cntr,f
  9724  08E1  1D03               	btfss	3,2
  9725  08E2  28BF               	goto	i1l2610
  9726  08E3  3009               	movlw	9
  9727  08E4  00A0               	movwf	??___ftmul
  9728  08E5  0820               	movf	??___ftmul,w
  9729  08E6  00A8               	movwf	___ftmul@cntr
  9730  08E7                     i1l2622:	
  9731  08E7  1C78               	btfss	___ftmul@f1,0
  9732  08E8  28F7               	goto	i1l2626
  9733  08E9  087B               	movf	___ftmul@f2,w
  9734  08EA  07A5               	addwf	___ftmul@f3_as_product,f
  9735  08EB  087C               	movf	___ftmul@f2+1,w
  9736  08EC  1103               	clrz
  9737  08ED  1803               	skipnc
  9738  08EE  0A7C               	incf	___ftmul@f2+1,w
  9739  08EF  1D03               	btfss	3,2
  9740  08F0  07A6               	addwf	___ftmul@f3_as_product+1,f
  9741  08F1  087D               	movf	___ftmul@f2+2,w
  9742  08F2  1103               	clrz
  9743  08F3  1803               	skipnc
  9744  08F4  0A7D               	incf	___ftmul@f2+2,w
  9745  08F5  1D03               	btfss	3,2
  9746  08F6  07A7               	addwf	___ftmul@f3_as_product+2,f
  9747  08F7                     i1l2626:	
  9748  08F7  3001               	movlw	1
  9749  08F8                     u307_25:	
  9750  08F8  1003               	clrc
  9751  08F9  0CFA               	rrf	___ftmul@f1+2,f
  9752  08FA  0CF9               	rrf	___ftmul@f1+1,f
  9753  08FB  0CF8               	rrf	___ftmul@f1,f
  9754  08FC  3EFF               	addlw	-1
  9755  08FD  1D03               	skipz
  9756  08FE  28F8               	goto	u307_25
  9757  08FF  3001               	movlw	1
  9758  0900                     u308_25:	
  9759  0900  1003               	clrc
  9760  0901  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9761  0902  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9762  0903  0CA5               	rrf	___ftmul@f3_as_product,f
  9763  0904  3EFF               	addlw	-1
  9764  0905  1D03               	skipz
  9765  0906  2900               	goto	u308_25
  9766  0907  3001               	movlw	1
  9767  0908  02A8               	subwf	___ftmul@cntr,f
  9768  0909  1D03               	btfss	3,2
  9769  090A  28E7               	goto	i1l2622
  9770  090B  0825               	movf	___ftmul@f3_as_product,w
  9771  090C  00F0               	movwf	___ftpack@arg
  9772  090D  0826               	movf	___ftmul@f3_as_product+1,w
  9773  090E  00F1               	movwf	___ftpack@arg+1
  9774  090F  0827               	movf	___ftmul@f3_as_product+2,w
  9775  0910  00F2               	movwf	___ftpack@arg+2
  9776  0911  0824               	movf	___ftmul@exp,w
  9777  0912  00A0               	movwf	??___ftmul
  9778  0913  0820               	movf	??___ftmul,w
  9779  0914  00F3               	movwf	___ftpack@exp
  9780  0915  0829               	movf	___ftmul@sign,w
  9781  0916  00A1               	movwf	??___ftmul+1
  9782  0917  0821               	movf	??___ftmul+1,w
  9783  0918  00F4               	movwf	___ftpack@sign
  9784  0919  160A  118A  2436   	fcall	___ftpack
  9785  091C  0870               	movf	?___ftpack,w
  9786  091D  00F8               	movwf	?___ftmul
  9787  091E  0871               	movf	?___ftpack+1,w
  9788  091F  00F9               	movwf	?___ftmul+1
  9789  0920  0872               	movf	?___ftpack+2,w
  9790  0921  00FA               	movwf	?___ftmul+2
  9791  0922  0008               	return
  9792  0923                     __end_of___ftmul:	
  9793                           
  9794                           	psect	text41
  9795  1436                     __ptext41:	
  9796 ;; *************** function ___ftpack *****************
  9797 ;; Defined at:
  9798 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  arg             3    0[COMMON] unsigned um
  9801 ;;  exp             1    3[COMMON] unsigned char 
  9802 ;;  sign            1    4[COMMON] unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  3    0[COMMON] float 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         5       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0
  9816 ;;      Temps:          3       0       0       0       0
  9817 ;;      Totals:         8       0       0       0       0
  9818 ;;Total ram usage:        8 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		___ftadd
  9824 ;;		___ftdiv
  9825 ;;		___ftmul
  9826 ;;		___lwtoft
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function ___ftpack
  9832  1436                     ___ftpack:	
  9833                           
  9834                           ;incstack = 0
  9835                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9836  1436  0873               	movf	___ftpack@exp,w
  9837  1437  1903               	btfsc	3,2
  9838  1438  2C3E               	goto	i1l2266
  9839  1439  0872               	movf	___ftpack@arg+2,w
  9840  143A  0471               	iorwf	___ftpack@arg+1,w
  9841  143B  0470               	iorwf	___ftpack@arg,w
  9842  143C  1D03               	skipz
  9843  143D  2C51               	goto	i1l2272
  9844  143E                     i1l2266:	
  9845  143E  3000               	movlw	0
  9846  143F  00F0               	movwf	?___ftpack
  9847  1440  3000               	movlw	0
  9848  1441  00F1               	movwf	?___ftpack+1
  9849  1442  3000               	movlw	0
  9850  1443  00F2               	movwf	?___ftpack+2
  9851  1444  0008               	return
  9852  1445                     i1l2270:	
  9853  1445  3001               	movlw	1
  9854  1446  00F5               	movwf	??___ftpack
  9855  1447  0875               	movf	??___ftpack,w
  9856  1448  07F3               	addwf	___ftpack@exp,f
  9857  1449  3001               	movlw	1
  9858  144A                     u216_25:	
  9859  144A  1003               	clrc
  9860  144B  0CF2               	rrf	___ftpack@arg+2,f
  9861  144C  0CF1               	rrf	___ftpack@arg+1,f
  9862  144D  0CF0               	rrf	___ftpack@arg,f
  9863  144E  3EFF               	addlw	-1
  9864  144F  1D03               	skipz
  9865  1450  2C4A               	goto	u216_25
  9866  1451                     i1l2272:	
  9867  1451  30FE               	movlw	254
  9868  1452  0572               	andwf	___ftpack@arg+2,w
  9869  1453  1903               	btfsc	3,2
  9870  1454  2C6C               	goto	i1l769
  9871  1455  2C45               	goto	i1l2270
  9872  1456                     i1l2274:	
  9873  1456  3001               	movlw	1
  9874  1457  00F5               	movwf	??___ftpack
  9875  1458  0875               	movf	??___ftpack,w
  9876  1459  07F3               	addwf	___ftpack@exp,f
  9877  145A  3001               	movlw	1
  9878  145B  07F0               	addwf	___ftpack@arg,f
  9879  145C  3000               	movlw	0
  9880  145D  1803               	skipnc
  9881  145E  3001               	movlw	1
  9882  145F  07F1               	addwf	___ftpack@arg+1,f
  9883  1460  3000               	movlw	0
  9884  1461  1803               	skipnc
  9885  1462  3001               	movlw	1
  9886  1463  07F2               	addwf	___ftpack@arg+2,f
  9887  1464  3001               	movlw	1
  9888  1465                     u218_25:	
  9889  1465  1003               	clrc
  9890  1466  0CF2               	rrf	___ftpack@arg+2,f
  9891  1467  0CF1               	rrf	___ftpack@arg+1,f
  9892  1468  0CF0               	rrf	___ftpack@arg,f
  9893  1469  3EFF               	addlw	-1
  9894  146A  1D03               	skipz
  9895  146B  2C65               	goto	u218_25
  9896  146C                     i1l769:	
  9897  146C  30FF               	movlw	255
  9898  146D  0572               	andwf	___ftpack@arg+2,w
  9899  146E  1903               	btfsc	3,2
  9900  146F  2C7B               	goto	i1l2282
  9901  1470  2C56               	goto	i1l2274
  9902  1471                     i1l2280:	
  9903  1471  3001               	movlw	1
  9904  1472  02F3               	subwf	___ftpack@exp,f
  9905  1473  3001               	movlw	1
  9906  1474                     u220_25:	
  9907  1474  1003               	clrc
  9908  1475  0DF0               	rlf	___ftpack@arg,f
  9909  1476  0DF1               	rlf	___ftpack@arg+1,f
  9910  1477  0DF2               	rlf	___ftpack@arg+2,f
  9911  1478  3EFF               	addlw	-1
  9912  1479  1D03               	skipz
  9913  147A  2C74               	goto	u220_25
  9914  147B                     i1l2282:	
  9915  147B  1FF1               	btfss	___ftpack@arg+1,7
  9916  147C  2C71               	goto	i1l2280
  9917  147D  1873               	btfsc	___ftpack@exp,0
  9918  147E  2C85               	goto	i1l775
  9919  147F  30FF               	movlw	255
  9920  1480  05F0               	andwf	___ftpack@arg,f
  9921  1481  307F               	movlw	127
  9922  1482  05F1               	andwf	___ftpack@arg+1,f
  9923  1483  30FF               	movlw	255
  9924  1484  05F2               	andwf	___ftpack@arg+2,f
  9925  1485                     i1l775:	
  9926  1485  1003               	clrc
  9927  1486  0CF3               	rrf	___ftpack@exp,f
  9928  1487  0873               	movf	___ftpack@exp,w
  9929  1488  00F5               	movwf	??___ftpack
  9930  1489  01F6               	clrf	??___ftpack+1
  9931  148A  01F7               	clrf	??___ftpack+2
  9932  148B  3010               	movlw	16
  9933  148C                     u223_25:	
  9934  148C  1003               	clrc
  9935  148D  0DF5               	rlf	??___ftpack,f
  9936  148E  0DF6               	rlf	??___ftpack+1,f
  9937  148F  0DF7               	rlf	??___ftpack+2,f
  9938  1490  3EFF               	addlw	-1
  9939  1491  1D03               	skipz
  9940  1492  2C8C               	goto	u223_25
  9941  1493  0875               	movf	??___ftpack,w
  9942  1494  04F0               	iorwf	___ftpack@arg,f
  9943  1495  0876               	movf	??___ftpack+1,w
  9944  1496  04F1               	iorwf	___ftpack@arg+1,f
  9945  1497  0877               	movf	??___ftpack+2,w
  9946  1498  04F2               	iorwf	___ftpack@arg+2,f
  9947  1499  0874               	movf	___ftpack@sign,w
  9948  149A  1903               	btfsc	3,2
  9949  149B  0008               	return
  9950  149C  17F2               	bsf	___ftpack@arg+2,7
  9951  149D  0008               	return
  9952  149E                     __end_of___ftpack:	
  9953  007E                     btemp	set	126	;btemp
  9954  007E                     wtemp	set	126
  9955  007E                     wtemp0	set	126
  9956  0080                     wtemp1	set	128
  9957  0082                     wtemp2	set	130
  9958  0084                     wtemp3	set	132
  9959  0086                     wtemp4	set	134
  9960  0088                     wtemp5	set	136
  9961  007F                     wtemp6	set	127
  9962  007E                     ttemp	set	126
  9963  007E                     ttemp0	set	126
  9964  0081                     ttemp1	set	129
  9965  0084                     ttemp2	set	132
  9966  0087                     ttemp3	set	135
  9967  007F                     ttemp4	set	127
  9968  007E                     ltemp	set	126
  9969  007E                     ltemp0	set	126
  9970  0082                     ltemp1	set	130
  9971  0086                     ltemp2	set	134
  9972  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        8
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      71
    BANK3            96     11      66
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1258$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5324
                                             27 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2900
                                             18 BANK1      7     3      4
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55017
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51587
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      42       9       68.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E6      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 12:13:11 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00CB       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 01CF                            fsr 0004           ___wmul@multiplicand 00CD  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BD                  ___ftadd@sign 0034  
                         l212 09C8                           l237 10E7                           l507 0EDD  
                         l608 1281                           l663 15A7                           l489 0DA8  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0BC2  
                         _rpm 00C5                           fsr0 0004                           _pwm 00C3  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CF                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
          LCD_WriteString@Str 00CD                          l3014 11B7                          l3028 12C3  
                        l3414 13C7                          l3406 13A3                          l3430 132D  
                        l3408 13B1                          l3432 133B                          l3440 1354  
                        l3504 0F0E                          l3418 13D2                          l3530 0F6A  
                        l3514 0F2B                          l3522 0F49                          l3506 0F12  
                        l2564 15C8                          l2556 15B8                          l3436 1349  
                        l3380 10FF                          l3524 0F4D                          l3452 0DA4  
                        l2582 161B                          l2574 1600                          l2566 15D8  
                        l3462 0DE2                          l3544 0F89                          l3536 0F81  
                        l3472 0E4A                          l3456 0DB1                          l2578 160D  
                        l3386 1279                          l3474 0E6F                          l3458 0DC6  
                        l3546 0D6A                          l2908 12F4                          l3484 0E90  
                        l3548 0FF9                          l3496 0ECF                          l3488 0E96  
                        STR_1 18EA                          STR_2 18F8                          STR_3 1905  
                        STR_4 18CE                          STR_5 18B2                          STR_6 18A4  
                        STR_7 18DC                          STR_8 18C0                          STR_9 1886  
                        u4215 13A6                          u4305 1341                          u4235 13B2  
                        u4315 134A                          u4245 13BE                          u4255 13C8  
                        u4175 1282                          u3625 0814                          u4185 1289  
                        u4425 0EF6                          u2915 15DA                          u2925 15EF  
                        u4285 1330                          u4607 14EC                          u3655 11DE  
                        u2935 1601                          u4527 09C1                          u4617 14FA  
                        u4385 0EC1                          u4537 0A65                          u4627 1506  
                        u4547 114F                          u3595 11FF                          u4637 11C3  
                        u4557 14A8                          u4647 12A6                          u4567 14B8  
                        u2895 15CC                          u4657 12B4                          u4577 14C6  
                        u4667 12C0                          u4587 14D2                          u4677 1138  
                        u4597 14DE                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0923                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 1113                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 113E                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 10F1                         ??_ISR 00C7  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1509               __end_of___aldiv 1624                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 07FD                         STR_10 1895  
                       STR_11 1844                         STR_12 1861                         STR_13 1875  
                       STR_14 191E                         STR_15 191E                         STR_16 1892  
                       STR_17 1912                 __CFG_WDTE$OFF 0000                         STR_18 1918  
                       STR_19 181C               __end_of___ftdiv 16DC               __end_of___ftneg 10C9  
             __end_of___ftmul 0923                         _T1CON 0010               __end_of___fttol 1595  
             __end_of___lwdiv 13D9                         i1l128 17F7                         i1l138 0BB9  
                       i1l237 10CA                         i1l190 0D4E               __end_of___lwmod 135B  
                       i1l194 0C32                         i1l197 0C5B                         i1l608 1238  
                       i1l775 1485                         i1l769 146C                         i1l798 079C  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0061                         _foTip 0199  
                       _derro 0193               __end_of_dpowers 181C               __end_of_max_val 11A9  
             __end_of_isdigit 1101                 ___ftpack@sign 0074                         _trimf 16DC  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020                         pclath 000A  
            __end_of_PWM_Init 1275              __end_ofi1___wmul 1251                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 1000  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00CB                ?_LCD_WriteData 0070  
                 ?_USART_Init 00DA         i1TIMER0_Set@contagens 0070               __initialization 0019  
                __end_of_main 0A6C                        ??_main 00E2                 ___fttol@sign1 0078  
                ?_TIMER0_Init 0070             __end_of_LCD_Clear 12C3                    Fuzzy@a_240 0061  
                  Fuzzy@a_237 005B                    Fuzzy@a_238 005D                    Fuzzy@a_239 005F  
                      ?_Fuzzy 0070                    Fuzzy@reduz 0069                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON2 018D              __end_of___ftpack 149E  
                      ?_trimf 0047                        i1l2300 071D                        i1l2310 0733  
                      i1l2304 0724                        i1l2410 1400                        i1l2330 076E  
                      i1l2322 074D                        i1l3210 0BE7                        i1l2340 078C  
                      i1l2332 0773                        i1l2270 1445                        i1l2414 1427  
                      i1l2350 07C0                        i1l2342 0798                        i1l2334 0777  
                      i1l3222 0C15                        i1l2280 1471                        i1l2272 1451  
                      i1l2360 07E3                        i1l2328 0762                        i1l3304 0D49  
                      i1l3232 0C33                        i1l3216 0BFE                        i1l2282 147B  
                      i1l2274 1456                        i1l2266 143E                        i1l2610 08BF  
                      i1l2346 07AE                        i1l2370 163C                        i1l2450 1755  
                      i1l3306 0D4A                        i1l3250 0C74                        i1l3156 1230  
                      i1l3244 0C5D                        i1l2622 08E7                        i1l2614 08CF  
                      i1l2390 1697                        i1l3262 0CA2                        i1l2376 1652  
                      i1l2480 0B17                        i1l2456 17DA                        i1l2800 031D  
                      i1l3184 1387                        i1l3176 1363                        i1l3256 0C8B  
                      i1l3280 0CED                        i1l2626 08F7                        i1l2642 1521  
                      i1l2474 0AE5                        i1l2810 03E2                        i1l3178 1371  
                      i1l3274 0CD0                        i1l2660 1553                        i1l2804 037B  
                      i1l3188 1392                        i1l3292 0D0A                        i1l3268 0CB9  
                      i1l2670 157B                        i1l2662 1563                        i1l2398 16B6  
                      i1l2486 0B9C                        i1l2592 086A                        i1l2672 157E  
                      i1l2840 055A                        i1l2824 0480                        i1l2760 0107  
                      i1l2850 05A9                        i1l2834 054B                        i1l2738 120B  
                      i1l2676 158C                        i1l2668 1570                        i1l2844 0577  
                      i1l2828 04E4                        i1l2756 00EA                        i1l2598 0880  
                      i1l2862 05E5                        i1l2854 05C2                        i1l2774 01A5  
                      i1l2784 0270                        i1l2778 0209                        i1l2868 069C  
                      u220_25 1474                        i1l2896 1188                        i1l2888 1179  
                      u302_25 08D0                        u223_25 148C                        u303_25 08D8  
                      u311_25 1528                        u216_25 144A                        u240_25 0778  
                      u218_25 1465                        u314_25 1554                        u234_25 074E  
                      u307_25 08F8                        u243_25 078D                        u251_25 1664  
                      u260_21 141A                        u260_22 141B                        u260_23 1420  
                      u260_24 1421                        u308_25 0900                        u252_25 1676  
                      u340_25 026E                        u317_25 1572                        u237_25 0763  
                      u253_25 1698                        u254_25 16A9                        u334_25 1166  
                      u350_25 0558                        u255_25 16B7                        u343_25 031B  
                      u345_25 03E0                        u258_21 13F3              __end_of___lwtoft 1127  
                      u258_22 13F4                        u258_23 13F9                        u258_24 13FA  
                      u354_25 05C0                        u338_25 01A3                        u355_25 05E3  
                      u347_25 047E                        u356_25 069A                        u349_25 0549  
         __size_of_TIMER0_Set 0008                        u390_25 1366                        u392_25 1372  
                      u393_25 137E                        u298_25 088C                        u394_25 1388  
                      u386_25 1239                        u299_25 089E                        u387_25 1240  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 0059  
            LCD_WriteCmd@Byte 00CC           i1_USART_WriteString 120B                        ___ftge 13D9  
                   ??___aldiv 00D3                        ___wmul 1275                     ??___ftadd 0030  
              _PWM_DutyCycle1 11C9                _PWM_DutyCycle2 11EA              ?_USART_WriteChar 0070  
                   ??___ftdiv 003D                     ??___ftneg 0073                        _deltaV 00BF  
                   ??___ftmul 0020                     ??___fttol 0074                     ??___lwdiv 00CF  
                   ??___lwmod 00D7                        _fitemp 00A0         USART_ReceiveChar@byte 0074  
                      _trapmf 0A6C                        _pulsos 00C1                        _status 01A7  
       ___ftmul@f3_as_product 0025                     ??_max_val 007C             __end_ofi1___lwdiv 1399  
                   ??_isdigit 00CB                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 004A  
                      trimf@b 004D                        trimf@c 0050                        trimf@x 0047  
                   ??_sprintf 00DD                 ?i1_TIMER0_Set 0070       __end_of__initialization 005D  
                   ?_LCD_Init 0070                    ___ftadd@f1 002A                    ___ftadd@f2 002D  
             ??_LCD_WriteData 00CB                    ___ftge@ff1 0070                    ___ftge@ff2 0073  
                  ___ftdiv@f1 003A                    ___ftdiv@f2 0037                    ___ftdiv@f3 0042  
                  ___ftneg@f1 0070        __end_of_PWM_DutyCycle1 11EA        __end_of_PWM_DutyCycle2 120B  
                  ___ftmul@f1 0078                    ___ftmul@f2 007B                    ___fttol@f1 0070  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 06F4                  __pidataBANK1 07FD  
                __pidataBANK3 10BB                 LCD_Cursor@Col 00CB                 LCD_Cursor@Row 00CD  
                ??_LCD_Cursor 00CC               _LCD_WriteString 12C3                 __end_of_trimf 1800  
                  ___lwtoft@c 0078                     ?_PWM_Init 0070                     ?i1___wmul 0078  
              _OPTION_REGbits 0081                    ??_ADC_Init 00CB          __end_of_LCD_WriteCmd 113E  
       ??i1_USART_WriteString 0073                       ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B  
              ??i1_TIMER0_Set 0070                  sprintf@width 01C8                       ??_trimf 007E  
                  __pbssBANK1 00A0                    __pbssBANK3 0190            __end_of_LCD_Cursor 11C9  
                  ??_LCD_Init 00CD         i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CB  
             ?_PWM_DutyCycle2 00CB                    __pmaintext 0923                   Fuzzy@mantem 0066  
                     ?___ftge 0070                       ?___wmul 00CB                    __pintentry 0004  
                ??_TIMER0_Set 00CB                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0047                    ??_PWM_Init 00CB  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
     _posicao_do_grafico_food 019F                       _SSPCON2 0091                    __stringtab 1800  
                  _fisetpoint 0196            __end_of_TIMER0_Set 10D9       __end_of_LCD_WriteString 12F4  
                   _ADCResult 00BB                  ??_USART_Init 00DE             LCD_WriteData@Byte 00CC  
                     ___aldiv 1595               __size_of___ftge 005D                       ___ftadd 06F4  
                     ___ftdiv 1624                       ___ftneg 10C1               __size_of___wmul 0025  
                     ___ftmul 0852                       ___fttol 1509                       ___lwdiv 1399  
                     ___lwmod 1325                    ??___ftpack 0075            _posicao_do_grafico 019C  
                     __ptext1 0D5F                       __ptext2 10F1                       __ptext3 1275  
                     __ptext4 1325                       __ptext5 1399                       __ptext6 12F4  
                     __ptext7 10E4                       __ptext8 0809                       __ptext9 1595  
                  _pas_cooler 00E5                    ??___lwtoft 007B               __size_of_trapmf 0156  
                __size_of_ISR 019D                     _T1CONbits 0010                       _dpowers 1812  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 118B  
                     _isdigit 10F1             i1___lwdiv@counter 0077              ___aldiv@dividend 00CF  
                   _LCD_Clear 129A            __end_of_USART_Init 0852                       _sprintf 0D5F  
                     clrloop0 0802          end_of_initialization 005D                     _RCSTAbits 0018  
            ___aldiv@quotient 00D6                       trapmf@a 004A                       trapmf@b 004D  
                     trapmf@c 0050                       trapmf@d 0053                       trapmf@x 0047  
                     trimf@ua 0053                  __pstringtext 1800          __end_ofi1_TIMER0_Set 10BB  
       i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006  
                   _PORTEbits 0009                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1155  
           __size_of_ADC_Init 0012                     i1___lwdiv 135B                  _contador_rb6 01A5  
         PWM_DutyCycle1@valor 00CB                    _total_area 00B2           PWM_DutyCycle2@valor 00CB  
                 _CCP1CONbits 0017                   ___ftdiv@exp 0045                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00CD             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 1127                   ___ftmul@exp 0024                __end_of___ftge 1436  
              __end_of___wmul 129A             i1_USART_WriteChar 10C9            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0BC2      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0019             __size_ofi1___wmul 0023                   __end_of_ISR 0D5F  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CD  
            ??_PWM_DutyCycle2 00CD         __end_of_LCD_WriteData 1155             _USART_ReceiveChar 1170  
                    ??___ftge 0076            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 10D1  
                    ??___wmul 00CF                   __pdataBANK1 00E5                   __pdataBANK3 01CC  
 __end_ofi1_USART_WriteString 122E                      ??_trapmf 007E           ??_USART_ReceiveChar 0073  
           __size_of___ftpack 0068                     ___latbits 0002             __size_of___lwtoft 0014  
               __pcstackBANK0 0020                 __pcstackBANK1 00C7                 __pcstackBANK3 01C1  
                 ??_LCD_Clear 00CD           __end_of__stringdata 1923                  _isdigit$1454 00CB  
                 sprintf@_val 01C3                   sprintf@flag 01C7                   sprintf@prec 01C2  
   __end_of_USART_ReceiveChar 118B         __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CD  
         TIMER0_Set@contagens 00CB                  Fuzzy@aumenta 006C                      ?___aldiv 00CB  
                    ?___ftadd 002A                      ?___ftdiv 0037                      ?___ftneg 0070  
                    ?___ftmul 0078                      ?___fttol 0070                      ?___lwdiv 00CB  
                    ?___lwmod 00D3                     _ativa_fan 0190                 ??_TIMER0_Init 00CB  
          USART_Init@BaudRate 00DA                      ?_max_val 0020                      ?_isdigit 0070  
                    _ADC_Init 1101                     _fop_rule1 00A3                     _fop_rule2 00A6  
                   _fop_rule3 00A9                __size_of_Fuzzy 0693    _posicao_do_grafico_service 01A2  
            ___lwdiv@quotient 00D1                   ??i1___lwdiv 0074                      ?_sprintf 00D9  
              __size_of_trimf 0124             ??_USART_WriteChar 00CB                  i1_TIMER0_Set 10B5  
             ___aldiv@divisor 00CB             interrupt_function 0004               ___aldiv@counter 00D4  
                    _LCD_Init 149E                ___wmul@product 00CF                     clear_ram0 0801  
                    _PIE1bits 008C                      _PIE2bits 008D                      _PIR1bits 000C  
                    _PIR2bits 000D                     _temp_lida 01A9      __end_ofi1_PWM_DutyCycle2 1170  
                   _tempo_rb6 01AB    __size_ofi1_USART_WriteChar 0008                   _display_rpm 01B7  
                 _display_pwm 01AD                    _ADCON0bits 001F                   __stringbase 1812  
                  _ADCON1bits 009F                   __stringdata 181C                      _PWM_Init 1251  
           ___wmul@multiplier 00CB                      i1___wmul 122E           __end_of_TIMER0_Init 10E4  
  __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C                      Fuzzy@tip 0063  
            __size_of___aldiv 008F              __size_of___ftadd 0109              __size_of___ftdiv 00B8  
            __size_of___ftneg 0008              __size_of___ftmul 00D1              __size_of___fttol 008C  
            __size_of___lwdiv 0040              __size_of___lwmod 0036                      ___ftpack 1436  
          __end_of__stringtab 1812                      ___lwtoft 1113              __size_of_max_val 001E  
            __size_of_isdigit 0010               ___lwdiv@divisor 00CB               ___lwdiv@counter 00D0  
           _USART_WriteString 12F4                      __ptext10 10D1                      __ptext11 10D9  
                    __ptext20 1127                      __ptext12 1251                      __ptext21 1101  
                    __ptext13 11EA                      __ptext30 1155                      __ptext22 0BC2  
                    __ptext14 11C9                      __ptext31 16DC                      __ptext23 122E  
                    __ptext15 12C3                      __ptext40 0852                      __ptext32 0A6C  
                    __ptext24 135B                      __ptext16 113E                      __ptext41 1436  
                    __ptext33 10C1                      __ptext25 10B5                      __ptext17 149E  
                    __ptext34 1624                      __ptext26 1170                      __ptext18 11A9  
                    __ptext35 06F4                      __ptext27 120B                      __ptext19 129A  
                    __ptext36 118B                      __ptext28 10C9                      __ptext37 13D9  
                    __ptext29 0061                      __ptext38 1113                      __ptext39 1509  
          ?_USART_WriteString 00CC              __size_of_sprintf 02A1            i1___lwdiv@dividend 0072  
               __size_of_main 0149           USART_WriteChar@byte 00CB           ??_USART_WriteString 00CE  
      i1USART_WriteString@str 0071                      _setpoint 01CC                    _LCD_Cursor 11A9  
    __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075                   _TIMER0_Init 10D9  
                  _INTCONbits 000B     __end_of_USART_WriteString 1325                      max_val@a 0020  
                    max_val@b 0023                      isdigit@c 00CC                      intlevel1 0000  
                   sprintf@ap 01C1                     sprintf@sp 01CA              ___lwmod@dividend 00D5  
                   stringcode 180A          USART_WriteString@str 00CC                    _TIMER0_Set 10D1  
                    trapmf@ua 0056               _USART_WriteChar 10E4                      sprintf@c 01CB  
                    sprintf@f 00D9               ___lwmod@divisor 00D3               ___lwmod@counter 00D8  
                    stringtab 1800                  ___aldiv@sign 00D5        __size_of_LCD_WriteData 0017  
__size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070  
                  _SSPCONbits 0014                    _USART_Init 0809  
