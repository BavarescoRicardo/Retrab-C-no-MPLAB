

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 11:43:12 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  000E                     	;# 
   370  000F                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  0088                     	;# 
   394  0089                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  010E                     	;# 
   411  010F                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0088                     	;# 
   454  0089                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0094                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594                           
   595                           	psect	idataBANK1
   596  1418                     __pidataBANK1:	
   597                           
   598                           ;initializer for _setpoint
   599  1418  3400               	retlw	0
   600  1419  34A0               	retlw	160
   601  141A  3441               	retlw	65
   602                           
   603                           ;initializer for _tf
   604  141B  3400               	retlw	0
   605  141C  3448               	retlw	72
   606  141D  3442               	retlw	66
   607                           
   608                           ;initializer for _pas_cooler
   609  141E  3407               	retlw	7
   610  141F  3400               	retlw	0
   611                           
   612                           ;initializer for _pwm
   613  1420  3432               	retlw	50
   614  1421  3400               	retlw	0
   615  000E                     _TMR1	set	14
   616  001F                     _ADCON0bits	set	31
   617  001E                     _ADRESH	set	30
   618  0017                     _CCP1CON	set	23
   619  0017                     _CCP1CONbits	set	23
   620  001D                     _CCP2CON	set	29
   621  001D                     _CCP2CONbits	set	29
   622  0015                     _CCPR1L	set	21
   623  001B                     _CCPR2L	set	27
   624  000B                     _INTCONbits	set	11
   625  000C                     _PIR1bits	set	12
   626  000D                     _PIR2bits	set	13
   627  0005                     _PORTA	set	5
   628  0006                     _PORTB	set	6
   629  0006                     _PORTBbits	set	6
   630  0007                     _PORTC	set	7
   631  0008                     _PORTD	set	8
   632  0009                     _PORTE	set	9
   633  0009                     _PORTEbits	set	9
   634  001A                     _RCREG	set	26
   635  0018                     _RCSTAbits	set	24
   636  0013                     _SSPBUF	set	19
   637  0014                     _SSPCONbits	set	20
   638  0010                     _T1CON	set	16
   639  0010                     _T1CONbits	set	16
   640  0012                     _T2CONbits	set	18
   641  0001                     _TMR0	set	1
   642  000F                     _TMR1H	set	15
   643  000E                     _TMR1L	set	14
   644  0019                     _TXREG	set	25
   645  00C1                     _OERR	set	193
   646  009F                     _ADCON1bits	set	159
   647  009E                     _ADRESL	set	158
   648  0081                     _OPTION_REGbits	set	129
   649  008C                     _PIE1bits	set	140
   650  008D                     _PIE2bits	set	141
   651  0092                     _PR2	set	146
   652  0099                     _SPBRG	set	153
   653  0093                     _SSPADD	set	147
   654  0091                     _SSPCON2	set	145
   655  0091                     _SSPCON2bits	set	145
   656  0094                     _SSPSTATbits	set	148
   657  0085                     _TRISA	set	133
   658  0086                     _TRISB	set	134
   659  0087                     _TRISC	set	135
   660  0088                     _TRISD	set	136
   661  0089                     _TRISE	set	137
   662  0098                     _TXSTAbits	set	152
   663  010D                     _EEADR	set	269
   664  010C                     _EEDATA	set	268
   665  018C                     _EECON1bits	set	396
   666  018D                     _EECON2	set	397
   667                           
   668                           	psect	strings
   669  1000                     __pstrings:	
   670  1000                     stringtab:	
   671  1000                     __stringtab:	
   672                           
   673                           ;	String table - string pointers are 1 byte each
   674  1000  1BFF               	btfsc	btemp+1,7
   675  1001  280A               	ljmp	stringcode
   676  1002  1383               	bcf	3,7
   677  1003  187F               	btfsc	btemp+1,0
   678  1004  1783               	bsf	3,7
   679  1005  0800               	movf	0,w
   680  1006  0A84               	incf	4,f
   681  1007  1903               	skipnz
   682  1008  0AFF               	incf	btemp+1,f
   683  1009  0008               	return
   684  100A                     stringcode:	
   685  100A                     stringdir:	
   686  100A  3010               	movlw	high stringdir
   687  100B  008A               	movwf	10
   688  100C  0804               	movf	4,w
   689  100D  0A84               	incf	4,f
   690  100E  0782               	addwf	2,f
   691  100F                     __stringbase:	
   692  100F  3400               	retlw	0
   693  1010                     __end_of__stringtab:	
   694  1010                     __stringdata:	
   695  1010                     STR_4:	
   696  1010  340A               	retlw	10
   697  1011  340D               	retlw	13
   698  1012  3420               	retlw	32	;' '
   699  1013  342D               	retlw	45	;'-'
   700  1014  342D               	retlw	45	;'-'
   701  1015  342D               	retlw	45	;'-'
   702  1016  342D               	retlw	45	;'-'
   703  1017  342D               	retlw	45	;'-'
   704  1018  342D               	retlw	45	;'-'
   705  1019  342D               	retlw	45	;'-'
   706  101A  3420               	retlw	32	;' '
   707  101B  3445               	retlw	69	;'E'
   708  101C  3453               	retlw	83	;'S'
   709  101D  3454               	retlw	84	;'T'
   710  101E  344F               	retlw	79	;'O'
   711  101F  3455               	retlw	85	;'U'
   712  1020  3452               	retlw	82	;'R'
   713  1021  344F               	retlw	79	;'O'
   714  1022  3420               	retlw	32	;' '
   715  1023  3444               	retlw	68	;'D'
   716  1024  3445               	retlw	69	;'E'
   717  1025  3420               	retlw	32	;' '
   718  1026  3450               	retlw	80	;'P'
   719  1027  3449               	retlw	73	;'I'
   720  1028  344C               	retlw	76	;'L'
   721  1029  3448               	retlw	72	;'H'
   722  102A  3441               	retlw	65	;'A'
   723  102B  3420               	retlw	32	;' '
   724  102C  342D               	retlw	45	;'-'
   725  102D  342D               	retlw	45	;'-'
   726  102E  342D               	retlw	45	;'-'
   727  102F  342D               	retlw	45	;'-'
   728  1030  342D               	retlw	45	;'-'
   729  1031  342D               	retlw	45	;'-'
   730  1032  342D               	retlw	45	;'-'
   731  1033  3420               	retlw	32	;' '
   732  1034  340A               	retlw	10
   733  1035  340D               	retlw	13
   734  1036  3420               	retlw	32	;' '
   735  1037  3400               	retlw	0
   736  1038                     STR_2:	
   737  1038  3449               	retlw	73	;'I'
   738  1039  346E               	retlw	110	;'n'
   739  103A  3469               	retlw	105	;'i'
   740  103B  3463               	retlw	99	;'c'
   741  103C  3469               	retlw	105	;'i'
   742  103D  3461               	retlw	97	;'a'
   743  103E  346C               	retlw	108	;'l'
   744  103F  3469               	retlw	105	;'i'
   745  1040  347A               	retlw	122	;'z'
   746  1041  3461               	retlw	97	;'a'
   747  1042  346E               	retlw	110	;'n'
   748  1043  3464               	retlw	100	;'d'
   749  1044  346F               	retlw	111	;'o'
   750  1045  342E               	retlw	46	;'.'
   751  1046  342E               	retlw	46	;'.'
   752  1047  342E               	retlw	46	;'.'
   753  1048  3400               	retlw	0
   754  1049                     STR_1:	
   755  1049  340A               	retlw	10
   756  104A  340D               	retlw	13
   757  104B  3464               	retlw	100	;'d'
   758  104C  3465               	retlw	101	;'e'
   759  104D  3473               	retlw	115	;'s'
   760  104E  346C               	retlw	108	;'l'
   761  104F  3469               	retlw	105	;'i'
   762  1050  3467               	retlw	103	;'g'
   763  1051  3461               	retlw	97	;'a'
   764  1052  3464               	retlw	100	;'d'
   765  1053  346F               	retlw	111	;'o'
   766  1054  340A               	retlw	10
   767  1055  340D               	retlw	13
   768  1056  3400               	retlw	0
   769  1057                     STR_3:	
   770  1057  346B               	retlw	107	;'k'
   771  1058  346D               	retlw	109	;'m'
   772  1059  3448               	retlw	72	;'H'
   773  105A  343A               	retlw	58	;':'
   774  105B  3420               	retlw	32	;' '
   775  105C  3400               	retlw	0
   776  105D                     __end_of__stringdata:	
   777                           
   778                           ; #config settings
   779  0000                     
   780                           	psect	cinit
   781  0015                     start_initialization:	
   782  0015                     __initialization:	
   783                           
   784                           ; Clear objects allocated to BANK0
   785  0015  01ED               	clrf	__pbssBANK0& (0+127)
   786  0016  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   787                           
   788                           ; Clear objects allocated to BANK1
   789  0017  1383               	bcf	3,7	;select IRP bank0
   790  0018  30A0               	movlw	low __pbssBANK1
   791  0019  0084               	movwf	4
   792  001A  30C7               	movlw	low (__pbssBANK1+39)
   793  001B  120A  158A  2000  120A  118A  	fcall	clear_ram0
   794                           
   795                           ; Clear objects allocated to BANK3
   796  0020  1783               	bsf	3,7	;select IRP bank2
   797  0021  3090               	movlw	low __pbssBANK3
   798  0022  0084               	movwf	4
   799  0023  30A7               	movlw	low (__pbssBANK3+23)
   800  0024  120A  158A  2000  120A  118A  	fcall	clear_ram0
   801                           
   802                           ; Initialize objects allocated to BANK1
   803  0029  1383               	bcf	3,7	;select IRP bank0
   804  002A  30EB               	movlw	low (__pdataBANK1+10)
   805  002B  00FD               	movwf	btemp+-1
   806  002C  3014               	movlw	high __pidataBANK1
   807  002D  00FE               	movwf	btemp
   808  002E  3018               	movlw	low __pidataBANK1
   809  002F  00FF               	movwf	btemp+1
   810  0030  30E1               	movlw	low __pdataBANK1
   811  0031  0084               	movwf	4
   812  0032  160A  118A  2431   	fcall	init_ram0
   813  0035                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  0035                     __end_of__initialization:	
   817  0035  0183               	clrf	3
   818  0036  120A  158A  2A5B   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  006D                     __pbssBANK0:	
   822  006D                     _deltaV:	
   823  006D                     	ds	2
   824                           
   825                           	psect	bssBANK1
   826  00A0                     __pbssBANK1:	
   827  00A0                     _ativa_fan:	
   828  00A0                     	ds	3
   829  00A3                     _fitemp:	
   830  00A3                     	ds	3
   831  00A6                     _fop_rule1:	
   832  00A6                     	ds	3
   833  00A9                     _fop_rule2:	
   834  00A9                     	ds	3
   835  00AC                     _fop_rule3:	
   836  00AC                     	ds	3
   837  00AF                     _sum:	
   838  00AF                     	ds	3
   839  00B2                     _total_area:	
   840  00B2                     	ds	3
   841  00B5                     _x:	
   842  00B5                     	ds	3
   843  00B8                     _y:	
   844  00B8                     	ds	3
   845  00BB                     _ADCResult:	
   846  00BB                     	ds	2
   847  00BD                     _contagens_tm0:	
   848  00BD                     	ds	2
   849  00BF                     _pulsos:	
   850  00BF                     	ds	2
   851  00C1                     _rpm:	
   852  00C1                     	ds	2
   853  00C3                     _setpointUI:	
   854  00C3                     	ds	2
   855  00C5                     _status:	
   856  00C5                     	ds	2
   857                           
   858                           	psect	dataBANK1
   859  00E1                     __pdataBANK1:	
   860  00E1                     _setpoint:	
   861  00E1                     	ds	3
   862  00E4                     _tf:	
   863  00E4                     	ds	3
   864  00E7                     _pas_cooler:	
   865  00E7                     	ds	2
   866  00E9                     _pwm:	
   867  00E9                     	ds	2
   868                           
   869                           	psect	bssBANK3
   870  0190                     __pbssBANK3:	
   871  0190                     _buffer:	
   872  0190                     	ds	13
   873  019D                     _display_rpm:	
   874  019D                     	ds	10
   875                           
   876                           	psect	clrtext
   877  0800                     clear_ram0:	
   878                           ;	Called with FSR containing the base address, and
   879                           ;	W with the last address+1
   880                           
   881  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   882  0801                     clrloop0:	
   883  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   884  0802  0A84               	incf	4,f	;increment pointer
   885  0803  0604               	xorwf	4,w	;XOR with final address
   886  0804  1903               	btfsc	3,2	;have we reached the end yet?
   887  0805  3400               	retlw	0	;all done for this memory range, return
   888  0806  0604               	xorwf	4,w	;XOR again to restore value
   889  0807  2801               	goto	clrloop0	;do the next byte
   890                           
   891                           	psect	inittext
   892  142D                     init_fetch0:	
   893                           ;	Called with low address in FSR and high address in W
   894                           
   895  142D  087E               	movf	126,w
   896  142E  008A               	movwf	10
   897  142F  087F               	movf	127,w
   898  1430  0082               	movwf	2
   899  1431                     init_ram0:	
   900                           ;Called with:
   901                           ;	high address of idata address in btemp 
   902                           ;	low address of idata address in btemp+1 
   903                           ;	low address of data in FSR
   904                           ;	high address + 1 of data in btemp-1
   905                           
   906  1431  242D  160A  118A   	fcall	init_fetch0
   907  1434  0080               	movwf	0
   908  1435  0A84               	incf	4,f
   909  1436  0804               	movf	4,w
   910  1437  067D               	xorwf	125,w
   911  1438  1903               	btfsc	3,2
   912  1439  3400               	retlw	0
   913  143A  0AFF               	incf	127,f
   914  143B  1903               	btfsc	3,2
   915  143C  0AFE               	incf	126,f
   916  143D  2C31               	goto	init_ram0
   917                           
   918                           	psect	cstackBANK1
   919  00C7                     __pcstackBANK1:	
   920  00C7                     ?_PWM_DutyCycle2:	
   921  00C7                     ??_TIMER0_Set:	
   922                           ; 0 bytes @ 0x0
   923                           
   924  00C7                     ??_TIMER0_Init:	
   925                           ; 0 bytes @ 0x0
   926                           
   927  00C7                     ??_ADC_Init:	
   928                           ; 0 bytes @ 0x0
   929                           
   930  00C7                     ??_PWM_Init:	
   931                           ; 0 bytes @ 0x0
   932                           
   933  00C7                     ?_LCD_Cursor:	
   934                           ; 0 bytes @ 0x0
   935                           
   936  00C7                     ?_PWM_DutyCycle1:	
   937                           ; 0 bytes @ 0x0
   938                           
   939  00C7                     ??_LCD_WriteCmd:	
   940                           ; 0 bytes @ 0x0
   941                           
   942  00C7                     ??_LCD_WriteData:	
   943                           ; 0 bytes @ 0x0
   944                           
   945  00C7                     ?___aldiv:	
   946                           ; 0 bytes @ 0x0
   947                           
   948  00C7                     TIMER0_Set@contagens:	
   949                           ; 4 bytes @ 0x0
   950                           
   951  00C7                     LCD_Cursor@Col:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  00C7                     PWM_DutyCycle1@valor:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  00C7                     PWM_DutyCycle2@valor:	
   958                           ; 2 bytes @ 0x0
   959                           
   960  00C7                     ___aldiv@divisor:	
   961                           ; 2 bytes @ 0x0
   962                           
   963                           
   964                           ; 4 bytes @ 0x0
   965  00C7                     	ds	1
   966  00C8                     ??_LCD_Cursor:	
   967  00C8                     LCD_WriteCmd@Byte:	
   968                           ; 0 bytes @ 0x1
   969                           
   970  00C8                     LCD_WriteData@Byte:	
   971                           ; 1 bytes @ 0x1
   972                           
   973                           
   974                           ; 1 bytes @ 0x1
   975  00C8                     	ds	1
   976  00C9                     ??_PWM_DutyCycle2:	
   977  00C9                     ??_LCD_Init:	
   978                           ; 0 bytes @ 0x2
   979                           
   980  00C9                     ?_LCD_WriteString:	
   981                           ; 0 bytes @ 0x2
   982                           
   983  00C9                     ??_PWM_DutyCycle1:	
   984                           ; 0 bytes @ 0x2
   985                           
   986  00C9                     ??_LCD_Clear:	
   987                           ; 0 bytes @ 0x2
   988                           
   989  00C9                     LCD_Cursor@Row:	
   990                           ; 0 bytes @ 0x2
   991                           
   992  00C9                     LCD_WriteString@Str:	
   993                           ; 1 bytes @ 0x2
   994                           
   995                           
   996                           ; 2 bytes @ 0x2
   997  00C9                     	ds	2
   998  00CB                     ??_LCD_WriteString:	
   999  00CB                     ___aldiv@dividend:	
  1000                           ; 0 bytes @ 0x4
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x4
  1004  00CB                     	ds	4
  1005  00CF                     ??___aldiv:	
  1006                           
  1007                           ; 0 bytes @ 0x8
  1008  00CF                     	ds	1
  1009  00D0                     ___aldiv@counter:	
  1010                           
  1011                           ; 1 bytes @ 0x9
  1012  00D0                     	ds	1
  1013  00D1                     ___aldiv@sign:	
  1014                           
  1015                           ; 1 bytes @ 0xA
  1016  00D1                     	ds	1
  1017  00D2                     ___aldiv@quotient:	
  1018                           
  1019                           ; 4 bytes @ 0xB
  1020  00D2                     	ds	4
  1021  00D6                     ?_USART_Init:	
  1022  00D6                     USART_Init@BaudRate:	
  1023                           ; 0 bytes @ 0xF
  1024                           
  1025                           
  1026                           ; 4 bytes @ 0xF
  1027  00D6                     	ds	4
  1028  00DA                     ??_USART_Init:	
  1029                           
  1030                           ; 0 bytes @ 0x13
  1031  00DA                     	ds	4
  1032  00DE                     ??_main:	
  1033                           
  1034                           ; 0 bytes @ 0x17
  1035  00DE                     	ds	3
  1036                           
  1037                           	psect	cstackCOMMON
  1038  0070                     __pcstackCOMMON:	
  1039  0070                     ?_USART_WriteChar:	
  1040  0070                     ??_USART_WriteChar:	
  1041                           ; 0 bytes @ 0x0
  1042                           
  1043  0070                     ?_USART_WriteString:	
  1044                           ; 0 bytes @ 0x0
  1045                           
  1046  0070                     ?_TIMER0_Set:	
  1047                           ; 0 bytes @ 0x0
  1048                           
  1049  0070                     ?_TIMER0_Init:	
  1050                           ; 0 bytes @ 0x0
  1051                           
  1052  0070                     ?_ADC_Init:	
  1053                           ; 0 bytes @ 0x0
  1054                           
  1055  0070                     ?_PWM_Init:	
  1056                           ; 0 bytes @ 0x0
  1057                           
  1058  0070                     ?_LCD_Init:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  0070                     ?_LCD_Clear:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  0070                     ?_send:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  0070                     ?_Fuzzy:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0070                     ?_ISR:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0070                     ?_main:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0070                     ?_LCD_WriteCmd:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_LCD_WriteData:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ?i1_TIMER0_Set:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ??i1_TIMER0_Set:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ?_USART_ReceiveChar:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?___lwdiv:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?___ftpack:	
  1095                           ; 2 bytes @ 0x0
  1096                           
  1097  0070                     USART_WriteChar@byte:	
  1098                           ; 3 bytes @ 0x0
  1099                           
  1100  0070                     i1TIMER0_Set@contagens:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ___lwdiv@divisor:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ___ftpack@arg:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 3 bytes @ 0x0
  1111  0070                     	ds	1
  1112  0071                     ??_USART_WriteString:	
  1113                           
  1114                           ; 0 bytes @ 0x1
  1115  0071                     	ds	1
  1116  0072                     USART_WriteString@str:	
  1117  0072                     ___lwdiv@dividend:	
  1118                           ; 1 bytes @ 0x2
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x2
  1122  0072                     	ds	1
  1123  0073                     ??_USART_ReceiveChar:	
  1124  0073                     ___ftpack@exp:	
  1125                           ; 0 bytes @ 0x3
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0x3
  1129  0073                     	ds	1
  1130  0074                     ??___lwdiv:	
  1131  0074                     USART_ReceiveChar@byte:	
  1132                           ; 0 bytes @ 0x4
  1133                           
  1134  0074                     ___ftpack@sign:	
  1135                           ; 1 bytes @ 0x4
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x4
  1139  0074                     	ds	1
  1140  0075                     ??___ftpack:	
  1141  0075                     ___lwdiv@quotient:	
  1142                           ; 0 bytes @ 0x5
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x5
  1146  0075                     	ds	2
  1147  0077                     ___lwdiv@counter:	
  1148                           
  1149                           ; 1 bytes @ 0x7
  1150  0077                     	ds	1
  1151  0078                     ?___wmul:	
  1152  0078                     ?___ftmul:	
  1153                           ; 2 bytes @ 0x8
  1154                           
  1155  0078                     ?___lwtoft:	
  1156                           ; 3 bytes @ 0x8
  1157                           
  1158  0078                     ___wmul@multiplier:	
  1159                           ; 3 bytes @ 0x8
  1160                           
  1161  0078                     ___lwtoft@c:	
  1162                           ; 2 bytes @ 0x8
  1163                           
  1164  0078                     ___ftmul@f1:	
  1165                           ; 2 bytes @ 0x8
  1166                           
  1167                           
  1168                           ; 3 bytes @ 0x8
  1169  0078                     	ds	2
  1170  007A                     ___wmul@multiplicand:	
  1171                           
  1172                           ; 2 bytes @ 0xA
  1173  007A                     	ds	1
  1174  007B                     ??___lwtoft:	
  1175  007B                     ___ftmul@f2:	
  1176                           ; 0 bytes @ 0xB
  1177                           
  1178                           
  1179                           ; 3 bytes @ 0xB
  1180  007B                     	ds	1
  1181  007C                     ??_trimf:	
  1182  007C                     ??_trapmf:	
  1183                           ; 0 bytes @ 0xC
  1184                           
  1185  007C                     ??_max_val:	
  1186                           ; 0 bytes @ 0xC
  1187                           
  1188  007C                     ??___wmul:	
  1189                           ; 0 bytes @ 0xC
  1190                           
  1191  007C                     ??___ftneg:	
  1192                           ; 0 bytes @ 0xC
  1193                           
  1194  007C                     ??i1_PWM_DutyCycle2:	
  1195                           ; 0 bytes @ 0xC
  1196                           
  1197  007C                     ___wmul@product:	
  1198                           ; 0 bytes @ 0xC
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0xC
  1202  007C                     	ds	2
  1203  007E                     ??_Fuzzy:	
  1204                           
  1205                           	psect	cstackBANK0
  1206  0020                     __pcstackBANK0:	
  1207                           ; 0 bytes @ 0xE
  1208                           
  1209  0020                     ??_send:	
  1210  0020                     ??___ftmul:	
  1211                           ; 0 bytes @ 0x0
  1212                           
  1213  0020                     ?___ftneg:	
  1214                           ; 0 bytes @ 0x0
  1215                           
  1216  0020                     ___ftneg@f1:	
  1217                           ; 3 bytes @ 0x0
  1218                           
  1219                           
  1220                           ; 3 bytes @ 0x0
  1221  0020                     	ds	1
  1222  0021                     send@checksum:	
  1223                           
  1224                           ; 1 bytes @ 0x1
  1225  0021                     	ds	1
  1226  0022                     send@velocidade:	
  1227                           
  1228                           ; 2 bytes @ 0x2
  1229  0022                     	ds	1
  1230  0023                     ?___ftadd:	
  1231  0023                     ___ftadd@f1:	
  1232                           ; 3 bytes @ 0x3
  1233                           
  1234                           
  1235                           ; 3 bytes @ 0x3
  1236  0023                     	ds	1
  1237  0024                     send@index:	
  1238  0024                     ___ftmul@exp:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x4
  1243  0024                     	ds	1
  1244  0025                     ___ftmul@f3_as_product:	
  1245                           
  1246                           ; 3 bytes @ 0x5
  1247  0025                     	ds	1
  1248  0026                     ___ftadd@f2:	
  1249                           
  1250                           ; 3 bytes @ 0x6
  1251  0026                     	ds	2
  1252  0028                     ___ftmul@cntr:	
  1253                           
  1254                           ; 1 bytes @ 0x8
  1255  0028                     	ds	1
  1256  0029                     ??___ftadd:	
  1257  0029                     ___ftmul@sign:	
  1258                           ; 0 bytes @ 0x9
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x9
  1262  0029                     	ds	4
  1263  002D                     ___ftadd@sign:	
  1264                           
  1265                           ; 1 bytes @ 0xD
  1266  002D                     	ds	1
  1267  002E                     ___ftadd@exp2:	
  1268                           
  1269                           ; 1 bytes @ 0xE
  1270  002E                     	ds	1
  1271  002F                     ___ftadd@exp1:	
  1272                           
  1273                           ; 1 bytes @ 0xF
  1274  002F                     	ds	1
  1275  0030                     ?___ftge:	
  1276  0030                     ?___ftdiv:	
  1277                           ; 1 bit 
  1278                           
  1279  0030                     ?___fttol:	
  1280                           ; 3 bytes @ 0x10
  1281                           
  1282  0030                     ___ftdiv@f2:	
  1283                           ; 4 bytes @ 0x10
  1284                           
  1285  0030                     ___ftge@ff1:	
  1286                           ; 3 bytes @ 0x10
  1287                           
  1288  0030                     ___fttol@f1:	
  1289                           ; 3 bytes @ 0x10
  1290                           
  1291                           
  1292                           ; 3 bytes @ 0x10
  1293  0030                     	ds	3
  1294  0033                     ___ftdiv@f1:	
  1295  0033                     ___ftge@ff2:	
  1296                           ; 3 bytes @ 0x13
  1297                           
  1298                           
  1299                           ; 3 bytes @ 0x13
  1300  0033                     	ds	1
  1301  0034                     ??___fttol:	
  1302                           
  1303                           ; 0 bytes @ 0x14
  1304  0034                     	ds	2
  1305  0036                     ??___ftdiv:	
  1306  0036                     ??___ftge:	
  1307                           ; 0 bytes @ 0x16
  1308                           
  1309                           
  1310                           ; 0 bytes @ 0x16
  1311  0036                     	ds	2
  1312  0038                     ___fttol@sign1:	
  1313                           
  1314                           ; 1 bytes @ 0x18
  1315  0038                     	ds	1
  1316  0039                     ___fttol@lval:	
  1317                           
  1318                           ; 4 bytes @ 0x19
  1319  0039                     	ds	1
  1320  003A                     ___ftdiv@cntr:	
  1321                           
  1322                           ; 1 bytes @ 0x1A
  1323  003A                     	ds	1
  1324  003B                     ___ftdiv@f3:	
  1325                           
  1326                           ; 3 bytes @ 0x1B
  1327  003B                     	ds	1
  1328  003C                     ?_max_val:	
  1329  003C                     max_val@a:	
  1330                           ; 3 bytes @ 0x1C
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x1C
  1334  003C                     	ds	1
  1335  003D                     ___fttol@exp1:	
  1336                           
  1337                           ; 1 bytes @ 0x1D
  1338  003D                     	ds	1
  1339  003E                     ?i1_PWM_DutyCycle2:	
  1340  003E                     ___ftdiv@exp:	
  1341                           ; 0 bytes @ 0x1E
  1342                           
  1343  003E                     i1PWM_DutyCycle2@valor:	
  1344                           ; 1 bytes @ 0x1E
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x1E
  1348  003E                     	ds	1
  1349  003F                     ___ftdiv@sign:	
  1350  003F                     max_val@b:	
  1351                           ; 1 bytes @ 0x1F
  1352                           
  1353                           
  1354                           ; 3 bytes @ 0x1F
  1355  003F                     	ds	1
  1356  0040                     ?_trimf:	
  1357  0040                     ?_trapmf:	
  1358                           ; 3 bytes @ 0x20
  1359                           
  1360  0040                     trimf@x:	
  1361                           ; 3 bytes @ 0x20
  1362                           
  1363  0040                     trapmf@x:	
  1364                           ; 3 bytes @ 0x20
  1365                           
  1366                           
  1367                           ; 3 bytes @ 0x20
  1368  0040                     	ds	3
  1369  0043                     trimf@a:	
  1370  0043                     trapmf@a:	
  1371                           ; 3 bytes @ 0x23
  1372                           
  1373                           
  1374                           ; 3 bytes @ 0x23
  1375  0043                     	ds	3
  1376  0046                     trimf@b:	
  1377  0046                     trapmf@b:	
  1378                           ; 3 bytes @ 0x26
  1379                           
  1380                           
  1381                           ; 3 bytes @ 0x26
  1382  0046                     	ds	3
  1383  0049                     trimf@c:	
  1384  0049                     trapmf@c:	
  1385                           ; 3 bytes @ 0x29
  1386                           
  1387                           
  1388                           ; 3 bytes @ 0x29
  1389  0049                     	ds	3
  1390  004C                     trimf@ua:	
  1391  004C                     trapmf@d:	
  1392                           ; 3 bytes @ 0x2C
  1393                           
  1394                           
  1395                           ; 3 bytes @ 0x2C
  1396  004C                     	ds	3
  1397  004F                     trapmf@ua:	
  1398                           
  1399                           ; 3 bytes @ 0x2F
  1400  004F                     	ds	3
  1401  0052                     Fuzzy@freio:	
  1402                           
  1403                           ; 2 bytes @ 0x32
  1404  0052                     	ds	2
  1405  0054                     Fuzzy@tip:	
  1406                           
  1407                           ; 3 bytes @ 0x34
  1408  0054                     	ds	3
  1409  0057                     Fuzzy@a:	
  1410                           
  1411                           ; 2 bytes @ 0x37
  1412  0057                     	ds	2
  1413  0059                     Fuzzy@a_241:	
  1414                           
  1415                           ; 2 bytes @ 0x39
  1416  0059                     	ds	2
  1417  005B                     Fuzzy@a_242:	
  1418                           
  1419                           ; 2 bytes @ 0x3B
  1420  005B                     	ds	2
  1421  005D                     Fuzzy@mantem:	
  1422                           
  1423                           ; 3 bytes @ 0x3D
  1424  005D                     	ds	3
  1425  0060                     Fuzzy@reduz:	
  1426                           
  1427                           ; 3 bytes @ 0x40
  1428  0060                     	ds	3
  1429  0063                     Fuzzy@aumenta:	
  1430                           
  1431                           ; 3 bytes @ 0x43
  1432  0063                     	ds	3
  1433  0066                     Fuzzy@deltaRpm:	
  1434                           
  1435                           ; 3 bytes @ 0x46
  1436  0066                     	ds	3
  1437  0069                     ??_ISR:	
  1438                           
  1439                           ; 0 bytes @ 0x49
  1440  0069                     	ds	4
  1441                           
  1442                           	psect	maintext
  1443  0A5B                     __pmaintext:	
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1446 ;;
  1447 ;; *************** function _main *****************
  1448 ;; Defined at:
  1449 ;;		line 509 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 17F/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       3       0       0
  1466 ;;      Totals:         0       0       3       0       0
  1467 ;;Total ram usage:        3 bytes
  1468 ;; Hardware stack levels required when called:    7
  1469 ;; This function calls:
  1470 ;;		_ADC_Init
  1471 ;;		_LCD_Clear
  1472 ;;		_LCD_Cursor
  1473 ;;		_LCD_Init
  1474 ;;		_LCD_WriteString
  1475 ;;		_PWM_DutyCycle1
  1476 ;;		_PWM_DutyCycle2
  1477 ;;		_PWM_Init
  1478 ;;		_TIMER0_Init
  1479 ;;		_TIMER0_Set
  1480 ;;		_USART_Init
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _main
  1488  0A5B                     _main:	
  1489                           
  1490                           ;main.c: 511: TRISA = 0b00000001;
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1494  0A5B  3001               	movlw	1
  1495  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0A5E  0085               	movwf	5	;volatile
  1498                           
  1499                           ;main.c: 512: PORTA = 0b00000001;
  1500  0A5F  3001               	movlw	1
  1501  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0A62  0085               	movwf	5	;volatile
  1504                           
  1505                           ;main.c: 513: TRISB = 0b00000000;
  1506  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0A64  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0A65  0186               	clrf	6	;volatile
  1509                           
  1510                           ;main.c: 514: PORTB = 0b00000000;
  1511  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0A68  0186               	clrf	6	;volatile
  1514                           
  1515                           ;main.c: 515: TRISC = 0b10000001;
  1516  0A69  3081               	movlw	129
  1517  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0A6C  0087               	movwf	7	;volatile
  1520                           
  1521                           ;main.c: 516: PORTC = 0b11000000;
  1522  0A6D  30C0               	movlw	192
  1523  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0A70  0087               	movwf	7	;volatile
  1526                           
  1527                           ;main.c: 517: TRISD = 0b00000000;
  1528  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0A72  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0A73  0188               	clrf	8	;volatile
  1531                           
  1532                           ;main.c: 518: PORTD = 0b00000000;
  1533  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0A76  0188               	clrf	8	;volatile
  1536                           
  1537                           ;main.c: 519: TRISE = 0b00000000;
  1538  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0A79  0189               	clrf	9	;volatile
  1541                           
  1542                           ;main.c: 520: PORTE = 0b00000000;
  1543  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0A7C  0189               	clrf	9	;volatile
  1546                           
  1547                           ;main.c: 523: T1CON = 0x03;
  1548  0A7D  3003               	movlw	3
  1549  0A7E  0090               	movwf	16	;volatile
  1550                           
  1551                           ;main.c: 524: TMR1L = 0x00;
  1552  0A7F  018E               	clrf	14	;volatile
  1553                           
  1554                           ;main.c: 525: TMR1H = 0x00;
  1555  0A80  018F               	clrf	15	;volatile
  1556                           
  1557                           ;main.c: 528: USART_Init(115200);
  1558  0A81  3000               	movlw	0
  1559  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  1561  0A84  00D9               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1562  0A85  3001               	movlw	1
  1563  0A86  00D8               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1564  0A87  30C2               	movlw	194
  1565  0A88  00D7               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1566  0A89  3000               	movlw	0
  1567  0A8A  00D6               	movwf	USART_Init@BaudRate^(0+128)
  1568  0A8B  120A  158A  2008  120A  158A  	fcall	_USART_Init
  1569                           
  1570                           ;main.c: 529: TIMER0_Init();
  1571  0A90  160A  118A  2422  120A  158A  	fcall	_TIMER0_Init
  1572                           
  1573                           ;main.c: 530: ADC_Init();
  1574  0A95  160A  118A  243E  120A  158A  	fcall	_ADC_Init
  1575                           
  1576                           ;main.c: 531: PWM_Init();
  1577  0A9A  160A  118A  2584  120A  158A  	fcall	_PWM_Init
  1578                           
  1579                           ;main.c: 532: LCD_Init();
  1580  0A9F  160A  118A  2707  120A  158A  	fcall	_LCD_Init
  1581                           
  1582                           ;main.c: 535: INTCONbits.PEIE = 1;
  1583  0AA4  170B               	bsf	11,6	;volatile
  1584                           
  1585                           ;main.c: 536: INTCONbits.GIE = 1;
  1586  0AA5  178B               	bsf	11,7	;volatile
  1587                           
  1588                           ;main.c: 543: LCD_Init();
  1589  0AA6  160A  118A  2707  120A  158A  	fcall	_LCD_Init
  1590                           
  1591                           ;main.c: 544: LCD_Cursor(0,0);
  1592  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0AAC  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0AAD  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1595  0AAE  3000               	movlw	0
  1596  0AAF  160A  118A  24FF  120A  158A  	fcall	_LCD_Cursor
  1597                           
  1598                           ;main.c: 545: LCD_WriteString("Inicializando...");
  1599  0AB4  3029               	movlw	low (STR_2-__stringbase)
  1600  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0AB7  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1603  0AB8  3080               	movlw	128
  1604  0AB9  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1605  0ABA  160A  118A  25D1  120A  158A  	fcall	_LCD_WriteString
  1606                           
  1607                           ;main.c: 548: PWM_DutyCycle1(0);
  1608  0ABF  3000               	movlw	0
  1609  0AC0  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0AC1  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0AC2  00C7               	movwf	PWM_DutyCycle1@valor^(0+128)
  1612  0AC3  3000               	movlw	0
  1613  0AC4  00C8               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1614  0AC5  160A  118A  251F  120A  158A  	fcall	_PWM_DutyCycle1
  1615                           
  1616                           ;main.c: 549: PWM_DutyCycle2(0);
  1617  0ACA  3000               	movlw	0
  1618  0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0ACC  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0ACD  00C7               	movwf	PWM_DutyCycle2@valor^(0+128)
  1621  0ACE  3000               	movlw	0
  1622  0ACF  00C8               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1623  0AD0  160A  118A  2540  120A  158A  	fcall	_PWM_DutyCycle2
  1624                           
  1625                           ;main.c: 552: TIMER0_Set(238);
  1626  0AD5  30EE               	movlw	238
  1627  0AD6  160A  118A  2406  120A  158A  	fcall	_TIMER0_Set
  1628                           
  1629                           ;main.c: 555: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1630  0ADB  3018               	movlw	24
  1631  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0ADE  00E0               	movwf	(??_main^(0+128)+2)
  1634  0ADF  3061               	movlw	97
  1635  0AE0  00DF               	movwf	(??_main^(0+128)+1)
  1636  0AE1  306E               	movlw	110
  1637  0AE2  00DE               	movwf	??_main^(0+128)
  1638  0AE3                     u3347:	
  1639  0AE3  0BDE               	decfsz	??_main^(0+128),f
  1640  0AE4  2AE3               	goto	u3347
  1641  0AE5  0BDF               	decfsz	(??_main^(0+128)+1),f
  1642  0AE6  2AE3               	goto	u3347
  1643  0AE7  0BE0               	decfsz	(??_main^(0+128)+2),f
  1644  0AE8  2AE3               	goto	u3347
  1645  0AE9  0000               	nop
  1646  0AEA                     l2935:	
  1647                           ;main.c: 558: while(1)
  1648                           
  1649                           
  1650                           ;main.c: 559: {
  1651                           ;main.c: 565: LCD_Clear();
  1652  0AEA  160A  118A  25A8  120A  158A  	fcall	_LCD_Clear
  1653                           
  1654                           ;main.c: 566: LCD_Cursor(0,0);
  1655  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0AF1  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1658  0AF2  3000               	movlw	0
  1659  0AF3  160A  118A  24FF  120A  158A  	fcall	_LCD_Cursor
  1660                           
  1661                           ;main.c: 567: LCD_WriteString("kmH: ");
  1662  0AF8  3048               	movlw	low (STR_3-__stringbase)
  1663  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  1664  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  1665  0AFB  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1666  0AFC  3080               	movlw	128
  1667  0AFD  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1668  0AFE  160A  118A  25D1  120A  158A  	fcall	_LCD_WriteString
  1669                           
  1670                           ;main.c: 568: LCD_Cursor(0,6);
  1671  0B03  3006               	movlw	6
  1672  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0B06  00DE               	movwf	??_main^(0+128)
  1675  0B07  085E               	movf	??_main^(0+128),w
  1676  0B08  00C7               	movwf	LCD_Cursor@Col^(0+128)
  1677  0B09  3000               	movlw	0
  1678  0B0A  160A  118A  24FF  120A  158A  	fcall	_LCD_Cursor
  1679                           
  1680                           ;main.c: 569: LCD_WriteString(display_rpm);
  1681  0B0F  309D               	movlw	_display_rpm& (0+255)
  1682  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0B11  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0B12  00C9               	movwf	LCD_WriteString@Str^(0+128)
  1685  0B13  3001               	movlw	1
  1686  0B14  00CA               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1687  0B15  160A  118A  25D1  120A  158A  	fcall	_LCD_WriteString
  1688                           
  1689                           ;main.c: 570: LCD_Cursor(1,0);
  1690  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1692  0B1C  01C7               	clrf	LCD_Cursor@Col^(0+128)
  1693  0B1D  3001               	movlw	1
  1694  0B1E  160A  118A  24FF  120A  158A  	fcall	_LCD_Cursor
  1695                           
  1696                           ;main.c: 575: _delay((unsigned long)((200)*(18432000/4000.0)));
  1697  0B23  3005               	movlw	5
  1698  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0B26  00E0               	movwf	(??_main^(0+128)+2)
  1701  0B27  30AD               	movlw	173
  1702  0B28  00DF               	movwf	(??_main^(0+128)+1)
  1703  0B29  30E0               	movlw	224
  1704  0B2A  00DE               	movwf	??_main^(0+128)
  1705  0B2B                     u3357:	
  1706  0B2B  0BDE               	decfsz	??_main^(0+128),f
  1707  0B2C  2B2B               	goto	u3357
  1708  0B2D  0BDF               	decfsz	(??_main^(0+128)+1),f
  1709  0B2E  2B2B               	goto	u3357
  1710  0B2F  0BE0               	decfsz	(??_main^(0+128)+2),f
  1711  0B30  2B2B               	goto	u3357
  1712  0B31  2AEA               	goto	l2935
  1713  0B32                     __end_of_main:	
  1714                           
  1715                           	psect	text1
  1716  0808                     __ptext1:	
  1717 ;; *************** function _USART_Init *****************
  1718 ;; Defined at:
  1719 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  BaudRate        4   15[BANK1 ] long 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;		None               void
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       0       4       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          0       0       4       0       0
  1736 ;;      Totals:         0       0       8       0       0
  1737 ;;Total ram usage:        8 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    6
  1740 ;; This function calls:
  1741 ;;		___aldiv
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _USART_Init
  1749  0808                     _USART_Init:	
  1750                           
  1751                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1755  0808  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0809  1303               	bcf	3,6	;RP1=0, select bank1
  1757  080A  0856               	movf	USART_Init@BaudRate^(0+128),w
  1758  080B  00DA               	movwf	??_USART_Init^(0+128)
  1759  080C  0857               	movf	(USART_Init@BaudRate+1)^(0+128),w
  1760  080D  00DB               	movwf	(??_USART_Init^(0+128)+1)
  1761  080E  0858               	movf	(USART_Init@BaudRate+2)^(0+128),w
  1762  080F  00DC               	movwf	(??_USART_Init^(0+128)+2)
  1763  0810  0859               	movf	(USART_Init@BaudRate+3)^(0+128),w
  1764  0811  00DD               	movwf	(??_USART_Init^(0+128)+3)
  1765  0812  3004               	movlw	4
  1766  0813                     u3065:	
  1767  0813  1003               	clrc
  1768  0814  0DDA               	rlf	??_USART_Init^(0+128),f
  1769  0815  0DDB               	rlf	(??_USART_Init^(0+128)+1),f
  1770  0816  0DDC               	rlf	(??_USART_Init^(0+128)+2),f
  1771  0817  0DDD               	rlf	(??_USART_Init^(0+128)+3),f
  1772  0818  3EFF               	addlw	-1
  1773  0819  1D03               	skipz
  1774  081A  2813               	goto	u3065
  1775  081B  085D               	movf	(??_USART_Init+3)^(0+128),w
  1776  081C  00CA               	movwf	(___aldiv@divisor+3)^(0+128)
  1777  081D  085C               	movf	(??_USART_Init+2)^(0+128),w
  1778  081E  00C9               	movwf	(___aldiv@divisor+2)^(0+128)
  1779  081F  085B               	movf	(??_USART_Init+1)^(0+128),w
  1780  0820  00C8               	movwf	(___aldiv@divisor+1)^(0+128)
  1781  0821  085A               	movf	??_USART_Init^(0+128),w
  1782  0822  00C7               	movwf	___aldiv@divisor^(0+128)
  1783  0823  3001               	movlw	1
  1784  0824  00CE               	movwf	(___aldiv@dividend+3)^(0+128)
  1785  0825  3019               	movlw	25
  1786  0826  00CD               	movwf	(___aldiv@dividend+2)^(0+128)
  1787  0827  3040               	movlw	64
  1788  0828  00CC               	movwf	(___aldiv@dividend+1)^(0+128)
  1789  0829  3000               	movlw	0
  1790  082A  00CB               	movwf	___aldiv@dividend^(0+128)
  1791  082B  120A  158A  2051   	fcall	___aldiv
  1792  082E  1683               	bsf	3,5	;RP0=1, select bank1
  1793  082F  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0830  0847               	movf	?___aldiv^(0+128),w
  1795  0831  3EFF               	addlw	255
  1796  0832  0099               	movwf	25	;volatile
  1797                           
  1798                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1799  0833  1398               	bcf	24,7	;volatile
  1800                           
  1801                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1802  0834  1318               	bcf	24,6	;volatile
  1803                           
  1804                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1805  0835  1698               	bsf	24,5	;volatile
  1806                           
  1807                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1808  0836  1218               	bcf	24,4	;volatile
  1809                           
  1810                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1811  0837  1518               	bsf	24,2	;volatile
  1812                           
  1813                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1814  0838  1498               	bsf	24,1	;volatile
  1815                           
  1816                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1817  0839  1018               	bcf	24,0	;volatile
  1818                           
  1819                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1820  083A  1283               	bcf	3,5	;RP0=0, select bank0
  1821  083B  1303               	bcf	3,6	;RP1=0, select bank0
  1822  083C  1798               	bsf	24,7	;volatile
  1823                           
  1824                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1825  083D  1318               	bcf	24,6	;volatile
  1826                           
  1827                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1828  083E  1298               	bcf	24,5	;volatile
  1829                           
  1830                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1831  083F  1618               	bsf	24,4	;volatile
  1832                           
  1833                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1834  0840  1198               	bcf	24,3	;volatile
  1835                           
  1836                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1837  0841  1118               	bcf	24,2	;volatile
  1838                           
  1839                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1840  0842  1098               	bcf	24,1	;volatile
  1841                           
  1842                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1843  0843  1018               	bcf	24,0	;volatile
  1844                           
  1845                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1846  0844  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0845  1303               	bcf	3,6	;RP1=0, select bank1
  1848  0846  120C               	bcf	12,4	;volatile
  1849                           
  1850                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1851  0847  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0848  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0849  120C               	bcf	12,4	;volatile
  1854                           
  1855                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1856  084A  1683               	bsf	3,5	;RP0=1, select bank1
  1857  084B  1303               	bcf	3,6	;RP1=0, select bank1
  1858  084C  168C               	bsf	12,5	;volatile
  1859                           
  1860                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1861  084D  1283               	bcf	3,5	;RP0=0, select bank0
  1862  084E  1303               	bcf	3,6	;RP1=0, select bank0
  1863  084F  128C               	bcf	12,5	;volatile
  1864  0850  0008               	return
  1865  0851                     __end_of_USART_Init:	
  1866                           
  1867                           	psect	text2
  1868  0851                     __ptext2:	
  1869 ;; *************** function ___aldiv *****************
  1870 ;; Defined at:
  1871 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  divisor         4    0[BANK1 ] long 
  1874 ;;  dividend        4    4[BANK1 ] long 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  quotient        4   11[BANK1 ] long 
  1877 ;;  sign            1   10[BANK1 ] unsigned char 
  1878 ;;  counter         1    9[BANK1 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  4    0[BANK1 ] long 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       8       0       0
  1889 ;;      Locals:         0       0       6       0       0
  1890 ;;      Temps:          0       0       1       0       0
  1891 ;;      Totals:         0       0      15       0       0
  1892 ;;Total ram usage:       15 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    5
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_USART_Init
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function ___aldiv
  1904  0851                     ___aldiv:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1908  0851  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0852  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0853  01D1               	clrf	___aldiv@sign^(0+128)
  1911  0854  1FCA               	btfss	(___aldiv@divisor+3)^(0+128),7
  1912  0855  2863               	goto	l597
  1913  0856  09C7               	comf	___aldiv@divisor^(0+128),f
  1914  0857  09C8               	comf	(___aldiv@divisor+1)^(0+128),f
  1915  0858  09C9               	comf	(___aldiv@divisor+2)^(0+128),f
  1916  0859  09CA               	comf	(___aldiv@divisor+3)^(0+128),f
  1917  085A  0AC7               	incf	___aldiv@divisor^(0+128),f
  1918  085B  1903               	skipnz
  1919  085C  0AC8               	incf	(___aldiv@divisor+1)^(0+128),f
  1920  085D  1903               	skipnz
  1921  085E  0AC9               	incf	(___aldiv@divisor+2)^(0+128),f
  1922  085F  1903               	skipnz
  1923  0860  0ACA               	incf	(___aldiv@divisor+3)^(0+128),f
  1924  0861  01D1               	clrf	___aldiv@sign^(0+128)
  1925  0862  0AD1               	incf	___aldiv@sign^(0+128),f
  1926  0863                     l597:	
  1927  0863  1FCE               	btfss	(___aldiv@dividend+3)^(0+128),7
  1928  0864  2874               	goto	l2299
  1929  0865  09CB               	comf	___aldiv@dividend^(0+128),f
  1930  0866  09CC               	comf	(___aldiv@dividend+1)^(0+128),f
  1931  0867  09CD               	comf	(___aldiv@dividend+2)^(0+128),f
  1932  0868  09CE               	comf	(___aldiv@dividend+3)^(0+128),f
  1933  0869  0ACB               	incf	___aldiv@dividend^(0+128),f
  1934  086A  1903               	skipnz
  1935  086B  0ACC               	incf	(___aldiv@dividend+1)^(0+128),f
  1936  086C  1903               	skipnz
  1937  086D  0ACD               	incf	(___aldiv@dividend+2)^(0+128),f
  1938  086E  1903               	skipnz
  1939  086F  0ACE               	incf	(___aldiv@dividend+3)^(0+128),f
  1940  0870  3001               	movlw	1
  1941  0871  00CF               	movwf	??___aldiv^(0+128)
  1942  0872  084F               	movf	??___aldiv^(0+128),w
  1943  0873  06D1               	xorwf	___aldiv@sign^(0+128),f
  1944  0874                     l2299:	
  1945  0874  3000               	movlw	0
  1946  0875  00D5               	movwf	(___aldiv@quotient+3)^(0+128)
  1947  0876  3000               	movlw	0
  1948  0877  00D4               	movwf	(___aldiv@quotient+2)^(0+128)
  1949  0878  3000               	movlw	0
  1950  0879  00D3               	movwf	(___aldiv@quotient+1)^(0+128)
  1951  087A  3000               	movlw	0
  1952  087B  00D2               	movwf	___aldiv@quotient^(0+128)
  1953  087C  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  1954  087D  0449               	iorwf	(___aldiv@divisor+2)^(0+128),w
  1955  087E  0448               	iorwf	(___aldiv@divisor+1)^(0+128),w
  1956  087F  0447               	iorwf	___aldiv@divisor^(0+128),w
  1957  0880  1903               	skipnz
  1958  0881  28C9               	goto	l2321
  1959  0882  01D0               	clrf	___aldiv@counter^(0+128)
  1960  0883  0AD0               	incf	___aldiv@counter^(0+128),f
  1961  0884                     l2307:	
  1962  0884  1BCA               	btfsc	(___aldiv@divisor+3)^(0+128),7
  1963  0885  2894               	goto	l2309
  1964  0886  3001               	movlw	1
  1965  0887  00CF               	movwf	??___aldiv^(0+128)
  1966  0888                     u2475:	
  1967  0888  1003               	clrc
  1968  0889  0DC7               	rlf	___aldiv@divisor^(0+128),f
  1969  088A  0DC8               	rlf	(___aldiv@divisor+1)^(0+128),f
  1970  088B  0DC9               	rlf	(___aldiv@divisor+2)^(0+128),f
  1971  088C  0DCA               	rlf	(___aldiv@divisor+3)^(0+128),f
  1972  088D  0BCF               	decfsz	??___aldiv^(0+128),f
  1973  088E  2888               	goto	u2475
  1974  088F  3001               	movlw	1
  1975  0890  00CF               	movwf	??___aldiv^(0+128)
  1976  0891  084F               	movf	??___aldiv^(0+128),w
  1977  0892  07D0               	addwf	___aldiv@counter^(0+128),f
  1978  0893  2884               	goto	l2307
  1979  0894                     l2309:	
  1980  0894  3001               	movlw	1
  1981  0895  00CF               	movwf	??___aldiv^(0+128)
  1982  0896                     u2495:	
  1983  0896  1003               	clrc
  1984  0897  0DD2               	rlf	___aldiv@quotient^(0+128),f
  1985  0898  0DD3               	rlf	(___aldiv@quotient+1)^(0+128),f
  1986  0899  0DD4               	rlf	(___aldiv@quotient+2)^(0+128),f
  1987  089A  0DD5               	rlf	(___aldiv@quotient+3)^(0+128),f
  1988  089B  0BCF               	decfsz	??___aldiv^(0+128),f
  1989  089C  2896               	goto	u2495
  1990  089D  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  1991  089E  024E               	subwf	(___aldiv@dividend+3)^(0+128),w
  1992  089F  1D03               	skipz
  1993  08A0  28AB               	goto	u2505
  1994  08A1  0849               	movf	(___aldiv@divisor+2)^(0+128),w
  1995  08A2  024D               	subwf	(___aldiv@dividend+2)^(0+128),w
  1996  08A3  1D03               	skipz
  1997  08A4  28AB               	goto	u2505
  1998  08A5  0848               	movf	(___aldiv@divisor+1)^(0+128),w
  1999  08A6  024C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2000  08A7  1D03               	skipz
  2001  08A8  28AB               	goto	u2505
  2002  08A9  0847               	movf	___aldiv@divisor^(0+128),w
  2003  08AA  024B               	subwf	___aldiv@dividend^(0+128),w
  2004  08AB                     u2505:	
  2005  08AB  1C03               	skipc
  2006  08AC  28BC               	goto	l2317
  2007  08AD  0847               	movf	___aldiv@divisor^(0+128),w
  2008  08AE  02CB               	subwf	___aldiv@dividend^(0+128),f
  2009  08AF  0848               	movf	(___aldiv@divisor+1)^(0+128),w
  2010  08B0  1C03               	skipc
  2011  08B1  0F48               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2012  08B2  02CC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2013  08B3  0849               	movf	(___aldiv@divisor+2)^(0+128),w
  2014  08B4  1C03               	skipc
  2015  08B5  0F49               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2016  08B6  02CD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2017  08B7  084A               	movf	(___aldiv@divisor+3)^(0+128),w
  2018  08B8  1C03               	skipc
  2019  08B9  0F4A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2020  08BA  02CE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2021  08BB  1452               	bsf	___aldiv@quotient^(0+128),0
  2022  08BC                     l2317:	
  2023  08BC  3001               	movlw	1
  2024  08BD                     u2515:	
  2025  08BD  1003               	clrc
  2026  08BE  0CCA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2027  08BF  0CC9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2028  08C0  0CC8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2029  08C1  0CC7               	rrf	___aldiv@divisor^(0+128),f
  2030  08C2  3EFF               	addlw	-1
  2031  08C3  1D03               	skipz
  2032  08C4  28BD               	goto	u2515
  2033  08C5  3001               	movlw	1
  2034  08C6  02D0               	subwf	___aldiv@counter^(0+128),f
  2035  08C7  1D03               	btfss	3,2
  2036  08C8  2894               	goto	l2309
  2037  08C9                     l2321:	
  2038  08C9  0851               	movf	___aldiv@sign^(0+128),w
  2039  08CA  1903               	btfsc	3,2
  2040  08CB  28D7               	goto	l2325
  2041  08CC  09D2               	comf	___aldiv@quotient^(0+128),f
  2042  08CD  09D3               	comf	(___aldiv@quotient+1)^(0+128),f
  2043  08CE  09D4               	comf	(___aldiv@quotient+2)^(0+128),f
  2044  08CF  09D5               	comf	(___aldiv@quotient+3)^(0+128),f
  2045  08D0  0AD2               	incf	___aldiv@quotient^(0+128),f
  2046  08D1  1903               	skipnz
  2047  08D2  0AD3               	incf	(___aldiv@quotient+1)^(0+128),f
  2048  08D3  1903               	skipnz
  2049  08D4  0AD4               	incf	(___aldiv@quotient+2)^(0+128),f
  2050  08D5  1903               	skipnz
  2051  08D6  0AD5               	incf	(___aldiv@quotient+3)^(0+128),f
  2052  08D7                     l2325:	
  2053  08D7  0855               	movf	(___aldiv@quotient+3)^(0+128),w
  2054  08D8  00CA               	movwf	(?___aldiv+3)^(0+128)
  2055  08D9  0854               	movf	(___aldiv@quotient+2)^(0+128),w
  2056  08DA  00C9               	movwf	(?___aldiv+2)^(0+128)
  2057  08DB  0853               	movf	(___aldiv@quotient+1)^(0+128),w
  2058  08DC  00C8               	movwf	(?___aldiv+1)^(0+128)
  2059  08DD  0852               	movf	___aldiv@quotient^(0+128),w
  2060  08DE  00C7               	movwf	?___aldiv^(0+128)
  2061  08DF  0008               	return
  2062  08E0                     __end_of___aldiv:	
  2063                           
  2064                           	psect	text3
  2065  1406                     __ptext3:	
  2066 ;; *************** function _TIMER0_Set *****************
  2067 ;; Defined at:
  2068 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  contagens       1    wreg     unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  contagens       1    0[BANK1 ] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;		None               void
  2075 ;; Registers used:
  2076 ;;		wreg
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       0       0
  2083 ;;      Locals:         0       0       1       0       0
  2084 ;;      Temps:          0       0       0       0       0
  2085 ;;      Totals:         0       0       1       0       0
  2086 ;;Total ram usage:        1 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    5
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _TIMER0_Set
  2098  1406                     _TIMER0_Set:	
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _TIMER0_Set: [wreg]
  2102                           ;TIMER0_Set@contagens stored from wreg
  2103  1406  1683               	bsf	3,5	;RP0=1, select bank1
  2104  1407  1303               	bcf	3,6	;RP1=0, select bank1
  2105  1408  00C7               	movwf	TIMER0_Set@contagens^(0+128)
  2106                           
  2107                           ;timers.c: 22: TMR0 = contagens;
  2108  1409  0847               	movf	TIMER0_Set@contagens^(0+128),w
  2109  140A  1283               	bcf	3,5	;RP0=0, select bank0
  2110  140B  1303               	bcf	3,6	;RP1=0, select bank0
  2111  140C  0081               	movwf	1	;volatile
  2112  140D  0008               	return
  2113  140E                     __end_of_TIMER0_Set:	
  2114                           
  2115                           	psect	text4
  2116  1422                     __ptext4:	
  2117 ;; *************** function _TIMER0_Init *****************
  2118 ;; Defined at:
  2119 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;		None               void
  2126 ;; Registers used:
  2127 ;;		None
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    5
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _TIMER0_Init
  2149  1422                     _TIMER0_Init:	
  2150                           
  2151                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in _TIMER0_Init: []
  2155  1422  1683               	bsf	3,5	;RP0=1, select bank1
  2156  1423  1303               	bcf	3,6	;RP1=0, select bank1
  2157  1424  1281               	bcf	1,5	;volatile
  2158                           
  2159                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2160  1425  1201               	bcf	1,4	;volatile
  2161                           
  2162                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2163  1426  1181               	bcf	1,3	;volatile
  2164                           
  2165                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2166  1427  1501               	bsf	1,2	;volatile
  2167                           
  2168                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2169  1428  1481               	bsf	1,1	;volatile
  2170                           
  2171                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2172  1429  1401               	bsf	1,0	;volatile
  2173                           
  2174                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2175  142A  110B               	bcf	11,2	;volatile
  2176                           
  2177                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2178  142B  168B               	bsf	11,5	;volatile
  2179  142C  0008               	return
  2180  142D                     __end_of_TIMER0_Init:	
  2181                           
  2182                           	psect	text5
  2183  1584                     __ptext5:	
  2184 ;; *************** function _PWM_Init *****************
  2185 ;; Defined at:
  2186 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;		None               void
  2193 ;; Registers used:
  2194 ;;		wreg
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    5
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _PWM_Init
  2216  1584                     _PWM_Init:	
  2217                           
  2218                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _PWM_Init: [wreg]
  2222  1584  1283               	bcf	3,5	;RP0=0, select bank0
  2223  1585  1303               	bcf	3,6	;RP1=0, select bank0
  2224  1586  1492               	bsf	18,1	;volatile
  2225                           
  2226                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2227  1587  1012               	bcf	18,0	;volatile
  2228                           
  2229                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2230  1588  1312               	bcf	18,6	;volatile
  2231                           
  2232                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2233  1589  1292               	bcf	18,5	;volatile
  2234                           
  2235                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2236  158A  1212               	bcf	18,4	;volatile
  2237                           
  2238                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2239  158B  1192               	bcf	18,3	;volatile
  2240                           
  2241                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2242  158C  1512               	bsf	18,2	;volatile
  2243                           
  2244                           ;pwm.c: 27: PR2 = 255;
  2245  158D  30FF               	movlw	255
  2246  158E  1683               	bsf	3,5	;RP0=1, select bank1
  2247  158F  1303               	bcf	3,6	;RP1=0, select bank1
  2248  1590  0092               	movwf	18	;volatile
  2249                           
  2250                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2251  1591  1283               	bcf	3,5	;RP0=0, select bank0
  2252  1592  1303               	bcf	3,6	;RP1=0, select bank0
  2253  1593  1597               	bsf	23,3	;volatile
  2254                           
  2255                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2256  1594  1517               	bsf	23,2	;volatile
  2257                           
  2258                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2259  1595  1497               	bsf	23,1	;volatile
  2260                           
  2261                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2262  1596  1417               	bsf	23,0	;volatile
  2263                           
  2264                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2265  1597  1683               	bsf	3,5	;RP0=1, select bank1
  2266  1598  1303               	bcf	3,6	;RP1=0, select bank1
  2267  1599  150C               	bsf	12,2	;volatile
  2268                           
  2269                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2270  159A  1283               	bcf	3,5	;RP0=0, select bank0
  2271  159B  1303               	bcf	3,6	;RP1=0, select bank0
  2272  159C  110C               	bcf	12,2	;volatile
  2273                           
  2274                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2275  159D  159D               	bsf	29,3	;volatile
  2276                           
  2277                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2278  159E  151D               	bsf	29,2	;volatile
  2279                           
  2280                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2281  159F  149D               	bsf	29,1	;volatile
  2282                           
  2283                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2284  15A0  141D               	bsf	29,0	;volatile
  2285                           
  2286                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2287  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  2288  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  2289  15A3  140D               	bsf	13,0	;volatile
  2290                           
  2291                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2292  15A4  1283               	bcf	3,5	;RP0=0, select bank0
  2293  15A5  1303               	bcf	3,6	;RP1=0, select bank0
  2294  15A6  100D               	bcf	13,0	;volatile
  2295  15A7  0008               	return
  2296  15A8                     __end_of_PWM_Init:	
  2297                           
  2298                           	psect	text6
  2299  1540                     __ptext6:	
  2300 ;; *************** function _PWM_DutyCycle2 *****************
  2301 ;; Defined at:
  2302 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  valor           2    0[BANK1 ] int 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;		None               void
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         0       0       2       0       0
  2317 ;;      Locals:         0       0       0       0       0
  2318 ;;      Temps:          0       0       2       0       0
  2319 ;;      Totals:         0       0       4       0       0
  2320 ;;Total ram usage:        4 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    5
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _PWM_DutyCycle2
  2332  1540                     _PWM_DutyCycle2:	
  2333                           
  2334                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2335                           
  2336                           ;incstack = 0
  2337                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2338  1540  1683               	bsf	3,5	;RP0=1, select bank1
  2339  1541  1303               	bcf	3,6	;RP1=0, select bank1
  2340  1542  0848               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  2341  1543  00CA               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  2342  1544  0847               	movf	PWM_DutyCycle2@valor^(0+128),w
  2343  1545  00C9               	movwf	??_PWM_DutyCycle2^(0+128)
  2344  1546  0D4A               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2345  1547  0CCA               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2346  1548  0CC9               	rrf	??_PWM_DutyCycle2^(0+128),f
  2347  1549  0D4A               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2348  154A  0CCA               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2349  154B  0CC9               	rrf	??_PWM_DutyCycle2^(0+128),f
  2350  154C  0849               	movf	??_PWM_DutyCycle2^(0+128),w
  2351  154D  1283               	bcf	3,5	;RP0=0, select bank0
  2352  154E  1303               	bcf	3,6	;RP1=0, select bank0
  2353  154F  009B               	movwf	27	;volatile
  2354                           
  2355                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2356  1550  1683               	bsf	3,5	;RP0=1, select bank1
  2357  1551  1303               	bcf	3,6	;RP1=0, select bank1
  2358  1552  0847               	movf	PWM_DutyCycle2@valor^(0+128),w
  2359  1553  00C9               	movwf	??_PWM_DutyCycle2^(0+128)
  2360  1554  3003               	movlw	3
  2361  1555                     u3045:	
  2362  1555  1003               	clrc
  2363  1556  0DC9               	rlf	??_PWM_DutyCycle2^(0+128),f
  2364  1557  3EFF               	addlw	-1
  2365  1558  1D03               	skipz
  2366  1559  2D55               	goto	u3045
  2367  155A  1003               	clrc
  2368  155B  0D49               	rlf	??_PWM_DutyCycle2^(0+128),w
  2369  155C  380C               	iorlw	12
  2370  155D  1283               	bcf	3,5	;RP0=0, select bank0
  2371  155E  1303               	bcf	3,6	;RP1=0, select bank0
  2372  155F  009D               	movwf	29	;volatile
  2373  1560  0008               	return
  2374  1561                     __end_of_PWM_DutyCycle2:	
  2375                           
  2376                           	psect	text7
  2377  151F                     __ptext7:	
  2378 ;; *************** function _PWM_DutyCycle1 *****************
  2379 ;; Defined at:
  2380 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  valor           2    0[BANK1 ] int 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       2       0       0
  2395 ;;      Locals:         0       0       0       0       0
  2396 ;;      Temps:          0       0       2       0       0
  2397 ;;      Totals:         0       0       4       0       0
  2398 ;;Total ram usage:        4 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    5
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _PWM_DutyCycle1
  2410  151F                     _PWM_DutyCycle1:	
  2411                           
  2412                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2416  151F  1683               	bsf	3,5	;RP0=1, select bank1
  2417  1520  1303               	bcf	3,6	;RP1=0, select bank1
  2418  1521  0848               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  2419  1522  00CA               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  2420  1523  0847               	movf	PWM_DutyCycle1@valor^(0+128),w
  2421  1524  00C9               	movwf	??_PWM_DutyCycle1^(0+128)
  2422  1525  0D4A               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2423  1526  0CCA               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2424  1527  0CC9               	rrf	??_PWM_DutyCycle1^(0+128),f
  2425  1528  0D4A               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2426  1529  0CCA               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2427  152A  0CC9               	rrf	??_PWM_DutyCycle1^(0+128),f
  2428  152B  0849               	movf	??_PWM_DutyCycle1^(0+128),w
  2429  152C  1283               	bcf	3,5	;RP0=0, select bank0
  2430  152D  1303               	bcf	3,6	;RP1=0, select bank0
  2431  152E  0095               	movwf	21	;volatile
  2432                           
  2433                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2434  152F  1683               	bsf	3,5	;RP0=1, select bank1
  2435  1530  1303               	bcf	3,6	;RP1=0, select bank1
  2436  1531  0847               	movf	PWM_DutyCycle1@valor^(0+128),w
  2437  1532  00C9               	movwf	??_PWM_DutyCycle1^(0+128)
  2438  1533  3003               	movlw	3
  2439  1534                     u3095:	
  2440  1534  1003               	clrc
  2441  1535  0DC9               	rlf	??_PWM_DutyCycle1^(0+128),f
  2442  1536  3EFF               	addlw	-1
  2443  1537  1D03               	skipz
  2444  1538  2D34               	goto	u3095
  2445  1539  1003               	clrc
  2446  153A  0D49               	rlf	??_PWM_DutyCycle1^(0+128),w
  2447  153B  380C               	iorlw	12
  2448  153C  1283               	bcf	3,5	;RP0=0, select bank0
  2449  153D  1303               	bcf	3,6	;RP1=0, select bank0
  2450  153E  0097               	movwf	23	;volatile
  2451  153F  0008               	return
  2452  1540                     __end_of_PWM_DutyCycle1:	
  2453                           
  2454                           	psect	text8
  2455  15D1                     __ptext8:	
  2456 ;; *************** function _LCD_WriteString *****************
  2457 ;; Defined at:
  2458 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  2461 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       2       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         0       0       2       0       0
  2477 ;;Total ram usage:        2 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    6
  2480 ;; This function calls:
  2481 ;;		_LCD_WriteData
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _LCD_WriteString
  2489  15D1                     _LCD_WriteString:	
  2490  15D1                     l2753:	
  2491                           ;lcd.c: 63: while(*Str != '\0')
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2495                           
  2496  15D1  1683               	bsf	3,5	;RP0=1, select bank1
  2497  15D2  1303               	bcf	3,6	;RP1=0, select bank1
  2498  15D3  084A               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2499  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  2500  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  2501  15D6  00FF               	movwf	127
  2502  15D7  1683               	bsf	3,5	;RP0=1, select bank1
  2503  15D8  1303               	bcf	3,6	;RP1=0, select bank1
  2504  15D9  0849               	movf	LCD_WriteString@Str^(0+128),w
  2505  15DA  0084               	movwf	4
  2506  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  2507  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  2508  15DD  160A  118A  2000  160A  118A  	fcall	stringtab
  2509  15E2  3800               	iorlw	0
  2510  15E3  1903               	btfsc	3,2
  2511  15E4  0008               	return
  2512                           
  2513                           ;lcd.c: 64: {
  2514                           ;lcd.c: 65: LCD_WriteData(*Str);
  2515  15E5  1683               	bsf	3,5	;RP0=1, select bank1
  2516  15E6  1303               	bcf	3,6	;RP1=0, select bank1
  2517  15E7  084A               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2518  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  2519  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  2520  15EA  00FF               	movwf	127
  2521  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  2522  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  2523  15ED  0849               	movf	LCD_WriteString@Str^(0+128),w
  2524  15EE  0084               	movwf	4
  2525  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  2526  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  2527  15F1  160A  118A  2000  160A  118A  	fcall	stringtab
  2528  15F6  160A  118A  247B  160A  118A  	fcall	_LCD_WriteData
  2529                           
  2530                           ;lcd.c: 66: Str++;
  2531  15FB  3001               	movlw	1
  2532  15FC  1683               	bsf	3,5	;RP0=1, select bank1
  2533  15FD  1303               	bcf	3,6	;RP1=0, select bank1
  2534  15FE  07C9               	addwf	LCD_WriteString@Str^(0+128),f
  2535  15FF  1803               	skipnc
  2536  1600  0ACA               	incf	(LCD_WriteString@Str+1)^(0+128),f
  2537  1601  2DD1               	goto	l2753
  2538  1602                     __end_of_LCD_WriteString:	
  2539                           
  2540                           	psect	text9
  2541  147B                     __ptext9:	
  2542 ;; *************** function _LCD_WriteData *****************
  2543 ;; Defined at:
  2544 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  Byte            1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  Byte            1    1[BANK1 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         0       0       1       0       0
  2560 ;;      Temps:          0       0       1       0       0
  2561 ;;      Totals:         0       0       2       0       0
  2562 ;;Total ram usage:        2 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    5
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_LCD_WriteString
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _LCD_WriteData
  2574  147B                     _LCD_WriteData:	
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _LCD_WriteData: [wreg]
  2578                           ;LCD_WriteData@Byte stored from wreg
  2579  147B  1683               	bsf	3,5	;RP0=1, select bank1
  2580  147C  1303               	bcf	3,6	;RP1=0, select bank1
  2581  147D  00C8               	movwf	LCD_WriteData@Byte^(0+128)
  2582                           
  2583                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2584  147E  1283               	bcf	3,5	;RP0=0, select bank0
  2585  147F  1303               	bcf	3,6	;RP1=0, select bank0
  2586  1480  1409               	bsf	9,0	;volatile
  2587                           
  2588                           ;lcd.c: 51: PORTD = Byte;
  2589  1481  1683               	bsf	3,5	;RP0=1, select bank1
  2590  1482  1303               	bcf	3,6	;RP1=0, select bank1
  2591  1483  0848               	movf	LCD_WriteData@Byte^(0+128),w
  2592  1484  1283               	bcf	3,5	;RP0=0, select bank0
  2593  1485  1303               	bcf	3,6	;RP1=0, select bank0
  2594  1486  0088               	movwf	8	;volatile
  2595                           
  2596                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2597  1487  1489               	bsf	9,1	;volatile
  2598                           
  2599                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2600  1488  303D               	movlw	61
  2601  1489  1683               	bsf	3,5	;RP0=1, select bank1
  2602  148A  1303               	bcf	3,6	;RP1=0, select bank1
  2603  148B  00C7               	movwf	??_LCD_WriteData^(0+128)
  2604  148C                     u3367:	
  2605  148C  0BC7               	decfsz	??_LCD_WriteData^(0+128),f
  2606  148D  2C8C               	goto	u3367
  2607                           
  2608                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2609  148E  1283               	bcf	3,5	;RP0=0, select bank0
  2610  148F  1303               	bcf	3,6	;RP1=0, select bank0
  2611  1490  1089               	bcf	9,1	;volatile
  2612  1491  0008               	return
  2613  1492                     __end_of_LCD_WriteData:	
  2614                           
  2615                           	psect	text10
  2616  1707                     __ptext10:	
  2617 ;; *************** function _LCD_Init *****************
  2618 ;; Defined at:
  2619 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       2       0       0
  2636 ;;      Totals:         0       0       2       0       0
  2637 ;;Total ram usage:        2 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    6
  2640 ;; This function calls:
  2641 ;;		_LCD_WriteCmd
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _LCD_Init
  2649  1707                     _LCD_Init:	
  2650                           
  2651                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2655  1707  1683               	bsf	3,5	;RP0=1, select bank1
  2656  1708  1303               	bcf	3,6	;RP1=0, select bank1
  2657  1709  119F               	bcf	31,3	;volatile
  2658                           
  2659                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2660  170A  151F               	bsf	31,2	;volatile
  2661                           
  2662                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2663  170B  109F               	bcf	31,1	;volatile
  2664                           
  2665                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2666  170C  101F               	bcf	31,0	;volatile
  2667                           
  2668                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2669  170D  305A               	movlw	90
  2670  170E  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  2671  170F  30C3               	movlw	195
  2672  1710  00C9               	movwf	??_LCD_Init^(0+128)
  2673  1711                     u3377:	
  2674  1711  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2675  1712  2F11               	goto	u3377
  2676  1713  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  2677  1714  2F11               	goto	u3377
  2678                           
  2679                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2680  1715  3030               	movlw	48
  2681  1716  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2682                           
  2683                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2684  171B  3018               	movlw	24
  2685  171C  1683               	bsf	3,5	;RP0=1, select bank1
  2686  171D  1303               	bcf	3,6	;RP1=0, select bank1
  2687  171E  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  2688  171F  30EF               	movlw	239
  2689  1720  00C9               	movwf	??_LCD_Init^(0+128)
  2690  1721                     u3387:	
  2691  1721  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2692  1722  2F21               	goto	u3387
  2693  1723  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  2694  1724  2F21               	goto	u3387
  2695                           
  2696                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2697  1725  3030               	movlw	48
  2698  1726  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2699                           
  2700                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2701  172B  3099               	movlw	153
  2702  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2703  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2704  172E  00C9               	movwf	??_LCD_Init^(0+128)
  2705  172F                     u3397:	
  2706  172F  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2707  1730  2F2F               	goto	u3397
  2708                           
  2709                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2710  1731  3030               	movlw	48
  2711  1732  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2712                           
  2713                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2714  1737  303D               	movlw	61
  2715  1738  1683               	bsf	3,5	;RP0=1, select bank1
  2716  1739  1303               	bcf	3,6	;RP1=0, select bank1
  2717  173A  00C9               	movwf	??_LCD_Init^(0+128)
  2718  173B                     u3407:	
  2719  173B  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2720  173C  2F3B               	goto	u3407
  2721                           
  2722                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2723  173D  3038               	movlw	56
  2724  173E  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2725                           
  2726                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2727  1743  303D               	movlw	61
  2728  1744  1683               	bsf	3,5	;RP0=1, select bank1
  2729  1745  1303               	bcf	3,6	;RP1=0, select bank1
  2730  1746  00C9               	movwf	??_LCD_Init^(0+128)
  2731  1747                     u3417:	
  2732  1747  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2733  1748  2F47               	goto	u3417
  2734                           
  2735                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2736  1749  3001               	movlw	1
  2737  174A  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2738                           
  2739                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2740  174F  300C               	movlw	12
  2741  1750  1683               	bsf	3,5	;RP0=1, select bank1
  2742  1751  1303               	bcf	3,6	;RP1=0, select bank1
  2743  1752  00CA               	movwf	(??_LCD_Init^(0+128)+1)
  2744  1753  30F7               	movlw	247
  2745  1754  00C9               	movwf	??_LCD_Init^(0+128)
  2746  1755                     u3427:	
  2747  1755  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2748  1756  2F55               	goto	u3427
  2749  1757  0BCA               	decfsz	(??_LCD_Init^(0+128)+1),f
  2750  1758  2F55               	goto	u3427
  2751                           
  2752                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2753  1759  300C               	movlw	12
  2754  175A  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2755                           
  2756                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2757  175F  303D               	movlw	61
  2758  1760  1683               	bsf	3,5	;RP0=1, select bank1
  2759  1761  1303               	bcf	3,6	;RP1=0, select bank1
  2760  1762  00C9               	movwf	??_LCD_Init^(0+128)
  2761  1763                     u3437:	
  2762  1763  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2763  1764  2F63               	goto	u3437
  2764                           
  2765                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2766  1765  3006               	movlw	6
  2767  1766  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2768                           
  2769                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2770  176B  303D               	movlw	61
  2771  176C  1683               	bsf	3,5	;RP0=1, select bank1
  2772  176D  1303               	bcf	3,6	;RP1=0, select bank1
  2773  176E  00C9               	movwf	??_LCD_Init^(0+128)
  2774  176F                     u3447:	
  2775  176F  0BC9               	decfsz	??_LCD_Init^(0+128),f
  2776  1770  2F6F               	goto	u3447
  2777  1771  0008               	return
  2778  1772                     __end_of_LCD_Init:	
  2779                           
  2780                           	psect	text11
  2781  14FF                     __ptext11:	
  2782 ;; *************** function _LCD_Cursor *****************
  2783 ;; Defined at:
  2784 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  Row             1    wreg     unsigned char 
  2787 ;;  Col             1    0[BANK1 ] unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  Row             1    2[BANK1 ] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       1       0       0
  2800 ;;      Locals:         0       0       1       0       0
  2801 ;;      Temps:          0       0       1       0       0
  2802 ;;      Totals:         0       0       3       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    5
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _LCD_Cursor
  2815  14FF                     _LCD_Cursor:	
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2819                           ;LCD_Cursor@Row stored from wreg
  2820  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  2821  1500  1303               	bcf	3,6	;RP1=0, select bank1
  2822  1501  00C9               	movwf	LCD_Cursor@Row^(0+128)
  2823                           
  2824                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2825  1502  1283               	bcf	3,5	;RP0=0, select bank0
  2826  1503  1303               	bcf	3,6	;RP1=0, select bank0
  2827  1504  1009               	bcf	9,0	;volatile
  2828                           
  2829                           ;lcd.c: 14: if (Row == 0)
  2830  1505  1683               	bsf	3,5	;RP0=1, select bank1
  2831  1506  1303               	bcf	3,6	;RP1=0, select bank1
  2832  1507  08C9               	movf	LCD_Cursor@Row^(0+128),f
  2833  1508  1D03               	skipz
  2834  1509  2D0D               	goto	l2739
  2835                           
  2836                           ;lcd.c: 15: {
  2837                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2838  150A  0847               	movf	LCD_Cursor@Col^(0+128),w
  2839  150B  3E80               	addlw	128
  2840  150C  2D11               	goto	L1
  2841  150D                     l2739:	
  2842                           ;lcd.c: 17: }
  2843                           
  2844                           
  2845                           ;lcd.c: 18: else
  2846                           ;lcd.c: 19: {
  2847                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2848  150D  1683               	bsf	3,5	;RP0=1, select bank1
  2849  150E  1303               	bcf	3,6	;RP1=0, select bank1
  2850  150F  0847               	movf	LCD_Cursor@Col^(0+128),w
  2851  1510  3EC0               	addlw	192
  2852  1511                     L1:	
  2853  1511  1283               	bcf	3,5	;RP0=0, select bank0
  2854  1512  1303               	bcf	3,6	;RP1=0, select bank0
  2855  1513  0088               	movwf	8	;volatile
  2856                           
  2857                           ;lcd.c: 21: }
  2858                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2859  1514  1489               	bsf	9,1	;volatile
  2860                           
  2861                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2862  1515  303D               	movlw	61
  2863  1516  1683               	bsf	3,5	;RP0=1, select bank1
  2864  1517  1303               	bcf	3,6	;RP1=0, select bank1
  2865  1518  00C8               	movwf	??_LCD_Cursor^(0+128)
  2866  1519                     u3457:	
  2867  1519  0BC8               	decfsz	??_LCD_Cursor^(0+128),f
  2868  151A  2D19               	goto	u3457
  2869                           
  2870                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2871  151B  1283               	bcf	3,5	;RP0=0, select bank0
  2872  151C  1303               	bcf	3,6	;RP1=0, select bank0
  2873  151D  1089               	bcf	9,1	;volatile
  2874  151E  0008               	return
  2875  151F                     __end_of_LCD_Cursor:	
  2876                           
  2877                           	psect	text12
  2878  15A8                     __ptext12:	
  2879 ;; *************** function _LCD_Clear *****************
  2880 ;; Defined at:
  2881 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          0       0       2       0       0
  2898 ;;      Totals:         0       0       2       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    6
  2902 ;; This function calls:
  2903 ;;		_LCD_WriteCmd
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _LCD_Clear
  2911  15A8                     _LCD_Clear:	
  2912                           
  2913                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2917  15A8  3001               	movlw	1
  2918  15A9  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2919                           
  2920                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2921  15AE  300C               	movlw	12
  2922  15AF  1683               	bsf	3,5	;RP0=1, select bank1
  2923  15B0  1303               	bcf	3,6	;RP1=0, select bank1
  2924  15B1  00CA               	movwf	(??_LCD_Clear^(0+128)+1)
  2925  15B2  30F7               	movlw	247
  2926  15B3  00C9               	movwf	??_LCD_Clear^(0+128)
  2927  15B4                     u3467:	
  2928  15B4  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  2929  15B5  2DB4               	goto	u3467
  2930  15B6  0BCA               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2931  15B7  2DB4               	goto	u3467
  2932                           
  2933                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2934  15B8  300C               	movlw	12
  2935  15B9  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2936                           
  2937                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2938  15BE  303D               	movlw	61
  2939  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  2940  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  2941  15C1  00C9               	movwf	??_LCD_Clear^(0+128)
  2942  15C2                     u3477:	
  2943  15C2  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  2944  15C3  2DC2               	goto	u3477
  2945                           
  2946                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2947  15C4  3006               	movlw	6
  2948  15C5  160A  118A  2464  160A  118A  	fcall	_LCD_WriteCmd
  2949                           
  2950                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2951  15CA  303D               	movlw	61
  2952  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  2953  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  2954  15CD  00C9               	movwf	??_LCD_Clear^(0+128)
  2955  15CE                     u3487:	
  2956  15CE  0BC9               	decfsz	??_LCD_Clear^(0+128),f
  2957  15CF  2DCE               	goto	u3487
  2958  15D0  0008               	return
  2959  15D1                     __end_of_LCD_Clear:	
  2960                           
  2961                           	psect	text13
  2962  1464                     __ptext13:	
  2963 ;; *************** function _LCD_WriteCmd *****************
  2964 ;; Defined at:
  2965 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  Byte            1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  Byte            1    1[BANK1 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       0       1       0       0
  2981 ;;      Temps:          0       0       1       0       0
  2982 ;;      Totals:         0       0       2       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    5
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_LCD_Clear
  2990 ;;		_LCD_Init
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _LCD_WriteCmd
  2996  1464                     _LCD_WriteCmd:	
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _LCD_WriteCmd: [wreg]
  3000                           ;LCD_WriteCmd@Byte stored from wreg
  3001  1464  1683               	bsf	3,5	;RP0=1, select bank1
  3002  1465  1303               	bcf	3,6	;RP1=0, select bank1
  3003  1466  00C8               	movwf	LCD_WriteCmd@Byte^(0+128)
  3004                           
  3005                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3006  1467  1283               	bcf	3,5	;RP0=0, select bank0
  3007  1468  1303               	bcf	3,6	;RP1=0, select bank0
  3008  1469  1009               	bcf	9,0	;volatile
  3009                           
  3010                           ;lcd.c: 36: PORTD = Byte;
  3011  146A  1683               	bsf	3,5	;RP0=1, select bank1
  3012  146B  1303               	bcf	3,6	;RP1=0, select bank1
  3013  146C  0848               	movf	LCD_WriteCmd@Byte^(0+128),w
  3014  146D  1283               	bcf	3,5	;RP0=0, select bank0
  3015  146E  1303               	bcf	3,6	;RP1=0, select bank0
  3016  146F  0088               	movwf	8	;volatile
  3017                           
  3018                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3019  1470  1489               	bsf	9,1	;volatile
  3020                           
  3021                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3022  1471  303D               	movlw	61
  3023  1472  1683               	bsf	3,5	;RP0=1, select bank1
  3024  1473  1303               	bcf	3,6	;RP1=0, select bank1
  3025  1474  00C7               	movwf	??_LCD_WriteCmd^(0+128)
  3026  1475                     u3497:	
  3027  1475  0BC7               	decfsz	??_LCD_WriteCmd^(0+128),f
  3028  1476  2C75               	goto	u3497
  3029                           
  3030                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3031  1477  1283               	bcf	3,5	;RP0=0, select bank0
  3032  1478  1303               	bcf	3,6	;RP1=0, select bank0
  3033  1479  1089               	bcf	9,1	;volatile
  3034  147A  0008               	return
  3035  147B                     __end_of_LCD_WriteCmd:	
  3036                           
  3037                           	psect	text14
  3038  143E                     __ptext14:	
  3039 ;; *************** function _ADC_Init *****************
  3040 ;; Defined at:
  3041 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		None
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    5
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _ADC_Init
  3071  143E                     _ADC_Init:	
  3072                           
  3073                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _ADC_Init: []
  3077  143E  1683               	bsf	3,5	;RP0=1, select bank1
  3078  143F  1303               	bcf	3,6	;RP1=0, select bank1
  3079  1440  179F               	bsf	31,7	;volatile
  3080                           
  3081                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3082  1441  159F               	bsf	31,3	;volatile
  3083                           
  3084                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3085  1442  151F               	bsf	31,2	;volatile
  3086                           
  3087                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3088  1443  149F               	bsf	31,1	;volatile
  3089                           
  3090                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3091  1444  101F               	bcf	31,0	;volatile
  3092                           
  3093                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3094  1445  1283               	bcf	3,5	;RP0=0, select bank0
  3095  1446  1303               	bcf	3,6	;RP1=0, select bank0
  3096  1447  179F               	bsf	31,7	;volatile
  3097                           
  3098                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3099  1448  131F               	bcf	31,6	;volatile
  3100                           
  3101                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3102  1449  1683               	bsf	3,5	;RP0=1, select bank1
  3103  144A  1303               	bcf	3,6	;RP1=0, select bank1
  3104  144B  130C               	bcf	12,6	;volatile
  3105                           
  3106                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3107  144C  1283               	bcf	3,5	;RP0=0, select bank0
  3108  144D  1303               	bcf	3,6	;RP1=0, select bank0
  3109  144E  130C               	bcf	12,6	;volatile
  3110  144F  0008               	return
  3111  1450                     __end_of_ADC_Init:	
  3112                           
  3113                           	psect	text15
  3114  0D5F                     __ptext15:	
  3115 ;; *************** function _ISR *****************
  3116 ;; Defined at:
  3117 ;;		line 358 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;		None               void
  3124 ;; Registers used:
  3125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       4       0       0       0
  3134 ;;      Totals:         0       4       0       0       0
  3135 ;;Total ram usage:        4 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    4
  3138 ;; This function calls:
  3139 ;;		_Fuzzy
  3140 ;;		_USART_ReceiveChar
  3141 ;;		_USART_WriteString
  3142 ;;		___lwdiv
  3143 ;;		___lwtoft
  3144 ;;		___wmul
  3145 ;;		_send
  3146 ;;		i1_PWM_DutyCycle2
  3147 ;;		i1_TIMER0_Set
  3148 ;; This function is called by:
  3149 ;;		Interrupt level 1
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _ISR
  3155  0D5F                     _ISR:	
  3156                           
  3157                           ;main.c: 361: if (PIR1bits.RCIF)
  3158  0D5F  1E8C               	btfss	12,5	;volatile
  3159  0D60  2E25               	goto	i1l2859
  3160                           
  3161                           ;main.c: 362: {
  3162                           ;main.c: 363: if (USART_ReceiveChar() == '0')
  3163  0D61  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3164  0D66  3A30               	xorlw	48
  3165  0D67  1D03               	skipz
  3166  0D68  2D7B               	goto	i1l2813
  3167                           
  3168                           ;main.c: 364: {
  3169                           ;main.c: 365: USART_WriteString("\n\rdesligado\n\r");
  3170  0D69  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3171  0D6A  160A  118A  24C5  120A  158A  	fcall	_USART_WriteString
  3172                           
  3173                           ;main.c: 367: PWM_DutyCycle2(0);
  3174  0D6F  3000               	movlw	0
  3175  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0D72  00BE               	movwf	i1PWM_DutyCycle2@valor
  3178  0D73  3000               	movlw	0
  3179  0D74  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  3180  0D75  160A  118A  24AA  120A  158A  	fcall	i1_PWM_DutyCycle2
  3181                           
  3182                           ;main.c: 368: return;
  3183  0D7A  2E9D               	goto	i1l178
  3184  0D7B                     i1l2813:	
  3185                           
  3186                           ;main.c: 369: }
  3187                           ;main.c: 371: if (USART_ReceiveChar() == '1')
  3188  0D7B  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3189  0D80  3A31               	xorlw	49
  3190  0D81  1D03               	skipz
  3191  0D82  2D89               	goto	i1l2817
  3192                           
  3193                           ;main.c: 372: {
  3194                           ;main.c: 373: setpointUI = 720;
  3195  0D83  30D0               	movlw	208
  3196  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0D86  00C3               	movwf	_setpointUI^(0+128)
  3199  0D87  3002               	movlw	2
  3200  0D88  00C4               	movwf	(_setpointUI^(0+128)+1)
  3201  0D89                     i1l2817:	
  3202                           
  3203                           ;main.c: 375: }
  3204                           ;main.c: 377: if (USART_ReceiveChar() == '2')
  3205  0D89  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3206  0D8E  3A32               	xorlw	50
  3207  0D8F  1D03               	skipz
  3208  0D90  2D97               	goto	i1l2821
  3209                           
  3210                           ;main.c: 378: {
  3211                           ;main.c: 379: setpointUI = 1450;
  3212  0D91  30AA               	movlw	170
  3213  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0D94  00C3               	movwf	_setpointUI^(0+128)
  3216  0D95  3005               	movlw	5
  3217  0D96  00C4               	movwf	(_setpointUI^(0+128)+1)
  3218  0D97                     i1l2821:	
  3219                           
  3220                           ;main.c: 381: }
  3221                           ;main.c: 383: if (USART_ReceiveChar() == '3')
  3222  0D97  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3223  0D9C  3A33               	xorlw	51
  3224  0D9D  1D03               	skipz
  3225  0D9E  2DA5               	goto	i1l2825
  3226                           
  3227                           ;main.c: 384: {
  3228                           ;main.c: 385: setpointUI = 2828;
  3229  0D9F  300C               	movlw	12
  3230  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  3232  0DA2  00C3               	movwf	_setpointUI^(0+128)
  3233  0DA3  300B               	movlw	11
  3234  0DA4  00C4               	movwf	(_setpointUI^(0+128)+1)
  3235  0DA5                     i1l2825:	
  3236                           
  3237                           ;main.c: 387: }
  3238                           ;main.c: 389: if (USART_ReceiveChar() == '4')
  3239  0DA5  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3240  0DAA  3A34               	xorlw	52
  3241  0DAB  1D03               	skipz
  3242  0DAC  2DB3               	goto	i1l2829
  3243                           
  3244                           ;main.c: 390: {
  3245                           ;main.c: 391: setpointUI = 3256;
  3246  0DAD  30B8               	movlw	184
  3247  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  3249  0DB0  00C3               	movwf	_setpointUI^(0+128)
  3250  0DB1  300C               	movlw	12
  3251  0DB2  00C4               	movwf	(_setpointUI^(0+128)+1)
  3252  0DB3                     i1l2829:	
  3253                           
  3254                           ;main.c: 393: }
  3255                           ;main.c: 395: if (USART_ReceiveChar() == '5')
  3256  0DB3  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3257  0DB8  3A35               	xorlw	53
  3258  0DB9  1D03               	skipz
  3259  0DBA  2DC1               	goto	i1l2833
  3260                           
  3261                           ;main.c: 396: {
  3262                           ;main.c: 397: setpointUI = 4510;
  3263  0DBB  309E               	movlw	158
  3264  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0DBE  00C3               	movwf	_setpointUI^(0+128)
  3267  0DBF  3011               	movlw	17
  3268  0DC0  00C4               	movwf	(_setpointUI^(0+128)+1)
  3269  0DC1                     i1l2833:	
  3270                           
  3271                           ;main.c: 399: }
  3272                           ;main.c: 401: if (USART_ReceiveChar() == '6')
  3273  0DC1  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3274  0DC6  3A36               	xorlw	54
  3275  0DC7  1D03               	skipz
  3276  0DC8  2DCF               	goto	i1l2837
  3277                           
  3278                           ;main.c: 402: {
  3279                           ;main.c: 403: setpointUI = 5760;
  3280  0DC9  3080               	movlw	128
  3281  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0DCB  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0DCC  00C3               	movwf	_setpointUI^(0+128)
  3284  0DCD  3016               	movlw	22
  3285  0DCE  00C4               	movwf	(_setpointUI^(0+128)+1)
  3286  0DCF                     i1l2837:	
  3287                           
  3288                           ;main.c: 405: }
  3289                           ;main.c: 407: if (USART_ReceiveChar() == '7')
  3290  0DCF  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3291  0DD4  3A37               	xorlw	55
  3292  0DD5  1D03               	skipz
  3293  0DD6  2DDD               	goto	i1l2841
  3294                           
  3295                           ;main.c: 408: {
  3296                           ;main.c: 409: setpointUI = 6890;
  3297  0DD7  30EA               	movlw	234
  3298  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3300  0DDA  00C3               	movwf	_setpointUI^(0+128)
  3301  0DDB  301A               	movlw	26
  3302  0DDC  00C4               	movwf	(_setpointUI^(0+128)+1)
  3303  0DDD                     i1l2841:	
  3304                           
  3305                           ;main.c: 411: }
  3306                           ;main.c: 413: if (USART_ReceiveChar() == '8')
  3307  0DDD  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3308  0DE2  3A38               	xorlw	56
  3309  0DE3  1D03               	skipz
  3310  0DE4  2DEB               	goto	i1l2845
  3311                           
  3312                           ;main.c: 414: {
  3313                           ;main.c: 415: setpointUI = 8100;
  3314  0DE5  30A4               	movlw	164
  3315  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0DE8  00C3               	movwf	_setpointUI^(0+128)
  3318  0DE9  301F               	movlw	31
  3319  0DEA  00C4               	movwf	(_setpointUI^(0+128)+1)
  3320  0DEB                     i1l2845:	
  3321                           
  3322                           ;main.c: 417: }
  3323                           ;main.c: 419: if (USART_ReceiveChar() == '9')
  3324  0DEB  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3325  0DF0  3A39               	xorlw	57
  3326  0DF1  1D03               	skipz
  3327  0DF2  2DF9               	goto	i1l2849
  3328                           
  3329                           ;main.c: 420: {
  3330                           ;main.c: 421: setpointUI = 9000;
  3331  0DF3  3028               	movlw	40
  3332  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  3334  0DF6  00C3               	movwf	_setpointUI^(0+128)
  3335  0DF7  3023               	movlw	35
  3336  0DF8  00C4               	movwf	(_setpointUI^(0+128)+1)
  3337  0DF9                     i1l2849:	
  3338                           
  3339                           ;main.c: 423: }
  3340                           ;main.c: 427: Fuzzy();
  3341  0DF9  120A  118A  2039  120A  158A  	fcall	_Fuzzy
  3342                           
  3343                           ;main.c: 428: tf = (setpointUI - 100);
  3344  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  3345  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  3346  0E00  0843               	movf	_setpointUI^(0+128),w
  3347  0E01  3E9C               	addlw	156
  3348  0E02  00F8               	movwf	___lwtoft@c
  3349  0E03  0844               	movf	(_setpointUI+1)^(0+128),w
  3350  0E04  1803               	skipnc
  3351  0E05  3E01               	addlw	1
  3352  0E06  3EFF               	addlw	255
  3353  0E07  00F9               	movwf	___lwtoft@c+1
  3354  0E08  160A  118A  2450  120A  158A  	fcall	___lwtoft
  3355  0E0D  0878               	movf	?___lwtoft,w
  3356  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0E10  00E4               	movwf	_tf^(0+128)
  3359  0E11  0879               	movf	?___lwtoft+1,w
  3360  0E12  00E5               	movwf	(_tf+1)^(0+128)
  3361  0E13  087A               	movf	?___lwtoft+2,w
  3362  0E14  00E6               	movwf	(_tf+2)^(0+128)
  3363                           
  3364                           ;main.c: 431: if(USART_ReceiveChar() == 'X')
  3365  0E15  160A  118A  2492  120A  158A  	fcall	_USART_ReceiveChar
  3366  0E1A  3A58               	xorlw	88
  3367  0E1B  1D03               	skipz
  3368  0E1C  2E22               	goto	i1l2857
  3369                           
  3370                           ;main.c: 432: {
  3371                           ;main.c: 433: send();
  3372  0E1D  120A  158A  20E0  120A  158A  	fcall	_send
  3373  0E22                     i1l2857:	
  3374                           
  3375                           ;main.c: 434: }
  3376                           ;main.c: 436: PIR1bits.RCIF = 0;
  3377  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0E24  128C               	bcf	12,5	;volatile
  3380  0E25                     i1l2859:	
  3381                           
  3382                           ;main.c: 437: }
  3383                           ;main.c: 440: if (PIR1bits.ADIF)
  3384  0E25  1B0C               	btfsc	12,6	;volatile
  3385                           
  3386                           ;main.c: 441: {
  3387                           ;main.c: 445: PIR1bits.ADIF = 0;
  3388  0E26  130C               	bcf	12,6	;volatile
  3389                           
  3390                           ;main.c: 446: }
  3391                           ;main.c: 450: if (INTCONbits.T0IF)
  3392  0E27  1D0B               	btfss	11,2	;volatile
  3393  0E28  2E99               	goto	i1l2887
  3394                           
  3395                           ;main.c: 451: {
  3396                           ;main.c: 453: TIMER0_Set(238);
  3397  0E29  30EE               	movlw	238
  3398  0E2A  160A  118A  23F8  120A  158A  	fcall	i1_TIMER0_Set
  3399                           
  3400                           ;main.c: 456: if (contagens_tm0 < 499)
  3401  0E2F  3001               	movlw	1
  3402  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  3404  0E32  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  3405  0E33  30F3               	movlw	243
  3406  0E34  1903               	skipnz
  3407  0E35  023D               	subwf	_contagens_tm0^(0+128),w
  3408  0E36  1803               	skipnc
  3409  0E37  2E42               	goto	i1l2871
  3410                           
  3411                           ;main.c: 457: {
  3412                           ;main.c: 459: contagens_tm0++;
  3413  0E38  3001               	movlw	1
  3414  0E39  07BD               	addwf	_contagens_tm0^(0+128),f
  3415  0E3A  1803               	skipnc
  3416  0E3B  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  3417  0E3C  3000               	movlw	0
  3418  0E3D  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  3419                           
  3420                           ;main.c: 462: PORTBbits.RB6 = 1;
  3421  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0E40  1706               	bsf	6,6	;volatile
  3424                           
  3425                           ;main.c: 463: }
  3426  0E41  2E98               	goto	i1l2885
  3427  0E42                     i1l2871:	
  3428                           
  3429                           ;main.c: 464: else
  3430                           ;main.c: 465: {
  3431                           ;main.c: 467: contagens_tm0 = 0;
  3432  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  3433  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0E44  01BD               	clrf	_contagens_tm0^(0+128)
  3435  0E45  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  3436                           
  3437                           ;main.c: 470: pulsos = (TMR1H << 8) + TMR1L;
  3438  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0E48  080F               	movf	15,w	;volatile
  3441  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3442  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3443  0E4B  01C0               	clrf	(_pulsos+1)^(0+128)
  3444  0E4C  07C0               	addwf	(_pulsos+1)^(0+128),f
  3445  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0E4F  080E               	movf	14,w	;volatile
  3448  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0E52  01BF               	clrf	_pulsos^(0+128)
  3451  0E53  07BF               	addwf	_pulsos^(0+128),f
  3452                           
  3453                           ;main.c: 471: rpm = ((pulsos / pas_cooler) * 120);
  3454  0E54  0868               	movf	(_pas_cooler+1)^(0+128),w
  3455  0E55  01F1               	clrf	___lwdiv@divisor+1
  3456  0E56  07F1               	addwf	___lwdiv@divisor+1,f
  3457  0E57  0867               	movf	_pas_cooler^(0+128),w
  3458  0E58  01F0               	clrf	___lwdiv@divisor
  3459  0E59  07F0               	addwf	___lwdiv@divisor,f
  3460  0E5A  0840               	movf	(_pulsos+1)^(0+128),w
  3461  0E5B  01F3               	clrf	___lwdiv@dividend+1
  3462  0E5C  07F3               	addwf	___lwdiv@dividend+1,f
  3463  0E5D  083F               	movf	_pulsos^(0+128),w
  3464  0E5E  01F2               	clrf	___lwdiv@dividend
  3465  0E5F  07F2               	addwf	___lwdiv@dividend,f
  3466  0E60  160A  118A  2602  120A  158A  	fcall	___lwdiv
  3467  0E65  0871               	movf	?___lwdiv+1,w
  3468  0E66  01F9               	clrf	___wmul@multiplier+1
  3469  0E67  07F9               	addwf	___wmul@multiplier+1,f
  3470  0E68  0870               	movf	?___lwdiv,w
  3471  0E69  01F8               	clrf	___wmul@multiplier
  3472  0E6A  07F8               	addwf	___wmul@multiplier,f
  3473  0E6B  3078               	movlw	120
  3474  0E6C  00FA               	movwf	___wmul@multiplicand
  3475  0E6D  3000               	movlw	0
  3476  0E6E  00FB               	movwf	___wmul@multiplicand+1
  3477  0E6F  160A  118A  2561  120A  158A  	fcall	___wmul
  3478  0E74  0879               	movf	?___wmul+1,w
  3479  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0E77  01C2               	clrf	(_rpm+1)^(0+128)
  3482  0E78  07C2               	addwf	(_rpm+1)^(0+128),f
  3483  0E79  0878               	movf	?___wmul,w
  3484  0E7A  01C1               	clrf	_rpm^(0+128)
  3485  0E7B  07C1               	addwf	_rpm^(0+128),f
  3486                           
  3487                           ;main.c: 475: rpm = rpm / 40;
  3488  0E7C  3028               	movlw	40
  3489  0E7D  00F0               	movwf	___lwdiv@divisor
  3490  0E7E  3000               	movlw	0
  3491  0E7F  00F1               	movwf	___lwdiv@divisor+1
  3492  0E80  0842               	movf	(_rpm+1)^(0+128),w
  3493  0E81  01F3               	clrf	___lwdiv@dividend+1
  3494  0E82  07F3               	addwf	___lwdiv@dividend+1,f
  3495  0E83  0841               	movf	_rpm^(0+128),w
  3496  0E84  01F2               	clrf	___lwdiv@dividend
  3497  0E85  07F2               	addwf	___lwdiv@dividend,f
  3498  0E86  160A  118A  2602  120A  158A  	fcall	___lwdiv
  3499  0E8B  0871               	movf	?___lwdiv+1,w
  3500  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  3502  0E8E  01C2               	clrf	(_rpm+1)^(0+128)
  3503  0E8F  07C2               	addwf	(_rpm+1)^(0+128),f
  3504  0E90  0870               	movf	?___lwdiv,w
  3505  0E91  01C1               	clrf	_rpm^(0+128)
  3506  0E92  07C1               	addwf	_rpm^(0+128),f
  3507                           
  3508                           ;main.c: 478: TMR1L = 0x00;
  3509  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0E95  018E               	clrf	14	;volatile
  3512                           
  3513                           ;main.c: 479: TMR1H = 0x00;
  3514  0E96  018F               	clrf	15	;volatile
  3515                           
  3516                           ;main.c: 482: PORTBbits.RB6 = 0;
  3517  0E97  1306               	bcf	6,6	;volatile
  3518  0E98                     i1l2885:	
  3519                           
  3520                           ;main.c: 483: }
  3521                           ;main.c: 486: INTCONbits.T0IF = 0;
  3522  0E98  110B               	bcf	11,2	;volatile
  3523  0E99                     i1l2887:	
  3524                           
  3525                           ;main.c: 487: }
  3526                           ;main.c: 490: if (PIR1bits.TMR1IF)
  3527  0E99  180C               	btfsc	12,0	;volatile
  3528                           
  3529                           ;main.c: 491: {
  3530                           ;main.c: 495: PIR1bits.TMR1IF = 0;
  3531  0E9A  100C               	bcf	12,0	;volatile
  3532                           
  3533                           ;main.c: 496: }
  3534                           ;main.c: 499: if (PIR1bits.SSPIF)
  3535  0E9B  198C               	btfsc	12,3	;volatile
  3536                           
  3537                           ;main.c: 500: {
  3538                           ;main.c: 504: PIR1bits.SSPIF = 0;
  3539  0E9C  118C               	bcf	12,3	;volatile
  3540  0E9D                     i1l178:	
  3541  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0E9F  086C               	movf	??_ISR+3,w
  3544  0EA0  00FF               	movwf	127
  3545  0EA1  086B               	movf	??_ISR+2,w
  3546  0EA2  008A               	movwf	10
  3547  0EA3  086A               	movf	??_ISR+1,w
  3548  0EA4  0084               	movwf	4
  3549  0EA5  0E69               	swapf	??_ISR^0,w
  3550  0EA6  0083               	movwf	3
  3551  0EA7  0EFE               	swapf	126,f
  3552  0EA8  0E7E               	swapf	126,w
  3553  0EA9  0009               	retfie
  3554  0EAA                     __end_of_ISR:	
  3555                           
  3556                           	psect	intentry
  3557  0004                     __pintentry:	
  3558                           ;incstack = 0
  3559                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3560                           
  3561  0004                     interrupt_function:	
  3562  007E                     saved_w	set	btemp
  3563  0004  00FE               	movwf	btemp
  3564  0005  0E03               	swapf	3,w
  3565  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0008  00E9               	movwf	??_ISR
  3568  0009  0804               	movf	4,w
  3569  000A  00EA               	movwf	??_ISR+1
  3570  000B  080A               	movf	10,w
  3571  000C  00EB               	movwf	??_ISR+2
  3572  000D  087F               	movf	btemp+1,w
  3573  000E  00EC               	movwf	??_ISR+3
  3574  000F  120A  158A  2D5F   	ljmp	_ISR
  3575                           
  3576                           	psect	text16
  3577  13F8                     __ptext16:	
  3578 ;; *************** function i1_TIMER0_Set *****************
  3579 ;; Defined at:
  3580 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  contagens       1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  contagens       1    0[COMMON] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         1       0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_ISR
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function i1_TIMER0_Set
  3609  13F8                     i1_TIMER0_Set:	
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in i1_TIMER0_Set: [wreg]
  3613                           ;i1TIMER0_Set@contagens stored from wreg
  3614  13F8  00F0               	movwf	i1TIMER0_Set@contagens
  3615                           
  3616                           ;timers.c: 22: TMR0 = contagens;
  3617  13F9  0870               	movf	i1TIMER0_Set@contagens,w
  3618  13FA  1283               	bcf	3,5	;RP0=0, select bank0
  3619  13FB  1303               	bcf	3,6	;RP1=0, select bank0
  3620  13FC  0081               	movwf	1	;volatile
  3621  13FD  0008               	return
  3622  13FE                     __end_ofi1_TIMER0_Set:	
  3623                           
  3624                           	psect	text17
  3625  08E0                     __ptext17:	
  3626 ;; *************** function _send *****************
  3627 ;; Defined at:
  3628 ;;		line 102 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  index           1    4[BANK0 ] unsigned char 
  3633 ;;  velocidade      2    2[BANK0 ] unsigned int 
  3634 ;;  checksum        1    1[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;		None               void
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         0       4       0       0       0
  3646 ;;      Temps:          0       1       0       0       0
  3647 ;;      Totals:         0       5       0       0       0
  3648 ;;Total ram usage:        5 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		_USART_WriteChar
  3653 ;;		___wmul
  3654 ;; This function is called by:
  3655 ;;		_ISR
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _send
  3661  08E0                     _send:	
  3662                           
  3663                           ;main.c: 105: buffer[0] = '#';
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3667  08E0  3023               	movlw	35
  3668  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  3669  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  3670  08E3  00A0               	movwf	??_send
  3671  08E4  0820               	movf	??_send,w
  3672  08E5  1683               	bsf	3,5	;RP0=1, select bank3
  3673  08E6  1703               	bsf	3,6	;RP1=1, select bank3
  3674  08E7  0090               	movwf	_buffer^(0+384)
  3675                           
  3676                           ;main.c: 106: buffer[1] = '$';
  3677  08E8  3024               	movlw	36
  3678  08E9  1283               	bcf	3,5	;RP0=0, select bank0
  3679  08EA  1303               	bcf	3,6	;RP1=0, select bank0
  3680  08EB  00A0               	movwf	??_send
  3681  08EC  0820               	movf	??_send,w
  3682  08ED  1683               	bsf	3,5	;RP0=1, select bank3
  3683  08EE  1703               	bsf	3,6	;RP1=1, select bank3
  3684  08EF  0091               	movwf	(_buffer^(0+384)+1)
  3685                           
  3686                           ;main.c: 107: buffer[2] = ':';
  3687  08F0  303A               	movlw	58
  3688  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  3689  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  3690  08F3  00A0               	movwf	??_send
  3691  08F4  0820               	movf	??_send,w
  3692  08F5  1683               	bsf	3,5	;RP0=1, select bank3
  3693  08F6  1703               	bsf	3,6	;RP1=1, select bank3
  3694  08F7  0092               	movwf	(_buffer^(0+384)+2)
  3695                           
  3696                           ;main.c: 109: unsigned int velocidade = rpm * 40;
  3697  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  3698  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  3699  08FA  0842               	movf	(_rpm+1)^(0+128),w
  3700  08FB  01F9               	clrf	___wmul@multiplier+1
  3701  08FC  07F9               	addwf	___wmul@multiplier+1,f
  3702  08FD  0841               	movf	_rpm^(0+128),w
  3703  08FE  01F8               	clrf	___wmul@multiplier
  3704  08FF  07F8               	addwf	___wmul@multiplier,f
  3705  0900  3028               	movlw	40
  3706  0901  00FA               	movwf	___wmul@multiplicand
  3707  0902  3000               	movlw	0
  3708  0903  00FB               	movwf	___wmul@multiplicand+1
  3709  0904  160A  118A  2561  120A  158A  	fcall	___wmul
  3710  0909  0879               	movf	?___wmul+1,w
  3711  090A  1283               	bcf	3,5	;RP0=0, select bank0
  3712  090B  1303               	bcf	3,6	;RP1=0, select bank0
  3713  090C  01A3               	clrf	send@velocidade+1
  3714  090D  07A3               	addwf	send@velocidade+1,f
  3715  090E  0878               	movf	?___wmul,w
  3716  090F  01A2               	clrf	send@velocidade
  3717  0910  07A2               	addwf	send@velocidade,f
  3718                           
  3719                           ;main.c: 111: buffer[3] = (velocidade >> 8) & 0xFF;
  3720  0911  0823               	movf	send@velocidade+1,w
  3721  0912  00A0               	movwf	??_send
  3722  0913  0820               	movf	??_send,w
  3723  0914  1683               	bsf	3,5	;RP0=1, select bank3
  3724  0915  1703               	bsf	3,6	;RP1=1, select bank3
  3725  0916  0093               	movwf	(_buffer^(0+384)+3)
  3726                           
  3727                           ;main.c: 112: buffer[4] = velocidade & 0xFF;
  3728  0917  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0918  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0919  0822               	movf	send@velocidade,w
  3731  091A  00A0               	movwf	??_send
  3732  091B  0820               	movf	??_send,w
  3733  091C  1683               	bsf	3,5	;RP0=1, select bank3
  3734  091D  1703               	bsf	3,6	;RP1=1, select bank3
  3735  091E  0094               	movwf	(_buffer^(0+384)+4)
  3736                           
  3737                           ;main.c: 113: buffer[5] = 'V';
  3738  091F  3056               	movlw	86
  3739  0920  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0921  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0922  00A0               	movwf	??_send
  3742  0923  0820               	movf	??_send,w
  3743  0924  1683               	bsf	3,5	;RP0=1, select bank3
  3744  0925  1703               	bsf	3,6	;RP1=1, select bank3
  3745  0926  0095               	movwf	(_buffer^(0+384)+5)
  3746                           
  3747                           ;main.c: 116: buffer[6] = (setpointUI >> 8) & 0xFF;
  3748  0927  1683               	bsf	3,5	;RP0=1, select bank1
  3749  0928  1303               	bcf	3,6	;RP1=0, select bank1
  3750  0929  0844               	movf	(_setpointUI+1)^(0+128),w
  3751  092A  1283               	bcf	3,5	;RP0=0, select bank0
  3752  092B  1303               	bcf	3,6	;RP1=0, select bank0
  3753  092C  00A0               	movwf	??_send
  3754  092D  0820               	movf	??_send,w
  3755  092E  1683               	bsf	3,5	;RP0=1, select bank3
  3756  092F  1703               	bsf	3,6	;RP1=1, select bank3
  3757  0930  0096               	movwf	(_buffer^(0+384)+6)
  3758                           
  3759                           ;main.c: 117: buffer[7] = setpointUI & 0xFF;
  3760  0931  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0932  1303               	bcf	3,6	;RP1=0, select bank1
  3762  0933  0843               	movf	_setpointUI^(0+128),w
  3763  0934  1283               	bcf	3,5	;RP0=0, select bank0
  3764  0935  1303               	bcf	3,6	;RP1=0, select bank0
  3765  0936  00A0               	movwf	??_send
  3766  0937  0820               	movf	??_send,w
  3767  0938  1683               	bsf	3,5	;RP0=1, select bank3
  3768  0939  1703               	bsf	3,6	;RP1=1, select bank3
  3769  093A  0097               	movwf	(_buffer^(0+384)+7)
  3770                           
  3771                           ;main.c: 118: buffer[8] = 'S';
  3772  093B  3053               	movlw	83
  3773  093C  1283               	bcf	3,5	;RP0=0, select bank0
  3774  093D  1303               	bcf	3,6	;RP1=0, select bank0
  3775  093E  00A0               	movwf	??_send
  3776  093F  0820               	movf	??_send,w
  3777  0940  1683               	bsf	3,5	;RP0=1, select bank3
  3778  0941  1703               	bsf	3,6	;RP1=1, select bank3
  3779  0942  0098               	movwf	(_buffer^(0+384)+8)
  3780                           
  3781                           ;main.c: 121: buffer[9] = (deltaV >> 8) & 0xFF;
  3782  0943  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0944  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0945  086E               	movf	_deltaV+1,w
  3785  0946  00A0               	movwf	??_send
  3786  0947  0820               	movf	??_send,w
  3787  0948  1683               	bsf	3,5	;RP0=1, select bank3
  3788  0949  1703               	bsf	3,6	;RP1=1, select bank3
  3789  094A  0099               	movwf	(_buffer^(0+384)+9)
  3790                           
  3791                           ;main.c: 122: buffer[10] = deltaV & 0xFF;
  3792  094B  1283               	bcf	3,5	;RP0=0, select bank0
  3793  094C  1303               	bcf	3,6	;RP1=0, select bank0
  3794  094D  086D               	movf	_deltaV,w
  3795  094E  00A0               	movwf	??_send
  3796  094F  0820               	movf	??_send,w
  3797  0950  1683               	bsf	3,5	;RP0=1, select bank3
  3798  0951  1703               	bsf	3,6	;RP1=1, select bank3
  3799  0952  009A               	movwf	(_buffer^(0+384)+10)
  3800                           
  3801                           ;main.c: 123: buffer[11] = 'S';
  3802  0953  3053               	movlw	83
  3803  0954  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0955  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0956  00A0               	movwf	??_send
  3806  0957  0820               	movf	??_send,w
  3807  0958  1683               	bsf	3,5	;RP0=1, select bank3
  3808  0959  1703               	bsf	3,6	;RP1=1, select bank3
  3809  095A  009B               	movwf	(_buffer^(0+384)+11)
  3810                           
  3811                           ;main.c: 125: unsigned char checksum = 0x00;
  3812  095B  1283               	bcf	3,5	;RP0=0, select bank0
  3813  095C  1303               	bcf	3,6	;RP1=0, select bank0
  3814  095D  01A1               	clrf	send@checksum
  3815                           
  3816                           ;main.c: 126: for (unsigned char index = 0; index < 12; index++)
  3817  095E  01A4               	clrf	send@index
  3818  095F  300C               	movlw	12
  3819  0960  0224               	subwf	send@index,w
  3820  0961  1803               	btfsc	3,0
  3821  0962  297F               	goto	i1l2469
  3822  0963                     i1l2461:	
  3823                           
  3824                           ;main.c: 127: {
  3825                           ;main.c: 128: USART_WriteChar(buffer[index]);
  3826  0963  0824               	movf	send@index,w
  3827  0964  3E90               	addlw	_buffer& (0+255)
  3828  0965  0084               	movwf	4
  3829  0966  1783               	bsf	3,7	;select IRP bank3
  3830  0967  0800               	movf	0,w
  3831  0968  160A  118A  23FE  120A  158A  	fcall	_USART_WriteChar
  3832                           
  3833                           ;main.c: 129: checksum ^= buffer[index];
  3834  096D  1283               	bcf	3,5	;RP0=0, select bank0
  3835  096E  1303               	bcf	3,6	;RP1=0, select bank0
  3836  096F  0824               	movf	send@index,w
  3837  0970  3E90               	addlw	_buffer& (0+255)
  3838  0971  0084               	movwf	4
  3839  0972  1783               	bsf	3,7	;select IRP bank3
  3840  0973  0800               	movf	0,w
  3841  0974  00A0               	movwf	??_send
  3842  0975  0820               	movf	??_send,w
  3843  0976  06A1               	xorwf	send@checksum,f
  3844  0977  3001               	movlw	1
  3845  0978  00A0               	movwf	??_send
  3846  0979  0820               	movf	??_send,w
  3847  097A  07A4               	addwf	send@index,f
  3848  097B  300C               	movlw	12
  3849  097C  0224               	subwf	send@index,w
  3850  097D  1C03               	skipc
  3851  097E  2963               	goto	i1l2461
  3852  097F                     i1l2469:	
  3853                           
  3854                           ;main.c: 130: }
  3855                           ;main.c: 131: buffer[12] = checksum;
  3856  097F  0821               	movf	send@checksum,w
  3857  0980  00A0               	movwf	??_send
  3858  0981  0820               	movf	??_send,w
  3859  0982  1683               	bsf	3,5	;RP0=1, select bank3
  3860  0983  1703               	bsf	3,6	;RP1=1, select bank3
  3861  0984  009C               	movwf	(_buffer^(0+384)+12)
  3862                           
  3863                           ;main.c: 132: USART_WriteChar(buffer[12]);
  3864  0985  081C               	movf	(_buffer^(0+384)+12),w
  3865  0986  160A  118A  23FE   	fcall	_USART_WriteChar
  3866  0989  0008               	return
  3867  098A                     __end_of_send:	
  3868                           
  3869                           	psect	text18
  3870  1561                     __ptext18:	
  3871 ;; *************** function ___wmul *****************
  3872 ;; Defined at:
  3873 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  multiplier      2    8[COMMON] unsigned int 
  3876 ;;  multiplicand    2   10[COMMON] unsigned int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  product         2   12[COMMON] unsigned int 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2    8[COMMON] unsigned int 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3888 ;;      Params:         4       0       0       0       0
  3889 ;;      Locals:         2       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0
  3891 ;;      Totals:         6       0       0       0       0
  3892 ;;Total ram usage:        6 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_send
  3898 ;;		_ISR
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function ___wmul
  3904  1561                     ___wmul:	
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3908  1561  01FC               	clrf	___wmul@product
  3909  1562  01FD               	clrf	___wmul@product+1
  3910  1563                     i1l2279:	
  3911  1563  1C78               	btfss	___wmul@multiplier,0
  3912  1564  2D6B               	goto	i1l542
  3913  1565  087A               	movf	___wmul@multiplicand,w
  3914  1566  07FC               	addwf	___wmul@product,f
  3915  1567  1803               	skipnc
  3916  1568  0AFD               	incf	___wmul@product+1,f
  3917  1569  087B               	movf	___wmul@multiplicand+1,w
  3918  156A  07FD               	addwf	___wmul@product+1,f
  3919  156B                     i1l542:	
  3920  156B  3001               	movlw	1
  3921  156C                     u241_25:	
  3922  156C  1003               	clrc
  3923  156D  0DFA               	rlf	___wmul@multiplicand,f
  3924  156E  0DFB               	rlf	___wmul@multiplicand+1,f
  3925  156F  3EFF               	addlw	-1
  3926  1570  1D03               	skipz
  3927  1571  2D6C               	goto	u241_25
  3928  1572  3001               	movlw	1
  3929  1573                     u242_25:	
  3930  1573  1003               	clrc
  3931  1574  0CF9               	rrf	___wmul@multiplier+1,f
  3932  1575  0CF8               	rrf	___wmul@multiplier,f
  3933  1576  3EFF               	addlw	-1
  3934  1577  1D03               	skipz
  3935  1578  2D73               	goto	u242_25
  3936  1579  0879               	movf	___wmul@multiplier+1,w
  3937  157A  0478               	iorwf	___wmul@multiplier,w
  3938  157B  1D03               	skipz
  3939  157C  2D63               	goto	i1l2279
  3940  157D  087D               	movf	___wmul@product+1,w
  3941  157E  01F9               	clrf	?___wmul+1
  3942  157F  07F9               	addwf	?___wmul+1,f
  3943  1580  087C               	movf	___wmul@product,w
  3944  1581  01F8               	clrf	?___wmul
  3945  1582  07F8               	addwf	?___wmul,f
  3946  1583  0008               	return
  3947  1584                     __end_of___wmul:	
  3948                           
  3949                           	psect	text19
  3950  1602                     __ptext19:	
  3951 ;; *************** function ___lwdiv *****************
  3952 ;; Defined at:
  3953 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  divisor         2    0[COMMON] unsigned int 
  3956 ;;  dividend        2    2[COMMON] unsigned int 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  quotient        2    5[COMMON] unsigned int 
  3959 ;;  counter         1    7[COMMON] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2    0[COMMON] unsigned int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         4       0       0       0       0
  3970 ;;      Locals:         3       0       0       0       0
  3971 ;;      Temps:          1       0       0       0       0
  3972 ;;      Totals:         8       0       0       0       0
  3973 ;;Total ram usage:        8 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_ISR
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function ___lwdiv
  3984  1602                     ___lwdiv:	
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3988  1602  01F5               	clrf	___lwdiv@quotient
  3989  1603  01F6               	clrf	___lwdiv@quotient+1
  3990  1604  0871               	movf	___lwdiv@divisor+1,w
  3991  1605  0470               	iorwf	___lwdiv@divisor,w
  3992  1606  1903               	skipnz
  3993  1607  2E39               	goto	i1l2791
  3994  1608  01F7               	clrf	___lwdiv@counter
  3995  1609  0AF7               	incf	___lwdiv@counter,f
  3996  160A                     i1l2779:	
  3997  160A  1BF1               	btfsc	___lwdiv@divisor+1,7
  3998  160B  2E18               	goto	i1l2781
  3999  160C  3001               	movlw	1
  4000  160D                     u311_25:	
  4001  160D  1003               	clrc
  4002  160E  0DF0               	rlf	___lwdiv@divisor,f
  4003  160F  0DF1               	rlf	___lwdiv@divisor+1,f
  4004  1610  3EFF               	addlw	-1
  4005  1611  1D03               	skipz
  4006  1612  2E0D               	goto	u311_25
  4007  1613  3001               	movlw	1
  4008  1614  00F4               	movwf	??___lwdiv
  4009  1615  0874               	movf	??___lwdiv,w
  4010  1616  07F7               	addwf	___lwdiv@counter,f
  4011  1617  2E0A               	goto	i1l2779
  4012  1618                     i1l2781:	
  4013  1618  3001               	movlw	1
  4014  1619                     u313_25:	
  4015  1619  1003               	clrc
  4016  161A  0DF5               	rlf	___lwdiv@quotient,f
  4017  161B  0DF6               	rlf	___lwdiv@quotient+1,f
  4018  161C  3EFF               	addlw	-1
  4019  161D  1D03               	skipz
  4020  161E  2E19               	goto	u313_25
  4021  161F  0871               	movf	___lwdiv@divisor+1,w
  4022  1620  0273               	subwf	___lwdiv@dividend+1,w
  4023  1621  1D03               	skipz
  4024  1622  2E25               	goto	u314_25
  4025  1623  0870               	movf	___lwdiv@divisor,w
  4026  1624  0272               	subwf	___lwdiv@dividend,w
  4027  1625                     u314_25:	
  4028  1625  1C03               	skipc
  4029  1626  2E2E               	goto	i1l2787
  4030  1627  0870               	movf	___lwdiv@divisor,w
  4031  1628  02F2               	subwf	___lwdiv@dividend,f
  4032  1629  0871               	movf	___lwdiv@divisor+1,w
  4033  162A  1C03               	skipc
  4034  162B  03F3               	decf	___lwdiv@dividend+1,f
  4035  162C  02F3               	subwf	___lwdiv@dividend+1,f
  4036  162D  1475               	bsf	___lwdiv@quotient,0
  4037  162E                     i1l2787:	
  4038  162E  3001               	movlw	1
  4039  162F                     u315_25:	
  4040  162F  1003               	clrc
  4041  1630  0CF1               	rrf	___lwdiv@divisor+1,f
  4042  1631  0CF0               	rrf	___lwdiv@divisor,f
  4043  1632  3EFF               	addlw	-1
  4044  1633  1D03               	skipz
  4045  1634  2E2F               	goto	u315_25
  4046  1635  3001               	movlw	1
  4047  1636  02F7               	subwf	___lwdiv@counter,f
  4048  1637  1D03               	btfss	3,2
  4049  1638  2E18               	goto	i1l2781
  4050  1639                     i1l2791:	
  4051  1639  0876               	movf	___lwdiv@quotient+1,w
  4052  163A  01F1               	clrf	?___lwdiv+1
  4053  163B  07F1               	addwf	?___lwdiv+1,f
  4054  163C  0875               	movf	___lwdiv@quotient,w
  4055  163D  01F0               	clrf	?___lwdiv
  4056  163E  07F0               	addwf	?___lwdiv,f
  4057  163F  0008               	return
  4058  1640                     __end_of___lwdiv:	
  4059                           
  4060                           	psect	text20
  4061  1492                     __ptext20:	
  4062 ;; *************** function _USART_ReceiveChar *****************
  4063 ;; Defined at:
  4064 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  byte            1    4[COMMON] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      unsigned char 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         0       0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0
  4080 ;;      Temps:          1       0       0       0       0
  4081 ;;      Totals:         2       0       0       0       0
  4082 ;;Total ram usage:        2 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    2
  4085 ;; This function calls:
  4086 ;;		_USART_WriteString
  4087 ;; This function is called by:
  4088 ;;		_ISR
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _USART_ReceiveChar
  4094  1492                     _USART_ReceiveChar:	
  4095                           
  4096                           ;usart.c: 65: unsigned char byte;
  4097                           ;usart.c: 67: if (!OERR)
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4101  1492  1283               	bcf	3,5	;RP0=0, select bank0
  4102  1493  1303               	bcf	3,6	;RP1=0, select bank0
  4103  1494  1898               	btfsc	24,1	;volatile
  4104  1495  2C9B               	goto	i1l2621
  4105                           
  4106                           ;usart.c: 68: {
  4107                           ;usart.c: 69: byte = RCREG;
  4108  1496  081A               	movf	26,w	;volatile
  4109  1497  00F3               	movwf	??_USART_ReceiveChar
  4110  1498  0873               	movf	??_USART_ReceiveChar,w
  4111  1499  00F4               	movwf	USART_ReceiveChar@byte
  4112  149A  2CA7               	goto	i1l2629
  4113  149B                     i1l2621:	
  4114                           ;usart.c: 71: }
  4115                           
  4116                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4117                           
  4118                           
  4119                           ;usart.c: 72: else
  4120                           ;usart.c: 73: {
  4121                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4122  149B  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4123  149C  160A  118A  24C5   	fcall	_USART_WriteString
  4124                           
  4125                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4126  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4127  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  4128  14A1  1218               	bcf	24,4	;volatile
  4129                           
  4130                           ;usart.c: 77: byte = RCREG;
  4131  14A2  081A               	movf	26,w	;volatile
  4132  14A3  00F3               	movwf	??_USART_ReceiveChar
  4133  14A4  0873               	movf	??_USART_ReceiveChar,w
  4134  14A5  00F4               	movwf	USART_ReceiveChar@byte
  4135                           
  4136                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4137  14A6  1618               	bsf	24,4	;volatile
  4138  14A7                     i1l2629:	
  4139                           
  4140                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4141  14A7  128C               	bcf	12,5	;volatile
  4142                           
  4143                           ;usart.c: 80: }
  4144                           ;usart.c: 82: return(byte);
  4145  14A8  0874               	movf	USART_ReceiveChar@byte,w
  4146  14A9  0008               	return
  4147  14AA                     __end_of_USART_ReceiveChar:	
  4148                           
  4149                           	psect	text21
  4150  14C5                     __ptext21:	
  4151 ;; *************** function _USART_WriteString *****************
  4152 ;; Defined at:
  4153 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  str             1    wreg     PTR const unsigned char 
  4156 ;;		 -> STR_4(40), STR_1(14), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  str             1    2[COMMON] PTR const unsigned char 
  4159 ;;		 -> STR_4(40), STR_1(14), 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         1       0       0       0       0
  4171 ;;      Temps:          1       0       0       0       0
  4172 ;;      Totals:         2       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    1
  4176 ;; This function calls:
  4177 ;;		_USART_WriteChar
  4178 ;; This function is called by:
  4179 ;;		_ISR
  4180 ;;		_USART_ReceiveChar
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _USART_WriteString
  4186  14C5                     _USART_WriteString:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4190                           ;USART_WriteString@str stored from wreg
  4191  14C5  00F2               	movwf	USART_WriteString@str
  4192  14C6                     i1l2259:	
  4193                           ;usart.c: 54: while(*str != '\0')
  4194                           
  4195  14C6  0872               	movf	USART_WriteString@str,w
  4196  14C7  0084               	movwf	4
  4197  14C8  160A  118A  200A  160A  118A  	fcall	stringdir
  4198  14CD  3800               	iorlw	0
  4199  14CE  1903               	btfsc	3,2
  4200  14CF  0008               	return
  4201                           
  4202                           ;usart.c: 55: {
  4203                           ;usart.c: 56: USART_WriteChar(*str);
  4204  14D0  0872               	movf	USART_WriteString@str,w
  4205  14D1  0084               	movwf	4
  4206  14D2  160A  118A  200A  160A  118A  	fcall	stringdir
  4207  14D7  160A  118A  23FE  160A  118A  	fcall	_USART_WriteChar
  4208                           
  4209                           ;usart.c: 57: str++;
  4210  14DC  3001               	movlw	1
  4211  14DD  00F1               	movwf	??_USART_WriteString
  4212  14DE  0871               	movf	??_USART_WriteString,w
  4213  14DF  07F2               	addwf	USART_WriteString@str,f
  4214  14E0  2CC6               	goto	i1l2259
  4215  14E1                     __end_of_USART_WriteString:	
  4216                           
  4217                           	psect	text22
  4218  13FE                     __ptext22:	
  4219 ;; *************** function _USART_WriteChar *****************
  4220 ;; Defined at:
  4221 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  byte            1    wreg     unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  byte            1    0[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		wreg
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       0       0       0       0
  4236 ;;      Locals:         1       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0
  4238 ;;      Totals:         1       0       0       0       0
  4239 ;;Total ram usage:        1 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_send
  4245 ;;		_USART_WriteString
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _USART_WriteChar
  4251  13FE                     _USART_WriteChar:	
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _USART_WriteChar: [wreg]
  4255                           ;USART_WriteChar@byte stored from wreg
  4256  13FE  00F0               	movwf	USART_WriteChar@byte
  4257  13FF                     i1l222:	
  4258                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4259                           
  4260  13FF  1283               	bcf	3,5	;RP0=0, select bank0
  4261  1400  1303               	bcf	3,6	;RP1=0, select bank0
  4262  1401  1E0C               	btfss	12,4	;volatile
  4263  1402  2BFF               	goto	i1l222
  4264                           
  4265                           ;usart.c: 47: TXREG = byte;
  4266  1403  0870               	movf	USART_WriteChar@byte,w
  4267  1404  0099               	movwf	25	;volatile
  4268  1405  0008               	return
  4269  1406                     __end_of_USART_WriteChar:	
  4270                           
  4271                           	psect	text23
  4272  0039                     __ptext23:	
  4273 ;; *************** function _Fuzzy *****************
  4274 ;; Defined at:
  4275 ;;		line 157 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  a               2   59[BANK0 ] int 
  4280 ;;  a               2   57[BANK0 ] int 
  4281 ;;  a               2   55[BANK0 ] int 
  4282 ;;  deltaRpm        3   70[BANK0 ] float 
  4283 ;;  aumenta         3   67[BANK0 ] float 
  4284 ;;  reduz           3   64[BANK0 ] float 
  4285 ;;  mantem          3   61[BANK0 ] float 
  4286 ;;  tip             3   52[BANK0 ] float 
  4287 ;;  freio           2   50[BANK0 ] unsigned int 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;		None               void
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4297 ;;      Params:         0       0       0       0       0
  4298 ;;      Locals:         0      23       0       0       0
  4299 ;;      Temps:          0       0       0       0       0
  4300 ;;      Totals:         0      23       0       0       0
  4301 ;;Total ram usage:       23 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    3
  4304 ;; This function calls:
  4305 ;;		___ftadd
  4306 ;;		___ftdiv
  4307 ;;		___ftge
  4308 ;;		___ftmul
  4309 ;;		___ftneg
  4310 ;;		___fttol
  4311 ;;		___lwtoft
  4312 ;;		_max_val
  4313 ;;		_trapmf
  4314 ;;		_trimf
  4315 ;;		i1_PWM_DutyCycle2
  4316 ;; This function is called by:
  4317 ;;		_ISR
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _Fuzzy
  4323  0039                     _Fuzzy:	
  4324                           
  4325                           ;main.c: 168: setpoint = (float)setpointUI;
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4329  0039  1683               	bsf	3,5	;RP0=1, select bank1
  4330  003A  1303               	bcf	3,6	;RP1=0, select bank1
  4331  003B  0844               	movf	(_setpointUI+1)^(0+128),w
  4332  003C  01F9               	clrf	___lwtoft@c+1
  4333  003D  07F9               	addwf	___lwtoft@c+1,f
  4334  003E  0843               	movf	_setpointUI^(0+128),w
  4335  003F  01F8               	clrf	___lwtoft@c
  4336  0040  07F8               	addwf	___lwtoft@c,f
  4337  0041  160A  118A  2450  120A  118A  	fcall	___lwtoft
  4338  0046  0878               	movf	?___lwtoft,w
  4339  0047  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0048  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0049  00E1               	movwf	_setpoint^(0+128)
  4342  004A  0879               	movf	?___lwtoft+1,w
  4343  004B  00E2               	movwf	(_setpoint+1)^(0+128)
  4344  004C  087A               	movf	?___lwtoft+2,w
  4345  004D  00E3               	movwf	(_setpoint+2)^(0+128)
  4346                           
  4347                           ;main.c: 169: float deltaRpm = 0;
  4348  004E  3000               	movlw	0
  4349  004F  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0050  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0051  00E6               	movwf	Fuzzy@deltaRpm
  4352  0052  3000               	movlw	0
  4353  0053  00E7               	movwf	Fuzzy@deltaRpm+1
  4354  0054  3000               	movlw	0
  4355  0055  00E8               	movwf	Fuzzy@deltaRpm+2
  4356                           
  4357                           ;main.c: 172: unsigned int freio = 0;
  4358  0056  01D2               	clrf	Fuzzy@freio
  4359  0057  01D3               	clrf	Fuzzy@freio+1
  4360                           
  4361                           ;main.c: 178: float mantem = 0;
  4362  0058  3000               	movlw	0
  4363  0059  00DD               	movwf	Fuzzy@mantem
  4364  005A  3000               	movlw	0
  4365  005B  00DE               	movwf	Fuzzy@mantem+1
  4366  005C  3000               	movlw	0
  4367  005D  00DF               	movwf	Fuzzy@mantem+2
  4368                           
  4369                           ;main.c: 179: float reduz = 0;
  4370  005E  3000               	movlw	0
  4371  005F  00E0               	movwf	Fuzzy@reduz
  4372  0060  3000               	movlw	0
  4373  0061  00E1               	movwf	Fuzzy@reduz+1
  4374  0062  3000               	movlw	0
  4375  0063  00E2               	movwf	Fuzzy@reduz+2
  4376                           
  4377                           ;main.c: 180: float aumenta = 0;
  4378  0064  3000               	movlw	0
  4379  0065  00E3               	movwf	Fuzzy@aumenta
  4380  0066  3000               	movlw	0
  4381  0067  00E4               	movwf	Fuzzy@aumenta+1
  4382  0068  3000               	movlw	0
  4383  0069  00E5               	movwf	Fuzzy@aumenta+2
  4384                           
  4385                           ;main.c: 181: float tip;
  4386                           ;main.c: 182: fitemp = 0;
  4387  006A  3000               	movlw	0
  4388  006B  1683               	bsf	3,5	;RP0=1, select bank1
  4389  006C  1303               	bcf	3,6	;RP1=0, select bank1
  4390  006D  00A3               	movwf	_fitemp^(0+128)
  4391  006E  3000               	movlw	0
  4392  006F  00A4               	movwf	(_fitemp+1)^(0+128)
  4393  0070  3000               	movlw	0
  4394  0071  00A5               	movwf	(_fitemp+2)^(0+128)
  4395                           
  4396                           ;main.c: 185: deltaRpm = (setpoint - tf);
  4397  0072  0861               	movf	_setpoint^(0+128),w
  4398  0073  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0074  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0075  00A3               	movwf	___ftadd@f1
  4401  0076  1683               	bsf	3,5	;RP0=1, select bank1
  4402  0077  1303               	bcf	3,6	;RP1=0, select bank1
  4403  0078  0862               	movf	(_setpoint+1)^(0+128),w
  4404  0079  1283               	bcf	3,5	;RP0=0, select bank0
  4405  007A  1303               	bcf	3,6	;RP1=0, select bank0
  4406  007B  00A4               	movwf	___ftadd@f1+1
  4407  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4408  007D  1303               	bcf	3,6	;RP1=0, select bank1
  4409  007E  0863               	movf	(_setpoint+2)^(0+128),w
  4410  007F  1283               	bcf	3,5	;RP0=0, select bank0
  4411  0080  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0081  00A5               	movwf	___ftadd@f1+2
  4413  0082  1683               	bsf	3,5	;RP0=1, select bank1
  4414  0083  1303               	bcf	3,6	;RP1=0, select bank1
  4415  0084  0864               	movf	_tf^(0+128),w
  4416  0085  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0086  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0087  00A0               	movwf	___ftneg@f1
  4419  0088  1683               	bsf	3,5	;RP0=1, select bank1
  4420  0089  1303               	bcf	3,6	;RP1=0, select bank1
  4421  008A  0865               	movf	(_tf+1)^(0+128),w
  4422  008B  1283               	bcf	3,5	;RP0=0, select bank0
  4423  008C  1303               	bcf	3,6	;RP1=0, select bank0
  4424  008D  00A1               	movwf	___ftneg@f1+1
  4425  008E  1683               	bsf	3,5	;RP0=1, select bank1
  4426  008F  1303               	bcf	3,6	;RP1=0, select bank1
  4427  0090  0866               	movf	(_tf+2)^(0+128),w
  4428  0091  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0092  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0093  00A2               	movwf	___ftneg@f1+2
  4431  0094  160A  118A  240E  120A  118A  	fcall	___ftneg
  4432  0099  1283               	bcf	3,5	;RP0=0, select bank0
  4433  009A  1303               	bcf	3,6	;RP1=0, select bank0
  4434  009B  0820               	movf	?___ftneg,w
  4435  009C  00A6               	movwf	___ftadd@f2
  4436  009D  0821               	movf	?___ftneg+1,w
  4437  009E  00A7               	movwf	___ftadd@f2+1
  4438  009F  0822               	movf	?___ftneg+2,w
  4439  00A0  00A8               	movwf	___ftadd@f2+2
  4440  00A1  120A  158A  2332  120A  118A  	fcall	___ftadd
  4441  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  4442  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  4443  00A8  0823               	movf	?___ftadd,w
  4444  00A9  00E6               	movwf	Fuzzy@deltaRpm
  4445  00AA  0824               	movf	?___ftadd+1,w
  4446  00AB  00E7               	movwf	Fuzzy@deltaRpm+1
  4447  00AC  0825               	movf	?___ftadd+2,w
  4448  00AD  00E8               	movwf	Fuzzy@deltaRpm+2
  4449                           
  4450                           ;main.c: 186: deltaRpm = (deltaRpm/100);
  4451  00AE  3000               	movlw	0
  4452  00AF  00B0               	movwf	___ftdiv@f2
  4453  00B0  30C8               	movlw	200
  4454  00B1  00B1               	movwf	___ftdiv@f2+1
  4455  00B2  3042               	movlw	66
  4456  00B3  00B2               	movwf	___ftdiv@f2+2
  4457  00B4  0866               	movf	Fuzzy@deltaRpm,w
  4458  00B5  00B3               	movwf	___ftdiv@f1
  4459  00B6  0867               	movf	Fuzzy@deltaRpm+1,w
  4460  00B7  00B4               	movwf	___ftdiv@f1+1
  4461  00B8  0868               	movf	Fuzzy@deltaRpm+2,w
  4462  00B9  00B5               	movwf	___ftdiv@f1+2
  4463  00BA  120A  118A  2747  120A  118A  	fcall	___ftdiv
  4464  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  4465  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  4466  00C1  0830               	movf	?___ftdiv,w
  4467  00C2  00E6               	movwf	Fuzzy@deltaRpm
  4468  00C3  0831               	movf	?___ftdiv+1,w
  4469  00C4  00E7               	movwf	Fuzzy@deltaRpm+1
  4470  00C5  0832               	movf	?___ftdiv+2,w
  4471  00C6  00E8               	movwf	Fuzzy@deltaRpm+2
  4472                           
  4473                           ;main.c: 188: deltaV = deltaRpm;
  4474  00C7  0866               	movf	Fuzzy@deltaRpm,w
  4475  00C8  00B0               	movwf	___fttol@f1
  4476  00C9  0867               	movf	Fuzzy@deltaRpm+1,w
  4477  00CA  00B1               	movwf	___fttol@f1+1
  4478  00CB  0868               	movf	Fuzzy@deltaRpm+2,w
  4479  00CC  00B2               	movwf	___fttol@f1+2
  4480  00CD  160A  118A  2772  120A  118A  	fcall	___fttol
  4481  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  4482  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  4483  00D4  0831               	movf	?___fttol+1,w
  4484  00D5  01EE               	clrf	_deltaV+1
  4485  00D6  07EE               	addwf	_deltaV+1,f
  4486  00D7  0830               	movf	?___fttol,w
  4487  00D8  01ED               	clrf	_deltaV
  4488  00D9  07ED               	addwf	_deltaV,f
  4489                           
  4490                           ;main.c: 190: if (deltaRpm <0)
  4491  00DA  0866               	movf	Fuzzy@deltaRpm,w
  4492  00DB  00B0               	movwf	___ftge@ff1
  4493  00DC  0867               	movf	Fuzzy@deltaRpm+1,w
  4494  00DD  00B1               	movwf	___ftge@ff1+1
  4495  00DE  0868               	movf	Fuzzy@deltaRpm+2,w
  4496  00DF  00B2               	movwf	___ftge@ff1+2
  4497  00E0  3000               	movlw	0
  4498  00E1  00B3               	movwf	___ftge@ff2
  4499  00E2  3000               	movlw	0
  4500  00E3  00B4               	movwf	___ftge@ff2+1
  4501  00E4  3000               	movlw	0
  4502  00E5  00B5               	movwf	___ftge@ff2+2
  4503  00E6  160A  118A  2640  120A  118A  	fcall	___ftge
  4504  00EB  1803               	btfsc	3,0
  4505  00EC  2911               	goto	i1l2503
  4506                           
  4507                           ;main.c: 191: {
  4508                           ;main.c: 192: if(PORTBbits.RB1 == 0)
  4509  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  4510  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  4511  00EF  1886               	btfsc	6,1	;volatile
  4512  00F0  28F3               	goto	i1l147
  4513                           
  4514                           ;main.c: 193: {
  4515                           ;main.c: 194: PORTBbits.RB1 = 1;
  4516  00F1  1486               	bsf	6,1	;volatile
  4517                           
  4518                           ;main.c: 195: }else{
  4519  00F2  28F4               	goto	i1l2499
  4520  00F3                     i1l147:	
  4521                           
  4522                           ;main.c: 196: PORTBbits.RB1 = 0;
  4523  00F3  1086               	bcf	6,1	;volatile
  4524  00F4                     i1l2499:	
  4525                           
  4526                           ;main.c: 197: }
  4527                           ;main.c: 199: deltaRpm = deltaRpm*-1;
  4528  00F4  3000               	movlw	0
  4529  00F5  00F8               	movwf	___ftmul@f1
  4530  00F6  3080               	movlw	128
  4531  00F7  00F9               	movwf	___ftmul@f1+1
  4532  00F8  30BF               	movlw	191
  4533  00F9  00FA               	movwf	___ftmul@f1+2
  4534  00FA  0866               	movf	Fuzzy@deltaRpm,w
  4535  00FB  00FB               	movwf	___ftmul@f2
  4536  00FC  0867               	movf	Fuzzy@deltaRpm+1,w
  4537  00FD  00FC               	movwf	___ftmul@f2+1
  4538  00FE  0868               	movf	Fuzzy@deltaRpm+2,w
  4539  00FF  00FD               	movwf	___ftmul@f2+2
  4540  0100  120A  158A  218A  120A  118A  	fcall	___ftmul
  4541  0105  0878               	movf	?___ftmul,w
  4542  0106  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0107  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0108  00E6               	movwf	Fuzzy@deltaRpm
  4545  0109  0879               	movf	?___ftmul+1,w
  4546  010A  00E7               	movwf	Fuzzy@deltaRpm+1
  4547  010B  087A               	movf	?___ftmul+2,w
  4548  010C  00E8               	movwf	Fuzzy@deltaRpm+2
  4549                           
  4550                           ;main.c: 200: freio = 1;
  4551  010D  3001               	movlw	1
  4552  010E  00D2               	movwf	Fuzzy@freio
  4553  010F  3000               	movlw	0
  4554  0110  00D3               	movwf	Fuzzy@freio+1
  4555  0111                     i1l2503:	
  4556                           
  4557                           ;main.c: 201: }
  4558                           ;main.c: 203: if (deltaRpm >90) deltaRpm = 90;
  4559  0111  3000               	movlw	0
  4560  0112  1283               	bcf	3,5	;RP0=0, select bank0
  4561  0113  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0114  00B0               	movwf	___ftge@ff1
  4563  0115  30B4               	movlw	180
  4564  0116  00B1               	movwf	___ftge@ff1+1
  4565  0117  3042               	movlw	66
  4566  0118  00B2               	movwf	___ftge@ff1+2
  4567  0119  0866               	movf	Fuzzy@deltaRpm,w
  4568  011A  00B3               	movwf	___ftge@ff2
  4569  011B  0867               	movf	Fuzzy@deltaRpm+1,w
  4570  011C  00B4               	movwf	___ftge@ff2+1
  4571  011D  0868               	movf	Fuzzy@deltaRpm+2,w
  4572  011E  00B5               	movwf	___ftge@ff2+2
  4573  011F  160A  118A  2640  120A  118A  	fcall	___ftge
  4574  0124  1803               	btfsc	3,0
  4575  0125  292E               	goto	i1l2507
  4576  0126  3000               	movlw	0
  4577  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4579  0129  00E6               	movwf	Fuzzy@deltaRpm
  4580  012A  30B4               	movlw	180
  4581  012B  00E7               	movwf	Fuzzy@deltaRpm+1
  4582  012C  3042               	movlw	66
  4583  012D  00E8               	movwf	Fuzzy@deltaRpm+2
  4584  012E                     i1l2507:	
  4585                           
  4586                           ;main.c: 206: if (deltaRpm < 25)
  4587  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4588  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0130  0866               	movf	Fuzzy@deltaRpm,w
  4590  0131  00B0               	movwf	___ftge@ff1
  4591  0132  0867               	movf	Fuzzy@deltaRpm+1,w
  4592  0133  00B1               	movwf	___ftge@ff1+1
  4593  0134  0868               	movf	Fuzzy@deltaRpm+2,w
  4594  0135  00B2               	movwf	___ftge@ff1+2
  4595  0136  3000               	movlw	0
  4596  0137  00B3               	movwf	___ftge@ff2
  4597  0138  30C8               	movlw	200
  4598  0139  00B4               	movwf	___ftge@ff2+1
  4599  013A  3041               	movlw	65
  4600  013B  00B5               	movwf	___ftge@ff2+2
  4601  013C  160A  118A  2640  120A  118A  	fcall	___ftge
  4602  0141  1803               	btfsc	3,0
  4603  0142  2AA3               	goto	i1l2531
  4604                           
  4605                           ;main.c: 207: {
  4606                           ;main.c: 211: fitemp = trapmf(deltaRpm, 0,0,13,32);
  4607  0143  1283               	bcf	3,5	;RP0=0, select bank0
  4608  0144  1303               	bcf	3,6	;RP1=0, select bank0
  4609  0145  0866               	movf	Fuzzy@deltaRpm,w
  4610  0146  00C0               	movwf	trapmf@x
  4611  0147  0867               	movf	Fuzzy@deltaRpm+1,w
  4612  0148  00C1               	movwf	trapmf@x+1
  4613  0149  0868               	movf	Fuzzy@deltaRpm+2,w
  4614  014A  00C2               	movwf	trapmf@x+2
  4615  014B  3000               	movlw	0
  4616  014C  00C3               	movwf	trapmf@a
  4617  014D  3000               	movlw	0
  4618  014E  00C4               	movwf	trapmf@a+1
  4619  014F  3000               	movlw	0
  4620  0150  00C5               	movwf	trapmf@a+2
  4621  0151  3000               	movlw	0
  4622  0152  00C6               	movwf	trapmf@b
  4623  0153  3000               	movlw	0
  4624  0154  00C7               	movwf	trapmf@b+1
  4625  0155  3000               	movlw	0
  4626  0156  00C8               	movwf	trapmf@b+2
  4627  0157  3000               	movlw	0
  4628  0158  00C9               	movwf	trapmf@c
  4629  0159  3050               	movlw	80
  4630  015A  00CA               	movwf	trapmf@c+1
  4631  015B  3041               	movlw	65
  4632  015C  00CB               	movwf	trapmf@c+2
  4633  015D  3000               	movlw	0
  4634  015E  00CC               	movwf	trapmf@d
  4635  015F  3000               	movlw	0
  4636  0160  00CD               	movwf	trapmf@d+1
  4637  0161  3042               	movlw	66
  4638  0162  00CE               	movwf	trapmf@d+2
  4639  0163  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4640  0168  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0169  1303               	bcf	3,6	;RP1=0, select bank0
  4642  016A  0840               	movf	?_trapmf,w
  4643  016B  1683               	bsf	3,5	;RP0=1, select bank1
  4644  016C  1303               	bcf	3,6	;RP1=0, select bank1
  4645  016D  00A3               	movwf	_fitemp^(0+128)
  4646  016E  1283               	bcf	3,5	;RP0=0, select bank0
  4647  016F  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0170  0841               	movf	?_trapmf+1,w
  4649  0171  1683               	bsf	3,5	;RP0=1, select bank1
  4650  0172  1303               	bcf	3,6	;RP1=0, select bank1
  4651  0173  00A4               	movwf	(_fitemp+1)^(0+128)
  4652  0174  1283               	bcf	3,5	;RP0=0, select bank0
  4653  0175  1303               	bcf	3,6	;RP1=0, select bank0
  4654  0176  0842               	movf	?_trapmf+2,w
  4655  0177  1683               	bsf	3,5	;RP0=1, select bank1
  4656  0178  1303               	bcf	3,6	;RP1=0, select bank1
  4657  0179  00A5               	movwf	(_fitemp+2)^(0+128)
  4658                           
  4659                           ;main.c: 214: fop_rule1 = max_val(fitemp,0.1);
  4660  017A  0823               	movf	_fitemp^(0+128),w
  4661  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4662  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4663  017D  00BC               	movwf	max_val@a
  4664  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4665  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4666  0180  0824               	movf	(_fitemp+1)^(0+128),w
  4667  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0183  00BD               	movwf	max_val@a+1
  4670  0184  1683               	bsf	3,5	;RP0=1, select bank1
  4671  0185  1303               	bcf	3,6	;RP1=0, select bank1
  4672  0186  0825               	movf	(_fitemp+2)^(0+128),w
  4673  0187  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0188  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0189  00BE               	movwf	max_val@a+2
  4676  018A  30CD               	movlw	205
  4677  018B  00BF               	movwf	max_val@b
  4678  018C  30CC               	movlw	204
  4679  018D  00C0               	movwf	max_val@b+1
  4680  018E  303D               	movlw	61
  4681  018F  00C1               	movwf	max_val@b+2
  4682  0190  160A  118A  24E1  120A  118A  	fcall	_max_val
  4683  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4684  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4685  0197  083C               	movf	?_max_val,w
  4686  0198  1683               	bsf	3,5	;RP0=1, select bank1
  4687  0199  1303               	bcf	3,6	;RP1=0, select bank1
  4688  019A  00A6               	movwf	_fop_rule1^(0+128)
  4689  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4690  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4691  019D  083D               	movf	?_max_val+1,w
  4692  019E  1683               	bsf	3,5	;RP0=1, select bank1
  4693  019F  1303               	bcf	3,6	;RP1=0, select bank1
  4694  01A0  00A7               	movwf	(_fop_rule1+1)^(0+128)
  4695  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  4696  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  4697  01A3  083E               	movf	?_max_val+2,w
  4698  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4699  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4700  01A6  00A8               	movwf	(_fop_rule1+2)^(0+128)
  4701                           
  4702                           ;main.c: 217: x=0;
  4703  01A7  3000               	movlw	0
  4704  01A8  00B5               	movwf	_x^(0+128)
  4705  01A9  3000               	movlw	0
  4706  01AA  00B6               	movwf	(_x+1)^(0+128)
  4707  01AB  3000               	movlw	0
  4708  01AC  00B7               	movwf	(_x+2)^(0+128)
  4709                           
  4710                           ;main.c: 218: y=0;
  4711  01AD  3000               	movlw	0
  4712  01AE  00B8               	movwf	_y^(0+128)
  4713  01AF  3000               	movlw	0
  4714  01B0  00B9               	movwf	(_y+1)^(0+128)
  4715  01B1  3000               	movlw	0
  4716  01B2  00BA               	movwf	(_y+2)^(0+128)
  4717                           
  4718                           ;main.c: 219: for (int a=0; a<=90; a++)
  4719  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4720  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4721  01B5  01D7               	clrf	Fuzzy@a
  4722  01B6  01D8               	clrf	Fuzzy@a+1
  4723  01B7  0858               	movf	Fuzzy@a+1,w
  4724  01B8  3A80               	xorlw	128
  4725  01B9  00FF               	movwf	127
  4726  01BA  3080               	movlw	128
  4727  01BB  027F               	subwf	127,w
  4728  01BC  1D03               	skipz
  4729  01BD  29C0               	goto	u285_25
  4730  01BE  305B               	movlw	91
  4731  01BF  0257               	subwf	Fuzzy@a,w
  4732  01C0                     u285_25:	
  4733  01C0  1803               	btfsc	3,0
  4734  01C1  2AA3               	goto	i1l2531
  4735  01C2                     i1l2521:	
  4736                           
  4737                           ;main.c: 220: {
  4738                           ;main.c: 221: y = trapmf(x,0,0,13,32);
  4739  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  4740  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  4741  01C4  0835               	movf	_x^(0+128),w
  4742  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  4743  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  4744  01C7  00C0               	movwf	trapmf@x
  4745  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  4746  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  4747  01CA  0836               	movf	(_x+1)^(0+128),w
  4748  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  4749  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  4750  01CD  00C1               	movwf	trapmf@x+1
  4751  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  4752  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  4753  01D0  0837               	movf	(_x+2)^(0+128),w
  4754  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4755  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4756  01D3  00C2               	movwf	trapmf@x+2
  4757  01D4  3000               	movlw	0
  4758  01D5  00C3               	movwf	trapmf@a
  4759  01D6  3000               	movlw	0
  4760  01D7  00C4               	movwf	trapmf@a+1
  4761  01D8  3000               	movlw	0
  4762  01D9  00C5               	movwf	trapmf@a+2
  4763  01DA  3000               	movlw	0
  4764  01DB  00C6               	movwf	trapmf@b
  4765  01DC  3000               	movlw	0
  4766  01DD  00C7               	movwf	trapmf@b+1
  4767  01DE  3000               	movlw	0
  4768  01DF  00C8               	movwf	trapmf@b+2
  4769  01E0  3000               	movlw	0
  4770  01E1  00C9               	movwf	trapmf@c
  4771  01E2  3050               	movlw	80
  4772  01E3  00CA               	movwf	trapmf@c+1
  4773  01E4  3041               	movlw	65
  4774  01E5  00CB               	movwf	trapmf@c+2
  4775  01E6  3000               	movlw	0
  4776  01E7  00CC               	movwf	trapmf@d
  4777  01E8  3000               	movlw	0
  4778  01E9  00CD               	movwf	trapmf@d+1
  4779  01EA  3042               	movlw	66
  4780  01EB  00CE               	movwf	trapmf@d+2
  4781  01EC  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4782  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  4783  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  4784  01F3  0840               	movf	?_trapmf,w
  4785  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  4786  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  4787  01F6  00B8               	movwf	_y^(0+128)
  4788  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  4789  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  4790  01F9  0841               	movf	?_trapmf+1,w
  4791  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  4792  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  4793  01FC  00B9               	movwf	(_y+1)^(0+128)
  4794  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4795  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4796  01FF  0842               	movf	?_trapmf+2,w
  4797  0200  1683               	bsf	3,5	;RP0=1, select bank1
  4798  0201  1303               	bcf	3,6	;RP1=0, select bank1
  4799  0202  00BA               	movwf	(_y+2)^(0+128)
  4800                           
  4801                           ;main.c: 223: if (y > fop_rule1)
  4802  0203  0826               	movf	_fop_rule1^(0+128),w
  4803  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4804  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0206  00B0               	movwf	___ftge@ff1
  4806  0207  1683               	bsf	3,5	;RP0=1, select bank1
  4807  0208  1303               	bcf	3,6	;RP1=0, select bank1
  4808  0209  0827               	movf	(_fop_rule1+1)^(0+128),w
  4809  020A  1283               	bcf	3,5	;RP0=0, select bank0
  4810  020B  1303               	bcf	3,6	;RP1=0, select bank0
  4811  020C  00B1               	movwf	___ftge@ff1+1
  4812  020D  1683               	bsf	3,5	;RP0=1, select bank1
  4813  020E  1303               	bcf	3,6	;RP1=0, select bank1
  4814  020F  0828               	movf	(_fop_rule1+2)^(0+128),w
  4815  0210  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0211  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0212  00B2               	movwf	___ftge@ff1+2
  4818  0213  1683               	bsf	3,5	;RP0=1, select bank1
  4819  0214  1303               	bcf	3,6	;RP1=0, select bank1
  4820  0215  0838               	movf	_y^(0+128),w
  4821  0216  1283               	bcf	3,5	;RP0=0, select bank0
  4822  0217  1303               	bcf	3,6	;RP1=0, select bank0
  4823  0218  00B3               	movwf	___ftge@ff2
  4824  0219  1683               	bsf	3,5	;RP0=1, select bank1
  4825  021A  1303               	bcf	3,6	;RP1=0, select bank1
  4826  021B  0839               	movf	(_y+1)^(0+128),w
  4827  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4828  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4829  021E  00B4               	movwf	___ftge@ff2+1
  4830  021F  1683               	bsf	3,5	;RP0=1, select bank1
  4831  0220  1303               	bcf	3,6	;RP1=0, select bank1
  4832  0221  083A               	movf	(_y+2)^(0+128),w
  4833  0222  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0223  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0224  00B5               	movwf	___ftge@ff2+2
  4836  0225  160A  118A  2640  120A  118A  	fcall	___ftge
  4837  022A  1803               	btfsc	3,0
  4838  022B  2A3C               	goto	i1l2525
  4839                           
  4840                           ;main.c: 224: {
  4841                           ;main.c: 225: reduz += fop_rule1;
  4842  022C  1683               	bsf	3,5	;RP0=1, select bank1
  4843  022D  1303               	bcf	3,6	;RP1=0, select bank1
  4844  022E  0826               	movf	_fop_rule1^(0+128),w
  4845  022F  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0230  1303               	bcf	3,6	;RP1=0, select bank0
  4847  0231  00A3               	movwf	___ftadd@f1
  4848  0232  1683               	bsf	3,5	;RP0=1, select bank1
  4849  0233  1303               	bcf	3,6	;RP1=0, select bank1
  4850  0234  0827               	movf	(_fop_rule1+1)^(0+128),w
  4851  0235  1283               	bcf	3,5	;RP0=0, select bank0
  4852  0236  1303               	bcf	3,6	;RP1=0, select bank0
  4853  0237  00A4               	movwf	___ftadd@f1+1
  4854  0238  1683               	bsf	3,5	;RP0=1, select bank1
  4855  0239  1303               	bcf	3,6	;RP1=0, select bank1
  4856  023A  0828               	movf	(_fop_rule1+2)^(0+128),w
  4857  023B  2A4B               	goto	L2
  4858  023C                     i1l2525:	
  4859                           ;main.c: 226: }
  4860                           
  4861                           
  4862                           ;main.c: 227: else
  4863                           ;main.c: 228: {
  4864                           ;main.c: 229: reduz += y;
  4865  023C  1683               	bsf	3,5	;RP0=1, select bank1
  4866  023D  1303               	bcf	3,6	;RP1=0, select bank1
  4867  023E  0838               	movf	_y^(0+128),w
  4868  023F  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0240  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0241  00A3               	movwf	___ftadd@f1
  4871  0242  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0243  1303               	bcf	3,6	;RP1=0, select bank1
  4873  0244  0839               	movf	(_y+1)^(0+128),w
  4874  0245  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0246  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0247  00A4               	movwf	___ftadd@f1+1
  4877  0248  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0249  1303               	bcf	3,6	;RP1=0, select bank1
  4879  024A  083A               	movf	(_y+2)^(0+128),w
  4880  024B                     L2:	
  4881  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4882  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4883  024D  00A5               	movwf	___ftadd@f1+2
  4884  024E  0860               	movf	Fuzzy@reduz,w
  4885  024F  00A6               	movwf	___ftadd@f2
  4886  0250  0861               	movf	Fuzzy@reduz+1,w
  4887  0251  00A7               	movwf	___ftadd@f2+1
  4888  0252  0862               	movf	Fuzzy@reduz+2,w
  4889  0253  00A8               	movwf	___ftadd@f2+2
  4890  0254  120A  158A  2332  120A  118A  	fcall	___ftadd
  4891  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4892  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4893  025B  0823               	movf	?___ftadd,w
  4894  025C  00E0               	movwf	Fuzzy@reduz
  4895  025D  0824               	movf	?___ftadd+1,w
  4896  025E  00E1               	movwf	Fuzzy@reduz+1
  4897  025F  0825               	movf	?___ftadd+2,w
  4898  0260  00E2               	movwf	Fuzzy@reduz+2
  4899                           
  4900                           ;main.c: 230: }
  4901                           ;main.c: 232: x=x+1;
  4902  0261  3000               	movlw	0
  4903  0262  00A3               	movwf	___ftadd@f1
  4904  0263  3080               	movlw	128
  4905  0264  00A4               	movwf	___ftadd@f1+1
  4906  0265  303F               	movlw	63
  4907  0266  00A5               	movwf	___ftadd@f1+2
  4908  0267  1683               	bsf	3,5	;RP0=1, select bank1
  4909  0268  1303               	bcf	3,6	;RP1=0, select bank1
  4910  0269  0835               	movf	_x^(0+128),w
  4911  026A  1283               	bcf	3,5	;RP0=0, select bank0
  4912  026B  1303               	bcf	3,6	;RP1=0, select bank0
  4913  026C  00A6               	movwf	___ftadd@f2
  4914  026D  1683               	bsf	3,5	;RP0=1, select bank1
  4915  026E  1303               	bcf	3,6	;RP1=0, select bank1
  4916  026F  0836               	movf	(_x+1)^(0+128),w
  4917  0270  1283               	bcf	3,5	;RP0=0, select bank0
  4918  0271  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0272  00A7               	movwf	___ftadd@f2+1
  4920  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4921  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4922  0275  0837               	movf	(_x+2)^(0+128),w
  4923  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4925  0278  00A8               	movwf	___ftadd@f2+2
  4926  0279  120A  158A  2332  120A  118A  	fcall	___ftadd
  4927  027E  1283               	bcf	3,5	;RP0=0, select bank0
  4928  027F  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0280  0823               	movf	?___ftadd,w
  4930  0281  1683               	bsf	3,5	;RP0=1, select bank1
  4931  0282  1303               	bcf	3,6	;RP1=0, select bank1
  4932  0283  00B5               	movwf	_x^(0+128)
  4933  0284  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0285  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0286  0824               	movf	?___ftadd+1,w
  4936  0287  1683               	bsf	3,5	;RP0=1, select bank1
  4937  0288  1303               	bcf	3,6	;RP1=0, select bank1
  4938  0289  00B6               	movwf	(_x+1)^(0+128)
  4939  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4940  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4941  028C  0825               	movf	?___ftadd+2,w
  4942  028D  1683               	bsf	3,5	;RP0=1, select bank1
  4943  028E  1303               	bcf	3,6	;RP1=0, select bank1
  4944  028F  00B7               	movwf	(_x+2)^(0+128)
  4945  0290  3001               	movlw	1
  4946  0291  1283               	bcf	3,5	;RP0=0, select bank0
  4947  0292  1303               	bcf	3,6	;RP1=0, select bank0
  4948  0293  07D7               	addwf	Fuzzy@a,f
  4949  0294  1803               	skipnc
  4950  0295  0AD8               	incf	Fuzzy@a+1,f
  4951  0296  3000               	movlw	0
  4952  0297  07D8               	addwf	Fuzzy@a+1,f
  4953  0298  0858               	movf	Fuzzy@a+1,w
  4954  0299  3A80               	xorlw	128
  4955  029A  00FF               	movwf	127
  4956  029B  3080               	movlw	128
  4957  029C  027F               	subwf	127,w
  4958  029D  1D03               	skipz
  4959  029E  2AA1               	goto	u287_25
  4960  029F  305B               	movlw	91
  4961  02A0  0257               	subwf	Fuzzy@a,w
  4962  02A1                     u287_25:	
  4963  02A1  1C03               	skipc
  4964  02A2  29C2               	goto	i1l2521
  4965  02A3                     i1l2531:	
  4966                           
  4967                           ;main.c: 233: }
  4968                           ;main.c: 235: }
  4969                           ;main.c: 241: if ((deltaRpm > 20) && (deltaRpm < 70))
  4970  02A3  3000               	movlw	0
  4971  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  4972  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  4973  02A6  00B0               	movwf	___ftge@ff1
  4974  02A7  30A0               	movlw	160
  4975  02A8  00B1               	movwf	___ftge@ff1+1
  4976  02A9  3041               	movlw	65
  4977  02AA  00B2               	movwf	___ftge@ff1+2
  4978  02AB  0866               	movf	Fuzzy@deltaRpm,w
  4979  02AC  00B3               	movwf	___ftge@ff2
  4980  02AD  0867               	movf	Fuzzy@deltaRpm+1,w
  4981  02AE  00B4               	movwf	___ftge@ff2+1
  4982  02AF  0868               	movf	Fuzzy@deltaRpm+2,w
  4983  02B0  00B5               	movwf	___ftge@ff2+2
  4984  02B1  160A  118A  2640  120A  118A  	fcall	___ftge
  4985  02B6  1803               	btfsc	3,0
  4986  02B7  2C21               	goto	i1l2557
  4987  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  4988  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  4989  02BA  0866               	movf	Fuzzy@deltaRpm,w
  4990  02BB  00B0               	movwf	___ftge@ff1
  4991  02BC  0867               	movf	Fuzzy@deltaRpm+1,w
  4992  02BD  00B1               	movwf	___ftge@ff1+1
  4993  02BE  0868               	movf	Fuzzy@deltaRpm+2,w
  4994  02BF  00B2               	movwf	___ftge@ff1+2
  4995  02C0  3000               	movlw	0
  4996  02C1  00B3               	movwf	___ftge@ff2
  4997  02C2  308C               	movlw	140
  4998  02C3  00B4               	movwf	___ftge@ff2+1
  4999  02C4  3042               	movlw	66
  5000  02C5  00B5               	movwf	___ftge@ff2+2
  5001  02C6  160A  118A  2640  120A  118A  	fcall	___ftge
  5002  02CB  1803               	btfsc	3,0
  5003  02CC  2C21               	goto	i1l2557
  5004                           
  5005                           ;main.c: 242: {
  5006                           ;main.c: 245: fitemp = trimf(deltaRpm, 9, 45, 81);
  5007  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  5008  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  5009  02CF  0866               	movf	Fuzzy@deltaRpm,w
  5010  02D0  00C0               	movwf	trimf@x
  5011  02D1  0867               	movf	Fuzzy@deltaRpm+1,w
  5012  02D2  00C1               	movwf	trimf@x+1
  5013  02D3  0868               	movf	Fuzzy@deltaRpm+2,w
  5014  02D4  00C2               	movwf	trimf@x+2
  5015  02D5  3000               	movlw	0
  5016  02D6  00C3               	movwf	trimf@a
  5017  02D7  3010               	movlw	16
  5018  02D8  00C4               	movwf	trimf@a+1
  5019  02D9  3041               	movlw	65
  5020  02DA  00C5               	movwf	trimf@a+2
  5021  02DB  3000               	movlw	0
  5022  02DC  00C6               	movwf	trimf@b
  5023  02DD  3034               	movlw	52
  5024  02DE  00C7               	movwf	trimf@b+1
  5025  02DF  3042               	movlw	66
  5026  02E0  00C8               	movwf	trimf@b+2
  5027  02E1  3000               	movlw	0
  5028  02E2  00C9               	movwf	trimf@c
  5029  02E3  30A2               	movlw	162
  5030  02E4  00CA               	movwf	trimf@c+1
  5031  02E5  3042               	movlw	66
  5032  02E6  00CB               	movwf	trimf@c+2
  5033  02E7  120A  158A  243B  120A  118A  	fcall	_trimf
  5034  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  5035  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  5036  02EE  0840               	movf	?_trimf,w
  5037  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  5038  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  5039  02F1  00A3               	movwf	_fitemp^(0+128)
  5040  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  5041  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  5042  02F4  0841               	movf	?_trimf+1,w
  5043  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  5044  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  5045  02F7  00A4               	movwf	(_fitemp+1)^(0+128)
  5046  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  5047  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  5048  02FA  0842               	movf	?_trimf+2,w
  5049  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  5050  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  5051  02FD  00A5               	movwf	(_fitemp+2)^(0+128)
  5052                           
  5053                           ;main.c: 248: fop_rule2 = max_val(fitemp,0.1);
  5054  02FE  0823               	movf	_fitemp^(0+128),w
  5055  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0300  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0301  00BC               	movwf	max_val@a
  5058  0302  1683               	bsf	3,5	;RP0=1, select bank1
  5059  0303  1303               	bcf	3,6	;RP1=0, select bank1
  5060  0304  0824               	movf	(_fitemp+1)^(0+128),w
  5061  0305  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0306  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0307  00BD               	movwf	max_val@a+1
  5064  0308  1683               	bsf	3,5	;RP0=1, select bank1
  5065  0309  1303               	bcf	3,6	;RP1=0, select bank1
  5066  030A  0825               	movf	(_fitemp+2)^(0+128),w
  5067  030B  1283               	bcf	3,5	;RP0=0, select bank0
  5068  030C  1303               	bcf	3,6	;RP1=0, select bank0
  5069  030D  00BE               	movwf	max_val@a+2
  5070  030E  30CD               	movlw	205
  5071  030F  00BF               	movwf	max_val@b
  5072  0310  30CC               	movlw	204
  5073  0311  00C0               	movwf	max_val@b+1
  5074  0312  303D               	movlw	61
  5075  0313  00C1               	movwf	max_val@b+2
  5076  0314  160A  118A  24E1  120A  118A  	fcall	_max_val
  5077  0319  1283               	bcf	3,5	;RP0=0, select bank0
  5078  031A  1303               	bcf	3,6	;RP1=0, select bank0
  5079  031B  083C               	movf	?_max_val,w
  5080  031C  1683               	bsf	3,5	;RP0=1, select bank1
  5081  031D  1303               	bcf	3,6	;RP1=0, select bank1
  5082  031E  00A9               	movwf	_fop_rule2^(0+128)
  5083  031F  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0320  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0321  083D               	movf	?_max_val+1,w
  5086  0322  1683               	bsf	3,5	;RP0=1, select bank1
  5087  0323  1303               	bcf	3,6	;RP1=0, select bank1
  5088  0324  00AA               	movwf	(_fop_rule2+1)^(0+128)
  5089  0325  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0326  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0327  083E               	movf	?_max_val+2,w
  5092  0328  1683               	bsf	3,5	;RP0=1, select bank1
  5093  0329  1303               	bcf	3,6	;RP1=0, select bank1
  5094  032A  00AB               	movwf	(_fop_rule2+2)^(0+128)
  5095                           
  5096                           ;main.c: 251: x=0;
  5097  032B  3000               	movlw	0
  5098  032C  00B5               	movwf	_x^(0+128)
  5099  032D  3000               	movlw	0
  5100  032E  00B6               	movwf	(_x+1)^(0+128)
  5101  032F  3000               	movlw	0
  5102  0330  00B7               	movwf	(_x+2)^(0+128)
  5103                           
  5104                           ;main.c: 252: y=0;
  5105  0331  3000               	movlw	0
  5106  0332  00B8               	movwf	_y^(0+128)
  5107  0333  3000               	movlw	0
  5108  0334  00B9               	movwf	(_y+1)^(0+128)
  5109  0335  3000               	movlw	0
  5110  0336  00BA               	movwf	(_y+2)^(0+128)
  5111                           
  5112                           ;main.c: 253: for (int a=0; a<=90; a++)
  5113  0337  1283               	bcf	3,5	;RP0=0, select bank0
  5114  0338  1303               	bcf	3,6	;RP1=0, select bank0
  5115  0339  01D9               	clrf	Fuzzy@a_241
  5116  033A  01DA               	clrf	Fuzzy@a_241+1
  5117  033B  085A               	movf	Fuzzy@a_241+1,w
  5118  033C  3A80               	xorlw	128
  5119  033D  00FF               	movwf	127
  5120  033E  3080               	movlw	128
  5121  033F  027F               	subwf	127,w
  5122  0340  1D03               	skipz
  5123  0341  2B44               	goto	u290_25
  5124  0342  305B               	movlw	91
  5125  0343  0259               	subwf	Fuzzy@a_241,w
  5126  0344                     u290_25:	
  5127  0344  1803               	btfsc	3,0
  5128  0345  2C21               	goto	i1l2557
  5129  0346                     i1l2547:	
  5130                           
  5131                           ;main.c: 254: {
  5132                           ;main.c: 255: y = trimf(x, 9, 45, 81);
  5133  0346  1683               	bsf	3,5	;RP0=1, select bank1
  5134  0347  1303               	bcf	3,6	;RP1=0, select bank1
  5135  0348  0835               	movf	_x^(0+128),w
  5136  0349  1283               	bcf	3,5	;RP0=0, select bank0
  5137  034A  1303               	bcf	3,6	;RP1=0, select bank0
  5138  034B  00C0               	movwf	trimf@x
  5139  034C  1683               	bsf	3,5	;RP0=1, select bank1
  5140  034D  1303               	bcf	3,6	;RP1=0, select bank1
  5141  034E  0836               	movf	(_x+1)^(0+128),w
  5142  034F  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0350  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0351  00C1               	movwf	trimf@x+1
  5145  0352  1683               	bsf	3,5	;RP0=1, select bank1
  5146  0353  1303               	bcf	3,6	;RP1=0, select bank1
  5147  0354  0837               	movf	(_x+2)^(0+128),w
  5148  0355  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0356  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0357  00C2               	movwf	trimf@x+2
  5151  0358  3000               	movlw	0
  5152  0359  00C3               	movwf	trimf@a
  5153  035A  3010               	movlw	16
  5154  035B  00C4               	movwf	trimf@a+1
  5155  035C  3041               	movlw	65
  5156  035D  00C5               	movwf	trimf@a+2
  5157  035E  3000               	movlw	0
  5158  035F  00C6               	movwf	trimf@b
  5159  0360  3034               	movlw	52
  5160  0361  00C7               	movwf	trimf@b+1
  5161  0362  3042               	movlw	66
  5162  0363  00C8               	movwf	trimf@b+2
  5163  0364  3000               	movlw	0
  5164  0365  00C9               	movwf	trimf@c
  5165  0366  30A2               	movlw	162
  5166  0367  00CA               	movwf	trimf@c+1
  5167  0368  3042               	movlw	66
  5168  0369  00CB               	movwf	trimf@c+2
  5169  036A  120A  158A  243B  120A  118A  	fcall	_trimf
  5170  036F  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0370  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0371  0840               	movf	?_trimf,w
  5173  0372  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0373  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0374  00B8               	movwf	_y^(0+128)
  5176  0375  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0376  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0377  0841               	movf	?_trimf+1,w
  5179  0378  1683               	bsf	3,5	;RP0=1, select bank1
  5180  0379  1303               	bcf	3,6	;RP1=0, select bank1
  5181  037A  00B9               	movwf	(_y+1)^(0+128)
  5182  037B  1283               	bcf	3,5	;RP0=0, select bank0
  5183  037C  1303               	bcf	3,6	;RP1=0, select bank0
  5184  037D  0842               	movf	?_trimf+2,w
  5185  037E  1683               	bsf	3,5	;RP0=1, select bank1
  5186  037F  1303               	bcf	3,6	;RP1=0, select bank1
  5187  0380  00BA               	movwf	(_y+2)^(0+128)
  5188                           
  5189                           ;main.c: 257: if (y >= fop_rule2)
  5190  0381  0838               	movf	_y^(0+128),w
  5191  0382  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0383  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0384  00B0               	movwf	___ftge@ff1
  5194  0385  1683               	bsf	3,5	;RP0=1, select bank1
  5195  0386  1303               	bcf	3,6	;RP1=0, select bank1
  5196  0387  0839               	movf	(_y+1)^(0+128),w
  5197  0388  1283               	bcf	3,5	;RP0=0, select bank0
  5198  0389  1303               	bcf	3,6	;RP1=0, select bank0
  5199  038A  00B1               	movwf	___ftge@ff1+1
  5200  038B  1683               	bsf	3,5	;RP0=1, select bank1
  5201  038C  1303               	bcf	3,6	;RP1=0, select bank1
  5202  038D  083A               	movf	(_y+2)^(0+128),w
  5203  038E  1283               	bcf	3,5	;RP0=0, select bank0
  5204  038F  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0390  00B2               	movwf	___ftge@ff1+2
  5206  0391  1683               	bsf	3,5	;RP0=1, select bank1
  5207  0392  1303               	bcf	3,6	;RP1=0, select bank1
  5208  0393  0829               	movf	_fop_rule2^(0+128),w
  5209  0394  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0395  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0396  00B3               	movwf	___ftge@ff2
  5212  0397  1683               	bsf	3,5	;RP0=1, select bank1
  5213  0398  1303               	bcf	3,6	;RP1=0, select bank1
  5214  0399  082A               	movf	(_fop_rule2+1)^(0+128),w
  5215  039A  1283               	bcf	3,5	;RP0=0, select bank0
  5216  039B  1303               	bcf	3,6	;RP1=0, select bank0
  5217  039C  00B4               	movwf	___ftge@ff2+1
  5218  039D  1683               	bsf	3,5	;RP0=1, select bank1
  5219  039E  1303               	bcf	3,6	;RP1=0, select bank1
  5220  039F  082B               	movf	(_fop_rule2+2)^(0+128),w
  5221  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  5222  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  5223  03A2  00B5               	movwf	___ftge@ff2+2
  5224  03A3  160A  118A  2640  120A  118A  	fcall	___ftge
  5225  03A8  1C03               	btfss	3,0
  5226  03A9  2BBA               	goto	i1l2551
  5227                           
  5228                           ;main.c: 258: {
  5229                           ;main.c: 259: mantem += fop_rule2;
  5230  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  5231  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  5232  03AC  0829               	movf	_fop_rule2^(0+128),w
  5233  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  5234  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  5235  03AF  00A3               	movwf	___ftadd@f1
  5236  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  5237  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  5238  03B2  082A               	movf	(_fop_rule2+1)^(0+128),w
  5239  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  5240  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  5241  03B5  00A4               	movwf	___ftadd@f1+1
  5242  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  5243  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  5244  03B8  082B               	movf	(_fop_rule2+2)^(0+128),w
  5245  03B9  2BC9               	goto	L3
  5246  03BA                     i1l2551:	
  5247                           ;main.c: 260: }
  5248                           
  5249                           
  5250                           ;main.c: 261: else
  5251                           ;main.c: 262: {
  5252                           ;main.c: 263: mantem += y;
  5253  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  5254  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  5255  03BC  0838               	movf	_y^(0+128),w
  5256  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  5257  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  5258  03BF  00A3               	movwf	___ftadd@f1
  5259  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  5260  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  5261  03C2  0839               	movf	(_y+1)^(0+128),w
  5262  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  5263  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  5264  03C5  00A4               	movwf	___ftadd@f1+1
  5265  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  5266  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  5267  03C8  083A               	movf	(_y+2)^(0+128),w
  5268  03C9                     L3:	
  5269  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  5270  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  5271  03CB  00A5               	movwf	___ftadd@f1+2
  5272  03CC  085D               	movf	Fuzzy@mantem,w
  5273  03CD  00A6               	movwf	___ftadd@f2
  5274  03CE  085E               	movf	Fuzzy@mantem+1,w
  5275  03CF  00A7               	movwf	___ftadd@f2+1
  5276  03D0  085F               	movf	Fuzzy@mantem+2,w
  5277  03D1  00A8               	movwf	___ftadd@f2+2
  5278  03D2  120A  158A  2332  120A  118A  	fcall	___ftadd
  5279  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  5280  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  5281  03D9  0823               	movf	?___ftadd,w
  5282  03DA  00DD               	movwf	Fuzzy@mantem
  5283  03DB  0824               	movf	?___ftadd+1,w
  5284  03DC  00DE               	movwf	Fuzzy@mantem+1
  5285  03DD  0825               	movf	?___ftadd+2,w
  5286  03DE  00DF               	movwf	Fuzzy@mantem+2
  5287                           
  5288                           ;main.c: 264: }
  5289                           ;main.c: 266: x=x+1;
  5290  03DF  3000               	movlw	0
  5291  03E0  00A3               	movwf	___ftadd@f1
  5292  03E1  3080               	movlw	128
  5293  03E2  00A4               	movwf	___ftadd@f1+1
  5294  03E3  303F               	movlw	63
  5295  03E4  00A5               	movwf	___ftadd@f1+2
  5296  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  5297  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  5298  03E7  0835               	movf	_x^(0+128),w
  5299  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  5300  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  5301  03EA  00A6               	movwf	___ftadd@f2
  5302  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  5303  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  5304  03ED  0836               	movf	(_x+1)^(0+128),w
  5305  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  5306  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  5307  03F0  00A7               	movwf	___ftadd@f2+1
  5308  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  5309  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  5310  03F3  0837               	movf	(_x+2)^(0+128),w
  5311  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  5312  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  5313  03F6  00A8               	movwf	___ftadd@f2+2
  5314  03F7  120A  158A  2332  120A  118A  	fcall	___ftadd
  5315  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  5316  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  5317  03FE  0823               	movf	?___ftadd,w
  5318  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  5319  0400  1303               	bcf	3,6	;RP1=0, select bank1
  5320  0401  00B5               	movwf	_x^(0+128)
  5321  0402  1283               	bcf	3,5	;RP0=0, select bank0
  5322  0403  1303               	bcf	3,6	;RP1=0, select bank0
  5323  0404  0824               	movf	?___ftadd+1,w
  5324  0405  1683               	bsf	3,5	;RP0=1, select bank1
  5325  0406  1303               	bcf	3,6	;RP1=0, select bank1
  5326  0407  00B6               	movwf	(_x+1)^(0+128)
  5327  0408  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0409  1303               	bcf	3,6	;RP1=0, select bank0
  5329  040A  0825               	movf	?___ftadd+2,w
  5330  040B  1683               	bsf	3,5	;RP0=1, select bank1
  5331  040C  1303               	bcf	3,6	;RP1=0, select bank1
  5332  040D  00B7               	movwf	(_x+2)^(0+128)
  5333  040E  3001               	movlw	1
  5334  040F  1283               	bcf	3,5	;RP0=0, select bank0
  5335  0410  1303               	bcf	3,6	;RP1=0, select bank0
  5336  0411  07D9               	addwf	Fuzzy@a_241,f
  5337  0412  1803               	skipnc
  5338  0413  0ADA               	incf	Fuzzy@a_241+1,f
  5339  0414  3000               	movlw	0
  5340  0415  07DA               	addwf	Fuzzy@a_241+1,f
  5341  0416  085A               	movf	Fuzzy@a_241+1,w
  5342  0417  3A80               	xorlw	128
  5343  0418  00FF               	movwf	127
  5344  0419  3080               	movlw	128
  5345  041A  027F               	subwf	127,w
  5346  041B  1D03               	skipz
  5347  041C  2C1F               	goto	u292_25
  5348  041D  305B               	movlw	91
  5349  041E  0259               	subwf	Fuzzy@a_241,w
  5350  041F                     u292_25:	
  5351  041F  1C03               	skipc
  5352  0420  2B46               	goto	i1l2547
  5353  0421                     i1l2557:	
  5354                           
  5355                           ;main.c: 267: }
  5356                           ;main.c: 269: }
  5357                           ;main.c: 275: if (deltaRpm > 70 )
  5358  0421  3000               	movlw	0
  5359  0422  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0423  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0424  00B0               	movwf	___ftge@ff1
  5362  0425  308C               	movlw	140
  5363  0426  00B1               	movwf	___ftge@ff1+1
  5364  0427  3042               	movlw	66
  5365  0428  00B2               	movwf	___ftge@ff1+2
  5366  0429  0866               	movf	Fuzzy@deltaRpm,w
  5367  042A  00B3               	movwf	___ftge@ff2
  5368  042B  0867               	movf	Fuzzy@deltaRpm+1,w
  5369  042C  00B4               	movwf	___ftge@ff2+1
  5370  042D  0868               	movf	Fuzzy@deltaRpm+2,w
  5371  042E  00B5               	movwf	___ftge@ff2+2
  5372  042F  160A  118A  2640  120A  118A  	fcall	___ftge
  5373  0434  1803               	btfsc	3,0
  5374  0435  2D96               	goto	i1l2581
  5375                           
  5376                           ;main.c: 276: {
  5377                           ;main.c: 279: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  5378  0436  1283               	bcf	3,5	;RP0=0, select bank0
  5379  0437  1303               	bcf	3,6	;RP1=0, select bank0
  5380  0438  0866               	movf	Fuzzy@deltaRpm,w
  5381  0439  00C0               	movwf	trapmf@x
  5382  043A  0867               	movf	Fuzzy@deltaRpm+1,w
  5383  043B  00C1               	movwf	trapmf@x+1
  5384  043C  0868               	movf	Fuzzy@deltaRpm+2,w
  5385  043D  00C2               	movwf	trapmf@x+2
  5386  043E  3000               	movlw	0
  5387  043F  00C3               	movwf	trapmf@a
  5388  0440  3078               	movlw	120
  5389  0441  00C4               	movwf	trapmf@a+1
  5390  0442  3042               	movlw	66
  5391  0443  00C5               	movwf	trapmf@a+2
  5392  0444  3000               	movlw	0
  5393  0445  00C6               	movwf	trapmf@b
  5394  0446  309E               	movlw	158
  5395  0447  00C7               	movwf	trapmf@b+1
  5396  0448  3042               	movlw	66
  5397  0449  00C8               	movwf	trapmf@b+2
  5398  044A  3000               	movlw	0
  5399  044B  00C9               	movwf	trapmf@c
  5400  044C  30B4               	movlw	180
  5401  044D  00CA               	movwf	trapmf@c+1
  5402  044E  3042               	movlw	66
  5403  044F  00CB               	movwf	trapmf@c+2
  5404  0450  3000               	movlw	0
  5405  0451  00CC               	movwf	trapmf@d
  5406  0452  30B4               	movlw	180
  5407  0453  00CD               	movwf	trapmf@d+1
  5408  0454  3042               	movlw	66
  5409  0455  00CE               	movwf	trapmf@d+2
  5410  0456  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5411  045B  1283               	bcf	3,5	;RP0=0, select bank0
  5412  045C  1303               	bcf	3,6	;RP1=0, select bank0
  5413  045D  0840               	movf	?_trapmf,w
  5414  045E  1683               	bsf	3,5	;RP0=1, select bank1
  5415  045F  1303               	bcf	3,6	;RP1=0, select bank1
  5416  0460  00A3               	movwf	_fitemp^(0+128)
  5417  0461  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0462  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0463  0841               	movf	?_trapmf+1,w
  5420  0464  1683               	bsf	3,5	;RP0=1, select bank1
  5421  0465  1303               	bcf	3,6	;RP1=0, select bank1
  5422  0466  00A4               	movwf	(_fitemp+1)^(0+128)
  5423  0467  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0468  1303               	bcf	3,6	;RP1=0, select bank0
  5425  0469  0842               	movf	?_trapmf+2,w
  5426  046A  1683               	bsf	3,5	;RP0=1, select bank1
  5427  046B  1303               	bcf	3,6	;RP1=0, select bank1
  5428  046C  00A5               	movwf	(_fitemp+2)^(0+128)
  5429                           
  5430                           ;main.c: 283: fop_rule3 = max_val(fitemp,0.1);
  5431  046D  0823               	movf	_fitemp^(0+128),w
  5432  046E  1283               	bcf	3,5	;RP0=0, select bank0
  5433  046F  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0470  00BC               	movwf	max_val@a
  5435  0471  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0472  1303               	bcf	3,6	;RP1=0, select bank1
  5437  0473  0824               	movf	(_fitemp+1)^(0+128),w
  5438  0474  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0475  1303               	bcf	3,6	;RP1=0, select bank0
  5440  0476  00BD               	movwf	max_val@a+1
  5441  0477  1683               	bsf	3,5	;RP0=1, select bank1
  5442  0478  1303               	bcf	3,6	;RP1=0, select bank1
  5443  0479  0825               	movf	(_fitemp+2)^(0+128),w
  5444  047A  1283               	bcf	3,5	;RP0=0, select bank0
  5445  047B  1303               	bcf	3,6	;RP1=0, select bank0
  5446  047C  00BE               	movwf	max_val@a+2
  5447  047D  30CD               	movlw	205
  5448  047E  00BF               	movwf	max_val@b
  5449  047F  30CC               	movlw	204
  5450  0480  00C0               	movwf	max_val@b+1
  5451  0481  303D               	movlw	61
  5452  0482  00C1               	movwf	max_val@b+2
  5453  0483  160A  118A  24E1  120A  118A  	fcall	_max_val
  5454  0488  1283               	bcf	3,5	;RP0=0, select bank0
  5455  0489  1303               	bcf	3,6	;RP1=0, select bank0
  5456  048A  083C               	movf	?_max_val,w
  5457  048B  1683               	bsf	3,5	;RP0=1, select bank1
  5458  048C  1303               	bcf	3,6	;RP1=0, select bank1
  5459  048D  00AC               	movwf	_fop_rule3^(0+128)
  5460  048E  1283               	bcf	3,5	;RP0=0, select bank0
  5461  048F  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0490  083D               	movf	?_max_val+1,w
  5463  0491  1683               	bsf	3,5	;RP0=1, select bank1
  5464  0492  1303               	bcf	3,6	;RP1=0, select bank1
  5465  0493  00AD               	movwf	(_fop_rule3+1)^(0+128)
  5466  0494  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0495  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0496  083E               	movf	?_max_val+2,w
  5469  0497  1683               	bsf	3,5	;RP0=1, select bank1
  5470  0498  1303               	bcf	3,6	;RP1=0, select bank1
  5471  0499  00AE               	movwf	(_fop_rule3+2)^(0+128)
  5472                           
  5473                           ;main.c: 286: x=0;
  5474  049A  3000               	movlw	0
  5475  049B  00B5               	movwf	_x^(0+128)
  5476  049C  3000               	movlw	0
  5477  049D  00B6               	movwf	(_x+1)^(0+128)
  5478  049E  3000               	movlw	0
  5479  049F  00B7               	movwf	(_x+2)^(0+128)
  5480                           
  5481                           ;main.c: 287: y=0;
  5482  04A0  3000               	movlw	0
  5483  04A1  00B8               	movwf	_y^(0+128)
  5484  04A2  3000               	movlw	0
  5485  04A3  00B9               	movwf	(_y+1)^(0+128)
  5486  04A4  3000               	movlw	0
  5487  04A5  00BA               	movwf	(_y+2)^(0+128)
  5488                           
  5489                           ;main.c: 288: for (int a=0; a<=90; a++)
  5490  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  5491  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  5492  04A8  01DB               	clrf	Fuzzy@a_242
  5493  04A9  01DC               	clrf	Fuzzy@a_242+1
  5494  04AA  085C               	movf	Fuzzy@a_242+1,w
  5495  04AB  3A80               	xorlw	128
  5496  04AC  00FF               	movwf	127
  5497  04AD  3080               	movlw	128
  5498  04AE  027F               	subwf	127,w
  5499  04AF  1D03               	skipz
  5500  04B0  2CB3               	goto	u294_25
  5501  04B1  305B               	movlw	91
  5502  04B2  025B               	subwf	Fuzzy@a_242,w
  5503  04B3                     u294_25:	
  5504  04B3  1803               	btfsc	3,0
  5505  04B4  2D96               	goto	i1l2581
  5506  04B5                     i1l2571:	
  5507                           
  5508                           ;main.c: 289: {
  5509                           ;main.c: 290: y = trapmf(x, 62, 79, 90, 90);
  5510  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  5511  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  5512  04B7  0835               	movf	_x^(0+128),w
  5513  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  5514  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  5515  04BA  00C0               	movwf	trapmf@x
  5516  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  5517  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  5518  04BD  0836               	movf	(_x+1)^(0+128),w
  5519  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  5520  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  5521  04C0  00C1               	movwf	trapmf@x+1
  5522  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  5523  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  5524  04C3  0837               	movf	(_x+2)^(0+128),w
  5525  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  5526  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  5527  04C6  00C2               	movwf	trapmf@x+2
  5528  04C7  3000               	movlw	0
  5529  04C8  00C3               	movwf	trapmf@a
  5530  04C9  3078               	movlw	120
  5531  04CA  00C4               	movwf	trapmf@a+1
  5532  04CB  3042               	movlw	66
  5533  04CC  00C5               	movwf	trapmf@a+2
  5534  04CD  3000               	movlw	0
  5535  04CE  00C6               	movwf	trapmf@b
  5536  04CF  309E               	movlw	158
  5537  04D0  00C7               	movwf	trapmf@b+1
  5538  04D1  3042               	movlw	66
  5539  04D2  00C8               	movwf	trapmf@b+2
  5540  04D3  3000               	movlw	0
  5541  04D4  00C9               	movwf	trapmf@c
  5542  04D5  30B4               	movlw	180
  5543  04D6  00CA               	movwf	trapmf@c+1
  5544  04D7  3042               	movlw	66
  5545  04D8  00CB               	movwf	trapmf@c+2
  5546  04D9  3000               	movlw	0
  5547  04DA  00CC               	movwf	trapmf@d
  5548  04DB  30B4               	movlw	180
  5549  04DC  00CD               	movwf	trapmf@d+1
  5550  04DD  3042               	movlw	66
  5551  04DE  00CE               	movwf	trapmf@d+2
  5552  04DF  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5553  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  5554  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  5555  04E6  0840               	movf	?_trapmf,w
  5556  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  5557  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  5558  04E9  00B8               	movwf	_y^(0+128)
  5559  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  5560  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  5561  04EC  0841               	movf	?_trapmf+1,w
  5562  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  5563  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  5564  04EF  00B9               	movwf	(_y+1)^(0+128)
  5565  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  5566  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  5567  04F2  0842               	movf	?_trapmf+2,w
  5568  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  5569  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  5570  04F5  00BA               	movwf	(_y+2)^(0+128)
  5571                           
  5572                           ;main.c: 292: if (y >= fop_rule3)
  5573  04F6  0838               	movf	_y^(0+128),w
  5574  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  5575  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  5576  04F9  00B0               	movwf	___ftge@ff1
  5577  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  5578  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  5579  04FC  0839               	movf	(_y+1)^(0+128),w
  5580  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  5581  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  5582  04FF  00B1               	movwf	___ftge@ff1+1
  5583  0500  1683               	bsf	3,5	;RP0=1, select bank1
  5584  0501  1303               	bcf	3,6	;RP1=0, select bank1
  5585  0502  083A               	movf	(_y+2)^(0+128),w
  5586  0503  1283               	bcf	3,5	;RP0=0, select bank0
  5587  0504  1303               	bcf	3,6	;RP1=0, select bank0
  5588  0505  00B2               	movwf	___ftge@ff1+2
  5589  0506  1683               	bsf	3,5	;RP0=1, select bank1
  5590  0507  1303               	bcf	3,6	;RP1=0, select bank1
  5591  0508  082C               	movf	_fop_rule3^(0+128),w
  5592  0509  1283               	bcf	3,5	;RP0=0, select bank0
  5593  050A  1303               	bcf	3,6	;RP1=0, select bank0
  5594  050B  00B3               	movwf	___ftge@ff2
  5595  050C  1683               	bsf	3,5	;RP0=1, select bank1
  5596  050D  1303               	bcf	3,6	;RP1=0, select bank1
  5597  050E  082D               	movf	(_fop_rule3+1)^(0+128),w
  5598  050F  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0510  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0511  00B4               	movwf	___ftge@ff2+1
  5601  0512  1683               	bsf	3,5	;RP0=1, select bank1
  5602  0513  1303               	bcf	3,6	;RP1=0, select bank1
  5603  0514  082E               	movf	(_fop_rule3+2)^(0+128),w
  5604  0515  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0516  1303               	bcf	3,6	;RP1=0, select bank0
  5606  0517  00B5               	movwf	___ftge@ff2+2
  5607  0518  160A  118A  2640  120A  118A  	fcall	___ftge
  5608  051D  1C03               	btfss	3,0
  5609  051E  2D2F               	goto	i1l2575
  5610                           
  5611                           ;main.c: 293: {
  5612                           ;main.c: 294: aumenta += fop_rule3;
  5613  051F  1683               	bsf	3,5	;RP0=1, select bank1
  5614  0520  1303               	bcf	3,6	;RP1=0, select bank1
  5615  0521  082C               	movf	_fop_rule3^(0+128),w
  5616  0522  1283               	bcf	3,5	;RP0=0, select bank0
  5617  0523  1303               	bcf	3,6	;RP1=0, select bank0
  5618  0524  00A3               	movwf	___ftadd@f1
  5619  0525  1683               	bsf	3,5	;RP0=1, select bank1
  5620  0526  1303               	bcf	3,6	;RP1=0, select bank1
  5621  0527  082D               	movf	(_fop_rule3+1)^(0+128),w
  5622  0528  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0529  1303               	bcf	3,6	;RP1=0, select bank0
  5624  052A  00A4               	movwf	___ftadd@f1+1
  5625  052B  1683               	bsf	3,5	;RP0=1, select bank1
  5626  052C  1303               	bcf	3,6	;RP1=0, select bank1
  5627  052D  082E               	movf	(_fop_rule3+2)^(0+128),w
  5628  052E  2D3E               	goto	L4
  5629  052F                     i1l2575:	
  5630                           ;main.c: 295: }
  5631                           
  5632                           
  5633                           ;main.c: 296: else
  5634                           ;main.c: 297: {
  5635                           ;main.c: 298: aumenta += y;
  5636  052F  1683               	bsf	3,5	;RP0=1, select bank1
  5637  0530  1303               	bcf	3,6	;RP1=0, select bank1
  5638  0531  0838               	movf	_y^(0+128),w
  5639  0532  1283               	bcf	3,5	;RP0=0, select bank0
  5640  0533  1303               	bcf	3,6	;RP1=0, select bank0
  5641  0534  00A3               	movwf	___ftadd@f1
  5642  0535  1683               	bsf	3,5	;RP0=1, select bank1
  5643  0536  1303               	bcf	3,6	;RP1=0, select bank1
  5644  0537  0839               	movf	(_y+1)^(0+128),w
  5645  0538  1283               	bcf	3,5	;RP0=0, select bank0
  5646  0539  1303               	bcf	3,6	;RP1=0, select bank0
  5647  053A  00A4               	movwf	___ftadd@f1+1
  5648  053B  1683               	bsf	3,5	;RP0=1, select bank1
  5649  053C  1303               	bcf	3,6	;RP1=0, select bank1
  5650  053D  083A               	movf	(_y+2)^(0+128),w
  5651  053E                     L4:	
  5652  053E  1283               	bcf	3,5	;RP0=0, select bank0
  5653  053F  1303               	bcf	3,6	;RP1=0, select bank0
  5654  0540  00A5               	movwf	___ftadd@f1+2
  5655  0541  0863               	movf	Fuzzy@aumenta,w
  5656  0542  00A6               	movwf	___ftadd@f2
  5657  0543  0864               	movf	Fuzzy@aumenta+1,w
  5658  0544  00A7               	movwf	___ftadd@f2+1
  5659  0545  0865               	movf	Fuzzy@aumenta+2,w
  5660  0546  00A8               	movwf	___ftadd@f2+2
  5661  0547  120A  158A  2332  120A  118A  	fcall	___ftadd
  5662  054C  1283               	bcf	3,5	;RP0=0, select bank0
  5663  054D  1303               	bcf	3,6	;RP1=0, select bank0
  5664  054E  0823               	movf	?___ftadd,w
  5665  054F  00E3               	movwf	Fuzzy@aumenta
  5666  0550  0824               	movf	?___ftadd+1,w
  5667  0551  00E4               	movwf	Fuzzy@aumenta+1
  5668  0552  0825               	movf	?___ftadd+2,w
  5669  0553  00E5               	movwf	Fuzzy@aumenta+2
  5670                           
  5671                           ;main.c: 299: }
  5672                           ;main.c: 301: x=x+1;
  5673  0554  3000               	movlw	0
  5674  0555  00A3               	movwf	___ftadd@f1
  5675  0556  3080               	movlw	128
  5676  0557  00A4               	movwf	___ftadd@f1+1
  5677  0558  303F               	movlw	63
  5678  0559  00A5               	movwf	___ftadd@f1+2
  5679  055A  1683               	bsf	3,5	;RP0=1, select bank1
  5680  055B  1303               	bcf	3,6	;RP1=0, select bank1
  5681  055C  0835               	movf	_x^(0+128),w
  5682  055D  1283               	bcf	3,5	;RP0=0, select bank0
  5683  055E  1303               	bcf	3,6	;RP1=0, select bank0
  5684  055F  00A6               	movwf	___ftadd@f2
  5685  0560  1683               	bsf	3,5	;RP0=1, select bank1
  5686  0561  1303               	bcf	3,6	;RP1=0, select bank1
  5687  0562  0836               	movf	(_x+1)^(0+128),w
  5688  0563  1283               	bcf	3,5	;RP0=0, select bank0
  5689  0564  1303               	bcf	3,6	;RP1=0, select bank0
  5690  0565  00A7               	movwf	___ftadd@f2+1
  5691  0566  1683               	bsf	3,5	;RP0=1, select bank1
  5692  0567  1303               	bcf	3,6	;RP1=0, select bank1
  5693  0568  0837               	movf	(_x+2)^(0+128),w
  5694  0569  1283               	bcf	3,5	;RP0=0, select bank0
  5695  056A  1303               	bcf	3,6	;RP1=0, select bank0
  5696  056B  00A8               	movwf	___ftadd@f2+2
  5697  056C  120A  158A  2332  120A  118A  	fcall	___ftadd
  5698  0571  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0572  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0573  0823               	movf	?___ftadd,w
  5701  0574  1683               	bsf	3,5	;RP0=1, select bank1
  5702  0575  1303               	bcf	3,6	;RP1=0, select bank1
  5703  0576  00B5               	movwf	_x^(0+128)
  5704  0577  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0578  1303               	bcf	3,6	;RP1=0, select bank0
  5706  0579  0824               	movf	?___ftadd+1,w
  5707  057A  1683               	bsf	3,5	;RP0=1, select bank1
  5708  057B  1303               	bcf	3,6	;RP1=0, select bank1
  5709  057C  00B6               	movwf	(_x+1)^(0+128)
  5710  057D  1283               	bcf	3,5	;RP0=0, select bank0
  5711  057E  1303               	bcf	3,6	;RP1=0, select bank0
  5712  057F  0825               	movf	?___ftadd+2,w
  5713  0580  1683               	bsf	3,5	;RP0=1, select bank1
  5714  0581  1303               	bcf	3,6	;RP1=0, select bank1
  5715  0582  00B7               	movwf	(_x+2)^(0+128)
  5716  0583  3001               	movlw	1
  5717  0584  1283               	bcf	3,5	;RP0=0, select bank0
  5718  0585  1303               	bcf	3,6	;RP1=0, select bank0
  5719  0586  07DB               	addwf	Fuzzy@a_242,f
  5720  0587  1803               	skipnc
  5721  0588  0ADC               	incf	Fuzzy@a_242+1,f
  5722  0589  3000               	movlw	0
  5723  058A  07DC               	addwf	Fuzzy@a_242+1,f
  5724  058B  085C               	movf	Fuzzy@a_242+1,w
  5725  058C  3A80               	xorlw	128
  5726  058D  00FF               	movwf	127
  5727  058E  3080               	movlw	128
  5728  058F  027F               	subwf	127,w
  5729  0590  1D03               	skipz
  5730  0591  2D94               	goto	u296_25
  5731  0592  305B               	movlw	91
  5732  0593  025B               	subwf	Fuzzy@a_242,w
  5733  0594                     u296_25:	
  5734  0594  1C03               	skipc
  5735  0595  2CB5               	goto	i1l2571
  5736  0596                     i1l2581:	
  5737                           
  5738                           ;main.c: 302: }
  5739                           ;main.c: 304: }
  5740                           ;main.c: 307: if (deltaRpm < 25)
  5741  0596  1283               	bcf	3,5	;RP0=0, select bank0
  5742  0597  1303               	bcf	3,6	;RP1=0, select bank0
  5743  0598  0866               	movf	Fuzzy@deltaRpm,w
  5744  0599  00B0               	movwf	___ftge@ff1
  5745  059A  0867               	movf	Fuzzy@deltaRpm+1,w
  5746  059B  00B1               	movwf	___ftge@ff1+1
  5747  059C  0868               	movf	Fuzzy@deltaRpm+2,w
  5748  059D  00B2               	movwf	___ftge@ff1+2
  5749  059E  3000               	movlw	0
  5750  059F  00B3               	movwf	___ftge@ff2
  5751  05A0  30C8               	movlw	200
  5752  05A1  00B4               	movwf	___ftge@ff2+1
  5753  05A2  3041               	movlw	65
  5754  05A3  00B5               	movwf	___ftge@ff2+2
  5755  05A4  160A  118A  2640  120A  118A  	fcall	___ftge
  5756  05A9  1803               	btfsc	3,0
  5757  05AA  2DB3               	goto	i1l2585
  5758                           
  5759                           ;main.c: 308: {
  5760                           ;main.c: 309: tip = reduz;
  5761  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  5762  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  5763  05AD  0860               	movf	Fuzzy@reduz,w
  5764  05AE  00D4               	movwf	Fuzzy@tip
  5765  05AF  0861               	movf	Fuzzy@reduz+1,w
  5766  05B0  00D5               	movwf	Fuzzy@tip+1
  5767  05B1  0862               	movf	Fuzzy@reduz+2,w
  5768  05B2  2DEC               	goto	L6
  5769  05B3                     i1l2585:	
  5770                           ;main.c: 310: }else
  5771                           
  5772                           
  5773                           ;main.c: 311: if (deltaRpm >= 25 && deltaRpm < 75)
  5774  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  5775  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  5776  05B5  0866               	movf	Fuzzy@deltaRpm,w
  5777  05B6  00B0               	movwf	___ftge@ff1
  5778  05B7  0867               	movf	Fuzzy@deltaRpm+1,w
  5779  05B8  00B1               	movwf	___ftge@ff1+1
  5780  05B9  0868               	movf	Fuzzy@deltaRpm+2,w
  5781  05BA  00B2               	movwf	___ftge@ff1+2
  5782  05BB  3000               	movlw	0
  5783  05BC  00B3               	movwf	___ftge@ff2
  5784  05BD  30C8               	movlw	200
  5785  05BE  00B4               	movwf	___ftge@ff2+1
  5786  05BF  3041               	movlw	65
  5787  05C0  00B5               	movwf	___ftge@ff2+2
  5788  05C1  160A  118A  2640  120A  118A  	fcall	___ftge
  5789  05C6  1C03               	btfss	3,0
  5790  05C7  2DE5               	goto	i1l2591
  5791  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  5792  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  5793  05CA  0866               	movf	Fuzzy@deltaRpm,w
  5794  05CB  00B0               	movwf	___ftge@ff1
  5795  05CC  0867               	movf	Fuzzy@deltaRpm+1,w
  5796  05CD  00B1               	movwf	___ftge@ff1+1
  5797  05CE  0868               	movf	Fuzzy@deltaRpm+2,w
  5798  05CF  00B2               	movwf	___ftge@ff1+2
  5799  05D0  3000               	movlw	0
  5800  05D1  00B3               	movwf	___ftge@ff2
  5801  05D2  3096               	movlw	150
  5802  05D3  00B4               	movwf	___ftge@ff2+1
  5803  05D4  3042               	movlw	66
  5804  05D5  00B5               	movwf	___ftge@ff2+2
  5805  05D6  160A  118A  2640  120A  118A  	fcall	___ftge
  5806  05DB  1803               	btfsc	3,0
  5807  05DC  2DE5               	goto	i1l2591
  5808                           
  5809                           ;main.c: 312: {
  5810                           ;main.c: 313: tip = mantem;
  5811  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  5812  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  5813  05DF  085D               	movf	Fuzzy@mantem,w
  5814  05E0  00D4               	movwf	Fuzzy@tip
  5815  05E1  085E               	movf	Fuzzy@mantem+1,w
  5816  05E2  00D5               	movwf	Fuzzy@tip+1
  5817  05E3  085F               	movf	Fuzzy@mantem+2,w
  5818  05E4  2DEC               	goto	L6
  5819  05E5                     i1l2591:	
  5820                           ;main.c: 314: }else
  5821                           
  5822                           
  5823                           ;main.c: 315: {
  5824                           ;main.c: 316: tip = aumenta;
  5825  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  5826  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  5827  05E7  0863               	movf	Fuzzy@aumenta,w
  5828  05E8  00D4               	movwf	Fuzzy@tip
  5829  05E9  0864               	movf	Fuzzy@aumenta+1,w
  5830  05EA  00D5               	movwf	Fuzzy@tip+1
  5831  05EB  0865               	movf	Fuzzy@aumenta+2,w
  5832  05EC                     L6:	
  5833  05EC  00D6               	movwf	Fuzzy@tip+2
  5834                           
  5835                           ;main.c: 317: }
  5836                           ;main.c: 320: total_area = 90;
  5837  05ED  3000               	movlw	0
  5838  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  5839  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  5840  05F0  00B2               	movwf	_total_area^(0+128)
  5841  05F1  30B4               	movlw	180
  5842  05F2  00B3               	movwf	(_total_area+1)^(0+128)
  5843  05F3  3042               	movlw	66
  5844  05F4  00B4               	movwf	(_total_area+2)^(0+128)
  5845                           
  5846                           ;main.c: 321: sum = 0;
  5847  05F5  3000               	movlw	0
  5848  05F6  00AF               	movwf	_sum^(0+128)
  5849  05F7  3000               	movlw	0
  5850  05F8  00B0               	movwf	(_sum+1)^(0+128)
  5851  05F9  3000               	movlw	0
  5852  05FA  00B1               	movwf	(_sum+2)^(0+128)
  5853                           
  5854                           ;main.c: 322: sum = sum + tip;
  5855  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  5856  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  5857  05FD  0854               	movf	Fuzzy@tip,w
  5858  05FE  00A3               	movwf	___ftadd@f1
  5859  05FF  0855               	movf	Fuzzy@tip+1,w
  5860  0600  00A4               	movwf	___ftadd@f1+1
  5861  0601  0856               	movf	Fuzzy@tip+2,w
  5862  0602  00A5               	movwf	___ftadd@f1+2
  5863  0603  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0604  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0605  082F               	movf	_sum^(0+128),w
  5866  0606  1283               	bcf	3,5	;RP0=0, select bank0
  5867  0607  1303               	bcf	3,6	;RP1=0, select bank0
  5868  0608  00A6               	movwf	___ftadd@f2
  5869  0609  1683               	bsf	3,5	;RP0=1, select bank1
  5870  060A  1303               	bcf	3,6	;RP1=0, select bank1
  5871  060B  0830               	movf	(_sum+1)^(0+128),w
  5872  060C  1283               	bcf	3,5	;RP0=0, select bank0
  5873  060D  1303               	bcf	3,6	;RP1=0, select bank0
  5874  060E  00A7               	movwf	___ftadd@f2+1
  5875  060F  1683               	bsf	3,5	;RP0=1, select bank1
  5876  0610  1303               	bcf	3,6	;RP1=0, select bank1
  5877  0611  0831               	movf	(_sum+2)^(0+128),w
  5878  0612  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0613  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0614  00A8               	movwf	___ftadd@f2+2
  5881  0615  120A  158A  2332  120A  118A  	fcall	___ftadd
  5882  061A  1283               	bcf	3,5	;RP0=0, select bank0
  5883  061B  1303               	bcf	3,6	;RP1=0, select bank0
  5884  061C  0823               	movf	?___ftadd,w
  5885  061D  1683               	bsf	3,5	;RP0=1, select bank1
  5886  061E  1303               	bcf	3,6	;RP1=0, select bank1
  5887  061F  00AF               	movwf	_sum^(0+128)
  5888  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0621  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0622  0824               	movf	?___ftadd+1,w
  5891  0623  1683               	bsf	3,5	;RP0=1, select bank1
  5892  0624  1303               	bcf	3,6	;RP1=0, select bank1
  5893  0625  00B0               	movwf	(_sum+1)^(0+128)
  5894  0626  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0627  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0628  0825               	movf	?___ftadd+2,w
  5897  0629  1683               	bsf	3,5	;RP0=1, select bank1
  5898  062A  1303               	bcf	3,6	;RP1=0, select bank1
  5899  062B  00B1               	movwf	(_sum+2)^(0+128)
  5900                           
  5901                           ;main.c: 325: ativa_fan = sum/total_area;
  5902  062C  0832               	movf	_total_area^(0+128),w
  5903  062D  1283               	bcf	3,5	;RP0=0, select bank0
  5904  062E  1303               	bcf	3,6	;RP1=0, select bank0
  5905  062F  00B0               	movwf	___ftdiv@f2
  5906  0630  1683               	bsf	3,5	;RP0=1, select bank1
  5907  0631  1303               	bcf	3,6	;RP1=0, select bank1
  5908  0632  0833               	movf	(_total_area+1)^(0+128),w
  5909  0633  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0634  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0635  00B1               	movwf	___ftdiv@f2+1
  5912  0636  1683               	bsf	3,5	;RP0=1, select bank1
  5913  0637  1303               	bcf	3,6	;RP1=0, select bank1
  5914  0638  0834               	movf	(_total_area+2)^(0+128),w
  5915  0639  1283               	bcf	3,5	;RP0=0, select bank0
  5916  063A  1303               	bcf	3,6	;RP1=0, select bank0
  5917  063B  00B2               	movwf	___ftdiv@f2+2
  5918  063C  1683               	bsf	3,5	;RP0=1, select bank1
  5919  063D  1303               	bcf	3,6	;RP1=0, select bank1
  5920  063E  082F               	movf	_sum^(0+128),w
  5921  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5923  0641  00B3               	movwf	___ftdiv@f1
  5924  0642  1683               	bsf	3,5	;RP0=1, select bank1
  5925  0643  1303               	bcf	3,6	;RP1=0, select bank1
  5926  0644  0830               	movf	(_sum+1)^(0+128),w
  5927  0645  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0646  1303               	bcf	3,6	;RP1=0, select bank0
  5929  0647  00B4               	movwf	___ftdiv@f1+1
  5930  0648  1683               	bsf	3,5	;RP0=1, select bank1
  5931  0649  1303               	bcf	3,6	;RP1=0, select bank1
  5932  064A  0831               	movf	(_sum+2)^(0+128),w
  5933  064B  1283               	bcf	3,5	;RP0=0, select bank0
  5934  064C  1303               	bcf	3,6	;RP1=0, select bank0
  5935  064D  00B5               	movwf	___ftdiv@f1+2
  5936  064E  120A  118A  2747  120A  118A  	fcall	___ftdiv
  5937  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5939  0655  0830               	movf	?___ftdiv,w
  5940  0656  1683               	bsf	3,5	;RP0=1, select bank1
  5941  0657  1303               	bcf	3,6	;RP1=0, select bank1
  5942  0658  00A0               	movwf	_ativa_fan^(0+128)
  5943  0659  1283               	bcf	3,5	;RP0=0, select bank0
  5944  065A  1303               	bcf	3,6	;RP1=0, select bank0
  5945  065B  0831               	movf	?___ftdiv+1,w
  5946  065C  1683               	bsf	3,5	;RP0=1, select bank1
  5947  065D  1303               	bcf	3,6	;RP1=0, select bank1
  5948  065E  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5949  065F  1283               	bcf	3,5	;RP0=0, select bank0
  5950  0660  1303               	bcf	3,6	;RP1=0, select bank0
  5951  0661  0832               	movf	?___ftdiv+2,w
  5952  0662  1683               	bsf	3,5	;RP0=1, select bank1
  5953  0663  1303               	bcf	3,6	;RP1=0, select bank1
  5954  0664  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5955                           
  5956                           ;main.c: 328: ativa_fan = ativa_fan*100;
  5957  0665  3000               	movlw	0
  5958  0666  00F8               	movwf	___ftmul@f1
  5959  0667  30C8               	movlw	200
  5960  0668  00F9               	movwf	___ftmul@f1+1
  5961  0669  3042               	movlw	66
  5962  066A  00FA               	movwf	___ftmul@f1+2
  5963  066B  0820               	movf	_ativa_fan^(0+128),w
  5964  066C  00FB               	movwf	___ftmul@f2
  5965  066D  0821               	movf	(_ativa_fan+1)^(0+128),w
  5966  066E  00FC               	movwf	___ftmul@f2+1
  5967  066F  0822               	movf	(_ativa_fan+2)^(0+128),w
  5968  0670  00FD               	movwf	___ftmul@f2+2
  5969  0671  120A  158A  218A  120A  118A  	fcall	___ftmul
  5970  0676  0878               	movf	?___ftmul,w
  5971  0677  1683               	bsf	3,5	;RP0=1, select bank1
  5972  0678  1303               	bcf	3,6	;RP1=0, select bank1
  5973  0679  00A0               	movwf	_ativa_fan^(0+128)
  5974  067A  0879               	movf	?___ftmul+1,w
  5975  067B  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5976  067C  087A               	movf	?___ftmul+2,w
  5977  067D  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5978                           
  5979                           ;main.c: 332: if (freio = 1)
  5980  067E  3001               	movlw	1
  5981  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0681  00D2               	movwf	Fuzzy@freio
  5984  0682  3000               	movlw	0
  5985  0683  00D3               	movwf	Fuzzy@freio+1
  5986                           
  5987                           ;main.c: 333: {
  5988                           ;main.c: 334: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  5989  0684  3000               	movlw	0
  5990  0685  00B0               	movwf	___ftge@ff1
  5991  0686  3000               	movlw	0
  5992  0687  00B1               	movwf	___ftge@ff1+1
  5993  0688  3000               	movlw	0
  5994  0689  00B2               	movwf	___ftge@ff1+2
  5995  068A  1683               	bsf	3,5	;RP0=1, select bank1
  5996  068B  1303               	bcf	3,6	;RP1=0, select bank1
  5997  068C  0864               	movf	_tf^(0+128),w
  5998  068D  1283               	bcf	3,5	;RP0=0, select bank0
  5999  068E  1303               	bcf	3,6	;RP1=0, select bank0
  6000  068F  00A3               	movwf	___ftadd@f1
  6001  0690  1683               	bsf	3,5	;RP0=1, select bank1
  6002  0691  1303               	bcf	3,6	;RP1=0, select bank1
  6003  0692  0865               	movf	(_tf+1)^(0+128),w
  6004  0693  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0694  1303               	bcf	3,6	;RP1=0, select bank0
  6006  0695  00A4               	movwf	___ftadd@f1+1
  6007  0696  1683               	bsf	3,5	;RP0=1, select bank1
  6008  0697  1303               	bcf	3,6	;RP1=0, select bank1
  6009  0698  0866               	movf	(_tf+2)^(0+128),w
  6010  0699  1283               	bcf	3,5	;RP0=0, select bank0
  6011  069A  1303               	bcf	3,6	;RP1=0, select bank0
  6012  069B  00A5               	movwf	___ftadd@f1+2
  6013  069C  086E               	movf	_deltaV+1,w
  6014  069D  01F9               	clrf	___lwtoft@c+1
  6015  069E  07F9               	addwf	___lwtoft@c+1,f
  6016  069F  086D               	movf	_deltaV,w
  6017  06A0  01F8               	clrf	___lwtoft@c
  6018  06A1  07F8               	addwf	___lwtoft@c,f
  6019  06A2  160A  118A  2450  120A  118A  	fcall	___lwtoft
  6020  06A7  0878               	movf	?___lwtoft,w
  6021  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  6022  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  6023  06AA  00A6               	movwf	___ftadd@f2
  6024  06AB  0879               	movf	?___lwtoft+1,w
  6025  06AC  00A7               	movwf	___ftadd@f2+1
  6026  06AD  087A               	movf	?___lwtoft+2,w
  6027  06AE  00A8               	movwf	___ftadd@f2+2
  6028  06AF  120A  158A  2332  120A  118A  	fcall	___ftadd
  6029  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  6030  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  6031  06B6  0823               	movf	?___ftadd,w
  6032  06B7  00B3               	movwf	___ftge@ff2
  6033  06B8  0824               	movf	?___ftadd+1,w
  6034  06B9  00B4               	movwf	___ftge@ff2+1
  6035  06BA  0825               	movf	?___ftadd+2,w
  6036  06BB  00B5               	movwf	___ftge@ff2+2
  6037  06BC  160A  118A  2640  120A  118A  	fcall	___ftge
  6038  06C1  1803               	btfsc	3,0
  6039  06C2  0008               	return
  6040  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  6041  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  6042  06C5  0864               	movf	_tf^(0+128),w
  6043  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  6044  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  6045  06C8  00A3               	movwf	___ftadd@f1
  6046  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  6047  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  6048  06CB  0865               	movf	(_tf+1)^(0+128),w
  6049  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  6050  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  6051  06CE  00A4               	movwf	___ftadd@f1+1
  6052  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  6053  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  6054  06D1  0866               	movf	(_tf+2)^(0+128),w
  6055  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  6056  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  6057  06D4  00A5               	movwf	___ftadd@f1+2
  6058  06D5  086E               	movf	_deltaV+1,w
  6059  06D6  01F9               	clrf	___lwtoft@c+1
  6060  06D7  07F9               	addwf	___lwtoft@c+1,f
  6061  06D8  086D               	movf	_deltaV,w
  6062  06D9  01F8               	clrf	___lwtoft@c
  6063  06DA  07F8               	addwf	___lwtoft@c,f
  6064  06DB  160A  118A  2450  120A  118A  	fcall	___lwtoft
  6065  06E0  0878               	movf	?___lwtoft,w
  6066  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  6067  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  6068  06E3  00A6               	movwf	___ftadd@f2
  6069  06E4  0879               	movf	?___lwtoft+1,w
  6070  06E5  00A7               	movwf	___ftadd@f2+1
  6071  06E6  087A               	movf	?___lwtoft+2,w
  6072  06E7  00A8               	movwf	___ftadd@f2+2
  6073  06E8  120A  158A  2332  120A  118A  	fcall	___ftadd
  6074  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  6075  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  6076  06EF  0823               	movf	?___ftadd,w
  6077  06F0  00B0               	movwf	___ftge@ff1
  6078  06F1  0824               	movf	?___ftadd+1,w
  6079  06F2  00B1               	movwf	___ftge@ff1+1
  6080  06F3  0825               	movf	?___ftadd+2,w
  6081  06F4  00B2               	movwf	___ftge@ff1+2
  6082  06F5  3000               	movlw	0
  6083  06F6  00B3               	movwf	___ftge@ff2
  6084  06F7  307F               	movlw	127
  6085  06F8  00B4               	movwf	___ftge@ff2+1
  6086  06F9  3044               	movlw	68
  6087  06FA  00B5               	movwf	___ftge@ff2+2
  6088  06FB  160A  118A  2640  120A  118A  	fcall	___ftge
  6089  0700  1803               	btfsc	3,0
  6090  0701  0008               	return
  6091                           
  6092                           ;main.c: 335: {
  6093                           ;main.c: 336: PWM_DutyCycle2(tf + deltaV);
  6094  0702  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0703  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0704  086E               	movf	_deltaV+1,w
  6097  0705  01F9               	clrf	___lwtoft@c+1
  6098  0706  07F9               	addwf	___lwtoft@c+1,f
  6099  0707  086D               	movf	_deltaV,w
  6100  0708  01F8               	clrf	___lwtoft@c
  6101  0709  07F8               	addwf	___lwtoft@c,f
  6102  070A  160A  118A  2450  120A  118A  	fcall	___lwtoft
  6103  070F  0878               	movf	?___lwtoft,w
  6104  0710  1283               	bcf	3,5	;RP0=0, select bank0
  6105  0711  1303               	bcf	3,6	;RP1=0, select bank0
  6106  0712  00A6               	movwf	___ftadd@f2
  6107  0713  0879               	movf	?___lwtoft+1,w
  6108  0714  00A7               	movwf	___ftadd@f2+1
  6109  0715  087A               	movf	?___lwtoft+2,w
  6110  0716  00A8               	movwf	___ftadd@f2+2
  6111  0717  1683               	bsf	3,5	;RP0=1, select bank1
  6112  0718  1303               	bcf	3,6	;RP1=0, select bank1
  6113  0719  0864               	movf	_tf^(0+128),w
  6114  071A  1283               	bcf	3,5	;RP0=0, select bank0
  6115  071B  1303               	bcf	3,6	;RP1=0, select bank0
  6116  071C  00A3               	movwf	___ftadd@f1
  6117  071D  1683               	bsf	3,5	;RP0=1, select bank1
  6118  071E  1303               	bcf	3,6	;RP1=0, select bank1
  6119  071F  0865               	movf	(_tf+1)^(0+128),w
  6120  0720  1283               	bcf	3,5	;RP0=0, select bank0
  6121  0721  1303               	bcf	3,6	;RP1=0, select bank0
  6122  0722  00A4               	movwf	___ftadd@f1+1
  6123  0723  1683               	bsf	3,5	;RP0=1, select bank1
  6124  0724  1303               	bcf	3,6	;RP1=0, select bank1
  6125  0725  0866               	movf	(_tf+2)^(0+128),w
  6126  0726  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0727  1303               	bcf	3,6	;RP1=0, select bank0
  6128  0728  00A5               	movwf	___ftadd@f1+2
  6129  0729  120A  158A  2332  120A  118A  	fcall	___ftadd
  6130  072E  1283               	bcf	3,5	;RP0=0, select bank0
  6131  072F  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0730  0823               	movf	?___ftadd,w
  6133  0731  00B0               	movwf	___fttol@f1
  6134  0732  0824               	movf	?___ftadd+1,w
  6135  0733  00B1               	movwf	___fttol@f1+1
  6136  0734  0825               	movf	?___ftadd+2,w
  6137  0735  00B2               	movwf	___fttol@f1+2
  6138  0736  160A  118A  2772  120A  118A  	fcall	___fttol
  6139  073B  1283               	bcf	3,5	;RP0=0, select bank0
  6140  073C  1303               	bcf	3,6	;RP1=0, select bank0
  6141  073D  0831               	movf	?___fttol+1,w
  6142  073E  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  6143  073F  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  6144  0740  0830               	movf	?___fttol,w
  6145  0741  01BE               	clrf	i1PWM_DutyCycle2@valor
  6146  0742  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  6147  0743  160A  118A  24AA   	fcall	i1_PWM_DutyCycle2
  6148                           
  6149                           ;main.c: 337: }
  6150                           ;main.c: 338: }else
  6151  0746  0008               	return
  6152  0747                     __end_of_Fuzzy:	
  6153                           ;main.c: 341: {
  6154                           ;main.c: 342: PWM_DutyCycle2(tf - deltaV);
  6155                           
  6156                           ;main.c: 339: {
  6157                           ;main.c: 340: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  6158                           
  6159                           
  6160                           	psect	text24
  6161  14AA                     __ptext24:	
  6162 ;; *************** function i1_PWM_DutyCycle2 *****************
  6163 ;; Defined at:
  6164 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  valor           2   30[BANK0 ] int 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;		None               void
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         0       2       0       0       0
  6179 ;;      Locals:         0       0       0       0       0
  6180 ;;      Temps:          2       0       0       0       0
  6181 ;;      Totals:         2       2       0       0       0
  6182 ;;Total ram usage:        4 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_Fuzzy
  6188 ;;		_ISR
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function i1_PWM_DutyCycle2
  6194  14AA                     i1_PWM_DutyCycle2:	
  6195                           
  6196                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6200  14AA  1283               	bcf	3,5	;RP0=0, select bank0
  6201  14AB  1303               	bcf	3,6	;RP1=0, select bank0
  6202  14AC  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  6203  14AD  00FD               	movwf	??i1_PWM_DutyCycle2+1
  6204  14AE  083E               	movf	i1PWM_DutyCycle2@valor,w
  6205  14AF  00FC               	movwf	??i1_PWM_DutyCycle2
  6206  14B0  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6207  14B1  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6208  14B2  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6209  14B3  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6210  14B4  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6211  14B5  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6212  14B6  087C               	movf	??i1_PWM_DutyCycle2,w
  6213  14B7  009B               	movwf	27	;volatile
  6214                           
  6215                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6216  14B8  083E               	movf	i1PWM_DutyCycle2@valor,w
  6217  14B9  00FC               	movwf	??i1_PWM_DutyCycle2
  6218  14BA  3003               	movlw	3
  6219  14BB                     u278_25:	
  6220  14BB  1003               	clrc
  6221  14BC  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  6222  14BD  3EFF               	addlw	-1
  6223  14BE  1D03               	skipz
  6224  14BF  2CBB               	goto	u278_25
  6225  14C0  1003               	clrc
  6226  14C1  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  6227  14C2  380C               	iorlw	12
  6228  14C3  009D               	movwf	29	;volatile
  6229  14C4  0008               	return
  6230  14C5                     __end_ofi1_PWM_DutyCycle2:	
  6231                           
  6232                           	psect	text25
  6233  0C3B                     __ptext25:	
  6234 ;; *************** function _trimf *****************
  6235 ;; Defined at:
  6236 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  x               3   32[BANK0 ] float 
  6239 ;;  a               3   35[BANK0 ] float 
  6240 ;;  b               3   38[BANK0 ] float 
  6241 ;;  c               3   41[BANK0 ] float 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  ua              3   44[BANK0 ] float 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  3   32[BANK0 ] float 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, pclath, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         0      12       0       0       0
  6254 ;;      Locals:         0       3       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         0      15       0       0       0
  6257 ;;Total ram usage:       15 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    2
  6260 ;; This function calls:
  6261 ;;		___ftadd
  6262 ;;		___ftdiv
  6263 ;;		___ftge
  6264 ;;		___ftneg
  6265 ;; This function is called by:
  6266 ;;		_Fuzzy
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _trimf
  6272  0C3B                     _trimf:	
  6273                           
  6274                           ;main.c: 65: float ua = 0;
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  6278  0C3B  3000               	movlw	0
  6279  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0C3E  00CC               	movwf	trimf@ua
  6282  0C3F  3000               	movlw	0
  6283  0C40  00CD               	movwf	trimf@ua+1
  6284  0C41  3000               	movlw	0
  6285  0C42  00CE               	movwf	trimf@ua+2
  6286                           
  6287                           ;main.c: 67: if (x <= a)
  6288  0C43  0843               	movf	trimf@a,w
  6289  0C44  00B0               	movwf	___ftge@ff1
  6290  0C45  0844               	movf	trimf@a+1,w
  6291  0C46  00B1               	movwf	___ftge@ff1+1
  6292  0C47  0845               	movf	trimf@a+2,w
  6293  0C48  00B2               	movwf	___ftge@ff1+2
  6294  0C49  0840               	movf	trimf@x,w
  6295  0C4A  00B3               	movwf	___ftge@ff2
  6296  0C4B  0841               	movf	trimf@x+1,w
  6297  0C4C  00B4               	movwf	___ftge@ff2+1
  6298  0C4D  0842               	movf	trimf@x+2,w
  6299  0C4E  00B5               	movwf	___ftge@ff2+2
  6300  0C4F  160A  118A  2640  120A  158A  	fcall	___ftge
  6301  0C54  1803               	btfsc	3,0
  6302  0C55  2D4E               	goto	L11
  6303                           
  6304                           ;main.c: 69: else if ((a < x) && (x <= b))
  6305                           
  6306                           ;main.c: 68: ua = 0;
  6307  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0C58  0843               	movf	trimf@a,w
  6310  0C59  00B0               	movwf	___ftge@ff1
  6311  0C5A  0844               	movf	trimf@a+1,w
  6312  0C5B  00B1               	movwf	___ftge@ff1+1
  6313  0C5C  0845               	movf	trimf@a+2,w
  6314  0C5D  00B2               	movwf	___ftge@ff1+2
  6315  0C5E  0840               	movf	trimf@x,w
  6316  0C5F  00B3               	movwf	___ftge@ff2
  6317  0C60  0841               	movf	trimf@x+1,w
  6318  0C61  00B4               	movwf	___ftge@ff2+1
  6319  0C62  0842               	movf	trimf@x+2,w
  6320  0C63  00B5               	movwf	___ftge@ff2+2
  6321  0C64  160A  118A  2640  120A  158A  	fcall	___ftge
  6322  0C69  1803               	btfsc	3,0
  6323  0C6A  2CB4               	goto	i1l2201
  6324  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6326  0C6D  0846               	movf	trimf@b,w
  6327  0C6E  00B0               	movwf	___ftge@ff1
  6328  0C6F  0847               	movf	trimf@b+1,w
  6329  0C70  00B1               	movwf	___ftge@ff1+1
  6330  0C71  0848               	movf	trimf@b+2,w
  6331  0C72  00B2               	movwf	___ftge@ff1+2
  6332  0C73  0840               	movf	trimf@x,w
  6333  0C74  00B3               	movwf	___ftge@ff2
  6334  0C75  0841               	movf	trimf@x+1,w
  6335  0C76  00B4               	movwf	___ftge@ff2+1
  6336  0C77  0842               	movf	trimf@x+2,w
  6337  0C78  00B5               	movwf	___ftge@ff2+2
  6338  0C79  160A  118A  2640  120A  158A  	fcall	___ftge
  6339  0C7E  1C03               	btfss	3,0
  6340  0C7F  2CB4               	goto	i1l2201
  6341                           
  6342                           ;main.c: 70: ua = ((x - a) / (b - a));
  6343  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  6344  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  6345  0C82  0846               	movf	trimf@b,w
  6346  0C83  00A3               	movwf	___ftadd@f1
  6347  0C84  0847               	movf	trimf@b+1,w
  6348  0C85  00A4               	movwf	___ftadd@f1+1
  6349  0C86  0848               	movf	trimf@b+2,w
  6350  0C87  00A5               	movwf	___ftadd@f1+2
  6351  0C88  0843               	movf	trimf@a,w
  6352  0C89  00A0               	movwf	___ftneg@f1
  6353  0C8A  0844               	movf	trimf@a+1,w
  6354  0C8B  00A1               	movwf	___ftneg@f1+1
  6355  0C8C  0845               	movf	trimf@a+2,w
  6356  0C8D  00A2               	movwf	___ftneg@f1+2
  6357  0C8E  160A  118A  240E  120A  158A  	fcall	___ftneg
  6358  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  6360  0C95  0820               	movf	?___ftneg,w
  6361  0C96  00A6               	movwf	___ftadd@f2
  6362  0C97  0821               	movf	?___ftneg+1,w
  6363  0C98  00A7               	movwf	___ftadd@f2+1
  6364  0C99  0822               	movf	?___ftneg+2,w
  6365  0C9A  00A8               	movwf	___ftadd@f2+2
  6366  0C9B  120A  158A  2332  120A  158A  	fcall	___ftadd
  6367  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  6368  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  6369  0CA2  0823               	movf	?___ftadd,w
  6370  0CA3  00B0               	movwf	___ftdiv@f2
  6371  0CA4  0824               	movf	?___ftadd+1,w
  6372  0CA5  00B1               	movwf	___ftdiv@f2+1
  6373  0CA6  0825               	movf	?___ftadd+2,w
  6374  0CA7  00B2               	movwf	___ftdiv@f2+2
  6375  0CA8  0840               	movf	trimf@x,w
  6376  0CA9  00A3               	movwf	___ftadd@f1
  6377  0CAA  0841               	movf	trimf@x+1,w
  6378  0CAB  00A4               	movwf	___ftadd@f1+1
  6379  0CAC  0842               	movf	trimf@x+2,w
  6380  0CAD  00A5               	movwf	___ftadd@f1+2
  6381  0CAE  0843               	movf	trimf@a,w
  6382  0CAF  00A0               	movwf	___ftneg@f1
  6383  0CB0  0844               	movf	trimf@a+1,w
  6384  0CB1  00A1               	movwf	___ftneg@f1+1
  6385  0CB2  0845               	movf	trimf@a+2,w
  6386  0CB3  2D11               	goto	L12
  6387  0CB4                     i1l2201:	
  6388                           
  6389                           ;main.c: 71: else if ((b < x) && (x <= c))
  6390  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0CB6  0846               	movf	trimf@b,w
  6393  0CB7  00B0               	movwf	___ftge@ff1
  6394  0CB8  0847               	movf	trimf@b+1,w
  6395  0CB9  00B1               	movwf	___ftge@ff1+1
  6396  0CBA  0848               	movf	trimf@b+2,w
  6397  0CBB  00B2               	movwf	___ftge@ff1+2
  6398  0CBC  0840               	movf	trimf@x,w
  6399  0CBD  00B3               	movwf	___ftge@ff2
  6400  0CBE  0841               	movf	trimf@x+1,w
  6401  0CBF  00B4               	movwf	___ftge@ff2+1
  6402  0CC0  0842               	movf	trimf@x+2,w
  6403  0CC1  00B5               	movwf	___ftge@ff2+2
  6404  0CC2  160A  118A  2640  120A  158A  	fcall	___ftge
  6405  0CC7  1803               	btfsc	3,0
  6406  0CC8  2D39               	goto	i1l2207
  6407  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  6409  0CCB  0849               	movf	trimf@c,w
  6410  0CCC  00B0               	movwf	___ftge@ff1
  6411  0CCD  084A               	movf	trimf@c+1,w
  6412  0CCE  00B1               	movwf	___ftge@ff1+1
  6413  0CCF  084B               	movf	trimf@c+2,w
  6414  0CD0  00B2               	movwf	___ftge@ff1+2
  6415  0CD1  0840               	movf	trimf@x,w
  6416  0CD2  00B3               	movwf	___ftge@ff2
  6417  0CD3  0841               	movf	trimf@x+1,w
  6418  0CD4  00B4               	movwf	___ftge@ff2+1
  6419  0CD5  0842               	movf	trimf@x+2,w
  6420  0CD6  00B5               	movwf	___ftge@ff2+2
  6421  0CD7  160A  118A  2640  120A  158A  	fcall	___ftge
  6422  0CDC  1C03               	btfss	3,0
  6423  0CDD  2D39               	goto	i1l2207
  6424                           
  6425                           ;main.c: 72: ua = ((x - c) / (b - c));
  6426  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  6427  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  6428  0CE0  0846               	movf	trimf@b,w
  6429  0CE1  00A3               	movwf	___ftadd@f1
  6430  0CE2  0847               	movf	trimf@b+1,w
  6431  0CE3  00A4               	movwf	___ftadd@f1+1
  6432  0CE4  0848               	movf	trimf@b+2,w
  6433  0CE5  00A5               	movwf	___ftadd@f1+2
  6434  0CE6  0849               	movf	trimf@c,w
  6435  0CE7  00A0               	movwf	___ftneg@f1
  6436  0CE8  084A               	movf	trimf@c+1,w
  6437  0CE9  00A1               	movwf	___ftneg@f1+1
  6438  0CEA  084B               	movf	trimf@c+2,w
  6439  0CEB  00A2               	movwf	___ftneg@f1+2
  6440  0CEC  160A  118A  240E  120A  158A  	fcall	___ftneg
  6441  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  6442  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  6443  0CF3  0820               	movf	?___ftneg,w
  6444  0CF4  00A6               	movwf	___ftadd@f2
  6445  0CF5  0821               	movf	?___ftneg+1,w
  6446  0CF6  00A7               	movwf	___ftadd@f2+1
  6447  0CF7  0822               	movf	?___ftneg+2,w
  6448  0CF8  00A8               	movwf	___ftadd@f2+2
  6449  0CF9  120A  158A  2332  120A  158A  	fcall	___ftadd
  6450  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  6451  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  6452  0D00  0823               	movf	?___ftadd,w
  6453  0D01  00B0               	movwf	___ftdiv@f2
  6454  0D02  0824               	movf	?___ftadd+1,w
  6455  0D03  00B1               	movwf	___ftdiv@f2+1
  6456  0D04  0825               	movf	?___ftadd+2,w
  6457  0D05  00B2               	movwf	___ftdiv@f2+2
  6458  0D06  0840               	movf	trimf@x,w
  6459  0D07  00A3               	movwf	___ftadd@f1
  6460  0D08  0841               	movf	trimf@x+1,w
  6461  0D09  00A4               	movwf	___ftadd@f1+1
  6462  0D0A  0842               	movf	trimf@x+2,w
  6463  0D0B  00A5               	movwf	___ftadd@f1+2
  6464  0D0C  0849               	movf	trimf@c,w
  6465  0D0D  00A0               	movwf	___ftneg@f1
  6466  0D0E  084A               	movf	trimf@c+1,w
  6467  0D0F  00A1               	movwf	___ftneg@f1+1
  6468  0D10  084B               	movf	trimf@c+2,w
  6469  0D11                     L12:	
  6470  0D11  00A2               	movwf	___ftneg@f1+2
  6471  0D12  160A  118A  240E  120A  158A  	fcall	___ftneg
  6472  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6473  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6474  0D19  0820               	movf	?___ftneg,w
  6475  0D1A  00A6               	movwf	___ftadd@f2
  6476  0D1B  0821               	movf	?___ftneg+1,w
  6477  0D1C  00A7               	movwf	___ftadd@f2+1
  6478  0D1D  0822               	movf	?___ftneg+2,w
  6479  0D1E  00A8               	movwf	___ftadd@f2+2
  6480  0D1F  120A  158A  2332  120A  158A  	fcall	___ftadd
  6481  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6483  0D26  0823               	movf	?___ftadd,w
  6484  0D27  00B3               	movwf	___ftdiv@f1
  6485  0D28  0824               	movf	?___ftadd+1,w
  6486  0D29  00B4               	movwf	___ftdiv@f1+1
  6487  0D2A  0825               	movf	?___ftadd+2,w
  6488  0D2B  00B5               	movwf	___ftdiv@f1+2
  6489  0D2C  120A  118A  2747  120A  158A  	fcall	___ftdiv
  6490  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  6491  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  6492  0D33  0830               	movf	?___ftdiv,w
  6493  0D34  00CC               	movwf	trimf@ua
  6494  0D35  0831               	movf	?___ftdiv+1,w
  6495  0D36  00CD               	movwf	trimf@ua+1
  6496  0D37  0832               	movf	?___ftdiv+2,w
  6497  0D38  2D55               	goto	L9
  6498  0D39                     i1l2207:	
  6499                           
  6500                           ;main.c: 73: else if (x > c)
  6501  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0D3B  0849               	movf	trimf@c,w
  6504  0D3C  00B0               	movwf	___ftge@ff1
  6505  0D3D  084A               	movf	trimf@c+1,w
  6506  0D3E  00B1               	movwf	___ftge@ff1+1
  6507  0D3F  084B               	movf	trimf@c+2,w
  6508  0D40  00B2               	movwf	___ftge@ff1+2
  6509  0D41  0840               	movf	trimf@x,w
  6510  0D42  00B3               	movwf	___ftge@ff2
  6511  0D43  0841               	movf	trimf@x+1,w
  6512  0D44  00B4               	movwf	___ftge@ff2+1
  6513  0D45  0842               	movf	trimf@x+2,w
  6514  0D46  00B5               	movwf	___ftge@ff2+2
  6515  0D47  160A  118A  2640  120A  158A  	fcall	___ftge
  6516  0D4C  1803               	btfsc	3,0
  6517  0D4D  2D56               	goto	i1l110
  6518  0D4E                     L11:	
  6519                           
  6520                           ;main.c: 74: ua = 0;
  6521  0D4E  3000               	movlw	0
  6522  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  6524  0D51  00CC               	movwf	trimf@ua
  6525  0D52  3000               	movlw	0
  6526  0D53  00CD               	movwf	trimf@ua+1
  6527  0D54  3000               	movlw	0
  6528  0D55                     L9:	
  6529  0D55  00CE               	movwf	trimf@ua+2
  6530  0D56                     i1l110:	
  6531                           
  6532                           ;main.c: 76: return(ua);
  6533  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6534  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  6535  0D58  084C               	movf	trimf@ua,w
  6536  0D59  00C0               	movwf	?_trimf
  6537  0D5A  084D               	movf	trimf@ua+1,w
  6538  0D5B  00C1               	movwf	?_trimf+1
  6539  0D5C  084E               	movf	trimf@ua+2,w
  6540  0D5D  00C2               	movwf	?_trimf+2
  6541  0D5E  0008               	return
  6542  0D5F                     __end_of_trimf:	
  6543                           
  6544                           	psect	text26
  6545  0EAA                     __ptext26:	
  6546 ;; *************** function _trapmf *****************
  6547 ;; Defined at:
  6548 ;;		line 82 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  x               3   32[BANK0 ] float 
  6551 ;;  a               3   35[BANK0 ] float 
  6552 ;;  b               3   38[BANK0 ] float 
  6553 ;;  c               3   41[BANK0 ] float 
  6554 ;;  d               3   44[BANK0 ] float 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  ua              3   47[BANK0 ] float 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  3   32[BANK0 ] float 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0, pclath, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6566 ;;      Params:         0      15       0       0       0
  6567 ;;      Locals:         0       3       0       0       0
  6568 ;;      Temps:          0       0       0       0       0
  6569 ;;      Totals:         0      18       0       0       0
  6570 ;;Total ram usage:       18 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    2
  6573 ;; This function calls:
  6574 ;;		___ftadd
  6575 ;;		___ftdiv
  6576 ;;		___ftge
  6577 ;;		___ftneg
  6578 ;; This function is called by:
  6579 ;;		_Fuzzy
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           
  6584                           ;psect for function _trapmf
  6585  0EAA                     _trapmf:	
  6586                           
  6587                           ;main.c: 84: float ua = 0;
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  6591  0EAA  3000               	movlw	0
  6592  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0EAD  00CF               	movwf	trapmf@ua
  6595  0EAE  3000               	movlw	0
  6596  0EAF  00D0               	movwf	trapmf@ua+1
  6597  0EB0  3000               	movlw	0
  6598  0EB1  00D1               	movwf	trapmf@ua+2
  6599                           
  6600                           ;main.c: 86: if (x <= a)
  6601  0EB2  0843               	movf	trapmf@a,w
  6602  0EB3  00B0               	movwf	___ftge@ff1
  6603  0EB4  0844               	movf	trapmf@a+1,w
  6604  0EB5  00B1               	movwf	___ftge@ff1+1
  6605  0EB6  0845               	movf	trapmf@a+2,w
  6606  0EB7  00B2               	movwf	___ftge@ff1+2
  6607  0EB8  0840               	movf	trapmf@x,w
  6608  0EB9  00B3               	movwf	___ftge@ff2
  6609  0EBA  0841               	movf	trapmf@x+1,w
  6610  0EBB  00B4               	movwf	___ftge@ff2+1
  6611  0EBC  0842               	movf	trapmf@x+2,w
  6612  0EBD  00B5               	movwf	___ftge@ff2+2
  6613  0EBE  160A  118A  2640  120A  158A  	fcall	___ftge
  6614  0EC3  1803               	btfsc	3,0
  6615  0EC4  2FEF               	goto	L17
  6616                           
  6617                           ;main.c: 88: else if ((a < x) && (x <= b))
  6618                           
  6619                           ;main.c: 87: ua = 0;
  6620  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  6621  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  6622  0EC7  0843               	movf	trapmf@a,w
  6623  0EC8  00B0               	movwf	___ftge@ff1
  6624  0EC9  0844               	movf	trapmf@a+1,w
  6625  0ECA  00B1               	movwf	___ftge@ff1+1
  6626  0ECB  0845               	movf	trapmf@a+2,w
  6627  0ECC  00B2               	movwf	___ftge@ff1+2
  6628  0ECD  0840               	movf	trapmf@x,w
  6629  0ECE  00B3               	movwf	___ftge@ff2
  6630  0ECF  0841               	movf	trapmf@x+1,w
  6631  0ED0  00B4               	movwf	___ftge@ff2+1
  6632  0ED1  0842               	movf	trapmf@x+2,w
  6633  0ED2  00B5               	movwf	___ftge@ff2+2
  6634  0ED3  160A  118A  2640  120A  158A  	fcall	___ftge
  6635  0ED8  1803               	btfsc	3,0
  6636  0ED9  2F23               	goto	i1l2225
  6637  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  6638  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  6639  0EDC  0846               	movf	trapmf@b,w
  6640  0EDD  00B0               	movwf	___ftge@ff1
  6641  0EDE  0847               	movf	trapmf@b+1,w
  6642  0EDF  00B1               	movwf	___ftge@ff1+1
  6643  0EE0  0848               	movf	trapmf@b+2,w
  6644  0EE1  00B2               	movwf	___ftge@ff1+2
  6645  0EE2  0840               	movf	trapmf@x,w
  6646  0EE3  00B3               	movwf	___ftge@ff2
  6647  0EE4  0841               	movf	trapmf@x+1,w
  6648  0EE5  00B4               	movwf	___ftge@ff2+1
  6649  0EE6  0842               	movf	trapmf@x+2,w
  6650  0EE7  00B5               	movwf	___ftge@ff2+2
  6651  0EE8  160A  118A  2640  120A  158A  	fcall	___ftge
  6652  0EED  1C03               	btfss	3,0
  6653  0EEE  2F23               	goto	i1l2225
  6654                           
  6655                           ;main.c: 89: ua = ((x - a) / (b - a));
  6656  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  6657  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6658  0EF1  0846               	movf	trapmf@b,w
  6659  0EF2  00A3               	movwf	___ftadd@f1
  6660  0EF3  0847               	movf	trapmf@b+1,w
  6661  0EF4  00A4               	movwf	___ftadd@f1+1
  6662  0EF5  0848               	movf	trapmf@b+2,w
  6663  0EF6  00A5               	movwf	___ftadd@f1+2
  6664  0EF7  0843               	movf	trapmf@a,w
  6665  0EF8  00A0               	movwf	___ftneg@f1
  6666  0EF9  0844               	movf	trapmf@a+1,w
  6667  0EFA  00A1               	movwf	___ftneg@f1+1
  6668  0EFB  0845               	movf	trapmf@a+2,w
  6669  0EFC  00A2               	movwf	___ftneg@f1+2
  6670  0EFD  160A  118A  240E  120A  158A  	fcall	___ftneg
  6671  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  6672  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  6673  0F04  0820               	movf	?___ftneg,w
  6674  0F05  00A6               	movwf	___ftadd@f2
  6675  0F06  0821               	movf	?___ftneg+1,w
  6676  0F07  00A7               	movwf	___ftadd@f2+1
  6677  0F08  0822               	movf	?___ftneg+2,w
  6678  0F09  00A8               	movwf	___ftadd@f2+2
  6679  0F0A  120A  158A  2332  120A  158A  	fcall	___ftadd
  6680  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  6681  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  6682  0F11  0823               	movf	?___ftadd,w
  6683  0F12  00B0               	movwf	___ftdiv@f2
  6684  0F13  0824               	movf	?___ftadd+1,w
  6685  0F14  00B1               	movwf	___ftdiv@f2+1
  6686  0F15  0825               	movf	?___ftadd+2,w
  6687  0F16  00B2               	movwf	___ftdiv@f2+2
  6688  0F17  0840               	movf	trapmf@x,w
  6689  0F18  00A3               	movwf	___ftadd@f1
  6690  0F19  0841               	movf	trapmf@x+1,w
  6691  0F1A  00A4               	movwf	___ftadd@f1+1
  6692  0F1B  0842               	movf	trapmf@x+2,w
  6693  0F1C  00A5               	movwf	___ftadd@f1+2
  6694  0F1D  0843               	movf	trapmf@a,w
  6695  0F1E  00A0               	movwf	___ftneg@f1
  6696  0F1F  0844               	movf	trapmf@a+1,w
  6697  0F20  00A1               	movwf	___ftneg@f1+1
  6698  0F21  0845               	movf	trapmf@a+2,w
  6699  0F22  2FB2               	goto	L19
  6700  0F23                     i1l2225:	
  6701                           
  6702                           ;main.c: 90: else if ((b <= x) && (x <= c))
  6703  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  6704  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  6705  0F25  0840               	movf	trapmf@x,w
  6706  0F26  00B0               	movwf	___ftge@ff1
  6707  0F27  0841               	movf	trapmf@x+1,w
  6708  0F28  00B1               	movwf	___ftge@ff1+1
  6709  0F29  0842               	movf	trapmf@x+2,w
  6710  0F2A  00B2               	movwf	___ftge@ff1+2
  6711  0F2B  0846               	movf	trapmf@b,w
  6712  0F2C  00B3               	movwf	___ftge@ff2
  6713  0F2D  0847               	movf	trapmf@b+1,w
  6714  0F2E  00B4               	movwf	___ftge@ff2+1
  6715  0F2F  0848               	movf	trapmf@b+2,w
  6716  0F30  00B5               	movwf	___ftge@ff2+2
  6717  0F31  160A  118A  2640  120A  158A  	fcall	___ftge
  6718  0F36  1C03               	btfss	3,0
  6719  0F37  2F55               	goto	i1l2231
  6720  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  6721  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  6722  0F3A  0849               	movf	trapmf@c,w
  6723  0F3B  00B0               	movwf	___ftge@ff1
  6724  0F3C  084A               	movf	trapmf@c+1,w
  6725  0F3D  00B1               	movwf	___ftge@ff1+1
  6726  0F3E  084B               	movf	trapmf@c+2,w
  6727  0F3F  00B2               	movwf	___ftge@ff1+2
  6728  0F40  0840               	movf	trapmf@x,w
  6729  0F41  00B3               	movwf	___ftge@ff2
  6730  0F42  0841               	movf	trapmf@x+1,w
  6731  0F43  00B4               	movwf	___ftge@ff2+1
  6732  0F44  0842               	movf	trapmf@x+2,w
  6733  0F45  00B5               	movwf	___ftge@ff2+2
  6734  0F46  160A  118A  2640  120A  158A  	fcall	___ftge
  6735  0F4B  1C03               	btfss	3,0
  6736  0F4C  2F55               	goto	i1l2231
  6737                           
  6738                           ;main.c: 91: ua = 1;
  6739  0F4D  3000               	movlw	0
  6740  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  6741  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  6742  0F50  00CF               	movwf	trapmf@ua
  6743  0F51  3080               	movlw	128
  6744  0F52  00D0               	movwf	trapmf@ua+1
  6745  0F53  303F               	movlw	63
  6746  0F54  2FF6               	goto	L16
  6747  0F55                     i1l2231:	
  6748                           
  6749                           ;main.c: 92: else if ((c < x) && (x <= d))
  6750  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  6752  0F57  0849               	movf	trapmf@c,w
  6753  0F58  00B0               	movwf	___ftge@ff1
  6754  0F59  084A               	movf	trapmf@c+1,w
  6755  0F5A  00B1               	movwf	___ftge@ff1+1
  6756  0F5B  084B               	movf	trapmf@c+2,w
  6757  0F5C  00B2               	movwf	___ftge@ff1+2
  6758  0F5D  0840               	movf	trapmf@x,w
  6759  0F5E  00B3               	movwf	___ftge@ff2
  6760  0F5F  0841               	movf	trapmf@x+1,w
  6761  0F60  00B4               	movwf	___ftge@ff2+1
  6762  0F61  0842               	movf	trapmf@x+2,w
  6763  0F62  00B5               	movwf	___ftge@ff2+2
  6764  0F63  160A  118A  2640  120A  158A  	fcall	___ftge
  6765  0F68  1803               	btfsc	3,0
  6766  0F69  2FDA               	goto	i1l2237
  6767  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  6768  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  6769  0F6C  084C               	movf	trapmf@d,w
  6770  0F6D  00B0               	movwf	___ftge@ff1
  6771  0F6E  084D               	movf	trapmf@d+1,w
  6772  0F6F  00B1               	movwf	___ftge@ff1+1
  6773  0F70  084E               	movf	trapmf@d+2,w
  6774  0F71  00B2               	movwf	___ftge@ff1+2
  6775  0F72  0840               	movf	trapmf@x,w
  6776  0F73  00B3               	movwf	___ftge@ff2
  6777  0F74  0841               	movf	trapmf@x+1,w
  6778  0F75  00B4               	movwf	___ftge@ff2+1
  6779  0F76  0842               	movf	trapmf@x+2,w
  6780  0F77  00B5               	movwf	___ftge@ff2+2
  6781  0F78  160A  118A  2640  120A  158A  	fcall	___ftge
  6782  0F7D  1C03               	btfss	3,0
  6783  0F7E  2FDA               	goto	i1l2237
  6784                           
  6785                           ;main.c: 93: ua = ((d - x) / (d - c));
  6786  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6788  0F81  084C               	movf	trapmf@d,w
  6789  0F82  00A3               	movwf	___ftadd@f1
  6790  0F83  084D               	movf	trapmf@d+1,w
  6791  0F84  00A4               	movwf	___ftadd@f1+1
  6792  0F85  084E               	movf	trapmf@d+2,w
  6793  0F86  00A5               	movwf	___ftadd@f1+2
  6794  0F87  0849               	movf	trapmf@c,w
  6795  0F88  00A0               	movwf	___ftneg@f1
  6796  0F89  084A               	movf	trapmf@c+1,w
  6797  0F8A  00A1               	movwf	___ftneg@f1+1
  6798  0F8B  084B               	movf	trapmf@c+2,w
  6799  0F8C  00A2               	movwf	___ftneg@f1+2
  6800  0F8D  160A  118A  240E  120A  158A  	fcall	___ftneg
  6801  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  6802  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  6803  0F94  0820               	movf	?___ftneg,w
  6804  0F95  00A6               	movwf	___ftadd@f2
  6805  0F96  0821               	movf	?___ftneg+1,w
  6806  0F97  00A7               	movwf	___ftadd@f2+1
  6807  0F98  0822               	movf	?___ftneg+2,w
  6808  0F99  00A8               	movwf	___ftadd@f2+2
  6809  0F9A  120A  158A  2332  120A  158A  	fcall	___ftadd
  6810  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  6812  0FA1  0823               	movf	?___ftadd,w
  6813  0FA2  00B0               	movwf	___ftdiv@f2
  6814  0FA3  0824               	movf	?___ftadd+1,w
  6815  0FA4  00B1               	movwf	___ftdiv@f2+1
  6816  0FA5  0825               	movf	?___ftadd+2,w
  6817  0FA6  00B2               	movwf	___ftdiv@f2+2
  6818  0FA7  084C               	movf	trapmf@d,w
  6819  0FA8  00A3               	movwf	___ftadd@f1
  6820  0FA9  084D               	movf	trapmf@d+1,w
  6821  0FAA  00A4               	movwf	___ftadd@f1+1
  6822  0FAB  084E               	movf	trapmf@d+2,w
  6823  0FAC  00A5               	movwf	___ftadd@f1+2
  6824  0FAD  0840               	movf	trapmf@x,w
  6825  0FAE  00A0               	movwf	___ftneg@f1
  6826  0FAF  0841               	movf	trapmf@x+1,w
  6827  0FB0  00A1               	movwf	___ftneg@f1+1
  6828  0FB1  0842               	movf	trapmf@x+2,w
  6829  0FB2                     L19:	
  6830  0FB2  00A2               	movwf	___ftneg@f1+2
  6831  0FB3  160A  118A  240E  120A  158A  	fcall	___ftneg
  6832  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0FBA  0820               	movf	?___ftneg,w
  6835  0FBB  00A6               	movwf	___ftadd@f2
  6836  0FBC  0821               	movf	?___ftneg+1,w
  6837  0FBD  00A7               	movwf	___ftadd@f2+1
  6838  0FBE  0822               	movf	?___ftneg+2,w
  6839  0FBF  00A8               	movwf	___ftadd@f2+2
  6840  0FC0  120A  158A  2332  120A  158A  	fcall	___ftadd
  6841  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  6842  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  6843  0FC7  0823               	movf	?___ftadd,w
  6844  0FC8  00B3               	movwf	___ftdiv@f1
  6845  0FC9  0824               	movf	?___ftadd+1,w
  6846  0FCA  00B4               	movwf	___ftdiv@f1+1
  6847  0FCB  0825               	movf	?___ftadd+2,w
  6848  0FCC  00B5               	movwf	___ftdiv@f1+2
  6849  0FCD  120A  118A  2747  120A  158A  	fcall	___ftdiv
  6850  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  6851  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  6852  0FD4  0830               	movf	?___ftdiv,w
  6853  0FD5  00CF               	movwf	trapmf@ua
  6854  0FD6  0831               	movf	?___ftdiv+1,w
  6855  0FD7  00D0               	movwf	trapmf@ua+1
  6856  0FD8  0832               	movf	?___ftdiv+2,w
  6857  0FD9  2FF6               	goto	L16
  6858  0FDA                     i1l2237:	
  6859                           
  6860                           ;main.c: 94: else if (x > d)
  6861  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6862  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6863  0FDC  084C               	movf	trapmf@d,w
  6864  0FDD  00B0               	movwf	___ftge@ff1
  6865  0FDE  084D               	movf	trapmf@d+1,w
  6866  0FDF  00B1               	movwf	___ftge@ff1+1
  6867  0FE0  084E               	movf	trapmf@d+2,w
  6868  0FE1  00B2               	movwf	___ftge@ff1+2
  6869  0FE2  0840               	movf	trapmf@x,w
  6870  0FE3  00B3               	movwf	___ftge@ff2
  6871  0FE4  0841               	movf	trapmf@x+1,w
  6872  0FE5  00B4               	movwf	___ftge@ff2+1
  6873  0FE6  0842               	movf	trapmf@x+2,w
  6874  0FE7  00B5               	movwf	___ftge@ff2+2
  6875  0FE8  160A  118A  2640  120A  158A  	fcall	___ftge
  6876  0FED  1803               	btfsc	3,0
  6877  0FEE  2FF7               	goto	i1l120
  6878  0FEF                     L17:	
  6879                           
  6880                           ;main.c: 95: ua = 0;
  6881  0FEF  3000               	movlw	0
  6882  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  6883  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  6884  0FF2  00CF               	movwf	trapmf@ua
  6885  0FF3  3000               	movlw	0
  6886  0FF4  00D0               	movwf	trapmf@ua+1
  6887  0FF5  3000               	movlw	0
  6888  0FF6                     L16:	
  6889  0FF6  00D1               	movwf	trapmf@ua+2
  6890  0FF7                     i1l120:	
  6891                           
  6892                           ;main.c: 97: return(ua);
  6893  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6894  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6895  0FF9  084F               	movf	trapmf@ua,w
  6896  0FFA  00C0               	movwf	?_trapmf
  6897  0FFB  0850               	movf	trapmf@ua+1,w
  6898  0FFC  00C1               	movwf	?_trapmf+1
  6899  0FFD  0851               	movf	trapmf@ua+2,w
  6900  0FFE  00C2               	movwf	?_trapmf+2
  6901  0FFF  0008               	return
  6902  1000                     __end_of_trapmf:	
  6903                           
  6904                           	psect	text27
  6905  140E                     __ptext27:	
  6906 ;; *************** function ___ftneg *****************
  6907 ;; Defined at:
  6908 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  f1              3    0[BANK0 ] float 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  3    0[BANK0 ] float 
  6915 ;; Registers used:
  6916 ;;		wreg
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6922 ;;      Params:         0       3       0       0       0
  6923 ;;      Locals:         0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0
  6925 ;;      Totals:         0       3       0       0       0
  6926 ;;Total ram usage:        3 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_trimf
  6932 ;;		_trapmf
  6933 ;;		_Fuzzy
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function ___ftneg
  6939  140E                     ___ftneg:	
  6940                           
  6941                           ;incstack = 0
  6942                           ; Regs used in ___ftneg: [wreg]
  6943  140E  1283               	bcf	3,5	;RP0=0, select bank0
  6944  140F  1303               	bcf	3,6	;RP1=0, select bank0
  6945  1410  0822               	movf	___ftneg@f1+2,w
  6946  1411  0421               	iorwf	___ftneg@f1+1,w
  6947  1412  0420               	iorwf	___ftneg@f1,w
  6948  1413  1903               	skipnz
  6949  1414  0008               	return
  6950  1415  3080               	movlw	128
  6951  1416  06A2               	xorwf	___ftneg@f1+2,f
  6952  1417  0008               	return
  6953  1418                     __end_of___ftneg:	
  6954                           
  6955                           	psect	text28
  6956  0747                     __ptext28:	
  6957 ;; *************** function ___ftdiv *****************
  6958 ;; Defined at:
  6959 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  f2              3   16[BANK0 ] float 
  6962 ;;  f1              3   19[BANK0 ] float 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  f3              3   27[BANK0 ] float 
  6965 ;;  sign            1   31[BANK0 ] unsigned char 
  6966 ;;  exp             1   30[BANK0 ] unsigned char 
  6967 ;;  cntr            1   26[BANK0 ] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  3   16[BANK0 ] float 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, pclath, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6977 ;;      Params:         0       6       0       0       0
  6978 ;;      Locals:         0       6       0       0       0
  6979 ;;      Temps:          0       4       0       0       0
  6980 ;;      Totals:         0      16       0       0       0
  6981 ;;Total ram usage:       16 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    1
  6984 ;; This function calls:
  6985 ;;		___ftpack
  6986 ;; This function is called by:
  6987 ;;		_trimf
  6988 ;;		_trapmf
  6989 ;;		_Fuzzy
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function ___ftdiv
  6995  0747                     ___ftdiv:	
  6996                           
  6997                           ;incstack = 0
  6998                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6999  0747  1283               	bcf	3,5	;RP0=0, select bank0
  7000  0748  1303               	bcf	3,6	;RP1=0, select bank0
  7001  0749  0833               	movf	___ftdiv@f1,w
  7002  074A  00B6               	movwf	??___ftdiv
  7003  074B  0834               	movf	___ftdiv@f1+1,w
  7004  074C  00B7               	movwf	??___ftdiv+1
  7005  074D  0835               	movf	___ftdiv@f1+2,w
  7006  074E  00B8               	movwf	??___ftdiv+2
  7007  074F  1003               	clrc
  7008  0750  0D37               	rlf	??___ftdiv+1,w
  7009  0751  0D38               	rlf	??___ftdiv+2,w
  7010  0752  00B9               	movwf	??___ftdiv+3
  7011  0753  0839               	movf	??___ftdiv+3,w
  7012  0754  00BE               	movwf	___ftdiv@exp
  7013  0755  08BE               	movf	___ftdiv@exp,f
  7014  0756  1D03               	skipz
  7015  0757  2F5F               	goto	i1l2125
  7016  0758  3000               	movlw	0
  7017  0759  00B0               	movwf	?___ftdiv
  7018  075A  3000               	movlw	0
  7019  075B  00B1               	movwf	?___ftdiv+1
  7020  075C  3000               	movlw	0
  7021  075D  00B2               	movwf	?___ftdiv+2
  7022  075E  0008               	return
  7023  075F                     i1l2125:	
  7024  075F  0830               	movf	___ftdiv@f2,w
  7025  0760  00B6               	movwf	??___ftdiv
  7026  0761  0831               	movf	___ftdiv@f2+1,w
  7027  0762  00B7               	movwf	??___ftdiv+1
  7028  0763  0832               	movf	___ftdiv@f2+2,w
  7029  0764  00B8               	movwf	??___ftdiv+2
  7030  0765  1003               	clrc
  7031  0766  0D37               	rlf	??___ftdiv+1,w
  7032  0767  0D38               	rlf	??___ftdiv+2,w
  7033  0768  00B9               	movwf	??___ftdiv+3
  7034  0769  0839               	movf	??___ftdiv+3,w
  7035  076A  00BF               	movwf	___ftdiv@sign
  7036  076B  08BF               	movf	___ftdiv@sign,f
  7037  076C  1D03               	skipz
  7038  076D  2F75               	goto	i1l2131
  7039  076E  3000               	movlw	0
  7040  076F  00B0               	movwf	?___ftdiv
  7041  0770  3000               	movlw	0
  7042  0771  00B1               	movwf	?___ftdiv+1
  7043  0772  3000               	movlw	0
  7044  0773  00B2               	movwf	?___ftdiv+2
  7045  0774  0008               	return
  7046  0775                     i1l2131:	
  7047  0775  3000               	movlw	0
  7048  0776  00BB               	movwf	___ftdiv@f3
  7049  0777  3000               	movlw	0
  7050  0778  00BC               	movwf	___ftdiv@f3+1
  7051  0779  3000               	movlw	0
  7052  077A  00BD               	movwf	___ftdiv@f3+2
  7053  077B  3089               	movlw	137
  7054  077C  073F               	addwf	___ftdiv@sign,w
  7055  077D  00B6               	movwf	??___ftdiv
  7056  077E  0836               	movf	??___ftdiv,w
  7057  077F  02BE               	subwf	___ftdiv@exp,f
  7058  0780  0833               	movf	___ftdiv@f1,w
  7059  0781  00B6               	movwf	??___ftdiv
  7060  0782  0834               	movf	___ftdiv@f1+1,w
  7061  0783  00B7               	movwf	??___ftdiv+1
  7062  0784  0835               	movf	___ftdiv@f1+2,w
  7063  0785  00B8               	movwf	??___ftdiv+2
  7064  0786  3010               	movlw	16
  7065  0787                     u212_25:	
  7066  0787  1003               	clrc
  7067  0788  0CB8               	rrf	??___ftdiv+2,f
  7068  0789  0CB7               	rrf	??___ftdiv+1,f
  7069  078A  0CB6               	rrf	??___ftdiv,f
  7070  078B  3EFF               	addlw	-1
  7071  078C  1D03               	skipz
  7072  078D  2F87               	goto	u212_25
  7073  078E  0836               	movf	??___ftdiv,w
  7074  078F  00B9               	movwf	??___ftdiv+3
  7075  0790  0839               	movf	??___ftdiv+3,w
  7076  0791  00BF               	movwf	___ftdiv@sign
  7077  0792  0830               	movf	___ftdiv@f2,w
  7078  0793  00B6               	movwf	??___ftdiv
  7079  0794  0831               	movf	___ftdiv@f2+1,w
  7080  0795  00B7               	movwf	??___ftdiv+1
  7081  0796  0832               	movf	___ftdiv@f2+2,w
  7082  0797  00B8               	movwf	??___ftdiv+2
  7083  0798  3010               	movlw	16
  7084  0799                     u213_25:	
  7085  0799  1003               	clrc
  7086  079A  0CB8               	rrf	??___ftdiv+2,f
  7087  079B  0CB7               	rrf	??___ftdiv+1,f
  7088  079C  0CB6               	rrf	??___ftdiv,f
  7089  079D  3EFF               	addlw	-1
  7090  079E  1D03               	skipz
  7091  079F  2F99               	goto	u213_25
  7092  07A0  0836               	movf	??___ftdiv,w
  7093  07A1  00B9               	movwf	??___ftdiv+3
  7094  07A2  0839               	movf	??___ftdiv+3,w
  7095  07A3  06BF               	xorwf	___ftdiv@sign,f
  7096  07A4  3080               	movlw	128
  7097  07A5  00B6               	movwf	??___ftdiv
  7098  07A6  0836               	movf	??___ftdiv,w
  7099  07A7  05BF               	andwf	___ftdiv@sign,f
  7100  07A8  17B4               	bsf	___ftdiv@f1+1,7
  7101  07A9  30FF               	movlw	255
  7102  07AA  05B3               	andwf	___ftdiv@f1,f
  7103  07AB  30FF               	movlw	255
  7104  07AC  05B4               	andwf	___ftdiv@f1+1,f
  7105  07AD  3000               	movlw	0
  7106  07AE  05B5               	andwf	___ftdiv@f1+2,f
  7107  07AF  17B1               	bsf	___ftdiv@f2+1,7
  7108  07B0  30FF               	movlw	255
  7109  07B1  05B0               	andwf	___ftdiv@f2,f
  7110  07B2  30FF               	movlw	255
  7111  07B3  05B1               	andwf	___ftdiv@f2+1,f
  7112  07B4  3000               	movlw	0
  7113  07B5  05B2               	andwf	___ftdiv@f2+2,f
  7114  07B6  3018               	movlw	24
  7115  07B7  00B6               	movwf	??___ftdiv
  7116  07B8  0836               	movf	??___ftdiv,w
  7117  07B9  00BA               	movwf	___ftdiv@cntr
  7118  07BA                     i1l2145:	
  7119  07BA  3001               	movlw	1
  7120  07BB                     u214_25:	
  7121  07BB  1003               	clrc
  7122  07BC  0DBB               	rlf	___ftdiv@f3,f
  7123  07BD  0DBC               	rlf	___ftdiv@f3+1,f
  7124  07BE  0DBD               	rlf	___ftdiv@f3+2,f
  7125  07BF  3EFF               	addlw	-1
  7126  07C0  1D03               	skipz
  7127  07C1  2FBB               	goto	u214_25
  7128  07C2  0832               	movf	___ftdiv@f2+2,w
  7129  07C3  0235               	subwf	___ftdiv@f1+2,w
  7130  07C4  1D03               	skipz
  7131  07C5  2FCC               	goto	u215_25
  7132  07C6  0831               	movf	___ftdiv@f2+1,w
  7133  07C7  0234               	subwf	___ftdiv@f1+1,w
  7134  07C8  1D03               	skipz
  7135  07C9  2FCC               	goto	u215_25
  7136  07CA  0830               	movf	___ftdiv@f2,w
  7137  07CB  0233               	subwf	___ftdiv@f1,w
  7138  07CC                     u215_25:	
  7139  07CC  1C03               	skipc
  7140  07CD  2FD9               	goto	i1l2153
  7141  07CE  0830               	movf	___ftdiv@f2,w
  7142  07CF  02B3               	subwf	___ftdiv@f1,f
  7143  07D0  0831               	movf	___ftdiv@f2+1,w
  7144  07D1  1C03               	skipc
  7145  07D2  0F31               	incfsz	___ftdiv@f2+1,w
  7146  07D3  02B4               	subwf	___ftdiv@f1+1,f
  7147  07D4  0832               	movf	___ftdiv@f2+2,w
  7148  07D5  1C03               	skipc
  7149  07D6  0A32               	incf	___ftdiv@f2+2,w
  7150  07D7  02B5               	subwf	___ftdiv@f1+2,f
  7151  07D8  143B               	bsf	___ftdiv@f3,0
  7152  07D9                     i1l2153:	
  7153  07D9  3001               	movlw	1
  7154  07DA                     u216_25:	
  7155  07DA  1003               	clrc
  7156  07DB  0DB3               	rlf	___ftdiv@f1,f
  7157  07DC  0DB4               	rlf	___ftdiv@f1+1,f
  7158  07DD  0DB5               	rlf	___ftdiv@f1+2,f
  7159  07DE  3EFF               	addlw	-1
  7160  07DF  1D03               	skipz
  7161  07E0  2FDA               	goto	u216_25
  7162  07E1  3001               	movlw	1
  7163  07E2  02BA               	subwf	___ftdiv@cntr,f
  7164  07E3  1D03               	btfss	3,2
  7165  07E4  2FBA               	goto	i1l2145
  7166  07E5  083B               	movf	___ftdiv@f3,w
  7167  07E6  00F0               	movwf	___ftpack@arg
  7168  07E7  083C               	movf	___ftdiv@f3+1,w
  7169  07E8  00F1               	movwf	___ftpack@arg+1
  7170  07E9  083D               	movf	___ftdiv@f3+2,w
  7171  07EA  00F2               	movwf	___ftpack@arg+2
  7172  07EB  083E               	movf	___ftdiv@exp,w
  7173  07EC  00B6               	movwf	??___ftdiv
  7174  07ED  0836               	movf	??___ftdiv,w
  7175  07EE  00F3               	movwf	___ftpack@exp
  7176  07EF  083F               	movf	___ftdiv@sign,w
  7177  07F0  00B7               	movwf	??___ftdiv+1
  7178  07F1  0837               	movf	??___ftdiv+1,w
  7179  07F2  00F4               	movwf	___ftpack@sign
  7180  07F3  160A  118A  269F   	fcall	___ftpack
  7181  07F6  0870               	movf	?___ftpack,w
  7182  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  7183  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  7184  07F9  00B0               	movwf	?___ftdiv
  7185  07FA  0871               	movf	?___ftpack+1,w
  7186  07FB  00B1               	movwf	?___ftdiv+1
  7187  07FC  0872               	movf	?___ftpack+2,w
  7188  07FD  00B2               	movwf	?___ftdiv+2
  7189  07FE  0008               	return
  7190  07FF                     __end_of___ftdiv:	
  7191                           
  7192                           	psect	text29
  7193  0B32                     __ptext29:	
  7194 ;; *************** function ___ftadd *****************
  7195 ;; Defined at:
  7196 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  f1              3    3[BANK0 ] float 
  7199 ;;  f2              3    6[BANK0 ] float 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  exp1            1   15[BANK0 ] unsigned char 
  7202 ;;  exp2            1   14[BANK0 ] unsigned char 
  7203 ;;  sign            1   13[BANK0 ] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  3    3[BANK0 ] float 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0, pclath, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7213 ;;      Params:         0       6       0       0       0
  7214 ;;      Locals:         0       3       0       0       0
  7215 ;;      Temps:          0       4       0       0       0
  7216 ;;      Totals:         0      13       0       0       0
  7217 ;;Total ram usage:       13 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    1
  7220 ;; This function calls:
  7221 ;;		___ftpack
  7222 ;; This function is called by:
  7223 ;;		_trimf
  7224 ;;		_trapmf
  7225 ;;		_Fuzzy
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           
  7230                           ;psect for function ___ftadd
  7231  0B32                     ___ftadd:	
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7235  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  7236  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  7237  0B34  0823               	movf	___ftadd@f1,w
  7238  0B35  00A9               	movwf	??___ftadd
  7239  0B36  0824               	movf	___ftadd@f1+1,w
  7240  0B37  00AA               	movwf	??___ftadd+1
  7241  0B38  0825               	movf	___ftadd@f1+2,w
  7242  0B39  00AB               	movwf	??___ftadd+2
  7243  0B3A  1003               	clrc
  7244  0B3B  0D2A               	rlf	??___ftadd+1,w
  7245  0B3C  0D2B               	rlf	??___ftadd+2,w
  7246  0B3D  00AC               	movwf	??___ftadd+3
  7247  0B3E  082C               	movf	??___ftadd+3,w
  7248  0B3F  00AF               	movwf	___ftadd@exp1
  7249  0B40  0826               	movf	___ftadd@f2,w
  7250  0B41  00A9               	movwf	??___ftadd
  7251  0B42  0827               	movf	___ftadd@f2+1,w
  7252  0B43  00AA               	movwf	??___ftadd+1
  7253  0B44  0828               	movf	___ftadd@f2+2,w
  7254  0B45  00AB               	movwf	??___ftadd+2
  7255  0B46  1003               	clrc
  7256  0B47  0D2A               	rlf	??___ftadd+1,w
  7257  0B48  0D2B               	rlf	??___ftadd+2,w
  7258  0B49  00AC               	movwf	??___ftadd+3
  7259  0B4A  082C               	movf	??___ftadd+3,w
  7260  0B4B  00AE               	movwf	___ftadd@exp2
  7261  0B4C  082F               	movf	___ftadd@exp1,w
  7262  0B4D  1903               	btfsc	3,2
  7263  0B4E  2B5B               	goto	i1l2055
  7264  0B4F  082E               	movf	___ftadd@exp2,w
  7265  0B50  022F               	subwf	___ftadd@exp1,w
  7266  0B51  1803               	skipnc
  7267  0B52  2B62               	goto	i1l2059
  7268  0B53  032F               	decf	___ftadd@exp1,w
  7269  0B54  3AFF               	xorlw	255
  7270  0B55  072E               	addwf	___ftadd@exp2,w
  7271  0B56  00A9               	movwf	??___ftadd
  7272  0B57  3019               	movlw	25
  7273  0B58  0229               	subwf	??___ftadd,w
  7274  0B59  1C03               	skipc
  7275  0B5A  2B62               	goto	i1l2059
  7276  0B5B                     i1l2055:	
  7277  0B5B  0826               	movf	___ftadd@f2,w
  7278  0B5C  00A3               	movwf	?___ftadd
  7279  0B5D  0827               	movf	___ftadd@f2+1,w
  7280  0B5E  00A4               	movwf	?___ftadd+1
  7281  0B5F  0828               	movf	___ftadd@f2+2,w
  7282  0B60  00A5               	movwf	?___ftadd+2
  7283  0B61  0008               	return
  7284  0B62                     i1l2059:	
  7285  0B62  082E               	movf	___ftadd@exp2,w
  7286  0B63  1903               	btfsc	3,2
  7287  0B64  0008               	return
  7288  0B65  082F               	movf	___ftadd@exp1,w
  7289  0B66  022E               	subwf	___ftadd@exp2,w
  7290  0B67  1803               	skipnc
  7291  0B68  2B71               	goto	i1l2065
  7292  0B69  032E               	decf	___ftadd@exp2,w
  7293  0B6A  3AFF               	xorlw	255
  7294  0B6B  072F               	addwf	___ftadd@exp1,w
  7295  0B6C  00A9               	movwf	??___ftadd
  7296  0B6D  3019               	movlw	25
  7297  0B6E  0229               	subwf	??___ftadd,w
  7298  0B6F  1803               	btfsc	3,0
  7299  0B70  0008               	return
  7300  0B71                     i1l2065:	
  7301  0B71  3006               	movlw	6
  7302  0B72  00A9               	movwf	??___ftadd
  7303  0B73  0829               	movf	??___ftadd,w
  7304  0B74  00AD               	movwf	___ftadd@sign
  7305  0B75  1BA5               	btfsc	___ftadd@f1+2,7
  7306  0B76  17AD               	bsf	___ftadd@sign,7
  7307  0B77  1BA8               	btfsc	___ftadd@f2+2,7
  7308  0B78  172D               	bsf	___ftadd@sign,6
  7309  0B79  17A4               	bsf	___ftadd@f1+1,7
  7310  0B7A  30FF               	movlw	255
  7311  0B7B  05A3               	andwf	___ftadd@f1,f
  7312  0B7C  30FF               	movlw	255
  7313  0B7D  05A4               	andwf	___ftadd@f1+1,f
  7314  0B7E  3000               	movlw	0
  7315  0B7F  05A5               	andwf	___ftadd@f1+2,f
  7316  0B80  17A7               	bsf	___ftadd@f2+1,7
  7317  0B81  30FF               	movlw	255
  7318  0B82  05A6               	andwf	___ftadd@f2,f
  7319  0B83  30FF               	movlw	255
  7320  0B84  05A7               	andwf	___ftadd@f2+1,f
  7321  0B85  3000               	movlw	0
  7322  0B86  05A8               	andwf	___ftadd@f2+2,f
  7323  0B87  082E               	movf	___ftadd@exp2,w
  7324  0B88  022F               	subwf	___ftadd@exp1,w
  7325  0B89  1803               	skipnc
  7326  0B8A  2BB1               	goto	i1l2087
  7327  0B8B                     i1l2077:	
  7328  0B8B  3001               	movlw	1
  7329  0B8C                     u195_25:	
  7330  0B8C  1003               	clrc
  7331  0B8D  0DA6               	rlf	___ftadd@f2,f
  7332  0B8E  0DA7               	rlf	___ftadd@f2+1,f
  7333  0B8F  0DA8               	rlf	___ftadd@f2+2,f
  7334  0B90  3EFF               	addlw	-1
  7335  0B91  1D03               	skipz
  7336  0B92  2B8C               	goto	u195_25
  7337  0B93  3001               	movlw	1
  7338  0B94  02AE               	subwf	___ftadd@exp2,f
  7339  0B95  082E               	movf	___ftadd@exp2,w
  7340  0B96  062F               	xorwf	___ftadd@exp1,w
  7341  0B97  1903               	skipnz
  7342  0B98  2BAC               	goto	i1l2085
  7343  0B99  3001               	movlw	1
  7344  0B9A  02AD               	subwf	___ftadd@sign,f
  7345  0B9B  082D               	movf	___ftadd@sign,w
  7346  0B9C  3907               	andlw	7
  7347  0B9D  1903               	btfsc	3,2
  7348  0B9E  2BAC               	goto	i1l2085
  7349  0B9F  2B8B               	goto	i1l2077
  7350  0BA0                     i1l2083:	
  7351  0BA0  3001               	movlw	1
  7352  0BA1                     u198_25:	
  7353  0BA1  1003               	clrc
  7354  0BA2  0CA5               	rrf	___ftadd@f1+2,f
  7355  0BA3  0CA4               	rrf	___ftadd@f1+1,f
  7356  0BA4  0CA3               	rrf	___ftadd@f1,f
  7357  0BA5  3EFF               	addlw	-1
  7358  0BA6  1D03               	skipz
  7359  0BA7  2BA1               	goto	u198_25
  7360  0BA8  3001               	movlw	1
  7361  0BA9  00A9               	movwf	??___ftadd
  7362  0BAA  0829               	movf	??___ftadd,w
  7363  0BAB  07AF               	addwf	___ftadd@exp1,f
  7364  0BAC                     i1l2085:	
  7365  0BAC  082F               	movf	___ftadd@exp1,w
  7366  0BAD  062E               	xorwf	___ftadd@exp2,w
  7367  0BAE  1903               	btfsc	3,2
  7368  0BAF  2BDA               	goto	i1l732
  7369  0BB0  2BA0               	goto	i1l2083
  7370  0BB1                     i1l2087:	
  7371  0BB1  082F               	movf	___ftadd@exp1,w
  7372  0BB2  022E               	subwf	___ftadd@exp2,w
  7373  0BB3  1803               	skipnc
  7374  0BB4  2BDA               	goto	i1l732
  7375  0BB5                     i1l2089:	
  7376  0BB5  3001               	movlw	1
  7377  0BB6                     u201_25:	
  7378  0BB6  1003               	clrc
  7379  0BB7  0DA3               	rlf	___ftadd@f1,f
  7380  0BB8  0DA4               	rlf	___ftadd@f1+1,f
  7381  0BB9  0DA5               	rlf	___ftadd@f1+2,f
  7382  0BBA  3EFF               	addlw	-1
  7383  0BBB  1D03               	skipz
  7384  0BBC  2BB6               	goto	u201_25
  7385  0BBD  3001               	movlw	1
  7386  0BBE  02AF               	subwf	___ftadd@exp1,f
  7387  0BBF  082E               	movf	___ftadd@exp2,w
  7388  0BC0  062F               	xorwf	___ftadd@exp1,w
  7389  0BC1  1903               	skipnz
  7390  0BC2  2BD6               	goto	i1l2097
  7391  0BC3  3001               	movlw	1
  7392  0BC4  02AD               	subwf	___ftadd@sign,f
  7393  0BC5  082D               	movf	___ftadd@sign,w
  7394  0BC6  3907               	andlw	7
  7395  0BC7  1903               	btfsc	3,2
  7396  0BC8  2BD6               	goto	i1l2097
  7397  0BC9  2BB5               	goto	i1l2089
  7398  0BCA                     i1l2095:	
  7399  0BCA  3001               	movlw	1
  7400  0BCB                     u204_25:	
  7401  0BCB  1003               	clrc
  7402  0BCC  0CA8               	rrf	___ftadd@f2+2,f
  7403  0BCD  0CA7               	rrf	___ftadd@f2+1,f
  7404  0BCE  0CA6               	rrf	___ftadd@f2,f
  7405  0BCF  3EFF               	addlw	-1
  7406  0BD0  1D03               	skipz
  7407  0BD1  2BCB               	goto	u204_25
  7408  0BD2  3001               	movlw	1
  7409  0BD3  00A9               	movwf	??___ftadd
  7410  0BD4  0829               	movf	??___ftadd,w
  7411  0BD5  07AE               	addwf	___ftadd@exp2,f
  7412  0BD6                     i1l2097:	
  7413  0BD6  082F               	movf	___ftadd@exp1,w
  7414  0BD7  062E               	xorwf	___ftadd@exp2,w
  7415  0BD8  1D03               	skipz
  7416  0BD9  2BCA               	goto	i1l2095
  7417  0BDA                     i1l732:	
  7418  0BDA  1FAD               	btfss	___ftadd@sign,7
  7419  0BDB  2BEC               	goto	i1l2101
  7420  0BDC  30FF               	movlw	255
  7421  0BDD  06A3               	xorwf	___ftadd@f1,f
  7422  0BDE  30FF               	movlw	255
  7423  0BDF  06A4               	xorwf	___ftadd@f1+1,f
  7424  0BE0  30FF               	movlw	255
  7425  0BE1  06A5               	xorwf	___ftadd@f1+2,f
  7426  0BE2  3001               	movlw	1
  7427  0BE3  07A3               	addwf	___ftadd@f1,f
  7428  0BE4  3000               	movlw	0
  7429  0BE5  1803               	skipnc
  7430  0BE6  3001               	movlw	1
  7431  0BE7  07A4               	addwf	___ftadd@f1+1,f
  7432  0BE8  3000               	movlw	0
  7433  0BE9  1803               	skipnc
  7434  0BEA  3001               	movlw	1
  7435  0BEB  07A5               	addwf	___ftadd@f1+2,f
  7436  0BEC                     i1l2101:	
  7437  0BEC  1F2D               	btfss	___ftadd@sign,6
  7438  0BED  2BFE               	goto	i1l2105
  7439  0BEE  30FF               	movlw	255
  7440  0BEF  06A6               	xorwf	___ftadd@f2,f
  7441  0BF0  30FF               	movlw	255
  7442  0BF1  06A7               	xorwf	___ftadd@f2+1,f
  7443  0BF2  30FF               	movlw	255
  7444  0BF3  06A8               	xorwf	___ftadd@f2+2,f
  7445  0BF4  3001               	movlw	1
  7446  0BF5  07A6               	addwf	___ftadd@f2,f
  7447  0BF6  3000               	movlw	0
  7448  0BF7  1803               	skipnc
  7449  0BF8  3001               	movlw	1
  7450  0BF9  07A7               	addwf	___ftadd@f2+1,f
  7451  0BFA  3000               	movlw	0
  7452  0BFB  1803               	skipnc
  7453  0BFC  3001               	movlw	1
  7454  0BFD  07A8               	addwf	___ftadd@f2+2,f
  7455  0BFE                     i1l2105:	
  7456  0BFE  01AD               	clrf	___ftadd@sign
  7457  0BFF  0823               	movf	___ftadd@f1,w
  7458  0C00  07A6               	addwf	___ftadd@f2,f
  7459  0C01  0824               	movf	___ftadd@f1+1,w
  7460  0C02  1103               	clrz
  7461  0C03  1803               	skipnc
  7462  0C04  0A24               	incf	___ftadd@f1+1,w
  7463  0C05  1D03               	btfss	3,2
  7464  0C06  07A7               	addwf	___ftadd@f2+1,f
  7465  0C07  0825               	movf	___ftadd@f1+2,w
  7466  0C08  1103               	clrz
  7467  0C09  1803               	skipnc
  7468  0C0A  0A25               	incf	___ftadd@f1+2,w
  7469  0C0B  1D03               	btfss	3,2
  7470  0C0C  07A8               	addwf	___ftadd@f2+2,f
  7471  0C0D  1FA8               	btfss	___ftadd@f2+2,7
  7472  0C0E  2C21               	goto	i1l2115
  7473  0C0F  30FF               	movlw	255
  7474  0C10  06A6               	xorwf	___ftadd@f2,f
  7475  0C11  30FF               	movlw	255
  7476  0C12  06A7               	xorwf	___ftadd@f2+1,f
  7477  0C13  30FF               	movlw	255
  7478  0C14  06A8               	xorwf	___ftadd@f2+2,f
  7479  0C15  3001               	movlw	1
  7480  0C16  07A6               	addwf	___ftadd@f2,f
  7481  0C17  3000               	movlw	0
  7482  0C18  1803               	skipnc
  7483  0C19  3001               	movlw	1
  7484  0C1A  07A7               	addwf	___ftadd@f2+1,f
  7485  0C1B  3000               	movlw	0
  7486  0C1C  1803               	skipnc
  7487  0C1D  3001               	movlw	1
  7488  0C1E  07A8               	addwf	___ftadd@f2+2,f
  7489  0C1F  01AD               	clrf	___ftadd@sign
  7490  0C20  0AAD               	incf	___ftadd@sign,f
  7491  0C21                     i1l2115:	
  7492  0C21  0826               	movf	___ftadd@f2,w
  7493  0C22  00F0               	movwf	___ftpack@arg
  7494  0C23  0827               	movf	___ftadd@f2+1,w
  7495  0C24  00F1               	movwf	___ftpack@arg+1
  7496  0C25  0828               	movf	___ftadd@f2+2,w
  7497  0C26  00F2               	movwf	___ftpack@arg+2
  7498  0C27  082F               	movf	___ftadd@exp1,w
  7499  0C28  00A9               	movwf	??___ftadd
  7500  0C29  0829               	movf	??___ftadd,w
  7501  0C2A  00F3               	movwf	___ftpack@exp
  7502  0C2B  082D               	movf	___ftadd@sign,w
  7503  0C2C  00AA               	movwf	??___ftadd+1
  7504  0C2D  082A               	movf	??___ftadd+1,w
  7505  0C2E  00F4               	movwf	___ftpack@sign
  7506  0C2F  160A  118A  269F   	fcall	___ftpack
  7507  0C32  0870               	movf	?___ftpack,w
  7508  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  7509  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  7510  0C35  00A3               	movwf	?___ftadd
  7511  0C36  0871               	movf	?___ftpack+1,w
  7512  0C37  00A4               	movwf	?___ftadd+1
  7513  0C38  0872               	movf	?___ftpack+2,w
  7514  0C39  00A5               	movwf	?___ftadd+2
  7515  0C3A  0008               	return
  7516  0C3B                     __end_of___ftadd:	
  7517                           
  7518                           	psect	text30
  7519  14E1                     __ptext30:	
  7520 ;; *************** function _max_val *****************
  7521 ;; Defined at:
  7522 ;;		line 145 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  a               3   28[BANK0 ] float 
  7525 ;;  b               3   31[BANK0 ] float 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  3   28[BANK0 ] float 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7537 ;;      Params:         0       6       0       0       0
  7538 ;;      Locals:         0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0
  7540 ;;      Totals:         0       6       0       0       0
  7541 ;;Total ram usage:        6 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    1
  7544 ;; This function calls:
  7545 ;;		___ftge
  7546 ;; This function is called by:
  7547 ;;		_Fuzzy
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           
  7552                           ;psect for function _max_val
  7553  14E1                     _max_val:	
  7554                           
  7555                           ;main.c: 147: if (a > b)
  7556                           
  7557                           ;incstack = 0
  7558                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  7559  14E1  1283               	bcf	3,5	;RP0=0, select bank0
  7560  14E2  1303               	bcf	3,6	;RP1=0, select bank0
  7561  14E3  083F               	movf	max_val@b,w
  7562  14E4  00B0               	movwf	___ftge@ff1
  7563  14E5  0840               	movf	max_val@b+1,w
  7564  14E6  00B1               	movwf	___ftge@ff1+1
  7565  14E7  0841               	movf	max_val@b+2,w
  7566  14E8  00B2               	movwf	___ftge@ff1+2
  7567  14E9  083C               	movf	max_val@a,w
  7568  14EA  00B3               	movwf	___ftge@ff2
  7569  14EB  083D               	movf	max_val@a+1,w
  7570  14EC  00B4               	movwf	___ftge@ff2+1
  7571  14ED  083E               	movf	max_val@a+2,w
  7572  14EE  00B5               	movwf	___ftge@ff2+2
  7573  14EF  160A  118A  2640  160A  118A  	fcall	___ftge
  7574  14F4  1C03               	btfss	3,0
  7575  14F5  0008               	return
  7576                           
  7577                           ;main.c: 149: else
  7578                           ;main.c: 150: return b;
  7579                           
  7580                           ;main.c: 148: return a;
  7581  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  7582  14F7  1303               	bcf	3,6	;RP1=0, select bank0
  7583  14F8  083F               	movf	max_val@b,w
  7584  14F9  00BC               	movwf	?_max_val
  7585  14FA  0840               	movf	max_val@b+1,w
  7586  14FB  00BD               	movwf	?_max_val+1
  7587  14FC  0841               	movf	max_val@b+2,w
  7588  14FD  00BE               	movwf	?_max_val+2
  7589  14FE  0008               	return
  7590  14FF                     __end_of_max_val:	
  7591                           
  7592                           	psect	text31
  7593  1640                     __ptext31:	
  7594 ;; *************** function ___ftge *****************
  7595 ;; Defined at:
  7596 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  ff1             3   16[BANK0 ] float 
  7599 ;;  ff2             3   19[BANK0 ] float 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;		None
  7602 ;; Return value:  Size  Location     Type
  7603 ;;		None               void
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7611 ;;      Params:         0       6       0       0       0
  7612 ;;      Locals:         0       0       0       0       0
  7613 ;;      Temps:          0       6       0       0       0
  7614 ;;      Totals:         0      12       0       0       0
  7615 ;;Total ram usage:       12 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_trimf
  7621 ;;		_trapmf
  7622 ;;		_max_val
  7623 ;;		_Fuzzy
  7624 ;;		_min_val
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function ___ftge
  7630  1640                     ___ftge:	
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7634  1640  1283               	bcf	3,5	;RP0=0, select bank0
  7635  1641  1303               	bcf	3,6	;RP1=0, select bank0
  7636  1642  1FB2               	btfss	___ftge@ff1+2,7
  7637  1643  2E69               	goto	i1l2165
  7638  1644  3000               	movlw	0
  7639  1645  00B6               	movwf	??___ftge
  7640  1646  3000               	movlw	0
  7641  1647  00B7               	movwf	??___ftge+1
  7642  1648  3080               	movlw	128
  7643  1649  00B8               	movwf	??___ftge+2
  7644  164A  0930               	comf	___ftge@ff1,w
  7645  164B  00B9               	movwf	??___ftge+3
  7646  164C  0931               	comf	___ftge@ff1+1,w
  7647  164D  00BA               	movwf	??___ftge+4
  7648  164E  0932               	comf	___ftge@ff1+2,w
  7649  164F  00BB               	movwf	??___ftge+5
  7650  1650  0AB9               	incf	??___ftge+3,f
  7651  1651  1903               	skipnz
  7652  1652  0ABA               	incf	??___ftge+4,f
  7653  1653  1903               	skipnz
  7654  1654  0ABB               	incf	??___ftge+5,f
  7655  1655  0839               	movf	??___ftge+3,w
  7656  1656  07B6               	addwf	??___ftge,f
  7657  1657  083A               	movf	??___ftge+4,w
  7658  1658  1803               	skipnc
  7659  1659  0F3A               	incfsz	??___ftge+4,w
  7660  165A  2E5C               	goto	u219_21
  7661  165B  2E5D               	goto	u219_22
  7662  165C                     u219_21:	
  7663  165C  07B7               	addwf	??___ftge+1,f
  7664  165D                     u219_22:	
  7665  165D  083B               	movf	??___ftge+5,w
  7666  165E  1803               	skipnc
  7667  165F  0F3B               	incfsz	??___ftge+5,w
  7668  1660  2E62               	goto	u219_23
  7669  1661  2E63               	goto	u219_24
  7670  1662                     u219_23:	
  7671  1662  07B8               	addwf	??___ftge+2,f
  7672  1663                     u219_24:	
  7673  1663  0836               	movf	??___ftge,w
  7674  1664  00B0               	movwf	___ftge@ff1
  7675  1665  0837               	movf	??___ftge+1,w
  7676  1666  00B1               	movwf	___ftge@ff1+1
  7677  1667  0838               	movf	??___ftge+2,w
  7678  1668  00B2               	movwf	___ftge@ff1+2
  7679  1669                     i1l2165:	
  7680  1669  1FB5               	btfss	___ftge@ff2+2,7
  7681  166A  2E90               	goto	i1l2169
  7682  166B  3000               	movlw	0
  7683  166C  00B6               	movwf	??___ftge
  7684  166D  3000               	movlw	0
  7685  166E  00B7               	movwf	??___ftge+1
  7686  166F  3080               	movlw	128
  7687  1670  00B8               	movwf	??___ftge+2
  7688  1671  0933               	comf	___ftge@ff2,w
  7689  1672  00B9               	movwf	??___ftge+3
  7690  1673  0934               	comf	___ftge@ff2+1,w
  7691  1674  00BA               	movwf	??___ftge+4
  7692  1675  0935               	comf	___ftge@ff2+2,w
  7693  1676  00BB               	movwf	??___ftge+5
  7694  1677  0AB9               	incf	??___ftge+3,f
  7695  1678  1903               	skipnz
  7696  1679  0ABA               	incf	??___ftge+4,f
  7697  167A  1903               	skipnz
  7698  167B  0ABB               	incf	??___ftge+5,f
  7699  167C  0839               	movf	??___ftge+3,w
  7700  167D  07B6               	addwf	??___ftge,f
  7701  167E  083A               	movf	??___ftge+4,w
  7702  167F  1803               	skipnc
  7703  1680  0F3A               	incfsz	??___ftge+4,w
  7704  1681  2E83               	goto	u221_21
  7705  1682  2E84               	goto	u221_22
  7706  1683                     u221_21:	
  7707  1683  07B7               	addwf	??___ftge+1,f
  7708  1684                     u221_22:	
  7709  1684  083B               	movf	??___ftge+5,w
  7710  1685  1803               	skipnc
  7711  1686  0F3B               	incfsz	??___ftge+5,w
  7712  1687  2E89               	goto	u221_23
  7713  1688  2E8A               	goto	u221_24
  7714  1689                     u221_23:	
  7715  1689  07B8               	addwf	??___ftge+2,f
  7716  168A                     u221_24:	
  7717  168A  0836               	movf	??___ftge,w
  7718  168B  00B3               	movwf	___ftge@ff2
  7719  168C  0837               	movf	??___ftge+1,w
  7720  168D  00B4               	movwf	___ftge@ff2+1
  7721  168E  0838               	movf	??___ftge+2,w
  7722  168F  00B5               	movwf	___ftge@ff2+2
  7723  1690                     i1l2169:	
  7724  1690  3080               	movlw	128
  7725  1691  06B2               	xorwf	___ftge@ff1+2,f
  7726  1692  3080               	movlw	128
  7727  1693  06B5               	xorwf	___ftge@ff2+2,f
  7728  1694  0835               	movf	___ftge@ff2+2,w
  7729  1695  0232               	subwf	___ftge@ff1+2,w
  7730  1696  1D03               	skipz
  7731  1697  0008               	return
  7732  1698  0834               	movf	___ftge@ff2+1,w
  7733  1699  0231               	subwf	___ftge@ff1+1,w
  7734  169A  1D03               	skipz
  7735  169B  0008               	return
  7736  169C  0833               	movf	___ftge@ff2,w
  7737  169D  0230               	subwf	___ftge@ff1,w
  7738  169E  0008               	return
  7739  169F                     __end_of___ftge:	
  7740                           
  7741                           	psect	text32
  7742  1450                     __ptext32:	
  7743 ;; *************** function ___lwtoft *****************
  7744 ;; Defined at:
  7745 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  c               2    8[COMMON] unsigned int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  3    8[COMMON] float 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, pclath, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7759 ;;      Params:         3       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0
  7761 ;;      Temps:          1       0       0       0       0
  7762 ;;      Totals:         4       0       0       0       0
  7763 ;;Total ram usage:        4 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    1
  7766 ;; This function calls:
  7767 ;;		___ftpack
  7768 ;; This function is called by:
  7769 ;;		_Fuzzy
  7770 ;;		_ISR
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           
  7775                           ;psect for function ___lwtoft
  7776  1450                     ___lwtoft:	
  7777                           
  7778                           ;incstack = 0
  7779                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7780  1450  0878               	movf	___lwtoft@c,w
  7781  1451  00F0               	movwf	___ftpack@arg
  7782  1452  0879               	movf	___lwtoft@c+1,w
  7783  1453  00F1               	movwf	___ftpack@arg+1
  7784  1454  01F2               	clrf	___ftpack@arg+2
  7785  1455  308E               	movlw	142
  7786  1456  00FB               	movwf	??___lwtoft
  7787  1457  087B               	movf	??___lwtoft,w
  7788  1458  00F3               	movwf	___ftpack@exp
  7789  1459  01F4               	clrf	___ftpack@sign
  7790  145A  160A  118A  269F   	fcall	___ftpack
  7791  145D  0870               	movf	?___ftpack,w
  7792  145E  00F8               	movwf	?___lwtoft
  7793  145F  0871               	movf	?___ftpack+1,w
  7794  1460  00F9               	movwf	?___lwtoft+1
  7795  1461  0872               	movf	?___ftpack+2,w
  7796  1462  00FA               	movwf	?___lwtoft+2
  7797  1463  0008               	return
  7798  1464                     __end_of___lwtoft:	
  7799                           
  7800                           	psect	text33
  7801  1772                     __ptext33:	
  7802 ;; *************** function ___fttol *****************
  7803 ;; Defined at:
  7804 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  f1              3   16[BANK0 ] float 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  lval            4   25[BANK0 ] unsigned long 
  7809 ;;  exp1            1   29[BANK0 ] unsigned char 
  7810 ;;  sign1           1   24[BANK0 ] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  4   16[BANK0 ] long 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7820 ;;      Params:         0       4       0       0       0
  7821 ;;      Locals:         0       6       0       0       0
  7822 ;;      Temps:          0       4       0       0       0
  7823 ;;      Totals:         0      14       0       0       0
  7824 ;;Total ram usage:       14 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_Fuzzy
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           
  7834                           ;psect for function ___fttol
  7835  1772                     ___fttol:	
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7839  1772  1283               	bcf	3,5	;RP0=0, select bank0
  7840  1773  1303               	bcf	3,6	;RP1=0, select bank0
  7841  1774  0830               	movf	___fttol@f1,w
  7842  1775  00B4               	movwf	??___fttol
  7843  1776  0831               	movf	___fttol@f1+1,w
  7844  1777  00B5               	movwf	??___fttol+1
  7845  1778  0832               	movf	___fttol@f1+2,w
  7846  1779  00B6               	movwf	??___fttol+2
  7847  177A  1003               	clrc
  7848  177B  0D35               	rlf	??___fttol+1,w
  7849  177C  0D36               	rlf	??___fttol+2,w
  7850  177D  00B7               	movwf	??___fttol+3
  7851  177E  0837               	movf	??___fttol+3,w
  7852  177F  00BD               	movwf	___fttol@exp1
  7853  1780  08BD               	movf	___fttol@exp1,f
  7854  1781  1D03               	skipz
  7855  1782  2F8C               	goto	i1l2385
  7856  1783  3000               	movlw	0
  7857  1784  00B3               	movwf	?___fttol+3
  7858  1785  3000               	movlw	0
  7859  1786  00B2               	movwf	?___fttol+2
  7860  1787  3000               	movlw	0
  7861  1788  00B1               	movwf	?___fttol+1
  7862  1789  3000               	movlw	0
  7863  178A  00B0               	movwf	?___fttol
  7864  178B  0008               	return
  7865  178C                     i1l2385:	
  7866  178C  0830               	movf	___fttol@f1,w
  7867  178D  00B4               	movwf	??___fttol
  7868  178E  0831               	movf	___fttol@f1+1,w
  7869  178F  00B5               	movwf	??___fttol+1
  7870  1790  0832               	movf	___fttol@f1+2,w
  7871  1791  00B6               	movwf	??___fttol+2
  7872  1792  3017               	movlw	23
  7873  1793                     u269_25:	
  7874  1793  1003               	clrc
  7875  1794  0CB6               	rrf	??___fttol+2,f
  7876  1795  0CB5               	rrf	??___fttol+1,f
  7877  1796  0CB4               	rrf	??___fttol,f
  7878  1797  3EFF               	addlw	-1
  7879  1798  1D03               	skipz
  7880  1799  2F93               	goto	u269_25
  7881  179A  0834               	movf	??___fttol,w
  7882  179B  00B7               	movwf	??___fttol+3
  7883  179C  0837               	movf	??___fttol+3,w
  7884  179D  00B8               	movwf	___fttol@sign1
  7885  179E  17B1               	bsf	___fttol@f1+1,7
  7886  179F  30FF               	movlw	255
  7887  17A0  05B0               	andwf	___fttol@f1,f
  7888  17A1  30FF               	movlw	255
  7889  17A2  05B1               	andwf	___fttol@f1+1,f
  7890  17A3  3000               	movlw	0
  7891  17A4  05B2               	andwf	___fttol@f1+2,f
  7892  17A5  0830               	movf	___fttol@f1,w
  7893  17A6  00B9               	movwf	___fttol@lval
  7894  17A7  0831               	movf	___fttol@f1+1,w
  7895  17A8  00BA               	movwf	___fttol@lval+1
  7896  17A9  0832               	movf	___fttol@f1+2,w
  7897  17AA  00BB               	movwf	___fttol@lval+2
  7898  17AB  01BC               	clrf	___fttol@lval+3
  7899  17AC  308E               	movlw	142
  7900  17AD  02BD               	subwf	___fttol@exp1,f
  7901  17AE  1FBD               	btfss	___fttol@exp1,7
  7902  17AF  2FCE               	goto	i1l2405
  7903  17B0  083D               	movf	___fttol@exp1,w
  7904  17B1  3A80               	xorlw	128
  7905  17B2  3E8F               	addlw	143
  7906  17B3  1803               	skipnc
  7907  17B4  2FBE               	goto	i1l2403
  7908  17B5  3000               	movlw	0
  7909  17B6  00B3               	movwf	?___fttol+3
  7910  17B7  3000               	movlw	0
  7911  17B8  00B2               	movwf	?___fttol+2
  7912  17B9  3000               	movlw	0
  7913  17BA  00B1               	movwf	?___fttol+1
  7914  17BB  3000               	movlw	0
  7915  17BC  00B0               	movwf	?___fttol
  7916  17BD  0008               	return
  7917  17BE                     i1l2403:	
  7918  17BE  3001               	movlw	1
  7919  17BF                     u272_25:	
  7920  17BF  1003               	clrc
  7921  17C0  0CBC               	rrf	___fttol@lval+3,f
  7922  17C1  0CBB               	rrf	___fttol@lval+2,f
  7923  17C2  0CBA               	rrf	___fttol@lval+1,f
  7924  17C3  0CB9               	rrf	___fttol@lval,f
  7925  17C4  3EFF               	addlw	-1
  7926  17C5  1D03               	skipz
  7927  17C6  2FBF               	goto	u272_25
  7928  17C7  3001               	movlw	1
  7929  17C8  00B4               	movwf	??___fttol
  7930  17C9  0834               	movf	??___fttol,w
  7931  17CA  07BD               	addwf	___fttol@exp1,f
  7932  17CB  1903               	btfsc	3,2
  7933  17CC  2FE9               	goto	i1l2415
  7934  17CD  2FBE               	goto	i1l2403
  7935  17CE                     i1l2405:	
  7936  17CE  3018               	movlw	24
  7937  17CF  023D               	subwf	___fttol@exp1,w
  7938  17D0  1C03               	skipc
  7939  17D1  2FE6               	goto	i1l2413
  7940  17D2  3000               	movlw	0
  7941  17D3  00B3               	movwf	?___fttol+3
  7942  17D4  3000               	movlw	0
  7943  17D5  00B2               	movwf	?___fttol+2
  7944  17D6  3000               	movlw	0
  7945  17D7  00B1               	movwf	?___fttol+1
  7946  17D8  3000               	movlw	0
  7947  17D9  00B0               	movwf	?___fttol
  7948  17DA  0008               	return
  7949  17DB                     i1l2411:	
  7950  17DB  3001               	movlw	1
  7951  17DC  00B4               	movwf	??___fttol
  7952  17DD                     u275_25:	
  7953  17DD  1003               	clrc
  7954  17DE  0DB9               	rlf	___fttol@lval,f
  7955  17DF  0DBA               	rlf	___fttol@lval+1,f
  7956  17E0  0DBB               	rlf	___fttol@lval+2,f
  7957  17E1  0DBC               	rlf	___fttol@lval+3,f
  7958  17E2  0BB4               	decfsz	??___fttol,f
  7959  17E3  2FDD               	goto	u275_25
  7960  17E4  3001               	movlw	1
  7961  17E5  02BD               	subwf	___fttol@exp1,f
  7962  17E6                     i1l2413:	
  7963  17E6  08BD               	movf	___fttol@exp1,f
  7964  17E7  1D03               	skipz
  7965  17E8  2FDB               	goto	i1l2411
  7966  17E9                     i1l2415:	
  7967  17E9  0838               	movf	___fttol@sign1,w
  7968  17EA  1903               	btfsc	3,2
  7969  17EB  2FF7               	goto	i1l2419
  7970  17EC  09B9               	comf	___fttol@lval,f
  7971  17ED  09BA               	comf	___fttol@lval+1,f
  7972  17EE  09BB               	comf	___fttol@lval+2,f
  7973  17EF  09BC               	comf	___fttol@lval+3,f
  7974  17F0  0AB9               	incf	___fttol@lval,f
  7975  17F1  1903               	skipnz
  7976  17F2  0ABA               	incf	___fttol@lval+1,f
  7977  17F3  1903               	skipnz
  7978  17F4  0ABB               	incf	___fttol@lval+2,f
  7979  17F5  1903               	skipnz
  7980  17F6  0ABC               	incf	___fttol@lval+3,f
  7981  17F7                     i1l2419:	
  7982  17F7  083C               	movf	___fttol@lval+3,w
  7983  17F8  00B3               	movwf	?___fttol+3
  7984  17F9  083B               	movf	___fttol@lval+2,w
  7985  17FA  00B2               	movwf	?___fttol+2
  7986  17FB  083A               	movf	___fttol@lval+1,w
  7987  17FC  00B1               	movwf	?___fttol+1
  7988  17FD  0839               	movf	___fttol@lval,w
  7989  17FE  00B0               	movwf	?___fttol
  7990  17FF  0008               	return
  7991  1800                     __end_of___fttol:	
  7992                           
  7993                           	psect	text34
  7994  098A                     __ptext34:	
  7995 ;; *************** function ___ftmul *****************
  7996 ;; Defined at:
  7997 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  f1              3    8[COMMON] float 
  8000 ;;  f2              3   11[COMMON] float 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  8003 ;;  sign            1    9[BANK0 ] unsigned char 
  8004 ;;  cntr            1    8[BANK0 ] unsigned char 
  8005 ;;  exp             1    4[BANK0 ] unsigned char 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  3    8[COMMON] float 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2, status,0, pclath, cstack
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8015 ;;      Params:         6       0       0       0       0
  8016 ;;      Locals:         0       6       0       0       0
  8017 ;;      Temps:          0       4       0       0       0
  8018 ;;      Totals:         6      10       0       0       0
  8019 ;;Total ram usage:       16 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    1
  8022 ;; This function calls:
  8023 ;;		___ftpack
  8024 ;; This function is called by:
  8025 ;;		_Fuzzy
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           
  8030                           ;psect for function ___ftmul
  8031  098A                     ___ftmul:	
  8032                           
  8033                           ;incstack = 0
  8034                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8035  098A  0878               	movf	___ftmul@f1,w
  8036  098B  1283               	bcf	3,5	;RP0=0, select bank0
  8037  098C  1303               	bcf	3,6	;RP1=0, select bank0
  8038  098D  00A0               	movwf	??___ftmul
  8039  098E  0879               	movf	___ftmul@f1+1,w
  8040  098F  00A1               	movwf	??___ftmul+1
  8041  0990  087A               	movf	___ftmul@f1+2,w
  8042  0991  00A2               	movwf	??___ftmul+2
  8043  0992  1003               	clrc
  8044  0993  0D21               	rlf	??___ftmul+1,w
  8045  0994  0D22               	rlf	??___ftmul+2,w
  8046  0995  00A3               	movwf	??___ftmul+3
  8047  0996  0823               	movf	??___ftmul+3,w
  8048  0997  00A4               	movwf	___ftmul@exp
  8049  0998  08A4               	movf	___ftmul@exp,f
  8050  0999  1D03               	skipz
  8051  099A  29A2               	goto	i1l2335
  8052  099B  3000               	movlw	0
  8053  099C  00F8               	movwf	?___ftmul
  8054  099D  3000               	movlw	0
  8055  099E  00F9               	movwf	?___ftmul+1
  8056  099F  3000               	movlw	0
  8057  09A0  00FA               	movwf	?___ftmul+2
  8058  09A1  0008               	return
  8059  09A2                     i1l2335:	
  8060  09A2  087B               	movf	___ftmul@f2,w
  8061  09A3  00A0               	movwf	??___ftmul
  8062  09A4  087C               	movf	___ftmul@f2+1,w
  8063  09A5  00A1               	movwf	??___ftmul+1
  8064  09A6  087D               	movf	___ftmul@f2+2,w
  8065  09A7  00A2               	movwf	??___ftmul+2
  8066  09A8  1003               	clrc
  8067  09A9  0D21               	rlf	??___ftmul+1,w
  8068  09AA  0D22               	rlf	??___ftmul+2,w
  8069  09AB  00A3               	movwf	??___ftmul+3
  8070  09AC  0823               	movf	??___ftmul+3,w
  8071  09AD  00A9               	movwf	___ftmul@sign
  8072  09AE  08A9               	movf	___ftmul@sign,f
  8073  09AF  1D03               	skipz
  8074  09B0  29B8               	goto	i1l2341
  8075  09B1  3000               	movlw	0
  8076  09B2  00F8               	movwf	?___ftmul
  8077  09B3  3000               	movlw	0
  8078  09B4  00F9               	movwf	?___ftmul+1
  8079  09B5  3000               	movlw	0
  8080  09B6  00FA               	movwf	?___ftmul+2
  8081  09B7  0008               	return
  8082  09B8                     i1l2341:	
  8083  09B8  0829               	movf	___ftmul@sign,w
  8084  09B9  3E7B               	addlw	123
  8085  09BA  00A0               	movwf	??___ftmul
  8086  09BB  0820               	movf	??___ftmul,w
  8087  09BC  07A4               	addwf	___ftmul@exp,f
  8088  09BD  0878               	movf	___ftmul@f1,w
  8089  09BE  00A0               	movwf	??___ftmul
  8090  09BF  0879               	movf	___ftmul@f1+1,w
  8091  09C0  00A1               	movwf	??___ftmul+1
  8092  09C1  087A               	movf	___ftmul@f1+2,w
  8093  09C2  00A2               	movwf	??___ftmul+2
  8094  09C3  3010               	movlw	16
  8095  09C4                     u256_25:	
  8096  09C4  1003               	clrc
  8097  09C5  0CA2               	rrf	??___ftmul+2,f
  8098  09C6  0CA1               	rrf	??___ftmul+1,f
  8099  09C7  0CA0               	rrf	??___ftmul,f
  8100  09C8  3EFF               	addlw	-1
  8101  09C9  1D03               	skipz
  8102  09CA  29C4               	goto	u256_25
  8103  09CB  0820               	movf	??___ftmul,w
  8104  09CC  00A3               	movwf	??___ftmul+3
  8105  09CD  0823               	movf	??___ftmul+3,w
  8106  09CE  00A9               	movwf	___ftmul@sign
  8107  09CF  087B               	movf	___ftmul@f2,w
  8108  09D0  00A0               	movwf	??___ftmul
  8109  09D1  087C               	movf	___ftmul@f2+1,w
  8110  09D2  00A1               	movwf	??___ftmul+1
  8111  09D3  087D               	movf	___ftmul@f2+2,w
  8112  09D4  00A2               	movwf	??___ftmul+2
  8113  09D5  3010               	movlw	16
  8114  09D6                     u257_25:	
  8115  09D6  1003               	clrc
  8116  09D7  0CA2               	rrf	??___ftmul+2,f
  8117  09D8  0CA1               	rrf	??___ftmul+1,f
  8118  09D9  0CA0               	rrf	??___ftmul,f
  8119  09DA  3EFF               	addlw	-1
  8120  09DB  1D03               	skipz
  8121  09DC  29D6               	goto	u257_25
  8122  09DD  0820               	movf	??___ftmul,w
  8123  09DE  00A3               	movwf	??___ftmul+3
  8124  09DF  0823               	movf	??___ftmul+3,w
  8125  09E0  06A9               	xorwf	___ftmul@sign,f
  8126  09E1  3080               	movlw	128
  8127  09E2  00A0               	movwf	??___ftmul
  8128  09E3  0820               	movf	??___ftmul,w
  8129  09E4  05A9               	andwf	___ftmul@sign,f
  8130  09E5  17F9               	bsf	___ftmul@f1+1,7
  8131  09E6  17FC               	bsf	___ftmul@f2+1,7
  8132  09E7  30FF               	movlw	255
  8133  09E8  05FB               	andwf	___ftmul@f2,f
  8134  09E9  30FF               	movlw	255
  8135  09EA  05FC               	andwf	___ftmul@f2+1,f
  8136  09EB  3000               	movlw	0
  8137  09EC  05FD               	andwf	___ftmul@f2+2,f
  8138  09ED  3000               	movlw	0
  8139  09EE  00A5               	movwf	___ftmul@f3_as_product
  8140  09EF  3000               	movlw	0
  8141  09F0  00A6               	movwf	___ftmul@f3_as_product+1
  8142  09F1  3000               	movlw	0
  8143  09F2  00A7               	movwf	___ftmul@f3_as_product+2
  8144  09F3  3007               	movlw	7
  8145  09F4  00A0               	movwf	??___ftmul
  8146  09F5  0820               	movf	??___ftmul,w
  8147  09F6  00A8               	movwf	___ftmul@cntr
  8148  09F7                     i1l2353:	
  8149  09F7  1C78               	btfss	___ftmul@f1,0
  8150  09F8  2A07               	goto	i1l2357
  8151  09F9  087B               	movf	___ftmul@f2,w
  8152  09FA  07A5               	addwf	___ftmul@f3_as_product,f
  8153  09FB  087C               	movf	___ftmul@f2+1,w
  8154  09FC  1103               	clrz
  8155  09FD  1803               	skipnc
  8156  09FE  0A7C               	incf	___ftmul@f2+1,w
  8157  09FF  1D03               	btfss	3,2
  8158  0A00  07A6               	addwf	___ftmul@f3_as_product+1,f
  8159  0A01  087D               	movf	___ftmul@f2+2,w
  8160  0A02  1103               	clrz
  8161  0A03  1803               	skipnc
  8162  0A04  0A7D               	incf	___ftmul@f2+2,w
  8163  0A05  1D03               	btfss	3,2
  8164  0A06  07A7               	addwf	___ftmul@f3_as_product+2,f
  8165  0A07                     i1l2357:	
  8166  0A07  3001               	movlw	1
  8167  0A08                     u260_25:	
  8168  0A08  1003               	clrc
  8169  0A09  0CFA               	rrf	___ftmul@f1+2,f
  8170  0A0A  0CF9               	rrf	___ftmul@f1+1,f
  8171  0A0B  0CF8               	rrf	___ftmul@f1,f
  8172  0A0C  3EFF               	addlw	-1
  8173  0A0D  1D03               	skipz
  8174  0A0E  2A08               	goto	u260_25
  8175  0A0F  3001               	movlw	1
  8176  0A10                     u261_25:	
  8177  0A10  1003               	clrc
  8178  0A11  0DFB               	rlf	___ftmul@f2,f
  8179  0A12  0DFC               	rlf	___ftmul@f2+1,f
  8180  0A13  0DFD               	rlf	___ftmul@f2+2,f
  8181  0A14  3EFF               	addlw	-1
  8182  0A15  1D03               	skipz
  8183  0A16  2A10               	goto	u261_25
  8184  0A17  3001               	movlw	1
  8185  0A18  02A8               	subwf	___ftmul@cntr,f
  8186  0A19  1D03               	btfss	3,2
  8187  0A1A  29F7               	goto	i1l2353
  8188  0A1B  3009               	movlw	9
  8189  0A1C  00A0               	movwf	??___ftmul
  8190  0A1D  0820               	movf	??___ftmul,w
  8191  0A1E  00A8               	movwf	___ftmul@cntr
  8192  0A1F                     i1l2365:	
  8193  0A1F  1C78               	btfss	___ftmul@f1,0
  8194  0A20  2A2F               	goto	i1l2369
  8195  0A21  087B               	movf	___ftmul@f2,w
  8196  0A22  07A5               	addwf	___ftmul@f3_as_product,f
  8197  0A23  087C               	movf	___ftmul@f2+1,w
  8198  0A24  1103               	clrz
  8199  0A25  1803               	skipnc
  8200  0A26  0A7C               	incf	___ftmul@f2+1,w
  8201  0A27  1D03               	btfss	3,2
  8202  0A28  07A6               	addwf	___ftmul@f3_as_product+1,f
  8203  0A29  087D               	movf	___ftmul@f2+2,w
  8204  0A2A  1103               	clrz
  8205  0A2B  1803               	skipnc
  8206  0A2C  0A7D               	incf	___ftmul@f2+2,w
  8207  0A2D  1D03               	btfss	3,2
  8208  0A2E  07A7               	addwf	___ftmul@f3_as_product+2,f
  8209  0A2F                     i1l2369:	
  8210  0A2F  3001               	movlw	1
  8211  0A30                     u265_25:	
  8212  0A30  1003               	clrc
  8213  0A31  0CFA               	rrf	___ftmul@f1+2,f
  8214  0A32  0CF9               	rrf	___ftmul@f1+1,f
  8215  0A33  0CF8               	rrf	___ftmul@f1,f
  8216  0A34  3EFF               	addlw	-1
  8217  0A35  1D03               	skipz
  8218  0A36  2A30               	goto	u265_25
  8219  0A37  3001               	movlw	1
  8220  0A38                     u266_25:	
  8221  0A38  1003               	clrc
  8222  0A39  0CA7               	rrf	___ftmul@f3_as_product+2,f
  8223  0A3A  0CA6               	rrf	___ftmul@f3_as_product+1,f
  8224  0A3B  0CA5               	rrf	___ftmul@f3_as_product,f
  8225  0A3C  3EFF               	addlw	-1
  8226  0A3D  1D03               	skipz
  8227  0A3E  2A38               	goto	u266_25
  8228  0A3F  3001               	movlw	1
  8229  0A40  02A8               	subwf	___ftmul@cntr,f
  8230  0A41  1D03               	btfss	3,2
  8231  0A42  2A1F               	goto	i1l2365
  8232  0A43  0825               	movf	___ftmul@f3_as_product,w
  8233  0A44  00F0               	movwf	___ftpack@arg
  8234  0A45  0826               	movf	___ftmul@f3_as_product+1,w
  8235  0A46  00F1               	movwf	___ftpack@arg+1
  8236  0A47  0827               	movf	___ftmul@f3_as_product+2,w
  8237  0A48  00F2               	movwf	___ftpack@arg+2
  8238  0A49  0824               	movf	___ftmul@exp,w
  8239  0A4A  00A0               	movwf	??___ftmul
  8240  0A4B  0820               	movf	??___ftmul,w
  8241  0A4C  00F3               	movwf	___ftpack@exp
  8242  0A4D  0829               	movf	___ftmul@sign,w
  8243  0A4E  00A1               	movwf	??___ftmul+1
  8244  0A4F  0821               	movf	??___ftmul+1,w
  8245  0A50  00F4               	movwf	___ftpack@sign
  8246  0A51  160A  118A  269F   	fcall	___ftpack
  8247  0A54  0870               	movf	?___ftpack,w
  8248  0A55  00F8               	movwf	?___ftmul
  8249  0A56  0871               	movf	?___ftpack+1,w
  8250  0A57  00F9               	movwf	?___ftmul+1
  8251  0A58  0872               	movf	?___ftpack+2,w
  8252  0A59  00FA               	movwf	?___ftmul+2
  8253  0A5A  0008               	return
  8254  0A5B                     __end_of___ftmul:	
  8255                           
  8256                           	psect	text35
  8257  169F                     __ptext35:	
  8258 ;; *************** function ___ftpack *****************
  8259 ;; Defined at:
  8260 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  arg             3    0[COMMON] unsigned um
  8263 ;;  exp             1    3[COMMON] unsigned char 
  8264 ;;  sign            1    4[COMMON] unsigned char 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  3    0[COMMON] float 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8276 ;;      Params:         5       0       0       0       0
  8277 ;;      Locals:         0       0       0       0       0
  8278 ;;      Temps:          3       0       0       0       0
  8279 ;;      Totals:         8       0       0       0       0
  8280 ;;Total ram usage:        8 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		___ftadd
  8286 ;;		___ftdiv
  8287 ;;		___ftmul
  8288 ;;		___lwtoft
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           
  8293                           ;psect for function ___ftpack
  8294  169F                     ___ftpack:	
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8298  169F  0873               	movf	___ftpack@exp,w
  8299  16A0  1903               	btfsc	3,2
  8300  16A1  2EA7               	goto	i1l2017
  8301  16A2  0872               	movf	___ftpack@arg+2,w
  8302  16A3  0471               	iorwf	___ftpack@arg+1,w
  8303  16A4  0470               	iorwf	___ftpack@arg,w
  8304  16A5  1D03               	skipz
  8305  16A6  2EBA               	goto	i1l2023
  8306  16A7                     i1l2017:	
  8307  16A7  3000               	movlw	0
  8308  16A8  00F0               	movwf	?___ftpack
  8309  16A9  3000               	movlw	0
  8310  16AA  00F1               	movwf	?___ftpack+1
  8311  16AB  3000               	movlw	0
  8312  16AC  00F2               	movwf	?___ftpack+2
  8313  16AD  0008               	return
  8314  16AE                     i1l2021:	
  8315  16AE  3001               	movlw	1
  8316  16AF  00F5               	movwf	??___ftpack
  8317  16B0  0875               	movf	??___ftpack,w
  8318  16B1  07F3               	addwf	___ftpack@exp,f
  8319  16B2  3001               	movlw	1
  8320  16B3                     u176_25:	
  8321  16B3  1003               	clrc
  8322  16B4  0CF2               	rrf	___ftpack@arg+2,f
  8323  16B5  0CF1               	rrf	___ftpack@arg+1,f
  8324  16B6  0CF0               	rrf	___ftpack@arg,f
  8325  16B7  3EFF               	addlw	-1
  8326  16B8  1D03               	skipz
  8327  16B9  2EB3               	goto	u176_25
  8328  16BA                     i1l2023:	
  8329  16BA  30FE               	movlw	254
  8330  16BB  0572               	andwf	___ftpack@arg+2,w
  8331  16BC  1903               	btfsc	3,2
  8332  16BD  2ED5               	goto	i1l703
  8333  16BE  2EAE               	goto	i1l2021
  8334  16BF                     i1l2025:	
  8335  16BF  3001               	movlw	1
  8336  16C0  00F5               	movwf	??___ftpack
  8337  16C1  0875               	movf	??___ftpack,w
  8338  16C2  07F3               	addwf	___ftpack@exp,f
  8339  16C3  3001               	movlw	1
  8340  16C4  07F0               	addwf	___ftpack@arg,f
  8341  16C5  3000               	movlw	0
  8342  16C6  1803               	skipnc
  8343  16C7  3001               	movlw	1
  8344  16C8  07F1               	addwf	___ftpack@arg+1,f
  8345  16C9  3000               	movlw	0
  8346  16CA  1803               	skipnc
  8347  16CB  3001               	movlw	1
  8348  16CC  07F2               	addwf	___ftpack@arg+2,f
  8349  16CD  3001               	movlw	1
  8350  16CE                     u178_25:	
  8351  16CE  1003               	clrc
  8352  16CF  0CF2               	rrf	___ftpack@arg+2,f
  8353  16D0  0CF1               	rrf	___ftpack@arg+1,f
  8354  16D1  0CF0               	rrf	___ftpack@arg,f
  8355  16D2  3EFF               	addlw	-1
  8356  16D3  1D03               	skipz
  8357  16D4  2ECE               	goto	u178_25
  8358  16D5                     i1l703:	
  8359  16D5  30FF               	movlw	255
  8360  16D6  0572               	andwf	___ftpack@arg+2,w
  8361  16D7  1903               	btfsc	3,2
  8362  16D8  2EE4               	goto	i1l2033
  8363  16D9  2EBF               	goto	i1l2025
  8364  16DA                     i1l2031:	
  8365  16DA  3001               	movlw	1
  8366  16DB  02F3               	subwf	___ftpack@exp,f
  8367  16DC  3001               	movlw	1
  8368  16DD                     u180_25:	
  8369  16DD  1003               	clrc
  8370  16DE  0DF0               	rlf	___ftpack@arg,f
  8371  16DF  0DF1               	rlf	___ftpack@arg+1,f
  8372  16E0  0DF2               	rlf	___ftpack@arg+2,f
  8373  16E1  3EFF               	addlw	-1
  8374  16E2  1D03               	skipz
  8375  16E3  2EDD               	goto	u180_25
  8376  16E4                     i1l2033:	
  8377  16E4  1FF1               	btfss	___ftpack@arg+1,7
  8378  16E5  2EDA               	goto	i1l2031
  8379  16E6  1873               	btfsc	___ftpack@exp,0
  8380  16E7  2EEE               	goto	i1l709
  8381  16E8  30FF               	movlw	255
  8382  16E9  05F0               	andwf	___ftpack@arg,f
  8383  16EA  307F               	movlw	127
  8384  16EB  05F1               	andwf	___ftpack@arg+1,f
  8385  16EC  30FF               	movlw	255
  8386  16ED  05F2               	andwf	___ftpack@arg+2,f
  8387  16EE                     i1l709:	
  8388  16EE  1003               	clrc
  8389  16EF  0CF3               	rrf	___ftpack@exp,f
  8390  16F0  0873               	movf	___ftpack@exp,w
  8391  16F1  00F5               	movwf	??___ftpack
  8392  16F2  01F6               	clrf	??___ftpack+1
  8393  16F3  01F7               	clrf	??___ftpack+2
  8394  16F4  3010               	movlw	16
  8395  16F5                     u183_25:	
  8396  16F5  1003               	clrc
  8397  16F6  0DF5               	rlf	??___ftpack,f
  8398  16F7  0DF6               	rlf	??___ftpack+1,f
  8399  16F8  0DF7               	rlf	??___ftpack+2,f
  8400  16F9  3EFF               	addlw	-1
  8401  16FA  1D03               	skipz
  8402  16FB  2EF5               	goto	u183_25
  8403  16FC  0875               	movf	??___ftpack,w
  8404  16FD  04F0               	iorwf	___ftpack@arg,f
  8405  16FE  0876               	movf	??___ftpack+1,w
  8406  16FF  04F1               	iorwf	___ftpack@arg+1,f
  8407  1700  0877               	movf	??___ftpack+2,w
  8408  1701  04F2               	iorwf	___ftpack@arg+2,f
  8409  1702  0874               	movf	___ftpack@sign,w
  8410  1703  1903               	btfsc	3,2
  8411  1704  0008               	return
  8412  1705  17F2               	bsf	___ftpack@arg+2,7
  8413  1706  0008               	return
  8414  1707                     __end_of___ftpack:	
  8415  007E                     btemp	set	126	;btemp
  8416  007E                     wtemp	set	126
  8417  007E                     wtemp0	set	126
  8418  0080                     wtemp1	set	128
  8419  0082                     wtemp2	set	130
  8420  0084                     wtemp3	set	132
  8421  0086                     wtemp4	set	134
  8422  0088                     wtemp5	set	136
  8423  007F                     wtemp6	set	127
  8424  007E                     ttemp	set	126
  8425  007E                     ttemp0	set	126
  8426  0081                     ttemp1	set	129
  8427  0084                     ttemp2	set	132
  8428  0087                     ttemp3	set	135
  8429  007F                     ttemp4	set	127
  8430  007E                     ltemp	set	126
  8431  007E                     ltemp0	set	126
  8432  0082                     ltemp1	set	130
  8433  0086                     ltemp2	set	134
  8434  0080                     ltemp3	set	128


Data Sizes:
    Strings     77
    Constant    0
    Data        10
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     26      75
    BANK3            96      0      23
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___wmul
    _ISR->i1_PWM_DutyCycle2
    _send->___wmul
    ___wmul->___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1491
                                             23 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   61297
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     529
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     348
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___lwtoft
     ___ftpack
   ___wmul
     ___lwdiv (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___lwdiv (ARG)
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 11:43:12 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C7     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _tf 00E4                          fsr 0004         ___wmul@multiplicand 007A  
        ??i1_PWM_DutyCycle2 007C                ___ftadd@exp1 002F                ___ftadd@exp2 002E  
             _contagens_tm0 00BD                ___ftadd@sign 002D                         l597 0863  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 0D5F  
                       _rpm 00C1                         fsr0 0004                         _pwm 00E9  
                       _sum 00AF  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 00CB                __CFG_LVP$OFF 0000  
                      ?_ISR 0070                ___ftdiv@cntr 003A                ___ftdiv@sign 003F  
        LCD_WriteString@Str 00C9                        l2321 08C9                        l2307 0884  
                      l2325 08D7                        l2317 08BC                        l2309 0894  
                      l2299 0874                        l2753 15D1                        l2739 150D  
                      l2935 0AEA                        STR_1 1049                        STR_2 1038  
                      STR_3 1057                        STR_4 1010                        u3045 1555  
                      u2505 08AB                        u3065 0813                        u2515 08BD  
                      u3407 173B                        u3095 1534                        u3417 1747  
                      u3427 1755                        u2475 0888                        u3347 0AE3  
                      u3437 1763                        u3357 0B2B                        u3447 176F  
                      u3367 148C                        u2495 0896                        u3457 1519  
                      u3377 1711                        u3467 15B4                        u3387 1721  
                      u3477 15C2                        u3397 172F                        u3487 15CE  
                      u3497 1475                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 0A5B                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 08E0  
                      btemp 007E            __end_of_ADC_Init 1450                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 147B                ___ftmul@cntr 0028  
              ___ftmul@sign 0029     __end_of_USART_WriteChar 1406                       ??_ISR 0069  
              ___fttol@exp1 003D                ___fttol@lval 0039                 ?_TIMER0_Set 0070  
          __end_of_LCD_Init 1772             __end_of___aldiv 08E0                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 0C3B                       ?_send 0070  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 07FF             __end_of___ftneg 1418  
           __end_of___ftmul 0A5B                       _T1CON 0010             __end_of___fttol 1800  
           __end_of___lwdiv 1640                       i1l110 0D56                       i1l120 0FF7  
                     i1l222 13FF                       i1l147 00F3                       i1l178 0E9D  
                     i1l542 156B                       i1l703 16D5                       i1l732 0BDA  
                     i1l709 16EE                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 0039  
           __end_of_max_val 14FF               ___ftpack@sign 0074                       _trimf 0C3B  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 15A8                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 00C7              ?_LCD_WriteData 0070                 ?_USART_Init 00D6  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 0B32  
              __end_of_send 098A                      ??_main 00DE               ___fttol@sign1 0038  
                    ??_send 0020                ?_TIMER0_Init 0070           __end_of_LCD_Clear 15D1  
                Fuzzy@a_241 0059                  Fuzzy@a_242 005B                      ?_Fuzzy 0070  
                Fuzzy@freio 0052                  Fuzzy@reduz 0060                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _CCPR2L 001B                      _EECON2 018D            __end_of___ftpack 1707  
                    ?_trimf 0040                      i1l2021 16AE                      i1l2101 0BEC  
                    i1l2031 16DA                      i1l2023 16BA                      i1l2033 16E4  
                    i1l2025 16BF                      i1l2017 16A7                      i1l2105 0BFE  
                    i1l2201 0CB4                      i1l2115 0C21                      i1l2131 0775  
                    i1l2125 075F                      i1l2055 0B5B                      i1l2231 0F55  
                    i1l2207 0D39                      i1l2065 0B71                      i1l2153 07D9  
                    i1l2145 07BA                      i1l2225 0F23                      i1l2411 17DB  
                    i1l2403 17BE                      i1l2083 0BA0                      i1l2059 0B62  
                    i1l2341 09B8                      i1l2413 17E6                      i1l2405 17CE  
                    i1l2165 1669                      i1l2085 0BAC                      i1l2077 0B8B  
                    i1l2237 0FDA                      i1l2335 09A2                      i1l2415 17E9  
                    i1l2095 0BCA                      i1l2087 0BB1                      i1l2503 0111  
                    i1l2353 09F7                      i1l2169 1690                      i1l2097 0BD6  
                    i1l2089 0BB5                      i1l2521 01C2                      i1l2419 17F7  
                    i1l2531 02A3                      i1l2507 012E                      i1l2259 14C6  
                    i1l2365 0A1F                      i1l2357 0A07                      u201_25 0BB6  
                    i1l2525 023C                      i1l2621 149B                      i1l2461 0963  
                    i1l2551 03BA                      i1l2279 1563                      i1l2369 0A2F  
                    i1l2385 178C                      i1l2571 04B5                      i1l2547 0346  
                    i1l2581 0596                      i1l2557 0421                      i1l2629 14A7  
                    i1l2469 097F                      i1l2821 0D97                      i1l2813 0D7B  
                    i1l2591 05E5                      i1l2575 052F                      i1l2585 05B3  
                    i1l2841 0DDD                      i1l2833 0DC1                      i1l2825 0DA5  
                    i1l2817 0D89                      i1l2499 00F4                      i1l2781 1618  
                    i1l2845 0DEB                      i1l2837 0DCF                      i1l2829 0DB3  
                    i1l2791 1639                      i1l2871 0E42                      i1l2857 0E22  
                    i1l2849 0DF9                      i1l2787 162E                      i1l2779 160A  
                    i1l2859 0E25                      u204_25 0BCB                      u212_25 0787  
                    i1l2885 0E98                      i1l2887 0E99                      u221_21 1683  
                    u221_22 1684                      u221_23 1689                      u221_24 168A  
                    u213_25 0799                      u214_25 07BB                      u215_25 07CC  
                    u311_25 160D                      u216_25 07DA                      u313_25 1619  
                    u241_25 156C                      u314_25 1625                      u242_25 1573  
                    u219_21 165C                      u219_22 165D                      u219_23 1662  
                    u219_24 1663                      u315_25 162F                      u180_25 16DD  
                    u260_25 0A08                      u261_25 0A10                      u183_25 16F5  
                    u176_25 16B3                      u256_25 09C4                      u272_25 17BF  
                    u265_25 0A30                      u257_25 09D6            __end_of___lwtoft 1464  
                    u178_25 16CE                      u266_25 0A38                      u290_25 0344  
                    u275_25 17DD                      u195_25 0B8C                      u292_25 041F  
                    u269_25 1793                      u285_25 01C0         __size_of_TIMER0_Set 0008  
                    u198_25 0BA1                      u278_25 14BB                      u294_25 04B3  
                    u287_25 02A1                      u296_25 0594                      _SSPADD 0093  
                    _SSPBUF 0013                      Fuzzy@a 0057            LCD_WriteCmd@Byte 00C8  
                    ___ftge 1640                   ??___aldiv 00CF                      ___wmul 1561  
                 ??___ftadd 0029              _PWM_DutyCycle1 151F              _PWM_DutyCycle2 1540  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007C  
                    _deltaV 006D                   ??___ftmul 0020                   ??___fttol 0034  
                 ??___lwdiv 0074                      _buffer 0190                      _fitemp 00A3  
     USART_ReceiveChar@byte 0074                      _trapmf 0EAA                      _pulsos 00BF  
                    _status 00C5       ___ftmul@f3_as_product 0025                   ??_max_val 007C  
                 ?_ADC_Init 0070                      saved_w 007E         __size_of_USART_Init 0049  
                    trimf@a 0043                      trimf@b 0046                      trimf@c 0049  
                    trimf@x 0040               ?i1_TIMER0_Set 0070     __end_of__initialization 0035  
                 ?_LCD_Init 0070                  ___ftadd@f1 0023                  ___ftadd@f2 0026  
           ??_LCD_WriteData 00C7                  ___ftge@ff1 0030                  ___ftge@ff2 0033  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020      __end_of_PWM_DutyCycle1 1540      __end_of_PWM_DutyCycle2 1561  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 0030  
            __pcstackCOMMON 0070               __end_of_Fuzzy 0747                __pidataBANK1 1418  
             LCD_Cursor@Col 00C7               LCD_Cursor@Row 00C9                ??_LCD_Cursor 00C8  
           _LCD_WriteString 15D1               __end_of_trimf 0D5F                  ___lwtoft@c 0078  
                 ?_PWM_Init 0070              _OPTION_REGbits 0081                  ??_ADC_Init 00C7  
      __end_of_LCD_WriteCmd 147B                     ??_Fuzzy 007E   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                     ??_trimf 007C                  __pbssBANK0 006D  
                __pbssBANK1 00A0                  __pbssBANK3 0190          __end_of_LCD_Cursor 151F  
                ??_LCD_Init 00C9               Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C7  
           ?_PWM_DutyCycle2 00C7                  __pmaintext 0A5B                 Fuzzy@mantem 005D  
                   ?___ftge 0030                     ?___wmul 0078                  __pintentry 0004  
              ??_TIMER0_Set 00C7                     _CCP1CON 0017                     _CCP2CON 001D  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 00C7  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 140E     __end_of_LCD_WriteString 1602  
                 _ADCResult 00BB                ??_USART_Init 00DA           LCD_WriteData@Byte 00C8  
                   ___aldiv 0851             __size_of___ftge 005F                     ___ftadd 0B32  
                   ___ftdiv 0747                     ___ftneg 140E             __size_of___wmul 0023  
                   ___ftmul 098A                     ___fttol 1772                     ___lwdiv 1602  
                ??___ftpack 0075                     __ptext1 0808                     __ptext2 0851  
                   __ptext3 1406                     __ptext4 1422                     __ptext5 1584  
                   __ptext6 1540                     __ptext7 151F                     __ptext8 15D1  
                   __ptext9 147B                  _pas_cooler 00E7                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 014B                   _T1CONbits 0010  
                 _T2CONbits 0012                     _max_val 14E1            ___aldiv@dividend 00CB  
                 _LCD_Clear 15A8          __end_of_USART_Init 0851                     clrloop0 0801  
      end_of_initialization 0035                   _RCSTAbits 0018            ___aldiv@quotient 00D2  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 13FE       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 00C3                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 14AA           __size_of_ADC_Init 0012         PWM_DutyCycle1@valor 00C7  
                _total_area 00B2         PWM_DutyCycle2@valor 00C7                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 00C9           __size_of_LCD_Init 006B                _LCD_WriteCmd 1464  
               ___ftmul@exp 0024              __end_of___ftge 169F              __end_of___wmul 1584  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 0EAA            ??_PWM_DutyCycle1 00C9  
          ??_PWM_DutyCycle2 00C9       __end_of_LCD_WriteData 1492           _USART_ReceiveChar 1492  
                  ??___ftge 0036          ?_USART_ReceiveChar 0070                    ??___wmul 007C  
                init_fetch0 142D                 __pdataBANK1 00E1                send@checksum 0021  
                  ??_trapmf 007C              send@velocidade 0022         ??_USART_ReceiveChar 0073  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0014  
             __pcstackBANK0 0020               __pcstackBANK1 00C7                 ??_LCD_Clear 00C9  
       __end_of__stringdata 105D   __end_of_USART_ReceiveChar 14AA       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 00C7                Fuzzy@aumenta 0063  
                  ?___aldiv 00C7                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0078                    ?___fttol 0030  
                  ?___lwdiv 0070                   __pstrings 1000                   _ativa_fan 00A0  
             ??_TIMER0_Init 00C7          USART_Init@BaudRate 00D6                    ?_max_val 003C  
                  _ADC_Init 143E                   _fop_rule1 00A6                   _fop_rule2 00A9  
                 _fop_rule3 00AC              __size_of_Fuzzy 070E            ___lwdiv@quotient 0075  
            __size_of_trimf 0124           ??_USART_WriteChar 0070                i1_TIMER0_Set 13F8  
           ___aldiv@divisor 00C7           interrupt_function 0004             ___aldiv@counter 00D0  
                  _LCD_Init 1707              ___wmul@product 007C                   clear_ram0 0800  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 14C5                 _display_rpm 019D  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 1010                    _PWM_Init 1584           ___wmul@multiplier 0078  
       __end_of_TIMER0_Init 142D  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
                  Fuzzy@tip 0054            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D1  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___ftpack 169F  
        __end_of__stringtab 1010                    ___lwtoft 1450                   send@index 0024  
          __size_of_max_val 001E             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 14C5                    __ptext10 1707                    __ptext11 14FF  
                  __ptext20 1492                    __ptext12 15A8                    __ptext21 14C5  
                  __ptext13 1464                    __ptext30 14E1                    __ptext22 13FE  
                  __ptext14 143E                    __ptext31 1640                    __ptext23 0039  
                  __ptext15 0D5F                    __ptext32 1450                    __ptext24 14AA  
                  __ptext16 13F8                    __ptext33 1772                    __ptext25 0C3B  
                  __ptext17 08E0                    __ptext34 098A                    __ptext26 0EAA  
                  __ptext18 1561                    __ptext35 169F                    __ptext27 140E  
                  __ptext19 1602                    __ptext28 0747                    __ptext29 0B32  
        ?_USART_WriteString 0070               __size_of_main 00D7               __size_of_send 00AA  
       USART_WriteChar@byte 0070         ??_USART_WriteString 0071                    _setpoint 00E1  
                _LCD_Cursor 14FF    __size_of_LCD_WriteString 0031                 _TIMER0_Init 1422  
                _INTCONbits 000B   __end_of_USART_WriteString 14E1                    max_val@a 003C  
                  max_val@b 003F                    init_ram0 1431                    intlevel1 0000  
                 stringcode 100A        USART_WriteString@str 0072                  _TIMER0_Set 1406  
                  trapmf@ua 004F             _USART_WriteChar 13FE                    stringdir 100A  
                  stringtab 1000                ___aldiv@sign 00D1      __size_of_LCD_WriteData 0017  
               _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E                  _SSPCONbits 0014  
                _USART_Init 0808  
