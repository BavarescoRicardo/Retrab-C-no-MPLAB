

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 11:09:08 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  018C                     	;# 
   354  018D                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  000E                     	;# 
   371  000F                     	;# 
   372  0010                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0014                     	;# 
   377  0015                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0017                     	;# 
   381  0018                     	;# 
   382  0019                     	;# 
   383  001A                     	;# 
   384  001B                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  001D                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  0081                     	;# 
   391  0085                     	;# 
   392  0086                     	;# 
   393  0087                     	;# 
   394  0088                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  0091                     	;# 
   400  0092                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  009F                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  000E                     	;# 
   430  000E                     	;# 
   431  000F                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0014                     	;# 
   437  0015                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  001D                     	;# 
   448  001E                     	;# 
   449  001F                     	;# 
   450  0081                     	;# 
   451  0085                     	;# 
   452  0086                     	;# 
   453  0087                     	;# 
   454  0088                     	;# 
   455  0089                     	;# 
   456  008C                     	;# 
   457  008D                     	;# 
   458  008E                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0000                     	;# 
   476  0001                     	;# 
   477  0002                     	;# 
   478  0003                     	;# 
   479  0004                     	;# 
   480  0005                     	;# 
   481  0006                     	;# 
   482  0007                     	;# 
   483  0008                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0088                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0098                     	;# 
   524  0099                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  009F                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  010F                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  0000                     	;# 
   536  0001                     	;# 
   537  0002                     	;# 
   538  0003                     	;# 
   539  0004                     	;# 
   540  0005                     	;# 
   541  0006                     	;# 
   542  0007                     	;# 
   543  0008                     	;# 
   544  0009                     	;# 
   545  000A                     	;# 
   546  000B                     	;# 
   547  000C                     	;# 
   548  000D                     	;# 
   549  000E                     	;# 
   550  000E                     	;# 
   551  000F                     	;# 
   552  0010                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001D                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  0081                     	;# 
   571  0085                     	;# 
   572  0086                     	;# 
   573  0087                     	;# 
   574  0088                     	;# 
   575  0089                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  009F                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010E                     	;# 
   592  010F                     	;# 
   593  018C                     	;# 
   594  018D                     	;# 
   595                           
   596                           	psect	idataBANK0
   597  1438                     __pidataBANK0:	
   598                           
   599                           ;initializer for _tf
   600  1438  3400               	retlw	0
   601  1439  3448               	retlw	72
   602  143A  3442               	retlw	66
   603                           
   604                           	psect	idataBANK1
   605  1441                     __pidataBANK1:	
   606                           
   607                           ;initializer for _setpoint
   608  1441  3400               	retlw	0
   609  1442  34A0               	retlw	160
   610  1443  3441               	retlw	65
   611                           
   612                           ;initializer for _pas_cooler
   613  1444  3407               	retlw	7
   614  1445  3400               	retlw	0
   615                           
   616                           ;initializer for _pwm
   617  1446  3432               	retlw	50
   618  1447  3400               	retlw	0
   619  000E                     _TMR1	set	14
   620  001F                     _ADCON0bits	set	31
   621  001E                     _ADRESH	set	30
   622  0017                     _CCP1CON	set	23
   623  0017                     _CCP1CONbits	set	23
   624  001D                     _CCP2CON	set	29
   625  001D                     _CCP2CONbits	set	29
   626  0015                     _CCPR1L	set	21
   627  001B                     _CCPR2L	set	27
   628  000B                     _INTCONbits	set	11
   629  000C                     _PIR1bits	set	12
   630  000D                     _PIR2bits	set	13
   631  0005                     _PORTA	set	5
   632  0006                     _PORTB	set	6
   633  0006                     _PORTBbits	set	6
   634  0007                     _PORTC	set	7
   635  0008                     _PORTD	set	8
   636  0009                     _PORTE	set	9
   637  0009                     _PORTEbits	set	9
   638  001A                     _RCREG	set	26
   639  0018                     _RCSTAbits	set	24
   640  0013                     _SSPBUF	set	19
   641  0014                     _SSPCONbits	set	20
   642  0010                     _T1CON	set	16
   643  0010                     _T1CONbits	set	16
   644  0012                     _T2CONbits	set	18
   645  0001                     _TMR0	set	1
   646  000F                     _TMR1H	set	15
   647  000E                     _TMR1L	set	14
   648  0019                     _TXREG	set	25
   649  00C1                     _OERR	set	193
   650  009F                     _ADCON1bits	set	159
   651  009E                     _ADRESL	set	158
   652  0081                     _OPTION_REGbits	set	129
   653  008C                     _PIE1bits	set	140
   654  008D                     _PIE2bits	set	141
   655  0092                     _PR2	set	146
   656  0099                     _SPBRG	set	153
   657  0093                     _SSPADD	set	147
   658  0091                     _SSPCON2	set	145
   659  0091                     _SSPCON2bits	set	145
   660  0094                     _SSPSTATbits	set	148
   661  0085                     _TRISA	set	133
   662  0086                     _TRISB	set	134
   663  0087                     _TRISC	set	135
   664  0088                     _TRISD	set	136
   665  0089                     _TRISE	set	137
   666  0098                     _TXSTAbits	set	152
   667  010D                     _EEADR	set	269
   668  010C                     _EEDATA	set	268
   669  018C                     _EECON1bits	set	396
   670  018D                     _EECON2	set	397
   671                           
   672                           	psect	strings
   673  1000                     __pstrings:	
   674  1000                     stringtab:	
   675  1000                     __stringtab:	
   676                           
   677                           ;	String table - string pointers are 1 byte each
   678  1000  1BFF               	btfsc	btemp+1,7
   679  1001  280A               	ljmp	stringcode
   680  1002  1383               	bcf	3,7
   681  1003  187F               	btfsc	btemp+1,0
   682  1004  1783               	bsf	3,7
   683  1005  0800               	movf	0,w
   684  1006  0A84               	incf	4,f
   685  1007  1903               	skipnz
   686  1008  0AFF               	incf	btemp+1,f
   687  1009  0008               	return
   688  100A                     stringcode:	
   689  100A                     stringdir:	
   690  100A  3010               	movlw	high stringdir
   691  100B  008A               	movwf	10
   692  100C  0804               	movf	4,w
   693  100D  0A84               	incf	4,f
   694  100E  0782               	addwf	2,f
   695  100F                     __stringbase:	
   696  100F  3400               	retlw	0
   697  1010                     __end_of__stringtab:	
   698  1010                     __stringdata:	
   699  1010                     STR_4:	
   700  1010  340A               	retlw	10
   701  1011  340D               	retlw	13
   702  1012  3420               	retlw	32	;' '
   703  1013  342D               	retlw	45	;'-'
   704  1014  342D               	retlw	45	;'-'
   705  1015  342D               	retlw	45	;'-'
   706  1016  342D               	retlw	45	;'-'
   707  1017  342D               	retlw	45	;'-'
   708  1018  342D               	retlw	45	;'-'
   709  1019  342D               	retlw	45	;'-'
   710  101A  3420               	retlw	32	;' '
   711  101B  3445               	retlw	69	;'E'
   712  101C  3453               	retlw	83	;'S'
   713  101D  3454               	retlw	84	;'T'
   714  101E  344F               	retlw	79	;'O'
   715  101F  3455               	retlw	85	;'U'
   716  1020  3452               	retlw	82	;'R'
   717  1021  344F               	retlw	79	;'O'
   718  1022  3420               	retlw	32	;' '
   719  1023  3444               	retlw	68	;'D'
   720  1024  3445               	retlw	69	;'E'
   721  1025  3420               	retlw	32	;' '
   722  1026  3450               	retlw	80	;'P'
   723  1027  3449               	retlw	73	;'I'
   724  1028  344C               	retlw	76	;'L'
   725  1029  3448               	retlw	72	;'H'
   726  102A  3441               	retlw	65	;'A'
   727  102B  3420               	retlw	32	;' '
   728  102C  342D               	retlw	45	;'-'
   729  102D  342D               	retlw	45	;'-'
   730  102E  342D               	retlw	45	;'-'
   731  102F  342D               	retlw	45	;'-'
   732  1030  342D               	retlw	45	;'-'
   733  1031  342D               	retlw	45	;'-'
   734  1032  342D               	retlw	45	;'-'
   735  1033  3420               	retlw	32	;' '
   736  1034  340A               	retlw	10
   737  1035  340D               	retlw	13
   738  1036  3420               	retlw	32	;' '
   739  1037  3400               	retlw	0
   740  1038                     STR_2:	
   741  1038  3449               	retlw	73	;'I'
   742  1039  346E               	retlw	110	;'n'
   743  103A  3469               	retlw	105	;'i'
   744  103B  3463               	retlw	99	;'c'
   745  103C  3469               	retlw	105	;'i'
   746  103D  3461               	retlw	97	;'a'
   747  103E  346C               	retlw	108	;'l'
   748  103F  3469               	retlw	105	;'i'
   749  1040  347A               	retlw	122	;'z'
   750  1041  3461               	retlw	97	;'a'
   751  1042  346E               	retlw	110	;'n'
   752  1043  3464               	retlw	100	;'d'
   753  1044  346F               	retlw	111	;'o'
   754  1045  342E               	retlw	46	;'.'
   755  1046  342E               	retlw	46	;'.'
   756  1047  342E               	retlw	46	;'.'
   757  1048  3400               	retlw	0
   758  1049                     STR_1:	
   759  1049  340A               	retlw	10
   760  104A  340D               	retlw	13
   761  104B  3464               	retlw	100	;'d'
   762  104C  3465               	retlw	101	;'e'
   763  104D  3473               	retlw	115	;'s'
   764  104E  346C               	retlw	108	;'l'
   765  104F  3469               	retlw	105	;'i'
   766  1050  3467               	retlw	103	;'g'
   767  1051  3461               	retlw	97	;'a'
   768  1052  3464               	retlw	100	;'d'
   769  1053  346F               	retlw	111	;'o'
   770  1054  340A               	retlw	10
   771  1055  340D               	retlw	13
   772  1056  3400               	retlw	0
   773  1057                     STR_3:	
   774  1057  346B               	retlw	107	;'k'
   775  1058  346D               	retlw	109	;'m'
   776  1059  3448               	retlw	72	;'H'
   777  105A  343A               	retlw	58	;':'
   778  105B  3420               	retlw	32	;' '
   779  105C  3400               	retlw	0
   780  105D                     __end_of__stringdata:	
   781                           
   782                           ; #config settings
   783  0000                     
   784                           	psect	cinit
   785  0015                     start_initialization:	
   786  0015                     __initialization:	
   787                           
   788                           ; Clear objects allocated to BANK1
   789  0015  1383               	bcf	3,7	;select IRP bank0
   790  0016  30A0               	movlw	low __pbssBANK1
   791  0017  0084               	movwf	4
   792  0018  30C9               	movlw	low (__pbssBANK1+41)
   793  0019  160A  118A  2458  120A  118A  	fcall	clear_ram0
   794                           
   795                           ; Clear objects allocated to BANK3
   796  001E  1783               	bsf	3,7	;select IRP bank2
   797  001F  3090               	movlw	low __pbssBANK3
   798  0020  0084               	movwf	4
   799  0021  30A4               	movlw	low (__pbssBANK3+20)
   800  0022  160A  118A  2458  120A  118A  	fcall	clear_ram0
   801                           
   802                           ; Initialize objects allocated to BANK1
   803  0027  1383               	bcf	3,7	;select IRP bank0
   804  0028  30EA               	movlw	low (__pdataBANK1+7)
   805  0029  00FD               	movwf	btemp+-1
   806  002A  3014               	movlw	high __pidataBANK1
   807  002B  00FE               	movwf	btemp
   808  002C  3041               	movlw	low __pidataBANK1
   809  002D  00FF               	movwf	btemp+1
   810  002E  30E3               	movlw	low __pdataBANK1
   811  002F  0084               	movwf	4
   812  0030  160A  118A  2479  120A  118A  	fcall	init_ram0
   813                           
   814                           ; Initialize objects allocated to BANK0
   815  0035  3070               	movlw	low (__pdataBANK0+3)
   816  0036  00FD               	movwf	btemp+-1
   817  0037  3014               	movlw	high __pidataBANK0
   818  0038  00FE               	movwf	btemp
   819  0039  3038               	movlw	low __pidataBANK0
   820  003A  00FF               	movwf	btemp+1
   821  003B  306D               	movlw	low __pdataBANK0
   822  003C  0084               	movwf	4
   823  003D  160A  118A  2479   	fcall	init_ram0
   824  0040                     end_of_initialization:	
   825                           ;End of C runtime variable initialization code
   826                           
   827  0040                     __end_of__initialization:	
   828  0040  0183               	clrf	3
   829  0041  120A  158A  2A5B   	ljmp	_main	;jump to C main() function
   830                           
   831                           	psect	dataBANK0
   832  006D                     __pdataBANK0:	
   833  006D                     _tf:	
   834  006D                     	ds	3
   835                           
   836                           	psect	bssBANK1
   837  00A0                     __pbssBANK1:	
   838  00A0                     _ativa_fan:	
   839  00A0                     	ds	3
   840  00A3                     _fitemp:	
   841  00A3                     	ds	3
   842  00A6                     _fop_rule1:	
   843  00A6                     	ds	3
   844  00A9                     _fop_rule2:	
   845  00A9                     	ds	3
   846  00AC                     _fop_rule3:	
   847  00AC                     	ds	3
   848  00AF                     _sum:	
   849  00AF                     	ds	3
   850  00B2                     _total_area:	
   851  00B2                     	ds	3
   852  00B5                     _x:	
   853  00B5                     	ds	3
   854  00B8                     _y:	
   855  00B8                     	ds	3
   856  00BB                     _ADCResult:	
   857  00BB                     	ds	2
   858  00BD                     _contagens_tm0:	
   859  00BD                     	ds	2
   860  00BF                     _deltaV:	
   861  00BF                     	ds	2
   862  00C1                     _pulsos:	
   863  00C1                     	ds	2
   864  00C3                     _rpm:	
   865  00C3                     	ds	2
   866  00C5                     _setpointUI:	
   867  00C5                     	ds	2
   868  00C7                     _status:	
   869  00C7                     	ds	2
   870                           
   871                           	psect	dataBANK1
   872  00E3                     __pdataBANK1:	
   873  00E3                     _setpoint:	
   874  00E3                     	ds	3
   875  00E6                     _pas_cooler:	
   876  00E6                     	ds	2
   877  00E8                     _pwm:	
   878  00E8                     	ds	2
   879                           
   880                           	psect	bssBANK3
   881  0190                     __pbssBANK3:	
   882  0190                     _buffer:	
   883  0190                     	ds	10
   884  019A                     _display_rpm:	
   885  019A                     	ds	10
   886                           
   887                           	psect	clrtext
   888  1458                     clear_ram0:	
   889                           ;	Called with FSR containing the base address, and
   890                           ;	W with the last address+1
   891                           
   892  1458  0064               	clrwdt	;clear the watchdog before getting into this loop
   893  1459                     clrloop0:	
   894  1459  0180               	clrf	0	;clear RAM location pointed to by FSR
   895  145A  0A84               	incf	4,f	;increment pointer
   896  145B  0604               	xorwf	4,w	;XOR with final address
   897  145C  1903               	btfsc	3,2	;have we reached the end yet?
   898  145D  3400               	retlw	0	;all done for this memory range, return
   899  145E  0604               	xorwf	4,w	;XOR again to restore value
   900  145F  2C59               	goto	clrloop0	;do the next byte
   901                           
   902                           	psect	inittext
   903  1475                     init_fetch0:	
   904                           ;	Called with low address in FSR and high address in W
   905                           
   906  1475  087E               	movf	126,w
   907  1476  008A               	movwf	10
   908  1477  087F               	movf	127,w
   909  1478  0082               	movwf	2
   910  1479                     init_ram0:	
   911                           ;Called with:
   912                           ;	high address of idata address in btemp 
   913                           ;	low address of idata address in btemp+1 
   914                           ;	low address of data in FSR
   915                           ;	high address + 1 of data in btemp-1
   916                           
   917  1479  2475  160A  118A   	fcall	init_fetch0
   918  147C  0080               	movwf	0
   919  147D  0A84               	incf	4,f
   920  147E  0804               	movf	4,w
   921  147F  067D               	xorwf	125,w
   922  1480  1903               	btfsc	3,2
   923  1481  3400               	retlw	0
   924  1482  0AFF               	incf	127,f
   925  1483  1903               	btfsc	3,2
   926  1484  0AFE               	incf	126,f
   927  1485  2C79               	goto	init_ram0
   928                           
   929                           	psect	cstackBANK1
   930  00C9                     __pcstackBANK1:	
   931  00C9                     ?_PWM_DutyCycle2:	
   932  00C9                     ??_TIMER0_Set:	
   933                           ; 0 bytes @ 0x0
   934                           
   935  00C9                     ??_TIMER0_Init:	
   936                           ; 0 bytes @ 0x0
   937                           
   938  00C9                     ??_ADC_Init:	
   939                           ; 0 bytes @ 0x0
   940                           
   941  00C9                     ??_PWM_Init:	
   942                           ; 0 bytes @ 0x0
   943                           
   944  00C9                     ?_LCD_Cursor:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  00C9                     ?_PWM_DutyCycle1:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  00C9                     ??_LCD_WriteCmd:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  00C9                     ??_LCD_WriteData:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  00C9                     ?___aldiv:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  00C9                     TIMER0_Set@contagens:	
   960                           ; 4 bytes @ 0x0
   961                           
   962  00C9                     LCD_Cursor@Col:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  00C9                     PWM_DutyCycle1@valor:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  00C9                     PWM_DutyCycle2@valor:	
   969                           ; 2 bytes @ 0x0
   970                           
   971  00C9                     ___aldiv@divisor:	
   972                           ; 2 bytes @ 0x0
   973                           
   974                           
   975                           ; 4 bytes @ 0x0
   976  00C9                     	ds	1
   977  00CA                     ??_LCD_Cursor:	
   978  00CA                     LCD_WriteCmd@Byte:	
   979                           ; 0 bytes @ 0x1
   980                           
   981  00CA                     LCD_WriteData@Byte:	
   982                           ; 1 bytes @ 0x1
   983                           
   984                           
   985                           ; 1 bytes @ 0x1
   986  00CA                     	ds	1
   987  00CB                     ??_PWM_DutyCycle2:	
   988  00CB                     ??_LCD_Init:	
   989                           ; 0 bytes @ 0x2
   990                           
   991  00CB                     ?_LCD_WriteString:	
   992                           ; 0 bytes @ 0x2
   993                           
   994  00CB                     ??_PWM_DutyCycle1:	
   995                           ; 0 bytes @ 0x2
   996                           
   997  00CB                     ??_LCD_Clear:	
   998                           ; 0 bytes @ 0x2
   999                           
  1000  00CB                     LCD_Cursor@Row:	
  1001                           ; 0 bytes @ 0x2
  1002                           
  1003  00CB                     LCD_WriteString@Str:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  00CB                     	ds	2
  1009  00CD                     ??_LCD_WriteString:	
  1010  00CD                     ___aldiv@dividend:	
  1011                           ; 0 bytes @ 0x4
  1012                           
  1013                           
  1014                           ; 4 bytes @ 0x4
  1015  00CD                     	ds	4
  1016  00D1                     ??___aldiv:	
  1017                           
  1018                           ; 0 bytes @ 0x8
  1019  00D1                     	ds	1
  1020  00D2                     ___aldiv@counter:	
  1021                           
  1022                           ; 1 bytes @ 0x9
  1023  00D2                     	ds	1
  1024  00D3                     ___aldiv@sign:	
  1025                           
  1026                           ; 1 bytes @ 0xA
  1027  00D3                     	ds	1
  1028  00D4                     ___aldiv@quotient:	
  1029                           
  1030                           ; 4 bytes @ 0xB
  1031  00D4                     	ds	4
  1032  00D8                     ?_USART_Init:	
  1033  00D8                     USART_Init@BaudRate:	
  1034                           ; 0 bytes @ 0xF
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0xF
  1038  00D8                     	ds	4
  1039  00DC                     ??_USART_Init:	
  1040                           
  1041                           ; 0 bytes @ 0x13
  1042  00DC                     	ds	4
  1043  00E0                     ??_main:	
  1044                           
  1045                           ; 0 bytes @ 0x17
  1046  00E0                     	ds	3
  1047                           
  1048                           	psect	cstackCOMMON
  1049  0070                     __pcstackCOMMON:	
  1050  0070                     ?_USART_WriteChar:	
  1051  0070                     ??_USART_WriteChar:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ?_USART_WriteString:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057  0070                     ?_TIMER0_Set:	
  1058                           ; 0 bytes @ 0x0
  1059                           
  1060  0070                     ?_TIMER0_Init:	
  1061                           ; 0 bytes @ 0x0
  1062                           
  1063  0070                     ?_ADC_Init:	
  1064                           ; 0 bytes @ 0x0
  1065                           
  1066  0070                     ?_PWM_Init:	
  1067                           ; 0 bytes @ 0x0
  1068                           
  1069  0070                     ?_LCD_Init:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?_LCD_Clear:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ?_send:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  0070                     ?_Fuzzy:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  0070                     ?_ISR:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_main:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_LCD_WriteCmd:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_LCD_WriteData:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?i1_TIMER0_Set:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ??i1_TIMER0_Set:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?_USART_ReceiveChar:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?___lwdiv:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     ?___ftpack:	
  1106                           ; 2 bytes @ 0x0
  1107                           
  1108  0070                     USART_WriteChar@byte:	
  1109                           ; 3 bytes @ 0x0
  1110                           
  1111  0070                     i1TIMER0_Set@contagens:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0070                     ___lwdiv@divisor:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ___ftpack@arg:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120                           
  1121                           ; 3 bytes @ 0x0
  1122  0070                     	ds	1
  1123  0071                     ??_USART_WriteString:	
  1124                           
  1125                           ; 0 bytes @ 0x1
  1126  0071                     	ds	1
  1127  0072                     USART_WriteString@str:	
  1128  0072                     ___lwdiv@dividend:	
  1129                           ; 1 bytes @ 0x2
  1130                           
  1131                           
  1132                           ; 2 bytes @ 0x2
  1133  0072                     	ds	1
  1134  0073                     ??_USART_ReceiveChar:	
  1135  0073                     ___ftpack@exp:	
  1136                           ; 0 bytes @ 0x3
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x3
  1140  0073                     	ds	1
  1141  0074                     ??___lwdiv:	
  1142  0074                     USART_ReceiveChar@byte:	
  1143                           ; 0 bytes @ 0x4
  1144                           
  1145  0074                     ___ftpack@sign:	
  1146                           ; 1 bytes @ 0x4
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x4
  1150  0074                     	ds	1
  1151  0075                     ??___ftpack:	
  1152  0075                     ___lwdiv@quotient:	
  1153                           ; 0 bytes @ 0x5
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x5
  1157  0075                     	ds	2
  1158  0077                     ___lwdiv@counter:	
  1159                           
  1160                           ; 1 bytes @ 0x7
  1161  0077                     	ds	1
  1162  0078                     ?___wmul:	
  1163  0078                     ?___ftmul:	
  1164                           ; 2 bytes @ 0x8
  1165                           
  1166  0078                     ?___lwtoft:	
  1167                           ; 3 bytes @ 0x8
  1168                           
  1169  0078                     ___wmul@multiplier:	
  1170                           ; 3 bytes @ 0x8
  1171                           
  1172  0078                     ___lwtoft@c:	
  1173                           ; 2 bytes @ 0x8
  1174                           
  1175  0078                     ___ftmul@f1:	
  1176                           ; 2 bytes @ 0x8
  1177                           
  1178                           
  1179                           ; 3 bytes @ 0x8
  1180  0078                     	ds	2
  1181  007A                     ___wmul@multiplicand:	
  1182                           
  1183                           ; 2 bytes @ 0xA
  1184  007A                     	ds	1
  1185  007B                     ??___lwtoft:	
  1186  007B                     ___ftmul@f2:	
  1187                           ; 0 bytes @ 0xB
  1188                           
  1189                           
  1190                           ; 3 bytes @ 0xB
  1191  007B                     	ds	1
  1192  007C                     ??_trimf:	
  1193  007C                     ??_trapmf:	
  1194                           ; 0 bytes @ 0xC
  1195                           
  1196  007C                     ??_max_val:	
  1197                           ; 0 bytes @ 0xC
  1198                           
  1199  007C                     ??___wmul:	
  1200                           ; 0 bytes @ 0xC
  1201                           
  1202  007C                     ??___ftneg:	
  1203                           ; 0 bytes @ 0xC
  1204                           
  1205  007C                     ??i1_PWM_DutyCycle2:	
  1206                           ; 0 bytes @ 0xC
  1207                           
  1208  007C                     ___wmul@product:	
  1209                           ; 0 bytes @ 0xC
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0xC
  1213  007C                     	ds	2
  1214  007E                     ??_Fuzzy:	
  1215                           
  1216                           	psect	cstackBANK0
  1217  0020                     __pcstackBANK0:	
  1218                           ; 0 bytes @ 0xE
  1219                           
  1220  0020                     ??_send:	
  1221  0020                     ??___ftmul:	
  1222                           ; 0 bytes @ 0x0
  1223                           
  1224  0020                     ?___ftneg:	
  1225                           ; 0 bytes @ 0x0
  1226                           
  1227  0020                     ___ftneg@f1:	
  1228                           ; 3 bytes @ 0x0
  1229                           
  1230                           
  1231                           ; 3 bytes @ 0x0
  1232  0020                     	ds	1
  1233  0021                     send@checksum:	
  1234                           
  1235                           ; 1 bytes @ 0x1
  1236  0021                     	ds	1
  1237  0022                     send@velocidade:	
  1238                           
  1239                           ; 2 bytes @ 0x2
  1240  0022                     	ds	1
  1241  0023                     ?___ftadd:	
  1242  0023                     ___ftadd@f1:	
  1243                           ; 3 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 3 bytes @ 0x3
  1247  0023                     	ds	1
  1248  0024                     send@index:	
  1249  0024                     ___ftmul@exp:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x4
  1254  0024                     	ds	1
  1255  0025                     ___ftmul@f3_as_product:	
  1256                           
  1257                           ; 3 bytes @ 0x5
  1258  0025                     	ds	1
  1259  0026                     ___ftadd@f2:	
  1260                           
  1261                           ; 3 bytes @ 0x6
  1262  0026                     	ds	2
  1263  0028                     ___ftmul@cntr:	
  1264                           
  1265                           ; 1 bytes @ 0x8
  1266  0028                     	ds	1
  1267  0029                     ??___ftadd:	
  1268  0029                     ___ftmul@sign:	
  1269                           ; 0 bytes @ 0x9
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x9
  1273  0029                     	ds	4
  1274  002D                     ___ftadd@sign:	
  1275                           
  1276                           ; 1 bytes @ 0xD
  1277  002D                     	ds	1
  1278  002E                     ___ftadd@exp2:	
  1279                           
  1280                           ; 1 bytes @ 0xE
  1281  002E                     	ds	1
  1282  002F                     ___ftadd@exp1:	
  1283                           
  1284                           ; 1 bytes @ 0xF
  1285  002F                     	ds	1
  1286  0030                     ?___ftge:	
  1287  0030                     ?___ftdiv:	
  1288                           ; 1 bit 
  1289                           
  1290  0030                     ?___fttol:	
  1291                           ; 3 bytes @ 0x10
  1292                           
  1293  0030                     ___ftdiv@f2:	
  1294                           ; 4 bytes @ 0x10
  1295                           
  1296  0030                     ___ftge@ff1:	
  1297                           ; 3 bytes @ 0x10
  1298                           
  1299  0030                     ___fttol@f1:	
  1300                           ; 3 bytes @ 0x10
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x10
  1304  0030                     	ds	3
  1305  0033                     ___ftdiv@f1:	
  1306  0033                     ___ftge@ff2:	
  1307                           ; 3 bytes @ 0x13
  1308                           
  1309                           
  1310                           ; 3 bytes @ 0x13
  1311  0033                     	ds	1
  1312  0034                     ??___fttol:	
  1313                           
  1314                           ; 0 bytes @ 0x14
  1315  0034                     	ds	2
  1316  0036                     ??___ftdiv:	
  1317  0036                     ??___ftge:	
  1318                           ; 0 bytes @ 0x16
  1319                           
  1320                           
  1321                           ; 0 bytes @ 0x16
  1322  0036                     	ds	2
  1323  0038                     ___fttol@sign1:	
  1324                           
  1325                           ; 1 bytes @ 0x18
  1326  0038                     	ds	1
  1327  0039                     ___fttol@lval:	
  1328                           
  1329                           ; 4 bytes @ 0x19
  1330  0039                     	ds	1
  1331  003A                     ___ftdiv@cntr:	
  1332                           
  1333                           ; 1 bytes @ 0x1A
  1334  003A                     	ds	1
  1335  003B                     ___ftdiv@f3:	
  1336                           
  1337                           ; 3 bytes @ 0x1B
  1338  003B                     	ds	1
  1339  003C                     ?_max_val:	
  1340  003C                     max_val@a:	
  1341                           ; 3 bytes @ 0x1C
  1342                           
  1343                           
  1344                           ; 3 bytes @ 0x1C
  1345  003C                     	ds	1
  1346  003D                     ___fttol@exp1:	
  1347                           
  1348                           ; 1 bytes @ 0x1D
  1349  003D                     	ds	1
  1350  003E                     ?i1_PWM_DutyCycle2:	
  1351  003E                     ___ftdiv@exp:	
  1352                           ; 0 bytes @ 0x1E
  1353                           
  1354  003E                     i1PWM_DutyCycle2@valor:	
  1355                           ; 1 bytes @ 0x1E
  1356                           
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359  003E                     	ds	1
  1360  003F                     ___ftdiv@sign:	
  1361  003F                     max_val@b:	
  1362                           ; 1 bytes @ 0x1F
  1363                           
  1364                           
  1365                           ; 3 bytes @ 0x1F
  1366  003F                     	ds	1
  1367  0040                     ?_trimf:	
  1368  0040                     ?_trapmf:	
  1369                           ; 3 bytes @ 0x20
  1370                           
  1371  0040                     trimf@x:	
  1372                           ; 3 bytes @ 0x20
  1373                           
  1374  0040                     trapmf@x:	
  1375                           ; 3 bytes @ 0x20
  1376                           
  1377                           
  1378                           ; 3 bytes @ 0x20
  1379  0040                     	ds	3
  1380  0043                     trimf@a:	
  1381  0043                     trapmf@a:	
  1382                           ; 3 bytes @ 0x23
  1383                           
  1384                           
  1385                           ; 3 bytes @ 0x23
  1386  0043                     	ds	3
  1387  0046                     trimf@b:	
  1388  0046                     trapmf@b:	
  1389                           ; 3 bytes @ 0x26
  1390                           
  1391                           
  1392                           ; 3 bytes @ 0x26
  1393  0046                     	ds	3
  1394  0049                     trimf@c:	
  1395  0049                     trapmf@c:	
  1396                           ; 3 bytes @ 0x29
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x29
  1400  0049                     	ds	3
  1401  004C                     trimf@ua:	
  1402  004C                     trapmf@d:	
  1403                           ; 3 bytes @ 0x2C
  1404                           
  1405                           
  1406                           ; 3 bytes @ 0x2C
  1407  004C                     	ds	3
  1408  004F                     trapmf@ua:	
  1409                           
  1410                           ; 3 bytes @ 0x2F
  1411  004F                     	ds	3
  1412  0052                     Fuzzy@freio:	
  1413                           
  1414                           ; 2 bytes @ 0x32
  1415  0052                     	ds	2
  1416  0054                     Fuzzy@tip:	
  1417                           
  1418                           ; 3 bytes @ 0x34
  1419  0054                     	ds	3
  1420  0057                     Fuzzy@a:	
  1421                           
  1422                           ; 2 bytes @ 0x37
  1423  0057                     	ds	2
  1424  0059                     Fuzzy@a_241:	
  1425                           
  1426                           ; 2 bytes @ 0x39
  1427  0059                     	ds	2
  1428  005B                     Fuzzy@a_242:	
  1429                           
  1430                           ; 2 bytes @ 0x3B
  1431  005B                     	ds	2
  1432  005D                     Fuzzy@mantem:	
  1433                           
  1434                           ; 3 bytes @ 0x3D
  1435  005D                     	ds	3
  1436  0060                     Fuzzy@reduz:	
  1437                           
  1438                           ; 3 bytes @ 0x40
  1439  0060                     	ds	3
  1440  0063                     Fuzzy@aumenta:	
  1441                           
  1442                           ; 3 bytes @ 0x43
  1443  0063                     	ds	3
  1444  0066                     Fuzzy@deltaRpm:	
  1445                           
  1446                           ; 3 bytes @ 0x46
  1447  0066                     	ds	3
  1448  0069                     ??_ISR:	
  1449                           
  1450                           ; 0 bytes @ 0x49
  1451  0069                     	ds	4
  1452                           
  1453                           	psect	maintext
  1454  0A5B                     __pmaintext:	
  1455 ;;
  1456 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1457 ;;
  1458 ;; *************** function _main *****************
  1459 ;; Defined at:
  1460 ;;		line 505 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 17F/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0
  1476 ;;      Temps:          0       0       3       0       0
  1477 ;;      Totals:         0       0       3       0       0
  1478 ;;Total ram usage:        3 bytes
  1479 ;; Hardware stack levels required when called:    7
  1480 ;; This function calls:
  1481 ;;		_ADC_Init
  1482 ;;		_LCD_Clear
  1483 ;;		_LCD_Cursor
  1484 ;;		_LCD_Init
  1485 ;;		_LCD_WriteString
  1486 ;;		_PWM_DutyCycle1
  1487 ;;		_PWM_DutyCycle2
  1488 ;;		_PWM_Init
  1489 ;;		_TIMER0_Init
  1490 ;;		_TIMER0_Set
  1491 ;;		_USART_Init
  1492 ;; This function is called by:
  1493 ;;		Startup code after reset
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _main
  1499  0A5B                     _main:	
  1500                           
  1501                           ;main.c: 507: TRISA = 0b00000001;
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505  0A5B  3001               	movlw	1
  1506  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  1508  0A5E  0085               	movwf	5	;volatile
  1509                           
  1510                           ;main.c: 508: PORTA = 0b00000001;
  1511  0A5F  3001               	movlw	1
  1512  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0A62  0085               	movwf	5	;volatile
  1515                           
  1516                           ;main.c: 509: TRISB = 0b00000000;
  1517  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0A64  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0A65  0186               	clrf	6	;volatile
  1520                           
  1521                           ;main.c: 510: PORTB = 0b00000000;
  1522  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0A68  0186               	clrf	6	;volatile
  1525                           
  1526                           ;main.c: 511: TRISC = 0b10000001;
  1527  0A69  3081               	movlw	129
  1528  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0A6C  0087               	movwf	7	;volatile
  1531                           
  1532                           ;main.c: 512: PORTC = 0b11000000;
  1533  0A6D  30C0               	movlw	192
  1534  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0A70  0087               	movwf	7	;volatile
  1537                           
  1538                           ;main.c: 513: TRISD = 0b00000000;
  1539  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0A72  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0A73  0188               	clrf	8	;volatile
  1542                           
  1543                           ;main.c: 514: PORTD = 0b00000000;
  1544  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0A76  0188               	clrf	8	;volatile
  1547                           
  1548                           ;main.c: 515: TRISE = 0b00000000;
  1549  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0A79  0189               	clrf	9	;volatile
  1552                           
  1553                           ;main.c: 516: PORTE = 0b00000000;
  1554  0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0A7C  0189               	clrf	9	;volatile
  1557                           
  1558                           ;main.c: 519: T1CON = 0x03;
  1559  0A7D  3003               	movlw	3
  1560  0A7E  0090               	movwf	16	;volatile
  1561                           
  1562                           ;main.c: 520: TMR1L = 0x00;
  1563  0A7F  018E               	clrf	14	;volatile
  1564                           
  1565                           ;main.c: 521: TMR1H = 0x00;
  1566  0A80  018F               	clrf	15	;volatile
  1567                           
  1568                           ;main.c: 524: USART_Init(115200);
  1569  0A81  3000               	movlw	0
  1570  0A82  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0A83  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0A84  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1573  0A85  3001               	movlw	1
  1574  0A86  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1575  0A87  30C2               	movlw	194
  1576  0A88  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1577  0A89  3000               	movlw	0
  1578  0A8A  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1579  0A8B  160A  118A  2670  120A  158A  	fcall	_USART_Init
  1580                           
  1581                           ;main.c: 525: TIMER0_Init();
  1582  0A90  160A  118A  246A  120A  158A  	fcall	_TIMER0_Init
  1583                           
  1584                           ;main.c: 526: ADC_Init();
  1585  0A95  160A  118A  2486  120A  158A  	fcall	_ADC_Init
  1586                           
  1587                           ;main.c: 527: PWM_Init();
  1588  0A9A  160A  118A  25B4  120A  158A  	fcall	_PWM_Init
  1589                           
  1590                           ;main.c: 528: LCD_Init();
  1591  0A9F  120A  158A  2002  120A  158A  	fcall	_LCD_Init
  1592                           
  1593                           ;main.c: 531: INTCONbits.PEIE = 1;
  1594  0AA4  170B               	bsf	11,6	;volatile
  1595                           
  1596                           ;main.c: 532: INTCONbits.GIE = 1;
  1597  0AA5  178B               	bsf	11,7	;volatile
  1598                           
  1599                           ;main.c: 539: LCD_Init();
  1600  0AA6  120A  158A  2002  120A  158A  	fcall	_LCD_Init
  1601                           
  1602                           ;main.c: 540: LCD_Cursor(0,0);
  1603  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0AAC  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0AAD  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1606  0AAE  3000               	movlw	0
  1607  0AAF  160A  118A  252F  120A  158A  	fcall	_LCD_Cursor
  1608                           
  1609                           ;main.c: 541: LCD_WriteString("Inicializando...");
  1610  0AB4  3029               	movlw	low (STR_2-__stringbase)
  1611  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0AB7  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1614  0AB8  3080               	movlw	128
  1615  0AB9  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1616  0ABA  160A  118A  2601  120A  158A  	fcall	_LCD_WriteString
  1617                           
  1618                           ;main.c: 544: PWM_DutyCycle1(0);
  1619  0ABF  3000               	movlw	0
  1620  0AC0  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0AC1  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0AC2  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1623  0AC3  3000               	movlw	0
  1624  0AC4  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1625  0AC5  160A  118A  254F  120A  158A  	fcall	_PWM_DutyCycle1
  1626                           
  1627                           ;main.c: 545: PWM_DutyCycle2(0);
  1628  0ACA  3000               	movlw	0
  1629  0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0ACC  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0ACD  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1632  0ACE  3000               	movlw	0
  1633  0ACF  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1634  0AD0  160A  118A  2570  120A  158A  	fcall	_PWM_DutyCycle2
  1635                           
  1636                           ;main.c: 548: TIMER0_Set(238);
  1637  0AD5  30EE               	movlw	238
  1638  0AD6  160A  118A  2450  120A  158A  	fcall	_TIMER0_Set
  1639                           
  1640                           ;main.c: 551: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1641  0ADB  3018               	movlw	24
  1642  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0ADE  00E2               	movwf	(??_main^(0+128)+2)
  1645  0ADF  3061               	movlw	97
  1646  0AE0  00E1               	movwf	(??_main^(0+128)+1)
  1647  0AE1  306E               	movlw	110
  1648  0AE2  00E0               	movwf	??_main^(0+128)
  1649  0AE3                     u3347:	
  1650  0AE3  0BE0               	decfsz	??_main^(0+128),f
  1651  0AE4  2AE3               	goto	u3347
  1652  0AE5  0BE1               	decfsz	(??_main^(0+128)+1),f
  1653  0AE6  2AE3               	goto	u3347
  1654  0AE7  0BE2               	decfsz	(??_main^(0+128)+2),f
  1655  0AE8  2AE3               	goto	u3347
  1656  0AE9  0000               	nop
  1657  0AEA                     l2923:	
  1658                           ;main.c: 554: while(1)
  1659                           
  1660                           
  1661                           ;main.c: 555: {
  1662                           ;main.c: 561: LCD_Clear();
  1663  0AEA  160A  118A  25D8  120A  158A  	fcall	_LCD_Clear
  1664                           
  1665                           ;main.c: 562: LCD_Cursor(0,0);
  1666  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0AF1  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1669  0AF2  3000               	movlw	0
  1670  0AF3  160A  118A  252F  120A  158A  	fcall	_LCD_Cursor
  1671                           
  1672                           ;main.c: 563: LCD_WriteString("kmH: ");
  1673  0AF8  3048               	movlw	low (STR_3-__stringbase)
  1674  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0AFB  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1677  0AFC  3080               	movlw	128
  1678  0AFD  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1679  0AFE  160A  118A  2601  120A  158A  	fcall	_LCD_WriteString
  1680                           
  1681                           ;main.c: 564: LCD_Cursor(0,6);
  1682  0B03  3006               	movlw	6
  1683  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0B06  00E0               	movwf	??_main^(0+128)
  1686  0B07  0860               	movf	??_main^(0+128),w
  1687  0B08  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1688  0B09  3000               	movlw	0
  1689  0B0A  160A  118A  252F  120A  158A  	fcall	_LCD_Cursor
  1690                           
  1691                           ;main.c: 565: LCD_WriteString(display_rpm);
  1692  0B0F  309A               	movlw	_display_rpm& (0+255)
  1693  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  1694  0B11  1303               	bcf	3,6	;RP1=0, select bank1
  1695  0B12  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1696  0B13  3001               	movlw	1
  1697  0B14  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1698  0B15  160A  118A  2601  120A  158A  	fcall	_LCD_WriteString
  1699                           
  1700                           ;main.c: 566: LCD_Cursor(1,0);
  1701  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0B1C  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1704  0B1D  3001               	movlw	1
  1705  0B1E  160A  118A  252F  120A  158A  	fcall	_LCD_Cursor
  1706                           
  1707                           ;main.c: 571: _delay((unsigned long)((200)*(18432000/4000.0)));
  1708  0B23  3005               	movlw	5
  1709  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  1711  0B26  00E2               	movwf	(??_main^(0+128)+2)
  1712  0B27  30AD               	movlw	173
  1713  0B28  00E1               	movwf	(??_main^(0+128)+1)
  1714  0B29  30E0               	movlw	224
  1715  0B2A  00E0               	movwf	??_main^(0+128)
  1716  0B2B                     u3357:	
  1717  0B2B  0BE0               	decfsz	??_main^(0+128),f
  1718  0B2C  2B2B               	goto	u3357
  1719  0B2D  0BE1               	decfsz	(??_main^(0+128)+1),f
  1720  0B2E  2B2B               	goto	u3357
  1721  0B2F  0BE2               	decfsz	(??_main^(0+128)+2),f
  1722  0B30  2B2B               	goto	u3357
  1723  0B31  2AEA               	goto	l2923
  1724  0B32                     __end_of_main:	
  1725                           
  1726                           	psect	text1
  1727  1670                     __ptext1:	
  1728 ;; *************** function _USART_Init *****************
  1729 ;; Defined at:
  1730 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  BaudRate        4   15[BANK1 ] long 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;		None               void
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       4       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          0       0       4       0       0
  1747 ;;      Totals:         0       0       8       0       0
  1748 ;;Total ram usage:        8 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    6
  1751 ;; This function calls:
  1752 ;;		___aldiv
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _USART_Init
  1760  1670                     _USART_Init:	
  1761                           
  1762                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1766  1670  1683               	bsf	3,5	;RP0=1, select bank1
  1767  1671  1303               	bcf	3,6	;RP1=0, select bank1
  1768  1672  0858               	movf	USART_Init@BaudRate^(0+128),w
  1769  1673  00DC               	movwf	??_USART_Init^(0+128)
  1770  1674  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  1771  1675  00DD               	movwf	(??_USART_Init^(0+128)+1)
  1772  1676  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  1773  1677  00DE               	movwf	(??_USART_Init^(0+128)+2)
  1774  1678  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  1775  1679  00DF               	movwf	(??_USART_Init^(0+128)+3)
  1776  167A  3004               	movlw	4
  1777  167B                     u3065:	
  1778  167B  1003               	clrc
  1779  167C  0DDC               	rlf	??_USART_Init^(0+128),f
  1780  167D  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  1781  167E  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  1782  167F  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  1783  1680  3EFF               	addlw	-1
  1784  1681  1D03               	skipz
  1785  1682  2E7B               	goto	u3065
  1786  1683  085F               	movf	(??_USART_Init+3)^(0+128),w
  1787  1684  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  1788  1685  085E               	movf	(??_USART_Init+2)^(0+128),w
  1789  1686  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  1790  1687  085D               	movf	(??_USART_Init+1)^(0+128),w
  1791  1688  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  1792  1689  085C               	movf	??_USART_Init^(0+128),w
  1793  168A  00C9               	movwf	___aldiv@divisor^(0+128)
  1794  168B  3001               	movlw	1
  1795  168C  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  1796  168D  3019               	movlw	25
  1797  168E  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  1798  168F  3040               	movlw	64
  1799  1690  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  1800  1691  3000               	movlw	0
  1801  1692  00CD               	movwf	___aldiv@dividend^(0+128)
  1802  1693  120A  158A  20FB   	fcall	___aldiv
  1803  1696  1683               	bsf	3,5	;RP0=1, select bank1
  1804  1697  1303               	bcf	3,6	;RP1=0, select bank1
  1805  1698  0849               	movf	?___aldiv^(0+128),w
  1806  1699  3EFF               	addlw	255
  1807  169A  0099               	movwf	25	;volatile
  1808                           
  1809                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1810  169B  1398               	bcf	24,7	;volatile
  1811                           
  1812                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1813  169C  1318               	bcf	24,6	;volatile
  1814                           
  1815                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1816  169D  1698               	bsf	24,5	;volatile
  1817                           
  1818                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1819  169E  1218               	bcf	24,4	;volatile
  1820                           
  1821                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1822  169F  1518               	bsf	24,2	;volatile
  1823                           
  1824                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1825  16A0  1498               	bsf	24,1	;volatile
  1826                           
  1827                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1828  16A1  1018               	bcf	24,0	;volatile
  1829                           
  1830                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1831  16A2  1283               	bcf	3,5	;RP0=0, select bank0
  1832  16A3  1303               	bcf	3,6	;RP1=0, select bank0
  1833  16A4  1798               	bsf	24,7	;volatile
  1834                           
  1835                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1836  16A5  1318               	bcf	24,6	;volatile
  1837                           
  1838                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1839  16A6  1298               	bcf	24,5	;volatile
  1840                           
  1841                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1842  16A7  1618               	bsf	24,4	;volatile
  1843                           
  1844                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1845  16A8  1198               	bcf	24,3	;volatile
  1846                           
  1847                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1848  16A9  1118               	bcf	24,2	;volatile
  1849                           
  1850                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1851  16AA  1098               	bcf	24,1	;volatile
  1852                           
  1853                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1854  16AB  1018               	bcf	24,0	;volatile
  1855                           
  1856                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1857  16AC  1683               	bsf	3,5	;RP0=1, select bank1
  1858  16AD  1303               	bcf	3,6	;RP1=0, select bank1
  1859  16AE  120C               	bcf	12,4	;volatile
  1860                           
  1861                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1862  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  1863  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  1864  16B1  120C               	bcf	12,4	;volatile
  1865                           
  1866                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1867  16B2  1683               	bsf	3,5	;RP0=1, select bank1
  1868  16B3  1303               	bcf	3,6	;RP1=0, select bank1
  1869  16B4  168C               	bsf	12,5	;volatile
  1870                           
  1871                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1872  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  1873  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  1874  16B7  128C               	bcf	12,5	;volatile
  1875  16B8  0008               	return
  1876  16B9                     __end_of_USART_Init:	
  1877                           
  1878                           	psect	text2
  1879  08FB                     __ptext2:	
  1880 ;; *************** function ___aldiv *****************
  1881 ;; Defined at:
  1882 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  divisor         4    0[BANK1 ] long 
  1885 ;;  dividend        4    4[BANK1 ] long 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  quotient        4   11[BANK1 ] long 
  1888 ;;  sign            1   10[BANK1 ] unsigned char 
  1889 ;;  counter         1    9[BANK1 ] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  4    0[BANK1 ] long 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       8       0       0
  1900 ;;      Locals:         0       0       6       0       0
  1901 ;;      Temps:          0       0       1       0       0
  1902 ;;      Totals:         0       0      15       0       0
  1903 ;;Total ram usage:       15 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    5
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_USART_Init
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function ___aldiv
  1915  08FB                     ___aldiv:	
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1919  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  1920  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  1921  08FD  01D3               	clrf	___aldiv@sign^(0+128)
  1922  08FE  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  1923  08FF  290D               	goto	l597
  1924  0900  09C9               	comf	___aldiv@divisor^(0+128),f
  1925  0901  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  1926  0902  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  1927  0903  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  1928  0904  0AC9               	incf	___aldiv@divisor^(0+128),f
  1929  0905  1903               	skipnz
  1930  0906  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  1931  0907  1903               	skipnz
  1932  0908  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  1933  0909  1903               	skipnz
  1934  090A  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  1935  090B  01D3               	clrf	___aldiv@sign^(0+128)
  1936  090C  0AD3               	incf	___aldiv@sign^(0+128),f
  1937  090D                     l597:	
  1938  090D  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  1939  090E  291E               	goto	l2293
  1940  090F  09CD               	comf	___aldiv@dividend^(0+128),f
  1941  0910  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  1942  0911  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  1943  0912  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  1944  0913  0ACD               	incf	___aldiv@dividend^(0+128),f
  1945  0914  1903               	skipnz
  1946  0915  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  1947  0916  1903               	skipnz
  1948  0917  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  1949  0918  1903               	skipnz
  1950  0919  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  1951  091A  3001               	movlw	1
  1952  091B  00D1               	movwf	??___aldiv^(0+128)
  1953  091C  0851               	movf	??___aldiv^(0+128),w
  1954  091D  06D3               	xorwf	___aldiv@sign^(0+128),f
  1955  091E                     l2293:	
  1956  091E  3000               	movlw	0
  1957  091F  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  1958  0920  3000               	movlw	0
  1959  0921  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  1960  0922  3000               	movlw	0
  1961  0923  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  1962  0924  3000               	movlw	0
  1963  0925  00D4               	movwf	___aldiv@quotient^(0+128)
  1964  0926  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  1965  0927  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  1966  0928  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  1967  0929  0449               	iorwf	___aldiv@divisor^(0+128),w
  1968  092A  1903               	skipnz
  1969  092B  2973               	goto	l2315
  1970  092C  01D2               	clrf	___aldiv@counter^(0+128)
  1971  092D  0AD2               	incf	___aldiv@counter^(0+128),f
  1972  092E                     l2301:	
  1973  092E  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  1974  092F  293E               	goto	l2303
  1975  0930  3001               	movlw	1
  1976  0931  00D1               	movwf	??___aldiv^(0+128)
  1977  0932                     u2475:	
  1978  0932  1003               	clrc
  1979  0933  0DC9               	rlf	___aldiv@divisor^(0+128),f
  1980  0934  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  1981  0935  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  1982  0936  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  1983  0937  0BD1               	decfsz	??___aldiv^(0+128),f
  1984  0938  2932               	goto	u2475
  1985  0939  3001               	movlw	1
  1986  093A  00D1               	movwf	??___aldiv^(0+128)
  1987  093B  0851               	movf	??___aldiv^(0+128),w
  1988  093C  07D2               	addwf	___aldiv@counter^(0+128),f
  1989  093D  292E               	goto	l2301
  1990  093E                     l2303:	
  1991  093E  3001               	movlw	1
  1992  093F  00D1               	movwf	??___aldiv^(0+128)
  1993  0940                     u2495:	
  1994  0940  1003               	clrc
  1995  0941  0DD4               	rlf	___aldiv@quotient^(0+128),f
  1996  0942  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  1997  0943  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  1998  0944  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  1999  0945  0BD1               	decfsz	??___aldiv^(0+128),f
  2000  0946  2940               	goto	u2495
  2001  0947  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  2002  0948  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  2003  0949  1D03               	skipz
  2004  094A  2955               	goto	u2505
  2005  094B  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  2006  094C  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  2007  094D  1D03               	skipz
  2008  094E  2955               	goto	u2505
  2009  094F  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  2010  0950  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  2011  0951  1D03               	skipz
  2012  0952  2955               	goto	u2505
  2013  0953  0849               	movf	___aldiv@divisor^(0+128),w
  2014  0954  024D               	subwf	___aldiv@dividend^(0+128),w
  2015  0955                     u2505:	
  2016  0955  1C03               	skipc
  2017  0956  2966               	goto	l2311
  2018  0957  0849               	movf	___aldiv@divisor^(0+128),w
  2019  0958  02CD               	subwf	___aldiv@dividend^(0+128),f
  2020  0959  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  2021  095A  1C03               	skipc
  2022  095B  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2023  095C  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  2024  095D  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  2025  095E  1C03               	skipc
  2026  095F  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2027  0960  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  2028  0961  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  2029  0962  1C03               	skipc
  2030  0963  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2031  0964  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  2032  0965  1454               	bsf	___aldiv@quotient^(0+128),0
  2033  0966                     l2311:	
  2034  0966  3001               	movlw	1
  2035  0967                     u2515:	
  2036  0967  1003               	clrc
  2037  0968  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  2038  0969  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  2039  096A  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  2040  096B  0CC9               	rrf	___aldiv@divisor^(0+128),f
  2041  096C  3EFF               	addlw	-1
  2042  096D  1D03               	skipz
  2043  096E  2967               	goto	u2515
  2044  096F  3001               	movlw	1
  2045  0970  02D2               	subwf	___aldiv@counter^(0+128),f
  2046  0971  1D03               	btfss	3,2
  2047  0972  293E               	goto	l2303
  2048  0973                     l2315:	
  2049  0973  0853               	movf	___aldiv@sign^(0+128),w
  2050  0974  1903               	btfsc	3,2
  2051  0975  2981               	goto	l2319
  2052  0976  09D4               	comf	___aldiv@quotient^(0+128),f
  2053  0977  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  2054  0978  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  2055  0979  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  2056  097A  0AD4               	incf	___aldiv@quotient^(0+128),f
  2057  097B  1903               	skipnz
  2058  097C  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  2059  097D  1903               	skipnz
  2060  097E  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  2061  097F  1903               	skipnz
  2062  0980  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  2063  0981                     l2319:	
  2064  0981  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  2065  0982  00CC               	movwf	(?___aldiv+3)^(0+128)
  2066  0983  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  2067  0984  00CB               	movwf	(?___aldiv+2)^(0+128)
  2068  0985  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  2069  0986  00CA               	movwf	(?___aldiv+1)^(0+128)
  2070  0987  0854               	movf	___aldiv@quotient^(0+128),w
  2071  0988  00C9               	movwf	?___aldiv^(0+128)
  2072  0989  0008               	return
  2073  098A                     __end_of___aldiv:	
  2074                           
  2075                           	psect	text3
  2076  1450                     __ptext3:	
  2077 ;; *************** function _TIMER0_Set *****************
  2078 ;; Defined at:
  2079 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  contagens       1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  contagens       1    0[BANK1 ] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         0       0       1       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       0       1       0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    5
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _TIMER0_Set
  2109  1450                     _TIMER0_Set:	
  2110                           
  2111                           ;incstack = 0
  2112                           ; Regs used in _TIMER0_Set: [wreg]
  2113                           ;TIMER0_Set@contagens stored from wreg
  2114  1450  1683               	bsf	3,5	;RP0=1, select bank1
  2115  1451  1303               	bcf	3,6	;RP1=0, select bank1
  2116  1452  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  2117                           
  2118                           ;timers.c: 22: TMR0 = contagens;
  2119  1453  0849               	movf	TIMER0_Set@contagens^(0+128),w
  2120  1454  1283               	bcf	3,5	;RP0=0, select bank0
  2121  1455  1303               	bcf	3,6	;RP1=0, select bank0
  2122  1456  0081               	movwf	1	;volatile
  2123  1457  0008               	return
  2124  1458                     __end_of_TIMER0_Set:	
  2125                           
  2126                           	psect	text4
  2127  146A                     __ptext4:	
  2128 ;; *************** function _TIMER0_Init *****************
  2129 ;; Defined at:
  2130 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;		None               void
  2137 ;; Registers used:
  2138 ;;		None
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    5
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _TIMER0_Init
  2160  146A                     _TIMER0_Init:	
  2161                           
  2162                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _TIMER0_Init: []
  2166  146A  1683               	bsf	3,5	;RP0=1, select bank1
  2167  146B  1303               	bcf	3,6	;RP1=0, select bank1
  2168  146C  1281               	bcf	1,5	;volatile
  2169                           
  2170                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2171  146D  1201               	bcf	1,4	;volatile
  2172                           
  2173                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2174  146E  1181               	bcf	1,3	;volatile
  2175                           
  2176                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2177  146F  1501               	bsf	1,2	;volatile
  2178                           
  2179                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2180  1470  1481               	bsf	1,1	;volatile
  2181                           
  2182                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2183  1471  1401               	bsf	1,0	;volatile
  2184                           
  2185                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2186  1472  110B               	bcf	11,2	;volatile
  2187                           
  2188                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2189  1473  168B               	bsf	11,5	;volatile
  2190  1474  0008               	return
  2191  1475                     __end_of_TIMER0_Init:	
  2192                           
  2193                           	psect	text5
  2194  15B4                     __ptext5:	
  2195 ;; *************** function _PWM_Init *****************
  2196 ;; Defined at:
  2197 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    5
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _PWM_Init
  2227  15B4                     _PWM_Init:	
  2228                           
  2229                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2230                           
  2231                           ;incstack = 0
  2232                           ; Regs used in _PWM_Init: [wreg]
  2233  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  2234  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  2235  15B6  1492               	bsf	18,1	;volatile
  2236                           
  2237                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2238  15B7  1012               	bcf	18,0	;volatile
  2239                           
  2240                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2241  15B8  1312               	bcf	18,6	;volatile
  2242                           
  2243                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2244  15B9  1292               	bcf	18,5	;volatile
  2245                           
  2246                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2247  15BA  1212               	bcf	18,4	;volatile
  2248                           
  2249                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2250  15BB  1192               	bcf	18,3	;volatile
  2251                           
  2252                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2253  15BC  1512               	bsf	18,2	;volatile
  2254                           
  2255                           ;pwm.c: 27: PR2 = 255;
  2256  15BD  30FF               	movlw	255
  2257  15BE  1683               	bsf	3,5	;RP0=1, select bank1
  2258  15BF  1303               	bcf	3,6	;RP1=0, select bank1
  2259  15C0  0092               	movwf	18	;volatile
  2260                           
  2261                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2262  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  2263  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  2264  15C3  1597               	bsf	23,3	;volatile
  2265                           
  2266                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2267  15C4  1517               	bsf	23,2	;volatile
  2268                           
  2269                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2270  15C5  1497               	bsf	23,1	;volatile
  2271                           
  2272                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2273  15C6  1417               	bsf	23,0	;volatile
  2274                           
  2275                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2276  15C7  1683               	bsf	3,5	;RP0=1, select bank1
  2277  15C8  1303               	bcf	3,6	;RP1=0, select bank1
  2278  15C9  150C               	bsf	12,2	;volatile
  2279                           
  2280                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2281  15CA  1283               	bcf	3,5	;RP0=0, select bank0
  2282  15CB  1303               	bcf	3,6	;RP1=0, select bank0
  2283  15CC  110C               	bcf	12,2	;volatile
  2284                           
  2285                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2286  15CD  159D               	bsf	29,3	;volatile
  2287                           
  2288                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2289  15CE  151D               	bsf	29,2	;volatile
  2290                           
  2291                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2292  15CF  149D               	bsf	29,1	;volatile
  2293                           
  2294                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2295  15D0  141D               	bsf	29,0	;volatile
  2296                           
  2297                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2298  15D1  1683               	bsf	3,5	;RP0=1, select bank1
  2299  15D2  1303               	bcf	3,6	;RP1=0, select bank1
  2300  15D3  140D               	bsf	13,0	;volatile
  2301                           
  2302                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2303  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  2304  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  2305  15D6  100D               	bcf	13,0	;volatile
  2306  15D7  0008               	return
  2307  15D8                     __end_of_PWM_Init:	
  2308                           
  2309                           	psect	text6
  2310  1570                     __ptext6:	
  2311 ;; *************** function _PWM_DutyCycle2 *****************
  2312 ;; Defined at:
  2313 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  valor           2    0[BANK1 ] int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       2       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       0       2       0       0
  2330 ;;      Totals:         0       0       4       0       0
  2331 ;;Total ram usage:        4 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    5
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _PWM_DutyCycle2
  2343  1570                     _PWM_DutyCycle2:	
  2344                           
  2345                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2349  1570  1683               	bsf	3,5	;RP0=1, select bank1
  2350  1571  1303               	bcf	3,6	;RP1=0, select bank1
  2351  1572  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  2352  1573  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  2353  1574  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  2354  1575  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  2355  1576  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2356  1577  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2357  1578  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  2358  1579  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2359  157A  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2360  157B  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  2361  157C  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  2362  157D  1283               	bcf	3,5	;RP0=0, select bank0
  2363  157E  1303               	bcf	3,6	;RP1=0, select bank0
  2364  157F  009B               	movwf	27	;volatile
  2365                           
  2366                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2367  1580  1683               	bsf	3,5	;RP0=1, select bank1
  2368  1581  1303               	bcf	3,6	;RP1=0, select bank1
  2369  1582  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  2370  1583  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  2371  1584  3003               	movlw	3
  2372  1585                     u3045:	
  2373  1585  1003               	clrc
  2374  1586  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  2375  1587  3EFF               	addlw	-1
  2376  1588  1D03               	skipz
  2377  1589  2D85               	goto	u3045
  2378  158A  1003               	clrc
  2379  158B  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  2380  158C  380C               	iorlw	12
  2381  158D  1283               	bcf	3,5	;RP0=0, select bank0
  2382  158E  1303               	bcf	3,6	;RP1=0, select bank0
  2383  158F  009D               	movwf	29	;volatile
  2384  1590  0008               	return
  2385  1591                     __end_of_PWM_DutyCycle2:	
  2386                           
  2387                           	psect	text7
  2388  154F                     __ptext7:	
  2389 ;; *************** function _PWM_DutyCycle1 *****************
  2390 ;; Defined at:
  2391 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  valor           2    0[BANK1 ] int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       0       2       0       0
  2406 ;;      Locals:         0       0       0       0       0
  2407 ;;      Temps:          0       0       2       0       0
  2408 ;;      Totals:         0       0       4       0       0
  2409 ;;Total ram usage:        4 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    5
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _PWM_DutyCycle1
  2421  154F                     _PWM_DutyCycle1:	
  2422                           
  2423                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2427  154F  1683               	bsf	3,5	;RP0=1, select bank1
  2428  1550  1303               	bcf	3,6	;RP1=0, select bank1
  2429  1551  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  2430  1552  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  2431  1553  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  2432  1554  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  2433  1555  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2434  1556  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2435  1557  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  2436  1558  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2437  1559  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2438  155A  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  2439  155B  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  2440  155C  1283               	bcf	3,5	;RP0=0, select bank0
  2441  155D  1303               	bcf	3,6	;RP1=0, select bank0
  2442  155E  0095               	movwf	21	;volatile
  2443                           
  2444                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2445  155F  1683               	bsf	3,5	;RP0=1, select bank1
  2446  1560  1303               	bcf	3,6	;RP1=0, select bank1
  2447  1561  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  2448  1562  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  2449  1563  3003               	movlw	3
  2450  1564                     u3095:	
  2451  1564  1003               	clrc
  2452  1565  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  2453  1566  3EFF               	addlw	-1
  2454  1567  1D03               	skipz
  2455  1568  2D64               	goto	u3095
  2456  1569  1003               	clrc
  2457  156A  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  2458  156B  380C               	iorlw	12
  2459  156C  1283               	bcf	3,5	;RP0=0, select bank0
  2460  156D  1303               	bcf	3,6	;RP1=0, select bank0
  2461  156E  0097               	movwf	23	;volatile
  2462  156F  0008               	return
  2463  1570                     __end_of_PWM_DutyCycle1:	
  2464                           
  2465                           	psect	text8
  2466  1601                     __ptext8:	
  2467 ;; *************** function _LCD_WriteString *****************
  2468 ;; Defined at:
  2469 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  2472 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;		None               void
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       2       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         0       0       2       0       0
  2488 ;;Total ram usage:        2 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    6
  2491 ;; This function calls:
  2492 ;;		_LCD_WriteData
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _LCD_WriteString
  2500  1601                     _LCD_WriteString:	
  2501  1601                     l2741:	
  2502                           ;lcd.c: 63: while(*Str != '\0')
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2506                           
  2507  1601  1683               	bsf	3,5	;RP0=1, select bank1
  2508  1602  1303               	bcf	3,6	;RP1=0, select bank1
  2509  1603  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2510  1604  1283               	bcf	3,5	;RP0=0, select bank0
  2511  1605  1303               	bcf	3,6	;RP1=0, select bank0
  2512  1606  00FF               	movwf	127
  2513  1607  1683               	bsf	3,5	;RP0=1, select bank1
  2514  1608  1303               	bcf	3,6	;RP1=0, select bank1
  2515  1609  084B               	movf	LCD_WriteString@Str^(0+128),w
  2516  160A  0084               	movwf	4
  2517  160B  1283               	bcf	3,5	;RP0=0, select bank0
  2518  160C  1303               	bcf	3,6	;RP1=0, select bank0
  2519  160D  160A  118A  2000  160A  118A  	fcall	stringtab
  2520  1612  3800               	iorlw	0
  2521  1613  1903               	btfsc	3,2
  2522  1614  0008               	return
  2523                           
  2524                           ;lcd.c: 64: {
  2525                           ;lcd.c: 65: LCD_WriteData(*Str);
  2526  1615  1683               	bsf	3,5	;RP0=1, select bank1
  2527  1616  1303               	bcf	3,6	;RP1=0, select bank1
  2528  1617  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2529  1618  1283               	bcf	3,5	;RP0=0, select bank0
  2530  1619  1303               	bcf	3,6	;RP1=0, select bank0
  2531  161A  00FF               	movwf	127
  2532  161B  1683               	bsf	3,5	;RP0=1, select bank1
  2533  161C  1303               	bcf	3,6	;RP1=0, select bank1
  2534  161D  084B               	movf	LCD_WriteString@Str^(0+128),w
  2535  161E  0084               	movwf	4
  2536  161F  1283               	bcf	3,5	;RP0=0, select bank0
  2537  1620  1303               	bcf	3,6	;RP1=0, select bank0
  2538  1621  160A  118A  2000  160A  118A  	fcall	stringtab
  2539  1626  160A  118A  24C3  160A  118A  	fcall	_LCD_WriteData
  2540                           
  2541                           ;lcd.c: 66: Str++;
  2542  162B  3001               	movlw	1
  2543  162C  1683               	bsf	3,5	;RP0=1, select bank1
  2544  162D  1303               	bcf	3,6	;RP1=0, select bank1
  2545  162E  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  2546  162F  1803               	skipnc
  2547  1630  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  2548  1631  2E01               	goto	l2741
  2549  1632                     __end_of_LCD_WriteString:	
  2550                           
  2551                           	psect	text9
  2552  14C3                     __ptext9:	
  2553 ;; *************** function _LCD_WriteData *****************
  2554 ;; Defined at:
  2555 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  Byte            1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  Byte            1    1[BANK1 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		wreg
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       1       0       0
  2571 ;;      Temps:          0       0       1       0       0
  2572 ;;      Totals:         0       0       2       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    5
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_LCD_WriteString
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _LCD_WriteData
  2585  14C3                     _LCD_WriteData:	
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _LCD_WriteData: [wreg]
  2589                           ;LCD_WriteData@Byte stored from wreg
  2590  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  2591  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  2592  14C5  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  2593                           
  2594                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2595  14C6  1283               	bcf	3,5	;RP0=0, select bank0
  2596  14C7  1303               	bcf	3,6	;RP1=0, select bank0
  2597  14C8  1409               	bsf	9,0	;volatile
  2598                           
  2599                           ;lcd.c: 51: PORTD = Byte;
  2600  14C9  1683               	bsf	3,5	;RP0=1, select bank1
  2601  14CA  1303               	bcf	3,6	;RP1=0, select bank1
  2602  14CB  084A               	movf	LCD_WriteData@Byte^(0+128),w
  2603  14CC  1283               	bcf	3,5	;RP0=0, select bank0
  2604  14CD  1303               	bcf	3,6	;RP1=0, select bank0
  2605  14CE  0088               	movwf	8	;volatile
  2606                           
  2607                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2608  14CF  1489               	bsf	9,1	;volatile
  2609                           
  2610                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2611  14D0  303D               	movlw	61
  2612  14D1  1683               	bsf	3,5	;RP0=1, select bank1
  2613  14D2  1303               	bcf	3,6	;RP1=0, select bank1
  2614  14D3  00C9               	movwf	??_LCD_WriteData^(0+128)
  2615  14D4                     u3367:	
  2616  14D4  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  2617  14D5  2CD4               	goto	u3367
  2618                           
  2619                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2620  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  2621  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  2622  14D8  1089               	bcf	9,1	;volatile
  2623  14D9  0008               	return
  2624  14DA                     __end_of_LCD_WriteData:	
  2625                           
  2626                           	psect	text10
  2627  0802                     __ptext10:	
  2628 ;; *************** function _LCD_Init *****************
  2629 ;; Defined at:
  2630 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;		None               void
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0
  2646 ;;      Temps:          0       0       2       0       0
  2647 ;;      Totals:         0       0       2       0       0
  2648 ;;Total ram usage:        2 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    6
  2651 ;; This function calls:
  2652 ;;		_LCD_WriteCmd
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function _LCD_Init
  2660  0802                     _LCD_Init:	
  2661                           
  2662                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2666  0802  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0803  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0804  119F               	bcf	31,3	;volatile
  2669                           
  2670                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2671  0805  151F               	bsf	31,2	;volatile
  2672                           
  2673                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2674  0806  109F               	bcf	31,1	;volatile
  2675                           
  2676                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2677  0807  101F               	bcf	31,0	;volatile
  2678                           
  2679                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2680  0808  305A               	movlw	90
  2681  0809  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2682  080A  30C3               	movlw	195
  2683  080B  00CB               	movwf	??_LCD_Init^(0+128)
  2684  080C                     u3377:	
  2685  080C  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2686  080D  280C               	goto	u3377
  2687  080E  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2688  080F  280C               	goto	u3377
  2689                           
  2690                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2691  0810  3030               	movlw	48
  2692  0811  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2693                           
  2694                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2695  0816  3018               	movlw	24
  2696  0817  1683               	bsf	3,5	;RP0=1, select bank1
  2697  0818  1303               	bcf	3,6	;RP1=0, select bank1
  2698  0819  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2699  081A  30EF               	movlw	239
  2700  081B  00CB               	movwf	??_LCD_Init^(0+128)
  2701  081C                     u3387:	
  2702  081C  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2703  081D  281C               	goto	u3387
  2704  081E  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2705  081F  281C               	goto	u3387
  2706                           
  2707                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2708  0820  3030               	movlw	48
  2709  0821  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2710                           
  2711                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2712  0826  3099               	movlw	153
  2713  0827  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0828  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0829  00CB               	movwf	??_LCD_Init^(0+128)
  2716  082A                     u3397:	
  2717  082A  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2718  082B  282A               	goto	u3397
  2719                           
  2720                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2721  082C  3030               	movlw	48
  2722  082D  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2723                           
  2724                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2725  0832  303D               	movlw	61
  2726  0833  1683               	bsf	3,5	;RP0=1, select bank1
  2727  0834  1303               	bcf	3,6	;RP1=0, select bank1
  2728  0835  00CB               	movwf	??_LCD_Init^(0+128)
  2729  0836                     u3407:	
  2730  0836  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2731  0837  2836               	goto	u3407
  2732                           
  2733                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2734  0838  3038               	movlw	56
  2735  0839  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2736                           
  2737                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2738  083E  303D               	movlw	61
  2739  083F  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0840  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0841  00CB               	movwf	??_LCD_Init^(0+128)
  2742  0842                     u3417:	
  2743  0842  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2744  0843  2842               	goto	u3417
  2745                           
  2746                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2747  0844  3001               	movlw	1
  2748  0845  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2749                           
  2750                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2751  084A  300C               	movlw	12
  2752  084B  1683               	bsf	3,5	;RP0=1, select bank1
  2753  084C  1303               	bcf	3,6	;RP1=0, select bank1
  2754  084D  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2755  084E  30F7               	movlw	247
  2756  084F  00CB               	movwf	??_LCD_Init^(0+128)
  2757  0850                     u3427:	
  2758  0850  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2759  0851  2850               	goto	u3427
  2760  0852  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2761  0853  2850               	goto	u3427
  2762                           
  2763                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2764  0854  300C               	movlw	12
  2765  0855  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2766                           
  2767                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2768  085A  303D               	movlw	61
  2769  085B  1683               	bsf	3,5	;RP0=1, select bank1
  2770  085C  1303               	bcf	3,6	;RP1=0, select bank1
  2771  085D  00CB               	movwf	??_LCD_Init^(0+128)
  2772  085E                     u3437:	
  2773  085E  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2774  085F  285E               	goto	u3437
  2775                           
  2776                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2777  0860  3006               	movlw	6
  2778  0861  160A  118A  24AC  120A  158A  	fcall	_LCD_WriteCmd
  2779                           
  2780                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2781  0866  303D               	movlw	61
  2782  0867  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0868  1303               	bcf	3,6	;RP1=0, select bank1
  2784  0869  00CB               	movwf	??_LCD_Init^(0+128)
  2785  086A                     u3447:	
  2786  086A  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2787  086B  286A               	goto	u3447
  2788  086C  0008               	return
  2789  086D                     __end_of_LCD_Init:	
  2790                           
  2791                           	psect	text11
  2792  152F                     __ptext11:	
  2793 ;; *************** function _LCD_Cursor *****************
  2794 ;; Defined at:
  2795 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  Row             1    wreg     unsigned char 
  2798 ;;  Col             1    0[BANK1 ] unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  Row             1    2[BANK1 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       0       1       0       0
  2811 ;;      Locals:         0       0       1       0       0
  2812 ;;      Temps:          0       0       1       0       0
  2813 ;;      Totals:         0       0       3       0       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _LCD_Cursor
  2826  152F                     _LCD_Cursor:	
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2830                           ;LCD_Cursor@Row stored from wreg
  2831  152F  1683               	bsf	3,5	;RP0=1, select bank1
  2832  1530  1303               	bcf	3,6	;RP1=0, select bank1
  2833  1531  00CB               	movwf	LCD_Cursor@Row^(0+128)
  2834                           
  2835                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2836  1532  1283               	bcf	3,5	;RP0=0, select bank0
  2837  1533  1303               	bcf	3,6	;RP1=0, select bank0
  2838  1534  1009               	bcf	9,0	;volatile
  2839                           
  2840                           ;lcd.c: 14: if (Row == 0)
  2841  1535  1683               	bsf	3,5	;RP0=1, select bank1
  2842  1536  1303               	bcf	3,6	;RP1=0, select bank1
  2843  1537  08CB               	movf	LCD_Cursor@Row^(0+128),f
  2844  1538  1D03               	skipz
  2845  1539  2D3D               	goto	l2727
  2846                           
  2847                           ;lcd.c: 15: {
  2848                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2849  153A  0849               	movf	LCD_Cursor@Col^(0+128),w
  2850  153B  3E80               	addlw	128
  2851  153C  2D41               	goto	L1
  2852  153D                     l2727:	
  2853                           ;lcd.c: 17: }
  2854                           
  2855                           
  2856                           ;lcd.c: 18: else
  2857                           ;lcd.c: 19: {
  2858                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2859  153D  1683               	bsf	3,5	;RP0=1, select bank1
  2860  153E  1303               	bcf	3,6	;RP1=0, select bank1
  2861  153F  0849               	movf	LCD_Cursor@Col^(0+128),w
  2862  1540  3EC0               	addlw	192
  2863  1541                     L1:	
  2864  1541  1283               	bcf	3,5	;RP0=0, select bank0
  2865  1542  1303               	bcf	3,6	;RP1=0, select bank0
  2866  1543  0088               	movwf	8	;volatile
  2867                           
  2868                           ;lcd.c: 21: }
  2869                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2870  1544  1489               	bsf	9,1	;volatile
  2871                           
  2872                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2873  1545  303D               	movlw	61
  2874  1546  1683               	bsf	3,5	;RP0=1, select bank1
  2875  1547  1303               	bcf	3,6	;RP1=0, select bank1
  2876  1548  00CA               	movwf	??_LCD_Cursor^(0+128)
  2877  1549                     u3457:	
  2878  1549  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  2879  154A  2D49               	goto	u3457
  2880                           
  2881                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2882  154B  1283               	bcf	3,5	;RP0=0, select bank0
  2883  154C  1303               	bcf	3,6	;RP1=0, select bank0
  2884  154D  1089               	bcf	9,1	;volatile
  2885  154E  0008               	return
  2886  154F                     __end_of_LCD_Cursor:	
  2887                           
  2888                           	psect	text12
  2889  15D8                     __ptext12:	
  2890 ;; *************** function _LCD_Clear *****************
  2891 ;; Defined at:
  2892 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          0       0       2       0       0
  2909 ;;      Totals:         0       0       2       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    6
  2913 ;; This function calls:
  2914 ;;		_LCD_WriteCmd
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function _LCD_Clear
  2922  15D8                     _LCD_Clear:	
  2923                           
  2924                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2928  15D8  3001               	movlw	1
  2929  15D9  160A  118A  24AC  160A  118A  	fcall	_LCD_WriteCmd
  2930                           
  2931                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2932  15DE  300C               	movlw	12
  2933  15DF  1683               	bsf	3,5	;RP0=1, select bank1
  2934  15E0  1303               	bcf	3,6	;RP1=0, select bank1
  2935  15E1  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  2936  15E2  30F7               	movlw	247
  2937  15E3  00CB               	movwf	??_LCD_Clear^(0+128)
  2938  15E4                     u3467:	
  2939  15E4  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2940  15E5  2DE4               	goto	u3467
  2941  15E6  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2942  15E7  2DE4               	goto	u3467
  2943                           
  2944                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2945  15E8  300C               	movlw	12
  2946  15E9  160A  118A  24AC  160A  118A  	fcall	_LCD_WriteCmd
  2947                           
  2948                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2949  15EE  303D               	movlw	61
  2950  15EF  1683               	bsf	3,5	;RP0=1, select bank1
  2951  15F0  1303               	bcf	3,6	;RP1=0, select bank1
  2952  15F1  00CB               	movwf	??_LCD_Clear^(0+128)
  2953  15F2                     u3477:	
  2954  15F2  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2955  15F3  2DF2               	goto	u3477
  2956                           
  2957                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2958  15F4  3006               	movlw	6
  2959  15F5  160A  118A  24AC  160A  118A  	fcall	_LCD_WriteCmd
  2960                           
  2961                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2962  15FA  303D               	movlw	61
  2963  15FB  1683               	bsf	3,5	;RP0=1, select bank1
  2964  15FC  1303               	bcf	3,6	;RP1=0, select bank1
  2965  15FD  00CB               	movwf	??_LCD_Clear^(0+128)
  2966  15FE                     u3487:	
  2967  15FE  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2968  15FF  2DFE               	goto	u3487
  2969  1600  0008               	return
  2970  1601                     __end_of_LCD_Clear:	
  2971                           
  2972                           	psect	text13
  2973  14AC                     __ptext13:	
  2974 ;; *************** function _LCD_WriteCmd *****************
  2975 ;; Defined at:
  2976 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  Byte            1    wreg     unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  Byte            1    1[BANK1 ] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;		None               void
  2983 ;; Registers used:
  2984 ;;		wreg
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2990 ;;      Params:         0       0       0       0       0
  2991 ;;      Locals:         0       0       1       0       0
  2992 ;;      Temps:          0       0       1       0       0
  2993 ;;      Totals:         0       0       2       0       0
  2994 ;;Total ram usage:        2 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    5
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_LCD_Clear
  3001 ;;		_LCD_Init
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _LCD_WriteCmd
  3007  14AC                     _LCD_WriteCmd:	
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _LCD_WriteCmd: [wreg]
  3011                           ;LCD_WriteCmd@Byte stored from wreg
  3012  14AC  1683               	bsf	3,5	;RP0=1, select bank1
  3013  14AD  1303               	bcf	3,6	;RP1=0, select bank1
  3014  14AE  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  3015                           
  3016                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3017  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  3018  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  3019  14B1  1009               	bcf	9,0	;volatile
  3020                           
  3021                           ;lcd.c: 36: PORTD = Byte;
  3022  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  3023  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  3024  14B4  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  3025  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  3026  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  3027  14B7  0088               	movwf	8	;volatile
  3028                           
  3029                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3030  14B8  1489               	bsf	9,1	;volatile
  3031                           
  3032                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3033  14B9  303D               	movlw	61
  3034  14BA  1683               	bsf	3,5	;RP0=1, select bank1
  3035  14BB  1303               	bcf	3,6	;RP1=0, select bank1
  3036  14BC  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  3037  14BD                     u3497:	
  3038  14BD  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  3039  14BE  2CBD               	goto	u3497
  3040                           
  3041                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3042  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  3043  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  3044  14C1  1089               	bcf	9,1	;volatile
  3045  14C2  0008               	return
  3046  14C3                     __end_of_LCD_WriteCmd:	
  3047                           
  3048                           	psect	text14
  3049  1486                     __ptext14:	
  3050 ;; *************** function _ADC_Init *****************
  3051 ;; Defined at:
  3052 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		None
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    5
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _ADC_Init
  3082  1486                     _ADC_Init:	
  3083                           
  3084                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _ADC_Init: []
  3088  1486  1683               	bsf	3,5	;RP0=1, select bank1
  3089  1487  1303               	bcf	3,6	;RP1=0, select bank1
  3090  1488  179F               	bsf	31,7	;volatile
  3091                           
  3092                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3093  1489  159F               	bsf	31,3	;volatile
  3094                           
  3095                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3096  148A  151F               	bsf	31,2	;volatile
  3097                           
  3098                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3099  148B  149F               	bsf	31,1	;volatile
  3100                           
  3101                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3102  148C  101F               	bcf	31,0	;volatile
  3103                           
  3104                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3105  148D  1283               	bcf	3,5	;RP0=0, select bank0
  3106  148E  1303               	bcf	3,6	;RP1=0, select bank0
  3107  148F  179F               	bsf	31,7	;volatile
  3108                           
  3109                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3110  1490  131F               	bcf	31,6	;volatile
  3111                           
  3112                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3113  1491  1683               	bsf	3,5	;RP0=1, select bank1
  3114  1492  1303               	bcf	3,6	;RP1=0, select bank1
  3115  1493  130C               	bcf	12,6	;volatile
  3116                           
  3117                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3118  1494  1283               	bcf	3,5	;RP0=0, select bank0
  3119  1495  1303               	bcf	3,6	;RP1=0, select bank0
  3120  1496  130C               	bcf	12,6	;volatile
  3121  1497  0008               	return
  3122  1498                     __end_of_ADC_Init:	
  3123                           
  3124                           	psect	text15
  3125  0D5F                     __ptext15:	
  3126 ;; *************** function _ISR *****************
  3127 ;; Defined at:
  3128 ;;		line 354 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0
  3144 ;;      Temps:          0       4       0       0       0
  3145 ;;      Totals:         0       4       0       0       0
  3146 ;;Total ram usage:        4 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    4
  3149 ;; This function calls:
  3150 ;;		_Fuzzy
  3151 ;;		_USART_ReceiveChar
  3152 ;;		_USART_WriteString
  3153 ;;		___lwdiv
  3154 ;;		___lwtoft
  3155 ;;		___wmul
  3156 ;;		_send
  3157 ;;		i1_PWM_DutyCycle2
  3158 ;;		i1_TIMER0_Set
  3159 ;; This function is called by:
  3160 ;;		Interrupt level 1
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _ISR
  3166  0D5F                     _ISR:	
  3167                           
  3168                           ;main.c: 357: if (PIR1bits.RCIF)
  3169  0D5F  1E8C               	btfss	12,5	;volatile
  3170  0D60  2E25               	goto	i1l2847
  3171                           
  3172                           ;main.c: 358: {
  3173                           ;main.c: 359: if (USART_ReceiveChar() == '0')
  3174  0D61  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3175  0D66  3A30               	xorlw	48
  3176  0D67  1D03               	skipz
  3177  0D68  2D7B               	goto	i1l2801
  3178                           
  3179                           ;main.c: 360: {
  3180                           ;main.c: 361: USART_WriteString("\n\rdesligado\n\r");
  3181  0D69  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3182  0D6A  160A  118A  24F5  120A  158A  	fcall	_USART_WriteString
  3183                           
  3184                           ;main.c: 363: PWM_DutyCycle2(0);
  3185  0D6F  3000               	movlw	0
  3186  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0D72  00BE               	movwf	i1PWM_DutyCycle2@valor
  3189  0D73  3000               	movlw	0
  3190  0D74  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  3191  0D75  160A  118A  24DA  120A  158A  	fcall	i1_PWM_DutyCycle2
  3192                           
  3193                           ;main.c: 364: return;
  3194  0D7A  2E9D               	goto	i1l178
  3195  0D7B                     i1l2801:	
  3196                           
  3197                           ;main.c: 365: }
  3198                           ;main.c: 367: if (USART_ReceiveChar() == '1')
  3199  0D7B  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3200  0D80  3A31               	xorlw	49
  3201  0D81  1D03               	skipz
  3202  0D82  2D89               	goto	i1l2805
  3203                           
  3204                           ;main.c: 368: {
  3205                           ;main.c: 369: setpointUI = 720;
  3206  0D83  30D0               	movlw	208
  3207  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  3209  0D86  00C5               	movwf	_setpointUI^(0+128)
  3210  0D87  3002               	movlw	2
  3211  0D88  00C6               	movwf	(_setpointUI^(0+128)+1)
  3212  0D89                     i1l2805:	
  3213                           
  3214                           ;main.c: 371: }
  3215                           ;main.c: 373: if (USART_ReceiveChar() == '2')
  3216  0D89  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3217  0D8E  3A32               	xorlw	50
  3218  0D8F  1D03               	skipz
  3219  0D90  2D97               	goto	i1l2809
  3220                           
  3221                           ;main.c: 374: {
  3222                           ;main.c: 375: setpointUI = 1450;
  3223  0D91  30AA               	movlw	170
  3224  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0D94  00C5               	movwf	_setpointUI^(0+128)
  3227  0D95  3005               	movlw	5
  3228  0D96  00C6               	movwf	(_setpointUI^(0+128)+1)
  3229  0D97                     i1l2809:	
  3230                           
  3231                           ;main.c: 377: }
  3232                           ;main.c: 379: if (USART_ReceiveChar() == '3')
  3233  0D97  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3234  0D9C  3A33               	xorlw	51
  3235  0D9D  1D03               	skipz
  3236  0D9E  2DA5               	goto	i1l2813
  3237                           
  3238                           ;main.c: 380: {
  3239                           ;main.c: 381: setpointUI = 2828;
  3240  0D9F  300C               	movlw	12
  3241  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  3242  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  3243  0DA2  00C5               	movwf	_setpointUI^(0+128)
  3244  0DA3  300B               	movlw	11
  3245  0DA4  00C6               	movwf	(_setpointUI^(0+128)+1)
  3246  0DA5                     i1l2813:	
  3247                           
  3248                           ;main.c: 383: }
  3249                           ;main.c: 385: if (USART_ReceiveChar() == '4')
  3250  0DA5  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3251  0DAA  3A34               	xorlw	52
  3252  0DAB  1D03               	skipz
  3253  0DAC  2DB3               	goto	i1l2817
  3254                           
  3255                           ;main.c: 386: {
  3256                           ;main.c: 387: setpointUI = 3256;
  3257  0DAD  30B8               	movlw	184
  3258  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  3260  0DB0  00C5               	movwf	_setpointUI^(0+128)
  3261  0DB1  300C               	movlw	12
  3262  0DB2  00C6               	movwf	(_setpointUI^(0+128)+1)
  3263  0DB3                     i1l2817:	
  3264                           
  3265                           ;main.c: 389: }
  3266                           ;main.c: 391: if (USART_ReceiveChar() == '5')
  3267  0DB3  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3268  0DB8  3A35               	xorlw	53
  3269  0DB9  1D03               	skipz
  3270  0DBA  2DC1               	goto	i1l2821
  3271                           
  3272                           ;main.c: 392: {
  3273                           ;main.c: 393: setpointUI = 4510;
  3274  0DBB  309E               	movlw	158
  3275  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  3276  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  3277  0DBE  00C5               	movwf	_setpointUI^(0+128)
  3278  0DBF  3011               	movlw	17
  3279  0DC0  00C6               	movwf	(_setpointUI^(0+128)+1)
  3280  0DC1                     i1l2821:	
  3281                           
  3282                           ;main.c: 395: }
  3283                           ;main.c: 397: if (USART_ReceiveChar() == '6')
  3284  0DC1  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3285  0DC6  3A36               	xorlw	54
  3286  0DC7  1D03               	skipz
  3287  0DC8  2DCF               	goto	i1l2825
  3288                           
  3289                           ;main.c: 398: {
  3290                           ;main.c: 399: setpointUI = 5760;
  3291  0DC9  3080               	movlw	128
  3292  0DCA  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0DCB  1303               	bcf	3,6	;RP1=0, select bank1
  3294  0DCC  00C5               	movwf	_setpointUI^(0+128)
  3295  0DCD  3016               	movlw	22
  3296  0DCE  00C6               	movwf	(_setpointUI^(0+128)+1)
  3297  0DCF                     i1l2825:	
  3298                           
  3299                           ;main.c: 401: }
  3300                           ;main.c: 403: if (USART_ReceiveChar() == '7')
  3301  0DCF  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3302  0DD4  3A37               	xorlw	55
  3303  0DD5  1D03               	skipz
  3304  0DD6  2DDD               	goto	i1l2829
  3305                           
  3306                           ;main.c: 404: {
  3307                           ;main.c: 405: setpointUI = 6890;
  3308  0DD7  30EA               	movlw	234
  3309  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0DDA  00C5               	movwf	_setpointUI^(0+128)
  3312  0DDB  301A               	movlw	26
  3313  0DDC  00C6               	movwf	(_setpointUI^(0+128)+1)
  3314  0DDD                     i1l2829:	
  3315                           
  3316                           ;main.c: 407: }
  3317                           ;main.c: 409: if (USART_ReceiveChar() == '8')
  3318  0DDD  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3319  0DE2  3A38               	xorlw	56
  3320  0DE3  1D03               	skipz
  3321  0DE4  2DEB               	goto	i1l2833
  3322                           
  3323                           ;main.c: 410: {
  3324                           ;main.c: 411: setpointUI = 8100;
  3325  0DE5  30A4               	movlw	164
  3326  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0DE8  00C5               	movwf	_setpointUI^(0+128)
  3329  0DE9  301F               	movlw	31
  3330  0DEA  00C6               	movwf	(_setpointUI^(0+128)+1)
  3331  0DEB                     i1l2833:	
  3332                           
  3333                           ;main.c: 413: }
  3334                           ;main.c: 415: if (USART_ReceiveChar() == '9')
  3335  0DEB  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3336  0DF0  3A39               	xorlw	57
  3337  0DF1  1D03               	skipz
  3338  0DF2  2DF9               	goto	i1l2837
  3339                           
  3340                           ;main.c: 416: {
  3341                           ;main.c: 417: setpointUI = 9000;
  3342  0DF3  3028               	movlw	40
  3343  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0DF6  00C5               	movwf	_setpointUI^(0+128)
  3346  0DF7  3023               	movlw	35
  3347  0DF8  00C6               	movwf	(_setpointUI^(0+128)+1)
  3348  0DF9                     i1l2837:	
  3349                           
  3350                           ;main.c: 419: }
  3351                           ;main.c: 423: Fuzzy();
  3352  0DF9  120A  118A  2044  120A  158A  	fcall	_Fuzzy
  3353                           
  3354                           ;main.c: 424: tf = (setpointUI - 100);
  3355  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  3356  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0E00  0845               	movf	_setpointUI^(0+128),w
  3358  0E01  3E9C               	addlw	156
  3359  0E02  00F8               	movwf	___lwtoft@c
  3360  0E03  0846               	movf	(_setpointUI+1)^(0+128),w
  3361  0E04  1803               	skipnc
  3362  0E05  3E01               	addlw	1
  3363  0E06  3EFF               	addlw	255
  3364  0E07  00F9               	movwf	___lwtoft@c+1
  3365  0E08  160A  118A  2498  120A  158A  	fcall	___lwtoft
  3366  0E0D  0878               	movf	?___lwtoft,w
  3367  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0E10  00ED               	movwf	_tf
  3370  0E11  0879               	movf	?___lwtoft+1,w
  3371  0E12  00EE               	movwf	_tf+1
  3372  0E13  087A               	movf	?___lwtoft+2,w
  3373  0E14  00EF               	movwf	_tf+2
  3374                           
  3375                           ;main.c: 427: if(USART_ReceiveChar() == 'X')
  3376  0E15  120A  118A  27E8  120A  158A  	fcall	_USART_ReceiveChar
  3377  0E1A  3A58               	xorlw	88
  3378  0E1B  1D03               	skipz
  3379  0E1C  2E22               	goto	i1l2845
  3380                           
  3381                           ;main.c: 428: {
  3382                           ;main.c: 429: send();
  3383  0E1D  160A  118A  2780  120A  158A  	fcall	_send
  3384  0E22                     i1l2845:	
  3385                           
  3386                           ;main.c: 430: }
  3387                           ;main.c: 432: PIR1bits.RCIF = 0;
  3388  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0E24  128C               	bcf	12,5	;volatile
  3391  0E25                     i1l2847:	
  3392                           
  3393                           ;main.c: 433: }
  3394                           ;main.c: 436: if (PIR1bits.ADIF)
  3395  0E25  1B0C               	btfsc	12,6	;volatile
  3396                           
  3397                           ;main.c: 437: {
  3398                           ;main.c: 441: PIR1bits.ADIF = 0;
  3399  0E26  130C               	bcf	12,6	;volatile
  3400                           
  3401                           ;main.c: 442: }
  3402                           ;main.c: 446: if (INTCONbits.T0IF)
  3403  0E27  1D0B               	btfss	11,2	;volatile
  3404  0E28  2E99               	goto	i1l2875
  3405                           
  3406                           ;main.c: 447: {
  3407                           ;main.c: 449: TIMER0_Set(238);
  3408  0E29  30EE               	movlw	238
  3409  0E2A  160A  118A  243B  120A  158A  	fcall	i1_TIMER0_Set
  3410                           
  3411                           ;main.c: 452: if (contagens_tm0 < 499)
  3412  0E2F  3001               	movlw	1
  3413  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  3415  0E32  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  3416  0E33  30F3               	movlw	243
  3417  0E34  1903               	skipnz
  3418  0E35  023D               	subwf	_contagens_tm0^(0+128),w
  3419  0E36  1803               	skipnc
  3420  0E37  2E42               	goto	i1l2859
  3421                           
  3422                           ;main.c: 453: {
  3423                           ;main.c: 455: contagens_tm0++;
  3424  0E38  3001               	movlw	1
  3425  0E39  07BD               	addwf	_contagens_tm0^(0+128),f
  3426  0E3A  1803               	skipnc
  3427  0E3B  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  3428  0E3C  3000               	movlw	0
  3429  0E3D  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  3430                           
  3431                           ;main.c: 458: PORTBbits.RB6 = 1;
  3432  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0E40  1706               	bsf	6,6	;volatile
  3435                           
  3436                           ;main.c: 459: }
  3437  0E41  2E98               	goto	i1l2873
  3438  0E42                     i1l2859:	
  3439                           
  3440                           ;main.c: 460: else
  3441                           ;main.c: 461: {
  3442                           ;main.c: 463: contagens_tm0 = 0;
  3443  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0E44  01BD               	clrf	_contagens_tm0^(0+128)
  3446  0E45  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  3447                           
  3448                           ;main.c: 466: pulsos = (TMR1H << 8) + TMR1L;
  3449  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0E48  080F               	movf	15,w	;volatile
  3452  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0E4B  01C2               	clrf	(_pulsos+1)^(0+128)
  3455  0E4C  07C2               	addwf	(_pulsos+1)^(0+128),f
  3456  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0E4F  080E               	movf	14,w	;volatile
  3459  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0E52  01C1               	clrf	_pulsos^(0+128)
  3462  0E53  07C1               	addwf	_pulsos^(0+128),f
  3463                           
  3464                           ;main.c: 467: rpm = ((pulsos / pas_cooler) * 120);
  3465  0E54  0867               	movf	(_pas_cooler+1)^(0+128),w
  3466  0E55  01F1               	clrf	___lwdiv@divisor+1
  3467  0E56  07F1               	addwf	___lwdiv@divisor+1,f
  3468  0E57  0866               	movf	_pas_cooler^(0+128),w
  3469  0E58  01F0               	clrf	___lwdiv@divisor
  3470  0E59  07F0               	addwf	___lwdiv@divisor,f
  3471  0E5A  0842               	movf	(_pulsos+1)^(0+128),w
  3472  0E5B  01F3               	clrf	___lwdiv@dividend+1
  3473  0E5C  07F3               	addwf	___lwdiv@dividend+1,f
  3474  0E5D  0841               	movf	_pulsos^(0+128),w
  3475  0E5E  01F2               	clrf	___lwdiv@dividend
  3476  0E5F  07F2               	addwf	___lwdiv@dividend,f
  3477  0E60  160A  118A  2632  120A  158A  	fcall	___lwdiv
  3478  0E65  0871               	movf	?___lwdiv+1,w
  3479  0E66  01F9               	clrf	___wmul@multiplier+1
  3480  0E67  07F9               	addwf	___wmul@multiplier+1,f
  3481  0E68  0870               	movf	?___lwdiv,w
  3482  0E69  01F8               	clrf	___wmul@multiplier
  3483  0E6A  07F8               	addwf	___wmul@multiplier,f
  3484  0E6B  3078               	movlw	120
  3485  0E6C  00FA               	movwf	___wmul@multiplicand
  3486  0E6D  3000               	movlw	0
  3487  0E6E  00FB               	movwf	___wmul@multiplicand+1
  3488  0E6F  160A  118A  2591  120A  158A  	fcall	___wmul
  3489  0E74  0879               	movf	?___wmul+1,w
  3490  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  3492  0E77  01C4               	clrf	(_rpm+1)^(0+128)
  3493  0E78  07C4               	addwf	(_rpm+1)^(0+128),f
  3494  0E79  0878               	movf	?___wmul,w
  3495  0E7A  01C3               	clrf	_rpm^(0+128)
  3496  0E7B  07C3               	addwf	_rpm^(0+128),f
  3497                           
  3498                           ;main.c: 471: rpm = rpm / 40;
  3499  0E7C  3028               	movlw	40
  3500  0E7D  00F0               	movwf	___lwdiv@divisor
  3501  0E7E  3000               	movlw	0
  3502  0E7F  00F1               	movwf	___lwdiv@divisor+1
  3503  0E80  0844               	movf	(_rpm+1)^(0+128),w
  3504  0E81  01F3               	clrf	___lwdiv@dividend+1
  3505  0E82  07F3               	addwf	___lwdiv@dividend+1,f
  3506  0E83  0843               	movf	_rpm^(0+128),w
  3507  0E84  01F2               	clrf	___lwdiv@dividend
  3508  0E85  07F2               	addwf	___lwdiv@dividend,f
  3509  0E86  160A  118A  2632  120A  158A  	fcall	___lwdiv
  3510  0E8B  0871               	movf	?___lwdiv+1,w
  3511  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0E8E  01C4               	clrf	(_rpm+1)^(0+128)
  3514  0E8F  07C4               	addwf	(_rpm+1)^(0+128),f
  3515  0E90  0870               	movf	?___lwdiv,w
  3516  0E91  01C3               	clrf	_rpm^(0+128)
  3517  0E92  07C3               	addwf	_rpm^(0+128),f
  3518                           
  3519                           ;main.c: 474: TMR1L = 0x00;
  3520  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0E95  018E               	clrf	14	;volatile
  3523                           
  3524                           ;main.c: 475: TMR1H = 0x00;
  3525  0E96  018F               	clrf	15	;volatile
  3526                           
  3527                           ;main.c: 478: PORTBbits.RB6 = 0;
  3528  0E97  1306               	bcf	6,6	;volatile
  3529  0E98                     i1l2873:	
  3530                           
  3531                           ;main.c: 479: }
  3532                           ;main.c: 482: INTCONbits.T0IF = 0;
  3533  0E98  110B               	bcf	11,2	;volatile
  3534  0E99                     i1l2875:	
  3535                           
  3536                           ;main.c: 483: }
  3537                           ;main.c: 486: if (PIR1bits.TMR1IF)
  3538  0E99  180C               	btfsc	12,0	;volatile
  3539                           
  3540                           ;main.c: 487: {
  3541                           ;main.c: 491: PIR1bits.TMR1IF = 0;
  3542  0E9A  100C               	bcf	12,0	;volatile
  3543                           
  3544                           ;main.c: 492: }
  3545                           ;main.c: 495: if (PIR1bits.SSPIF)
  3546  0E9B  198C               	btfsc	12,3	;volatile
  3547                           
  3548                           ;main.c: 496: {
  3549                           ;main.c: 500: PIR1bits.SSPIF = 0;
  3550  0E9C  118C               	bcf	12,3	;volatile
  3551  0E9D                     i1l178:	
  3552  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0E9F  086C               	movf	??_ISR+3,w
  3555  0EA0  00FF               	movwf	127
  3556  0EA1  086B               	movf	??_ISR+2,w
  3557  0EA2  008A               	movwf	10
  3558  0EA3  086A               	movf	??_ISR+1,w
  3559  0EA4  0084               	movwf	4
  3560  0EA5  0E69               	swapf	??_ISR^0,w
  3561  0EA6  0083               	movwf	3
  3562  0EA7  0EFE               	swapf	126,f
  3563  0EA8  0E7E               	swapf	126,w
  3564  0EA9  0009               	retfie
  3565  0EAA                     __end_of_ISR:	
  3566                           
  3567                           	psect	intentry
  3568  0004                     __pintentry:	
  3569                           ;incstack = 0
  3570                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3571                           
  3572  0004                     interrupt_function:	
  3573  007E                     saved_w	set	btemp
  3574  0004  00FE               	movwf	btemp
  3575  0005  0E03               	swapf	3,w
  3576  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3577  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0008  00E9               	movwf	??_ISR
  3579  0009  0804               	movf	4,w
  3580  000A  00EA               	movwf	??_ISR+1
  3581  000B  080A               	movf	10,w
  3582  000C  00EB               	movwf	??_ISR+2
  3583  000D  087F               	movf	btemp+1,w
  3584  000E  00EC               	movwf	??_ISR+3
  3585  000F  120A  158A  2D5F   	ljmp	_ISR
  3586                           
  3587                           	psect	text16
  3588  143B                     __ptext16:	
  3589 ;; *************** function i1_TIMER0_Set *****************
  3590 ;; Defined at:
  3591 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  contagens       1    wreg     unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  contagens       1    0[COMMON] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       0       0       0       0
  3606 ;;      Locals:         1       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0
  3608 ;;      Totals:         1       0       0       0       0
  3609 ;;Total ram usage:        1 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_ISR
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function i1_TIMER0_Set
  3620  143B                     i1_TIMER0_Set:	
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in i1_TIMER0_Set: [wreg]
  3624                           ;i1TIMER0_Set@contagens stored from wreg
  3625  143B  00F0               	movwf	i1TIMER0_Set@contagens
  3626                           
  3627                           ;timers.c: 22: TMR0 = contagens;
  3628  143C  0870               	movf	i1TIMER0_Set@contagens,w
  3629  143D  1283               	bcf	3,5	;RP0=0, select bank0
  3630  143E  1303               	bcf	3,6	;RP1=0, select bank0
  3631  143F  0081               	movwf	1	;volatile
  3632  1440  0008               	return
  3633  1441                     __end_ofi1_TIMER0_Set:	
  3634                           
  3635                           	psect	text17
  3636  1780                     __ptext17:	
  3637 ;; *************** function _send *****************
  3638 ;; Defined at:
  3639 ;;		line 102 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  index           1    4[BANK0 ] unsigned char 
  3644 ;;  velocidade      2    2[BANK0 ] unsigned int 
  3645 ;;  checksum        1    1[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;		None               void
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         0       0       0       0       0
  3656 ;;      Locals:         0       4       0       0       0
  3657 ;;      Temps:          0       1       0       0       0
  3658 ;;      Totals:         0       5       0       0       0
  3659 ;;Total ram usage:        5 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		_USART_WriteChar
  3664 ;;		___wmul
  3665 ;; This function is called by:
  3666 ;;		_ISR
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           
  3671                           ;psect for function _send
  3672  1780                     _send:	
  3673                           
  3674                           ;main.c: 106: buffer[0] = '#';
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3678  1780  3023               	movlw	35
  3679  1781  1283               	bcf	3,5	;RP0=0, select bank0
  3680  1782  1303               	bcf	3,6	;RP1=0, select bank0
  3681  1783  00A0               	movwf	??_send
  3682  1784  0820               	movf	??_send,w
  3683  1785  1683               	bsf	3,5	;RP0=1, select bank3
  3684  1786  1703               	bsf	3,6	;RP1=1, select bank3
  3685  1787  0090               	movwf	_buffer^(0+384)
  3686                           
  3687                           ;main.c: 107: buffer[1] = '$';
  3688  1788  3024               	movlw	36
  3689  1789  1283               	bcf	3,5	;RP0=0, select bank0
  3690  178A  1303               	bcf	3,6	;RP1=0, select bank0
  3691  178B  00A0               	movwf	??_send
  3692  178C  0820               	movf	??_send,w
  3693  178D  1683               	bsf	3,5	;RP0=1, select bank3
  3694  178E  1703               	bsf	3,6	;RP1=1, select bank3
  3695  178F  0091               	movwf	(_buffer^(0+384)+1)
  3696                           
  3697                           ;main.c: 108: buffer[2] = ':';
  3698  1790  303A               	movlw	58
  3699  1791  1283               	bcf	3,5	;RP0=0, select bank0
  3700  1792  1303               	bcf	3,6	;RP1=0, select bank0
  3701  1793  00A0               	movwf	??_send
  3702  1794  0820               	movf	??_send,w
  3703  1795  1683               	bsf	3,5	;RP0=1, select bank3
  3704  1796  1703               	bsf	3,6	;RP1=1, select bank3
  3705  1797  0092               	movwf	(_buffer^(0+384)+2)
  3706                           
  3707                           ;main.c: 110: unsigned int velocidade = rpm * 40;
  3708  1798  1683               	bsf	3,5	;RP0=1, select bank1
  3709  1799  1303               	bcf	3,6	;RP1=0, select bank1
  3710  179A  0844               	movf	(_rpm+1)^(0+128),w
  3711  179B  01F9               	clrf	___wmul@multiplier+1
  3712  179C  07F9               	addwf	___wmul@multiplier+1,f
  3713  179D  0843               	movf	_rpm^(0+128),w
  3714  179E  01F8               	clrf	___wmul@multiplier
  3715  179F  07F8               	addwf	___wmul@multiplier,f
  3716  17A0  3028               	movlw	40
  3717  17A1  00FA               	movwf	___wmul@multiplicand
  3718  17A2  3000               	movlw	0
  3719  17A3  00FB               	movwf	___wmul@multiplicand+1
  3720  17A4  160A  118A  2591  160A  118A  	fcall	___wmul
  3721  17A9  0879               	movf	?___wmul+1,w
  3722  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  3723  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  3724  17AC  01A3               	clrf	send@velocidade+1
  3725  17AD  07A3               	addwf	send@velocidade+1,f
  3726  17AE  0878               	movf	?___wmul,w
  3727  17AF  01A2               	clrf	send@velocidade
  3728  17B0  07A2               	addwf	send@velocidade,f
  3729                           
  3730                           ;main.c: 112: buffer[3] = (velocidade >> 8) & 0xFF;
  3731  17B1  0823               	movf	send@velocidade+1,w
  3732  17B2  00A0               	movwf	??_send
  3733  17B3  0820               	movf	??_send,w
  3734  17B4  1683               	bsf	3,5	;RP0=1, select bank3
  3735  17B5  1703               	bsf	3,6	;RP1=1, select bank3
  3736  17B6  0093               	movwf	(_buffer^(0+384)+3)
  3737                           
  3738                           ;main.c: 113: buffer[4] = velocidade & 0xFF;
  3739  17B7  1283               	bcf	3,5	;RP0=0, select bank0
  3740  17B8  1303               	bcf	3,6	;RP1=0, select bank0
  3741  17B9  0822               	movf	send@velocidade,w
  3742  17BA  00A0               	movwf	??_send
  3743  17BB  0820               	movf	??_send,w
  3744  17BC  1683               	bsf	3,5	;RP0=1, select bank3
  3745  17BD  1703               	bsf	3,6	;RP1=1, select bank3
  3746  17BE  0094               	movwf	(_buffer^(0+384)+4)
  3747                           
  3748                           ;main.c: 114: buffer[5] = 0;
  3749  17BF  0195               	clrf	(_buffer^(0+384)+5)
  3750                           
  3751                           ;main.c: 117: buffer[6] = (velocidade >> 8) & 0xFF;
  3752  17C0  1283               	bcf	3,5	;RP0=0, select bank0
  3753  17C1  1303               	bcf	3,6	;RP1=0, select bank0
  3754  17C2  0823               	movf	send@velocidade+1,w
  3755  17C3  00A0               	movwf	??_send
  3756  17C4  0820               	movf	??_send,w
  3757  17C5  1683               	bsf	3,5	;RP0=1, select bank3
  3758  17C6  1703               	bsf	3,6	;RP1=1, select bank3
  3759  17C7  0096               	movwf	(_buffer^(0+384)+6)
  3760                           
  3761                           ;main.c: 118: buffer[7] = velocidade & 0xFF;
  3762  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  3763  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  3764  17CA  0822               	movf	send@velocidade,w
  3765  17CB  00A0               	movwf	??_send
  3766  17CC  0820               	movf	??_send,w
  3767  17CD  1683               	bsf	3,5	;RP0=1, select bank3
  3768  17CE  1703               	bsf	3,6	;RP1=1, select bank3
  3769  17CF  0097               	movwf	(_buffer^(0+384)+7)
  3770                           
  3771                           ;main.c: 119: buffer[8] = 0;
  3772  17D0  0198               	clrf	(_buffer^(0+384)+8)
  3773                           
  3774                           ;main.c: 121: unsigned char checksum = 0x00;
  3775  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  3776  17D2  1303               	bcf	3,6	;RP1=0, select bank0
  3777  17D3  01A1               	clrf	send@checksum
  3778                           
  3779                           ;main.c: 122: for (unsigned char index = 0; index < 9; index++)
  3780  17D4  01A4               	clrf	send@index
  3781  17D5  3009               	movlw	9
  3782  17D6  0224               	subwf	send@index,w
  3783  17D7  1803               	btfsc	3,0
  3784  17D8  2FF5               	goto	i1l2457
  3785  17D9                     i1l2449:	
  3786                           
  3787                           ;main.c: 123: {
  3788                           ;main.c: 124: USART_WriteChar(buffer[index]);
  3789  17D9  0824               	movf	send@index,w
  3790  17DA  3E90               	addlw	_buffer& (0+255)
  3791  17DB  0084               	movwf	4
  3792  17DC  1783               	bsf	3,7	;select IRP bank3
  3793  17DD  0800               	movf	0,w
  3794  17DE  160A  118A  2448  160A  118A  	fcall	_USART_WriteChar
  3795                           
  3796                           ;main.c: 125: checksum ^= buffer[index];
  3797  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  3798  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  3799  17E5  0824               	movf	send@index,w
  3800  17E6  3E90               	addlw	_buffer& (0+255)
  3801  17E7  0084               	movwf	4
  3802  17E8  1783               	bsf	3,7	;select IRP bank3
  3803  17E9  0800               	movf	0,w
  3804  17EA  00A0               	movwf	??_send
  3805  17EB  0820               	movf	??_send,w
  3806  17EC  06A1               	xorwf	send@checksum,f
  3807  17ED  3001               	movlw	1
  3808  17EE  00A0               	movwf	??_send
  3809  17EF  0820               	movf	??_send,w
  3810  17F0  07A4               	addwf	send@index,f
  3811  17F1  3009               	movlw	9
  3812  17F2  0224               	subwf	send@index,w
  3813  17F3  1C03               	skipc
  3814  17F4  2FD9               	goto	i1l2449
  3815  17F5                     i1l2457:	
  3816                           
  3817                           ;main.c: 126: }
  3818                           ;main.c: 127: buffer[9] = checksum;
  3819  17F5  0821               	movf	send@checksum,w
  3820  17F6  00A0               	movwf	??_send
  3821  17F7  0820               	movf	??_send,w
  3822  17F8  1683               	bsf	3,5	;RP0=1, select bank3
  3823  17F9  1703               	bsf	3,6	;RP1=1, select bank3
  3824  17FA  0099               	movwf	(_buffer^(0+384)+9)
  3825                           
  3826                           ;main.c: 128: USART_WriteChar(buffer[9]);
  3827  17FB  0819               	movf	(_buffer^(0+384)+9),w
  3828  17FC  160A  118A  2448   	fcall	_USART_WriteChar
  3829  17FF  0008               	return
  3830  1800                     __end_of_send:	
  3831                           
  3832                           	psect	text18
  3833  1591                     __ptext18:	
  3834 ;; *************** function ___wmul *****************
  3835 ;; Defined at:
  3836 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  multiplier      2    8[COMMON] unsigned int 
  3839 ;;  multiplicand    2   10[COMMON] unsigned int 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  product         2   12[COMMON] unsigned int 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2    8[COMMON] unsigned int 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         4       0       0       0       0
  3852 ;;      Locals:         2       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         6       0       0       0       0
  3855 ;;Total ram usage:        6 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_send
  3861 ;;		_ISR
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function ___wmul
  3867  1591                     ___wmul:	
  3868                           
  3869                           ;incstack = 0
  3870                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3871  1591  01FC               	clrf	___wmul@product
  3872  1592  01FD               	clrf	___wmul@product+1
  3873  1593                     i1l2273:	
  3874  1593  1C78               	btfss	___wmul@multiplier,0
  3875  1594  2D9B               	goto	i1l542
  3876  1595  087A               	movf	___wmul@multiplicand,w
  3877  1596  07FC               	addwf	___wmul@product,f
  3878  1597  1803               	skipnc
  3879  1598  0AFD               	incf	___wmul@product+1,f
  3880  1599  087B               	movf	___wmul@multiplicand+1,w
  3881  159A  07FD               	addwf	___wmul@product+1,f
  3882  159B                     i1l542:	
  3883  159B  3001               	movlw	1
  3884  159C                     u241_25:	
  3885  159C  1003               	clrc
  3886  159D  0DFA               	rlf	___wmul@multiplicand,f
  3887  159E  0DFB               	rlf	___wmul@multiplicand+1,f
  3888  159F  3EFF               	addlw	-1
  3889  15A0  1D03               	skipz
  3890  15A1  2D9C               	goto	u241_25
  3891  15A2  3001               	movlw	1
  3892  15A3                     u242_25:	
  3893  15A3  1003               	clrc
  3894  15A4  0CF9               	rrf	___wmul@multiplier+1,f
  3895  15A5  0CF8               	rrf	___wmul@multiplier,f
  3896  15A6  3EFF               	addlw	-1
  3897  15A7  1D03               	skipz
  3898  15A8  2DA3               	goto	u242_25
  3899  15A9  0879               	movf	___wmul@multiplier+1,w
  3900  15AA  0478               	iorwf	___wmul@multiplier,w
  3901  15AB  1D03               	skipz
  3902  15AC  2D93               	goto	i1l2273
  3903  15AD  087D               	movf	___wmul@product+1,w
  3904  15AE  01F9               	clrf	?___wmul+1
  3905  15AF  07F9               	addwf	?___wmul+1,f
  3906  15B0  087C               	movf	___wmul@product,w
  3907  15B1  01F8               	clrf	?___wmul
  3908  15B2  07F8               	addwf	?___wmul,f
  3909  15B3  0008               	return
  3910  15B4                     __end_of___wmul:	
  3911                           
  3912                           	psect	text19
  3913  1632                     __ptext19:	
  3914 ;; *************** function ___lwdiv *****************
  3915 ;; Defined at:
  3916 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  divisor         2    0[COMMON] unsigned int 
  3919 ;;  dividend        2    2[COMMON] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  quotient        2    5[COMMON] unsigned int 
  3922 ;;  counter         1    7[COMMON] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    0[COMMON] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3932 ;;      Params:         4       0       0       0       0
  3933 ;;      Locals:         3       0       0       0       0
  3934 ;;      Temps:          1       0       0       0       0
  3935 ;;      Totals:         8       0       0       0       0
  3936 ;;Total ram usage:        8 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_ISR
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function ___lwdiv
  3947  1632                     ___lwdiv:	
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3951  1632  01F5               	clrf	___lwdiv@quotient
  3952  1633  01F6               	clrf	___lwdiv@quotient+1
  3953  1634  0871               	movf	___lwdiv@divisor+1,w
  3954  1635  0470               	iorwf	___lwdiv@divisor,w
  3955  1636  1903               	skipnz
  3956  1637  2E69               	goto	i1l2779
  3957  1638  01F7               	clrf	___lwdiv@counter
  3958  1639  0AF7               	incf	___lwdiv@counter,f
  3959  163A                     i1l2767:	
  3960  163A  1BF1               	btfsc	___lwdiv@divisor+1,7
  3961  163B  2E48               	goto	i1l2769
  3962  163C  3001               	movlw	1
  3963  163D                     u311_25:	
  3964  163D  1003               	clrc
  3965  163E  0DF0               	rlf	___lwdiv@divisor,f
  3966  163F  0DF1               	rlf	___lwdiv@divisor+1,f
  3967  1640  3EFF               	addlw	-1
  3968  1641  1D03               	skipz
  3969  1642  2E3D               	goto	u311_25
  3970  1643  3001               	movlw	1
  3971  1644  00F4               	movwf	??___lwdiv
  3972  1645  0874               	movf	??___lwdiv,w
  3973  1646  07F7               	addwf	___lwdiv@counter,f
  3974  1647  2E3A               	goto	i1l2767
  3975  1648                     i1l2769:	
  3976  1648  3001               	movlw	1
  3977  1649                     u313_25:	
  3978  1649  1003               	clrc
  3979  164A  0DF5               	rlf	___lwdiv@quotient,f
  3980  164B  0DF6               	rlf	___lwdiv@quotient+1,f
  3981  164C  3EFF               	addlw	-1
  3982  164D  1D03               	skipz
  3983  164E  2E49               	goto	u313_25
  3984  164F  0871               	movf	___lwdiv@divisor+1,w
  3985  1650  0273               	subwf	___lwdiv@dividend+1,w
  3986  1651  1D03               	skipz
  3987  1652  2E55               	goto	u314_25
  3988  1653  0870               	movf	___lwdiv@divisor,w
  3989  1654  0272               	subwf	___lwdiv@dividend,w
  3990  1655                     u314_25:	
  3991  1655  1C03               	skipc
  3992  1656  2E5E               	goto	i1l2775
  3993  1657  0870               	movf	___lwdiv@divisor,w
  3994  1658  02F2               	subwf	___lwdiv@dividend,f
  3995  1659  0871               	movf	___lwdiv@divisor+1,w
  3996  165A  1C03               	skipc
  3997  165B  03F3               	decf	___lwdiv@dividend+1,f
  3998  165C  02F3               	subwf	___lwdiv@dividend+1,f
  3999  165D  1475               	bsf	___lwdiv@quotient,0
  4000  165E                     i1l2775:	
  4001  165E  3001               	movlw	1
  4002  165F                     u315_25:	
  4003  165F  1003               	clrc
  4004  1660  0CF1               	rrf	___lwdiv@divisor+1,f
  4005  1661  0CF0               	rrf	___lwdiv@divisor,f
  4006  1662  3EFF               	addlw	-1
  4007  1663  1D03               	skipz
  4008  1664  2E5F               	goto	u315_25
  4009  1665  3001               	movlw	1
  4010  1666  02F7               	subwf	___lwdiv@counter,f
  4011  1667  1D03               	btfss	3,2
  4012  1668  2E48               	goto	i1l2769
  4013  1669                     i1l2779:	
  4014  1669  0876               	movf	___lwdiv@quotient+1,w
  4015  166A  01F1               	clrf	?___lwdiv+1
  4016  166B  07F1               	addwf	?___lwdiv+1,f
  4017  166C  0875               	movf	___lwdiv@quotient,w
  4018  166D  01F0               	clrf	?___lwdiv
  4019  166E  07F0               	addwf	?___lwdiv,f
  4020  166F  0008               	return
  4021  1670                     __end_of___lwdiv:	
  4022                           
  4023                           	psect	text20
  4024  07E8                     __ptext20:	
  4025 ;; *************** function _USART_ReceiveChar *****************
  4026 ;; Defined at:
  4027 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  byte            1    4[COMMON] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      unsigned char 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         1       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0
  4044 ;;      Totals:         2       0       0       0       0
  4045 ;;Total ram usage:        2 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    2
  4048 ;; This function calls:
  4049 ;;		_USART_WriteString
  4050 ;; This function is called by:
  4051 ;;		_ISR
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function _USART_ReceiveChar
  4057  07E8                     _USART_ReceiveChar:	
  4058                           
  4059                           ;usart.c: 65: unsigned char byte;
  4060                           ;usart.c: 67: if (!OERR)
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4064  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  4065  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  4066  07EA  1898               	btfsc	24,1	;volatile
  4067  07EB  2FF1               	goto	i1l2609
  4068                           
  4069                           ;usart.c: 68: {
  4070                           ;usart.c: 69: byte = RCREG;
  4071  07EC  081A               	movf	26,w	;volatile
  4072  07ED  00F3               	movwf	??_USART_ReceiveChar
  4073  07EE  0873               	movf	??_USART_ReceiveChar,w
  4074  07EF  00F4               	movwf	USART_ReceiveChar@byte
  4075  07F0  2FFD               	goto	i1l2617
  4076  07F1                     i1l2609:	
  4077                           ;usart.c: 71: }
  4078                           
  4079                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4080                           
  4081                           
  4082                           ;usart.c: 72: else
  4083                           ;usart.c: 73: {
  4084                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4085  07F1  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4086  07F2  160A  118A  24F5   	fcall	_USART_WriteString
  4087                           
  4088                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4089  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  4090  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  4091  07F7  1218               	bcf	24,4	;volatile
  4092                           
  4093                           ;usart.c: 77: byte = RCREG;
  4094  07F8  081A               	movf	26,w	;volatile
  4095  07F9  00F3               	movwf	??_USART_ReceiveChar
  4096  07FA  0873               	movf	??_USART_ReceiveChar,w
  4097  07FB  00F4               	movwf	USART_ReceiveChar@byte
  4098                           
  4099                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4100  07FC  1618               	bsf	24,4	;volatile
  4101  07FD                     i1l2617:	
  4102                           
  4103                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4104  07FD  128C               	bcf	12,5	;volatile
  4105                           
  4106                           ;usart.c: 80: }
  4107                           ;usart.c: 82: return(byte);
  4108  07FE  0874               	movf	USART_ReceiveChar@byte,w
  4109  07FF  0008               	return
  4110  0800                     __end_of_USART_ReceiveChar:	
  4111                           
  4112                           	psect	text21
  4113  14F5                     __ptext21:	
  4114 ;; *************** function _USART_WriteString *****************
  4115 ;; Defined at:
  4116 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  str             1    wreg     PTR const unsigned char 
  4119 ;;		 -> STR_4(40), STR_1(14), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  str             1    2[COMMON] PTR const unsigned char 
  4122 ;;		 -> STR_4(40), STR_1(14), 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;		None               void
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4132 ;;      Params:         0       0       0       0       0
  4133 ;;      Locals:         1       0       0       0       0
  4134 ;;      Temps:          1       0       0       0       0
  4135 ;;      Totals:         2       0       0       0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    1
  4139 ;; This function calls:
  4140 ;;		_USART_WriteChar
  4141 ;; This function is called by:
  4142 ;;		_ISR
  4143 ;;		_USART_ReceiveChar
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _USART_WriteString
  4149  14F5                     _USART_WriteString:	
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4153                           ;USART_WriteString@str stored from wreg
  4154  14F5  00F2               	movwf	USART_WriteString@str
  4155  14F6                     i1l2253:	
  4156                           ;usart.c: 54: while(*str != '\0')
  4157                           
  4158  14F6  0872               	movf	USART_WriteString@str,w
  4159  14F7  0084               	movwf	4
  4160  14F8  160A  118A  200A  160A  118A  	fcall	stringdir
  4161  14FD  3800               	iorlw	0
  4162  14FE  1903               	btfsc	3,2
  4163  14FF  0008               	return
  4164                           
  4165                           ;usart.c: 55: {
  4166                           ;usart.c: 56: USART_WriteChar(*str);
  4167  1500  0872               	movf	USART_WriteString@str,w
  4168  1501  0084               	movwf	4
  4169  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  4170  1507  160A  118A  2448  160A  118A  	fcall	_USART_WriteChar
  4171                           
  4172                           ;usart.c: 57: str++;
  4173  150C  3001               	movlw	1
  4174  150D  00F1               	movwf	??_USART_WriteString
  4175  150E  0871               	movf	??_USART_WriteString,w
  4176  150F  07F2               	addwf	USART_WriteString@str,f
  4177  1510  2CF6               	goto	i1l2253
  4178  1511                     __end_of_USART_WriteString:	
  4179                           
  4180                           	psect	text22
  4181  1448                     __ptext22:	
  4182 ;; *************** function _USART_WriteChar *****************
  4183 ;; Defined at:
  4184 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  byte            1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  byte            1    0[COMMON] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;		None               void
  4191 ;; Registers used:
  4192 ;;		wreg
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         1       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0
  4201 ;;      Totals:         1       0       0       0       0
  4202 ;;Total ram usage:        1 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_send
  4208 ;;		_USART_WriteString
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _USART_WriteChar
  4214  1448                     _USART_WriteChar:	
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _USART_WriteChar: [wreg]
  4218                           ;USART_WriteChar@byte stored from wreg
  4219  1448  00F0               	movwf	USART_WriteChar@byte
  4220  1449                     i1l222:	
  4221                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4222                           
  4223  1449  1283               	bcf	3,5	;RP0=0, select bank0
  4224  144A  1303               	bcf	3,6	;RP1=0, select bank0
  4225  144B  1E0C               	btfss	12,4	;volatile
  4226  144C  2C49               	goto	i1l222
  4227                           
  4228                           ;usart.c: 47: TXREG = byte;
  4229  144D  0870               	movf	USART_WriteChar@byte,w
  4230  144E  0099               	movwf	25	;volatile
  4231  144F  0008               	return
  4232  1450                     __end_of_USART_WriteChar:	
  4233                           
  4234                           	psect	text23
  4235  0044                     __ptext23:	
  4236 ;; *************** function _Fuzzy *****************
  4237 ;; Defined at:
  4238 ;;		line 153 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  a               2   59[BANK0 ] int 
  4243 ;;  a               2   57[BANK0 ] int 
  4244 ;;  a               2   55[BANK0 ] int 
  4245 ;;  deltaRpm        3   70[BANK0 ] float 
  4246 ;;  aumenta         3   67[BANK0 ] float 
  4247 ;;  reduz           3   64[BANK0 ] float 
  4248 ;;  mantem          3   61[BANK0 ] float 
  4249 ;;  tip             3   52[BANK0 ] float 
  4250 ;;  freio           2   50[BANK0 ] unsigned int 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       0       0       0       0
  4261 ;;      Locals:         0      23       0       0       0
  4262 ;;      Temps:          0       0       0       0       0
  4263 ;;      Totals:         0      23       0       0       0
  4264 ;;Total ram usage:       23 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    3
  4267 ;; This function calls:
  4268 ;;		___ftadd
  4269 ;;		___ftdiv
  4270 ;;		___ftge
  4271 ;;		___ftmul
  4272 ;;		___ftneg
  4273 ;;		___fttol
  4274 ;;		___lwtoft
  4275 ;;		_max_val
  4276 ;;		_trapmf
  4277 ;;		_trimf
  4278 ;;		i1_PWM_DutyCycle2
  4279 ;; This function is called by:
  4280 ;;		_ISR
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           
  4285                           ;psect for function _Fuzzy
  4286  0044                     _Fuzzy:	
  4287                           
  4288                           ;main.c: 164: setpoint = (float)setpointUI;
  4289                           
  4290                           ;incstack = 0
  4291                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4292  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4293  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4294  0046  0846               	movf	(_setpointUI+1)^(0+128),w
  4295  0047  01F9               	clrf	___lwtoft@c+1
  4296  0048  07F9               	addwf	___lwtoft@c+1,f
  4297  0049  0845               	movf	_setpointUI^(0+128),w
  4298  004A  01F8               	clrf	___lwtoft@c
  4299  004B  07F8               	addwf	___lwtoft@c,f
  4300  004C  160A  118A  2498  120A  118A  	fcall	___lwtoft
  4301  0051  0878               	movf	?___lwtoft,w
  4302  0052  1683               	bsf	3,5	;RP0=1, select bank1
  4303  0053  1303               	bcf	3,6	;RP1=0, select bank1
  4304  0054  00E3               	movwf	_setpoint^(0+128)
  4305  0055  0879               	movf	?___lwtoft+1,w
  4306  0056  00E4               	movwf	(_setpoint+1)^(0+128)
  4307  0057  087A               	movf	?___lwtoft+2,w
  4308  0058  00E5               	movwf	(_setpoint+2)^(0+128)
  4309                           
  4310                           ;main.c: 165: float deltaRpm = 0;
  4311  0059  3000               	movlw	0
  4312  005A  1283               	bcf	3,5	;RP0=0, select bank0
  4313  005B  1303               	bcf	3,6	;RP1=0, select bank0
  4314  005C  00E6               	movwf	Fuzzy@deltaRpm
  4315  005D  3000               	movlw	0
  4316  005E  00E7               	movwf	Fuzzy@deltaRpm+1
  4317  005F  3000               	movlw	0
  4318  0060  00E8               	movwf	Fuzzy@deltaRpm+2
  4319                           
  4320                           ;main.c: 168: unsigned int freio = 0;
  4321  0061  01D2               	clrf	Fuzzy@freio
  4322  0062  01D3               	clrf	Fuzzy@freio+1
  4323                           
  4324                           ;main.c: 174: float mantem = 0;
  4325  0063  3000               	movlw	0
  4326  0064  00DD               	movwf	Fuzzy@mantem
  4327  0065  3000               	movlw	0
  4328  0066  00DE               	movwf	Fuzzy@mantem+1
  4329  0067  3000               	movlw	0
  4330  0068  00DF               	movwf	Fuzzy@mantem+2
  4331                           
  4332                           ;main.c: 175: float reduz = 0;
  4333  0069  3000               	movlw	0
  4334  006A  00E0               	movwf	Fuzzy@reduz
  4335  006B  3000               	movlw	0
  4336  006C  00E1               	movwf	Fuzzy@reduz+1
  4337  006D  3000               	movlw	0
  4338  006E  00E2               	movwf	Fuzzy@reduz+2
  4339                           
  4340                           ;main.c: 176: float aumenta = 0;
  4341  006F  3000               	movlw	0
  4342  0070  00E3               	movwf	Fuzzy@aumenta
  4343  0071  3000               	movlw	0
  4344  0072  00E4               	movwf	Fuzzy@aumenta+1
  4345  0073  3000               	movlw	0
  4346  0074  00E5               	movwf	Fuzzy@aumenta+2
  4347                           
  4348                           ;main.c: 177: float tip;
  4349                           ;main.c: 178: fitemp = 0;
  4350  0075  3000               	movlw	0
  4351  0076  1683               	bsf	3,5	;RP0=1, select bank1
  4352  0077  1303               	bcf	3,6	;RP1=0, select bank1
  4353  0078  00A3               	movwf	_fitemp^(0+128)
  4354  0079  3000               	movlw	0
  4355  007A  00A4               	movwf	(_fitemp+1)^(0+128)
  4356  007B  3000               	movlw	0
  4357  007C  00A5               	movwf	(_fitemp+2)^(0+128)
  4358                           
  4359                           ;main.c: 181: deltaRpm = (setpoint - tf);
  4360  007D  0863               	movf	_setpoint^(0+128),w
  4361  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4362  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0080  00A3               	movwf	___ftadd@f1
  4364  0081  1683               	bsf	3,5	;RP0=1, select bank1
  4365  0082  1303               	bcf	3,6	;RP1=0, select bank1
  4366  0083  0864               	movf	(_setpoint+1)^(0+128),w
  4367  0084  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0085  1303               	bcf	3,6	;RP1=0, select bank0
  4369  0086  00A4               	movwf	___ftadd@f1+1
  4370  0087  1683               	bsf	3,5	;RP0=1, select bank1
  4371  0088  1303               	bcf	3,6	;RP1=0, select bank1
  4372  0089  0865               	movf	(_setpoint+2)^(0+128),w
  4373  008A  1283               	bcf	3,5	;RP0=0, select bank0
  4374  008B  1303               	bcf	3,6	;RP1=0, select bank0
  4375  008C  00A5               	movwf	___ftadd@f1+2
  4376  008D  086D               	movf	_tf,w
  4377  008E  00A0               	movwf	___ftneg@f1
  4378  008F  086E               	movf	_tf+1,w
  4379  0090  00A1               	movwf	___ftneg@f1+1
  4380  0091  086F               	movf	_tf+2,w
  4381  0092  00A2               	movwf	___ftneg@f1+2
  4382  0093  160A  118A  2460  120A  118A  	fcall	___ftneg
  4383  0098  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0099  1303               	bcf	3,6	;RP1=0, select bank0
  4385  009A  0820               	movf	?___ftneg,w
  4386  009B  00A6               	movwf	___ftadd@f2
  4387  009C  0821               	movf	?___ftneg+1,w
  4388  009D  00A7               	movwf	___ftadd@f2+1
  4389  009E  0822               	movf	?___ftneg+2,w
  4390  009F  00A8               	movwf	___ftadd@f2+2
  4391  00A0  120A  158A  2332  120A  118A  	fcall	___ftadd
  4392  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  4393  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  4394  00A7  0823               	movf	?___ftadd,w
  4395  00A8  00E6               	movwf	Fuzzy@deltaRpm
  4396  00A9  0824               	movf	?___ftadd+1,w
  4397  00AA  00E7               	movwf	Fuzzy@deltaRpm+1
  4398  00AB  0825               	movf	?___ftadd+2,w
  4399  00AC  00E8               	movwf	Fuzzy@deltaRpm+2
  4400                           
  4401                           ;main.c: 182: deltaRpm = (deltaRpm/100);
  4402  00AD  3000               	movlw	0
  4403  00AE  00B0               	movwf	___ftdiv@f2
  4404  00AF  30C8               	movlw	200
  4405  00B0  00B1               	movwf	___ftdiv@f2+1
  4406  00B1  3042               	movlw	66
  4407  00B2  00B2               	movwf	___ftdiv@f2+2
  4408  00B3  0866               	movf	Fuzzy@deltaRpm,w
  4409  00B4  00B3               	movwf	___ftdiv@f1
  4410  00B5  0867               	movf	Fuzzy@deltaRpm+1,w
  4411  00B6  00B4               	movwf	___ftdiv@f1+1
  4412  00B7  0868               	movf	Fuzzy@deltaRpm+2,w
  4413  00B8  00B5               	movwf	___ftdiv@f1+2
  4414  00B9  120A  118A  2730  120A  118A  	fcall	___ftdiv
  4415  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  4416  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  4417  00C0  0830               	movf	?___ftdiv,w
  4418  00C1  00E6               	movwf	Fuzzy@deltaRpm
  4419  00C2  0831               	movf	?___ftdiv+1,w
  4420  00C3  00E7               	movwf	Fuzzy@deltaRpm+1
  4421  00C4  0832               	movf	?___ftdiv+2,w
  4422  00C5  00E8               	movwf	Fuzzy@deltaRpm+2
  4423                           
  4424                           ;main.c: 184: deltaV = deltaRpm;
  4425  00C6  0866               	movf	Fuzzy@deltaRpm,w
  4426  00C7  00B0               	movwf	___fttol@f1
  4427  00C8  0867               	movf	Fuzzy@deltaRpm+1,w
  4428  00C9  00B1               	movwf	___fttol@f1+1
  4429  00CA  0868               	movf	Fuzzy@deltaRpm+2,w
  4430  00CB  00B2               	movwf	___fttol@f1+2
  4431  00CC  120A  158A  206D  120A  118A  	fcall	___fttol
  4432  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  4433  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  4434  00D3  0831               	movf	?___fttol+1,w
  4435  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  4436  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  4437  00D6  01C0               	clrf	(_deltaV+1)^(0+128)
  4438  00D7  07C0               	addwf	(_deltaV+1)^(0+128),f
  4439  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  4440  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  4441  00DA  0830               	movf	?___fttol,w
  4442  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4443  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4444  00DD  01BF               	clrf	_deltaV^(0+128)
  4445  00DE  07BF               	addwf	_deltaV^(0+128),f
  4446                           
  4447                           ;main.c: 186: if (deltaRpm <0)
  4448  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  4449  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  4450  00E1  0866               	movf	Fuzzy@deltaRpm,w
  4451  00E2  00B0               	movwf	___ftge@ff1
  4452  00E3  0867               	movf	Fuzzy@deltaRpm+1,w
  4453  00E4  00B1               	movwf	___ftge@ff1+1
  4454  00E5  0868               	movf	Fuzzy@deltaRpm+2,w
  4455  00E6  00B2               	movwf	___ftge@ff1+2
  4456  00E7  3000               	movlw	0
  4457  00E8  00B3               	movwf	___ftge@ff2
  4458  00E9  3000               	movlw	0
  4459  00EA  00B4               	movwf	___ftge@ff2+1
  4460  00EB  3000               	movlw	0
  4461  00EC  00B5               	movwf	___ftge@ff2+2
  4462  00ED  160A  118A  26B9  120A  118A  	fcall	___ftge
  4463  00F2  1803               	btfsc	3,0
  4464  00F3  2918               	goto	i1l2491
  4465                           
  4466                           ;main.c: 187: {
  4467                           ;main.c: 188: if(PORTBbits.RB1 == 0)
  4468  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  4469  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  4470  00F6  1886               	btfsc	6,1	;volatile
  4471  00F7  28FA               	goto	i1l147
  4472                           
  4473                           ;main.c: 189: {
  4474                           ;main.c: 190: PORTBbits.RB1 = 1;
  4475  00F8  1486               	bsf	6,1	;volatile
  4476                           
  4477                           ;main.c: 191: }else{
  4478  00F9  28FB               	goto	i1l2487
  4479  00FA                     i1l147:	
  4480                           
  4481                           ;main.c: 192: PORTBbits.RB1 = 0;
  4482  00FA  1086               	bcf	6,1	;volatile
  4483  00FB                     i1l2487:	
  4484                           
  4485                           ;main.c: 193: }
  4486                           ;main.c: 195: deltaRpm = deltaRpm*-1;
  4487  00FB  3000               	movlw	0
  4488  00FC  00F8               	movwf	___ftmul@f1
  4489  00FD  3080               	movlw	128
  4490  00FE  00F9               	movwf	___ftmul@f1+1
  4491  00FF  30BF               	movlw	191
  4492  0100  00FA               	movwf	___ftmul@f1+2
  4493  0101  0866               	movf	Fuzzy@deltaRpm,w
  4494  0102  00FB               	movwf	___ftmul@f2
  4495  0103  0867               	movf	Fuzzy@deltaRpm+1,w
  4496  0104  00FC               	movwf	___ftmul@f2+1
  4497  0105  0868               	movf	Fuzzy@deltaRpm+2,w
  4498  0106  00FD               	movwf	___ftmul@f2+2
  4499  0107  120A  158A  218A  120A  118A  	fcall	___ftmul
  4500  010C  0878               	movf	?___ftmul,w
  4501  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4502  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4503  010F  00E6               	movwf	Fuzzy@deltaRpm
  4504  0110  0879               	movf	?___ftmul+1,w
  4505  0111  00E7               	movwf	Fuzzy@deltaRpm+1
  4506  0112  087A               	movf	?___ftmul+2,w
  4507  0113  00E8               	movwf	Fuzzy@deltaRpm+2
  4508                           
  4509                           ;main.c: 196: freio = 1;
  4510  0114  3001               	movlw	1
  4511  0115  00D2               	movwf	Fuzzy@freio
  4512  0116  3000               	movlw	0
  4513  0117  00D3               	movwf	Fuzzy@freio+1
  4514  0118                     i1l2491:	
  4515                           
  4516                           ;main.c: 197: }
  4517                           ;main.c: 199: if (deltaRpm >90) deltaRpm = 90;
  4518  0118  3000               	movlw	0
  4519  0119  1283               	bcf	3,5	;RP0=0, select bank0
  4520  011A  1303               	bcf	3,6	;RP1=0, select bank0
  4521  011B  00B0               	movwf	___ftge@ff1
  4522  011C  30B4               	movlw	180
  4523  011D  00B1               	movwf	___ftge@ff1+1
  4524  011E  3042               	movlw	66
  4525  011F  00B2               	movwf	___ftge@ff1+2
  4526  0120  0866               	movf	Fuzzy@deltaRpm,w
  4527  0121  00B3               	movwf	___ftge@ff2
  4528  0122  0867               	movf	Fuzzy@deltaRpm+1,w
  4529  0123  00B4               	movwf	___ftge@ff2+1
  4530  0124  0868               	movf	Fuzzy@deltaRpm+2,w
  4531  0125  00B5               	movwf	___ftge@ff2+2
  4532  0126  160A  118A  26B9  120A  118A  	fcall	___ftge
  4533  012B  1803               	btfsc	3,0
  4534  012C  2935               	goto	i1l2495
  4535  012D  3000               	movlw	0
  4536  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4537  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0130  00E6               	movwf	Fuzzy@deltaRpm
  4539  0131  30B4               	movlw	180
  4540  0132  00E7               	movwf	Fuzzy@deltaRpm+1
  4541  0133  3042               	movlw	66
  4542  0134  00E8               	movwf	Fuzzy@deltaRpm+2
  4543  0135                     i1l2495:	
  4544                           
  4545                           ;main.c: 202: if (deltaRpm < 25)
  4546  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0136  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0137  0866               	movf	Fuzzy@deltaRpm,w
  4549  0138  00B0               	movwf	___ftge@ff1
  4550  0139  0867               	movf	Fuzzy@deltaRpm+1,w
  4551  013A  00B1               	movwf	___ftge@ff1+1
  4552  013B  0868               	movf	Fuzzy@deltaRpm+2,w
  4553  013C  00B2               	movwf	___ftge@ff1+2
  4554  013D  3000               	movlw	0
  4555  013E  00B3               	movwf	___ftge@ff2
  4556  013F  30C8               	movlw	200
  4557  0140  00B4               	movwf	___ftge@ff2+1
  4558  0141  3041               	movlw	65
  4559  0142  00B5               	movwf	___ftge@ff2+2
  4560  0143  160A  118A  26B9  120A  118A  	fcall	___ftge
  4561  0148  1803               	btfsc	3,0
  4562  0149  2AAA               	goto	i1l2519
  4563                           
  4564                           ;main.c: 203: {
  4565                           ;main.c: 207: fitemp = trapmf(deltaRpm, 0,0,13,32);
  4566  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4567  014B  1303               	bcf	3,6	;RP1=0, select bank0
  4568  014C  0866               	movf	Fuzzy@deltaRpm,w
  4569  014D  00C0               	movwf	trapmf@x
  4570  014E  0867               	movf	Fuzzy@deltaRpm+1,w
  4571  014F  00C1               	movwf	trapmf@x+1
  4572  0150  0868               	movf	Fuzzy@deltaRpm+2,w
  4573  0151  00C2               	movwf	trapmf@x+2
  4574  0152  3000               	movlw	0
  4575  0153  00C3               	movwf	trapmf@a
  4576  0154  3000               	movlw	0
  4577  0155  00C4               	movwf	trapmf@a+1
  4578  0156  3000               	movlw	0
  4579  0157  00C5               	movwf	trapmf@a+2
  4580  0158  3000               	movlw	0
  4581  0159  00C6               	movwf	trapmf@b
  4582  015A  3000               	movlw	0
  4583  015B  00C7               	movwf	trapmf@b+1
  4584  015C  3000               	movlw	0
  4585  015D  00C8               	movwf	trapmf@b+2
  4586  015E  3000               	movlw	0
  4587  015F  00C9               	movwf	trapmf@c
  4588  0160  3050               	movlw	80
  4589  0161  00CA               	movwf	trapmf@c+1
  4590  0162  3041               	movlw	65
  4591  0163  00CB               	movwf	trapmf@c+2
  4592  0164  3000               	movlw	0
  4593  0165  00CC               	movwf	trapmf@d
  4594  0166  3000               	movlw	0
  4595  0167  00CD               	movwf	trapmf@d+1
  4596  0168  3042               	movlw	66
  4597  0169  00CE               	movwf	trapmf@d+2
  4598  016A  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4599  016F  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0170  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0171  0840               	movf	?_trapmf,w
  4602  0172  1683               	bsf	3,5	;RP0=1, select bank1
  4603  0173  1303               	bcf	3,6	;RP1=0, select bank1
  4604  0174  00A3               	movwf	_fitemp^(0+128)
  4605  0175  1283               	bcf	3,5	;RP0=0, select bank0
  4606  0176  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0177  0841               	movf	?_trapmf+1,w
  4608  0178  1683               	bsf	3,5	;RP0=1, select bank1
  4609  0179  1303               	bcf	3,6	;RP1=0, select bank1
  4610  017A  00A4               	movwf	(_fitemp+1)^(0+128)
  4611  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4612  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4613  017D  0842               	movf	?_trapmf+2,w
  4614  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4615  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4616  0180  00A5               	movwf	(_fitemp+2)^(0+128)
  4617                           
  4618                           ;main.c: 210: fop_rule1 = max_val(fitemp,0.1);
  4619  0181  0823               	movf	_fitemp^(0+128),w
  4620  0182  1283               	bcf	3,5	;RP0=0, select bank0
  4621  0183  1303               	bcf	3,6	;RP1=0, select bank0
  4622  0184  00BC               	movwf	max_val@a
  4623  0185  1683               	bsf	3,5	;RP0=1, select bank1
  4624  0186  1303               	bcf	3,6	;RP1=0, select bank1
  4625  0187  0824               	movf	(_fitemp+1)^(0+128),w
  4626  0188  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0189  1303               	bcf	3,6	;RP1=0, select bank0
  4628  018A  00BD               	movwf	max_val@a+1
  4629  018B  1683               	bsf	3,5	;RP0=1, select bank1
  4630  018C  1303               	bcf	3,6	;RP1=0, select bank1
  4631  018D  0825               	movf	(_fitemp+2)^(0+128),w
  4632  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4633  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4634  0190  00BE               	movwf	max_val@a+2
  4635  0191  30CD               	movlw	205
  4636  0192  00BF               	movwf	max_val@b
  4637  0193  30CC               	movlw	204
  4638  0194  00C0               	movwf	max_val@b+1
  4639  0195  303D               	movlw	61
  4640  0196  00C1               	movwf	max_val@b+2
  4641  0197  160A  118A  2511  120A  118A  	fcall	_max_val
  4642  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4643  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4644  019E  083C               	movf	?_max_val,w
  4645  019F  1683               	bsf	3,5	;RP0=1, select bank1
  4646  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  4647  01A1  00A6               	movwf	_fop_rule1^(0+128)
  4648  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  4649  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  4650  01A4  083D               	movf	?_max_val+1,w
  4651  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  4652  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  4653  01A7  00A7               	movwf	(_fop_rule1+1)^(0+128)
  4654  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  4655  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  4656  01AA  083E               	movf	?_max_val+2,w
  4657  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  4658  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  4659  01AD  00A8               	movwf	(_fop_rule1+2)^(0+128)
  4660                           
  4661                           ;main.c: 213: x=0;
  4662  01AE  3000               	movlw	0
  4663  01AF  00B5               	movwf	_x^(0+128)
  4664  01B0  3000               	movlw	0
  4665  01B1  00B6               	movwf	(_x+1)^(0+128)
  4666  01B2  3000               	movlw	0
  4667  01B3  00B7               	movwf	(_x+2)^(0+128)
  4668                           
  4669                           ;main.c: 214: y=0;
  4670  01B4  3000               	movlw	0
  4671  01B5  00B8               	movwf	_y^(0+128)
  4672  01B6  3000               	movlw	0
  4673  01B7  00B9               	movwf	(_y+1)^(0+128)
  4674  01B8  3000               	movlw	0
  4675  01B9  00BA               	movwf	(_y+2)^(0+128)
  4676                           
  4677                           ;main.c: 215: for (int a=0; a<=90; a++)
  4678  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  4679  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  4680  01BC  01D7               	clrf	Fuzzy@a
  4681  01BD  01D8               	clrf	Fuzzy@a+1
  4682  01BE  0858               	movf	Fuzzy@a+1,w
  4683  01BF  3A80               	xorlw	128
  4684  01C0  00FF               	movwf	127
  4685  01C1  3080               	movlw	128
  4686  01C2  027F               	subwf	127,w
  4687  01C3  1D03               	skipz
  4688  01C4  29C7               	goto	u285_25
  4689  01C5  305B               	movlw	91
  4690  01C6  0257               	subwf	Fuzzy@a,w
  4691  01C7                     u285_25:	
  4692  01C7  1803               	btfsc	3,0
  4693  01C8  2AAA               	goto	i1l2519
  4694  01C9                     i1l2509:	
  4695                           
  4696                           ;main.c: 216: {
  4697                           ;main.c: 217: y = trapmf(x,0,0,13,32);
  4698  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  4699  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  4700  01CB  0835               	movf	_x^(0+128),w
  4701  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4702  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4703  01CE  00C0               	movwf	trapmf@x
  4704  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  4705  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  4706  01D1  0836               	movf	(_x+1)^(0+128),w
  4707  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  4708  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  4709  01D4  00C1               	movwf	trapmf@x+1
  4710  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  4711  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  4712  01D7  0837               	movf	(_x+2)^(0+128),w
  4713  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  4714  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  4715  01DA  00C2               	movwf	trapmf@x+2
  4716  01DB  3000               	movlw	0
  4717  01DC  00C3               	movwf	trapmf@a
  4718  01DD  3000               	movlw	0
  4719  01DE  00C4               	movwf	trapmf@a+1
  4720  01DF  3000               	movlw	0
  4721  01E0  00C5               	movwf	trapmf@a+2
  4722  01E1  3000               	movlw	0
  4723  01E2  00C6               	movwf	trapmf@b
  4724  01E3  3000               	movlw	0
  4725  01E4  00C7               	movwf	trapmf@b+1
  4726  01E5  3000               	movlw	0
  4727  01E6  00C8               	movwf	trapmf@b+2
  4728  01E7  3000               	movlw	0
  4729  01E8  00C9               	movwf	trapmf@c
  4730  01E9  3050               	movlw	80
  4731  01EA  00CA               	movwf	trapmf@c+1
  4732  01EB  3041               	movlw	65
  4733  01EC  00CB               	movwf	trapmf@c+2
  4734  01ED  3000               	movlw	0
  4735  01EE  00CC               	movwf	trapmf@d
  4736  01EF  3000               	movlw	0
  4737  01F0  00CD               	movwf	trapmf@d+1
  4738  01F1  3042               	movlw	66
  4739  01F2  00CE               	movwf	trapmf@d+2
  4740  01F3  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4741  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4742  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4743  01FA  0840               	movf	?_trapmf,w
  4744  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  4745  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  4746  01FD  00B8               	movwf	_y^(0+128)
  4747  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4748  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0200  0841               	movf	?_trapmf+1,w
  4750  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4751  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4752  0203  00B9               	movwf	(_y+1)^(0+128)
  4753  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0206  0842               	movf	?_trapmf+2,w
  4756  0207  1683               	bsf	3,5	;RP0=1, select bank1
  4757  0208  1303               	bcf	3,6	;RP1=0, select bank1
  4758  0209  00BA               	movwf	(_y+2)^(0+128)
  4759                           
  4760                           ;main.c: 219: if (y > fop_rule1)
  4761  020A  0826               	movf	_fop_rule1^(0+128),w
  4762  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4763  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4764  020D  00B0               	movwf	___ftge@ff1
  4765  020E  1683               	bsf	3,5	;RP0=1, select bank1
  4766  020F  1303               	bcf	3,6	;RP1=0, select bank1
  4767  0210  0827               	movf	(_fop_rule1+1)^(0+128),w
  4768  0211  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0212  1303               	bcf	3,6	;RP1=0, select bank0
  4770  0213  00B1               	movwf	___ftge@ff1+1
  4771  0214  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0215  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0216  0828               	movf	(_fop_rule1+2)^(0+128),w
  4774  0217  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0218  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0219  00B2               	movwf	___ftge@ff1+2
  4777  021A  1683               	bsf	3,5	;RP0=1, select bank1
  4778  021B  1303               	bcf	3,6	;RP1=0, select bank1
  4779  021C  0838               	movf	_y^(0+128),w
  4780  021D  1283               	bcf	3,5	;RP0=0, select bank0
  4781  021E  1303               	bcf	3,6	;RP1=0, select bank0
  4782  021F  00B3               	movwf	___ftge@ff2
  4783  0220  1683               	bsf	3,5	;RP0=1, select bank1
  4784  0221  1303               	bcf	3,6	;RP1=0, select bank1
  4785  0222  0839               	movf	(_y+1)^(0+128),w
  4786  0223  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0224  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0225  00B4               	movwf	___ftge@ff2+1
  4789  0226  1683               	bsf	3,5	;RP0=1, select bank1
  4790  0227  1303               	bcf	3,6	;RP1=0, select bank1
  4791  0228  083A               	movf	(_y+2)^(0+128),w
  4792  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4793  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4794  022B  00B5               	movwf	___ftge@ff2+2
  4795  022C  160A  118A  26B9  120A  118A  	fcall	___ftge
  4796  0231  1803               	btfsc	3,0
  4797  0232  2A43               	goto	i1l2513
  4798                           
  4799                           ;main.c: 220: {
  4800                           ;main.c: 221: reduz += fop_rule1;
  4801  0233  1683               	bsf	3,5	;RP0=1, select bank1
  4802  0234  1303               	bcf	3,6	;RP1=0, select bank1
  4803  0235  0826               	movf	_fop_rule1^(0+128),w
  4804  0236  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0237  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0238  00A3               	movwf	___ftadd@f1
  4807  0239  1683               	bsf	3,5	;RP0=1, select bank1
  4808  023A  1303               	bcf	3,6	;RP1=0, select bank1
  4809  023B  0827               	movf	(_fop_rule1+1)^(0+128),w
  4810  023C  1283               	bcf	3,5	;RP0=0, select bank0
  4811  023D  1303               	bcf	3,6	;RP1=0, select bank0
  4812  023E  00A4               	movwf	___ftadd@f1+1
  4813  023F  1683               	bsf	3,5	;RP0=1, select bank1
  4814  0240  1303               	bcf	3,6	;RP1=0, select bank1
  4815  0241  0828               	movf	(_fop_rule1+2)^(0+128),w
  4816  0242  2A52               	goto	L2
  4817  0243                     i1l2513:	
  4818                           ;main.c: 222: }
  4819                           
  4820                           
  4821                           ;main.c: 223: else
  4822                           ;main.c: 224: {
  4823                           ;main.c: 225: reduz += y;
  4824  0243  1683               	bsf	3,5	;RP0=1, select bank1
  4825  0244  1303               	bcf	3,6	;RP1=0, select bank1
  4826  0245  0838               	movf	_y^(0+128),w
  4827  0246  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0247  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0248  00A3               	movwf	___ftadd@f1
  4830  0249  1683               	bsf	3,5	;RP0=1, select bank1
  4831  024A  1303               	bcf	3,6	;RP1=0, select bank1
  4832  024B  0839               	movf	(_y+1)^(0+128),w
  4833  024C  1283               	bcf	3,5	;RP0=0, select bank0
  4834  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4835  024E  00A4               	movwf	___ftadd@f1+1
  4836  024F  1683               	bsf	3,5	;RP0=1, select bank1
  4837  0250  1303               	bcf	3,6	;RP1=0, select bank1
  4838  0251  083A               	movf	(_y+2)^(0+128),w
  4839  0252                     L2:	
  4840  0252  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0253  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0254  00A5               	movwf	___ftadd@f1+2
  4843  0255  0860               	movf	Fuzzy@reduz,w
  4844  0256  00A6               	movwf	___ftadd@f2
  4845  0257  0861               	movf	Fuzzy@reduz+1,w
  4846  0258  00A7               	movwf	___ftadd@f2+1
  4847  0259  0862               	movf	Fuzzy@reduz+2,w
  4848  025A  00A8               	movwf	___ftadd@f2+2
  4849  025B  120A  158A  2332  120A  118A  	fcall	___ftadd
  4850  0260  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0261  1303               	bcf	3,6	;RP1=0, select bank0
  4852  0262  0823               	movf	?___ftadd,w
  4853  0263  00E0               	movwf	Fuzzy@reduz
  4854  0264  0824               	movf	?___ftadd+1,w
  4855  0265  00E1               	movwf	Fuzzy@reduz+1
  4856  0266  0825               	movf	?___ftadd+2,w
  4857  0267  00E2               	movwf	Fuzzy@reduz+2
  4858                           
  4859                           ;main.c: 226: }
  4860                           ;main.c: 228: x=x+1;
  4861  0268  3000               	movlw	0
  4862  0269  00A3               	movwf	___ftadd@f1
  4863  026A  3080               	movlw	128
  4864  026B  00A4               	movwf	___ftadd@f1+1
  4865  026C  303F               	movlw	63
  4866  026D  00A5               	movwf	___ftadd@f1+2
  4867  026E  1683               	bsf	3,5	;RP0=1, select bank1
  4868  026F  1303               	bcf	3,6	;RP1=0, select bank1
  4869  0270  0835               	movf	_x^(0+128),w
  4870  0271  1283               	bcf	3,5	;RP0=0, select bank0
  4871  0272  1303               	bcf	3,6	;RP1=0, select bank0
  4872  0273  00A6               	movwf	___ftadd@f2
  4873  0274  1683               	bsf	3,5	;RP0=1, select bank1
  4874  0275  1303               	bcf	3,6	;RP1=0, select bank1
  4875  0276  0836               	movf	(_x+1)^(0+128),w
  4876  0277  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0278  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0279  00A7               	movwf	___ftadd@f2+1
  4879  027A  1683               	bsf	3,5	;RP0=1, select bank1
  4880  027B  1303               	bcf	3,6	;RP1=0, select bank1
  4881  027C  0837               	movf	(_x+2)^(0+128),w
  4882  027D  1283               	bcf	3,5	;RP0=0, select bank0
  4883  027E  1303               	bcf	3,6	;RP1=0, select bank0
  4884  027F  00A8               	movwf	___ftadd@f2+2
  4885  0280  120A  158A  2332  120A  118A  	fcall	___ftadd
  4886  0285  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0286  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0287  0823               	movf	?___ftadd,w
  4889  0288  1683               	bsf	3,5	;RP0=1, select bank1
  4890  0289  1303               	bcf	3,6	;RP1=0, select bank1
  4891  028A  00B5               	movwf	_x^(0+128)
  4892  028B  1283               	bcf	3,5	;RP0=0, select bank0
  4893  028C  1303               	bcf	3,6	;RP1=0, select bank0
  4894  028D  0824               	movf	?___ftadd+1,w
  4895  028E  1683               	bsf	3,5	;RP0=1, select bank1
  4896  028F  1303               	bcf	3,6	;RP1=0, select bank1
  4897  0290  00B6               	movwf	(_x+1)^(0+128)
  4898  0291  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0292  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0293  0825               	movf	?___ftadd+2,w
  4901  0294  1683               	bsf	3,5	;RP0=1, select bank1
  4902  0295  1303               	bcf	3,6	;RP1=0, select bank1
  4903  0296  00B7               	movwf	(_x+2)^(0+128)
  4904  0297  3001               	movlw	1
  4905  0298  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0299  1303               	bcf	3,6	;RP1=0, select bank0
  4907  029A  07D7               	addwf	Fuzzy@a,f
  4908  029B  1803               	skipnc
  4909  029C  0AD8               	incf	Fuzzy@a+1,f
  4910  029D  3000               	movlw	0
  4911  029E  07D8               	addwf	Fuzzy@a+1,f
  4912  029F  0858               	movf	Fuzzy@a+1,w
  4913  02A0  3A80               	xorlw	128
  4914  02A1  00FF               	movwf	127
  4915  02A2  3080               	movlw	128
  4916  02A3  027F               	subwf	127,w
  4917  02A4  1D03               	skipz
  4918  02A5  2AA8               	goto	u287_25
  4919  02A6  305B               	movlw	91
  4920  02A7  0257               	subwf	Fuzzy@a,w
  4921  02A8                     u287_25:	
  4922  02A8  1C03               	skipc
  4923  02A9  29C9               	goto	i1l2509
  4924  02AA                     i1l2519:	
  4925                           
  4926                           ;main.c: 229: }
  4927                           ;main.c: 231: }
  4928                           ;main.c: 237: if ((deltaRpm > 20) && (deltaRpm < 70))
  4929  02AA  3000               	movlw	0
  4930  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  4931  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  4932  02AD  00B0               	movwf	___ftge@ff1
  4933  02AE  30A0               	movlw	160
  4934  02AF  00B1               	movwf	___ftge@ff1+1
  4935  02B0  3041               	movlw	65
  4936  02B1  00B2               	movwf	___ftge@ff1+2
  4937  02B2  0866               	movf	Fuzzy@deltaRpm,w
  4938  02B3  00B3               	movwf	___ftge@ff2
  4939  02B4  0867               	movf	Fuzzy@deltaRpm+1,w
  4940  02B5  00B4               	movwf	___ftge@ff2+1
  4941  02B6  0868               	movf	Fuzzy@deltaRpm+2,w
  4942  02B7  00B5               	movwf	___ftge@ff2+2
  4943  02B8  160A  118A  26B9  120A  118A  	fcall	___ftge
  4944  02BD  1803               	btfsc	3,0
  4945  02BE  2C28               	goto	i1l2545
  4946  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4947  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  4948  02C1  0866               	movf	Fuzzy@deltaRpm,w
  4949  02C2  00B0               	movwf	___ftge@ff1
  4950  02C3  0867               	movf	Fuzzy@deltaRpm+1,w
  4951  02C4  00B1               	movwf	___ftge@ff1+1
  4952  02C5  0868               	movf	Fuzzy@deltaRpm+2,w
  4953  02C6  00B2               	movwf	___ftge@ff1+2
  4954  02C7  3000               	movlw	0
  4955  02C8  00B3               	movwf	___ftge@ff2
  4956  02C9  308C               	movlw	140
  4957  02CA  00B4               	movwf	___ftge@ff2+1
  4958  02CB  3042               	movlw	66
  4959  02CC  00B5               	movwf	___ftge@ff2+2
  4960  02CD  160A  118A  26B9  120A  118A  	fcall	___ftge
  4961  02D2  1803               	btfsc	3,0
  4962  02D3  2C28               	goto	i1l2545
  4963                           
  4964                           ;main.c: 238: {
  4965                           ;main.c: 241: fitemp = trimf(deltaRpm, 9, 45, 81);
  4966  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4967  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4968  02D6  0866               	movf	Fuzzy@deltaRpm,w
  4969  02D7  00C0               	movwf	trimf@x
  4970  02D8  0867               	movf	Fuzzy@deltaRpm+1,w
  4971  02D9  00C1               	movwf	trimf@x+1
  4972  02DA  0868               	movf	Fuzzy@deltaRpm+2,w
  4973  02DB  00C2               	movwf	trimf@x+2
  4974  02DC  3000               	movlw	0
  4975  02DD  00C3               	movwf	trimf@a
  4976  02DE  3010               	movlw	16
  4977  02DF  00C4               	movwf	trimf@a+1
  4978  02E0  3041               	movlw	65
  4979  02E1  00C5               	movwf	trimf@a+2
  4980  02E2  3000               	movlw	0
  4981  02E3  00C6               	movwf	trimf@b
  4982  02E4  3034               	movlw	52
  4983  02E5  00C7               	movwf	trimf@b+1
  4984  02E6  3042               	movlw	66
  4985  02E7  00C8               	movwf	trimf@b+2
  4986  02E8  3000               	movlw	0
  4987  02E9  00C9               	movwf	trimf@c
  4988  02EA  30A2               	movlw	162
  4989  02EB  00CA               	movwf	trimf@c+1
  4990  02EC  3042               	movlw	66
  4991  02ED  00CB               	movwf	trimf@c+2
  4992  02EE  120A  158A  243B  120A  118A  	fcall	_trimf
  4993  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  4994  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  4995  02F5  0840               	movf	?_trimf,w
  4996  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  4997  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  4998  02F8  00A3               	movwf	_fitemp^(0+128)
  4999  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  5000  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  5001  02FB  0841               	movf	?_trimf+1,w
  5002  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  5003  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  5004  02FE  00A4               	movwf	(_fitemp+1)^(0+128)
  5005  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0300  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0301  0842               	movf	?_trimf+2,w
  5008  0302  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0303  1303               	bcf	3,6	;RP1=0, select bank1
  5010  0304  00A5               	movwf	(_fitemp+2)^(0+128)
  5011                           
  5012                           ;main.c: 244: fop_rule2 = max_val(fitemp,0.1);
  5013  0305  0823               	movf	_fitemp^(0+128),w
  5014  0306  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0307  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0308  00BC               	movwf	max_val@a
  5017  0309  1683               	bsf	3,5	;RP0=1, select bank1
  5018  030A  1303               	bcf	3,6	;RP1=0, select bank1
  5019  030B  0824               	movf	(_fitemp+1)^(0+128),w
  5020  030C  1283               	bcf	3,5	;RP0=0, select bank0
  5021  030D  1303               	bcf	3,6	;RP1=0, select bank0
  5022  030E  00BD               	movwf	max_val@a+1
  5023  030F  1683               	bsf	3,5	;RP0=1, select bank1
  5024  0310  1303               	bcf	3,6	;RP1=0, select bank1
  5025  0311  0825               	movf	(_fitemp+2)^(0+128),w
  5026  0312  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0313  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0314  00BE               	movwf	max_val@a+2
  5029  0315  30CD               	movlw	205
  5030  0316  00BF               	movwf	max_val@b
  5031  0317  30CC               	movlw	204
  5032  0318  00C0               	movwf	max_val@b+1
  5033  0319  303D               	movlw	61
  5034  031A  00C1               	movwf	max_val@b+2
  5035  031B  160A  118A  2511  120A  118A  	fcall	_max_val
  5036  0320  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0321  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0322  083C               	movf	?_max_val,w
  5039  0323  1683               	bsf	3,5	;RP0=1, select bank1
  5040  0324  1303               	bcf	3,6	;RP1=0, select bank1
  5041  0325  00A9               	movwf	_fop_rule2^(0+128)
  5042  0326  1283               	bcf	3,5	;RP0=0, select bank0
  5043  0327  1303               	bcf	3,6	;RP1=0, select bank0
  5044  0328  083D               	movf	?_max_val+1,w
  5045  0329  1683               	bsf	3,5	;RP0=1, select bank1
  5046  032A  1303               	bcf	3,6	;RP1=0, select bank1
  5047  032B  00AA               	movwf	(_fop_rule2+1)^(0+128)
  5048  032C  1283               	bcf	3,5	;RP0=0, select bank0
  5049  032D  1303               	bcf	3,6	;RP1=0, select bank0
  5050  032E  083E               	movf	?_max_val+2,w
  5051  032F  1683               	bsf	3,5	;RP0=1, select bank1
  5052  0330  1303               	bcf	3,6	;RP1=0, select bank1
  5053  0331  00AB               	movwf	(_fop_rule2+2)^(0+128)
  5054                           
  5055                           ;main.c: 247: x=0;
  5056  0332  3000               	movlw	0
  5057  0333  00B5               	movwf	_x^(0+128)
  5058  0334  3000               	movlw	0
  5059  0335  00B6               	movwf	(_x+1)^(0+128)
  5060  0336  3000               	movlw	0
  5061  0337  00B7               	movwf	(_x+2)^(0+128)
  5062                           
  5063                           ;main.c: 248: y=0;
  5064  0338  3000               	movlw	0
  5065  0339  00B8               	movwf	_y^(0+128)
  5066  033A  3000               	movlw	0
  5067  033B  00B9               	movwf	(_y+1)^(0+128)
  5068  033C  3000               	movlw	0
  5069  033D  00BA               	movwf	(_y+2)^(0+128)
  5070                           
  5071                           ;main.c: 249: for (int a=0; a<=90; a++)
  5072  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5073  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0340  01D9               	clrf	Fuzzy@a_241
  5075  0341  01DA               	clrf	Fuzzy@a_241+1
  5076  0342  085A               	movf	Fuzzy@a_241+1,w
  5077  0343  3A80               	xorlw	128
  5078  0344  00FF               	movwf	127
  5079  0345  3080               	movlw	128
  5080  0346  027F               	subwf	127,w
  5081  0347  1D03               	skipz
  5082  0348  2B4B               	goto	u290_25
  5083  0349  305B               	movlw	91
  5084  034A  0259               	subwf	Fuzzy@a_241,w
  5085  034B                     u290_25:	
  5086  034B  1803               	btfsc	3,0
  5087  034C  2C28               	goto	i1l2545
  5088  034D                     i1l2535:	
  5089                           
  5090                           ;main.c: 250: {
  5091                           ;main.c: 251: y = trimf(x, 9, 45, 81);
  5092  034D  1683               	bsf	3,5	;RP0=1, select bank1
  5093  034E  1303               	bcf	3,6	;RP1=0, select bank1
  5094  034F  0835               	movf	_x^(0+128),w
  5095  0350  1283               	bcf	3,5	;RP0=0, select bank0
  5096  0351  1303               	bcf	3,6	;RP1=0, select bank0
  5097  0352  00C0               	movwf	trimf@x
  5098  0353  1683               	bsf	3,5	;RP0=1, select bank1
  5099  0354  1303               	bcf	3,6	;RP1=0, select bank1
  5100  0355  0836               	movf	(_x+1)^(0+128),w
  5101  0356  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0357  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0358  00C1               	movwf	trimf@x+1
  5104  0359  1683               	bsf	3,5	;RP0=1, select bank1
  5105  035A  1303               	bcf	3,6	;RP1=0, select bank1
  5106  035B  0837               	movf	(_x+2)^(0+128),w
  5107  035C  1283               	bcf	3,5	;RP0=0, select bank0
  5108  035D  1303               	bcf	3,6	;RP1=0, select bank0
  5109  035E  00C2               	movwf	trimf@x+2
  5110  035F  3000               	movlw	0
  5111  0360  00C3               	movwf	trimf@a
  5112  0361  3010               	movlw	16
  5113  0362  00C4               	movwf	trimf@a+1
  5114  0363  3041               	movlw	65
  5115  0364  00C5               	movwf	trimf@a+2
  5116  0365  3000               	movlw	0
  5117  0366  00C6               	movwf	trimf@b
  5118  0367  3034               	movlw	52
  5119  0368  00C7               	movwf	trimf@b+1
  5120  0369  3042               	movlw	66
  5121  036A  00C8               	movwf	trimf@b+2
  5122  036B  3000               	movlw	0
  5123  036C  00C9               	movwf	trimf@c
  5124  036D  30A2               	movlw	162
  5125  036E  00CA               	movwf	trimf@c+1
  5126  036F  3042               	movlw	66
  5127  0370  00CB               	movwf	trimf@c+2
  5128  0371  120A  158A  243B  120A  118A  	fcall	_trimf
  5129  0376  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0377  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0378  0840               	movf	?_trimf,w
  5132  0379  1683               	bsf	3,5	;RP0=1, select bank1
  5133  037A  1303               	bcf	3,6	;RP1=0, select bank1
  5134  037B  00B8               	movwf	_y^(0+128)
  5135  037C  1283               	bcf	3,5	;RP0=0, select bank0
  5136  037D  1303               	bcf	3,6	;RP1=0, select bank0
  5137  037E  0841               	movf	?_trimf+1,w
  5138  037F  1683               	bsf	3,5	;RP0=1, select bank1
  5139  0380  1303               	bcf	3,6	;RP1=0, select bank1
  5140  0381  00B9               	movwf	(_y+1)^(0+128)
  5141  0382  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0383  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0384  0842               	movf	?_trimf+2,w
  5144  0385  1683               	bsf	3,5	;RP0=1, select bank1
  5145  0386  1303               	bcf	3,6	;RP1=0, select bank1
  5146  0387  00BA               	movwf	(_y+2)^(0+128)
  5147                           
  5148                           ;main.c: 253: if (y >= fop_rule2)
  5149  0388  0838               	movf	_y^(0+128),w
  5150  0389  1283               	bcf	3,5	;RP0=0, select bank0
  5151  038A  1303               	bcf	3,6	;RP1=0, select bank0
  5152  038B  00B0               	movwf	___ftge@ff1
  5153  038C  1683               	bsf	3,5	;RP0=1, select bank1
  5154  038D  1303               	bcf	3,6	;RP1=0, select bank1
  5155  038E  0839               	movf	(_y+1)^(0+128),w
  5156  038F  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0390  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0391  00B1               	movwf	___ftge@ff1+1
  5159  0392  1683               	bsf	3,5	;RP0=1, select bank1
  5160  0393  1303               	bcf	3,6	;RP1=0, select bank1
  5161  0394  083A               	movf	(_y+2)^(0+128),w
  5162  0395  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0396  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0397  00B2               	movwf	___ftge@ff1+2
  5165  0398  1683               	bsf	3,5	;RP0=1, select bank1
  5166  0399  1303               	bcf	3,6	;RP1=0, select bank1
  5167  039A  0829               	movf	_fop_rule2^(0+128),w
  5168  039B  1283               	bcf	3,5	;RP0=0, select bank0
  5169  039C  1303               	bcf	3,6	;RP1=0, select bank0
  5170  039D  00B3               	movwf	___ftge@ff2
  5171  039E  1683               	bsf	3,5	;RP0=1, select bank1
  5172  039F  1303               	bcf	3,6	;RP1=0, select bank1
  5173  03A0  082A               	movf	(_fop_rule2+1)^(0+128),w
  5174  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  5175  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  5176  03A3  00B4               	movwf	___ftge@ff2+1
  5177  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  5178  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  5179  03A6  082B               	movf	(_fop_rule2+2)^(0+128),w
  5180  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  5181  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  5182  03A9  00B5               	movwf	___ftge@ff2+2
  5183  03AA  160A  118A  26B9  120A  118A  	fcall	___ftge
  5184  03AF  1C03               	btfss	3,0
  5185  03B0  2BC1               	goto	i1l2539
  5186                           
  5187                           ;main.c: 254: {
  5188                           ;main.c: 255: mantem += fop_rule2;
  5189  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  5190  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  5191  03B3  0829               	movf	_fop_rule2^(0+128),w
  5192  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  5193  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  5194  03B6  00A3               	movwf	___ftadd@f1
  5195  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  5196  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  5197  03B9  082A               	movf	(_fop_rule2+1)^(0+128),w
  5198  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  5199  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  5200  03BC  00A4               	movwf	___ftadd@f1+1
  5201  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  5202  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  5203  03BF  082B               	movf	(_fop_rule2+2)^(0+128),w
  5204  03C0  2BD0               	goto	L3
  5205  03C1                     i1l2539:	
  5206                           ;main.c: 256: }
  5207                           
  5208                           
  5209                           ;main.c: 257: else
  5210                           ;main.c: 258: {
  5211                           ;main.c: 259: mantem += y;
  5212  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  5213  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  5214  03C3  0838               	movf	_y^(0+128),w
  5215  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  5216  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  5217  03C6  00A3               	movwf	___ftadd@f1
  5218  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  5219  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  5220  03C9  0839               	movf	(_y+1)^(0+128),w
  5221  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  5222  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  5223  03CC  00A4               	movwf	___ftadd@f1+1
  5224  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  5225  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  5226  03CF  083A               	movf	(_y+2)^(0+128),w
  5227  03D0                     L3:	
  5228  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  5229  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  5230  03D2  00A5               	movwf	___ftadd@f1+2
  5231  03D3  085D               	movf	Fuzzy@mantem,w
  5232  03D4  00A6               	movwf	___ftadd@f2
  5233  03D5  085E               	movf	Fuzzy@mantem+1,w
  5234  03D6  00A7               	movwf	___ftadd@f2+1
  5235  03D7  085F               	movf	Fuzzy@mantem+2,w
  5236  03D8  00A8               	movwf	___ftadd@f2+2
  5237  03D9  120A  158A  2332  120A  118A  	fcall	___ftadd
  5238  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  5239  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  5240  03E0  0823               	movf	?___ftadd,w
  5241  03E1  00DD               	movwf	Fuzzy@mantem
  5242  03E2  0824               	movf	?___ftadd+1,w
  5243  03E3  00DE               	movwf	Fuzzy@mantem+1
  5244  03E4  0825               	movf	?___ftadd+2,w
  5245  03E5  00DF               	movwf	Fuzzy@mantem+2
  5246                           
  5247                           ;main.c: 260: }
  5248                           ;main.c: 262: x=x+1;
  5249  03E6  3000               	movlw	0
  5250  03E7  00A3               	movwf	___ftadd@f1
  5251  03E8  3080               	movlw	128
  5252  03E9  00A4               	movwf	___ftadd@f1+1
  5253  03EA  303F               	movlw	63
  5254  03EB  00A5               	movwf	___ftadd@f1+2
  5255  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  5256  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  5257  03EE  0835               	movf	_x^(0+128),w
  5258  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  5259  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  5260  03F1  00A6               	movwf	___ftadd@f2
  5261  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  5262  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  5263  03F4  0836               	movf	(_x+1)^(0+128),w
  5264  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  5265  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  5266  03F7  00A7               	movwf	___ftadd@f2+1
  5267  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  5268  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  5269  03FA  0837               	movf	(_x+2)^(0+128),w
  5270  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  5271  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  5272  03FD  00A8               	movwf	___ftadd@f2+2
  5273  03FE  120A  158A  2332  120A  118A  	fcall	___ftadd
  5274  0403  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0404  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0405  0823               	movf	?___ftadd,w
  5277  0406  1683               	bsf	3,5	;RP0=1, select bank1
  5278  0407  1303               	bcf	3,6	;RP1=0, select bank1
  5279  0408  00B5               	movwf	_x^(0+128)
  5280  0409  1283               	bcf	3,5	;RP0=0, select bank0
  5281  040A  1303               	bcf	3,6	;RP1=0, select bank0
  5282  040B  0824               	movf	?___ftadd+1,w
  5283  040C  1683               	bsf	3,5	;RP0=1, select bank1
  5284  040D  1303               	bcf	3,6	;RP1=0, select bank1
  5285  040E  00B6               	movwf	(_x+1)^(0+128)
  5286  040F  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0410  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0411  0825               	movf	?___ftadd+2,w
  5289  0412  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0413  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0414  00B7               	movwf	(_x+2)^(0+128)
  5292  0415  3001               	movlw	1
  5293  0416  1283               	bcf	3,5	;RP0=0, select bank0
  5294  0417  1303               	bcf	3,6	;RP1=0, select bank0
  5295  0418  07D9               	addwf	Fuzzy@a_241,f
  5296  0419  1803               	skipnc
  5297  041A  0ADA               	incf	Fuzzy@a_241+1,f
  5298  041B  3000               	movlw	0
  5299  041C  07DA               	addwf	Fuzzy@a_241+1,f
  5300  041D  085A               	movf	Fuzzy@a_241+1,w
  5301  041E  3A80               	xorlw	128
  5302  041F  00FF               	movwf	127
  5303  0420  3080               	movlw	128
  5304  0421  027F               	subwf	127,w
  5305  0422  1D03               	skipz
  5306  0423  2C26               	goto	u292_25
  5307  0424  305B               	movlw	91
  5308  0425  0259               	subwf	Fuzzy@a_241,w
  5309  0426                     u292_25:	
  5310  0426  1C03               	skipc
  5311  0427  2B4D               	goto	i1l2535
  5312  0428                     i1l2545:	
  5313                           
  5314                           ;main.c: 263: }
  5315                           ;main.c: 265: }
  5316                           ;main.c: 271: if (deltaRpm > 70 )
  5317  0428  3000               	movlw	0
  5318  0429  1283               	bcf	3,5	;RP0=0, select bank0
  5319  042A  1303               	bcf	3,6	;RP1=0, select bank0
  5320  042B  00B0               	movwf	___ftge@ff1
  5321  042C  308C               	movlw	140
  5322  042D  00B1               	movwf	___ftge@ff1+1
  5323  042E  3042               	movlw	66
  5324  042F  00B2               	movwf	___ftge@ff1+2
  5325  0430  0866               	movf	Fuzzy@deltaRpm,w
  5326  0431  00B3               	movwf	___ftge@ff2
  5327  0432  0867               	movf	Fuzzy@deltaRpm+1,w
  5328  0433  00B4               	movwf	___ftge@ff2+1
  5329  0434  0868               	movf	Fuzzy@deltaRpm+2,w
  5330  0435  00B5               	movwf	___ftge@ff2+2
  5331  0436  160A  118A  26B9  120A  118A  	fcall	___ftge
  5332  043B  1803               	btfsc	3,0
  5333  043C  2D9D               	goto	i1l2569
  5334                           
  5335                           ;main.c: 272: {
  5336                           ;main.c: 275: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  5337  043D  1283               	bcf	3,5	;RP0=0, select bank0
  5338  043E  1303               	bcf	3,6	;RP1=0, select bank0
  5339  043F  0866               	movf	Fuzzy@deltaRpm,w
  5340  0440  00C0               	movwf	trapmf@x
  5341  0441  0867               	movf	Fuzzy@deltaRpm+1,w
  5342  0442  00C1               	movwf	trapmf@x+1
  5343  0443  0868               	movf	Fuzzy@deltaRpm+2,w
  5344  0444  00C2               	movwf	trapmf@x+2
  5345  0445  3000               	movlw	0
  5346  0446  00C3               	movwf	trapmf@a
  5347  0447  3078               	movlw	120
  5348  0448  00C4               	movwf	trapmf@a+1
  5349  0449  3042               	movlw	66
  5350  044A  00C5               	movwf	trapmf@a+2
  5351  044B  3000               	movlw	0
  5352  044C  00C6               	movwf	trapmf@b
  5353  044D  309E               	movlw	158
  5354  044E  00C7               	movwf	trapmf@b+1
  5355  044F  3042               	movlw	66
  5356  0450  00C8               	movwf	trapmf@b+2
  5357  0451  3000               	movlw	0
  5358  0452  00C9               	movwf	trapmf@c
  5359  0453  30B4               	movlw	180
  5360  0454  00CA               	movwf	trapmf@c+1
  5361  0455  3042               	movlw	66
  5362  0456  00CB               	movwf	trapmf@c+2
  5363  0457  3000               	movlw	0
  5364  0458  00CC               	movwf	trapmf@d
  5365  0459  30B4               	movlw	180
  5366  045A  00CD               	movwf	trapmf@d+1
  5367  045B  3042               	movlw	66
  5368  045C  00CE               	movwf	trapmf@d+2
  5369  045D  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5370  0462  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0463  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0464  0840               	movf	?_trapmf,w
  5373  0465  1683               	bsf	3,5	;RP0=1, select bank1
  5374  0466  1303               	bcf	3,6	;RP1=0, select bank1
  5375  0467  00A3               	movwf	_fitemp^(0+128)
  5376  0468  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0469  1303               	bcf	3,6	;RP1=0, select bank0
  5378  046A  0841               	movf	?_trapmf+1,w
  5379  046B  1683               	bsf	3,5	;RP0=1, select bank1
  5380  046C  1303               	bcf	3,6	;RP1=0, select bank1
  5381  046D  00A4               	movwf	(_fitemp+1)^(0+128)
  5382  046E  1283               	bcf	3,5	;RP0=0, select bank0
  5383  046F  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0470  0842               	movf	?_trapmf+2,w
  5385  0471  1683               	bsf	3,5	;RP0=1, select bank1
  5386  0472  1303               	bcf	3,6	;RP1=0, select bank1
  5387  0473  00A5               	movwf	(_fitemp+2)^(0+128)
  5388                           
  5389                           ;main.c: 279: fop_rule3 = max_val(fitemp,0.1);
  5390  0474  0823               	movf	_fitemp^(0+128),w
  5391  0475  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0476  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0477  00BC               	movwf	max_val@a
  5394  0478  1683               	bsf	3,5	;RP0=1, select bank1
  5395  0479  1303               	bcf	3,6	;RP1=0, select bank1
  5396  047A  0824               	movf	(_fitemp+1)^(0+128),w
  5397  047B  1283               	bcf	3,5	;RP0=0, select bank0
  5398  047C  1303               	bcf	3,6	;RP1=0, select bank0
  5399  047D  00BD               	movwf	max_val@a+1
  5400  047E  1683               	bsf	3,5	;RP0=1, select bank1
  5401  047F  1303               	bcf	3,6	;RP1=0, select bank1
  5402  0480  0825               	movf	(_fitemp+2)^(0+128),w
  5403  0481  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0482  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0483  00BE               	movwf	max_val@a+2
  5406  0484  30CD               	movlw	205
  5407  0485  00BF               	movwf	max_val@b
  5408  0486  30CC               	movlw	204
  5409  0487  00C0               	movwf	max_val@b+1
  5410  0488  303D               	movlw	61
  5411  0489  00C1               	movwf	max_val@b+2
  5412  048A  160A  118A  2511  120A  118A  	fcall	_max_val
  5413  048F  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0490  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0491  083C               	movf	?_max_val,w
  5416  0492  1683               	bsf	3,5	;RP0=1, select bank1
  5417  0493  1303               	bcf	3,6	;RP1=0, select bank1
  5418  0494  00AC               	movwf	_fop_rule3^(0+128)
  5419  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0497  083D               	movf	?_max_val+1,w
  5422  0498  1683               	bsf	3,5	;RP0=1, select bank1
  5423  0499  1303               	bcf	3,6	;RP1=0, select bank1
  5424  049A  00AD               	movwf	(_fop_rule3+1)^(0+128)
  5425  049B  1283               	bcf	3,5	;RP0=0, select bank0
  5426  049C  1303               	bcf	3,6	;RP1=0, select bank0
  5427  049D  083E               	movf	?_max_val+2,w
  5428  049E  1683               	bsf	3,5	;RP0=1, select bank1
  5429  049F  1303               	bcf	3,6	;RP1=0, select bank1
  5430  04A0  00AE               	movwf	(_fop_rule3+2)^(0+128)
  5431                           
  5432                           ;main.c: 282: x=0;
  5433  04A1  3000               	movlw	0
  5434  04A2  00B5               	movwf	_x^(0+128)
  5435  04A3  3000               	movlw	0
  5436  04A4  00B6               	movwf	(_x+1)^(0+128)
  5437  04A5  3000               	movlw	0
  5438  04A6  00B7               	movwf	(_x+2)^(0+128)
  5439                           
  5440                           ;main.c: 283: y=0;
  5441  04A7  3000               	movlw	0
  5442  04A8  00B8               	movwf	_y^(0+128)
  5443  04A9  3000               	movlw	0
  5444  04AA  00B9               	movwf	(_y+1)^(0+128)
  5445  04AB  3000               	movlw	0
  5446  04AC  00BA               	movwf	(_y+2)^(0+128)
  5447                           
  5448                           ;main.c: 284: for (int a=0; a<=90; a++)
  5449  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  5450  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  5451  04AF  01DB               	clrf	Fuzzy@a_242
  5452  04B0  01DC               	clrf	Fuzzy@a_242+1
  5453  04B1  085C               	movf	Fuzzy@a_242+1,w
  5454  04B2  3A80               	xorlw	128
  5455  04B3  00FF               	movwf	127
  5456  04B4  3080               	movlw	128
  5457  04B5  027F               	subwf	127,w
  5458  04B6  1D03               	skipz
  5459  04B7  2CBA               	goto	u294_25
  5460  04B8  305B               	movlw	91
  5461  04B9  025B               	subwf	Fuzzy@a_242,w
  5462  04BA                     u294_25:	
  5463  04BA  1803               	btfsc	3,0
  5464  04BB  2D9D               	goto	i1l2569
  5465  04BC                     i1l2559:	
  5466                           
  5467                           ;main.c: 285: {
  5468                           ;main.c: 286: y = trapmf(x, 62, 79, 90, 90);
  5469  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  5470  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  5471  04BE  0835               	movf	_x^(0+128),w
  5472  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  5473  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  5474  04C1  00C0               	movwf	trapmf@x
  5475  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  5476  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  5477  04C4  0836               	movf	(_x+1)^(0+128),w
  5478  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5479  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5480  04C7  00C1               	movwf	trapmf@x+1
  5481  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  5482  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  5483  04CA  0837               	movf	(_x+2)^(0+128),w
  5484  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  5485  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  5486  04CD  00C2               	movwf	trapmf@x+2
  5487  04CE  3000               	movlw	0
  5488  04CF  00C3               	movwf	trapmf@a
  5489  04D0  3078               	movlw	120
  5490  04D1  00C4               	movwf	trapmf@a+1
  5491  04D2  3042               	movlw	66
  5492  04D3  00C5               	movwf	trapmf@a+2
  5493  04D4  3000               	movlw	0
  5494  04D5  00C6               	movwf	trapmf@b
  5495  04D6  309E               	movlw	158
  5496  04D7  00C7               	movwf	trapmf@b+1
  5497  04D8  3042               	movlw	66
  5498  04D9  00C8               	movwf	trapmf@b+2
  5499  04DA  3000               	movlw	0
  5500  04DB  00C9               	movwf	trapmf@c
  5501  04DC  30B4               	movlw	180
  5502  04DD  00CA               	movwf	trapmf@c+1
  5503  04DE  3042               	movlw	66
  5504  04DF  00CB               	movwf	trapmf@c+2
  5505  04E0  3000               	movlw	0
  5506  04E1  00CC               	movwf	trapmf@d
  5507  04E2  30B4               	movlw	180
  5508  04E3  00CD               	movwf	trapmf@d+1
  5509  04E4  3042               	movlw	66
  5510  04E5  00CE               	movwf	trapmf@d+2
  5511  04E6  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5512  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  5513  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  5514  04ED  0840               	movf	?_trapmf,w
  5515  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  5516  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  5517  04F0  00B8               	movwf	_y^(0+128)
  5518  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  5519  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  5520  04F3  0841               	movf	?_trapmf+1,w
  5521  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  5522  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  5523  04F6  00B9               	movwf	(_y+1)^(0+128)
  5524  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  5525  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  5526  04F9  0842               	movf	?_trapmf+2,w
  5527  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  5528  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  5529  04FC  00BA               	movwf	(_y+2)^(0+128)
  5530                           
  5531                           ;main.c: 288: if (y >= fop_rule3)
  5532  04FD  0838               	movf	_y^(0+128),w
  5533  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  5534  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0500  00B0               	movwf	___ftge@ff1
  5536  0501  1683               	bsf	3,5	;RP0=1, select bank1
  5537  0502  1303               	bcf	3,6	;RP1=0, select bank1
  5538  0503  0839               	movf	(_y+1)^(0+128),w
  5539  0504  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0505  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0506  00B1               	movwf	___ftge@ff1+1
  5542  0507  1683               	bsf	3,5	;RP0=1, select bank1
  5543  0508  1303               	bcf	3,6	;RP1=0, select bank1
  5544  0509  083A               	movf	(_y+2)^(0+128),w
  5545  050A  1283               	bcf	3,5	;RP0=0, select bank0
  5546  050B  1303               	bcf	3,6	;RP1=0, select bank0
  5547  050C  00B2               	movwf	___ftge@ff1+2
  5548  050D  1683               	bsf	3,5	;RP0=1, select bank1
  5549  050E  1303               	bcf	3,6	;RP1=0, select bank1
  5550  050F  082C               	movf	_fop_rule3^(0+128),w
  5551  0510  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0511  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0512  00B3               	movwf	___ftge@ff2
  5554  0513  1683               	bsf	3,5	;RP0=1, select bank1
  5555  0514  1303               	bcf	3,6	;RP1=0, select bank1
  5556  0515  082D               	movf	(_fop_rule3+1)^(0+128),w
  5557  0516  1283               	bcf	3,5	;RP0=0, select bank0
  5558  0517  1303               	bcf	3,6	;RP1=0, select bank0
  5559  0518  00B4               	movwf	___ftge@ff2+1
  5560  0519  1683               	bsf	3,5	;RP0=1, select bank1
  5561  051A  1303               	bcf	3,6	;RP1=0, select bank1
  5562  051B  082E               	movf	(_fop_rule3+2)^(0+128),w
  5563  051C  1283               	bcf	3,5	;RP0=0, select bank0
  5564  051D  1303               	bcf	3,6	;RP1=0, select bank0
  5565  051E  00B5               	movwf	___ftge@ff2+2
  5566  051F  160A  118A  26B9  120A  118A  	fcall	___ftge
  5567  0524  1C03               	btfss	3,0
  5568  0525  2D36               	goto	i1l2563
  5569                           
  5570                           ;main.c: 289: {
  5571                           ;main.c: 290: aumenta += fop_rule3;
  5572  0526  1683               	bsf	3,5	;RP0=1, select bank1
  5573  0527  1303               	bcf	3,6	;RP1=0, select bank1
  5574  0528  082C               	movf	_fop_rule3^(0+128),w
  5575  0529  1283               	bcf	3,5	;RP0=0, select bank0
  5576  052A  1303               	bcf	3,6	;RP1=0, select bank0
  5577  052B  00A3               	movwf	___ftadd@f1
  5578  052C  1683               	bsf	3,5	;RP0=1, select bank1
  5579  052D  1303               	bcf	3,6	;RP1=0, select bank1
  5580  052E  082D               	movf	(_fop_rule3+1)^(0+128),w
  5581  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5582  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5583  0531  00A4               	movwf	___ftadd@f1+1
  5584  0532  1683               	bsf	3,5	;RP0=1, select bank1
  5585  0533  1303               	bcf	3,6	;RP1=0, select bank1
  5586  0534  082E               	movf	(_fop_rule3+2)^(0+128),w
  5587  0535  2D45               	goto	L4
  5588  0536                     i1l2563:	
  5589                           ;main.c: 291: }
  5590                           
  5591                           
  5592                           ;main.c: 292: else
  5593                           ;main.c: 293: {
  5594                           ;main.c: 294: aumenta += y;
  5595  0536  1683               	bsf	3,5	;RP0=1, select bank1
  5596  0537  1303               	bcf	3,6	;RP1=0, select bank1
  5597  0538  0838               	movf	_y^(0+128),w
  5598  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5599  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5600  053B  00A3               	movwf	___ftadd@f1
  5601  053C  1683               	bsf	3,5	;RP0=1, select bank1
  5602  053D  1303               	bcf	3,6	;RP1=0, select bank1
  5603  053E  0839               	movf	(_y+1)^(0+128),w
  5604  053F  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0540  1303               	bcf	3,6	;RP1=0, select bank0
  5606  0541  00A4               	movwf	___ftadd@f1+1
  5607  0542  1683               	bsf	3,5	;RP0=1, select bank1
  5608  0543  1303               	bcf	3,6	;RP1=0, select bank1
  5609  0544  083A               	movf	(_y+2)^(0+128),w
  5610  0545                     L4:	
  5611  0545  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0546  1303               	bcf	3,6	;RP1=0, select bank0
  5613  0547  00A5               	movwf	___ftadd@f1+2
  5614  0548  0863               	movf	Fuzzy@aumenta,w
  5615  0549  00A6               	movwf	___ftadd@f2
  5616  054A  0864               	movf	Fuzzy@aumenta+1,w
  5617  054B  00A7               	movwf	___ftadd@f2+1
  5618  054C  0865               	movf	Fuzzy@aumenta+2,w
  5619  054D  00A8               	movwf	___ftadd@f2+2
  5620  054E  120A  158A  2332  120A  118A  	fcall	___ftadd
  5621  0553  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0554  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0555  0823               	movf	?___ftadd,w
  5624  0556  00E3               	movwf	Fuzzy@aumenta
  5625  0557  0824               	movf	?___ftadd+1,w
  5626  0558  00E4               	movwf	Fuzzy@aumenta+1
  5627  0559  0825               	movf	?___ftadd+2,w
  5628  055A  00E5               	movwf	Fuzzy@aumenta+2
  5629                           
  5630                           ;main.c: 295: }
  5631                           ;main.c: 297: x=x+1;
  5632  055B  3000               	movlw	0
  5633  055C  00A3               	movwf	___ftadd@f1
  5634  055D  3080               	movlw	128
  5635  055E  00A4               	movwf	___ftadd@f1+1
  5636  055F  303F               	movlw	63
  5637  0560  00A5               	movwf	___ftadd@f1+2
  5638  0561  1683               	bsf	3,5	;RP0=1, select bank1
  5639  0562  1303               	bcf	3,6	;RP1=0, select bank1
  5640  0563  0835               	movf	_x^(0+128),w
  5641  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0566  00A6               	movwf	___ftadd@f2
  5644  0567  1683               	bsf	3,5	;RP0=1, select bank1
  5645  0568  1303               	bcf	3,6	;RP1=0, select bank1
  5646  0569  0836               	movf	(_x+1)^(0+128),w
  5647  056A  1283               	bcf	3,5	;RP0=0, select bank0
  5648  056B  1303               	bcf	3,6	;RP1=0, select bank0
  5649  056C  00A7               	movwf	___ftadd@f2+1
  5650  056D  1683               	bsf	3,5	;RP0=1, select bank1
  5651  056E  1303               	bcf	3,6	;RP1=0, select bank1
  5652  056F  0837               	movf	(_x+2)^(0+128),w
  5653  0570  1283               	bcf	3,5	;RP0=0, select bank0
  5654  0571  1303               	bcf	3,6	;RP1=0, select bank0
  5655  0572  00A8               	movwf	___ftadd@f2+2
  5656  0573  120A  158A  2332  120A  118A  	fcall	___ftadd
  5657  0578  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0579  1303               	bcf	3,6	;RP1=0, select bank0
  5659  057A  0823               	movf	?___ftadd,w
  5660  057B  1683               	bsf	3,5	;RP0=1, select bank1
  5661  057C  1303               	bcf	3,6	;RP1=0, select bank1
  5662  057D  00B5               	movwf	_x^(0+128)
  5663  057E  1283               	bcf	3,5	;RP0=0, select bank0
  5664  057F  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0580  0824               	movf	?___ftadd+1,w
  5666  0581  1683               	bsf	3,5	;RP0=1, select bank1
  5667  0582  1303               	bcf	3,6	;RP1=0, select bank1
  5668  0583  00B6               	movwf	(_x+1)^(0+128)
  5669  0584  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0585  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0586  0825               	movf	?___ftadd+2,w
  5672  0587  1683               	bsf	3,5	;RP0=1, select bank1
  5673  0588  1303               	bcf	3,6	;RP1=0, select bank1
  5674  0589  00B7               	movwf	(_x+2)^(0+128)
  5675  058A  3001               	movlw	1
  5676  058B  1283               	bcf	3,5	;RP0=0, select bank0
  5677  058C  1303               	bcf	3,6	;RP1=0, select bank0
  5678  058D  07DB               	addwf	Fuzzy@a_242,f
  5679  058E  1803               	skipnc
  5680  058F  0ADC               	incf	Fuzzy@a_242+1,f
  5681  0590  3000               	movlw	0
  5682  0591  07DC               	addwf	Fuzzy@a_242+1,f
  5683  0592  085C               	movf	Fuzzy@a_242+1,w
  5684  0593  3A80               	xorlw	128
  5685  0594  00FF               	movwf	127
  5686  0595  3080               	movlw	128
  5687  0596  027F               	subwf	127,w
  5688  0597  1D03               	skipz
  5689  0598  2D9B               	goto	u296_25
  5690  0599  305B               	movlw	91
  5691  059A  025B               	subwf	Fuzzy@a_242,w
  5692  059B                     u296_25:	
  5693  059B  1C03               	skipc
  5694  059C  2CBC               	goto	i1l2559
  5695  059D                     i1l2569:	
  5696                           
  5697                           ;main.c: 298: }
  5698                           ;main.c: 300: }
  5699                           ;main.c: 303: if (deltaRpm < 25)
  5700  059D  1283               	bcf	3,5	;RP0=0, select bank0
  5701  059E  1303               	bcf	3,6	;RP1=0, select bank0
  5702  059F  0866               	movf	Fuzzy@deltaRpm,w
  5703  05A0  00B0               	movwf	___ftge@ff1
  5704  05A1  0867               	movf	Fuzzy@deltaRpm+1,w
  5705  05A2  00B1               	movwf	___ftge@ff1+1
  5706  05A3  0868               	movf	Fuzzy@deltaRpm+2,w
  5707  05A4  00B2               	movwf	___ftge@ff1+2
  5708  05A5  3000               	movlw	0
  5709  05A6  00B3               	movwf	___ftge@ff2
  5710  05A7  30C8               	movlw	200
  5711  05A8  00B4               	movwf	___ftge@ff2+1
  5712  05A9  3041               	movlw	65
  5713  05AA  00B5               	movwf	___ftge@ff2+2
  5714  05AB  160A  118A  26B9  120A  118A  	fcall	___ftge
  5715  05B0  1803               	btfsc	3,0
  5716  05B1  2DBA               	goto	i1l2573
  5717                           
  5718                           ;main.c: 304: {
  5719                           ;main.c: 305: tip = reduz;
  5720  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  5721  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  5722  05B4  0860               	movf	Fuzzy@reduz,w
  5723  05B5  00D4               	movwf	Fuzzy@tip
  5724  05B6  0861               	movf	Fuzzy@reduz+1,w
  5725  05B7  00D5               	movwf	Fuzzy@tip+1
  5726  05B8  0862               	movf	Fuzzy@reduz+2,w
  5727  05B9  2DF3               	goto	L6
  5728  05BA                     i1l2573:	
  5729                           ;main.c: 306: }else
  5730                           
  5731                           
  5732                           ;main.c: 307: if (deltaRpm >= 25 && deltaRpm < 75)
  5733  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  5734  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  5735  05BC  0866               	movf	Fuzzy@deltaRpm,w
  5736  05BD  00B0               	movwf	___ftge@ff1
  5737  05BE  0867               	movf	Fuzzy@deltaRpm+1,w
  5738  05BF  00B1               	movwf	___ftge@ff1+1
  5739  05C0  0868               	movf	Fuzzy@deltaRpm+2,w
  5740  05C1  00B2               	movwf	___ftge@ff1+2
  5741  05C2  3000               	movlw	0
  5742  05C3  00B3               	movwf	___ftge@ff2
  5743  05C4  30C8               	movlw	200
  5744  05C5  00B4               	movwf	___ftge@ff2+1
  5745  05C6  3041               	movlw	65
  5746  05C7  00B5               	movwf	___ftge@ff2+2
  5747  05C8  160A  118A  26B9  120A  118A  	fcall	___ftge
  5748  05CD  1C03               	btfss	3,0
  5749  05CE  2DEC               	goto	i1l2579
  5750  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  5751  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  5752  05D1  0866               	movf	Fuzzy@deltaRpm,w
  5753  05D2  00B0               	movwf	___ftge@ff1
  5754  05D3  0867               	movf	Fuzzy@deltaRpm+1,w
  5755  05D4  00B1               	movwf	___ftge@ff1+1
  5756  05D5  0868               	movf	Fuzzy@deltaRpm+2,w
  5757  05D6  00B2               	movwf	___ftge@ff1+2
  5758  05D7  3000               	movlw	0
  5759  05D8  00B3               	movwf	___ftge@ff2
  5760  05D9  3096               	movlw	150
  5761  05DA  00B4               	movwf	___ftge@ff2+1
  5762  05DB  3042               	movlw	66
  5763  05DC  00B5               	movwf	___ftge@ff2+2
  5764  05DD  160A  118A  26B9  120A  118A  	fcall	___ftge
  5765  05E2  1803               	btfsc	3,0
  5766  05E3  2DEC               	goto	i1l2579
  5767                           
  5768                           ;main.c: 308: {
  5769                           ;main.c: 309: tip = mantem;
  5770  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  5771  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  5772  05E6  085D               	movf	Fuzzy@mantem,w
  5773  05E7  00D4               	movwf	Fuzzy@tip
  5774  05E8  085E               	movf	Fuzzy@mantem+1,w
  5775  05E9  00D5               	movwf	Fuzzy@tip+1
  5776  05EA  085F               	movf	Fuzzy@mantem+2,w
  5777  05EB  2DF3               	goto	L6
  5778  05EC                     i1l2579:	
  5779                           ;main.c: 310: }else
  5780                           
  5781                           
  5782                           ;main.c: 311: {
  5783                           ;main.c: 312: tip = aumenta;
  5784  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  5785  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  5786  05EE  0863               	movf	Fuzzy@aumenta,w
  5787  05EF  00D4               	movwf	Fuzzy@tip
  5788  05F0  0864               	movf	Fuzzy@aumenta+1,w
  5789  05F1  00D5               	movwf	Fuzzy@tip+1
  5790  05F2  0865               	movf	Fuzzy@aumenta+2,w
  5791  05F3                     L6:	
  5792  05F3  00D6               	movwf	Fuzzy@tip+2
  5793                           
  5794                           ;main.c: 313: }
  5795                           ;main.c: 316: total_area = 90;
  5796  05F4  3000               	movlw	0
  5797  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  5798  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  5799  05F7  00B2               	movwf	_total_area^(0+128)
  5800  05F8  30B4               	movlw	180
  5801  05F9  00B3               	movwf	(_total_area+1)^(0+128)
  5802  05FA  3042               	movlw	66
  5803  05FB  00B4               	movwf	(_total_area+2)^(0+128)
  5804                           
  5805                           ;main.c: 317: sum = 0;
  5806  05FC  3000               	movlw	0
  5807  05FD  00AF               	movwf	_sum^(0+128)
  5808  05FE  3000               	movlw	0
  5809  05FF  00B0               	movwf	(_sum+1)^(0+128)
  5810  0600  3000               	movlw	0
  5811  0601  00B1               	movwf	(_sum+2)^(0+128)
  5812                           
  5813                           ;main.c: 318: sum = sum + tip;
  5814  0602  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0603  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0604  0854               	movf	Fuzzy@tip,w
  5817  0605  00A3               	movwf	___ftadd@f1
  5818  0606  0855               	movf	Fuzzy@tip+1,w
  5819  0607  00A4               	movwf	___ftadd@f1+1
  5820  0608  0856               	movf	Fuzzy@tip+2,w
  5821  0609  00A5               	movwf	___ftadd@f1+2
  5822  060A  1683               	bsf	3,5	;RP0=1, select bank1
  5823  060B  1303               	bcf	3,6	;RP1=0, select bank1
  5824  060C  082F               	movf	_sum^(0+128),w
  5825  060D  1283               	bcf	3,5	;RP0=0, select bank0
  5826  060E  1303               	bcf	3,6	;RP1=0, select bank0
  5827  060F  00A6               	movwf	___ftadd@f2
  5828  0610  1683               	bsf	3,5	;RP0=1, select bank1
  5829  0611  1303               	bcf	3,6	;RP1=0, select bank1
  5830  0612  0830               	movf	(_sum+1)^(0+128),w
  5831  0613  1283               	bcf	3,5	;RP0=0, select bank0
  5832  0614  1303               	bcf	3,6	;RP1=0, select bank0
  5833  0615  00A7               	movwf	___ftadd@f2+1
  5834  0616  1683               	bsf	3,5	;RP0=1, select bank1
  5835  0617  1303               	bcf	3,6	;RP1=0, select bank1
  5836  0618  0831               	movf	(_sum+2)^(0+128),w
  5837  0619  1283               	bcf	3,5	;RP0=0, select bank0
  5838  061A  1303               	bcf	3,6	;RP1=0, select bank0
  5839  061B  00A8               	movwf	___ftadd@f2+2
  5840  061C  120A  158A  2332  120A  118A  	fcall	___ftadd
  5841  0621  1283               	bcf	3,5	;RP0=0, select bank0
  5842  0622  1303               	bcf	3,6	;RP1=0, select bank0
  5843  0623  0823               	movf	?___ftadd,w
  5844  0624  1683               	bsf	3,5	;RP0=1, select bank1
  5845  0625  1303               	bcf	3,6	;RP1=0, select bank1
  5846  0626  00AF               	movwf	_sum^(0+128)
  5847  0627  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0628  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0629  0824               	movf	?___ftadd+1,w
  5850  062A  1683               	bsf	3,5	;RP0=1, select bank1
  5851  062B  1303               	bcf	3,6	;RP1=0, select bank1
  5852  062C  00B0               	movwf	(_sum+1)^(0+128)
  5853  062D  1283               	bcf	3,5	;RP0=0, select bank0
  5854  062E  1303               	bcf	3,6	;RP1=0, select bank0
  5855  062F  0825               	movf	?___ftadd+2,w
  5856  0630  1683               	bsf	3,5	;RP0=1, select bank1
  5857  0631  1303               	bcf	3,6	;RP1=0, select bank1
  5858  0632  00B1               	movwf	(_sum+2)^(0+128)
  5859                           
  5860                           ;main.c: 321: ativa_fan = sum/total_area;
  5861  0633  0832               	movf	_total_area^(0+128),w
  5862  0634  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0635  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0636  00B0               	movwf	___ftdiv@f2
  5865  0637  1683               	bsf	3,5	;RP0=1, select bank1
  5866  0638  1303               	bcf	3,6	;RP1=0, select bank1
  5867  0639  0833               	movf	(_total_area+1)^(0+128),w
  5868  063A  1283               	bcf	3,5	;RP0=0, select bank0
  5869  063B  1303               	bcf	3,6	;RP1=0, select bank0
  5870  063C  00B1               	movwf	___ftdiv@f2+1
  5871  063D  1683               	bsf	3,5	;RP0=1, select bank1
  5872  063E  1303               	bcf	3,6	;RP1=0, select bank1
  5873  063F  0834               	movf	(_total_area+2)^(0+128),w
  5874  0640  1283               	bcf	3,5	;RP0=0, select bank0
  5875  0641  1303               	bcf	3,6	;RP1=0, select bank0
  5876  0642  00B2               	movwf	___ftdiv@f2+2
  5877  0643  1683               	bsf	3,5	;RP0=1, select bank1
  5878  0644  1303               	bcf	3,6	;RP1=0, select bank1
  5879  0645  082F               	movf	_sum^(0+128),w
  5880  0646  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0647  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0648  00B3               	movwf	___ftdiv@f1
  5883  0649  1683               	bsf	3,5	;RP0=1, select bank1
  5884  064A  1303               	bcf	3,6	;RP1=0, select bank1
  5885  064B  0830               	movf	(_sum+1)^(0+128),w
  5886  064C  1283               	bcf	3,5	;RP0=0, select bank0
  5887  064D  1303               	bcf	3,6	;RP1=0, select bank0
  5888  064E  00B4               	movwf	___ftdiv@f1+1
  5889  064F  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0650  1303               	bcf	3,6	;RP1=0, select bank1
  5891  0651  0831               	movf	(_sum+2)^(0+128),w
  5892  0652  1283               	bcf	3,5	;RP0=0, select bank0
  5893  0653  1303               	bcf	3,6	;RP1=0, select bank0
  5894  0654  00B5               	movwf	___ftdiv@f1+2
  5895  0655  120A  118A  2730  120A  118A  	fcall	___ftdiv
  5896  065A  1283               	bcf	3,5	;RP0=0, select bank0
  5897  065B  1303               	bcf	3,6	;RP1=0, select bank0
  5898  065C  0830               	movf	?___ftdiv,w
  5899  065D  1683               	bsf	3,5	;RP0=1, select bank1
  5900  065E  1303               	bcf	3,6	;RP1=0, select bank1
  5901  065F  00A0               	movwf	_ativa_fan^(0+128)
  5902  0660  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0661  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0662  0831               	movf	?___ftdiv+1,w
  5905  0663  1683               	bsf	3,5	;RP0=1, select bank1
  5906  0664  1303               	bcf	3,6	;RP1=0, select bank1
  5907  0665  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5908  0666  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0667  1303               	bcf	3,6	;RP1=0, select bank0
  5910  0668  0832               	movf	?___ftdiv+2,w
  5911  0669  1683               	bsf	3,5	;RP0=1, select bank1
  5912  066A  1303               	bcf	3,6	;RP1=0, select bank1
  5913  066B  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5914                           
  5915                           ;main.c: 324: ativa_fan = ativa_fan*100;
  5916  066C  3000               	movlw	0
  5917  066D  00F8               	movwf	___ftmul@f1
  5918  066E  30C8               	movlw	200
  5919  066F  00F9               	movwf	___ftmul@f1+1
  5920  0670  3042               	movlw	66
  5921  0671  00FA               	movwf	___ftmul@f1+2
  5922  0672  0820               	movf	_ativa_fan^(0+128),w
  5923  0673  00FB               	movwf	___ftmul@f2
  5924  0674  0821               	movf	(_ativa_fan+1)^(0+128),w
  5925  0675  00FC               	movwf	___ftmul@f2+1
  5926  0676  0822               	movf	(_ativa_fan+2)^(0+128),w
  5927  0677  00FD               	movwf	___ftmul@f2+2
  5928  0678  120A  158A  218A  120A  118A  	fcall	___ftmul
  5929  067D  0878               	movf	?___ftmul,w
  5930  067E  1683               	bsf	3,5	;RP0=1, select bank1
  5931  067F  1303               	bcf	3,6	;RP1=0, select bank1
  5932  0680  00A0               	movwf	_ativa_fan^(0+128)
  5933  0681  0879               	movf	?___ftmul+1,w
  5934  0682  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5935  0683  087A               	movf	?___ftmul+2,w
  5936  0684  00A2               	movwf	(_ativa_fan+2)^(0+128)
  5937                           
  5938                           ;main.c: 328: if (freio = 1)
  5939  0685  3001               	movlw	1
  5940  0686  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0687  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0688  00D2               	movwf	Fuzzy@freio
  5943  0689  3000               	movlw	0
  5944  068A  00D3               	movwf	Fuzzy@freio+1
  5945                           
  5946                           ;main.c: 329: {
  5947                           ;main.c: 330: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  5948  068B  3000               	movlw	0
  5949  068C  00B0               	movwf	___ftge@ff1
  5950  068D  3000               	movlw	0
  5951  068E  00B1               	movwf	___ftge@ff1+1
  5952  068F  3000               	movlw	0
  5953  0690  00B2               	movwf	___ftge@ff1+2
  5954  0691  086D               	movf	_tf,w
  5955  0692  00A3               	movwf	___ftadd@f1
  5956  0693  086E               	movf	_tf+1,w
  5957  0694  00A4               	movwf	___ftadd@f1+1
  5958  0695  086F               	movf	_tf+2,w
  5959  0696  00A5               	movwf	___ftadd@f1+2
  5960  0697  1683               	bsf	3,5	;RP0=1, select bank1
  5961  0698  1303               	bcf	3,6	;RP1=0, select bank1
  5962  0699  0840               	movf	(_deltaV+1)^(0+128),w
  5963  069A  01F9               	clrf	___lwtoft@c+1
  5964  069B  07F9               	addwf	___lwtoft@c+1,f
  5965  069C  083F               	movf	_deltaV^(0+128),w
  5966  069D  01F8               	clrf	___lwtoft@c
  5967  069E  07F8               	addwf	___lwtoft@c,f
  5968  069F  160A  118A  2498  120A  118A  	fcall	___lwtoft
  5969  06A4  0878               	movf	?___lwtoft,w
  5970  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  5971  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  5972  06A7  00A6               	movwf	___ftadd@f2
  5973  06A8  0879               	movf	?___lwtoft+1,w
  5974  06A9  00A7               	movwf	___ftadd@f2+1
  5975  06AA  087A               	movf	?___lwtoft+2,w
  5976  06AB  00A8               	movwf	___ftadd@f2+2
  5977  06AC  120A  158A  2332  120A  118A  	fcall	___ftadd
  5978  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  5979  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  5980  06B3  0823               	movf	?___ftadd,w
  5981  06B4  00B3               	movwf	___ftge@ff2
  5982  06B5  0824               	movf	?___ftadd+1,w
  5983  06B6  00B4               	movwf	___ftge@ff2+1
  5984  06B7  0825               	movf	?___ftadd+2,w
  5985  06B8  00B5               	movwf	___ftge@ff2+2
  5986  06B9  160A  118A  26B9  120A  118A  	fcall	___ftge
  5987  06BE  1803               	btfsc	3,0
  5988  06BF  0008               	return
  5989  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  5990  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  5991  06C2  086D               	movf	_tf,w
  5992  06C3  00A3               	movwf	___ftadd@f1
  5993  06C4  086E               	movf	_tf+1,w
  5994  06C5  00A4               	movwf	___ftadd@f1+1
  5995  06C6  086F               	movf	_tf+2,w
  5996  06C7  00A5               	movwf	___ftadd@f1+2
  5997  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  5998  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  5999  06CA  0840               	movf	(_deltaV+1)^(0+128),w
  6000  06CB  01F9               	clrf	___lwtoft@c+1
  6001  06CC  07F9               	addwf	___lwtoft@c+1,f
  6002  06CD  083F               	movf	_deltaV^(0+128),w
  6003  06CE  01F8               	clrf	___lwtoft@c
  6004  06CF  07F8               	addwf	___lwtoft@c,f
  6005  06D0  160A  118A  2498  120A  118A  	fcall	___lwtoft
  6006  06D5  0878               	movf	?___lwtoft,w
  6007  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  6008  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  6009  06D8  00A6               	movwf	___ftadd@f2
  6010  06D9  0879               	movf	?___lwtoft+1,w
  6011  06DA  00A7               	movwf	___ftadd@f2+1
  6012  06DB  087A               	movf	?___lwtoft+2,w
  6013  06DC  00A8               	movwf	___ftadd@f2+2
  6014  06DD  120A  158A  2332  120A  118A  	fcall	___ftadd
  6015  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  6016  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  6017  06E4  0823               	movf	?___ftadd,w
  6018  06E5  00B0               	movwf	___ftge@ff1
  6019  06E6  0824               	movf	?___ftadd+1,w
  6020  06E7  00B1               	movwf	___ftge@ff1+1
  6021  06E8  0825               	movf	?___ftadd+2,w
  6022  06E9  00B2               	movwf	___ftge@ff1+2
  6023  06EA  3000               	movlw	0
  6024  06EB  00B3               	movwf	___ftge@ff2
  6025  06EC  307F               	movlw	127
  6026  06ED  00B4               	movwf	___ftge@ff2+1
  6027  06EE  3044               	movlw	68
  6028  06EF  00B5               	movwf	___ftge@ff2+2
  6029  06F0  160A  118A  26B9  120A  118A  	fcall	___ftge
  6030  06F5  1803               	btfsc	3,0
  6031  06F6  0008               	return
  6032                           
  6033                           ;main.c: 331: {
  6034                           ;main.c: 332: PWM_DutyCycle2(tf + deltaV);
  6035  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  6036  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  6037  06F9  0840               	movf	(_deltaV+1)^(0+128),w
  6038  06FA  01F9               	clrf	___lwtoft@c+1
  6039  06FB  07F9               	addwf	___lwtoft@c+1,f
  6040  06FC  083F               	movf	_deltaV^(0+128),w
  6041  06FD  01F8               	clrf	___lwtoft@c
  6042  06FE  07F8               	addwf	___lwtoft@c,f
  6043  06FF  160A  118A  2498  120A  118A  	fcall	___lwtoft
  6044  0704  0878               	movf	?___lwtoft,w
  6045  0705  1283               	bcf	3,5	;RP0=0, select bank0
  6046  0706  1303               	bcf	3,6	;RP1=0, select bank0
  6047  0707  00A6               	movwf	___ftadd@f2
  6048  0708  0879               	movf	?___lwtoft+1,w
  6049  0709  00A7               	movwf	___ftadd@f2+1
  6050  070A  087A               	movf	?___lwtoft+2,w
  6051  070B  00A8               	movwf	___ftadd@f2+2
  6052  070C  086D               	movf	_tf,w
  6053  070D  00A3               	movwf	___ftadd@f1
  6054  070E  086E               	movf	_tf+1,w
  6055  070F  00A4               	movwf	___ftadd@f1+1
  6056  0710  086F               	movf	_tf+2,w
  6057  0711  00A5               	movwf	___ftadd@f1+2
  6058  0712  120A  158A  2332  120A  118A  	fcall	___ftadd
  6059  0717  1283               	bcf	3,5	;RP0=0, select bank0
  6060  0718  1303               	bcf	3,6	;RP1=0, select bank0
  6061  0719  0823               	movf	?___ftadd,w
  6062  071A  00B0               	movwf	___fttol@f1
  6063  071B  0824               	movf	?___ftadd+1,w
  6064  071C  00B1               	movwf	___fttol@f1+1
  6065  071D  0825               	movf	?___ftadd+2,w
  6066  071E  00B2               	movwf	___fttol@f1+2
  6067  071F  120A  158A  206D  120A  118A  	fcall	___fttol
  6068  0724  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0725  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0726  0831               	movf	?___fttol+1,w
  6071  0727  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  6072  0728  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  6073  0729  0830               	movf	?___fttol,w
  6074  072A  01BE               	clrf	i1PWM_DutyCycle2@valor
  6075  072B  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  6076  072C  160A  118A  24DA   	fcall	i1_PWM_DutyCycle2
  6077                           
  6078                           ;main.c: 333: }
  6079                           ;main.c: 334: }else
  6080  072F  0008               	return
  6081  0730                     __end_of_Fuzzy:	
  6082                           ;main.c: 337: {
  6083                           ;main.c: 338: PWM_DutyCycle2(tf - deltaV);
  6084                           
  6085                           ;main.c: 335: {
  6086                           ;main.c: 336: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  6087                           
  6088                           
  6089                           	psect	text24
  6090  14DA                     __ptext24:	
  6091 ;; *************** function i1_PWM_DutyCycle2 *****************
  6092 ;; Defined at:
  6093 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  valor           2   30[BANK0 ] int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;		None               void
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6107 ;;      Params:         0       2       0       0       0
  6108 ;;      Locals:         0       0       0       0       0
  6109 ;;      Temps:          2       0       0       0       0
  6110 ;;      Totals:         2       2       0       0       0
  6111 ;;Total ram usage:        4 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_Fuzzy
  6117 ;;		_ISR
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function i1_PWM_DutyCycle2
  6123  14DA                     i1_PWM_DutyCycle2:	
  6124                           
  6125                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6129  14DA  1283               	bcf	3,5	;RP0=0, select bank0
  6130  14DB  1303               	bcf	3,6	;RP1=0, select bank0
  6131  14DC  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  6132  14DD  00FD               	movwf	??i1_PWM_DutyCycle2+1
  6133  14DE  083E               	movf	i1PWM_DutyCycle2@valor,w
  6134  14DF  00FC               	movwf	??i1_PWM_DutyCycle2
  6135  14E0  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6136  14E1  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6137  14E2  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6138  14E3  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6139  14E4  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6140  14E5  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6141  14E6  087C               	movf	??i1_PWM_DutyCycle2,w
  6142  14E7  009B               	movwf	27	;volatile
  6143                           
  6144                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6145  14E8  083E               	movf	i1PWM_DutyCycle2@valor,w
  6146  14E9  00FC               	movwf	??i1_PWM_DutyCycle2
  6147  14EA  3003               	movlw	3
  6148  14EB                     u278_25:	
  6149  14EB  1003               	clrc
  6150  14EC  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  6151  14ED  3EFF               	addlw	-1
  6152  14EE  1D03               	skipz
  6153  14EF  2CEB               	goto	u278_25
  6154  14F0  1003               	clrc
  6155  14F1  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  6156  14F2  380C               	iorlw	12
  6157  14F3  009D               	movwf	29	;volatile
  6158  14F4  0008               	return
  6159  14F5                     __end_ofi1_PWM_DutyCycle2:	
  6160                           
  6161                           	psect	text25
  6162  0C3B                     __ptext25:	
  6163 ;; *************** function _trimf *****************
  6164 ;; Defined at:
  6165 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  x               3   32[BANK0 ] float 
  6168 ;;  a               3   35[BANK0 ] float 
  6169 ;;  b               3   38[BANK0 ] float 
  6170 ;;  c               3   41[BANK0 ] float 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  ua              3   44[BANK0 ] float 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  3   32[BANK0 ] float 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0      12       0       0       0
  6183 ;;      Locals:         0       3       0       0       0
  6184 ;;      Temps:          0       0       0       0       0
  6185 ;;      Totals:         0      15       0       0       0
  6186 ;;Total ram usage:       15 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    2
  6189 ;; This function calls:
  6190 ;;		___ftadd
  6191 ;;		___ftdiv
  6192 ;;		___ftge
  6193 ;;		___ftneg
  6194 ;; This function is called by:
  6195 ;;		_Fuzzy
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           
  6200                           ;psect for function _trimf
  6201  0C3B                     _trimf:	
  6202                           
  6203                           ;main.c: 65: float ua = 0;
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  6207  0C3B  3000               	movlw	0
  6208  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  6209  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  6210  0C3E  00CC               	movwf	trimf@ua
  6211  0C3F  3000               	movlw	0
  6212  0C40  00CD               	movwf	trimf@ua+1
  6213  0C41  3000               	movlw	0
  6214  0C42  00CE               	movwf	trimf@ua+2
  6215                           
  6216                           ;main.c: 67: if (x <= a)
  6217  0C43  0843               	movf	trimf@a,w
  6218  0C44  00B0               	movwf	___ftge@ff1
  6219  0C45  0844               	movf	trimf@a+1,w
  6220  0C46  00B1               	movwf	___ftge@ff1+1
  6221  0C47  0845               	movf	trimf@a+2,w
  6222  0C48  00B2               	movwf	___ftge@ff1+2
  6223  0C49  0840               	movf	trimf@x,w
  6224  0C4A  00B3               	movwf	___ftge@ff2
  6225  0C4B  0841               	movf	trimf@x+1,w
  6226  0C4C  00B4               	movwf	___ftge@ff2+1
  6227  0C4D  0842               	movf	trimf@x+2,w
  6228  0C4E  00B5               	movwf	___ftge@ff2+2
  6229  0C4F  160A  118A  26B9  120A  158A  	fcall	___ftge
  6230  0C54  1803               	btfsc	3,0
  6231  0C55  2D4E               	goto	L11
  6232                           
  6233                           ;main.c: 69: else if ((a < x) && (x <= b))
  6234                           
  6235                           ;main.c: 68: ua = 0;
  6236  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0C58  0843               	movf	trimf@a,w
  6239  0C59  00B0               	movwf	___ftge@ff1
  6240  0C5A  0844               	movf	trimf@a+1,w
  6241  0C5B  00B1               	movwf	___ftge@ff1+1
  6242  0C5C  0845               	movf	trimf@a+2,w
  6243  0C5D  00B2               	movwf	___ftge@ff1+2
  6244  0C5E  0840               	movf	trimf@x,w
  6245  0C5F  00B3               	movwf	___ftge@ff2
  6246  0C60  0841               	movf	trimf@x+1,w
  6247  0C61  00B4               	movwf	___ftge@ff2+1
  6248  0C62  0842               	movf	trimf@x+2,w
  6249  0C63  00B5               	movwf	___ftge@ff2+2
  6250  0C64  160A  118A  26B9  120A  158A  	fcall	___ftge
  6251  0C69  1803               	btfsc	3,0
  6252  0C6A  2CB4               	goto	i1l2195
  6253  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6254  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6255  0C6D  0846               	movf	trimf@b,w
  6256  0C6E  00B0               	movwf	___ftge@ff1
  6257  0C6F  0847               	movf	trimf@b+1,w
  6258  0C70  00B1               	movwf	___ftge@ff1+1
  6259  0C71  0848               	movf	trimf@b+2,w
  6260  0C72  00B2               	movwf	___ftge@ff1+2
  6261  0C73  0840               	movf	trimf@x,w
  6262  0C74  00B3               	movwf	___ftge@ff2
  6263  0C75  0841               	movf	trimf@x+1,w
  6264  0C76  00B4               	movwf	___ftge@ff2+1
  6265  0C77  0842               	movf	trimf@x+2,w
  6266  0C78  00B5               	movwf	___ftge@ff2+2
  6267  0C79  160A  118A  26B9  120A  158A  	fcall	___ftge
  6268  0C7E  1C03               	btfss	3,0
  6269  0C7F  2CB4               	goto	i1l2195
  6270                           
  6271                           ;main.c: 70: ua = ((x - a) / (b - a));
  6272  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0C82  0846               	movf	trimf@b,w
  6275  0C83  00A3               	movwf	___ftadd@f1
  6276  0C84  0847               	movf	trimf@b+1,w
  6277  0C85  00A4               	movwf	___ftadd@f1+1
  6278  0C86  0848               	movf	trimf@b+2,w
  6279  0C87  00A5               	movwf	___ftadd@f1+2
  6280  0C88  0843               	movf	trimf@a,w
  6281  0C89  00A0               	movwf	___ftneg@f1
  6282  0C8A  0844               	movf	trimf@a+1,w
  6283  0C8B  00A1               	movwf	___ftneg@f1+1
  6284  0C8C  0845               	movf	trimf@a+2,w
  6285  0C8D  00A2               	movwf	___ftneg@f1+2
  6286  0C8E  160A  118A  2460  120A  158A  	fcall	___ftneg
  6287  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  6288  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  6289  0C95  0820               	movf	?___ftneg,w
  6290  0C96  00A6               	movwf	___ftadd@f2
  6291  0C97  0821               	movf	?___ftneg+1,w
  6292  0C98  00A7               	movwf	___ftadd@f2+1
  6293  0C99  0822               	movf	?___ftneg+2,w
  6294  0C9A  00A8               	movwf	___ftadd@f2+2
  6295  0C9B  120A  158A  2332  120A  158A  	fcall	___ftadd
  6296  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0CA2  0823               	movf	?___ftadd,w
  6299  0CA3  00B0               	movwf	___ftdiv@f2
  6300  0CA4  0824               	movf	?___ftadd+1,w
  6301  0CA5  00B1               	movwf	___ftdiv@f2+1
  6302  0CA6  0825               	movf	?___ftadd+2,w
  6303  0CA7  00B2               	movwf	___ftdiv@f2+2
  6304  0CA8  0840               	movf	trimf@x,w
  6305  0CA9  00A3               	movwf	___ftadd@f1
  6306  0CAA  0841               	movf	trimf@x+1,w
  6307  0CAB  00A4               	movwf	___ftadd@f1+1
  6308  0CAC  0842               	movf	trimf@x+2,w
  6309  0CAD  00A5               	movwf	___ftadd@f1+2
  6310  0CAE  0843               	movf	trimf@a,w
  6311  0CAF  00A0               	movwf	___ftneg@f1
  6312  0CB0  0844               	movf	trimf@a+1,w
  6313  0CB1  00A1               	movwf	___ftneg@f1+1
  6314  0CB2  0845               	movf	trimf@a+2,w
  6315  0CB3  2D11               	goto	L12
  6316  0CB4                     i1l2195:	
  6317                           
  6318                           ;main.c: 71: else if ((b < x) && (x <= c))
  6319  0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  6321  0CB6  0846               	movf	trimf@b,w
  6322  0CB7  00B0               	movwf	___ftge@ff1
  6323  0CB8  0847               	movf	trimf@b+1,w
  6324  0CB9  00B1               	movwf	___ftge@ff1+1
  6325  0CBA  0848               	movf	trimf@b+2,w
  6326  0CBB  00B2               	movwf	___ftge@ff1+2
  6327  0CBC  0840               	movf	trimf@x,w
  6328  0CBD  00B3               	movwf	___ftge@ff2
  6329  0CBE  0841               	movf	trimf@x+1,w
  6330  0CBF  00B4               	movwf	___ftge@ff2+1
  6331  0CC0  0842               	movf	trimf@x+2,w
  6332  0CC1  00B5               	movwf	___ftge@ff2+2
  6333  0CC2  160A  118A  26B9  120A  158A  	fcall	___ftge
  6334  0CC7  1803               	btfsc	3,0
  6335  0CC8  2D39               	goto	i1l2201
  6336  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0CCB  0849               	movf	trimf@c,w
  6339  0CCC  00B0               	movwf	___ftge@ff1
  6340  0CCD  084A               	movf	trimf@c+1,w
  6341  0CCE  00B1               	movwf	___ftge@ff1+1
  6342  0CCF  084B               	movf	trimf@c+2,w
  6343  0CD0  00B2               	movwf	___ftge@ff1+2
  6344  0CD1  0840               	movf	trimf@x,w
  6345  0CD2  00B3               	movwf	___ftge@ff2
  6346  0CD3  0841               	movf	trimf@x+1,w
  6347  0CD4  00B4               	movwf	___ftge@ff2+1
  6348  0CD5  0842               	movf	trimf@x+2,w
  6349  0CD6  00B5               	movwf	___ftge@ff2+2
  6350  0CD7  160A  118A  26B9  120A  158A  	fcall	___ftge
  6351  0CDC  1C03               	btfss	3,0
  6352  0CDD  2D39               	goto	i1l2201
  6353                           
  6354                           ;main.c: 72: ua = ((x - c) / (b - c));
  6355  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  6357  0CE0  0846               	movf	trimf@b,w
  6358  0CE1  00A3               	movwf	___ftadd@f1
  6359  0CE2  0847               	movf	trimf@b+1,w
  6360  0CE3  00A4               	movwf	___ftadd@f1+1
  6361  0CE4  0848               	movf	trimf@b+2,w
  6362  0CE5  00A5               	movwf	___ftadd@f1+2
  6363  0CE6  0849               	movf	trimf@c,w
  6364  0CE7  00A0               	movwf	___ftneg@f1
  6365  0CE8  084A               	movf	trimf@c+1,w
  6366  0CE9  00A1               	movwf	___ftneg@f1+1
  6367  0CEA  084B               	movf	trimf@c+2,w
  6368  0CEB  00A2               	movwf	___ftneg@f1+2
  6369  0CEC  160A  118A  2460  120A  158A  	fcall	___ftneg
  6370  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0CF3  0820               	movf	?___ftneg,w
  6373  0CF4  00A6               	movwf	___ftadd@f2
  6374  0CF5  0821               	movf	?___ftneg+1,w
  6375  0CF6  00A7               	movwf	___ftadd@f2+1
  6376  0CF7  0822               	movf	?___ftneg+2,w
  6377  0CF8  00A8               	movwf	___ftadd@f2+2
  6378  0CF9  120A  158A  2332  120A  158A  	fcall	___ftadd
  6379  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0D00  0823               	movf	?___ftadd,w
  6382  0D01  00B0               	movwf	___ftdiv@f2
  6383  0D02  0824               	movf	?___ftadd+1,w
  6384  0D03  00B1               	movwf	___ftdiv@f2+1
  6385  0D04  0825               	movf	?___ftadd+2,w
  6386  0D05  00B2               	movwf	___ftdiv@f2+2
  6387  0D06  0840               	movf	trimf@x,w
  6388  0D07  00A3               	movwf	___ftadd@f1
  6389  0D08  0841               	movf	trimf@x+1,w
  6390  0D09  00A4               	movwf	___ftadd@f1+1
  6391  0D0A  0842               	movf	trimf@x+2,w
  6392  0D0B  00A5               	movwf	___ftadd@f1+2
  6393  0D0C  0849               	movf	trimf@c,w
  6394  0D0D  00A0               	movwf	___ftneg@f1
  6395  0D0E  084A               	movf	trimf@c+1,w
  6396  0D0F  00A1               	movwf	___ftneg@f1+1
  6397  0D10  084B               	movf	trimf@c+2,w
  6398  0D11                     L12:	
  6399  0D11  00A2               	movwf	___ftneg@f1+2
  6400  0D12  160A  118A  2460  120A  158A  	fcall	___ftneg
  6401  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0D19  0820               	movf	?___ftneg,w
  6404  0D1A  00A6               	movwf	___ftadd@f2
  6405  0D1B  0821               	movf	?___ftneg+1,w
  6406  0D1C  00A7               	movwf	___ftadd@f2+1
  6407  0D1D  0822               	movf	?___ftneg+2,w
  6408  0D1E  00A8               	movwf	___ftadd@f2+2
  6409  0D1F  120A  158A  2332  120A  158A  	fcall	___ftadd
  6410  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0D26  0823               	movf	?___ftadd,w
  6413  0D27  00B3               	movwf	___ftdiv@f1
  6414  0D28  0824               	movf	?___ftadd+1,w
  6415  0D29  00B4               	movwf	___ftdiv@f1+1
  6416  0D2A  0825               	movf	?___ftadd+2,w
  6417  0D2B  00B5               	movwf	___ftdiv@f1+2
  6418  0D2C  120A  118A  2730  120A  158A  	fcall	___ftdiv
  6419  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0D33  0830               	movf	?___ftdiv,w
  6422  0D34  00CC               	movwf	trimf@ua
  6423  0D35  0831               	movf	?___ftdiv+1,w
  6424  0D36  00CD               	movwf	trimf@ua+1
  6425  0D37  0832               	movf	?___ftdiv+2,w
  6426  0D38  2D55               	goto	L9
  6427  0D39                     i1l2201:	
  6428                           
  6429                           ;main.c: 73: else if (x > c)
  6430  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  6431  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  6432  0D3B  0849               	movf	trimf@c,w
  6433  0D3C  00B0               	movwf	___ftge@ff1
  6434  0D3D  084A               	movf	trimf@c+1,w
  6435  0D3E  00B1               	movwf	___ftge@ff1+1
  6436  0D3F  084B               	movf	trimf@c+2,w
  6437  0D40  00B2               	movwf	___ftge@ff1+2
  6438  0D41  0840               	movf	trimf@x,w
  6439  0D42  00B3               	movwf	___ftge@ff2
  6440  0D43  0841               	movf	trimf@x+1,w
  6441  0D44  00B4               	movwf	___ftge@ff2+1
  6442  0D45  0842               	movf	trimf@x+2,w
  6443  0D46  00B5               	movwf	___ftge@ff2+2
  6444  0D47  160A  118A  26B9  120A  158A  	fcall	___ftge
  6445  0D4C  1803               	btfsc	3,0
  6446  0D4D  2D56               	goto	i1l110
  6447  0D4E                     L11:	
  6448                           
  6449                           ;main.c: 74: ua = 0;
  6450  0D4E  3000               	movlw	0
  6451  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0D51  00CC               	movwf	trimf@ua
  6454  0D52  3000               	movlw	0
  6455  0D53  00CD               	movwf	trimf@ua+1
  6456  0D54  3000               	movlw	0
  6457  0D55                     L9:	
  6458  0D55  00CE               	movwf	trimf@ua+2
  6459  0D56                     i1l110:	
  6460                           
  6461                           ;main.c: 76: return(ua);
  6462  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  6464  0D58  084C               	movf	trimf@ua,w
  6465  0D59  00C0               	movwf	?_trimf
  6466  0D5A  084D               	movf	trimf@ua+1,w
  6467  0D5B  00C1               	movwf	?_trimf+1
  6468  0D5C  084E               	movf	trimf@ua+2,w
  6469  0D5D  00C2               	movwf	?_trimf+2
  6470  0D5E  0008               	return
  6471  0D5F                     __end_of_trimf:	
  6472                           
  6473                           	psect	text26
  6474  0EAA                     __ptext26:	
  6475 ;; *************** function _trapmf *****************
  6476 ;; Defined at:
  6477 ;;		line 82 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  x               3   32[BANK0 ] float 
  6480 ;;  a               3   35[BANK0 ] float 
  6481 ;;  b               3   38[BANK0 ] float 
  6482 ;;  c               3   41[BANK0 ] float 
  6483 ;;  d               3   44[BANK0 ] float 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  ua              3   47[BANK0 ] float 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  3   32[BANK0 ] float 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6495 ;;      Params:         0      15       0       0       0
  6496 ;;      Locals:         0       3       0       0       0
  6497 ;;      Temps:          0       0       0       0       0
  6498 ;;      Totals:         0      18       0       0       0
  6499 ;;Total ram usage:       18 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    2
  6502 ;; This function calls:
  6503 ;;		___ftadd
  6504 ;;		___ftdiv
  6505 ;;		___ftge
  6506 ;;		___ftneg
  6507 ;; This function is called by:
  6508 ;;		_Fuzzy
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _trapmf
  6514  0EAA                     _trapmf:	
  6515                           
  6516                           ;main.c: 84: float ua = 0;
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  6520  0EAA  3000               	movlw	0
  6521  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  6522  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  6523  0EAD  00CF               	movwf	trapmf@ua
  6524  0EAE  3000               	movlw	0
  6525  0EAF  00D0               	movwf	trapmf@ua+1
  6526  0EB0  3000               	movlw	0
  6527  0EB1  00D1               	movwf	trapmf@ua+2
  6528                           
  6529                           ;main.c: 86: if (x <= a)
  6530  0EB2  0843               	movf	trapmf@a,w
  6531  0EB3  00B0               	movwf	___ftge@ff1
  6532  0EB4  0844               	movf	trapmf@a+1,w
  6533  0EB5  00B1               	movwf	___ftge@ff1+1
  6534  0EB6  0845               	movf	trapmf@a+2,w
  6535  0EB7  00B2               	movwf	___ftge@ff1+2
  6536  0EB8  0840               	movf	trapmf@x,w
  6537  0EB9  00B3               	movwf	___ftge@ff2
  6538  0EBA  0841               	movf	trapmf@x+1,w
  6539  0EBB  00B4               	movwf	___ftge@ff2+1
  6540  0EBC  0842               	movf	trapmf@x+2,w
  6541  0EBD  00B5               	movwf	___ftge@ff2+2
  6542  0EBE  160A  118A  26B9  120A  158A  	fcall	___ftge
  6543  0EC3  1803               	btfsc	3,0
  6544  0EC4  2FEF               	goto	L17
  6545                           
  6546                           ;main.c: 88: else if ((a < x) && (x <= b))
  6547                           
  6548                           ;main.c: 87: ua = 0;
  6549  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  6550  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  6551  0EC7  0843               	movf	trapmf@a,w
  6552  0EC8  00B0               	movwf	___ftge@ff1
  6553  0EC9  0844               	movf	trapmf@a+1,w
  6554  0ECA  00B1               	movwf	___ftge@ff1+1
  6555  0ECB  0845               	movf	trapmf@a+2,w
  6556  0ECC  00B2               	movwf	___ftge@ff1+2
  6557  0ECD  0840               	movf	trapmf@x,w
  6558  0ECE  00B3               	movwf	___ftge@ff2
  6559  0ECF  0841               	movf	trapmf@x+1,w
  6560  0ED0  00B4               	movwf	___ftge@ff2+1
  6561  0ED1  0842               	movf	trapmf@x+2,w
  6562  0ED2  00B5               	movwf	___ftge@ff2+2
  6563  0ED3  160A  118A  26B9  120A  158A  	fcall	___ftge
  6564  0ED8  1803               	btfsc	3,0
  6565  0ED9  2F23               	goto	i1l2219
  6566  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  6567  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  6568  0EDC  0846               	movf	trapmf@b,w
  6569  0EDD  00B0               	movwf	___ftge@ff1
  6570  0EDE  0847               	movf	trapmf@b+1,w
  6571  0EDF  00B1               	movwf	___ftge@ff1+1
  6572  0EE0  0848               	movf	trapmf@b+2,w
  6573  0EE1  00B2               	movwf	___ftge@ff1+2
  6574  0EE2  0840               	movf	trapmf@x,w
  6575  0EE3  00B3               	movwf	___ftge@ff2
  6576  0EE4  0841               	movf	trapmf@x+1,w
  6577  0EE5  00B4               	movwf	___ftge@ff2+1
  6578  0EE6  0842               	movf	trapmf@x+2,w
  6579  0EE7  00B5               	movwf	___ftge@ff2+2
  6580  0EE8  160A  118A  26B9  120A  158A  	fcall	___ftge
  6581  0EED  1C03               	btfss	3,0
  6582  0EEE  2F23               	goto	i1l2219
  6583                           
  6584                           ;main.c: 89: ua = ((x - a) / (b - a));
  6585  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  6586  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6587  0EF1  0846               	movf	trapmf@b,w
  6588  0EF2  00A3               	movwf	___ftadd@f1
  6589  0EF3  0847               	movf	trapmf@b+1,w
  6590  0EF4  00A4               	movwf	___ftadd@f1+1
  6591  0EF5  0848               	movf	trapmf@b+2,w
  6592  0EF6  00A5               	movwf	___ftadd@f1+2
  6593  0EF7  0843               	movf	trapmf@a,w
  6594  0EF8  00A0               	movwf	___ftneg@f1
  6595  0EF9  0844               	movf	trapmf@a+1,w
  6596  0EFA  00A1               	movwf	___ftneg@f1+1
  6597  0EFB  0845               	movf	trapmf@a+2,w
  6598  0EFC  00A2               	movwf	___ftneg@f1+2
  6599  0EFD  160A  118A  2460  120A  158A  	fcall	___ftneg
  6600  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  6602  0F04  0820               	movf	?___ftneg,w
  6603  0F05  00A6               	movwf	___ftadd@f2
  6604  0F06  0821               	movf	?___ftneg+1,w
  6605  0F07  00A7               	movwf	___ftadd@f2+1
  6606  0F08  0822               	movf	?___ftneg+2,w
  6607  0F09  00A8               	movwf	___ftadd@f2+2
  6608  0F0A  120A  158A  2332  120A  158A  	fcall	___ftadd
  6609  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0F11  0823               	movf	?___ftadd,w
  6612  0F12  00B0               	movwf	___ftdiv@f2
  6613  0F13  0824               	movf	?___ftadd+1,w
  6614  0F14  00B1               	movwf	___ftdiv@f2+1
  6615  0F15  0825               	movf	?___ftadd+2,w
  6616  0F16  00B2               	movwf	___ftdiv@f2+2
  6617  0F17  0840               	movf	trapmf@x,w
  6618  0F18  00A3               	movwf	___ftadd@f1
  6619  0F19  0841               	movf	trapmf@x+1,w
  6620  0F1A  00A4               	movwf	___ftadd@f1+1
  6621  0F1B  0842               	movf	trapmf@x+2,w
  6622  0F1C  00A5               	movwf	___ftadd@f1+2
  6623  0F1D  0843               	movf	trapmf@a,w
  6624  0F1E  00A0               	movwf	___ftneg@f1
  6625  0F1F  0844               	movf	trapmf@a+1,w
  6626  0F20  00A1               	movwf	___ftneg@f1+1
  6627  0F21  0845               	movf	trapmf@a+2,w
  6628  0F22  2FB2               	goto	L19
  6629  0F23                     i1l2219:	
  6630                           
  6631                           ;main.c: 90: else if ((b <= x) && (x <= c))
  6632  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  6633  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  6634  0F25  0840               	movf	trapmf@x,w
  6635  0F26  00B0               	movwf	___ftge@ff1
  6636  0F27  0841               	movf	trapmf@x+1,w
  6637  0F28  00B1               	movwf	___ftge@ff1+1
  6638  0F29  0842               	movf	trapmf@x+2,w
  6639  0F2A  00B2               	movwf	___ftge@ff1+2
  6640  0F2B  0846               	movf	trapmf@b,w
  6641  0F2C  00B3               	movwf	___ftge@ff2
  6642  0F2D  0847               	movf	trapmf@b+1,w
  6643  0F2E  00B4               	movwf	___ftge@ff2+1
  6644  0F2F  0848               	movf	trapmf@b+2,w
  6645  0F30  00B5               	movwf	___ftge@ff2+2
  6646  0F31  160A  118A  26B9  120A  158A  	fcall	___ftge
  6647  0F36  1C03               	btfss	3,0
  6648  0F37  2F55               	goto	i1l2225
  6649  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  6650  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  6651  0F3A  0849               	movf	trapmf@c,w
  6652  0F3B  00B0               	movwf	___ftge@ff1
  6653  0F3C  084A               	movf	trapmf@c+1,w
  6654  0F3D  00B1               	movwf	___ftge@ff1+1
  6655  0F3E  084B               	movf	trapmf@c+2,w
  6656  0F3F  00B2               	movwf	___ftge@ff1+2
  6657  0F40  0840               	movf	trapmf@x,w
  6658  0F41  00B3               	movwf	___ftge@ff2
  6659  0F42  0841               	movf	trapmf@x+1,w
  6660  0F43  00B4               	movwf	___ftge@ff2+1
  6661  0F44  0842               	movf	trapmf@x+2,w
  6662  0F45  00B5               	movwf	___ftge@ff2+2
  6663  0F46  160A  118A  26B9  120A  158A  	fcall	___ftge
  6664  0F4B  1C03               	btfss	3,0
  6665  0F4C  2F55               	goto	i1l2225
  6666                           
  6667                           ;main.c: 91: ua = 1;
  6668  0F4D  3000               	movlw	0
  6669  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  6670  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  6671  0F50  00CF               	movwf	trapmf@ua
  6672  0F51  3080               	movlw	128
  6673  0F52  00D0               	movwf	trapmf@ua+1
  6674  0F53  303F               	movlw	63
  6675  0F54  2FF6               	goto	L16
  6676  0F55                     i1l2225:	
  6677                           
  6678                           ;main.c: 92: else if ((c < x) && (x <= d))
  6679  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  6680  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  6681  0F57  0849               	movf	trapmf@c,w
  6682  0F58  00B0               	movwf	___ftge@ff1
  6683  0F59  084A               	movf	trapmf@c+1,w
  6684  0F5A  00B1               	movwf	___ftge@ff1+1
  6685  0F5B  084B               	movf	trapmf@c+2,w
  6686  0F5C  00B2               	movwf	___ftge@ff1+2
  6687  0F5D  0840               	movf	trapmf@x,w
  6688  0F5E  00B3               	movwf	___ftge@ff2
  6689  0F5F  0841               	movf	trapmf@x+1,w
  6690  0F60  00B4               	movwf	___ftge@ff2+1
  6691  0F61  0842               	movf	trapmf@x+2,w
  6692  0F62  00B5               	movwf	___ftge@ff2+2
  6693  0F63  160A  118A  26B9  120A  158A  	fcall	___ftge
  6694  0F68  1803               	btfsc	3,0
  6695  0F69  2FDA               	goto	i1l2231
  6696  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  6697  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  6698  0F6C  084C               	movf	trapmf@d,w
  6699  0F6D  00B0               	movwf	___ftge@ff1
  6700  0F6E  084D               	movf	trapmf@d+1,w
  6701  0F6F  00B1               	movwf	___ftge@ff1+1
  6702  0F70  084E               	movf	trapmf@d+2,w
  6703  0F71  00B2               	movwf	___ftge@ff1+2
  6704  0F72  0840               	movf	trapmf@x,w
  6705  0F73  00B3               	movwf	___ftge@ff2
  6706  0F74  0841               	movf	trapmf@x+1,w
  6707  0F75  00B4               	movwf	___ftge@ff2+1
  6708  0F76  0842               	movf	trapmf@x+2,w
  6709  0F77  00B5               	movwf	___ftge@ff2+2
  6710  0F78  160A  118A  26B9  120A  158A  	fcall	___ftge
  6711  0F7D  1C03               	btfss	3,0
  6712  0F7E  2FDA               	goto	i1l2231
  6713                           
  6714                           ;main.c: 93: ua = ((d - x) / (d - c));
  6715  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0F81  084C               	movf	trapmf@d,w
  6718  0F82  00A3               	movwf	___ftadd@f1
  6719  0F83  084D               	movf	trapmf@d+1,w
  6720  0F84  00A4               	movwf	___ftadd@f1+1
  6721  0F85  084E               	movf	trapmf@d+2,w
  6722  0F86  00A5               	movwf	___ftadd@f1+2
  6723  0F87  0849               	movf	trapmf@c,w
  6724  0F88  00A0               	movwf	___ftneg@f1
  6725  0F89  084A               	movf	trapmf@c+1,w
  6726  0F8A  00A1               	movwf	___ftneg@f1+1
  6727  0F8B  084B               	movf	trapmf@c+2,w
  6728  0F8C  00A2               	movwf	___ftneg@f1+2
  6729  0F8D  160A  118A  2460  120A  158A  	fcall	___ftneg
  6730  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  6732  0F94  0820               	movf	?___ftneg,w
  6733  0F95  00A6               	movwf	___ftadd@f2
  6734  0F96  0821               	movf	?___ftneg+1,w
  6735  0F97  00A7               	movwf	___ftadd@f2+1
  6736  0F98  0822               	movf	?___ftneg+2,w
  6737  0F99  00A8               	movwf	___ftadd@f2+2
  6738  0F9A  120A  158A  2332  120A  158A  	fcall	___ftadd
  6739  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0FA1  0823               	movf	?___ftadd,w
  6742  0FA2  00B0               	movwf	___ftdiv@f2
  6743  0FA3  0824               	movf	?___ftadd+1,w
  6744  0FA4  00B1               	movwf	___ftdiv@f2+1
  6745  0FA5  0825               	movf	?___ftadd+2,w
  6746  0FA6  00B2               	movwf	___ftdiv@f2+2
  6747  0FA7  084C               	movf	trapmf@d,w
  6748  0FA8  00A3               	movwf	___ftadd@f1
  6749  0FA9  084D               	movf	trapmf@d+1,w
  6750  0FAA  00A4               	movwf	___ftadd@f1+1
  6751  0FAB  084E               	movf	trapmf@d+2,w
  6752  0FAC  00A5               	movwf	___ftadd@f1+2
  6753  0FAD  0840               	movf	trapmf@x,w
  6754  0FAE  00A0               	movwf	___ftneg@f1
  6755  0FAF  0841               	movf	trapmf@x+1,w
  6756  0FB0  00A1               	movwf	___ftneg@f1+1
  6757  0FB1  0842               	movf	trapmf@x+2,w
  6758  0FB2                     L19:	
  6759  0FB2  00A2               	movwf	___ftneg@f1+2
  6760  0FB3  160A  118A  2460  120A  158A  	fcall	___ftneg
  6761  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0FBA  0820               	movf	?___ftneg,w
  6764  0FBB  00A6               	movwf	___ftadd@f2
  6765  0FBC  0821               	movf	?___ftneg+1,w
  6766  0FBD  00A7               	movwf	___ftadd@f2+1
  6767  0FBE  0822               	movf	?___ftneg+2,w
  6768  0FBF  00A8               	movwf	___ftadd@f2+2
  6769  0FC0  120A  158A  2332  120A  158A  	fcall	___ftadd
  6770  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  6772  0FC7  0823               	movf	?___ftadd,w
  6773  0FC8  00B3               	movwf	___ftdiv@f1
  6774  0FC9  0824               	movf	?___ftadd+1,w
  6775  0FCA  00B4               	movwf	___ftdiv@f1+1
  6776  0FCB  0825               	movf	?___ftadd+2,w
  6777  0FCC  00B5               	movwf	___ftdiv@f1+2
  6778  0FCD  120A  118A  2730  120A  158A  	fcall	___ftdiv
  6779  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  6780  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  6781  0FD4  0830               	movf	?___ftdiv,w
  6782  0FD5  00CF               	movwf	trapmf@ua
  6783  0FD6  0831               	movf	?___ftdiv+1,w
  6784  0FD7  00D0               	movwf	trapmf@ua+1
  6785  0FD8  0832               	movf	?___ftdiv+2,w
  6786  0FD9  2FF6               	goto	L16
  6787  0FDA                     i1l2231:	
  6788                           
  6789                           ;main.c: 94: else if (x > d)
  6790  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6792  0FDC  084C               	movf	trapmf@d,w
  6793  0FDD  00B0               	movwf	___ftge@ff1
  6794  0FDE  084D               	movf	trapmf@d+1,w
  6795  0FDF  00B1               	movwf	___ftge@ff1+1
  6796  0FE0  084E               	movf	trapmf@d+2,w
  6797  0FE1  00B2               	movwf	___ftge@ff1+2
  6798  0FE2  0840               	movf	trapmf@x,w
  6799  0FE3  00B3               	movwf	___ftge@ff2
  6800  0FE4  0841               	movf	trapmf@x+1,w
  6801  0FE5  00B4               	movwf	___ftge@ff2+1
  6802  0FE6  0842               	movf	trapmf@x+2,w
  6803  0FE7  00B5               	movwf	___ftge@ff2+2
  6804  0FE8  160A  118A  26B9  120A  158A  	fcall	___ftge
  6805  0FED  1803               	btfsc	3,0
  6806  0FEE  2FF7               	goto	i1l120
  6807  0FEF                     L17:	
  6808                           
  6809                           ;main.c: 95: ua = 0;
  6810  0FEF  3000               	movlw	0
  6811  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  6812  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  6813  0FF2  00CF               	movwf	trapmf@ua
  6814  0FF3  3000               	movlw	0
  6815  0FF4  00D0               	movwf	trapmf@ua+1
  6816  0FF5  3000               	movlw	0
  6817  0FF6                     L16:	
  6818  0FF6  00D1               	movwf	trapmf@ua+2
  6819  0FF7                     i1l120:	
  6820                           
  6821                           ;main.c: 97: return(ua);
  6822  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6823  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6824  0FF9  084F               	movf	trapmf@ua,w
  6825  0FFA  00C0               	movwf	?_trapmf
  6826  0FFB  0850               	movf	trapmf@ua+1,w
  6827  0FFC  00C1               	movwf	?_trapmf+1
  6828  0FFD  0851               	movf	trapmf@ua+2,w
  6829  0FFE  00C2               	movwf	?_trapmf+2
  6830  0FFF  0008               	return
  6831  1000                     __end_of_trapmf:	
  6832                           
  6833                           	psect	text27
  6834  1460                     __ptext27:	
  6835 ;; *************** function ___ftneg *****************
  6836 ;; Defined at:
  6837 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  f1              3    0[BANK0 ] float 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  3    0[BANK0 ] float 
  6844 ;; Registers used:
  6845 ;;		wreg
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6851 ;;      Params:         0       3       0       0       0
  6852 ;;      Locals:         0       0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0
  6854 ;;      Totals:         0       3       0       0       0
  6855 ;;Total ram usage:        3 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_trimf
  6861 ;;		_trapmf
  6862 ;;		_Fuzzy
  6863 ;; This function uses a non-reentrant model
  6864 ;;
  6865                           
  6866                           
  6867                           ;psect for function ___ftneg
  6868  1460                     ___ftneg:	
  6869                           
  6870                           ;incstack = 0
  6871                           ; Regs used in ___ftneg: [wreg]
  6872  1460  1283               	bcf	3,5	;RP0=0, select bank0
  6873  1461  1303               	bcf	3,6	;RP1=0, select bank0
  6874  1462  0822               	movf	___ftneg@f1+2,w
  6875  1463  0421               	iorwf	___ftneg@f1+1,w
  6876  1464  0420               	iorwf	___ftneg@f1,w
  6877  1465  1903               	skipnz
  6878  1466  0008               	return
  6879  1467  3080               	movlw	128
  6880  1468  06A2               	xorwf	___ftneg@f1+2,f
  6881  1469  0008               	return
  6882  146A                     __end_of___ftneg:	
  6883                           
  6884                           	psect	text28
  6885  0730                     __ptext28:	
  6886 ;; *************** function ___ftdiv *****************
  6887 ;; Defined at:
  6888 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  f2              3   16[BANK0 ] float 
  6891 ;;  f1              3   19[BANK0 ] float 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  f3              3   27[BANK0 ] float 
  6894 ;;  sign            1   31[BANK0 ] unsigned char 
  6895 ;;  exp             1   30[BANK0 ] unsigned char 
  6896 ;;  cntr            1   26[BANK0 ] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  3   16[BANK0 ] float 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0, pclath, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6906 ;;      Params:         0       6       0       0       0
  6907 ;;      Locals:         0       6       0       0       0
  6908 ;;      Temps:          0       4       0       0       0
  6909 ;;      Totals:         0      16       0       0       0
  6910 ;;Total ram usage:       16 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    1
  6913 ;; This function calls:
  6914 ;;		___ftpack
  6915 ;; This function is called by:
  6916 ;;		_trimf
  6917 ;;		_trapmf
  6918 ;;		_Fuzzy
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function ___ftdiv
  6924  0730                     ___ftdiv:	
  6925                           
  6926                           ;incstack = 0
  6927                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6928  0730  1283               	bcf	3,5	;RP0=0, select bank0
  6929  0731  1303               	bcf	3,6	;RP1=0, select bank0
  6930  0732  0833               	movf	___ftdiv@f1,w
  6931  0733  00B6               	movwf	??___ftdiv
  6932  0734  0834               	movf	___ftdiv@f1+1,w
  6933  0735  00B7               	movwf	??___ftdiv+1
  6934  0736  0835               	movf	___ftdiv@f1+2,w
  6935  0737  00B8               	movwf	??___ftdiv+2
  6936  0738  1003               	clrc
  6937  0739  0D37               	rlf	??___ftdiv+1,w
  6938  073A  0D38               	rlf	??___ftdiv+2,w
  6939  073B  00B9               	movwf	??___ftdiv+3
  6940  073C  0839               	movf	??___ftdiv+3,w
  6941  073D  00BE               	movwf	___ftdiv@exp
  6942  073E  08BE               	movf	___ftdiv@exp,f
  6943  073F  1D03               	skipz
  6944  0740  2F48               	goto	i1l2119
  6945  0741  3000               	movlw	0
  6946  0742  00B0               	movwf	?___ftdiv
  6947  0743  3000               	movlw	0
  6948  0744  00B1               	movwf	?___ftdiv+1
  6949  0745  3000               	movlw	0
  6950  0746  00B2               	movwf	?___ftdiv+2
  6951  0747  0008               	return
  6952  0748                     i1l2119:	
  6953  0748  0830               	movf	___ftdiv@f2,w
  6954  0749  00B6               	movwf	??___ftdiv
  6955  074A  0831               	movf	___ftdiv@f2+1,w
  6956  074B  00B7               	movwf	??___ftdiv+1
  6957  074C  0832               	movf	___ftdiv@f2+2,w
  6958  074D  00B8               	movwf	??___ftdiv+2
  6959  074E  1003               	clrc
  6960  074F  0D37               	rlf	??___ftdiv+1,w
  6961  0750  0D38               	rlf	??___ftdiv+2,w
  6962  0751  00B9               	movwf	??___ftdiv+3
  6963  0752  0839               	movf	??___ftdiv+3,w
  6964  0753  00BF               	movwf	___ftdiv@sign
  6965  0754  08BF               	movf	___ftdiv@sign,f
  6966  0755  1D03               	skipz
  6967  0756  2F5E               	goto	i1l2125
  6968  0757  3000               	movlw	0
  6969  0758  00B0               	movwf	?___ftdiv
  6970  0759  3000               	movlw	0
  6971  075A  00B1               	movwf	?___ftdiv+1
  6972  075B  3000               	movlw	0
  6973  075C  00B2               	movwf	?___ftdiv+2
  6974  075D  0008               	return
  6975  075E                     i1l2125:	
  6976  075E  3000               	movlw	0
  6977  075F  00BB               	movwf	___ftdiv@f3
  6978  0760  3000               	movlw	0
  6979  0761  00BC               	movwf	___ftdiv@f3+1
  6980  0762  3000               	movlw	0
  6981  0763  00BD               	movwf	___ftdiv@f3+2
  6982  0764  3089               	movlw	137
  6983  0765  073F               	addwf	___ftdiv@sign,w
  6984  0766  00B6               	movwf	??___ftdiv
  6985  0767  0836               	movf	??___ftdiv,w
  6986  0768  02BE               	subwf	___ftdiv@exp,f
  6987  0769  0833               	movf	___ftdiv@f1,w
  6988  076A  00B6               	movwf	??___ftdiv
  6989  076B  0834               	movf	___ftdiv@f1+1,w
  6990  076C  00B7               	movwf	??___ftdiv+1
  6991  076D  0835               	movf	___ftdiv@f1+2,w
  6992  076E  00B8               	movwf	??___ftdiv+2
  6993  076F  3010               	movlw	16
  6994  0770                     u212_25:	
  6995  0770  1003               	clrc
  6996  0771  0CB8               	rrf	??___ftdiv+2,f
  6997  0772  0CB7               	rrf	??___ftdiv+1,f
  6998  0773  0CB6               	rrf	??___ftdiv,f
  6999  0774  3EFF               	addlw	-1
  7000  0775  1D03               	skipz
  7001  0776  2F70               	goto	u212_25
  7002  0777  0836               	movf	??___ftdiv,w
  7003  0778  00B9               	movwf	??___ftdiv+3
  7004  0779  0839               	movf	??___ftdiv+3,w
  7005  077A  00BF               	movwf	___ftdiv@sign
  7006  077B  0830               	movf	___ftdiv@f2,w
  7007  077C  00B6               	movwf	??___ftdiv
  7008  077D  0831               	movf	___ftdiv@f2+1,w
  7009  077E  00B7               	movwf	??___ftdiv+1
  7010  077F  0832               	movf	___ftdiv@f2+2,w
  7011  0780  00B8               	movwf	??___ftdiv+2
  7012  0781  3010               	movlw	16
  7013  0782                     u213_25:	
  7014  0782  1003               	clrc
  7015  0783  0CB8               	rrf	??___ftdiv+2,f
  7016  0784  0CB7               	rrf	??___ftdiv+1,f
  7017  0785  0CB6               	rrf	??___ftdiv,f
  7018  0786  3EFF               	addlw	-1
  7019  0787  1D03               	skipz
  7020  0788  2F82               	goto	u213_25
  7021  0789  0836               	movf	??___ftdiv,w
  7022  078A  00B9               	movwf	??___ftdiv+3
  7023  078B  0839               	movf	??___ftdiv+3,w
  7024  078C  06BF               	xorwf	___ftdiv@sign,f
  7025  078D  3080               	movlw	128
  7026  078E  00B6               	movwf	??___ftdiv
  7027  078F  0836               	movf	??___ftdiv,w
  7028  0790  05BF               	andwf	___ftdiv@sign,f
  7029  0791  17B4               	bsf	___ftdiv@f1+1,7
  7030  0792  30FF               	movlw	255
  7031  0793  05B3               	andwf	___ftdiv@f1,f
  7032  0794  30FF               	movlw	255
  7033  0795  05B4               	andwf	___ftdiv@f1+1,f
  7034  0796  3000               	movlw	0
  7035  0797  05B5               	andwf	___ftdiv@f1+2,f
  7036  0798  17B1               	bsf	___ftdiv@f2+1,7
  7037  0799  30FF               	movlw	255
  7038  079A  05B0               	andwf	___ftdiv@f2,f
  7039  079B  30FF               	movlw	255
  7040  079C  05B1               	andwf	___ftdiv@f2+1,f
  7041  079D  3000               	movlw	0
  7042  079E  05B2               	andwf	___ftdiv@f2+2,f
  7043  079F  3018               	movlw	24
  7044  07A0  00B6               	movwf	??___ftdiv
  7045  07A1  0836               	movf	??___ftdiv,w
  7046  07A2  00BA               	movwf	___ftdiv@cntr
  7047  07A3                     i1l2139:	
  7048  07A3  3001               	movlw	1
  7049  07A4                     u214_25:	
  7050  07A4  1003               	clrc
  7051  07A5  0DBB               	rlf	___ftdiv@f3,f
  7052  07A6  0DBC               	rlf	___ftdiv@f3+1,f
  7053  07A7  0DBD               	rlf	___ftdiv@f3+2,f
  7054  07A8  3EFF               	addlw	-1
  7055  07A9  1D03               	skipz
  7056  07AA  2FA4               	goto	u214_25
  7057  07AB  0832               	movf	___ftdiv@f2+2,w
  7058  07AC  0235               	subwf	___ftdiv@f1+2,w
  7059  07AD  1D03               	skipz
  7060  07AE  2FB5               	goto	u215_25
  7061  07AF  0831               	movf	___ftdiv@f2+1,w
  7062  07B0  0234               	subwf	___ftdiv@f1+1,w
  7063  07B1  1D03               	skipz
  7064  07B2  2FB5               	goto	u215_25
  7065  07B3  0830               	movf	___ftdiv@f2,w
  7066  07B4  0233               	subwf	___ftdiv@f1,w
  7067  07B5                     u215_25:	
  7068  07B5  1C03               	skipc
  7069  07B6  2FC2               	goto	i1l2147
  7070  07B7  0830               	movf	___ftdiv@f2,w
  7071  07B8  02B3               	subwf	___ftdiv@f1,f
  7072  07B9  0831               	movf	___ftdiv@f2+1,w
  7073  07BA  1C03               	skipc
  7074  07BB  0F31               	incfsz	___ftdiv@f2+1,w
  7075  07BC  02B4               	subwf	___ftdiv@f1+1,f
  7076  07BD  0832               	movf	___ftdiv@f2+2,w
  7077  07BE  1C03               	skipc
  7078  07BF  0A32               	incf	___ftdiv@f2+2,w
  7079  07C0  02B5               	subwf	___ftdiv@f1+2,f
  7080  07C1  143B               	bsf	___ftdiv@f3,0
  7081  07C2                     i1l2147:	
  7082  07C2  3001               	movlw	1
  7083  07C3                     u216_25:	
  7084  07C3  1003               	clrc
  7085  07C4  0DB3               	rlf	___ftdiv@f1,f
  7086  07C5  0DB4               	rlf	___ftdiv@f1+1,f
  7087  07C6  0DB5               	rlf	___ftdiv@f1+2,f
  7088  07C7  3EFF               	addlw	-1
  7089  07C8  1D03               	skipz
  7090  07C9  2FC3               	goto	u216_25
  7091  07CA  3001               	movlw	1
  7092  07CB  02BA               	subwf	___ftdiv@cntr,f
  7093  07CC  1D03               	btfss	3,2
  7094  07CD  2FA3               	goto	i1l2139
  7095  07CE  083B               	movf	___ftdiv@f3,w
  7096  07CF  00F0               	movwf	___ftpack@arg
  7097  07D0  083C               	movf	___ftdiv@f3+1,w
  7098  07D1  00F1               	movwf	___ftpack@arg+1
  7099  07D2  083D               	movf	___ftdiv@f3+2,w
  7100  07D3  00F2               	movwf	___ftpack@arg+2
  7101  07D4  083E               	movf	___ftdiv@exp,w
  7102  07D5  00B6               	movwf	??___ftdiv
  7103  07D6  0836               	movf	??___ftdiv,w
  7104  07D7  00F3               	movwf	___ftpack@exp
  7105  07D8  083F               	movf	___ftdiv@sign,w
  7106  07D9  00B7               	movwf	??___ftdiv+1
  7107  07DA  0837               	movf	??___ftdiv+1,w
  7108  07DB  00F4               	movwf	___ftpack@sign
  7109  07DC  160A  118A  2718   	fcall	___ftpack
  7110  07DF  0870               	movf	?___ftpack,w
  7111  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  7112  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  7113  07E2  00B0               	movwf	?___ftdiv
  7114  07E3  0871               	movf	?___ftpack+1,w
  7115  07E4  00B1               	movwf	?___ftdiv+1
  7116  07E5  0872               	movf	?___ftpack+2,w
  7117  07E6  00B2               	movwf	?___ftdiv+2
  7118  07E7  0008               	return
  7119  07E8                     __end_of___ftdiv:	
  7120                           
  7121                           	psect	text29
  7122  0B32                     __ptext29:	
  7123 ;; *************** function ___ftadd *****************
  7124 ;; Defined at:
  7125 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  f1              3    3[BANK0 ] float 
  7128 ;;  f2              3    6[BANK0 ] float 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  exp1            1   15[BANK0 ] unsigned char 
  7131 ;;  exp2            1   14[BANK0 ] unsigned char 
  7132 ;;  sign            1   13[BANK0 ] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  3    3[BANK0 ] float 
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0, pclath, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7142 ;;      Params:         0       6       0       0       0
  7143 ;;      Locals:         0       3       0       0       0
  7144 ;;      Temps:          0       4       0       0       0
  7145 ;;      Totals:         0      13       0       0       0
  7146 ;;Total ram usage:       13 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    1
  7149 ;; This function calls:
  7150 ;;		___ftpack
  7151 ;; This function is called by:
  7152 ;;		_trimf
  7153 ;;		_trapmf
  7154 ;;		_Fuzzy
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           
  7159                           ;psect for function ___ftadd
  7160  0B32                     ___ftadd:	
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7164  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  7166  0B34  0823               	movf	___ftadd@f1,w
  7167  0B35  00A9               	movwf	??___ftadd
  7168  0B36  0824               	movf	___ftadd@f1+1,w
  7169  0B37  00AA               	movwf	??___ftadd+1
  7170  0B38  0825               	movf	___ftadd@f1+2,w
  7171  0B39  00AB               	movwf	??___ftadd+2
  7172  0B3A  1003               	clrc
  7173  0B3B  0D2A               	rlf	??___ftadd+1,w
  7174  0B3C  0D2B               	rlf	??___ftadd+2,w
  7175  0B3D  00AC               	movwf	??___ftadd+3
  7176  0B3E  082C               	movf	??___ftadd+3,w
  7177  0B3F  00AF               	movwf	___ftadd@exp1
  7178  0B40  0826               	movf	___ftadd@f2,w
  7179  0B41  00A9               	movwf	??___ftadd
  7180  0B42  0827               	movf	___ftadd@f2+1,w
  7181  0B43  00AA               	movwf	??___ftadd+1
  7182  0B44  0828               	movf	___ftadd@f2+2,w
  7183  0B45  00AB               	movwf	??___ftadd+2
  7184  0B46  1003               	clrc
  7185  0B47  0D2A               	rlf	??___ftadd+1,w
  7186  0B48  0D2B               	rlf	??___ftadd+2,w
  7187  0B49  00AC               	movwf	??___ftadd+3
  7188  0B4A  082C               	movf	??___ftadd+3,w
  7189  0B4B  00AE               	movwf	___ftadd@exp2
  7190  0B4C  082F               	movf	___ftadd@exp1,w
  7191  0B4D  1903               	btfsc	3,2
  7192  0B4E  2B5B               	goto	i1l2049
  7193  0B4F  082E               	movf	___ftadd@exp2,w
  7194  0B50  022F               	subwf	___ftadd@exp1,w
  7195  0B51  1803               	skipnc
  7196  0B52  2B62               	goto	i1l2053
  7197  0B53  032F               	decf	___ftadd@exp1,w
  7198  0B54  3AFF               	xorlw	255
  7199  0B55  072E               	addwf	___ftadd@exp2,w
  7200  0B56  00A9               	movwf	??___ftadd
  7201  0B57  3019               	movlw	25
  7202  0B58  0229               	subwf	??___ftadd,w
  7203  0B59  1C03               	skipc
  7204  0B5A  2B62               	goto	i1l2053
  7205  0B5B                     i1l2049:	
  7206  0B5B  0826               	movf	___ftadd@f2,w
  7207  0B5C  00A3               	movwf	?___ftadd
  7208  0B5D  0827               	movf	___ftadd@f2+1,w
  7209  0B5E  00A4               	movwf	?___ftadd+1
  7210  0B5F  0828               	movf	___ftadd@f2+2,w
  7211  0B60  00A5               	movwf	?___ftadd+2
  7212  0B61  0008               	return
  7213  0B62                     i1l2053:	
  7214  0B62  082E               	movf	___ftadd@exp2,w
  7215  0B63  1903               	btfsc	3,2
  7216  0B64  0008               	return
  7217  0B65  082F               	movf	___ftadd@exp1,w
  7218  0B66  022E               	subwf	___ftadd@exp2,w
  7219  0B67  1803               	skipnc
  7220  0B68  2B71               	goto	i1l2059
  7221  0B69  032E               	decf	___ftadd@exp2,w
  7222  0B6A  3AFF               	xorlw	255
  7223  0B6B  072F               	addwf	___ftadd@exp1,w
  7224  0B6C  00A9               	movwf	??___ftadd
  7225  0B6D  3019               	movlw	25
  7226  0B6E  0229               	subwf	??___ftadd,w
  7227  0B6F  1803               	btfsc	3,0
  7228  0B70  0008               	return
  7229  0B71                     i1l2059:	
  7230  0B71  3006               	movlw	6
  7231  0B72  00A9               	movwf	??___ftadd
  7232  0B73  0829               	movf	??___ftadd,w
  7233  0B74  00AD               	movwf	___ftadd@sign
  7234  0B75  1BA5               	btfsc	___ftadd@f1+2,7
  7235  0B76  17AD               	bsf	___ftadd@sign,7
  7236  0B77  1BA8               	btfsc	___ftadd@f2+2,7
  7237  0B78  172D               	bsf	___ftadd@sign,6
  7238  0B79  17A4               	bsf	___ftadd@f1+1,7
  7239  0B7A  30FF               	movlw	255
  7240  0B7B  05A3               	andwf	___ftadd@f1,f
  7241  0B7C  30FF               	movlw	255
  7242  0B7D  05A4               	andwf	___ftadd@f1+1,f
  7243  0B7E  3000               	movlw	0
  7244  0B7F  05A5               	andwf	___ftadd@f1+2,f
  7245  0B80  17A7               	bsf	___ftadd@f2+1,7
  7246  0B81  30FF               	movlw	255
  7247  0B82  05A6               	andwf	___ftadd@f2,f
  7248  0B83  30FF               	movlw	255
  7249  0B84  05A7               	andwf	___ftadd@f2+1,f
  7250  0B85  3000               	movlw	0
  7251  0B86  05A8               	andwf	___ftadd@f2+2,f
  7252  0B87  082E               	movf	___ftadd@exp2,w
  7253  0B88  022F               	subwf	___ftadd@exp1,w
  7254  0B89  1803               	skipnc
  7255  0B8A  2BB1               	goto	i1l2081
  7256  0B8B                     i1l2071:	
  7257  0B8B  3001               	movlw	1
  7258  0B8C                     u195_25:	
  7259  0B8C  1003               	clrc
  7260  0B8D  0DA6               	rlf	___ftadd@f2,f
  7261  0B8E  0DA7               	rlf	___ftadd@f2+1,f
  7262  0B8F  0DA8               	rlf	___ftadd@f2+2,f
  7263  0B90  3EFF               	addlw	-1
  7264  0B91  1D03               	skipz
  7265  0B92  2B8C               	goto	u195_25
  7266  0B93  3001               	movlw	1
  7267  0B94  02AE               	subwf	___ftadd@exp2,f
  7268  0B95  082E               	movf	___ftadd@exp2,w
  7269  0B96  062F               	xorwf	___ftadd@exp1,w
  7270  0B97  1903               	skipnz
  7271  0B98  2BAC               	goto	i1l2079
  7272  0B99  3001               	movlw	1
  7273  0B9A  02AD               	subwf	___ftadd@sign,f
  7274  0B9B  082D               	movf	___ftadd@sign,w
  7275  0B9C  3907               	andlw	7
  7276  0B9D  1903               	btfsc	3,2
  7277  0B9E  2BAC               	goto	i1l2079
  7278  0B9F  2B8B               	goto	i1l2071
  7279  0BA0                     i1l2077:	
  7280  0BA0  3001               	movlw	1
  7281  0BA1                     u198_25:	
  7282  0BA1  1003               	clrc
  7283  0BA2  0CA5               	rrf	___ftadd@f1+2,f
  7284  0BA3  0CA4               	rrf	___ftadd@f1+1,f
  7285  0BA4  0CA3               	rrf	___ftadd@f1,f
  7286  0BA5  3EFF               	addlw	-1
  7287  0BA6  1D03               	skipz
  7288  0BA7  2BA1               	goto	u198_25
  7289  0BA8  3001               	movlw	1
  7290  0BA9  00A9               	movwf	??___ftadd
  7291  0BAA  0829               	movf	??___ftadd,w
  7292  0BAB  07AF               	addwf	___ftadd@exp1,f
  7293  0BAC                     i1l2079:	
  7294  0BAC  082F               	movf	___ftadd@exp1,w
  7295  0BAD  062E               	xorwf	___ftadd@exp2,w
  7296  0BAE  1903               	btfsc	3,2
  7297  0BAF  2BDA               	goto	i1l732
  7298  0BB0  2BA0               	goto	i1l2077
  7299  0BB1                     i1l2081:	
  7300  0BB1  082F               	movf	___ftadd@exp1,w
  7301  0BB2  022E               	subwf	___ftadd@exp2,w
  7302  0BB3  1803               	skipnc
  7303  0BB4  2BDA               	goto	i1l732
  7304  0BB5                     i1l2083:	
  7305  0BB5  3001               	movlw	1
  7306  0BB6                     u201_25:	
  7307  0BB6  1003               	clrc
  7308  0BB7  0DA3               	rlf	___ftadd@f1,f
  7309  0BB8  0DA4               	rlf	___ftadd@f1+1,f
  7310  0BB9  0DA5               	rlf	___ftadd@f1+2,f
  7311  0BBA  3EFF               	addlw	-1
  7312  0BBB  1D03               	skipz
  7313  0BBC  2BB6               	goto	u201_25
  7314  0BBD  3001               	movlw	1
  7315  0BBE  02AF               	subwf	___ftadd@exp1,f
  7316  0BBF  082E               	movf	___ftadd@exp2,w
  7317  0BC0  062F               	xorwf	___ftadd@exp1,w
  7318  0BC1  1903               	skipnz
  7319  0BC2  2BD6               	goto	i1l2091
  7320  0BC3  3001               	movlw	1
  7321  0BC4  02AD               	subwf	___ftadd@sign,f
  7322  0BC5  082D               	movf	___ftadd@sign,w
  7323  0BC6  3907               	andlw	7
  7324  0BC7  1903               	btfsc	3,2
  7325  0BC8  2BD6               	goto	i1l2091
  7326  0BC9  2BB5               	goto	i1l2083
  7327  0BCA                     i1l2089:	
  7328  0BCA  3001               	movlw	1
  7329  0BCB                     u204_25:	
  7330  0BCB  1003               	clrc
  7331  0BCC  0CA8               	rrf	___ftadd@f2+2,f
  7332  0BCD  0CA7               	rrf	___ftadd@f2+1,f
  7333  0BCE  0CA6               	rrf	___ftadd@f2,f
  7334  0BCF  3EFF               	addlw	-1
  7335  0BD0  1D03               	skipz
  7336  0BD1  2BCB               	goto	u204_25
  7337  0BD2  3001               	movlw	1
  7338  0BD3  00A9               	movwf	??___ftadd
  7339  0BD4  0829               	movf	??___ftadd,w
  7340  0BD5  07AE               	addwf	___ftadd@exp2,f
  7341  0BD6                     i1l2091:	
  7342  0BD6  082F               	movf	___ftadd@exp1,w
  7343  0BD7  062E               	xorwf	___ftadd@exp2,w
  7344  0BD8  1D03               	skipz
  7345  0BD9  2BCA               	goto	i1l2089
  7346  0BDA                     i1l732:	
  7347  0BDA  1FAD               	btfss	___ftadd@sign,7
  7348  0BDB  2BEC               	goto	i1l2095
  7349  0BDC  30FF               	movlw	255
  7350  0BDD  06A3               	xorwf	___ftadd@f1,f
  7351  0BDE  30FF               	movlw	255
  7352  0BDF  06A4               	xorwf	___ftadd@f1+1,f
  7353  0BE0  30FF               	movlw	255
  7354  0BE1  06A5               	xorwf	___ftadd@f1+2,f
  7355  0BE2  3001               	movlw	1
  7356  0BE3  07A3               	addwf	___ftadd@f1,f
  7357  0BE4  3000               	movlw	0
  7358  0BE5  1803               	skipnc
  7359  0BE6  3001               	movlw	1
  7360  0BE7  07A4               	addwf	___ftadd@f1+1,f
  7361  0BE8  3000               	movlw	0
  7362  0BE9  1803               	skipnc
  7363  0BEA  3001               	movlw	1
  7364  0BEB  07A5               	addwf	___ftadd@f1+2,f
  7365  0BEC                     i1l2095:	
  7366  0BEC  1F2D               	btfss	___ftadd@sign,6
  7367  0BED  2BFE               	goto	i1l2099
  7368  0BEE  30FF               	movlw	255
  7369  0BEF  06A6               	xorwf	___ftadd@f2,f
  7370  0BF0  30FF               	movlw	255
  7371  0BF1  06A7               	xorwf	___ftadd@f2+1,f
  7372  0BF2  30FF               	movlw	255
  7373  0BF3  06A8               	xorwf	___ftadd@f2+2,f
  7374  0BF4  3001               	movlw	1
  7375  0BF5  07A6               	addwf	___ftadd@f2,f
  7376  0BF6  3000               	movlw	0
  7377  0BF7  1803               	skipnc
  7378  0BF8  3001               	movlw	1
  7379  0BF9  07A7               	addwf	___ftadd@f2+1,f
  7380  0BFA  3000               	movlw	0
  7381  0BFB  1803               	skipnc
  7382  0BFC  3001               	movlw	1
  7383  0BFD  07A8               	addwf	___ftadd@f2+2,f
  7384  0BFE                     i1l2099:	
  7385  0BFE  01AD               	clrf	___ftadd@sign
  7386  0BFF  0823               	movf	___ftadd@f1,w
  7387  0C00  07A6               	addwf	___ftadd@f2,f
  7388  0C01  0824               	movf	___ftadd@f1+1,w
  7389  0C02  1103               	clrz
  7390  0C03  1803               	skipnc
  7391  0C04  0A24               	incf	___ftadd@f1+1,w
  7392  0C05  1D03               	btfss	3,2
  7393  0C06  07A7               	addwf	___ftadd@f2+1,f
  7394  0C07  0825               	movf	___ftadd@f1+2,w
  7395  0C08  1103               	clrz
  7396  0C09  1803               	skipnc
  7397  0C0A  0A25               	incf	___ftadd@f1+2,w
  7398  0C0B  1D03               	btfss	3,2
  7399  0C0C  07A8               	addwf	___ftadd@f2+2,f
  7400  0C0D  1FA8               	btfss	___ftadd@f2+2,7
  7401  0C0E  2C21               	goto	i1l2109
  7402  0C0F  30FF               	movlw	255
  7403  0C10  06A6               	xorwf	___ftadd@f2,f
  7404  0C11  30FF               	movlw	255
  7405  0C12  06A7               	xorwf	___ftadd@f2+1,f
  7406  0C13  30FF               	movlw	255
  7407  0C14  06A8               	xorwf	___ftadd@f2+2,f
  7408  0C15  3001               	movlw	1
  7409  0C16  07A6               	addwf	___ftadd@f2,f
  7410  0C17  3000               	movlw	0
  7411  0C18  1803               	skipnc
  7412  0C19  3001               	movlw	1
  7413  0C1A  07A7               	addwf	___ftadd@f2+1,f
  7414  0C1B  3000               	movlw	0
  7415  0C1C  1803               	skipnc
  7416  0C1D  3001               	movlw	1
  7417  0C1E  07A8               	addwf	___ftadd@f2+2,f
  7418  0C1F  01AD               	clrf	___ftadd@sign
  7419  0C20  0AAD               	incf	___ftadd@sign,f
  7420  0C21                     i1l2109:	
  7421  0C21  0826               	movf	___ftadd@f2,w
  7422  0C22  00F0               	movwf	___ftpack@arg
  7423  0C23  0827               	movf	___ftadd@f2+1,w
  7424  0C24  00F1               	movwf	___ftpack@arg+1
  7425  0C25  0828               	movf	___ftadd@f2+2,w
  7426  0C26  00F2               	movwf	___ftpack@arg+2
  7427  0C27  082F               	movf	___ftadd@exp1,w
  7428  0C28  00A9               	movwf	??___ftadd
  7429  0C29  0829               	movf	??___ftadd,w
  7430  0C2A  00F3               	movwf	___ftpack@exp
  7431  0C2B  082D               	movf	___ftadd@sign,w
  7432  0C2C  00AA               	movwf	??___ftadd+1
  7433  0C2D  082A               	movf	??___ftadd+1,w
  7434  0C2E  00F4               	movwf	___ftpack@sign
  7435  0C2F  160A  118A  2718   	fcall	___ftpack
  7436  0C32  0870               	movf	?___ftpack,w
  7437  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  7438  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  7439  0C35  00A3               	movwf	?___ftadd
  7440  0C36  0871               	movf	?___ftpack+1,w
  7441  0C37  00A4               	movwf	?___ftadd+1
  7442  0C38  0872               	movf	?___ftpack+2,w
  7443  0C39  00A5               	movwf	?___ftadd+2
  7444  0C3A  0008               	return
  7445  0C3B                     __end_of___ftadd:	
  7446                           
  7447                           	psect	text30
  7448  1511                     __ptext30:	
  7449 ;; *************** function _max_val *****************
  7450 ;; Defined at:
  7451 ;;		line 141 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  a               3   28[BANK0 ] float 
  7454 ;;  b               3   31[BANK0 ] float 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  3   28[BANK0 ] float 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0, pclath, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7466 ;;      Params:         0       6       0       0       0
  7467 ;;      Locals:         0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0
  7469 ;;      Totals:         0       6       0       0       0
  7470 ;;Total ram usage:        6 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    1
  7473 ;; This function calls:
  7474 ;;		___ftge
  7475 ;; This function is called by:
  7476 ;;		_Fuzzy
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _max_val
  7482  1511                     _max_val:	
  7483                           
  7484                           ;main.c: 143: if (a > b)
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  7488  1511  1283               	bcf	3,5	;RP0=0, select bank0
  7489  1512  1303               	bcf	3,6	;RP1=0, select bank0
  7490  1513  083F               	movf	max_val@b,w
  7491  1514  00B0               	movwf	___ftge@ff1
  7492  1515  0840               	movf	max_val@b+1,w
  7493  1516  00B1               	movwf	___ftge@ff1+1
  7494  1517  0841               	movf	max_val@b+2,w
  7495  1518  00B2               	movwf	___ftge@ff1+2
  7496  1519  083C               	movf	max_val@a,w
  7497  151A  00B3               	movwf	___ftge@ff2
  7498  151B  083D               	movf	max_val@a+1,w
  7499  151C  00B4               	movwf	___ftge@ff2+1
  7500  151D  083E               	movf	max_val@a+2,w
  7501  151E  00B5               	movwf	___ftge@ff2+2
  7502  151F  160A  118A  26B9  160A  118A  	fcall	___ftge
  7503  1524  1C03               	btfss	3,0
  7504  1525  0008               	return
  7505                           
  7506                           ;main.c: 145: else
  7507                           ;main.c: 146: return b;
  7508                           
  7509                           ;main.c: 144: return a;
  7510  1526  1283               	bcf	3,5	;RP0=0, select bank0
  7511  1527  1303               	bcf	3,6	;RP1=0, select bank0
  7512  1528  083F               	movf	max_val@b,w
  7513  1529  00BC               	movwf	?_max_val
  7514  152A  0840               	movf	max_val@b+1,w
  7515  152B  00BD               	movwf	?_max_val+1
  7516  152C  0841               	movf	max_val@b+2,w
  7517  152D  00BE               	movwf	?_max_val+2
  7518  152E  0008               	return
  7519  152F                     __end_of_max_val:	
  7520                           
  7521                           	psect	text31
  7522  16B9                     __ptext31:	
  7523 ;; *************** function ___ftge *****************
  7524 ;; Defined at:
  7525 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  ff1             3   16[BANK0 ] float 
  7528 ;;  ff2             3   19[BANK0 ] float 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;		None               void
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7540 ;;      Params:         0       6       0       0       0
  7541 ;;      Locals:         0       0       0       0       0
  7542 ;;      Temps:          0       6       0       0       0
  7543 ;;      Totals:         0      12       0       0       0
  7544 ;;Total ram usage:       12 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_trimf
  7550 ;;		_trapmf
  7551 ;;		_max_val
  7552 ;;		_Fuzzy
  7553 ;;		_min_val
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           
  7558                           ;psect for function ___ftge
  7559  16B9                     ___ftge:	
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7563  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  7564  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  7565  16BB  1FB2               	btfss	___ftge@ff1+2,7
  7566  16BC  2EE2               	goto	i1l2159
  7567  16BD  3000               	movlw	0
  7568  16BE  00B6               	movwf	??___ftge
  7569  16BF  3000               	movlw	0
  7570  16C0  00B7               	movwf	??___ftge+1
  7571  16C1  3080               	movlw	128
  7572  16C2  00B8               	movwf	??___ftge+2
  7573  16C3  0930               	comf	___ftge@ff1,w
  7574  16C4  00B9               	movwf	??___ftge+3
  7575  16C5  0931               	comf	___ftge@ff1+1,w
  7576  16C6  00BA               	movwf	??___ftge+4
  7577  16C7  0932               	comf	___ftge@ff1+2,w
  7578  16C8  00BB               	movwf	??___ftge+5
  7579  16C9  0AB9               	incf	??___ftge+3,f
  7580  16CA  1903               	skipnz
  7581  16CB  0ABA               	incf	??___ftge+4,f
  7582  16CC  1903               	skipnz
  7583  16CD  0ABB               	incf	??___ftge+5,f
  7584  16CE  0839               	movf	??___ftge+3,w
  7585  16CF  07B6               	addwf	??___ftge,f
  7586  16D0  083A               	movf	??___ftge+4,w
  7587  16D1  1803               	skipnc
  7588  16D2  0F3A               	incfsz	??___ftge+4,w
  7589  16D3  2ED5               	goto	u219_21
  7590  16D4  2ED6               	goto	u219_22
  7591  16D5                     u219_21:	
  7592  16D5  07B7               	addwf	??___ftge+1,f
  7593  16D6                     u219_22:	
  7594  16D6  083B               	movf	??___ftge+5,w
  7595  16D7  1803               	skipnc
  7596  16D8  0F3B               	incfsz	??___ftge+5,w
  7597  16D9  2EDB               	goto	u219_23
  7598  16DA  2EDC               	goto	u219_24
  7599  16DB                     u219_23:	
  7600  16DB  07B8               	addwf	??___ftge+2,f
  7601  16DC                     u219_24:	
  7602  16DC  0836               	movf	??___ftge,w
  7603  16DD  00B0               	movwf	___ftge@ff1
  7604  16DE  0837               	movf	??___ftge+1,w
  7605  16DF  00B1               	movwf	___ftge@ff1+1
  7606  16E0  0838               	movf	??___ftge+2,w
  7607  16E1  00B2               	movwf	___ftge@ff1+2
  7608  16E2                     i1l2159:	
  7609  16E2  1FB5               	btfss	___ftge@ff2+2,7
  7610  16E3  2F09               	goto	i1l2163
  7611  16E4  3000               	movlw	0
  7612  16E5  00B6               	movwf	??___ftge
  7613  16E6  3000               	movlw	0
  7614  16E7  00B7               	movwf	??___ftge+1
  7615  16E8  3080               	movlw	128
  7616  16E9  00B8               	movwf	??___ftge+2
  7617  16EA  0933               	comf	___ftge@ff2,w
  7618  16EB  00B9               	movwf	??___ftge+3
  7619  16EC  0934               	comf	___ftge@ff2+1,w
  7620  16ED  00BA               	movwf	??___ftge+4
  7621  16EE  0935               	comf	___ftge@ff2+2,w
  7622  16EF  00BB               	movwf	??___ftge+5
  7623  16F0  0AB9               	incf	??___ftge+3,f
  7624  16F1  1903               	skipnz
  7625  16F2  0ABA               	incf	??___ftge+4,f
  7626  16F3  1903               	skipnz
  7627  16F4  0ABB               	incf	??___ftge+5,f
  7628  16F5  0839               	movf	??___ftge+3,w
  7629  16F6  07B6               	addwf	??___ftge,f
  7630  16F7  083A               	movf	??___ftge+4,w
  7631  16F8  1803               	skipnc
  7632  16F9  0F3A               	incfsz	??___ftge+4,w
  7633  16FA  2EFC               	goto	u221_21
  7634  16FB  2EFD               	goto	u221_22
  7635  16FC                     u221_21:	
  7636  16FC  07B7               	addwf	??___ftge+1,f
  7637  16FD                     u221_22:	
  7638  16FD  083B               	movf	??___ftge+5,w
  7639  16FE  1803               	skipnc
  7640  16FF  0F3B               	incfsz	??___ftge+5,w
  7641  1700  2F02               	goto	u221_23
  7642  1701  2F03               	goto	u221_24
  7643  1702                     u221_23:	
  7644  1702  07B8               	addwf	??___ftge+2,f
  7645  1703                     u221_24:	
  7646  1703  0836               	movf	??___ftge,w
  7647  1704  00B3               	movwf	___ftge@ff2
  7648  1705  0837               	movf	??___ftge+1,w
  7649  1706  00B4               	movwf	___ftge@ff2+1
  7650  1707  0838               	movf	??___ftge+2,w
  7651  1708  00B5               	movwf	___ftge@ff2+2
  7652  1709                     i1l2163:	
  7653  1709  3080               	movlw	128
  7654  170A  06B2               	xorwf	___ftge@ff1+2,f
  7655  170B  3080               	movlw	128
  7656  170C  06B5               	xorwf	___ftge@ff2+2,f
  7657  170D  0835               	movf	___ftge@ff2+2,w
  7658  170E  0232               	subwf	___ftge@ff1+2,w
  7659  170F  1D03               	skipz
  7660  1710  0008               	return
  7661  1711  0834               	movf	___ftge@ff2+1,w
  7662  1712  0231               	subwf	___ftge@ff1+1,w
  7663  1713  1D03               	skipz
  7664  1714  0008               	return
  7665  1715  0833               	movf	___ftge@ff2,w
  7666  1716  0230               	subwf	___ftge@ff1,w
  7667  1717  0008               	return
  7668  1718                     __end_of___ftge:	
  7669                           
  7670                           	psect	text32
  7671  1498                     __ptext32:	
  7672 ;; *************** function ___lwtoft *****************
  7673 ;; Defined at:
  7674 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  c               2    8[COMMON] unsigned int 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  3    8[COMMON] float 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2, status,0, pclath, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7688 ;;      Params:         3       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0
  7690 ;;      Temps:          1       0       0       0       0
  7691 ;;      Totals:         4       0       0       0       0
  7692 ;;Total ram usage:        4 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		___ftpack
  7697 ;; This function is called by:
  7698 ;;		_Fuzzy
  7699 ;;		_ISR
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function ___lwtoft
  7705  1498                     ___lwtoft:	
  7706                           
  7707                           ;incstack = 0
  7708                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7709  1498  0878               	movf	___lwtoft@c,w
  7710  1499  00F0               	movwf	___ftpack@arg
  7711  149A  0879               	movf	___lwtoft@c+1,w
  7712  149B  00F1               	movwf	___ftpack@arg+1
  7713  149C  01F2               	clrf	___ftpack@arg+2
  7714  149D  308E               	movlw	142
  7715  149E  00FB               	movwf	??___lwtoft
  7716  149F  087B               	movf	??___lwtoft,w
  7717  14A0  00F3               	movwf	___ftpack@exp
  7718  14A1  01F4               	clrf	___ftpack@sign
  7719  14A2  160A  118A  2718   	fcall	___ftpack
  7720  14A5  0870               	movf	?___ftpack,w
  7721  14A6  00F8               	movwf	?___lwtoft
  7722  14A7  0871               	movf	?___ftpack+1,w
  7723  14A8  00F9               	movwf	?___lwtoft+1
  7724  14A9  0872               	movf	?___ftpack+2,w
  7725  14AA  00FA               	movwf	?___lwtoft+2
  7726  14AB  0008               	return
  7727  14AC                     __end_of___lwtoft:	
  7728                           
  7729                           	psect	text33
  7730  086D                     __ptext33:	
  7731 ;; *************** function ___fttol *****************
  7732 ;; Defined at:
  7733 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  f1              3   16[BANK0 ] float 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  lval            4   25[BANK0 ] unsigned long 
  7738 ;;  exp1            1   29[BANK0 ] unsigned char 
  7739 ;;  sign1           1   24[BANK0 ] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  4   16[BANK0 ] long 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7749 ;;      Params:         0       4       0       0       0
  7750 ;;      Locals:         0       6       0       0       0
  7751 ;;      Temps:          0       4       0       0       0
  7752 ;;      Totals:         0      14       0       0       0
  7753 ;;Total ram usage:       14 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_Fuzzy
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function ___fttol
  7764  086D                     ___fttol:	
  7765                           
  7766                           ;incstack = 0
  7767                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7768  086D  1283               	bcf	3,5	;RP0=0, select bank0
  7769  086E  1303               	bcf	3,6	;RP1=0, select bank0
  7770  086F  0830               	movf	___fttol@f1,w
  7771  0870  00B4               	movwf	??___fttol
  7772  0871  0831               	movf	___fttol@f1+1,w
  7773  0872  00B5               	movwf	??___fttol+1
  7774  0873  0832               	movf	___fttol@f1+2,w
  7775  0874  00B6               	movwf	??___fttol+2
  7776  0875  1003               	clrc
  7777  0876  0D35               	rlf	??___fttol+1,w
  7778  0877  0D36               	rlf	??___fttol+2,w
  7779  0878  00B7               	movwf	??___fttol+3
  7780  0879  0837               	movf	??___fttol+3,w
  7781  087A  00BD               	movwf	___fttol@exp1
  7782  087B  08BD               	movf	___fttol@exp1,f
  7783  087C  1D03               	skipz
  7784  087D  2887               	goto	i1l2379
  7785  087E  3000               	movlw	0
  7786  087F  00B3               	movwf	?___fttol+3
  7787  0880  3000               	movlw	0
  7788  0881  00B2               	movwf	?___fttol+2
  7789  0882  3000               	movlw	0
  7790  0883  00B1               	movwf	?___fttol+1
  7791  0884  3000               	movlw	0
  7792  0885  00B0               	movwf	?___fttol
  7793  0886  0008               	return
  7794  0887                     i1l2379:	
  7795  0887  0830               	movf	___fttol@f1,w
  7796  0888  00B4               	movwf	??___fttol
  7797  0889  0831               	movf	___fttol@f1+1,w
  7798  088A  00B5               	movwf	??___fttol+1
  7799  088B  0832               	movf	___fttol@f1+2,w
  7800  088C  00B6               	movwf	??___fttol+2
  7801  088D  3017               	movlw	23
  7802  088E                     u269_25:	
  7803  088E  1003               	clrc
  7804  088F  0CB6               	rrf	??___fttol+2,f
  7805  0890  0CB5               	rrf	??___fttol+1,f
  7806  0891  0CB4               	rrf	??___fttol,f
  7807  0892  3EFF               	addlw	-1
  7808  0893  1D03               	skipz
  7809  0894  288E               	goto	u269_25
  7810  0895  0834               	movf	??___fttol,w
  7811  0896  00B7               	movwf	??___fttol+3
  7812  0897  0837               	movf	??___fttol+3,w
  7813  0898  00B8               	movwf	___fttol@sign1
  7814  0899  17B1               	bsf	___fttol@f1+1,7
  7815  089A  30FF               	movlw	255
  7816  089B  05B0               	andwf	___fttol@f1,f
  7817  089C  30FF               	movlw	255
  7818  089D  05B1               	andwf	___fttol@f1+1,f
  7819  089E  3000               	movlw	0
  7820  089F  05B2               	andwf	___fttol@f1+2,f
  7821  08A0  0830               	movf	___fttol@f1,w
  7822  08A1  00B9               	movwf	___fttol@lval
  7823  08A2  0831               	movf	___fttol@f1+1,w
  7824  08A3  00BA               	movwf	___fttol@lval+1
  7825  08A4  0832               	movf	___fttol@f1+2,w
  7826  08A5  00BB               	movwf	___fttol@lval+2
  7827  08A6  01BC               	clrf	___fttol@lval+3
  7828  08A7  308E               	movlw	142
  7829  08A8  02BD               	subwf	___fttol@exp1,f
  7830  08A9  1FBD               	btfss	___fttol@exp1,7
  7831  08AA  28C9               	goto	i1l2399
  7832  08AB  083D               	movf	___fttol@exp1,w
  7833  08AC  3A80               	xorlw	128
  7834  08AD  3E8F               	addlw	143
  7835  08AE  1803               	skipnc
  7836  08AF  28B9               	goto	i1l2397
  7837  08B0  3000               	movlw	0
  7838  08B1  00B3               	movwf	?___fttol+3
  7839  08B2  3000               	movlw	0
  7840  08B3  00B2               	movwf	?___fttol+2
  7841  08B4  3000               	movlw	0
  7842  08B5  00B1               	movwf	?___fttol+1
  7843  08B6  3000               	movlw	0
  7844  08B7  00B0               	movwf	?___fttol
  7845  08B8  0008               	return
  7846  08B9                     i1l2397:	
  7847  08B9  3001               	movlw	1
  7848  08BA                     u272_25:	
  7849  08BA  1003               	clrc
  7850  08BB  0CBC               	rrf	___fttol@lval+3,f
  7851  08BC  0CBB               	rrf	___fttol@lval+2,f
  7852  08BD  0CBA               	rrf	___fttol@lval+1,f
  7853  08BE  0CB9               	rrf	___fttol@lval,f
  7854  08BF  3EFF               	addlw	-1
  7855  08C0  1D03               	skipz
  7856  08C1  28BA               	goto	u272_25
  7857  08C2  3001               	movlw	1
  7858  08C3  00B4               	movwf	??___fttol
  7859  08C4  0834               	movf	??___fttol,w
  7860  08C5  07BD               	addwf	___fttol@exp1,f
  7861  08C6  1903               	btfsc	3,2
  7862  08C7  28E4               	goto	i1l2409
  7863  08C8  28B9               	goto	i1l2397
  7864  08C9                     i1l2399:	
  7865  08C9  3018               	movlw	24
  7866  08CA  023D               	subwf	___fttol@exp1,w
  7867  08CB  1C03               	skipc
  7868  08CC  28E1               	goto	i1l2407
  7869  08CD  3000               	movlw	0
  7870  08CE  00B3               	movwf	?___fttol+3
  7871  08CF  3000               	movlw	0
  7872  08D0  00B2               	movwf	?___fttol+2
  7873  08D1  3000               	movlw	0
  7874  08D2  00B1               	movwf	?___fttol+1
  7875  08D3  3000               	movlw	0
  7876  08D4  00B0               	movwf	?___fttol
  7877  08D5  0008               	return
  7878  08D6                     i1l2405:	
  7879  08D6  3001               	movlw	1
  7880  08D7  00B4               	movwf	??___fttol
  7881  08D8                     u275_25:	
  7882  08D8  1003               	clrc
  7883  08D9  0DB9               	rlf	___fttol@lval,f
  7884  08DA  0DBA               	rlf	___fttol@lval+1,f
  7885  08DB  0DBB               	rlf	___fttol@lval+2,f
  7886  08DC  0DBC               	rlf	___fttol@lval+3,f
  7887  08DD  0BB4               	decfsz	??___fttol,f
  7888  08DE  28D8               	goto	u275_25
  7889  08DF  3001               	movlw	1
  7890  08E0  02BD               	subwf	___fttol@exp1,f
  7891  08E1                     i1l2407:	
  7892  08E1  08BD               	movf	___fttol@exp1,f
  7893  08E2  1D03               	skipz
  7894  08E3  28D6               	goto	i1l2405
  7895  08E4                     i1l2409:	
  7896  08E4  0838               	movf	___fttol@sign1,w
  7897  08E5  1903               	btfsc	3,2
  7898  08E6  28F2               	goto	i1l2413
  7899  08E7  09B9               	comf	___fttol@lval,f
  7900  08E8  09BA               	comf	___fttol@lval+1,f
  7901  08E9  09BB               	comf	___fttol@lval+2,f
  7902  08EA  09BC               	comf	___fttol@lval+3,f
  7903  08EB  0AB9               	incf	___fttol@lval,f
  7904  08EC  1903               	skipnz
  7905  08ED  0ABA               	incf	___fttol@lval+1,f
  7906  08EE  1903               	skipnz
  7907  08EF  0ABB               	incf	___fttol@lval+2,f
  7908  08F0  1903               	skipnz
  7909  08F1  0ABC               	incf	___fttol@lval+3,f
  7910  08F2                     i1l2413:	
  7911  08F2  083C               	movf	___fttol@lval+3,w
  7912  08F3  00B3               	movwf	?___fttol+3
  7913  08F4  083B               	movf	___fttol@lval+2,w
  7914  08F5  00B2               	movwf	?___fttol+2
  7915  08F6  083A               	movf	___fttol@lval+1,w
  7916  08F7  00B1               	movwf	?___fttol+1
  7917  08F8  0839               	movf	___fttol@lval,w
  7918  08F9  00B0               	movwf	?___fttol
  7919  08FA  0008               	return
  7920  08FB                     __end_of___fttol:	
  7921                           
  7922                           	psect	text34
  7923  098A                     __ptext34:	
  7924 ;; *************** function ___ftmul *****************
  7925 ;; Defined at:
  7926 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  f1              3    8[COMMON] float 
  7929 ;;  f2              3   11[COMMON] float 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  7932 ;;  sign            1    9[BANK0 ] unsigned char 
  7933 ;;  cntr            1    8[BANK0 ] unsigned char 
  7934 ;;  exp             1    4[BANK0 ] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  3    8[COMMON] float 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         6       0       0       0       0
  7945 ;;      Locals:         0       6       0       0       0
  7946 ;;      Temps:          0       4       0       0       0
  7947 ;;      Totals:         6      10       0       0       0
  7948 ;;Total ram usage:       16 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    1
  7951 ;; This function calls:
  7952 ;;		___ftpack
  7953 ;; This function is called by:
  7954 ;;		_Fuzzy
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function ___ftmul
  7960  098A                     ___ftmul:	
  7961                           
  7962                           ;incstack = 0
  7963                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7964  098A  0878               	movf	___ftmul@f1,w
  7965  098B  1283               	bcf	3,5	;RP0=0, select bank0
  7966  098C  1303               	bcf	3,6	;RP1=0, select bank0
  7967  098D  00A0               	movwf	??___ftmul
  7968  098E  0879               	movf	___ftmul@f1+1,w
  7969  098F  00A1               	movwf	??___ftmul+1
  7970  0990  087A               	movf	___ftmul@f1+2,w
  7971  0991  00A2               	movwf	??___ftmul+2
  7972  0992  1003               	clrc
  7973  0993  0D21               	rlf	??___ftmul+1,w
  7974  0994  0D22               	rlf	??___ftmul+2,w
  7975  0995  00A3               	movwf	??___ftmul+3
  7976  0996  0823               	movf	??___ftmul+3,w
  7977  0997  00A4               	movwf	___ftmul@exp
  7978  0998  08A4               	movf	___ftmul@exp,f
  7979  0999  1D03               	skipz
  7980  099A  29A2               	goto	i1l2329
  7981  099B  3000               	movlw	0
  7982  099C  00F8               	movwf	?___ftmul
  7983  099D  3000               	movlw	0
  7984  099E  00F9               	movwf	?___ftmul+1
  7985  099F  3000               	movlw	0
  7986  09A0  00FA               	movwf	?___ftmul+2
  7987  09A1  0008               	return
  7988  09A2                     i1l2329:	
  7989  09A2  087B               	movf	___ftmul@f2,w
  7990  09A3  00A0               	movwf	??___ftmul
  7991  09A4  087C               	movf	___ftmul@f2+1,w
  7992  09A5  00A1               	movwf	??___ftmul+1
  7993  09A6  087D               	movf	___ftmul@f2+2,w
  7994  09A7  00A2               	movwf	??___ftmul+2
  7995  09A8  1003               	clrc
  7996  09A9  0D21               	rlf	??___ftmul+1,w
  7997  09AA  0D22               	rlf	??___ftmul+2,w
  7998  09AB  00A3               	movwf	??___ftmul+3
  7999  09AC  0823               	movf	??___ftmul+3,w
  8000  09AD  00A9               	movwf	___ftmul@sign
  8001  09AE  08A9               	movf	___ftmul@sign,f
  8002  09AF  1D03               	skipz
  8003  09B0  29B8               	goto	i1l2335
  8004  09B1  3000               	movlw	0
  8005  09B2  00F8               	movwf	?___ftmul
  8006  09B3  3000               	movlw	0
  8007  09B4  00F9               	movwf	?___ftmul+1
  8008  09B5  3000               	movlw	0
  8009  09B6  00FA               	movwf	?___ftmul+2
  8010  09B7  0008               	return
  8011  09B8                     i1l2335:	
  8012  09B8  0829               	movf	___ftmul@sign,w
  8013  09B9  3E7B               	addlw	123
  8014  09BA  00A0               	movwf	??___ftmul
  8015  09BB  0820               	movf	??___ftmul,w
  8016  09BC  07A4               	addwf	___ftmul@exp,f
  8017  09BD  0878               	movf	___ftmul@f1,w
  8018  09BE  00A0               	movwf	??___ftmul
  8019  09BF  0879               	movf	___ftmul@f1+1,w
  8020  09C0  00A1               	movwf	??___ftmul+1
  8021  09C1  087A               	movf	___ftmul@f1+2,w
  8022  09C2  00A2               	movwf	??___ftmul+2
  8023  09C3  3010               	movlw	16
  8024  09C4                     u256_25:	
  8025  09C4  1003               	clrc
  8026  09C5  0CA2               	rrf	??___ftmul+2,f
  8027  09C6  0CA1               	rrf	??___ftmul+1,f
  8028  09C7  0CA0               	rrf	??___ftmul,f
  8029  09C8  3EFF               	addlw	-1
  8030  09C9  1D03               	skipz
  8031  09CA  29C4               	goto	u256_25
  8032  09CB  0820               	movf	??___ftmul,w
  8033  09CC  00A3               	movwf	??___ftmul+3
  8034  09CD  0823               	movf	??___ftmul+3,w
  8035  09CE  00A9               	movwf	___ftmul@sign
  8036  09CF  087B               	movf	___ftmul@f2,w
  8037  09D0  00A0               	movwf	??___ftmul
  8038  09D1  087C               	movf	___ftmul@f2+1,w
  8039  09D2  00A1               	movwf	??___ftmul+1
  8040  09D3  087D               	movf	___ftmul@f2+2,w
  8041  09D4  00A2               	movwf	??___ftmul+2
  8042  09D5  3010               	movlw	16
  8043  09D6                     u257_25:	
  8044  09D6  1003               	clrc
  8045  09D7  0CA2               	rrf	??___ftmul+2,f
  8046  09D8  0CA1               	rrf	??___ftmul+1,f
  8047  09D9  0CA0               	rrf	??___ftmul,f
  8048  09DA  3EFF               	addlw	-1
  8049  09DB  1D03               	skipz
  8050  09DC  29D6               	goto	u257_25
  8051  09DD  0820               	movf	??___ftmul,w
  8052  09DE  00A3               	movwf	??___ftmul+3
  8053  09DF  0823               	movf	??___ftmul+3,w
  8054  09E0  06A9               	xorwf	___ftmul@sign,f
  8055  09E1  3080               	movlw	128
  8056  09E2  00A0               	movwf	??___ftmul
  8057  09E3  0820               	movf	??___ftmul,w
  8058  09E4  05A9               	andwf	___ftmul@sign,f
  8059  09E5  17F9               	bsf	___ftmul@f1+1,7
  8060  09E6  17FC               	bsf	___ftmul@f2+1,7
  8061  09E7  30FF               	movlw	255
  8062  09E8  05FB               	andwf	___ftmul@f2,f
  8063  09E9  30FF               	movlw	255
  8064  09EA  05FC               	andwf	___ftmul@f2+1,f
  8065  09EB  3000               	movlw	0
  8066  09EC  05FD               	andwf	___ftmul@f2+2,f
  8067  09ED  3000               	movlw	0
  8068  09EE  00A5               	movwf	___ftmul@f3_as_product
  8069  09EF  3000               	movlw	0
  8070  09F0  00A6               	movwf	___ftmul@f3_as_product+1
  8071  09F1  3000               	movlw	0
  8072  09F2  00A7               	movwf	___ftmul@f3_as_product+2
  8073  09F3  3007               	movlw	7
  8074  09F4  00A0               	movwf	??___ftmul
  8075  09F5  0820               	movf	??___ftmul,w
  8076  09F6  00A8               	movwf	___ftmul@cntr
  8077  09F7                     i1l2347:	
  8078  09F7  1C78               	btfss	___ftmul@f1,0
  8079  09F8  2A07               	goto	i1l2351
  8080  09F9  087B               	movf	___ftmul@f2,w
  8081  09FA  07A5               	addwf	___ftmul@f3_as_product,f
  8082  09FB  087C               	movf	___ftmul@f2+1,w
  8083  09FC  1103               	clrz
  8084  09FD  1803               	skipnc
  8085  09FE  0A7C               	incf	___ftmul@f2+1,w
  8086  09FF  1D03               	btfss	3,2
  8087  0A00  07A6               	addwf	___ftmul@f3_as_product+1,f
  8088  0A01  087D               	movf	___ftmul@f2+2,w
  8089  0A02  1103               	clrz
  8090  0A03  1803               	skipnc
  8091  0A04  0A7D               	incf	___ftmul@f2+2,w
  8092  0A05  1D03               	btfss	3,2
  8093  0A06  07A7               	addwf	___ftmul@f3_as_product+2,f
  8094  0A07                     i1l2351:	
  8095  0A07  3001               	movlw	1
  8096  0A08                     u260_25:	
  8097  0A08  1003               	clrc
  8098  0A09  0CFA               	rrf	___ftmul@f1+2,f
  8099  0A0A  0CF9               	rrf	___ftmul@f1+1,f
  8100  0A0B  0CF8               	rrf	___ftmul@f1,f
  8101  0A0C  3EFF               	addlw	-1
  8102  0A0D  1D03               	skipz
  8103  0A0E  2A08               	goto	u260_25
  8104  0A0F  3001               	movlw	1
  8105  0A10                     u261_25:	
  8106  0A10  1003               	clrc
  8107  0A11  0DFB               	rlf	___ftmul@f2,f
  8108  0A12  0DFC               	rlf	___ftmul@f2+1,f
  8109  0A13  0DFD               	rlf	___ftmul@f2+2,f
  8110  0A14  3EFF               	addlw	-1
  8111  0A15  1D03               	skipz
  8112  0A16  2A10               	goto	u261_25
  8113  0A17  3001               	movlw	1
  8114  0A18  02A8               	subwf	___ftmul@cntr,f
  8115  0A19  1D03               	btfss	3,2
  8116  0A1A  29F7               	goto	i1l2347
  8117  0A1B  3009               	movlw	9
  8118  0A1C  00A0               	movwf	??___ftmul
  8119  0A1D  0820               	movf	??___ftmul,w
  8120  0A1E  00A8               	movwf	___ftmul@cntr
  8121  0A1F                     i1l2359:	
  8122  0A1F  1C78               	btfss	___ftmul@f1,0
  8123  0A20  2A2F               	goto	i1l2363
  8124  0A21  087B               	movf	___ftmul@f2,w
  8125  0A22  07A5               	addwf	___ftmul@f3_as_product,f
  8126  0A23  087C               	movf	___ftmul@f2+1,w
  8127  0A24  1103               	clrz
  8128  0A25  1803               	skipnc
  8129  0A26  0A7C               	incf	___ftmul@f2+1,w
  8130  0A27  1D03               	btfss	3,2
  8131  0A28  07A6               	addwf	___ftmul@f3_as_product+1,f
  8132  0A29  087D               	movf	___ftmul@f2+2,w
  8133  0A2A  1103               	clrz
  8134  0A2B  1803               	skipnc
  8135  0A2C  0A7D               	incf	___ftmul@f2+2,w
  8136  0A2D  1D03               	btfss	3,2
  8137  0A2E  07A7               	addwf	___ftmul@f3_as_product+2,f
  8138  0A2F                     i1l2363:	
  8139  0A2F  3001               	movlw	1
  8140  0A30                     u265_25:	
  8141  0A30  1003               	clrc
  8142  0A31  0CFA               	rrf	___ftmul@f1+2,f
  8143  0A32  0CF9               	rrf	___ftmul@f1+1,f
  8144  0A33  0CF8               	rrf	___ftmul@f1,f
  8145  0A34  3EFF               	addlw	-1
  8146  0A35  1D03               	skipz
  8147  0A36  2A30               	goto	u265_25
  8148  0A37  3001               	movlw	1
  8149  0A38                     u266_25:	
  8150  0A38  1003               	clrc
  8151  0A39  0CA7               	rrf	___ftmul@f3_as_product+2,f
  8152  0A3A  0CA6               	rrf	___ftmul@f3_as_product+1,f
  8153  0A3B  0CA5               	rrf	___ftmul@f3_as_product,f
  8154  0A3C  3EFF               	addlw	-1
  8155  0A3D  1D03               	skipz
  8156  0A3E  2A38               	goto	u266_25
  8157  0A3F  3001               	movlw	1
  8158  0A40  02A8               	subwf	___ftmul@cntr,f
  8159  0A41  1D03               	btfss	3,2
  8160  0A42  2A1F               	goto	i1l2359
  8161  0A43  0825               	movf	___ftmul@f3_as_product,w
  8162  0A44  00F0               	movwf	___ftpack@arg
  8163  0A45  0826               	movf	___ftmul@f3_as_product+1,w
  8164  0A46  00F1               	movwf	___ftpack@arg+1
  8165  0A47  0827               	movf	___ftmul@f3_as_product+2,w
  8166  0A48  00F2               	movwf	___ftpack@arg+2
  8167  0A49  0824               	movf	___ftmul@exp,w
  8168  0A4A  00A0               	movwf	??___ftmul
  8169  0A4B  0820               	movf	??___ftmul,w
  8170  0A4C  00F3               	movwf	___ftpack@exp
  8171  0A4D  0829               	movf	___ftmul@sign,w
  8172  0A4E  00A1               	movwf	??___ftmul+1
  8173  0A4F  0821               	movf	??___ftmul+1,w
  8174  0A50  00F4               	movwf	___ftpack@sign
  8175  0A51  160A  118A  2718   	fcall	___ftpack
  8176  0A54  0870               	movf	?___ftpack,w
  8177  0A55  00F8               	movwf	?___ftmul
  8178  0A56  0871               	movf	?___ftpack+1,w
  8179  0A57  00F9               	movwf	?___ftmul+1
  8180  0A58  0872               	movf	?___ftpack+2,w
  8181  0A59  00FA               	movwf	?___ftmul+2
  8182  0A5A  0008               	return
  8183  0A5B                     __end_of___ftmul:	
  8184                           
  8185                           	psect	text35
  8186  1718                     __ptext35:	
  8187 ;; *************** function ___ftpack *****************
  8188 ;; Defined at:
  8189 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  arg             3    0[COMMON] unsigned um
  8192 ;;  exp             1    3[COMMON] unsigned char 
  8193 ;;  sign            1    4[COMMON] unsigned char 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  3    0[COMMON] float 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8205 ;;      Params:         5       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0
  8207 ;;      Temps:          3       0       0       0       0
  8208 ;;      Totals:         8       0       0       0       0
  8209 ;;Total ram usage:        8 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		___ftadd
  8215 ;;		___ftdiv
  8216 ;;		___ftmul
  8217 ;;		___lwtoft
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function ___ftpack
  8223  1718                     ___ftpack:	
  8224                           
  8225                           ;incstack = 0
  8226                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8227  1718  0873               	movf	___ftpack@exp,w
  8228  1719  1903               	btfsc	3,2
  8229  171A  2F20               	goto	i1l2011
  8230  171B  0872               	movf	___ftpack@arg+2,w
  8231  171C  0471               	iorwf	___ftpack@arg+1,w
  8232  171D  0470               	iorwf	___ftpack@arg,w
  8233  171E  1D03               	skipz
  8234  171F  2F33               	goto	i1l2017
  8235  1720                     i1l2011:	
  8236  1720  3000               	movlw	0
  8237  1721  00F0               	movwf	?___ftpack
  8238  1722  3000               	movlw	0
  8239  1723  00F1               	movwf	?___ftpack+1
  8240  1724  3000               	movlw	0
  8241  1725  00F2               	movwf	?___ftpack+2
  8242  1726  0008               	return
  8243  1727                     i1l2015:	
  8244  1727  3001               	movlw	1
  8245  1728  00F5               	movwf	??___ftpack
  8246  1729  0875               	movf	??___ftpack,w
  8247  172A  07F3               	addwf	___ftpack@exp,f
  8248  172B  3001               	movlw	1
  8249  172C                     u176_25:	
  8250  172C  1003               	clrc
  8251  172D  0CF2               	rrf	___ftpack@arg+2,f
  8252  172E  0CF1               	rrf	___ftpack@arg+1,f
  8253  172F  0CF0               	rrf	___ftpack@arg,f
  8254  1730  3EFF               	addlw	-1
  8255  1731  1D03               	skipz
  8256  1732  2F2C               	goto	u176_25
  8257  1733                     i1l2017:	
  8258  1733  30FE               	movlw	254
  8259  1734  0572               	andwf	___ftpack@arg+2,w
  8260  1735  1903               	btfsc	3,2
  8261  1736  2F4E               	goto	i1l703
  8262  1737  2F27               	goto	i1l2015
  8263  1738                     i1l2019:	
  8264  1738  3001               	movlw	1
  8265  1739  00F5               	movwf	??___ftpack
  8266  173A  0875               	movf	??___ftpack,w
  8267  173B  07F3               	addwf	___ftpack@exp,f
  8268  173C  3001               	movlw	1
  8269  173D  07F0               	addwf	___ftpack@arg,f
  8270  173E  3000               	movlw	0
  8271  173F  1803               	skipnc
  8272  1740  3001               	movlw	1
  8273  1741  07F1               	addwf	___ftpack@arg+1,f
  8274  1742  3000               	movlw	0
  8275  1743  1803               	skipnc
  8276  1744  3001               	movlw	1
  8277  1745  07F2               	addwf	___ftpack@arg+2,f
  8278  1746  3001               	movlw	1
  8279  1747                     u178_25:	
  8280  1747  1003               	clrc
  8281  1748  0CF2               	rrf	___ftpack@arg+2,f
  8282  1749  0CF1               	rrf	___ftpack@arg+1,f
  8283  174A  0CF0               	rrf	___ftpack@arg,f
  8284  174B  3EFF               	addlw	-1
  8285  174C  1D03               	skipz
  8286  174D  2F47               	goto	u178_25
  8287  174E                     i1l703:	
  8288  174E  30FF               	movlw	255
  8289  174F  0572               	andwf	___ftpack@arg+2,w
  8290  1750  1903               	btfsc	3,2
  8291  1751  2F5D               	goto	i1l2027
  8292  1752  2F38               	goto	i1l2019
  8293  1753                     i1l2025:	
  8294  1753  3001               	movlw	1
  8295  1754  02F3               	subwf	___ftpack@exp,f
  8296  1755  3001               	movlw	1
  8297  1756                     u180_25:	
  8298  1756  1003               	clrc
  8299  1757  0DF0               	rlf	___ftpack@arg,f
  8300  1758  0DF1               	rlf	___ftpack@arg+1,f
  8301  1759  0DF2               	rlf	___ftpack@arg+2,f
  8302  175A  3EFF               	addlw	-1
  8303  175B  1D03               	skipz
  8304  175C  2F56               	goto	u180_25
  8305  175D                     i1l2027:	
  8306  175D  1FF1               	btfss	___ftpack@arg+1,7
  8307  175E  2F53               	goto	i1l2025
  8308  175F  1873               	btfsc	___ftpack@exp,0
  8309  1760  2F67               	goto	i1l709
  8310  1761  30FF               	movlw	255
  8311  1762  05F0               	andwf	___ftpack@arg,f
  8312  1763  307F               	movlw	127
  8313  1764  05F1               	andwf	___ftpack@arg+1,f
  8314  1765  30FF               	movlw	255
  8315  1766  05F2               	andwf	___ftpack@arg+2,f
  8316  1767                     i1l709:	
  8317  1767  1003               	clrc
  8318  1768  0CF3               	rrf	___ftpack@exp,f
  8319  1769  0873               	movf	___ftpack@exp,w
  8320  176A  00F5               	movwf	??___ftpack
  8321  176B  01F6               	clrf	??___ftpack+1
  8322  176C  01F7               	clrf	??___ftpack+2
  8323  176D  3010               	movlw	16
  8324  176E                     u183_25:	
  8325  176E  1003               	clrc
  8326  176F  0DF5               	rlf	??___ftpack,f
  8327  1770  0DF6               	rlf	??___ftpack+1,f
  8328  1771  0DF7               	rlf	??___ftpack+2,f
  8329  1772  3EFF               	addlw	-1
  8330  1773  1D03               	skipz
  8331  1774  2F6E               	goto	u183_25
  8332  1775  0875               	movf	??___ftpack,w
  8333  1776  04F0               	iorwf	___ftpack@arg,f
  8334  1777  0876               	movf	??___ftpack+1,w
  8335  1778  04F1               	iorwf	___ftpack@arg+1,f
  8336  1779  0877               	movf	??___ftpack+2,w
  8337  177A  04F2               	iorwf	___ftpack@arg+2,f
  8338  177B  0874               	movf	___ftpack@sign,w
  8339  177C  1903               	btfsc	3,2
  8340  177D  0008               	return
  8341  177E  17F2               	bsf	___ftpack@arg+2,7
  8342  177F  0008               	return
  8343  1780                     __end_of___ftpack:	
  8344  007E                     btemp	set	126	;btemp
  8345  007E                     wtemp	set	126
  8346  007E                     wtemp0	set	126
  8347  0080                     wtemp1	set	128
  8348  0082                     wtemp2	set	130
  8349  0084                     wtemp3	set	132
  8350  0086                     wtemp4	set	134
  8351  0088                     wtemp5	set	136
  8352  007F                     wtemp6	set	127
  8353  007E                     ttemp	set	126
  8354  007E                     ttemp0	set	126
  8355  0081                     ttemp1	set	129
  8356  0084                     ttemp2	set	132
  8357  0087                     ttemp3	set	135
  8358  007F                     ttemp4	set	127
  8359  007E                     ltemp	set	126
  8360  007E                     ltemp0	set	126
  8361  0082                     ltemp1	set	130
  8362  0086                     ltemp2	set	134
  8363  0080                     ltemp3	set	128


Data Sizes:
    Strings     77
    Constant    0
    Data        10
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     26      74
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___wmul
    _ISR->i1_PWM_DutyCycle2
    _send->___wmul
    ___wmul->___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1491
                                             23 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   61341
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     573
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     348
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___lwtoft
     ___ftpack
   ___wmul
     ___lwdiv (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___lwdiv (ARG)
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BC      12        0.0%
ABS                  0      0      BC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 11:09:08 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C9     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _tf 006D                          fsr 0004         ___wmul@multiplicand 007A  
        ??i1_PWM_DutyCycle2 007C                ___ftadd@exp1 002F                ___ftadd@exp2 002E  
             _contagens_tm0 00BD                ___ftadd@sign 002D                         l597 090D  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 0D5F  
                       _rpm 00C3                         fsr0 0004                         _pwm 00E8  
                       _sum 00AF  __size_of_USART_WriteString 001C                         indf 0000  
              __CFG_FOSC$HS 0000           ??_LCD_WriteString 00CD                __CFG_LVP$OFF 0000  
                      ?_ISR 0070                ___ftdiv@cntr 003A                ___ftdiv@sign 003F  
                      l2301 092E          LCD_WriteString@Str 00CB                        l2311 0966  
                      l2303 093E                        l2315 0973                        l2319 0981  
                      l2293 091E                        l2741 1601                        l2727 153D  
                      l2923 0AEA                        STR_1 1049                        STR_2 1038  
                      STR_3 1057                        STR_4 1010                        u3045 1585  
                      u2505 0955                        u3065 167B                        u2515 0967  
                      u3407 0836                        u3095 1564                        u3417 0842  
                      u3427 0850                        u2475 0932                        u3347 0AE3  
                      u3437 085E                        u3357 0B2B                        u3447 086A  
                      u3367 14D4                        u2495 0940                        u3457 1549  
                      u3377 080C                        u3467 15E4                        u3387 081C  
                      u3477 15F2                        u3397 082A                        u3487 15FE  
                      u3497 14BD                        _OERR 00C1                        _TMR0 0001  
                      _TMR1 000E                        _main 0A5B                ___ftpack@arg 0070  
        __size_of_LCD_Clear 0029                ___ftpack@exp 0073                        _send 1780  
                      btemp 007E            __end_of_ADC_Init 1498                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 14C3                ___ftmul@cntr 0028  
              ___ftmul@sign 0029     __end_of_USART_WriteChar 1450                       ??_ISR 0069  
              ___fttol@exp1 003D                ___fttol@lval 0039                 ?_TIMER0_Set 0070  
          __end_of_LCD_Init 086D             __end_of___aldiv 098A                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 0C3B                       ?_send 0070  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 07E8             __end_of___ftneg 146A  
           __end_of___ftmul 0A5B                       _T1CON 0010             __end_of___fttol 08FB  
           __end_of___lwdiv 1670                       i1l110 0D56                       i1l120 0FF7  
                     i1l222 1449                       i1l147 00FA                       i1l178 0E9D  
                     i1l542 159B                       i1l703 174E                       i1l732 0BDA  
                     i1l709 1767                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000                       _Fuzzy 0044  
           __end_of_max_val 152F               ___ftpack@sign 0074                       _trimf 0C3B  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 15D8                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
            ??_LCD_WriteCmd 00C9              ?_LCD_WriteData 0070                 ?_USART_Init 00D8  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 0B32  
              __end_of_send 1800                      ??_main 00E0               ___fttol@sign1 0038  
                    ??_send 0020                ?_TIMER0_Init 0070           __end_of_LCD_Clear 1601  
                Fuzzy@a_241 0059                  Fuzzy@a_242 005B                      ?_Fuzzy 0070  
                Fuzzy@freio 0052                  Fuzzy@reduz 0060                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _CCPR2L 001B                      _EECON2 018D            __end_of___ftpack 1780  
                    ?_trimf 0040                      i1l2011 1720                      i1l2015 1727  
                    i1l2025 1753                      i1l2017 1733                      i1l2201 0D39  
                    i1l2027 175D                      i1l2019 1738                      i1l2109 0C21  
                    i1l2053 0B62                      i1l2125 075E                      i1l2071 0B8B  
                    i1l2119 0748                      i1l2231 0FDA                      i1l2081 0BB1  
                    i1l2049 0B5B                      i1l2225 0F55                      i1l2163 1709  
                    i1l2091 0BD6                      i1l2083 0BB5                      i1l2059 0B71  
                    i1l2147 07C2                      i1l2139 07A3                      i1l2219 0F23  
                    i1l2413 08F2                      i1l2405 08D6                      i1l2077 0BA0  
                    i1l2253 14F6                      i1l2351 0A07                      i1l2335 09B8  
                    i1l2407 08E1                      i1l2159 16E2                      i1l2095 0BEC  
                    i1l2079 0BAC                      i1l2329 09A2                      i1l2409 08E4  
                    i1l2089 0BCA                      i1l2513 0243                      i1l2273 1593  
                    i1l2363 0A2F                      i1l2347 09F7                      i1l2099 0BFE  
                    i1l2195 0CB4                      u201_25 0BB6                      i1l2509 01C9  
                    i1l2359 0A1F                      i1l2535 034D                      i1l2519 02AA  
                    i1l2545 0428                      i1l2617 07FD                      i1l2609 07F1  
                    i1l2457 17F5                      i1l2449 17D9                      i1l2801 0D7B  
                    i1l2379 0887                      i1l2563 0536                      i1l2539 03C1  
                    i1l2491 0118                      i1l2397 08B9                      i1l2573 05BA  
                    i1l2821 0DC1                      i1l2813 0DA5                      i1l2805 0D89  
                    i1l2399 08C9                      i1l2559 04BC                      i1l2495 0135  
                    i1l2487 00FB                      i1l2569 059D                      i1l2833 0DEB  
                    i1l2825 0DCF                      i1l2817 0DB3                      i1l2809 0D97  
                    i1l2579 05EC                      i1l2845 0E22                      i1l2837 0DF9  
                    i1l2829 0DDD                      i1l2775 165E                      i1l2767 163A  
                    i1l2847 0E25                      i1l2769 1648                      i1l2873 0E98  
                    i1l2779 1669                      i1l2859 0E42                      i1l2875 0E99  
                    u204_25 0BCB                      u212_25 0770                      u221_21 16FC  
                    u221_22 16FD                      u221_23 1702                      u221_24 1703  
                    u213_25 0782                      u214_25 07A4                      u215_25 07B5  
                    u311_25 163D                      u216_25 07C3                      u313_25 1649  
                    u241_25 159C                      u314_25 1655                      u242_25 15A3  
                    u219_21 16D5                      u219_22 16D6                      u219_23 16DB  
                    u219_24 16DC                      u315_25 165F                      u180_25 1756  
                    u260_25 0A08                      u261_25 0A10                      u183_25 176E  
                    u176_25 172C                      u256_25 09C4                      u272_25 08BA  
                    u265_25 0A30                      u257_25 09D6            __end_of___lwtoft 14AC  
                    u178_25 1747                      u266_25 0A38                      u290_25 034B  
                    u275_25 08D8                      u195_25 0B8C                      u292_25 0426  
                    u269_25 088E                      u285_25 01C7         __size_of_TIMER0_Set 0008  
                    u198_25 0BA1                      u278_25 14EB                      u294_25 04BA  
                    u287_25 02A8                      u296_25 059B                      _SSPADD 0093  
                    _SSPBUF 0013                      Fuzzy@a 0057            LCD_WriteCmd@Byte 00CA  
                    ___ftge 16B9                   ??___aldiv 00D1                      ___wmul 1591  
                 ??___ftadd 0029              _PWM_DutyCycle1 154F              _PWM_DutyCycle2 1570  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007C  
                    _deltaV 00BF                   ??___ftmul 0020                   ??___fttol 0034  
                 ??___lwdiv 0074                      _buffer 0190                      _fitemp 00A3  
     USART_ReceiveChar@byte 0074                      _trapmf 0EAA                      _pulsos 00C1  
                    _status 00C7       ___ftmul@f3_as_product 0025                   ??_max_val 007C  
                 ?_ADC_Init 0070                      saved_w 007E         __size_of_USART_Init 0049  
                    trimf@a 0043                      trimf@b 0046                      trimf@c 0049  
                    trimf@x 0040               ?i1_TIMER0_Set 0070     __end_of__initialization 0040  
                 ?_LCD_Init 0070                  ___ftadd@f1 0023                  ___ftadd@f2 0026  
           ??_LCD_WriteData 00C9                  ___ftge@ff1 0030                  ___ftge@ff2 0033  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020      __end_of_PWM_DutyCycle1 1570      __end_of_PWM_DutyCycle2 1591  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 0030  
            __pcstackCOMMON 0070               __end_of_Fuzzy 0730                __pidataBANK0 1438  
              __pidataBANK1 1441               LCD_Cursor@Col 00C9               LCD_Cursor@Row 00CB  
              ??_LCD_Cursor 00CA             _LCD_WriteString 1601               __end_of_trimf 0D5F  
                ___lwtoft@c 0078                   ?_PWM_Init 0070              _OPTION_REGbits 0081  
                ??_ADC_Init 00C9        __end_of_LCD_WriteCmd 14C3                     ??_Fuzzy 007E  
 __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070                     ??_trimf 007C  
                __pbssBANK1 00A0                  __pbssBANK3 0190          __end_of_LCD_Cursor 154F  
                ??_LCD_Init 00CB               Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C9  
           ?_PWM_DutyCycle2 00C9                  __pmaintext 0A5B                 Fuzzy@mantem 005D  
                   ?___ftge 0030                     ?___wmul 0078                  __pintentry 0004  
              ??_TIMER0_Set 00C9                     _CCP1CON 0017                     _CCP2CON 001D  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 00C9  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 1458     __end_of_LCD_WriteString 1632  
                 _ADCResult 00BB                ??_USART_Init 00DC           LCD_WriteData@Byte 00CA  
                   ___aldiv 08FB             __size_of___ftge 005F                     ___ftadd 0B32  
                   ___ftdiv 0730                     ___ftneg 1460             __size_of___wmul 0023  
                   ___ftmul 098A                     ___fttol 086D                     ___lwdiv 1632  
                ??___ftpack 0075                     __ptext1 1670                     __ptext2 08FB  
                   __ptext3 1450                     __ptext4 146A                     __ptext5 15B4  
                   __ptext6 1570                     __ptext7 154F                     __ptext8 1601  
                   __ptext9 14C3                  _pas_cooler 00E6                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 014B                   _T1CONbits 0010  
                 _T2CONbits 0012                     _max_val 1511            ___aldiv@dividend 00CD  
                 _LCD_Clear 15D8          __end_of_USART_Init 16B9                     clrloop0 1459  
      end_of_initialization 0040                   _RCSTAbits 0018            ___aldiv@quotient 00D4  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 1441       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 00C5                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 14DA           __size_of_ADC_Init 0012         PWM_DutyCycle1@valor 00C9  
                _total_area 00B2         PWM_DutyCycle2@valor 00C9                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 00CB           __size_of_LCD_Init 006B                _LCD_WriteCmd 14AC  
               ___ftmul@exp 0024              __end_of___ftge 1718              __end_of___wmul 15B4  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 0EAA            ??_PWM_DutyCycle1 00CB  
          ??_PWM_DutyCycle2 00CB       __end_of_LCD_WriteData 14DA           _USART_ReceiveChar 07E8  
                  ??___ftge 0036          ?_USART_ReceiveChar 0070                    ??___wmul 007C  
                init_fetch0 1475                 __pdataBANK0 006D                 __pdataBANK1 00E3  
              send@checksum 0021                    ??_trapmf 007C              send@velocidade 0022  
       ??_USART_ReceiveChar 0073           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00C9  
               ??_LCD_Clear 00CB         __end_of__stringdata 105D   __end_of_USART_ReceiveChar 0800  
     __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072         TIMER0_Set@contagens 00C9  
              Fuzzy@aumenta 0063                    ?___aldiv 00C9                    ?___ftadd 0023  
                  ?___ftdiv 0030                    ?___ftneg 0020                    ?___ftmul 0078  
                  ?___fttol 0030                    ?___lwdiv 0070                   __pstrings 1000  
                 _ativa_fan 00A0               ??_TIMER0_Init 00C9          USART_Init@BaudRate 00D8  
                  ?_max_val 003C                    _ADC_Init 1486                   _fop_rule1 00A6  
                 _fop_rule2 00A9                   _fop_rule3 00AC              __size_of_Fuzzy 06EC  
          ___lwdiv@quotient 0075              __size_of_trimf 0124           ??_USART_WriteChar 0070  
              i1_TIMER0_Set 143B             ___aldiv@divisor 00C9           interrupt_function 0004  
           ___aldiv@counter 00D2                    _LCD_Init 0802              ___wmul@product 007C  
                 clear_ram0 1458                    _PIE1bits 008C                    _PIE2bits 008D  
                  _PIR1bits 000C                    _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 14F5  
               _display_rpm 019A                  _ADCON0bits 001F                 __stringbase 100F  
                _ADCON1bits 009F                 __stringdata 1010                    _PWM_Init 15B4  
         ___wmul@multiplier 0078         __end_of_TIMER0_Init 1475  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C                    Fuzzy@tip 0054            __size_of___aldiv 008F  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D1            __size_of___fttol 008E            __size_of___lwdiv 003E  
                  ___ftpack 1718          __end_of__stringtab 1010                    ___lwtoft 1498  
                 send@index 0024            __size_of_max_val 001E             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 14F5                    __ptext10 0802  
                  __ptext11 152F                    __ptext20 07E8                    __ptext12 15D8  
                  __ptext21 14F5                    __ptext13 14AC                    __ptext30 1511  
                  __ptext22 1448                    __ptext14 1486                    __ptext31 16B9  
                  __ptext23 0044                    __ptext15 0D5F                    __ptext32 1498  
                  __ptext24 14DA                    __ptext16 143B                    __ptext33 086D  
                  __ptext25 0C3B                    __ptext17 1780                    __ptext34 098A  
                  __ptext26 0EAA                    __ptext18 1591                    __ptext35 1718  
                  __ptext27 1460                    __ptext19 1632                    __ptext28 0730  
                  __ptext29 0B32          ?_USART_WriteString 0070               __size_of_main 00D7  
             __size_of_send 0080         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                  _setpoint 00E3                  _LCD_Cursor 152F    __size_of_LCD_WriteString 0031  
               _TIMER0_Init 146A                  _INTCONbits 000B   __end_of_USART_WriteString 1511  
                  max_val@a 003C                    max_val@b 003F                    init_ram0 1479  
                  intlevel1 0000                   stringcode 100A        USART_WriteString@str 0072  
                _TIMER0_Set 1450                    trapmf@ua 004F             _USART_WriteChar 1448  
                  stringdir 100A                    stringtab 1000                ___aldiv@sign 00D3  
    __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E  
                _SSPCONbits 0014                  _USART_Init 1670  
