

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 24 16:20:25 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  000E                     	;# 
   370  000F                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  0088                     	;# 
   394  0089                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  010E                     	;# 
   411  010F                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0088                     	;# 
   454  0089                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0094                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594                           
   595                           	psect	idataBANK1
   596  07FC                     __pidataBANK1:	
   597                           
   598                           ;initializer for _pas_cooler
   599  07FC  3407               	retlw	7
   600  07FD  3400               	retlw	0
   601                           
   602                           ;initializer for _tf
   603  07FE  3414               	retlw	20
   604  07FF  3400               	retlw	0
   605                           
   606                           	psect	stringtext
   607  1000                     __pstringtext:	
   608  1000                     stringtab:	
   609  1000                     __stringtab:	
   610                           
   611                           ;	String table - string pointers are 2 bytes each
   612  1000  1BFF               	btfsc	btemp+1,7
   613  1001  280A               	ljmp	stringcode
   614  1002  1383               	bcf	3,7
   615  1003  187F               	btfsc	btemp+1,0
   616  1004  1783               	bsf	3,7
   617  1005  0800               	movf	0,w
   618  1006  0A84               	incf	4,f
   619  1007  1903               	skipnz
   620  1008  0AFF               	incf	btemp+1,f
   621  1009  0008               	return
   622  100A                     stringcode:	
   623  100A  087F               	movf	btemp+1,w
   624  100B  397F               	andlw	127
   625  100C  008A               	movwf	10
   626  100D  0804               	movf	4,w
   627  100E  0A84               	incf	4,f
   628  100F  1903               	skipnz
   629  1010  0AFF               	incf	btemp+1,f
   630  1011  0082               	movwf	2
   631  1012                     __stringbase:	
   632  1012                     __end_of__stringtab:	
   633  1012                     _dpowers:	
   634  1012  3401               	retlw	1
   635  1013  3400               	retlw	0
   636  1014  340A               	retlw	10
   637  1015  3400               	retlw	0
   638  1016  3464               	retlw	100
   639  1017  3400               	retlw	0
   640  1018  34E8               	retlw	232
   641  1019  3403               	retlw	3
   642  101A  3410               	retlw	16
   643  101B  3427               	retlw	39
   644  101C                     __end_of_dpowers:	
   645  000E                     _TMR1	set	14
   646  001F                     _ADCON0bits	set	31
   647  001E                     _ADRESH	set	30
   648  0017                     _CCP1CON	set	23
   649  0017                     _CCP1CONbits	set	23
   650  001D                     _CCP2CON	set	29
   651  001D                     _CCP2CONbits	set	29
   652  0015                     _CCPR1L	set	21
   653  001B                     _CCPR2L	set	27
   654  000B                     _INTCONbits	set	11
   655  000C                     _PIR1bits	set	12
   656  000D                     _PIR2bits	set	13
   657  0005                     _PORTA	set	5
   658  0006                     _PORTB	set	6
   659  0006                     _PORTBbits	set	6
   660  0007                     _PORTC	set	7
   661  0008                     _PORTD	set	8
   662  0009                     _PORTE	set	9
   663  0009                     _PORTEbits	set	9
   664  001A                     _RCREG	set	26
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0014                     _SSPCONbits	set	20
   668  0010                     _T1CON	set	16
   669  0010                     _T1CONbits	set	16
   670  0012                     _T2CONbits	set	18
   671  0001                     _TMR0	set	1
   672  000F                     _TMR1H	set	15
   673  000E                     _TMR1L	set	14
   674  0019                     _TXREG	set	25
   675  00C1                     _OERR	set	193
   676  009F                     _ADCON1bits	set	159
   677  009E                     _ADRESL	set	158
   678  0081                     _OPTION_REGbits	set	129
   679  008C                     _PIE1bits	set	140
   680  008D                     _PIE2bits	set	141
   681  0092                     _PR2	set	146
   682  0099                     _SPBRG	set	153
   683  0093                     _SSPADD	set	147
   684  0091                     _SSPCON2	set	145
   685  0091                     _SSPCON2bits	set	145
   686  0094                     _SSPSTATbits	set	148
   687  0085                     _TRISA	set	133
   688  0086                     _TRISB	set	134
   689  0087                     _TRISC	set	135
   690  0088                     _TRISD	set	136
   691  0089                     _TRISE	set	137
   692  0098                     _TXSTAbits	set	152
   693  010D                     _EEADR	set	269
   694  010C                     _EEDATA	set	268
   695  018C                     _EECON1bits	set	396
   696  018D                     _EECON2	set	397
   697  101C                     __stringdata:	
   698  101C                     STR_19:	
   699  101C  340A               	retlw	10
   700  101D  340D               	retlw	13
   701  101E  3420               	retlw	32	;' '
   702  101F  342D               	retlw	45	;'-'
   703  1020  342D               	retlw	45	;'-'
   704  1021  342D               	retlw	45	;'-'
   705  1022  342D               	retlw	45	;'-'
   706  1023  342D               	retlw	45	;'-'
   707  1024  342D               	retlw	45	;'-'
   708  1025  342D               	retlw	45	;'-'
   709  1026  3420               	retlw	32	;' '
   710  1027  3445               	retlw	69	;'E'
   711  1028  3453               	retlw	83	;'S'
   712  1029  3454               	retlw	84	;'T'
   713  102A  344F               	retlw	79	;'O'
   714  102B  3455               	retlw	85	;'U'
   715  102C  3452               	retlw	82	;'R'
   716  102D  344F               	retlw	79	;'O'
   717  102E  3420               	retlw	32	;' '
   718  102F  3444               	retlw	68	;'D'
   719  1030  3445               	retlw	69	;'E'
   720  1031  3420               	retlw	32	;' '
   721  1032  3450               	retlw	80	;'P'
   722  1033  3449               	retlw	73	;'I'
   723  1034  344C               	retlw	76	;'L'
   724  1035  3448               	retlw	72	;'H'
   725  1036  3441               	retlw	65	;'A'
   726  1037  3420               	retlw	32	;' '
   727  1038  342D               	retlw	45	;'-'
   728  1039  342D               	retlw	45	;'-'
   729  103A  342D               	retlw	45	;'-'
   730  103B  342D               	retlw	45	;'-'
   731  103C  342D               	retlw	45	;'-'
   732  103D  342D               	retlw	45	;'-'
   733  103E  342D               	retlw	45	;'-'
   734  103F  3420               	retlw	32	;' '
   735  1040  340A               	retlw	10
   736  1041  340D               	retlw	13
   737  1042  3420               	retlw	32	;' '
   738  1043  3400               	retlw	0
   739  1044                     STR_11:	
   740  1044  3449               	retlw	73	;'I'
   741  1045  346E               	retlw	110	;'n'
   742  1046  3469               	retlw	105	;'i'
   743  1047  3463               	retlw	99	;'c'
   744  1048  3469               	retlw	105	;'i'
   745  1049  3461               	retlw	97	;'a'
   746  104A  346C               	retlw	108	;'l'
   747  104B  3469               	retlw	105	;'i'
   748  104C  347A               	retlw	122	;'z'
   749  104D  3461               	retlw	97	;'a'
   750  104E  346E               	retlw	110	;'n'
   751  104F  3464               	retlw	100	;'d'
   752  1050  346F               	retlw	111	;'o'
   753  1051  3420               	retlw	32	;' '
   754  1052  346F               	retlw	111	;'o'
   755  1053  3420               	retlw	32	;' '
   756  1054  3450               	retlw	80	;'P'
   757  1055  3449               	retlw	73	;'I'
   758  1056  3443               	retlw	67	;'C'
   759  1057  3431               	retlw	49	;'1'
   760  1058  3436               	retlw	54	;'6'
   761  1059  3446               	retlw	70	;'F'
   762  105A  3438               	retlw	56	;'8'
   763  105B  3437               	retlw	55	;'7'
   764  105C  3437               	retlw	55	;'7'
   765  105D  3441               	retlw	65	;'A'
   766  105E  340A               	retlw	10
   767  105F  340D               	retlw	13
   768  1060  3400               	retlw	0
   769  1061                     STR_12:	
   770  1061  3455               	retlw	85	;'U'
   771  1062  3453               	retlw	83	;'S'
   772  1063  3441               	retlw	65	;'A'
   773  1064  3452               	retlw	82	;'R'
   774  1065  3454               	retlw	84	;'T'
   775  1066  343A               	retlw	58	;':'
   776  1067  3420               	retlw	32	;' '
   777  1068  3431               	retlw	49	;'1'
   778  1069  3431               	retlw	49	;'1'
   779  106A  3435               	retlw	53	;'5'
   780  106B  342E               	retlw	46	;'.'
   781  106C  3432               	retlw	50	;'2'
   782  106D  3430               	retlw	48	;'0'
   783  106E  3430               	retlw	48	;'0'
   784  106F  3462               	retlw	98	;'b'
   785  1070  3470               	retlw	112	;'p'
   786  1071  3473               	retlw	115	;'s'
   787  1072  340A               	retlw	10
   788  1073  340D               	retlw	13
   789  1074  3400               	retlw	0
   790  1075                     STR_13:	
   791  1075  3449               	retlw	73	;'I'
   792  1076  346E               	retlw	110	;'n'
   793  1077  3469               	retlw	105	;'i'
   794  1078  3463               	retlw	99	;'c'
   795  1079  3469               	retlw	105	;'i'
   796  107A  3461               	retlw	97	;'a'
   797  107B  346C               	retlw	108	;'l'
   798  107C  3469               	retlw	105	;'i'
   799  107D  347A               	retlw	122	;'z'
   800  107E  3461               	retlw	97	;'a'
   801  107F  346E               	retlw	110	;'n'
   802  1080  3464               	retlw	100	;'d'
   803  1081  346F               	retlw	111	;'o'
   804  1082  342E               	retlw	46	;'.'
   805  1083  342E               	retlw	46	;'.'
   806  1084  342E               	retlw	46	;'.'
   807  1085  3400               	retlw	0
   808  1086                     STR_9:	
   809  1086  340A               	retlw	10
   810  1087  340D               	retlw	13
   811  1088  3470               	retlw	112	;'p'
   812  1089  3477               	retlw	119	;'w'
   813  108A  346D               	retlw	109	;'m'
   814  108B  3420               	retlw	32	;' '
   815  108C  343D               	retlw	61	;'='
   816  108D  3420               	retlw	32	;' '
   817  108E  3431               	retlw	49	;'1'
   818  108F  3430               	retlw	48	;'0'
   819  1090  3430               	retlw	48	;'0'
   820  1091  3430               	retlw	48	;'0'
   821  1092  340A               	retlw	10
   822  1093  340D               	retlw	13
   823  1094  3400               	retlw	0
   824  1095                     STR_10:	
   825  1095  340A               	retlw	10
   826  1096  340D               	retlw	13
   827  1097  3470               	retlw	112	;'p'
   828  1098  3477               	retlw	119	;'w'
   829  1099  346D               	retlw	109	;'m'
   830  109A  3420               	retlw	32	;' '
   831  109B  343D               	retlw	61	;'='
   832  109C  3420               	retlw	32	;' '
   833  109D  3431               	retlw	49	;'1'
   834  109E  3430               	retlw	48	;'0'
   835  109F  3432               	retlw	50	;'2'
   836  10A0  3433               	retlw	51	;'3'
   837  10A1  340A               	retlw	10
   838  10A2  340D               	retlw	13
   839  10A3  3400               	retlw	0
   840  10A4                     STR_6:	
   841  10A4  340A               	retlw	10
   842  10A5  340D               	retlw	13
   843  10A6  3470               	retlw	112	;'p'
   844  10A7  3477               	retlw	119	;'w'
   845  10A8  346D               	retlw	109	;'m'
   846  10A9  3420               	retlw	32	;' '
   847  10AA  343D               	retlw	61	;'='
   848  10AB  3420               	retlw	32	;' '
   849  10AC  3435               	retlw	53	;'5'
   850  10AD  3431               	retlw	49	;'1'
   851  10AE  3432               	retlw	50	;'2'
   852  10AF  340A               	retlw	10
   853  10B0  340D               	retlw	13
   854  10B1  3400               	retlw	0
   855  10B2                     STR_5:	
   856  10B2  340A               	retlw	10
   857  10B3  340D               	retlw	13
   858  10B4  3470               	retlw	112	;'p'
   859  10B5  3477               	retlw	119	;'w'
   860  10B6  346D               	retlw	109	;'m'
   861  10B7  3420               	retlw	32	;' '
   862  10B8  343D               	retlw	61	;'='
   863  10B9  3420               	retlw	32	;' '
   864  10BA  3432               	retlw	50	;'2'
   865  10BB  3435               	retlw	53	;'5'
   866  10BC  3436               	retlw	54	;'6'
   867  10BD  340A               	retlw	10
   868  10BE  340D               	retlw	13
   869  10BF  3400               	retlw	0
   870  10C0                     STR_8:	
   871  10C0  340A               	retlw	10
   872  10C1  340D               	retlw	13
   873  10C2  3470               	retlw	112	;'p'
   874  10C3  3477               	retlw	119	;'w'
   875  10C4  346D               	retlw	109	;'m'
   876  10C5  3420               	retlw	32	;' '
   877  10C6  343D               	retlw	61	;'='
   878  10C7  3420               	retlw	32	;' '
   879  10C8  3438               	retlw	56	;'8'
   880  10C9  3439               	retlw	57	;'9'
   881  10CA  3436               	retlw	54	;'6'
   882  10CB  340A               	retlw	10
   883  10CC  340D               	retlw	13
   884  10CD  3400               	retlw	0
   885  10CE                     STR_4:	
   886  10CE  340A               	retlw	10
   887  10CF  340D               	retlw	13
   888  10D0  3470               	retlw	112	;'p'
   889  10D1  3477               	retlw	119	;'w'
   890  10D2  346D               	retlw	109	;'m'
   891  10D3  3420               	retlw	32	;' '
   892  10D4  343D               	retlw	61	;'='
   893  10D5  3420               	retlw	32	;' '
   894  10D6  3431               	retlw	49	;'1'
   895  10D7  3432               	retlw	50	;'2'
   896  10D8  3438               	retlw	56	;'8'
   897  10D9  340A               	retlw	10
   898  10DA  340D               	retlw	13
   899  10DB  3400               	retlw	0
   900  10DC                     STR_7:	
   901  10DC  340A               	retlw	10
   902  10DD  340D               	retlw	13
   903  10DE  3470               	retlw	112	;'p'
   904  10DF  3477               	retlw	119	;'w'
   905  10E0  346D               	retlw	109	;'m'
   906  10E1  3420               	retlw	32	;' '
   907  10E2  343D               	retlw	61	;'='
   908  10E3  3420               	retlw	32	;' '
   909  10E4  3437               	retlw	55	;'7'
   910  10E5  3436               	retlw	54	;'6'
   911  10E6  3438               	retlw	56	;'8'
   912  10E7  340A               	retlw	10
   913  10E8  340D               	retlw	13
   914  10E9  3400               	retlw	0
   915  10EA                     STR_1:	
   916  10EA  340A               	retlw	10
   917  10EB  340D               	retlw	13
   918  10EC  3464               	retlw	100	;'d'
   919  10ED  3465               	retlw	101	;'e'
   920  10EE  3473               	retlw	115	;'s'
   921  10EF  346C               	retlw	108	;'l'
   922  10F0  3469               	retlw	105	;'i'
   923  10F1  3467               	retlw	103	;'g'
   924  10F2  3461               	retlw	97	;'a'
   925  10F3  3464               	retlw	100	;'d'
   926  10F4  346F               	retlw	111	;'o'
   927  10F5  340A               	retlw	10
   928  10F6  340D               	retlw	13
   929  10F7  3400               	retlw	0
   930  10F8                     STR_2:	
   931  10F8  340A               	retlw	10
   932  10F9  340D               	retlw	13
   933  10FA  3470               	retlw	112	;'p'
   934  10FB  3477               	retlw	119	;'w'
   935  10FC  346D               	retlw	109	;'m'
   936  10FD  3420               	retlw	32	;' '
   937  10FE  343D               	retlw	61	;'='
   938  10FF  3420               	retlw	32	;' '
   939  1100  3433               	retlw	51	;'3'
   940  1101  3432               	retlw	50	;'2'
   941  1102  340A               	retlw	10
   942  1103  340D               	retlw	13
   943  1104  3400               	retlw	0
   944  1105                     STR_3:	
   945  1105  340A               	retlw	10
   946  1106  340D               	retlw	13
   947  1107  3470               	retlw	112	;'p'
   948  1108  3477               	retlw	119	;'w'
   949  1109  346D               	retlw	109	;'m'
   950  110A  3420               	retlw	32	;' '
   951  110B  343D               	retlw	61	;'='
   952  110C  3420               	retlw	32	;' '
   953  110D  3436               	retlw	54	;'6'
   954  110E  3434               	retlw	52	;'4'
   955  110F  340A               	retlw	10
   956  1110  340D               	retlw	13
   957  1111  3400               	retlw	0
   958  1112                     STR_18:	
   959  1112  3450               	retlw	80	;'P'
   960  1113  3457               	retlw	87	;'W'
   961  1114  344D               	retlw	77	;'M'
   962  1115  343A               	retlw	58	;':'
   963  1116  3420               	retlw	32	;' '
   964  1117  3400               	retlw	0
   965  1118                     STR_17:	
   966  1118  3444               	retlw	68	;'D'
   967  1119  346C               	retlw	108	;'l'
   968  111A  3456               	retlw	86	;'V'
   969  111B  343A               	retlw	58	;':'
   970  111C  3420               	retlw	32	;' '
   971  111D  3400               	retlw	0
   972  111E                     STR_14:	
   973  111E  3425               	retlw	37	;'%'
   974  111F  3430               	retlw	48	;'0'
   975  1120  3434               	retlw	52	;'4'
   976  1121  3464               	retlw	100	;'d'
   977  1122  3400               	retlw	0
   978  1123                     __end_of__stringdata:	
   979                           
   980                           ; #config settings
   981  0000                     
   982                           	psect	cinit
   983  0015                     start_initialization:	
   984  0015                     __initialization:	
   985                           
   986                           ; Clear objects allocated to BANK0
   987  0015  1383               	bcf	3,7	;select IRP bank0
   988  0016  3041               	movlw	low __pbssBANK0
   989  0017  0084               	movwf	4
   990  0018  3059               	movlw	low (__pbssBANK0+24)
   991  0019  120A  158A  207B  120A  118A  	fcall	clear_ram0
   992                           
   993                           ; Clear objects allocated to BANK1
   994  001E  30A0               	movlw	low __pbssBANK1
   995  001F  0084               	movwf	4
   996  0020  30DA               	movlw	low (__pbssBANK1+58)
   997  0021  120A  158A  207B  120A  118A  	fcall	clear_ram0
   998                           
   999                           ; Initialize objects allocated to BANK1
  1000  0026  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0028  120A  118A  27FC  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1003  002D  00EB               	movwf	__pdataBANK1& (0+127)
  1004  002E  120A  118A  27FD  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
  1005  0033  00EC               	movwf	(__pdataBANK1+1)& (0+127)
  1006  0034  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
  1007  0039  00ED               	movwf	(__pdataBANK1+2)& (0+127)
  1008  003A  120A  118A  27FF   	fcall	__pidataBANK1+3	;fetch initializer
  1009  003D  00EE               	movwf	(__pdataBANK1+3)& (0+127)
  1010  003E                     end_of_initialization:	
  1011                           ;End of C runtime variable initialization code
  1012                           
  1013  003E                     __end_of__initialization:	
  1014  003E  0183               	clrf	3
  1015  003F  120A  118A  2E8C   	ljmp	_main	;jump to C main() function
  1016                           
  1017                           	psect	bssBANK0
  1018  0041                     __pbssBANK0:	
  1019  0041                     _fitemp:	
  1020  0041                     	ds	2
  1021  0043                     _fop_rule1:	
  1022  0043                     	ds	2
  1023  0045                     _fop_rule2:	
  1024  0045                     	ds	2
  1025  0047                     _fop_rule3:	
  1026  0047                     	ds	2
  1027  0049                     _pwm:	
  1028  0049                     	ds	2
  1029  004B                     _pwmAnt:	
  1030  004B                     	ds	2
  1031  004D                     _temp:	
  1032  004D                     	ds	2
  1033  004F                     _tip:	
  1034  004F                     	ds	2
  1035  0051                     _total_area:	
  1036  0051                     	ds	2
  1037  0053                     _x:	
  1038  0053                     	ds	2
  1039  0055                     _y:	
  1040  0055                     	ds	2
  1041  0057                     _ativa_fan:	
  1042  0057                     	ds	2
  1043                           
  1044                           	psect	bssBANK1
  1045  00A0                     __pbssBANK1:	
  1046  00A0                     _ADCResult:	
  1047  00A0                     	ds	2
  1048  00A2                     _contador_rb6:	
  1049  00A2                     	ds	2
  1050  00A4                     _contagens_tm0:	
  1051  00A4                     	ds	2
  1052  00A6                     _deltaV:	
  1053  00A6                     	ds	2
  1054  00A8                     _derro:	
  1055  00A8                     	ds	2
  1056  00AA                     _fisetpoint:	
  1057  00AA                     	ds	2
  1058  00AC                     _foTip:	
  1059  00AC                     	ds	2
  1060  00AE                     _ideal:	
  1061  00AE                     	ds	2
  1062  00B0                     _posicao_do_grafico:	
  1063  00B0                     	ds	2
  1064  00B2                     _posicao_do_grafico_food:	
  1065  00B2                     	ds	2
  1066  00B4                     _posicao_do_grafico_service:	
  1067  00B4                     	ds	2
  1068  00B6                     _pulsos:	
  1069  00B6                     	ds	2
  1070  00B8                     _rpm:	
  1071  00B8                     	ds	2
  1072  00BA                     _status:	
  1073  00BA                     	ds	2
  1074  00BC                     _sum:	
  1075  00BC                     	ds	2
  1076  00BE                     _temp_lida:	
  1077  00BE                     	ds	2
  1078  00C0                     _tempo_rb6:	
  1079  00C0                     	ds	2
  1080  00C2                     _tip_average:	
  1081  00C2                     	ds	2
  1082  00C4                     _tip_gorgeous:	
  1083  00C4                     	ds	2
  1084  00C6                     _display_pwm:	
  1085  00C6                     	ds	10
  1086  00D0                     _display_rpm:	
  1087  00D0                     	ds	10
  1088                           
  1089                           	psect	dataBANK1
  1090  00EB                     __pdataBANK1:	
  1091  00EB                     _pas_cooler:	
  1092  00EB                     	ds	2
  1093  00ED                     _tf:	
  1094  00ED                     	ds	2
  1095                           
  1096                           	psect	clrtext
  1097  087B                     clear_ram0:	
  1098                           ;	Called with FSR containing the base address, and
  1099                           ;	W with the last address+1
  1100                           
  1101  087B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1102  087C                     clrloop0:	
  1103  087C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1104  087D  0A84               	incf	4,f	;increment pointer
  1105  087E  0604               	xorwf	4,w	;XOR with final address
  1106  087F  1903               	btfsc	3,2	;have we reached the end yet?
  1107  0880  3400               	retlw	0	;all done for this memory range, return
  1108  0881  0604               	xorwf	4,w	;XOR again to restore value
  1109  0882  287C               	goto	clrloop0	;do the next byte
  1110                           
  1111                           	psect	cstackBANK3
  1112  0190                     __pcstackBANK3:	
  1113  0190                     sprintf@ap:	
  1114                           
  1115                           ; 1 bytes @ 0x0
  1116  0190                     	ds	1
  1117  0191                     sprintf@prec:	
  1118                           
  1119                           ; 1 bytes @ 0x1
  1120  0191                     	ds	1
  1121  0192                     sprintf@_val:	
  1122                           
  1123                           ; 4 bytes @ 0x2
  1124  0192                     	ds	4
  1125  0196                     sprintf@flag:	
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128  0196                     	ds	1
  1129  0197                     sprintf@width:	
  1130                           
  1131                           ; 2 bytes @ 0x7
  1132  0197                     	ds	2
  1133  0199                     sprintf@sp:	
  1134                           
  1135                           ; 1 bytes @ 0x9
  1136  0199                     	ds	1
  1137  019A                     sprintf@c:	
  1138                           
  1139                           ; 1 bytes @ 0xA
  1140  019A                     	ds	1
  1141                           
  1142                           	psect	cstackBANK1
  1143  00DA                     __pcstackBANK1:	
  1144  00DA                     ?___lwmod:	
  1145  00DA                     ___aldiv@counter:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  00DA                     ___lwmod@divisor:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x0
  1153  00DA                     	ds	1
  1154  00DB                     ___aldiv@sign:	
  1155                           
  1156                           ; 1 bytes @ 0x1
  1157  00DB                     	ds	1
  1158  00DC                     ___lwmod@dividend:	
  1159  00DC                     ___aldiv@quotient:	
  1160                           ; 2 bytes @ 0x2
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x2
  1164  00DC                     	ds	2
  1165  00DE                     ?_sprintf:	
  1166  00DE                     sprintf@f:	
  1167                           ; 2 bytes @ 0x4
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x4
  1171  00DE                     	ds	2
  1172  00E0                     ?_USART_Init:	
  1173  00E0                     USART_Init@BaudRate:	
  1174                           ; 0 bytes @ 0x6
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x6
  1178  00E0                     	ds	2
  1179  00E2                     ??_sprintf:	
  1180                           
  1181                           ; 0 bytes @ 0x8
  1182  00E2                     	ds	2
  1183  00E4                     ??_USART_Init:	
  1184                           
  1185                           ; 0 bytes @ 0xA
  1186  00E4                     	ds	4
  1187  00E8                     ??_main:	
  1188                           
  1189                           ; 0 bytes @ 0xE
  1190  00E8                     	ds	3
  1191                           
  1192                           	psect	cstackCOMMON
  1193  0070                     __pcstackCOMMON:	
  1194  0070                     ?_TIMER0_Set:	
  1195  0070                     ?_TIMER0_Init:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  0070                     ?_ADC_Init:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  0070                     ?_PWM_Init:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  0070                     ?_LCD_Init:	
  1205                           ; 0 bytes @ 0x0
  1206                           
  1207  0070                     ?_LCD_Clear:	
  1208                           ; 0 bytes @ 0x0
  1209                           
  1210  0070                     ?_isdigit:	
  1211                           ; 0 bytes @ 0x0
  1212                           
  1213  0070                     ?_ISR:	
  1214                           ; 1 bit 
  1215                           
  1216  0070                     ?_main:	
  1217                           ; 0 bytes @ 0x0
  1218                           
  1219  0070                     ?_USART_WriteChar:	
  1220                           ; 0 bytes @ 0x0
  1221                           
  1222  0070                     ?_LCD_WriteCmd:	
  1223                           ; 0 bytes @ 0x0
  1224                           
  1225  0070                     ?_LCD_WriteData:	
  1226                           ; 0 bytes @ 0x0
  1227                           
  1228  0070                     ?i1_USART_WriteChar:	
  1229                           ; 0 bytes @ 0x0
  1230                           
  1231  0070                     ??i1_USART_WriteChar:	
  1232                           ; 0 bytes @ 0x0
  1233                           
  1234  0070                     ?i1_TIMER0_Set:	
  1235                           ; 0 bytes @ 0x0
  1236                           
  1237  0070                     ??i1_TIMER0_Set:	
  1238                           ; 0 bytes @ 0x0
  1239                           
  1240  0070                     ?_USART_ReceiveChar:	
  1241                           ; 0 bytes @ 0x0
  1242                           
  1243  0070                     ?_max_val:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?i1___lwdiv:	
  1247                           ; 2 bytes @ 0x0
  1248                           
  1249  0070                     ?___ftpack:	
  1250                           ; 2 bytes @ 0x0
  1251                           
  1252  0070                     i1USART_WriteChar@byte:	
  1253                           ; 3 bytes @ 0x0
  1254                           
  1255  0070                     i1TIMER0_Set@contagens:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     max_val@a:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     i1___lwdiv@divisor:	
  1262                           ; 2 bytes @ 0x0
  1263                           
  1264  0070                     ___ftpack@arg:	
  1265                           ; 2 bytes @ 0x0
  1266                           
  1267                           
  1268                           ; 3 bytes @ 0x0
  1269  0070                     	ds	1
  1270  0071                     ?i1_USART_WriteString:	
  1271  0071                     i1USART_WriteString@str:	
  1272                           ; 0 bytes @ 0x1
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x1
  1276  0071                     	ds	1
  1277  0072                     max_val@b:	
  1278  0072                     i1___lwdiv@dividend:	
  1279                           ; 2 bytes @ 0x2
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x2
  1283  0072                     	ds	1
  1284  0073                     ??_USART_ReceiveChar:	
  1285  0073                     ??i1_USART_WriteString:	
  1286                           ; 0 bytes @ 0x3
  1287                           
  1288  0073                     ___ftpack@exp:	
  1289                           ; 0 bytes @ 0x3
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x3
  1293  0073                     	ds	1
  1294  0074                     ??_max_val:	
  1295  0074                     ??i1___lwdiv:	
  1296                           ; 0 bytes @ 0x4
  1297                           
  1298  0074                     USART_ReceiveChar@byte:	
  1299                           ; 0 bytes @ 0x4
  1300                           
  1301  0074                     ___ftpack@sign:	
  1302                           ; 1 bytes @ 0x4
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x4
  1306  0074                     	ds	1
  1307  0075                     ??___ftpack:	
  1308  0075                     i1___lwdiv@quotient:	
  1309                           ; 0 bytes @ 0x5
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0x5
  1313  0075                     	ds	2
  1314  0077                     i1___lwdiv@counter:	
  1315                           
  1316                           ; 1 bytes @ 0x7
  1317  0077                     	ds	1
  1318  0078                     ??_trimf:	
  1319  0078                     ??_trapmf:	
  1320                           ; 0 bytes @ 0x8
  1321                           
  1322  0078                     ?i1___wmul:	
  1323                           ; 0 bytes @ 0x8
  1324                           
  1325  0078                     ?___lwtoft:	
  1326                           ; 2 bytes @ 0x8
  1327                           
  1328  0078                     ___lwtoft@c:	
  1329                           ; 3 bytes @ 0x8
  1330                           
  1331  0078                     i1___wmul@multiplier:	
  1332                           ; 2 bytes @ 0x8
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x8
  1336  0078                     	ds	2
  1337  007A                     i1___wmul@multiplicand:	
  1338                           
  1339                           ; 2 bytes @ 0xA
  1340  007A                     	ds	1
  1341  007B                     ??___lwtoft:	
  1342                           
  1343                           ; 0 bytes @ 0xB
  1344  007B                     	ds	1
  1345  007C                     ??i1___wmul:	
  1346  007C                     trimf@ua:	
  1347                           ; 0 bytes @ 0xC
  1348                           
  1349  007C                     trapmf@ua:	
  1350                           ; 2 bytes @ 0xC
  1351                           
  1352  007C                     i1___wmul@product:	
  1353                           ; 2 bytes @ 0xC
  1354                           
  1355                           
  1356                           ; 2 bytes @ 0xC
  1357  007C                     	ds	2
  1358                           
  1359                           	psect	cstackBANK0
  1360  0020                     __pcstackBANK0:	
  1361  0020                     ?___ftge:	
  1362  0020                     ?i1_PWM_DutyCycle2:	
  1363                           ; 1 bit 
  1364                           
  1365  0020                     ?_trimf:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0020                     ?_trapmf:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0020                     trimf@x:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0020                     trapmf@x:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0020                     i1PWM_DutyCycle2@valor:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380  0020                     ___ftge@ff1:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 3 bytes @ 0x0
  1385  0020                     	ds	2
  1386  0022                     ??i1_PWM_DutyCycle2:	
  1387  0022                     trimf@a:	
  1388                           ; 0 bytes @ 0x2
  1389                           
  1390  0022                     trapmf@a:	
  1391                           ; 2 bytes @ 0x2
  1392                           
  1393                           
  1394                           ; 2 bytes @ 0x2
  1395  0022                     	ds	1
  1396  0023                     ___ftge@ff2:	
  1397                           
  1398                           ; 3 bytes @ 0x3
  1399  0023                     	ds	1
  1400  0024                     trimf@b:	
  1401  0024                     trapmf@b:	
  1402                           ; 2 bytes @ 0x4
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x4
  1406  0024                     	ds	2
  1407  0026                     ??___ftge:	
  1408  0026                     trimf@c:	
  1409                           ; 0 bytes @ 0x6
  1410                           
  1411  0026                     trapmf@c:	
  1412                           ; 2 bytes @ 0x6
  1413                           
  1414                           
  1415                           ; 2 bytes @ 0x6
  1416  0026                     	ds	2
  1417  0028                     trapmf@d:	
  1418                           
  1419                           ; 2 bytes @ 0x8
  1420  0028                     	ds	4
  1421  002C                     ?_Fuzzy:	
  1422  002C                     Fuzzy@setpoint:	
  1423                           ; 0 bytes @ 0xC
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0xC
  1427  002C                     	ds	2
  1428  002E                     ??_Fuzzy:	
  1429                           
  1430                           ; 0 bytes @ 0xE
  1431  002E                     	ds	2
  1432  0030                     Fuzzy@velocidade:	
  1433                           
  1434                           ; 1 bytes @ 0x10
  1435  0030                     	ds	1
  1436  0031                     Fuzzy@sum:	
  1437                           
  1438                           ; 2 bytes @ 0x11
  1439  0031                     	ds	2
  1440  0033                     ??_ISR:	
  1441                           
  1442                           ; 0 bytes @ 0x13
  1443  0033                     	ds	4
  1444  0037                     ?_PWM_DutyCycle2:	
  1445  0037                     ??_TIMER0_Set:	
  1446                           ; 0 bytes @ 0x17
  1447                           
  1448  0037                     ??_TIMER0_Init:	
  1449                           ; 0 bytes @ 0x17
  1450                           
  1451  0037                     ??_ADC_Init:	
  1452                           ; 0 bytes @ 0x17
  1453                           
  1454  0037                     ??_PWM_Init:	
  1455                           ; 0 bytes @ 0x17
  1456                           
  1457  0037                     ?_LCD_Cursor:	
  1458                           ; 0 bytes @ 0x17
  1459                           
  1460  0037                     ?_PWM_DutyCycle1:	
  1461                           ; 0 bytes @ 0x17
  1462                           
  1463  0037                     ??_isdigit:	
  1464                           ; 0 bytes @ 0x17
  1465                           
  1466  0037                     ??_USART_WriteChar:	
  1467                           ; 0 bytes @ 0x17
  1468                           
  1469  0037                     ??_LCD_WriteCmd:	
  1470                           ; 0 bytes @ 0x17
  1471                           
  1472  0037                     ??_LCD_WriteData:	
  1473                           ; 0 bytes @ 0x17
  1474                           
  1475  0037                     ?___wmul:	
  1476                           ; 0 bytes @ 0x17
  1477                           
  1478  0037                     ?___lwdiv:	
  1479                           ; 2 bytes @ 0x17
  1480                           
  1481  0037                     ?___aldiv:	
  1482                           ; 2 bytes @ 0x17
  1483                           
  1484  0037                     USART_WriteChar@byte:	
  1485                           ; 4 bytes @ 0x17
  1486                           
  1487  0037                     TIMER0_Set@contagens:	
  1488                           ; 1 bytes @ 0x17
  1489                           
  1490  0037                     LCD_Cursor@Col:	
  1491                           ; 1 bytes @ 0x17
  1492                           
  1493  0037                     _isdigit$1452:	
  1494                           ; 1 bytes @ 0x17
  1495                           
  1496  0037                     PWM_DutyCycle1@valor:	
  1497                           ; 1 bytes @ 0x17
  1498                           
  1499  0037                     PWM_DutyCycle2@valor:	
  1500                           ; 2 bytes @ 0x17
  1501                           
  1502  0037                     ___wmul@multiplier:	
  1503                           ; 2 bytes @ 0x17
  1504                           
  1505  0037                     ___lwdiv@divisor:	
  1506                           ; 2 bytes @ 0x17
  1507                           
  1508  0037                     ___aldiv@divisor:	
  1509                           ; 2 bytes @ 0x17
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x17
  1513  0037                     	ds	1
  1514  0038                     ?_USART_WriteString:	
  1515  0038                     ??_LCD_Cursor:	
  1516                           ; 0 bytes @ 0x18
  1517                           
  1518  0038                     LCD_WriteCmd@Byte:	
  1519                           ; 0 bytes @ 0x18
  1520                           
  1521  0038                     LCD_WriteData@Byte:	
  1522                           ; 1 bytes @ 0x18
  1523                           
  1524  0038                     isdigit@c:	
  1525                           ; 1 bytes @ 0x18
  1526                           
  1527  0038                     USART_WriteString@str:	
  1528                           ; 1 bytes @ 0x18
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x18
  1532  0038                     	ds	1
  1533  0039                     ??_PWM_DutyCycle2:	
  1534  0039                     ??_LCD_Init:	
  1535                           ; 0 bytes @ 0x19
  1536                           
  1537  0039                     ?_LCD_WriteString:	
  1538                           ; 0 bytes @ 0x19
  1539                           
  1540  0039                     ??_PWM_DutyCycle1:	
  1541                           ; 0 bytes @ 0x19
  1542                           
  1543  0039                     ??_LCD_Clear:	
  1544                           ; 0 bytes @ 0x19
  1545                           
  1546  0039                     LCD_Cursor@Row:	
  1547                           ; 0 bytes @ 0x19
  1548                           
  1549  0039                     LCD_WriteString@Str:	
  1550                           ; 1 bytes @ 0x19
  1551                           
  1552  0039                     ___wmul@multiplicand:	
  1553                           ; 2 bytes @ 0x19
  1554                           
  1555  0039                     ___lwdiv@dividend:	
  1556                           ; 2 bytes @ 0x19
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x19
  1560  0039                     	ds	1
  1561  003A                     ??_USART_WriteString:	
  1562                           
  1563                           ; 0 bytes @ 0x1A
  1564  003A                     	ds	1
  1565  003B                     ??_LCD_WriteString:	
  1566  003B                     ??___wmul:	
  1567                           ; 0 bytes @ 0x1B
  1568                           
  1569  003B                     ??___lwdiv:	
  1570                           ; 0 bytes @ 0x1B
  1571                           
  1572  003B                     ___wmul@product:	
  1573                           ; 0 bytes @ 0x1B
  1574                           
  1575  003B                     ___aldiv@dividend:	
  1576                           ; 2 bytes @ 0x1B
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x1B
  1580  003B                     	ds	1
  1581  003C                     ___lwdiv@counter:	
  1582                           
  1583                           ; 1 bytes @ 0x1C
  1584  003C                     	ds	1
  1585  003D                     ___lwdiv@quotient:	
  1586                           
  1587                           ; 2 bytes @ 0x1D
  1588  003D                     	ds	2
  1589  003F                     ??___aldiv:	
  1590  003F                     ??___lwmod:	
  1591                           ; 0 bytes @ 0x1F
  1592                           
  1593                           
  1594                           ; 0 bytes @ 0x1F
  1595  003F                     	ds	1
  1596  0040                     ___lwmod@counter:	
  1597                           
  1598                           ; 1 bytes @ 0x20
  1599  0040                     	ds	1
  1600                           
  1601                           	psect	maintext
  1602  068C                     __pmaintext:	
  1603 ;;
  1604 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1605 ;;
  1606 ;; *************** function _main *****************
  1607 ;; Defined at:
  1608 ;;		line 479 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 17F/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0
  1624 ;;      Temps:          0       0       3       0       0
  1625 ;;      Totals:         0       0       3       0       0
  1626 ;;Total ram usage:        3 bytes
  1627 ;; Hardware stack levels required when called:    6
  1628 ;; This function calls:
  1629 ;;		_ADC_Init
  1630 ;;		_LCD_Clear
  1631 ;;		_LCD_Cursor
  1632 ;;		_LCD_Init
  1633 ;;		_LCD_WriteString
  1634 ;;		_PWM_DutyCycle1
  1635 ;;		_PWM_DutyCycle2
  1636 ;;		_PWM_Init
  1637 ;;		_TIMER0_Init
  1638 ;;		_TIMER0_Set
  1639 ;;		_USART_Init
  1640 ;;		_USART_WriteString
  1641 ;;		_sprintf
  1642 ;; This function is called by:
  1643 ;;		Startup code after reset
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _main
  1649  068C                     _main:	
  1650                           
  1651                           ;main.c: 481: TRISA = 0b00000001;
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1655  068C  3001               	movlw	1
  1656  068D  1683               	bsf	3,5	;RP0=1, select bank1
  1657  068E  1303               	bcf	3,6	;RP1=0, select bank1
  1658  068F  0085               	movwf	5	;volatile
  1659                           
  1660                           ;main.c: 482: PORTA = 0b00000001;
  1661  0690  3001               	movlw	1
  1662  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0693  0085               	movwf	5	;volatile
  1665                           
  1666                           ;main.c: 483: TRISB = 0b00000000;
  1667  0694  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0695  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0696  0186               	clrf	6	;volatile
  1670                           
  1671                           ;main.c: 484: PORTB = 0b00000000;
  1672  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0699  0186               	clrf	6	;volatile
  1675                           
  1676                           ;main.c: 485: TRISC = 0b10000001;
  1677  069A  3081               	movlw	129
  1678  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1679  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1680  069D  0087               	movwf	7	;volatile
  1681                           
  1682                           ;main.c: 486: PORTC = 0b11000000;
  1683  069E  30C0               	movlw	192
  1684  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1685  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1686  06A1  0087               	movwf	7	;volatile
  1687                           
  1688                           ;main.c: 487: TRISD = 0b00000000;
  1689  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1690  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1691  06A4  0188               	clrf	8	;volatile
  1692                           
  1693                           ;main.c: 488: PORTD = 0b00000000;
  1694  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1695  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1696  06A7  0188               	clrf	8	;volatile
  1697                           
  1698                           ;main.c: 489: TRISE = 0b00000000;
  1699  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1700  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1701  06AA  0189               	clrf	9	;volatile
  1702                           
  1703                           ;main.c: 490: PORTE = 0b00000000;
  1704  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1705  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1706  06AD  0189               	clrf	9	;volatile
  1707                           
  1708                           ;main.c: 493: T1CON = 0x03;
  1709  06AE  3003               	movlw	3
  1710  06AF  0090               	movwf	16	;volatile
  1711                           
  1712                           ;main.c: 494: TMR1L = 0x00;
  1713  06B0  018E               	clrf	14	;volatile
  1714                           
  1715                           ;main.c: 495: TMR1H = 0x00;
  1716  06B1  018F               	clrf	15	;volatile
  1717                           
  1718                           ;main.c: 498: USART_Init(115200);
  1719  06B2  3000               	movlw	0
  1720  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  1721  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  1722  06B5  00E3               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1723  06B6  3001               	movlw	1
  1724  06B7  00E2               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1725  06B8  30C2               	movlw	194
  1726  06B9  00E1               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1727  06BA  3000               	movlw	0
  1728  06BB  00E0               	movwf	USART_Init@BaudRate^(0+128)
  1729  06BC  120A  158A  231C  120A  118A  	fcall	_USART_Init
  1730                           
  1731                           ;main.c: 499: TIMER0_Init();
  1732  06C1  120A  158A  2083  120A  118A  	fcall	_TIMER0_Init
  1733                           
  1734                           ;main.c: 500: ADC_Init();
  1735  06C6  120A  158A  20CB  120A  118A  	fcall	_ADC_Init
  1736                           
  1737                           ;main.c: 501: PWM_Init();
  1738  06CB  120A  158A  219E  120A  118A  	fcall	_PWM_Init
  1739                           
  1740                           ;main.c: 502: LCD_Init();
  1741  06D0  120A  158A  243C  120A  118A  	fcall	_LCD_Init
  1742                           
  1743                           ;main.c: 505: INTCONbits.PEIE = 1;
  1744  06D5  170B               	bsf	11,6	;volatile
  1745                           
  1746                           ;main.c: 506: INTCONbits.GIE = 1;
  1747  06D6  178B               	bsf	11,7	;volatile
  1748                           
  1749                           ;main.c: 509: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1750  06D7  3044               	movlw	low (STR_11| (0+32768))
  1751  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1752  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1753  06DA  00B8               	movwf	USART_WriteString@str
  1754  06DB  3090               	movlw	high (STR_11| (0+32768))
  1755  06DC  00B9               	movwf	USART_WriteString@str+1
  1756  06DD  120A  158A  21E7  120A  118A  	fcall	_USART_WriteString
  1757                           
  1758                           ;main.c: 510: USART_WriteString("USART: 115.200bps\n\r");
  1759  06E2  3061               	movlw	low (STR_12| (0+32768))
  1760  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1761  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1762  06E5  00B8               	movwf	USART_WriteString@str
  1763  06E6  3090               	movlw	high (STR_12| (0+32768))
  1764  06E7  00B9               	movwf	USART_WriteString@str+1
  1765  06E8  120A  158A  21E7  120A  118A  	fcall	_USART_WriteString
  1766                           
  1767                           ;main.c: 513: LCD_Init();
  1768  06ED  120A  158A  243C  120A  118A  	fcall	_LCD_Init
  1769                           
  1770                           ;main.c: 514: LCD_Cursor(0,0);
  1771  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1772  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1773  06F4  01B7               	clrf	LCD_Cursor@Col
  1774  06F5  3000               	movlw	0
  1775  06F6  120A  158A  20F1  120A  118A  	fcall	_LCD_Cursor
  1776                           
  1777                           ;main.c: 515: LCD_WriteString("Inicializando...");
  1778  06FB  3075               	movlw	low (STR_13| (0+32768))
  1779  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1780  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1781  06FE  00B9               	movwf	LCD_WriteString@Str
  1782  06FF  3090               	movlw	high (STR_13| (0+32768))
  1783  0700  00BA               	movwf	LCD_WriteString@Str+1
  1784  0701  120A  158A  21C2  120A  118A  	fcall	_LCD_WriteString
  1785                           
  1786                           ;main.c: 518: PWM_DutyCycle1(0);
  1787  0706  3000               	movlw	0
  1788  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0709  00B7               	movwf	PWM_DutyCycle1@valor
  1791  070A  3000               	movlw	0
  1792  070B  00B8               	movwf	PWM_DutyCycle1@valor+1
  1793  070C  120A  158A  213D  120A  118A  	fcall	_PWM_DutyCycle1
  1794                           
  1795                           ;main.c: 519: PWM_DutyCycle2(0);
  1796  0711  3000               	movlw	0
  1797  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0714  00B7               	movwf	PWM_DutyCycle2@valor
  1800  0715  3000               	movlw	0
  1801  0716  00B8               	movwf	PWM_DutyCycle2@valor+1
  1802  0717  120A  118A  27E1  120A  118A  	fcall	_PWM_DutyCycle2
  1803                           
  1804                           ;main.c: 522: TIMER0_Set(238);
  1805  071C  30EE               	movlw	238
  1806  071D  120A  158A  2065  120A  118A  	fcall	_TIMER0_Set
  1807                           
  1808                           ;main.c: 525: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1809  0722  3018               	movlw	24
  1810  0723  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0724  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0725  00EA               	movwf	(??_main^(0+128)+2)
  1813  0726  3061               	movlw	97
  1814  0727  00E9               	movwf	(??_main^(0+128)+1)
  1815  0728  306E               	movlw	110
  1816  0729  00E8               	movwf	??_main^(0+128)
  1817  072A                     u3377:	
  1818  072A  0BE8               	decfsz	??_main^(0+128),f
  1819  072B  2F2A               	goto	u3377
  1820  072C  0BE9               	decfsz	(??_main^(0+128)+1),f
  1821  072D  2F2A               	goto	u3377
  1822  072E  0BEA               	decfsz	(??_main^(0+128)+2),f
  1823  072F  2F2A               	goto	u3377
  1824  0730  0000               	nop
  1825  0731                     l213:	
  1826                           ;main.c: 528: while(1)
  1827                           
  1828                           
  1829                           ;main.c: 529: {
  1830                           ;main.c: 531: sprintf(display_rpm,"%04d", deltaV);
  1831  0731  301E               	movlw	low (STR_14| (0+32768))
  1832  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1833  0733  1303               	bcf	3,6	;RP1=0, select bank1
  1834  0734  00DE               	movwf	sprintf@f^(0+128)
  1835  0735  3091               	movlw	high (STR_14| (0+32768))
  1836  0736  00DF               	movwf	(sprintf@f^(0+128)+1)
  1837  0737  0827               	movf	(_deltaV+1)^(0+128),w
  1838  0738  01E1               	clrf	((?_sprintf+1)^(0+128)+2)
  1839  0739  07E1               	addwf	((?_sprintf+1)^(0+128)+2),f
  1840  073A  0826               	movf	_deltaV^(0+128),w
  1841  073B  01E0               	clrf	(?_sprintf^(0+128)+2)
  1842  073C  07E0               	addwf	(?_sprintf^(0+128)+2),f
  1843  073D  30D0               	movlw	_display_rpm& (0+255)
  1844  073E  120A  118A  23EB  120A  118A  	fcall	_sprintf
  1845                           
  1846                           ;main.c: 532: sprintf(display_pwm,"%04d", pwm);
  1847  0743  301E               	movlw	low (STR_14| (0+32768))
  1848  0744  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0745  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0746  00DE               	movwf	sprintf@f^(0+128)
  1851  0747  3091               	movlw	high (STR_14| (0+32768))
  1852  0748  00DF               	movwf	(sprintf@f^(0+128)+1)
  1853  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1854  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1855  074B  084A               	movf	_pwm+1,w
  1856  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1857  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1858  074E  01E1               	clrf	((?_sprintf+1)^(0+128)+2)
  1859  074F  07E1               	addwf	((?_sprintf+1)^(0+128)+2),f
  1860  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0752  0849               	movf	_pwm,w
  1863  0753  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0754  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0755  01E0               	clrf	(?_sprintf^(0+128)+2)
  1866  0756  07E0               	addwf	(?_sprintf^(0+128)+2),f
  1867  0757  30C6               	movlw	_display_pwm& (0+255)
  1868  0758  120A  118A  23EB  120A  118A  	fcall	_sprintf
  1869                           
  1870                           ;main.c: 536: USART_WriteString(display_rpm);
  1871  075D  30D0               	movlw	_display_rpm& (0+255)
  1872  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1873  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0760  00B8               	movwf	USART_WriteString@str
  1875  0761  3000               	movlw	0
  1876  0762  00B9               	movwf	USART_WriteString@str+1
  1877  0763  120A  158A  21E7  120A  118A  	fcall	_USART_WriteString
  1878                           
  1879                           ;main.c: 537: USART_WriteString("\n\r");
  1880  0768  3092               	movlw	low ((STR_9+12)| (0+32768))
  1881  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1882  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1883  076B  00B8               	movwf	USART_WriteString@str
  1884  076C  3090               	movlw	high ((STR_9+12)| (0+32768))
  1885  076D  00B9               	movwf	USART_WriteString@str+1
  1886  076E  120A  158A  21E7  120A  118A  	fcall	_USART_WriteString
  1887                           
  1888                           ;main.c: 540: LCD_Clear();
  1889  0773  120A  158A  2231  120A  118A  	fcall	_LCD_Clear
  1890                           
  1891                           ;main.c: 541: LCD_Cursor(0,0);
  1892  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1894  077A  01B7               	clrf	LCD_Cursor@Col
  1895  077B  3000               	movlw	0
  1896  077C  120A  158A  20F1  120A  118A  	fcall	_LCD_Cursor
  1897                           
  1898                           ;main.c: 542: LCD_WriteString("DlV: ");
  1899  0781  3018               	movlw	low (STR_17| (0+32768))
  1900  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0784  00B9               	movwf	LCD_WriteString@Str
  1903  0785  3091               	movlw	high (STR_17| (0+32768))
  1904  0786  00BA               	movwf	LCD_WriteString@Str+1
  1905  0787  120A  158A  21C2  120A  118A  	fcall	_LCD_WriteString
  1906                           
  1907                           ;main.c: 543: LCD_Cursor(0,6);
  1908  078C  3006               	movlw	6
  1909  078D  1683               	bsf	3,5	;RP0=1, select bank1
  1910  078E  1303               	bcf	3,6	;RP1=0, select bank1
  1911  078F  00E8               	movwf	??_main^(0+128)
  1912  0790  0868               	movf	??_main^(0+128),w
  1913  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0793  00B7               	movwf	LCD_Cursor@Col
  1916  0794  3000               	movlw	0
  1917  0795  120A  158A  20F1  120A  118A  	fcall	_LCD_Cursor
  1918                           
  1919                           ;main.c: 544: LCD_WriteString(display_rpm);
  1920  079A  30D0               	movlw	_display_rpm& (0+255)
  1921  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1922  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1923  079D  00B9               	movwf	LCD_WriteString@Str
  1924  079E  3000               	movlw	0
  1925  079F  00BA               	movwf	LCD_WriteString@Str+1
  1926  07A0  120A  158A  21C2  120A  118A  	fcall	_LCD_WriteString
  1927                           
  1928                           ;main.c: 545: LCD_Cursor(1,0);
  1929  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1930  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1931  07A7  01B7               	clrf	LCD_Cursor@Col
  1932  07A8  3001               	movlw	1
  1933  07A9  120A  158A  20F1  120A  118A  	fcall	_LCD_Cursor
  1934                           
  1935                           ;main.c: 546: LCD_WriteString("PWM: ");
  1936  07AE  3012               	movlw	low (STR_18| (0+32768))
  1937  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1938  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1939  07B1  00B9               	movwf	LCD_WriteString@Str
  1940  07B2  3091               	movlw	high (STR_18| (0+32768))
  1941  07B3  00BA               	movwf	LCD_WriteString@Str+1
  1942  07B4  120A  158A  21C2  120A  118A  	fcall	_LCD_WriteString
  1943                           
  1944                           ;main.c: 547: LCD_Cursor(1,6);
  1945  07B9  3006               	movlw	6
  1946  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  1947  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  1948  07BC  00E8               	movwf	??_main^(0+128)
  1949  07BD  0868               	movf	??_main^(0+128),w
  1950  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1951  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1952  07C0  00B7               	movwf	LCD_Cursor@Col
  1953  07C1  3001               	movlw	1
  1954  07C2  120A  158A  20F1  120A  118A  	fcall	_LCD_Cursor
  1955                           
  1956                           ;main.c: 548: LCD_WriteString(display_pwm);
  1957  07C7  30C6               	movlw	_display_pwm& (0+255)
  1958  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1959  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1960  07CA  00B9               	movwf	LCD_WriteString@Str
  1961  07CB  3000               	movlw	0
  1962  07CC  00BA               	movwf	LCD_WriteString@Str+1
  1963  07CD  120A  158A  21C2  120A  118A  	fcall	_LCD_WriteString
  1964                           
  1965                           ;main.c: 550: _delay((unsigned long)((200)*(18432000/4000.0)));
  1966  07D2  3005               	movlw	5
  1967  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  1968  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  1969  07D5  00EA               	movwf	(??_main^(0+128)+2)
  1970  07D6  30AD               	movlw	173
  1971  07D7  00E9               	movwf	(??_main^(0+128)+1)
  1972  07D8  30E0               	movlw	224
  1973  07D9  00E8               	movwf	??_main^(0+128)
  1974  07DA                     u3387:	
  1975  07DA  0BE8               	decfsz	??_main^(0+128),f
  1976  07DB  2FDA               	goto	u3387
  1977  07DC  0BE9               	decfsz	(??_main^(0+128)+1),f
  1978  07DD  2FDA               	goto	u3387
  1979  07DE  0BEA               	decfsz	(??_main^(0+128)+2),f
  1980  07DF  2FDA               	goto	u3387
  1981  07E0  2F31               	goto	l213
  1982  07E1                     __end_of_main:	
  1983                           
  1984                           	psect	text1
  1985  03EB                     __ptext1:	
  1986 ;; *************** function _sprintf *****************
  1987 ;; Defined at:
  1988 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  sp              1    wreg     PTR unsigned char 
  1991 ;;		 -> display_pwm(10), display_rpm(10), 
  1992 ;;  f               2    4[BANK1 ] PTR const unsigned char 
  1993 ;;		 -> STR_15(5), STR_14(5), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  1996 ;;		 -> display_pwm(10), display_rpm(10), 
  1997 ;;  _val            4    2[BANK3 ] struct .
  1998 ;;  width           2    7[BANK3 ] int 
  1999 ;;  c               1   10[BANK3 ] char 
  2000 ;;  flag            1    6[BANK3 ] unsigned char 
  2001 ;;  prec            1    1[BANK3 ] char 
  2002 ;;  ap              1    0[BANK3 ] PTR void [1]
  2003 ;;		 -> ?_sprintf(2), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2    4[BANK1 ] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       4       0       0
  2014 ;;      Locals:         0       0       0      11       0
  2015 ;;      Temps:          0       0       3       0       0
  2016 ;;      Totals:         0       0       7      11       0
  2017 ;;Total ram usage:       18 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    5
  2020 ;; This function calls:
  2021 ;;		___lwdiv
  2022 ;;		___lwmod
  2023 ;;		___wmul
  2024 ;;		_isdigit
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _sprintf
  2032  03EB                     _sprintf:	
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2036                           ;sprintf@sp stored from wreg
  2037  03EB  1683               	bsf	3,5	;RP0=1, select bank3
  2038  03EC  1703               	bsf	3,6	;RP1=1, select bank3
  2039  03ED  0099               	movwf	sprintf@sp^(0+384)
  2040                           
  2041                           ;doprnt.c: 494: va_list ap;
  2042                           ;doprnt.c: 499: signed char c;
  2043                           ;doprnt.c: 501: int width;
  2044                           ;doprnt.c: 506: signed char prec;
  2045                           ;doprnt.c: 508: unsigned char flag;
  2046                           ;doprnt.c: 527: union {
  2047                           ;doprnt.c: 528: unsigned int _val;
  2048                           ;doprnt.c: 529: struct {
  2049                           ;doprnt.c: 530: const char * _cp;
  2050                           ;doprnt.c: 531: unsigned _len;
  2051                           ;doprnt.c: 532: } _str;
  2052                           ;doprnt.c: 533: } _val;
  2053                           ;doprnt.c: 542: *ap = __va_start();
  2054  03EE  30E0               	movlw	(?_sprintf+2)& (0+255)
  2055  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2056  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2057  03F1  00E2               	movwf	??_sprintf^(0+128)
  2058  03F2  0862               	movf	??_sprintf^(0+128),w
  2059  03F3  1683               	bsf	3,5	;RP0=1, select bank3
  2060  03F4  1703               	bsf	3,6	;RP1=1, select bank3
  2061  03F5  0090               	movwf	sprintf@ap^(0+384)
  2062  03F6                     l3129:	
  2063                           ;doprnt.c: 545: while(c = *f++) {
  2064                           
  2065  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2066  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2067  03F8  085F               	movf	(sprintf@f+1)^(0+128),w
  2068  03F9  00E3               	movwf	(??_sprintf^(0+128)+1)
  2069  03FA  085E               	movf	sprintf@f^(0+128),w
  2070  03FB  00E2               	movwf	??_sprintf^(0+128)
  2071  03FC  0ADE               	incf	sprintf@f^(0+128),f
  2072  03FD  1903               	skipnz
  2073  03FE  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2074  03FF  0863               	movf	(??_sprintf+1)^(0+128),w
  2075  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0402  00FF               	movwf	127
  2078  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0404  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0405  0862               	movf	??_sprintf^(0+128),w
  2081  0406  0084               	movwf	4
  2082  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0409  160A  118A  2000  120A  118A  	fcall	stringtab
  2085  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2086  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0410  00E4               	movwf	(??_sprintf+2)^(0+128)
  2088  0411  0864               	movf	(??_sprintf+2)^(0+128),w
  2089  0412  1683               	bsf	3,5	;RP0=1, select bank3
  2090  0413  1703               	bsf	3,6	;RP1=1, select bank3
  2091  0414  009A               	movwf	sprintf@c^(0+384)
  2092  0415  089A               	movf	sprintf@c^(0+384),f
  2093  0416  1903               	btfsc	3,2
  2094  0417  2E85               	goto	l3131
  2095                           
  2096                           ;doprnt.c: 547: if(c != '%')
  2097  0418  081A               	movf	sprintf@c^(0+384),w
  2098  0419  3A25               	xorlw	37
  2099  041A  1903               	skipnz
  2100  041B  2C30               	goto	l3035
  2101                           
  2102                           ;doprnt.c: 549: {
  2103                           ;doprnt.c: 550: ((*sp++ = (c)));
  2104  041C  081A               	movf	sprintf@c^(0+384),w
  2105  041D  1683               	bsf	3,5	;RP0=1, select bank1
  2106  041E  1303               	bcf	3,6	;RP1=0, select bank1
  2107  041F  00E2               	movwf	??_sprintf^(0+128)
  2108  0420  1683               	bsf	3,5	;RP0=1, select bank3
  2109  0421  1703               	bsf	3,6	;RP1=1, select bank3
  2110  0422  0819               	movf	sprintf@sp^(0+384),w
  2111  0423  0084               	movwf	4
  2112  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2113  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2114  0426  0862               	movf	??_sprintf^(0+128),w
  2115  0427  1383               	bcf	3,7	;select IRP bank0
  2116  0428  0080               	movwf	0
  2117  0429  3001               	movlw	1
  2118  042A  00E2               	movwf	??_sprintf^(0+128)
  2119  042B  0862               	movf	??_sprintf^(0+128),w
  2120  042C  1683               	bsf	3,5	;RP0=1, select bank3
  2121  042D  1703               	bsf	3,6	;RP1=1, select bank3
  2122  042E  0799               	addwf	sprintf@sp^(0+384),f
  2123                           
  2124                           ;doprnt.c: 551: continue;
  2125  042F  2BF6               	goto	l3129
  2126  0430                     l3035:	
  2127                           
  2128                           ;doprnt.c: 552: }
  2129                           ;doprnt.c: 555: width = 0;
  2130  0430  0197               	clrf	sprintf@width^(0+384)
  2131  0431  0198               	clrf	(sprintf@width+1)^(0+384)
  2132                           
  2133                           ;doprnt.c: 557: flag = 0;
  2134  0432  0196               	clrf	sprintf@flag^(0+384)
  2135                           
  2136                           ;doprnt.c: 560: switch(*f) {
  2137                           
  2138                           ;doprnt.c: 559: for(;;) {
  2139  0433  2C3D               	goto	l3039
  2140  0434                     l490:	
  2141                           ;doprnt.c: 588: case '0':
  2142                           
  2143                           
  2144                           ;doprnt.c: 589: flag |= 0x04;
  2145  0434  1683               	bsf	3,5	;RP0=1, select bank3
  2146  0435  1703               	bsf	3,6	;RP1=1, select bank3
  2147  0436  1516               	bsf	sprintf@flag^(0+384),2
  2148                           
  2149                           ;doprnt.c: 590: f++;
  2150  0437  3001               	movlw	1
  2151  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2153  043A  07DE               	addwf	sprintf@f^(0+128),f
  2154  043B  1803               	skipnc
  2155  043C  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2156  043D                     l3039:	
  2157                           ;doprnt.c: 593: }
  2158                           
  2159                           ;doprnt.c: 591: continue;
  2160                           
  2161  043D  1683               	bsf	3,5	;RP0=1, select bank1
  2162  043E  1303               	bcf	3,6	;RP1=0, select bank1
  2163  043F  085F               	movf	(sprintf@f+1)^(0+128),w
  2164  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0442  00FF               	movwf	127
  2167  0443  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0444  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0445  085E               	movf	sprintf@f^(0+128),w
  2170  0446  0084               	movwf	4
  2171  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0449  160A  118A  2000  120A  118A  	fcall	stringtab
  2174                           
  2175                           ; Switch size 1, requested type "space"
  2176                           ; Number of cases is 1, Range of values is 48 to 48
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ; direct_byte           14    11 (fixed)
  2181                           ; jumptable            263     9 (fixed)
  2182                           ;	Chosen strategy is simple_byte
  2183  044E  3A30               	xorlw	48	; case 48
  2184  044F  1903               	skipnz
  2185  0450  2C34               	goto	l490
  2186  0451  2C52               	goto	l3041
  2187  0452                     l3041:	
  2188                           ;doprnt.c: 595: }
  2189                           
  2190                           ;doprnt.c: 594: break;
  2191                           
  2192                           
  2193                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2194  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0454  085F               	movf	(sprintf@f+1)^(0+128),w
  2197  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0457  00FF               	movwf	127
  2200  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2202  045A  085E               	movf	sprintf@f^(0+128),w
  2203  045B  0084               	movwf	4
  2204  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2205  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2206  045E  160A  118A  2000  120A  118A  	fcall	stringtab
  2207  0463  120A  158A  20BB  120A  118A  	fcall	_isdigit
  2208  0468  1C03               	btfss	3,0
  2209  0469  2CD6               	goto	l3055
  2210                           
  2211                           ;doprnt.c: 607: width = 0;
  2212  046A  1683               	bsf	3,5	;RP0=1, select bank3
  2213  046B  1703               	bsf	3,6	;RP1=1, select bank3
  2214  046C  0197               	clrf	sprintf@width^(0+384)
  2215  046D  0198               	clrf	(sprintf@width+1)^(0+384)
  2216  046E                     l3045:	
  2217                           ;doprnt.c: 608: do {
  2218                           
  2219                           
  2220                           ;doprnt.c: 609: width *= 10;
  2221  046E  300A               	movlw	10
  2222  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0471  00B7               	movwf	___wmul@multiplier
  2225  0472  3000               	movlw	0
  2226  0473  00B8               	movwf	___wmul@multiplier+1
  2227  0474  1683               	bsf	3,5	;RP0=1, select bank3
  2228  0475  1703               	bsf	3,6	;RP1=1, select bank3
  2229  0476  0818               	movf	(sprintf@width+1)^(0+384),w
  2230  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0479  01BA               	clrf	___wmul@multiplicand+1
  2233  047A  07BA               	addwf	___wmul@multiplicand+1,f
  2234  047B  1683               	bsf	3,5	;RP0=1, select bank3
  2235  047C  1703               	bsf	3,6	;RP1=1, select bank3
  2236  047D  0817               	movf	sprintf@width^(0+384),w
  2237  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2238  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0480  01B9               	clrf	___wmul@multiplicand
  2240  0481  07B9               	addwf	___wmul@multiplicand,f
  2241  0482  120A  158A  220C  120A  118A  	fcall	___wmul
  2242  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0489  0838               	movf	?___wmul+1,w
  2245  048A  1683               	bsf	3,5	;RP0=1, select bank3
  2246  048B  1703               	bsf	3,6	;RP1=1, select bank3
  2247  048C  0198               	clrf	(sprintf@width+1)^(0+384)
  2248  048D  0798               	addwf	(sprintf@width+1)^(0+384),f
  2249  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2250  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0490  0837               	movf	?___wmul,w
  2252  0491  1683               	bsf	3,5	;RP0=1, select bank3
  2253  0492  1703               	bsf	3,6	;RP1=1, select bank3
  2254  0493  0197               	clrf	sprintf@width^(0+384)
  2255  0494  0797               	addwf	sprintf@width^(0+384),f
  2256                           
  2257                           ;doprnt.c: 610: width += *f++ - '0';
  2258  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0497  085F               	movf	(sprintf@f+1)^(0+128),w
  2261  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2263  049A  00FF               	movwf	127
  2264  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2265  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2266  049D  085E               	movf	sprintf@f^(0+128),w
  2267  049E  0084               	movwf	4
  2268  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2269  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2270  04A1  160A  118A  2000  120A  118A  	fcall	stringtab
  2271  04A6  3ED0               	addlw	208
  2272  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2273  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2274  04A9  00E2               	movwf	??_sprintf^(0+128)
  2275  04AA  30FF               	movlw	255
  2276  04AB  1803               	skipnc
  2277  04AC  3000               	movlw	0
  2278  04AD  00E3               	movwf	(??_sprintf^(0+128)+1)
  2279  04AE  0862               	movf	??_sprintf^(0+128),w
  2280  04AF  1683               	bsf	3,5	;RP0=1, select bank3
  2281  04B0  1703               	bsf	3,6	;RP1=1, select bank3
  2282  04B1  0797               	addwf	sprintf@width^(0+384),f
  2283  04B2  1803               	skipnc
  2284  04B3  0A98               	incf	(sprintf@width+1)^(0+384),f
  2285  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2286  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2287  04B6  0863               	movf	(??_sprintf+1)^(0+128),w
  2288  04B7  1683               	bsf	3,5	;RP0=1, select bank3
  2289  04B8  1703               	bsf	3,6	;RP1=1, select bank3
  2290  04B9  0798               	addwf	(sprintf@width+1)^(0+384),f
  2291  04BA  3001               	movlw	1
  2292  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2293  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2294  04BD  07DE               	addwf	sprintf@f^(0+128),f
  2295  04BE  1803               	skipnc
  2296  04BF  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2297                           
  2298                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2299  04C0  085F               	movf	(sprintf@f+1)^(0+128),w
  2300  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2301  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2302  04C3  00FF               	movwf	127
  2303  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2304  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2305  04C6  085E               	movf	sprintf@f^(0+128),w
  2306  04C7  0084               	movwf	4
  2307  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2308  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2309  04CA  160A  118A  2000  120A  118A  	fcall	stringtab
  2310  04CF  120A  158A  20BB  120A  118A  	fcall	_isdigit
  2311  04D4  1803               	btfsc	3,0
  2312  04D5  2C6E               	goto	l3045
  2313  04D6                     l3055:	
  2314                           ;doprnt.c: 831: }
  2315                           
  2316                           ;doprnt.c: 822: continue;
  2317                           
  2318                           ;doprnt.c: 811: default:
  2319                           
  2320                           ;doprnt.c: 707: case 'i':
  2321                           ;doprnt.c: 708: break;
  2322                           
  2323                           ;doprnt.c: 706: case 'd':
  2324                           
  2325                           ;doprnt.c: 647: goto alldone;
  2326                           
  2327                           ;doprnt.c: 646: case 0:
  2328                           
  2329                           ;doprnt.c: 617: }
  2330                           ;doprnt.c: 644: switch(c = *f++) {
  2331                           
  2332  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2333  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2334  04D8  085F               	movf	(sprintf@f+1)^(0+128),w
  2335  04D9  00E3               	movwf	(??_sprintf^(0+128)+1)
  2336  04DA  085E               	movf	sprintf@f^(0+128),w
  2337  04DB  00E2               	movwf	??_sprintf^(0+128)
  2338  04DC  0ADE               	incf	sprintf@f^(0+128),f
  2339  04DD  1903               	skipnz
  2340  04DE  0ADF               	incf	(sprintf@f+1)^(0+128),f
  2341  04DF  0863               	movf	(??_sprintf+1)^(0+128),w
  2342  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2343  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2344  04E2  00FF               	movwf	127
  2345  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2346  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2347  04E5  0862               	movf	??_sprintf^(0+128),w
  2348  04E6  0084               	movwf	4
  2349  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2350  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2351  04E9  160A  118A  2000  120A  118A  	fcall	stringtab
  2352  04EE  1683               	bsf	3,5	;RP0=1, select bank3
  2353  04EF  1703               	bsf	3,6	;RP1=1, select bank3
  2354  04F0  009A               	movwf	sprintf@c^(0+384)
  2355                           
  2356                           ; Switch size 1, requested type "space"
  2357                           ; Number of cases is 3, Range of values is 0 to 105
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           10     6 (average)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  04F1  3A00               	xorlw	0	; case 0
  2364  04F2  1903               	skipnz
  2365  04F3  2E85               	goto	l3131
  2366  04F4  3A64               	xorlw	100	; case 100
  2367  04F5  1903               	skipnz
  2368  04F6  2CFB               	goto	l3057
  2369  04F7  3A0D               	xorlw	13	; case 105
  2370  04F8  1903               	skipnz
  2371  04F9  2CFB               	goto	l3057
  2372  04FA  2BF6               	goto	l3129
  2373  04FB                     l3057:	
  2374                           
  2375                           ;doprnt.c: 1262: {
  2376                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2377  04FB  1683               	bsf	3,5	;RP0=1, select bank3
  2378  04FC  1703               	bsf	3,6	;RP1=1, select bank3
  2379  04FD  0810               	movf	sprintf@ap^(0+384),w
  2380  04FE  0084               	movwf	4
  2381  04FF  1383               	bcf	3,7	;select IRP bank0
  2382  0500  0800               	movf	0,w
  2383  0501  0092               	movwf	sprintf@_val^(0+384)
  2384  0502  0A84               	incf	4,f
  2385  0503  0800               	movf	0,w
  2386  0504  0093               	movwf	(sprintf@_val+1)^(0+384)
  2387  0505  3002               	movlw	2
  2388  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0508  00E2               	movwf	??_sprintf^(0+128)
  2391  0509  0862               	movf	??_sprintf^(0+128),w
  2392  050A  1683               	bsf	3,5	;RP0=1, select bank3
  2393  050B  1703               	bsf	3,6	;RP1=1, select bank3
  2394  050C  0790               	addwf	sprintf@ap^(0+384),f
  2395                           
  2396                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2397  050D  1F93               	btfss	(sprintf@_val+1)^(0+384),7
  2398  050E  2D1C               	goto	l3067
  2399                           
  2400                           ;doprnt.c: 1271: flag |= 0x03;
  2401  050F  3003               	movlw	3
  2402  0510  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0511  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0512  00E2               	movwf	??_sprintf^(0+128)
  2405  0513  0862               	movf	??_sprintf^(0+128),w
  2406  0514  1683               	bsf	3,5	;RP0=1, select bank3
  2407  0515  1703               	bsf	3,6	;RP1=1, select bank3
  2408  0516  0496               	iorwf	sprintf@flag^(0+384),f
  2409                           
  2410                           ;doprnt.c: 1272: _val._val = -_val._val;
  2411  0517  0992               	comf	sprintf@_val^(0+384),f
  2412  0518  0993               	comf	(sprintf@_val+1)^(0+384),f
  2413  0519  0A92               	incf	sprintf@_val^(0+384),f
  2414  051A  1903               	skipnz
  2415  051B  0A93               	incf	(sprintf@_val+1)^(0+384),f
  2416  051C                     l3067:	
  2417                           
  2418                           ;doprnt.c: 1273: }
  2419                           ;doprnt.c: 1275: }
  2420                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2421  051C  019A               	clrf	sprintf@c^(0+384)
  2422  051D  0A9A               	incf	sprintf@c^(0+384),f
  2423  051E  081A               	movf	sprintf@c^(0+384),w
  2424  051F  3A05               	xorlw	5
  2425  0520  1903               	btfsc	3,2
  2426  0521  2D5B               	goto	l3079
  2427  0522                     l3071:	
  2428                           
  2429                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2430  0522  081A               	movf	sprintf@c^(0+384),w
  2431  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0525  00E2               	movwf	??_sprintf^(0+128)
  2434  0526  0762               	addwf	??_sprintf^(0+128),w
  2435  0527  3E12               	addlw	low (_dpowers| (0+32768))
  2436  0528  0084               	movwf	4
  2437  0529  3090               	movlw	high (_dpowers| (0+32768))
  2438  052A  1803               	skipnc
  2439  052B  3E01               	addlw	1
  2440  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2441  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2442  052E  00FF               	movwf	127
  2443  052F  160A  118A  2000  120A  118A  	fcall	stringtab
  2444  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0536  00E3               	movwf	(??_sprintf+1)^(0+128)
  2447  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0539  160A  118A  2000  120A  118A  	fcall	stringtab
  2450  053E  1683               	bsf	3,5	;RP0=1, select bank1
  2451  053F  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0540  00E4               	movwf	((??_sprintf+1)^(0+128)+1)
  2453  0541  0864               	movf	(??_sprintf+2)^(0+128),w
  2454  0542  1683               	bsf	3,5	;RP0=1, select bank3
  2455  0543  1703               	bsf	3,6	;RP1=1, select bank3
  2456  0544  0213               	subwf	(sprintf@_val+1)^(0+384),w
  2457  0545  1D03               	skipz
  2458  0546  2D4D               	goto	u3235
  2459  0547  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0548  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0549  0863               	movf	(??_sprintf+1)^(0+128),w
  2462  054A  1683               	bsf	3,5	;RP0=1, select bank3
  2463  054B  1703               	bsf	3,6	;RP1=1, select bank3
  2464  054C  0212               	subwf	sprintf@_val^(0+384),w
  2465  054D                     u3235:	
  2466  054D  1C03               	btfss	3,0
  2467  054E  2D5B               	goto	l3079
  2468                           
  2469                           ;doprnt.c: 1316: break;
  2470  054F  3001               	movlw	1
  2471  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0552  00E2               	movwf	??_sprintf^(0+128)
  2474  0553  0862               	movf	??_sprintf^(0+128),w
  2475  0554  1683               	bsf	3,5	;RP0=1, select bank3
  2476  0555  1703               	bsf	3,6	;RP1=1, select bank3
  2477  0556  079A               	addwf	sprintf@c^(0+384),f
  2478  0557  081A               	movf	sprintf@c^(0+384),w
  2479  0558  3A05               	xorlw	5
  2480  0559  1D03               	skipz
  2481  055A  2D22               	goto	l3071
  2482  055B                     l3079:	
  2483                           
  2484                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2485  055B  0818               	movf	(sprintf@width+1)^(0+384),w
  2486  055C  0417               	iorwf	sprintf@width^(0+384),w
  2487  055D  1903               	skipnz
  2488  055E  2D69               	goto	l508
  2489  055F  0816               	movf	sprintf@flag^(0+384),w
  2490  0560  3903               	andlw	3
  2491  0561  1903               	btfsc	3,2
  2492  0562  2D69               	goto	l508
  2493                           
  2494                           ;doprnt.c: 1355: width--;
  2495  0563  30FF               	movlw	255
  2496  0564  0797               	addwf	sprintf@width^(0+384),f
  2497  0565  1803               	skipnc
  2498  0566  0A98               	incf	(sprintf@width+1)^(0+384),f
  2499  0567  30FF               	movlw	255
  2500  0568  0798               	addwf	(sprintf@width+1)^(0+384),f
  2501  0569                     l508:	
  2502                           
  2503                           ;doprnt.c: 1390: if(width > c)
  2504  0569  081A               	movf	sprintf@c^(0+384),w
  2505  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2506  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2507  056C  00E2               	movwf	??_sprintf^(0+128)
  2508  056D  01E3               	clrf	(??_sprintf^(0+128)+1)
  2509  056E  1BE2               	btfsc	??_sprintf^(0+128),7
  2510  056F  03E3               	decf	(??_sprintf^(0+128)+1),f
  2511  0570  0863               	movf	(??_sprintf+1)^(0+128),w
  2512  0571  3A80               	xorlw	128
  2513  0572  00E4               	movwf	(??_sprintf+2)^(0+128)
  2514  0573  1683               	bsf	3,5	;RP0=1, select bank3
  2515  0574  1703               	bsf	3,6	;RP1=1, select bank3
  2516  0575  0818               	movf	(sprintf@width+1)^(0+384),w
  2517  0576  3A80               	xorlw	128
  2518  0577  1683               	bsf	3,5	;RP0=1, select bank1
  2519  0578  1303               	bcf	3,6	;RP1=0, select bank1
  2520  0579  0264               	subwf	(??_sprintf+2)^(0+128),w
  2521  057A  1D03               	skipz
  2522  057B  2D82               	goto	u3275
  2523  057C  1683               	bsf	3,5	;RP0=1, select bank3
  2524  057D  1703               	bsf	3,6	;RP1=1, select bank3
  2525  057E  0817               	movf	sprintf@width^(0+384),w
  2526  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0581  0262               	subwf	??_sprintf^(0+128),w
  2529  0582                     u3275:	
  2530  0582  1803               	skipnc
  2531  0583  2D9A               	goto	l3087
  2532                           
  2533                           ;doprnt.c: 1391: width -= c;
  2534  0584  1683               	bsf	3,5	;RP0=1, select bank3
  2535  0585  1703               	bsf	3,6	;RP1=1, select bank3
  2536  0586  081A               	movf	sprintf@c^(0+384),w
  2537  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0589  00E2               	movwf	??_sprintf^(0+128)
  2540  058A  01E3               	clrf	(??_sprintf^(0+128)+1)
  2541  058B  1BE2               	btfsc	??_sprintf^(0+128),7
  2542  058C  03E3               	decf	(??_sprintf^(0+128)+1),f
  2543  058D  0862               	movf	??_sprintf^(0+128),w
  2544  058E  1683               	bsf	3,5	;RP0=1, select bank3
  2545  058F  1703               	bsf	3,6	;RP1=1, select bank3
  2546  0590  0297               	subwf	sprintf@width^(0+384),f
  2547  0591  1683               	bsf	3,5	;RP0=1, select bank1
  2548  0592  1303               	bcf	3,6	;RP1=0, select bank1
  2549  0593  0863               	movf	(??_sprintf+1)^(0+128),w
  2550  0594  1683               	bsf	3,5	;RP0=1, select bank3
  2551  0595  1703               	bsf	3,6	;RP1=1, select bank3
  2552  0596  1C03               	skipc
  2553  0597  0398               	decf	(sprintf@width+1)^(0+384),f
  2554  0598  0298               	subwf	(sprintf@width+1)^(0+384),f
  2555  0599  2D9E               	goto	l3089
  2556  059A                     l3087:	
  2557                           
  2558                           ;doprnt.c: 1392: else
  2559                           ;doprnt.c: 1393: width = 0;
  2560  059A  1683               	bsf	3,5	;RP0=1, select bank3
  2561  059B  1703               	bsf	3,6	;RP1=1, select bank3
  2562  059C  0197               	clrf	sprintf@width^(0+384)
  2563  059D  0198               	clrf	(sprintf@width+1)^(0+384)
  2564  059E                     l3089:	
  2565                           
  2566                           ;doprnt.c: 1396: if(flag & 0x04) {
  2567  059E  1D16               	btfss	sprintf@flag^(0+384),2
  2568  059F  2DD5               	goto	l3105
  2569                           
  2570                           ;doprnt.c: 1401: if(flag & 0x03)
  2571  05A0  0816               	movf	sprintf@flag^(0+384),w
  2572  05A1  3903               	andlw	3
  2573  05A2  1903               	btfsc	3,2
  2574  05A3  2DB7               	goto	l3097
  2575                           
  2576                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2577  05A4  302D               	movlw	45
  2578  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2579  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  2580  05A7  00E2               	movwf	??_sprintf^(0+128)
  2581  05A8  1683               	bsf	3,5	;RP0=1, select bank3
  2582  05A9  1703               	bsf	3,6	;RP1=1, select bank3
  2583  05AA  0819               	movf	sprintf@sp^(0+384),w
  2584  05AB  0084               	movwf	4
  2585  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  2586  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  2587  05AE  0862               	movf	??_sprintf^(0+128),w
  2588  05AF  1383               	bcf	3,7	;select IRP bank0
  2589  05B0  0080               	movwf	0
  2590  05B1  3001               	movlw	1
  2591  05B2  00E2               	movwf	??_sprintf^(0+128)
  2592  05B3  0862               	movf	??_sprintf^(0+128),w
  2593  05B4  1683               	bsf	3,5	;RP0=1, select bank3
  2594  05B5  1703               	bsf	3,6	;RP1=1, select bank3
  2595  05B6  0799               	addwf	sprintf@sp^(0+384),f
  2596  05B7                     l3097:	
  2597                           
  2598                           ;doprnt.c: 1424: if(width)
  2599  05B7  0818               	movf	(sprintf@width+1)^(0+384),w
  2600  05B8  0417               	iorwf	sprintf@width^(0+384),w
  2601  05B9  1903               	skipnz
  2602  05BA  2E0D               	goto	l3119
  2603                           
  2604                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2605                           
  2606                           ;doprnt.c: 1425: do
  2607  05BB  3030               	movlw	48
  2608  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2609  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2610  05BE  00E2               	movwf	??_sprintf^(0+128)
  2611  05BF  1683               	bsf	3,5	;RP0=1, select bank3
  2612  05C0  1703               	bsf	3,6	;RP1=1, select bank3
  2613  05C1  0819               	movf	sprintf@sp^(0+384),w
  2614  05C2  0084               	movwf	4
  2615  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2616  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2617  05C5  0862               	movf	??_sprintf^(0+128),w
  2618  05C6  1383               	bcf	3,7	;select IRP bank0
  2619  05C7  0080               	movwf	0
  2620  05C8  3001               	movlw	1
  2621  05C9  00E2               	movwf	??_sprintf^(0+128)
  2622  05CA  0862               	movf	??_sprintf^(0+128),w
  2623  05CB  1683               	bsf	3,5	;RP0=1, select bank3
  2624  05CC  1703               	bsf	3,6	;RP1=1, select bank3
  2625  05CD  0799               	addwf	sprintf@sp^(0+384),f
  2626                           
  2627                           ;doprnt.c: 1427: while(--width);
  2628  05CE  30FF               	movlw	255
  2629  05CF  0797               	addwf	sprintf@width^(0+384),f
  2630  05D0  1803               	skipnc
  2631  05D1  0A98               	incf	(sprintf@width+1)^(0+384),f
  2632  05D2  30FF               	movlw	255
  2633  05D3  0798               	addwf	(sprintf@width+1)^(0+384),f
  2634  05D4  2DB7               	goto	l3097
  2635  05D5                     l3105:	
  2636                           ;doprnt.c: 1429: } else
  2637                           
  2638                           
  2639                           ;doprnt.c: 1431: {
  2640                           ;doprnt.c: 1433: if(width
  2641                           ;doprnt.c: 1437: )
  2642  05D5  0818               	movf	(sprintf@width+1)^(0+384),w
  2643  05D6  0417               	iorwf	sprintf@width^(0+384),w
  2644  05D7  1903               	skipnz
  2645  05D8  2DF6               	goto	l3113
  2646  05D9                     l3107:	
  2647                           ;doprnt.c: 1438: do
  2648                           
  2649                           
  2650                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2651  05D9  3020               	movlw	32
  2652  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2653  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2654  05DC  00E2               	movwf	??_sprintf^(0+128)
  2655  05DD  1683               	bsf	3,5	;RP0=1, select bank3
  2656  05DE  1703               	bsf	3,6	;RP1=1, select bank3
  2657  05DF  0819               	movf	sprintf@sp^(0+384),w
  2658  05E0  0084               	movwf	4
  2659  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2660  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2661  05E3  0862               	movf	??_sprintf^(0+128),w
  2662  05E4  1383               	bcf	3,7	;select IRP bank0
  2663  05E5  0080               	movwf	0
  2664  05E6  3001               	movlw	1
  2665  05E7  00E2               	movwf	??_sprintf^(0+128)
  2666  05E8  0862               	movf	??_sprintf^(0+128),w
  2667  05E9  1683               	bsf	3,5	;RP0=1, select bank3
  2668  05EA  1703               	bsf	3,6	;RP1=1, select bank3
  2669  05EB  0799               	addwf	sprintf@sp^(0+384),f
  2670                           
  2671                           ;doprnt.c: 1440: while(--width);
  2672  05EC  30FF               	movlw	255
  2673  05ED  0797               	addwf	sprintf@width^(0+384),f
  2674  05EE  1803               	skipnc
  2675  05EF  0A98               	incf	(sprintf@width+1)^(0+384),f
  2676  05F0  30FF               	movlw	255
  2677  05F1  0798               	addwf	(sprintf@width+1)^(0+384),f
  2678  05F2  0818               	movf	(sprintf@width+1)^(0+384),w
  2679  05F3  0417               	iorwf	sprintf@width^(0+384),w
  2680  05F4  1D03               	skipz
  2681  05F5  2DD9               	goto	l3107
  2682  05F6                     l3113:	
  2683                           
  2684                           ;doprnt.c: 1447: if(flag & 0x03)
  2685  05F6  0816               	movf	sprintf@flag^(0+384),w
  2686  05F7  3903               	andlw	3
  2687  05F8  1903               	btfsc	3,2
  2688  05F9  2E0D               	goto	l3119
  2689                           
  2690                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2691  05FA  302D               	movlw	45
  2692  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2693  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2694  05FD  00E2               	movwf	??_sprintf^(0+128)
  2695  05FE  1683               	bsf	3,5	;RP0=1, select bank3
  2696  05FF  1703               	bsf	3,6	;RP1=1, select bank3
  2697  0600  0819               	movf	sprintf@sp^(0+384),w
  2698  0601  0084               	movwf	4
  2699  0602  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0603  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0604  0862               	movf	??_sprintf^(0+128),w
  2702  0605  1383               	bcf	3,7	;select IRP bank0
  2703  0606  0080               	movwf	0
  2704  0607  3001               	movlw	1
  2705  0608  00E2               	movwf	??_sprintf^(0+128)
  2706  0609  0862               	movf	??_sprintf^(0+128),w
  2707  060A  1683               	bsf	3,5	;RP0=1, select bank3
  2708  060B  1703               	bsf	3,6	;RP1=1, select bank3
  2709  060C  0799               	addwf	sprintf@sp^(0+384),f
  2710  060D                     l3119:	
  2711                           
  2712                           ;doprnt.c: 1478: }
  2713                           ;doprnt.c: 1481: prec = c;
  2714  060D  081A               	movf	sprintf@c^(0+384),w
  2715  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2716  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0610  00E2               	movwf	??_sprintf^(0+128)
  2718  0611  0862               	movf	??_sprintf^(0+128),w
  2719  0612  1683               	bsf	3,5	;RP0=1, select bank3
  2720  0613  1703               	bsf	3,6	;RP1=1, select bank3
  2721  0614  0091               	movwf	sprintf@prec^(0+384)
  2722  0615                     l3127:	
  2723                           ;doprnt.c: 1483: while(prec--) {
  2724                           
  2725  0615  30FF               	movlw	-1
  2726  0616  1683               	bsf	3,5	;RP0=1, select bank1
  2727  0617  1303               	bcf	3,6	;RP1=0, select bank1
  2728  0618  00E2               	movwf	??_sprintf^(0+128)
  2729  0619  0862               	movf	??_sprintf^(0+128),w
  2730  061A  1683               	bsf	3,5	;RP0=1, select bank3
  2731  061B  1703               	bsf	3,6	;RP1=1, select bank3
  2732  061C  0791               	addwf	sprintf@prec^(0+384),f
  2733  061D  0811               	movf	sprintf@prec^(0+384),w
  2734  061E  3AFF               	xorlw	-1
  2735  061F  1903               	btfsc	3,2
  2736  0620  2BF6               	goto	l3129
  2737                           
  2738                           ;doprnt.c: 1487: {
  2739                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2740  0621  300A               	movlw	10
  2741  0622  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0623  1303               	bcf	3,6	;RP1=0, select bank1
  2743  0624  00DA               	movwf	___lwmod@divisor^(0+128)
  2744  0625  3000               	movlw	0
  2745  0626  00DB               	movwf	(___lwmod@divisor^(0+128)+1)
  2746  0627  1683               	bsf	3,5	;RP0=1, select bank3
  2747  0628  1703               	bsf	3,6	;RP1=1, select bank3
  2748  0629  0811               	movf	sprintf@prec^(0+384),w
  2749  062A  1683               	bsf	3,5	;RP0=1, select bank1
  2750  062B  1303               	bcf	3,6	;RP1=0, select bank1
  2751  062C  00E2               	movwf	??_sprintf^(0+128)
  2752  062D  0762               	addwf	??_sprintf^(0+128),w
  2753  062E  3E12               	addlw	low (_dpowers| (0+32768))
  2754  062F  0084               	movwf	4
  2755  0630  3090               	movlw	high (_dpowers| (0+32768))
  2756  0631  1803               	skipnc
  2757  0632  3E01               	addlw	1
  2758  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0635  00FF               	movwf	127
  2761  0636  160A  118A  2000  120A  118A  	fcall	stringtab
  2762  063B  00B7               	movwf	___lwdiv@divisor
  2763  063C  160A  118A  2000  120A  118A  	fcall	stringtab
  2764  0641  00B8               	movwf	___lwdiv@divisor+1
  2765  0642  1683               	bsf	3,5	;RP0=1, select bank3
  2766  0643  1703               	bsf	3,6	;RP1=1, select bank3
  2767  0644  0813               	movf	(sprintf@_val+1)^(0+384),w
  2768  0645  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0646  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0647  01BA               	clrf	___lwdiv@dividend+1
  2771  0648  07BA               	addwf	___lwdiv@dividend+1,f
  2772  0649  1683               	bsf	3,5	;RP0=1, select bank3
  2773  064A  1703               	bsf	3,6	;RP1=1, select bank3
  2774  064B  0812               	movf	sprintf@_val^(0+384),w
  2775  064C  1283               	bcf	3,5	;RP0=0, select bank0
  2776  064D  1303               	bcf	3,6	;RP1=0, select bank0
  2777  064E  01B9               	clrf	___lwdiv@dividend
  2778  064F  07B9               	addwf	___lwdiv@dividend,f
  2779  0650  120A  158A  2298  120A  118A  	fcall	___lwdiv
  2780  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0657  0838               	movf	?___lwdiv+1,w
  2783  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0659  1303               	bcf	3,6	;RP1=0, select bank1
  2785  065A  01DD               	clrf	(___lwmod@dividend+1)^(0+128)
  2786  065B  07DD               	addwf	(___lwmod@dividend+1)^(0+128),f
  2787  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2788  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2789  065E  0837               	movf	?___lwdiv,w
  2790  065F  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0660  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0661  01DC               	clrf	___lwmod@dividend^(0+128)
  2793  0662  07DC               	addwf	___lwmod@dividend^(0+128),f
  2794  0663  120A  158A  22D8  120A  118A  	fcall	___lwmod
  2795  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2797  066A  085A               	movf	?___lwmod^(0+128),w
  2798  066B  3E30               	addlw	48
  2799  066C  00E3               	movwf	(??_sprintf+1)^(0+128)
  2800  066D  0863               	movf	(??_sprintf+1)^(0+128),w
  2801  066E  1683               	bsf	3,5	;RP0=1, select bank3
  2802  066F  1703               	bsf	3,6	;RP1=1, select bank3
  2803  0670  009A               	movwf	sprintf@c^(0+384)
  2804                           
  2805                           ;doprnt.c: 1532: }
  2806                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2807  0671  081A               	movf	sprintf@c^(0+384),w
  2808  0672  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0673  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0674  00E2               	movwf	??_sprintf^(0+128)
  2811  0675  1683               	bsf	3,5	;RP0=1, select bank3
  2812  0676  1703               	bsf	3,6	;RP1=1, select bank3
  2813  0677  0819               	movf	sprintf@sp^(0+384),w
  2814  0678  0084               	movwf	4
  2815  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2816  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2817  067B  0862               	movf	??_sprintf^(0+128),w
  2818  067C  1383               	bcf	3,7	;select IRP bank0
  2819  067D  0080               	movwf	0
  2820  067E  3001               	movlw	1
  2821  067F  00E2               	movwf	??_sprintf^(0+128)
  2822  0680  0862               	movf	??_sprintf^(0+128),w
  2823  0681  1683               	bsf	3,5	;RP0=1, select bank3
  2824  0682  1703               	bsf	3,6	;RP1=1, select bank3
  2825  0683  0799               	addwf	sprintf@sp^(0+384),f
  2826  0684  2E15               	goto	l3127
  2827  0685                     l3131:	
  2828                           ;doprnt.c: 1534: }
  2829                           ;doprnt.c: 1542: }
  2830                           ;doprnt.c: 1544: alldone:
  2831                           
  2832                           
  2833                           ;doprnt.c: 1547: *sp = 0;
  2834  0685  1683               	bsf	3,5	;RP0=1, select bank3
  2835  0686  1703               	bsf	3,6	;RP1=1, select bank3
  2836  0687  0819               	movf	sprintf@sp^(0+384),w
  2837  0688  0084               	movwf	4
  2838  0689  1383               	bcf	3,7	;select IRP bank0
  2839  068A  0180               	clrf	0
  2840  068B  0008               	return
  2841  068C                     __end_of_sprintf:	
  2842                           ;doprnt.c: 1549: return 0;
  2843                           ;	Return value of _sprintf is never used
  2844                           
  2845                           
  2846                           	psect	text2
  2847  08BB                     __ptext2:	
  2848 ;; *************** function _isdigit *****************
  2849 ;; Defined at:
  2850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  c               1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  c               1   24[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       2       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         0       2       0       0       0
  2868 ;;Total ram usage:        2 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    4
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_sprintf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _isdigit
  2880  08BB                     _isdigit:	
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2884                           ;isdigit@c stored from wreg
  2885  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  2886  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  2887  08BD  00B8               	movwf	isdigit@c
  2888  08BE  01B7               	clrf	_isdigit$1452
  2889  08BF  303A               	movlw	58
  2890  08C0  0238               	subwf	isdigit@c,w
  2891  08C1  1803               	skipnc
  2892  08C2  28C9               	goto	l2883
  2893  08C3  3030               	movlw	48
  2894  08C4  0238               	subwf	isdigit@c,w
  2895  08C5  1C03               	skipc
  2896  08C6  28C9               	goto	l2883
  2897  08C7  01B7               	clrf	_isdigit$1452
  2898  08C8  0AB7               	incf	_isdigit$1452,f
  2899  08C9                     l2883:	
  2900  08C9  0C37               	rrf	_isdigit$1452,w
  2901  08CA  0008               	return
  2902  08CB                     __end_of_isdigit:	
  2903                           
  2904                           	psect	text3
  2905  0A0C                     __ptext3:	
  2906 ;; *************** function ___wmul *****************
  2907 ;; Defined at:
  2908 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  multiplier      2   23[BANK0 ] unsigned int 
  2911 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  product         2   27[BANK0 ] unsigned int 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  2   23[BANK0 ] unsigned int 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       4       0       0       0
  2924 ;;      Locals:         0       2       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       6       0       0       0
  2927 ;;Total ram usage:        6 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    4
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_sprintf
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___wmul
  2939  0A0C                     ___wmul:	
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2943  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0A0E  01BB               	clrf	___wmul@product
  2946  0A0F  01BC               	clrf	___wmul@product+1
  2947  0A10                     l2889:	
  2948  0A10  1C37               	btfss	___wmul@multiplier,0
  2949  0A11  2A18               	goto	l609
  2950  0A12  0839               	movf	___wmul@multiplicand,w
  2951  0A13  07BB               	addwf	___wmul@product,f
  2952  0A14  1803               	skipnc
  2953  0A15  0ABC               	incf	___wmul@product+1,f
  2954  0A16  083A               	movf	___wmul@multiplicand+1,w
  2955  0A17  07BC               	addwf	___wmul@product+1,f
  2956  0A18                     l609:	
  2957  0A18  3001               	movlw	1
  2958  0A19                     u2915:	
  2959  0A19  1003               	clrc
  2960  0A1A  0DB9               	rlf	___wmul@multiplicand,f
  2961  0A1B  0DBA               	rlf	___wmul@multiplicand+1,f
  2962  0A1C  3EFF               	addlw	-1
  2963  0A1D  1D03               	skipz
  2964  0A1E  2A19               	goto	u2915
  2965  0A1F  3001               	movlw	1
  2966  0A20                     u2925:	
  2967  0A20  1003               	clrc
  2968  0A21  0CB8               	rrf	___wmul@multiplier+1,f
  2969  0A22  0CB7               	rrf	___wmul@multiplier,f
  2970  0A23  3EFF               	addlw	-1
  2971  0A24  1D03               	skipz
  2972  0A25  2A20               	goto	u2925
  2973  0A26  0838               	movf	___wmul@multiplier+1,w
  2974  0A27  0437               	iorwf	___wmul@multiplier,w
  2975  0A28  1D03               	skipz
  2976  0A29  2A10               	goto	l2889
  2977  0A2A  083C               	movf	___wmul@product+1,w
  2978  0A2B  01B8               	clrf	?___wmul+1
  2979  0A2C  07B8               	addwf	?___wmul+1,f
  2980  0A2D  083B               	movf	___wmul@product,w
  2981  0A2E  01B7               	clrf	?___wmul
  2982  0A2F  07B7               	addwf	?___wmul,f
  2983  0A30  0008               	return
  2984  0A31                     __end_of___wmul:	
  2985                           
  2986                           	psect	text4
  2987  0AD8                     __ptext4:	
  2988 ;; *************** function ___lwmod *****************
  2989 ;; Defined at:
  2990 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         2    0[BANK1 ] unsigned int 
  2993 ;;  dividend        2    2[BANK1 ] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  counter         1   32[BANK0 ] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    0[BANK1 ] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       4       0       0
  3006 ;;      Locals:         0       1       0       0       0
  3007 ;;      Temps:          0       1       0       0       0
  3008 ;;      Totals:         0       2       4       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    4
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_sprintf
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function ___lwmod
  3021  0AD8                     ___lwmod:	
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3025  0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0AD9  1303               	bcf	3,6	;RP1=0, select bank1
  3027  0ADA  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3028  0ADB  045A               	iorwf	___lwmod@divisor^(0+128),w
  3029  0ADC  1903               	skipnz
  3030  0ADD  2B13               	goto	l2983
  3031  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0AE0  01C0               	clrf	___lwmod@counter
  3034  0AE1  0AC0               	incf	___lwmod@counter,f
  3035  0AE2                     l2973:	
  3036  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0AE4  1BDB               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3039  0AE5  2AF6               	goto	l2975
  3040  0AE6  3001               	movlw	1
  3041  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0AE9                     u3125:	
  3044  0AE9  1003               	clrc
  3045  0AEA  0DDA               	rlf	___lwmod@divisor^(0+128),f
  3046  0AEB  0DDB               	rlf	(___lwmod@divisor+1)^(0+128),f
  3047  0AEC  3EFF               	addlw	-1
  3048  0AED  1D03               	skipz
  3049  0AEE  2AE9               	goto	u3125
  3050  0AEF  3001               	movlw	1
  3051  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0AF2  00BF               	movwf	??___lwmod
  3054  0AF3  083F               	movf	??___lwmod,w
  3055  0AF4  07C0               	addwf	___lwmod@counter,f
  3056  0AF5  2AE2               	goto	l2973
  3057  0AF6                     l2975:	
  3058  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0AF8  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3061  0AF9  025D               	subwf	(___lwmod@dividend+1)^(0+128),w
  3062  0AFA  1D03               	skipz
  3063  0AFB  2AFE               	goto	u3145
  3064  0AFC  085A               	movf	___lwmod@divisor^(0+128),w
  3065  0AFD  025C               	subwf	___lwmod@dividend^(0+128),w
  3066  0AFE                     u3145:	
  3067  0AFE  1C03               	skipc
  3068  0AFF  2B06               	goto	l2979
  3069  0B00  085A               	movf	___lwmod@divisor^(0+128),w
  3070  0B01  02DC               	subwf	___lwmod@dividend^(0+128),f
  3071  0B02  085B               	movf	(___lwmod@divisor+1)^(0+128),w
  3072  0B03  1C03               	skipc
  3073  0B04  03DD               	decf	(___lwmod@dividend+1)^(0+128),f
  3074  0B05  02DD               	subwf	(___lwmod@dividend+1)^(0+128),f
  3075  0B06                     l2979:	
  3076  0B06  3001               	movlw	1
  3077  0B07                     u3155:	
  3078  0B07  1003               	clrc
  3079  0B08  0CDB               	rrf	(___lwmod@divisor+1)^(0+128),f
  3080  0B09  0CDA               	rrf	___lwmod@divisor^(0+128),f
  3081  0B0A  3EFF               	addlw	-1
  3082  0B0B  1D03               	skipz
  3083  0B0C  2B07               	goto	u3155
  3084  0B0D  3001               	movlw	1
  3085  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0B10  02C0               	subwf	___lwmod@counter,f
  3088  0B11  1D03               	btfss	3,2
  3089  0B12  2AF6               	goto	l2975
  3090  0B13                     l2983:	
  3091  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0B14  1303               	bcf	3,6	;RP1=0, select bank1
  3093  0B15  085D               	movf	(___lwmod@dividend+1)^(0+128),w
  3094  0B16  01DB               	clrf	(?___lwmod+1)^(0+128)
  3095  0B17  07DB               	addwf	(?___lwmod+1)^(0+128),f
  3096  0B18  085C               	movf	___lwmod@dividend^(0+128),w
  3097  0B19  01DA               	clrf	?___lwmod^(0+128)
  3098  0B1A  07DA               	addwf	?___lwmod^(0+128),f
  3099  0B1B  0008               	return
  3100  0B1C                     __end_of___lwmod:	
  3101                           
  3102                           	psect	text5
  3103  0A98                     __ptext5:	
  3104 ;; *************** function ___lwdiv *****************
  3105 ;; Defined at:
  3106 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  divisor         2   23[BANK0 ] unsigned int 
  3109 ;;  dividend        2   25[BANK0 ] unsigned int 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  quotient        2   29[BANK0 ] unsigned int 
  3112 ;;  counter         1   28[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2   23[BANK0 ] unsigned int 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       4       0       0       0
  3123 ;;      Locals:         0       3       0       0       0
  3124 ;;      Temps:          0       1       0       0       0
  3125 ;;      Totals:         0       8       0       0       0
  3126 ;;Total ram usage:        8 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_sprintf
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function ___lwdiv
  3138  0A98                     ___lwdiv:	
  3139                           
  3140                           ;incstack = 0
  3141                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3142  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0A9A  01BD               	clrf	___lwdiv@quotient
  3145  0A9B  01BE               	clrf	___lwdiv@quotient+1
  3146  0A9C  0838               	movf	___lwdiv@divisor+1,w
  3147  0A9D  0437               	iorwf	___lwdiv@divisor,w
  3148  0A9E  1903               	skipnz
  3149  0A9F  2AD1               	goto	l2961
  3150  0AA0  01BC               	clrf	___lwdiv@counter
  3151  0AA1  0ABC               	incf	___lwdiv@counter,f
  3152  0AA2                     l2949:	
  3153  0AA2  1BB8               	btfsc	___lwdiv@divisor+1,7
  3154  0AA3  2AB0               	goto	l2951
  3155  0AA4  3001               	movlw	1
  3156  0AA5                     u3055:	
  3157  0AA5  1003               	clrc
  3158  0AA6  0DB7               	rlf	___lwdiv@divisor,f
  3159  0AA7  0DB8               	rlf	___lwdiv@divisor+1,f
  3160  0AA8  3EFF               	addlw	-1
  3161  0AA9  1D03               	skipz
  3162  0AAA  2AA5               	goto	u3055
  3163  0AAB  3001               	movlw	1
  3164  0AAC  00BB               	movwf	??___lwdiv
  3165  0AAD  083B               	movf	??___lwdiv,w
  3166  0AAE  07BC               	addwf	___lwdiv@counter,f
  3167  0AAF  2AA2               	goto	l2949
  3168  0AB0                     l2951:	
  3169  0AB0  3001               	movlw	1
  3170  0AB1                     u3075:	
  3171  0AB1  1003               	clrc
  3172  0AB2  0DBD               	rlf	___lwdiv@quotient,f
  3173  0AB3  0DBE               	rlf	___lwdiv@quotient+1,f
  3174  0AB4  3EFF               	addlw	-1
  3175  0AB5  1D03               	skipz
  3176  0AB6  2AB1               	goto	u3075
  3177  0AB7  0838               	movf	___lwdiv@divisor+1,w
  3178  0AB8  023A               	subwf	___lwdiv@dividend+1,w
  3179  0AB9  1D03               	skipz
  3180  0ABA  2ABD               	goto	u3085
  3181  0ABB  0837               	movf	___lwdiv@divisor,w
  3182  0ABC  0239               	subwf	___lwdiv@dividend,w
  3183  0ABD                     u3085:	
  3184  0ABD  1C03               	skipc
  3185  0ABE  2AC6               	goto	l2957
  3186  0ABF  0837               	movf	___lwdiv@divisor,w
  3187  0AC0  02B9               	subwf	___lwdiv@dividend,f
  3188  0AC1  0838               	movf	___lwdiv@divisor+1,w
  3189  0AC2  1C03               	skipc
  3190  0AC3  03BA               	decf	___lwdiv@dividend+1,f
  3191  0AC4  02BA               	subwf	___lwdiv@dividend+1,f
  3192  0AC5  143D               	bsf	___lwdiv@quotient,0
  3193  0AC6                     l2957:	
  3194  0AC6  3001               	movlw	1
  3195  0AC7                     u3095:	
  3196  0AC7  1003               	clrc
  3197  0AC8  0CB8               	rrf	___lwdiv@divisor+1,f
  3198  0AC9  0CB7               	rrf	___lwdiv@divisor,f
  3199  0ACA  3EFF               	addlw	-1
  3200  0ACB  1D03               	skipz
  3201  0ACC  2AC7               	goto	u3095
  3202  0ACD  3001               	movlw	1
  3203  0ACE  02BC               	subwf	___lwdiv@counter,f
  3204  0ACF  1D03               	btfss	3,2
  3205  0AD0  2AB0               	goto	l2951
  3206  0AD1                     l2961:	
  3207  0AD1  083E               	movf	___lwdiv@quotient+1,w
  3208  0AD2  01B8               	clrf	?___lwdiv+1
  3209  0AD3  07B8               	addwf	?___lwdiv+1,f
  3210  0AD4  083D               	movf	___lwdiv@quotient,w
  3211  0AD5  01B7               	clrf	?___lwdiv
  3212  0AD6  07B7               	addwf	?___lwdiv,f
  3213  0AD7  0008               	return
  3214  0AD8                     __end_of___lwdiv:	
  3215                           
  3216                           	psect	text6
  3217  09E7                     __ptext6:	
  3218 ;; *************** function _USART_WriteString *****************
  3219 ;; Defined at:
  3220 ;;		line 52 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  str             2   24[BANK0 ] PTR const unsigned char 
  3223 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3224 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3225 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3226 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       2       0       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0
  3241 ;;      Totals:         0       2       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    5
  3245 ;; This function calls:
  3246 ;;		_USART_WriteChar
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _USART_WriteString
  3254  09E7                     _USART_WriteString:	
  3255  09E7                     l2459:	
  3256                           ;usart.c: 54: while(*str != '\0')
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3260                           
  3261  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  3262  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  3263  09E9  0839               	movf	USART_WriteString@str+1,w
  3264  09EA  00FF               	movwf	127
  3265  09EB  0838               	movf	USART_WriteString@str,w
  3266  09EC  0084               	movwf	4
  3267  09ED  160A  118A  2000  120A  158A  	fcall	stringtab
  3268  09F2  3800               	iorlw	0
  3269  09F3  1903               	btfsc	3,2
  3270  09F4  0008               	return
  3271                           
  3272                           ;usart.c: 55: {
  3273                           ;usart.c: 56: USART_WriteChar(*str);
  3274  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  3275  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  3276  09F7  0839               	movf	USART_WriteString@str+1,w
  3277  09F8  00FF               	movwf	127
  3278  09F9  0838               	movf	USART_WriteString@str,w
  3279  09FA  0084               	movwf	4
  3280  09FB  160A  118A  2000  120A  158A  	fcall	stringtab
  3281  0A00  120A  158A  2073  120A  158A  	fcall	_USART_WriteChar
  3282                           
  3283                           ;usart.c: 57: str++;
  3284  0A05  3001               	movlw	1
  3285  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0A08  07B8               	addwf	USART_WriteString@str,f
  3288  0A09  1803               	skipnc
  3289  0A0A  0AB9               	incf	USART_WriteString@str+1,f
  3290  0A0B  29E7               	goto	l2459
  3291  0A0C                     __end_of_USART_WriteString:	
  3292                           
  3293                           	psect	text7
  3294  0873                     __ptext7:	
  3295 ;; *************** function _USART_WriteChar *****************
  3296 ;; Defined at:
  3297 ;;		line 44 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  byte            1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  byte            1   23[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;		None               void
  3304 ;; Registers used:
  3305 ;;		wreg
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       1       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       1       0       0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    4
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_USART_WriteString
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _USART_WriteChar
  3327  0873                     _USART_WriteChar:	
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _USART_WriteChar: [wreg]
  3331                           ;USART_WriteChar@byte stored from wreg
  3332  0873  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0874  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0875  00B7               	movwf	USART_WriteChar@byte
  3335  0876                     l238:	
  3336                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3337                           
  3338  0876  1E0C               	btfss	12,4	;volatile
  3339  0877  2876               	goto	l238
  3340                           
  3341                           ;usart.c: 47: TXREG = byte;
  3342  0878  0837               	movf	USART_WriteChar@byte,w
  3343  0879  0099               	movwf	25	;volatile
  3344  087A  0008               	return
  3345  087B                     __end_of_USART_WriteChar:	
  3346                           
  3347                           	psect	text8
  3348  0B1C                     __ptext8:	
  3349 ;; *************** function _USART_Init *****************
  3350 ;; Defined at:
  3351 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  BaudRate        4    6[BANK1 ] long 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       4       0       0
  3366 ;;      Locals:         0       0       0       0       0
  3367 ;;      Temps:          0       0       4       0       0
  3368 ;;      Totals:         0       0       8       0       0
  3369 ;;Total ram usage:        8 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    5
  3372 ;; This function calls:
  3373 ;;		___aldiv
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _USART_Init
  3381  0B1C                     _USART_Init:	
  3382                           
  3383                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3387  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0B1E  0860               	movf	USART_Init@BaudRate^(0+128),w
  3390  0B1F  00E4               	movwf	??_USART_Init^(0+128)
  3391  0B20  0861               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3392  0B21  00E5               	movwf	(??_USART_Init^(0+128)+1)
  3393  0B22  0862               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3394  0B23  00E6               	movwf	(??_USART_Init^(0+128)+2)
  3395  0B24  0863               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3396  0B25  00E7               	movwf	(??_USART_Init^(0+128)+3)
  3397  0B26  3004               	movlw	4
  3398  0B27                     u3175:	
  3399  0B27  1003               	clrc
  3400  0B28  0DE4               	rlf	??_USART_Init^(0+128),f
  3401  0B29  0DE5               	rlf	(??_USART_Init^(0+128)+1),f
  3402  0B2A  0DE6               	rlf	(??_USART_Init^(0+128)+2),f
  3403  0B2B  0DE7               	rlf	(??_USART_Init^(0+128)+3),f
  3404  0B2C  3EFF               	addlw	-1
  3405  0B2D  1D03               	skipz
  3406  0B2E  2B27               	goto	u3175
  3407  0B2F  0867               	movf	(??_USART_Init+3)^(0+128),w
  3408  0B30  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0B31  1303               	bcf	3,6	;RP1=0, select bank0
  3410  0B32  00BA               	movwf	___aldiv@divisor+3
  3411  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0B34  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0B35  0866               	movf	(??_USART_Init+2)^(0+128),w
  3414  0B36  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0B37  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0B38  00B9               	movwf	___aldiv@divisor+2
  3417  0B39  1683               	bsf	3,5	;RP0=1, select bank1
  3418  0B3A  1303               	bcf	3,6	;RP1=0, select bank1
  3419  0B3B  0865               	movf	(??_USART_Init+1)^(0+128),w
  3420  0B3C  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0B3D  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0B3E  00B8               	movwf	___aldiv@divisor+1
  3423  0B3F  1683               	bsf	3,5	;RP0=1, select bank1
  3424  0B40  1303               	bcf	3,6	;RP1=0, select bank1
  3425  0B41  0864               	movf	??_USART_Init^(0+128),w
  3426  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0B44  00B7               	movwf	___aldiv@divisor
  3429  0B45  3001               	movlw	1
  3430  0B46  00BE               	movwf	___aldiv@dividend+3
  3431  0B47  3019               	movlw	25
  3432  0B48  00BD               	movwf	___aldiv@dividend+2
  3433  0B49  3040               	movlw	64
  3434  0B4A  00BC               	movwf	___aldiv@dividend+1
  3435  0B4B  3000               	movlw	0
  3436  0B4C  00BB               	movwf	___aldiv@dividend
  3437  0B4D  120A  158A  25C8   	fcall	___aldiv
  3438  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0B52  0837               	movf	?___aldiv,w
  3441  0B53  3EFF               	addlw	255
  3442  0B54  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0B55  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0B56  0099               	movwf	25	;volatile
  3445                           
  3446                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3447  0B57  1398               	bcf	24,7	;volatile
  3448                           
  3449                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3450  0B58  1318               	bcf	24,6	;volatile
  3451                           
  3452                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3453  0B59  1698               	bsf	24,5	;volatile
  3454                           
  3455                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3456  0B5A  1218               	bcf	24,4	;volatile
  3457                           
  3458                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3459  0B5B  1518               	bsf	24,2	;volatile
  3460                           
  3461                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3462  0B5C  1498               	bsf	24,1	;volatile
  3463                           
  3464                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3465  0B5D  1018               	bcf	24,0	;volatile
  3466                           
  3467                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3468  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0B60  1798               	bsf	24,7	;volatile
  3471                           
  3472                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3473  0B61  1318               	bcf	24,6	;volatile
  3474                           
  3475                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3476  0B62  1298               	bcf	24,5	;volatile
  3477                           
  3478                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3479  0B63  1618               	bsf	24,4	;volatile
  3480                           
  3481                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3482  0B64  1198               	bcf	24,3	;volatile
  3483                           
  3484                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3485  0B65  1118               	bcf	24,2	;volatile
  3486                           
  3487                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3488  0B66  1098               	bcf	24,1	;volatile
  3489                           
  3490                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3491  0B67  1018               	bcf	24,0	;volatile
  3492                           
  3493                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3494  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0B69  1303               	bcf	3,6	;RP1=0, select bank1
  3496  0B6A  120C               	bcf	12,4	;volatile
  3497                           
  3498                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3499  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0B6D  120C               	bcf	12,4	;volatile
  3502                           
  3503                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3504  0B6E  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0B6F  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0B70  168C               	bsf	12,5	;volatile
  3507                           
  3508                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3509  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0B73  128C               	bcf	12,5	;volatile
  3512  0B74  0008               	return
  3513  0B75                     __end_of_USART_Init:	
  3514                           
  3515                           	psect	text9
  3516  0DC8                     __ptext9:	
  3517 ;; *************** function ___aldiv *****************
  3518 ;; Defined at:
  3519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  divisor         4   23[BANK0 ] long 
  3522 ;;  dividend        4   27[BANK0 ] long 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  quotient        4    2[BANK1 ] long 
  3525 ;;  sign            1    1[BANK1 ] unsigned char 
  3526 ;;  counter         1    0[BANK1 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  4   23[BANK0 ] long 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       8       0       0       0
  3537 ;;      Locals:         0       0       6       0       0
  3538 ;;      Temps:          0       1       0       0       0
  3539 ;;      Totals:         0       9       6       0       0
  3540 ;;Total ram usage:       15 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    4
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_USART_Init
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function ___aldiv
  3552  0DC8                     ___aldiv:	
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3556  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0DC9  1303               	bcf	3,6	;RP1=0, select bank1
  3558  0DCA  01DB               	clrf	___aldiv@sign^(0+128)
  3559  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0DCD  1FBA               	btfss	___aldiv@divisor+3,7
  3562  0DCE  2DDE               	goto	l664
  3563  0DCF  09B7               	comf	___aldiv@divisor,f
  3564  0DD0  09B8               	comf	___aldiv@divisor+1,f
  3565  0DD1  09B9               	comf	___aldiv@divisor+2,f
  3566  0DD2  09BA               	comf	___aldiv@divisor+3,f
  3567  0DD3  0AB7               	incf	___aldiv@divisor,f
  3568  0DD4  1903               	skipnz
  3569  0DD5  0AB8               	incf	___aldiv@divisor+1,f
  3570  0DD6  1903               	skipnz
  3571  0DD7  0AB9               	incf	___aldiv@divisor+2,f
  3572  0DD8  1903               	skipnz
  3573  0DD9  0ABA               	incf	___aldiv@divisor+3,f
  3574  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  3576  0DDC  01DB               	clrf	___aldiv@sign^(0+128)
  3577  0DDD  0ADB               	incf	___aldiv@sign^(0+128),f
  3578  0DDE                     l664:	
  3579  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0DDF  1FBE               	btfss	___aldiv@dividend+3,7
  3581  0DE0  2DF2               	goto	l2909
  3582  0DE1  09BB               	comf	___aldiv@dividend,f
  3583  0DE2  09BC               	comf	___aldiv@dividend+1,f
  3584  0DE3  09BD               	comf	___aldiv@dividend+2,f
  3585  0DE4  09BE               	comf	___aldiv@dividend+3,f
  3586  0DE5  0ABB               	incf	___aldiv@dividend,f
  3587  0DE6  1903               	skipnz
  3588  0DE7  0ABC               	incf	___aldiv@dividend+1,f
  3589  0DE8  1903               	skipnz
  3590  0DE9  0ABD               	incf	___aldiv@dividend+2,f
  3591  0DEA  1903               	skipnz
  3592  0DEB  0ABE               	incf	___aldiv@dividend+3,f
  3593  0DEC  3001               	movlw	1
  3594  0DED  00BF               	movwf	??___aldiv
  3595  0DEE  083F               	movf	??___aldiv,w
  3596  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  3598  0DF1  06DB               	xorwf	___aldiv@sign^(0+128),f
  3599  0DF2                     l2909:	
  3600  0DF2  3000               	movlw	0
  3601  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  3603  0DF5  00DF               	movwf	(___aldiv@quotient+3)^(0+128)
  3604  0DF6  3000               	movlw	0
  3605  0DF7  00DE               	movwf	(___aldiv@quotient+2)^(0+128)
  3606  0DF8  3000               	movlw	0
  3607  0DF9  00DD               	movwf	(___aldiv@quotient+1)^(0+128)
  3608  0DFA  3000               	movlw	0
  3609  0DFB  00DC               	movwf	___aldiv@quotient^(0+128)
  3610  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0DFE  083A               	movf	___aldiv@divisor+3,w
  3613  0DFF  0439               	iorwf	___aldiv@divisor+2,w
  3614  0E00  0438               	iorwf	___aldiv@divisor+1,w
  3615  0E01  0437               	iorwf	___aldiv@divisor,w
  3616  0E02  1903               	skipnz
  3617  0E03  2E5C               	goto	l2931
  3618  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0E06  01DA               	clrf	___aldiv@counter^(0+128)
  3621  0E07  0ADA               	incf	___aldiv@counter^(0+128),f
  3622  0E08                     l2917:	
  3623  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0E0A  1BBA               	btfsc	___aldiv@divisor+3,7
  3626  0E0B  2E1D               	goto	l2919
  3627  0E0C  3001               	movlw	1
  3628  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0E0E  00BF               	movwf	??___aldiv
  3630  0E0F                     u2975:	
  3631  0E0F  1003               	clrc
  3632  0E10  0DB7               	rlf	___aldiv@divisor,f
  3633  0E11  0DB8               	rlf	___aldiv@divisor+1,f
  3634  0E12  0DB9               	rlf	___aldiv@divisor+2,f
  3635  0E13  0DBA               	rlf	___aldiv@divisor+3,f
  3636  0E14  0BBF               	decfsz	??___aldiv,f
  3637  0E15  2E0F               	goto	u2975
  3638  0E16  3001               	movlw	1
  3639  0E17  00BF               	movwf	??___aldiv
  3640  0E18  083F               	movf	??___aldiv,w
  3641  0E19  1683               	bsf	3,5	;RP0=1, select bank1
  3642  0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  3643  0E1B  07DA               	addwf	___aldiv@counter^(0+128),f
  3644  0E1C  2E08               	goto	l2917
  3645  0E1D                     l2919:	
  3646  0E1D  3001               	movlw	1
  3647  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0E1F  00BF               	movwf	??___aldiv
  3649  0E20                     u2995:	
  3650  0E20  1003               	clrc
  3651  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  3653  0E23  0DDC               	rlf	___aldiv@quotient^(0+128),f
  3654  0E24  0DDD               	rlf	(___aldiv@quotient+1)^(0+128),f
  3655  0E25  0DDE               	rlf	(___aldiv@quotient+2)^(0+128),f
  3656  0E26  0DDF               	rlf	(___aldiv@quotient+3)^(0+128),f
  3657  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0E29  0BBF               	decfsz	??___aldiv,f
  3660  0E2A  2E20               	goto	u2995
  3661  0E2B  083A               	movf	___aldiv@divisor+3,w
  3662  0E2C  023E               	subwf	___aldiv@dividend+3,w
  3663  0E2D  1D03               	skipz
  3664  0E2E  2E39               	goto	u3005
  3665  0E2F  0839               	movf	___aldiv@divisor+2,w
  3666  0E30  023D               	subwf	___aldiv@dividend+2,w
  3667  0E31  1D03               	skipz
  3668  0E32  2E39               	goto	u3005
  3669  0E33  0838               	movf	___aldiv@divisor+1,w
  3670  0E34  023C               	subwf	___aldiv@dividend+1,w
  3671  0E35  1D03               	skipz
  3672  0E36  2E39               	goto	u3005
  3673  0E37  0837               	movf	___aldiv@divisor,w
  3674  0E38  023B               	subwf	___aldiv@dividend,w
  3675  0E39                     u3005:	
  3676  0E39  1C03               	skipc
  3677  0E3A  2E4C               	goto	l2927
  3678  0E3B  0837               	movf	___aldiv@divisor,w
  3679  0E3C  02BB               	subwf	___aldiv@dividend,f
  3680  0E3D  0838               	movf	___aldiv@divisor+1,w
  3681  0E3E  1C03               	skipc
  3682  0E3F  0F38               	incfsz	___aldiv@divisor+1,w
  3683  0E40  02BC               	subwf	___aldiv@dividend+1,f
  3684  0E41  0839               	movf	___aldiv@divisor+2,w
  3685  0E42  1C03               	skipc
  3686  0E43  0F39               	incfsz	___aldiv@divisor+2,w
  3687  0E44  02BD               	subwf	___aldiv@dividend+2,f
  3688  0E45  083A               	movf	___aldiv@divisor+3,w
  3689  0E46  1C03               	skipc
  3690  0E47  0F3A               	incfsz	___aldiv@divisor+3,w
  3691  0E48  02BE               	subwf	___aldiv@dividend+3,f
  3692  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0E4B  145C               	bsf	___aldiv@quotient^(0+128),0
  3695  0E4C                     l2927:	
  3696  0E4C  3001               	movlw	1
  3697  0E4D                     u3015:	
  3698  0E4D  1003               	clrc
  3699  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0E4F  0CBA               	rrf	___aldiv@divisor+3,f
  3701  0E50  0CB9               	rrf	___aldiv@divisor+2,f
  3702  0E51  0CB8               	rrf	___aldiv@divisor+1,f
  3703  0E52  0CB7               	rrf	___aldiv@divisor,f
  3704  0E53  3EFF               	addlw	-1
  3705  0E54  1D03               	skipz
  3706  0E55  2E4D               	goto	u3015
  3707  0E56  3001               	movlw	1
  3708  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0E59  02DA               	subwf	___aldiv@counter^(0+128),f
  3711  0E5A  1D03               	btfss	3,2
  3712  0E5B  2E1D               	goto	l2919
  3713  0E5C                     l2931:	
  3714  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0E5E  085B               	movf	___aldiv@sign^(0+128),w
  3717  0E5F  1903               	btfsc	3,2
  3718  0E60  2E6C               	goto	l2935
  3719  0E61  09DC               	comf	___aldiv@quotient^(0+128),f
  3720  0E62  09DD               	comf	(___aldiv@quotient+1)^(0+128),f
  3721  0E63  09DE               	comf	(___aldiv@quotient+2)^(0+128),f
  3722  0E64  09DF               	comf	(___aldiv@quotient+3)^(0+128),f
  3723  0E65  0ADC               	incf	___aldiv@quotient^(0+128),f
  3724  0E66  1903               	skipnz
  3725  0E67  0ADD               	incf	(___aldiv@quotient+1)^(0+128),f
  3726  0E68  1903               	skipnz
  3727  0E69  0ADE               	incf	(___aldiv@quotient+2)^(0+128),f
  3728  0E6A  1903               	skipnz
  3729  0E6B  0ADF               	incf	(___aldiv@quotient+3)^(0+128),f
  3730  0E6C                     l2935:	
  3731  0E6C  085F               	movf	(___aldiv@quotient+3)^(0+128),w
  3732  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0E6F  00BA               	movwf	?___aldiv+3
  3735  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  3737  0E72  085E               	movf	(___aldiv@quotient+2)^(0+128),w
  3738  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0E75  00B9               	movwf	?___aldiv+2
  3741  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0E78  085D               	movf	(___aldiv@quotient+1)^(0+128),w
  3744  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0E7B  00B8               	movwf	?___aldiv+1
  3747  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0E7E  085C               	movf	___aldiv@quotient^(0+128),w
  3750  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0E81  00B7               	movwf	?___aldiv
  3753  0E82  0008               	return
  3754  0E83                     __end_of___aldiv:	
  3755                           
  3756                           	psect	text10
  3757  0865                     __ptext10:	
  3758 ;; *************** function _TIMER0_Set *****************
  3759 ;; Defined at:
  3760 ;;		line 20 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  contagens       1    wreg     unsigned char 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  contagens       1   23[BANK0 ] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		wreg
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         0       1       0       0       0
  3776 ;;      Temps:          0       0       0       0       0
  3777 ;;      Totals:         0       1       0       0       0
  3778 ;;Total ram usage:        1 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    4
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _TIMER0_Set
  3790  0865                     _TIMER0_Set:	
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _TIMER0_Set: [wreg]
  3794                           ;TIMER0_Set@contagens stored from wreg
  3795  0865  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0866  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0867  00B7               	movwf	TIMER0_Set@contagens
  3798                           
  3799                           ;timers.c: 22: TMR0 = contagens;
  3800  0868  0837               	movf	TIMER0_Set@contagens,w
  3801  0869  0081               	movwf	1	;volatile
  3802  086A  0008               	return
  3803  086B                     __end_of_TIMER0_Set:	
  3804                           
  3805                           	psect	text11
  3806  0883                     __ptext11:	
  3807 ;; *************** function _TIMER0_Init *****************
  3808 ;; Defined at:
  3809 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;		None               void
  3816 ;; Registers used:
  3817 ;;		None
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    4
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _TIMER0_Init
  3839  0883                     _TIMER0_Init:	
  3840                           
  3841                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _TIMER0_Init: []
  3845  0883  1683               	bsf	3,5	;RP0=1, select bank1
  3846  0884  1303               	bcf	3,6	;RP1=0, select bank1
  3847  0885  1281               	bcf	1,5	;volatile
  3848                           
  3849                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3850  0886  1201               	bcf	1,4	;volatile
  3851                           
  3852                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3853  0887  1181               	bcf	1,3	;volatile
  3854                           
  3855                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3856  0888  1501               	bsf	1,2	;volatile
  3857                           
  3858                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3859  0889  1481               	bsf	1,1	;volatile
  3860                           
  3861                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3862  088A  1401               	bsf	1,0	;volatile
  3863                           
  3864                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3865  088B  110B               	bcf	11,2	;volatile
  3866                           
  3867                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3868  088C  168B               	bsf	11,5	;volatile
  3869  088D  0008               	return
  3870  088E                     __end_of_TIMER0_Init:	
  3871                           
  3872                           	psect	text12
  3873  099E                     __ptext12:	
  3874 ;; *************** function _PWM_Init *****************
  3875 ;; Defined at:
  3876 ;;		line 5 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _PWM_Init
  3906  099E                     _PWM_Init:	
  3907                           
  3908                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _PWM_Init: [wreg]
  3912  099E  1283               	bcf	3,5	;RP0=0, select bank0
  3913  099F  1303               	bcf	3,6	;RP1=0, select bank0
  3914  09A0  1492               	bsf	18,1	;volatile
  3915                           
  3916                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3917  09A1  1012               	bcf	18,0	;volatile
  3918                           
  3919                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3920  09A2  1312               	bcf	18,6	;volatile
  3921                           
  3922                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3923  09A3  1292               	bcf	18,5	;volatile
  3924                           
  3925                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3926  09A4  1212               	bcf	18,4	;volatile
  3927                           
  3928                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3929  09A5  1192               	bcf	18,3	;volatile
  3930                           
  3931                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3932  09A6  1512               	bsf	18,2	;volatile
  3933                           
  3934                           ;pwm.c: 27: PR2 = 255;
  3935  09A7  30FF               	movlw	255
  3936  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  3937  09A9  1303               	bcf	3,6	;RP1=0, select bank1
  3938  09AA  0092               	movwf	18	;volatile
  3939                           
  3940                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3941  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  3942  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  3943  09AD  1597               	bsf	23,3	;volatile
  3944                           
  3945                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3946  09AE  1517               	bsf	23,2	;volatile
  3947                           
  3948                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3949  09AF  1497               	bsf	23,1	;volatile
  3950                           
  3951                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3952  09B0  1417               	bsf	23,0	;volatile
  3953                           
  3954                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3955  09B1  1683               	bsf	3,5	;RP0=1, select bank1
  3956  09B2  1303               	bcf	3,6	;RP1=0, select bank1
  3957  09B3  150C               	bsf	12,2	;volatile
  3958                           
  3959                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3960  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  3961  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  3962  09B6  110C               	bcf	12,2	;volatile
  3963                           
  3964                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3965  09B7  159D               	bsf	29,3	;volatile
  3966                           
  3967                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3968  09B8  151D               	bsf	29,2	;volatile
  3969                           
  3970                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3971  09B9  149D               	bsf	29,1	;volatile
  3972                           
  3973                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3974  09BA  141D               	bsf	29,0	;volatile
  3975                           
  3976                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3977  09BB  1683               	bsf	3,5	;RP0=1, select bank1
  3978  09BC  1303               	bcf	3,6	;RP1=0, select bank1
  3979  09BD  140D               	bsf	13,0	;volatile
  3980                           
  3981                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3982  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  3983  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  3984  09C0  100D               	bcf	13,0	;volatile
  3985  09C1  0008               	return
  3986  09C2                     __end_of_PWM_Init:	
  3987                           
  3988                           	psect	text13
  3989  07E1                     __ptext13:	
  3990 ;; *************** function _PWM_DutyCycle2 *****************
  3991 ;; Defined at:
  3992 ;;		line 96 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  valor           2   23[BANK0 ] int 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       2       0       0       0
  4007 ;;      Locals:         0       0       0       0       0
  4008 ;;      Temps:          0       2       0       0       0
  4009 ;;      Totals:         0       4       0       0       0
  4010 ;;Total ram usage:        4 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    4
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _PWM_DutyCycle2
  4022  07E1                     _PWM_DutyCycle2:	
  4023                           
  4024                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  4028  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4029  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4030  07E3  0838               	movf	PWM_DutyCycle2@valor+1,w
  4031  07E4  00BA               	movwf	??_PWM_DutyCycle2+1
  4032  07E5  0837               	movf	PWM_DutyCycle2@valor,w
  4033  07E6  00B9               	movwf	??_PWM_DutyCycle2
  4034  07E7  0D3A               	rlf	??_PWM_DutyCycle2+1,w
  4035  07E8  0CBA               	rrf	??_PWM_DutyCycle2+1,f
  4036  07E9  0CB9               	rrf	??_PWM_DutyCycle2,f
  4037  07EA  0D3A               	rlf	??_PWM_DutyCycle2+1,w
  4038  07EB  0CBA               	rrf	??_PWM_DutyCycle2+1,f
  4039  07EC  0CB9               	rrf	??_PWM_DutyCycle2,f
  4040  07ED  0839               	movf	??_PWM_DutyCycle2,w
  4041  07EE  009B               	movwf	27	;volatile
  4042                           
  4043                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4044  07EF  0837               	movf	PWM_DutyCycle2@valor,w
  4045  07F0  00B9               	movwf	??_PWM_DutyCycle2
  4046  07F1  3003               	movlw	3
  4047  07F2                     u2445:	
  4048  07F2  1003               	clrc
  4049  07F3  0DB9               	rlf	??_PWM_DutyCycle2,f
  4050  07F4  3EFF               	addlw	-1
  4051  07F5  1D03               	skipz
  4052  07F6  2FF2               	goto	u2445
  4053  07F7  1003               	clrc
  4054  07F8  0D39               	rlf	??_PWM_DutyCycle2,w
  4055  07F9  380C               	iorlw	12
  4056  07FA  009D               	movwf	29	;volatile
  4057  07FB  0008               	return
  4058  07FC                     __end_of_PWM_DutyCycle2:	
  4059                           
  4060                           	psect	text14
  4061  093D                     __ptext14:	
  4062 ;; *************** function _PWM_DutyCycle1 *****************
  4063 ;; Defined at:
  4064 ;;		line 64 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  valor           2   23[BANK0 ] int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;		None               void
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         0       2       0       0       0
  4079 ;;      Locals:         0       0       0       0       0
  4080 ;;      Temps:          0       2       0       0       0
  4081 ;;      Totals:         0       4       0       0       0
  4082 ;;Total ram usage:        4 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _PWM_DutyCycle1
  4094  093D                     _PWM_DutyCycle1:	
  4095                           
  4096                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4100  093D  1283               	bcf	3,5	;RP0=0, select bank0
  4101  093E  1303               	bcf	3,6	;RP1=0, select bank0
  4102  093F  0838               	movf	PWM_DutyCycle1@valor+1,w
  4103  0940  00BA               	movwf	??_PWM_DutyCycle1+1
  4104  0941  0837               	movf	PWM_DutyCycle1@valor,w
  4105  0942  00B9               	movwf	??_PWM_DutyCycle1
  4106  0943  0D3A               	rlf	??_PWM_DutyCycle1+1,w
  4107  0944  0CBA               	rrf	??_PWM_DutyCycle1+1,f
  4108  0945  0CB9               	rrf	??_PWM_DutyCycle1,f
  4109  0946  0D3A               	rlf	??_PWM_DutyCycle1+1,w
  4110  0947  0CBA               	rrf	??_PWM_DutyCycle1+1,f
  4111  0948  0CB9               	rrf	??_PWM_DutyCycle1,f
  4112  0949  0839               	movf	??_PWM_DutyCycle1,w
  4113  094A  0095               	movwf	21	;volatile
  4114                           
  4115                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4116  094B  0837               	movf	PWM_DutyCycle1@valor,w
  4117  094C  00B9               	movwf	??_PWM_DutyCycle1
  4118  094D  3003               	movlw	3
  4119  094E                     u2505:	
  4120  094E  1003               	clrc
  4121  094F  0DB9               	rlf	??_PWM_DutyCycle1,f
  4122  0950  3EFF               	addlw	-1
  4123  0951  1D03               	skipz
  4124  0952  294E               	goto	u2505
  4125  0953  1003               	clrc
  4126  0954  0D39               	rlf	??_PWM_DutyCycle1,w
  4127  0955  380C               	iorlw	12
  4128  0956  0097               	movwf	23	;volatile
  4129  0957  0008               	return
  4130  0958                     __end_of_PWM_DutyCycle1:	
  4131                           
  4132                           	psect	text15
  4133  09C2                     __ptext15:	
  4134 ;; *************** function _LCD_WriteString *****************
  4135 ;; Defined at:
  4136 ;;		line 61 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  Str             2   25[BANK0 ] PTR const unsigned char 
  4139 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4140 ;;		 -> STR_13(17), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       2       0       0       0
  4153 ;;      Locals:         0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0
  4155 ;;      Totals:         0       2       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    5
  4159 ;; This function calls:
  4160 ;;		_LCD_WriteData
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _LCD_WriteString
  4168  09C2                     _LCD_WriteString:	
  4169  09C2                     l2579:	
  4170                           ;lcd.c: 63: while(*Str != '\0')
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4174                           
  4175  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4176  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  4177  09C4  083A               	movf	LCD_WriteString@Str+1,w
  4178  09C5  00FF               	movwf	127
  4179  09C6  0839               	movf	LCD_WriteString@Str,w
  4180  09C7  0084               	movwf	4
  4181  09C8  160A  118A  2000  120A  158A  	fcall	stringtab
  4182  09CD  3800               	iorlw	0
  4183  09CE  1903               	btfsc	3,2
  4184  09CF  0008               	return
  4185                           
  4186                           ;lcd.c: 64: {
  4187                           ;lcd.c: 65: LCD_WriteData(*Str);
  4188  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  4189  09D1  1303               	bcf	3,6	;RP1=0, select bank0
  4190  09D2  083A               	movf	LCD_WriteString@Str+1,w
  4191  09D3  00FF               	movwf	127
  4192  09D4  0839               	movf	LCD_WriteString@Str,w
  4193  09D5  0084               	movwf	4
  4194  09D6  160A  118A  2000  120A  158A  	fcall	stringtab
  4195  09DB  120A  158A  20AC  120A  158A  	fcall	_LCD_WriteData
  4196                           
  4197                           ;lcd.c: 66: Str++;
  4198  09E0  3001               	movlw	1
  4199  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  4200  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  4201  09E3  07B9               	addwf	LCD_WriteString@Str,f
  4202  09E4  1803               	skipnc
  4203  09E5  0ABA               	incf	LCD_WriteString@Str+1,f
  4204  09E6  29C2               	goto	l2579
  4205  09E7                     __end_of_LCD_WriteString:	
  4206                           
  4207                           	psect	text16
  4208  08AC                     __ptext16:	
  4209 ;; *************** function _LCD_WriteData *****************
  4210 ;; Defined at:
  4211 ;;		line 47 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  Byte            1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  Byte            1   24[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       0       0       0       0
  4226 ;;      Locals:         0       1       0       0       0
  4227 ;;      Temps:          0       1       0       0       0
  4228 ;;      Totals:         0       2       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    4
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_LCD_WriteString
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _LCD_WriteData
  4241  08AC                     _LCD_WriteData:	
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _LCD_WriteData: [wreg]
  4245                           ;LCD_WriteData@Byte stored from wreg
  4246  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  4247  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  4248  08AE  00B8               	movwf	LCD_WriteData@Byte
  4249                           
  4250                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4251  08AF  1409               	bsf	9,0	;volatile
  4252                           
  4253                           ;lcd.c: 51: PORTD = Byte;
  4254  08B0  0838               	movf	LCD_WriteData@Byte,w
  4255  08B1  0088               	movwf	8	;volatile
  4256                           
  4257                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4258  08B2  1489               	bsf	9,1	;volatile
  4259                           
  4260                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4261  08B3  303D               	movlw	61
  4262  08B4  00B7               	movwf	??_LCD_WriteData
  4263  08B5                     u3397:	
  4264  08B5  0BB7               	decfsz	??_LCD_WriteData,f
  4265  08B6  28B5               	goto	u3397
  4266                           
  4267                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4268  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  4269  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  4270  08B9  1089               	bcf	9,1	;volatile
  4271  08BA  0008               	return
  4272  08BB                     __end_of_LCD_WriteData:	
  4273                           
  4274                           	psect	text17
  4275  0C3C                     __ptext17:	
  4276 ;; *************** function _LCD_Init *****************
  4277 ;; Defined at:
  4278 ;;		line 87 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0
  4294 ;;      Temps:          0       2       0       0       0
  4295 ;;      Totals:         0       2       0       0       0
  4296 ;;Total ram usage:        2 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    5
  4299 ;; This function calls:
  4300 ;;		_LCD_WriteCmd
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function _LCD_Init
  4308  0C3C                     _LCD_Init:	
  4309                           
  4310                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4314  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0C3E  119F               	bcf	31,3	;volatile
  4317                           
  4318                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4319  0C3F  151F               	bsf	31,2	;volatile
  4320                           
  4321                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4322  0C40  109F               	bcf	31,1	;volatile
  4323                           
  4324                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4325  0C41  101F               	bcf	31,0	;volatile
  4326                           
  4327                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4328  0C42  305A               	movlw	90
  4329  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0C45  00BA               	movwf	??_LCD_Init+1
  4332  0C46  30C3               	movlw	195
  4333  0C47  00B9               	movwf	??_LCD_Init
  4334  0C48                     u3407:	
  4335  0C48  0BB9               	decfsz	??_LCD_Init,f
  4336  0C49  2C48               	goto	u3407
  4337  0C4A  0BBA               	decfsz	??_LCD_Init+1,f
  4338  0C4B  2C48               	goto	u3407
  4339                           
  4340                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4341  0C4C  3030               	movlw	48
  4342  0C4D  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4343                           
  4344                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4345  0C52  3018               	movlw	24
  4346  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0C54  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0C55  00BA               	movwf	??_LCD_Init+1
  4349  0C56  30EF               	movlw	239
  4350  0C57  00B9               	movwf	??_LCD_Init
  4351  0C58                     u3417:	
  4352  0C58  0BB9               	decfsz	??_LCD_Init,f
  4353  0C59  2C58               	goto	u3417
  4354  0C5A  0BBA               	decfsz	??_LCD_Init+1,f
  4355  0C5B  2C58               	goto	u3417
  4356                           
  4357                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4358  0C5C  3030               	movlw	48
  4359  0C5D  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4360                           
  4361                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4362  0C62  3099               	movlw	153
  4363  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0C65  00B9               	movwf	??_LCD_Init
  4366  0C66                     u3427:	
  4367  0C66  0BB9               	decfsz	??_LCD_Init,f
  4368  0C67  2C66               	goto	u3427
  4369                           
  4370                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4371  0C68  3030               	movlw	48
  4372  0C69  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4373                           
  4374                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4375  0C6E  303D               	movlw	61
  4376  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  4377  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  4378  0C71  00B9               	movwf	??_LCD_Init
  4379  0C72                     u3437:	
  4380  0C72  0BB9               	decfsz	??_LCD_Init,f
  4381  0C73  2C72               	goto	u3437
  4382                           
  4383                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4384  0C74  3038               	movlw	56
  4385  0C75  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4386                           
  4387                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4388  0C7A  303D               	movlw	61
  4389  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0C7D  00B9               	movwf	??_LCD_Init
  4392  0C7E                     u3447:	
  4393  0C7E  0BB9               	decfsz	??_LCD_Init,f
  4394  0C7F  2C7E               	goto	u3447
  4395                           
  4396                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4397  0C80  3001               	movlw	1
  4398  0C81  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4399                           
  4400                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4401  0C86  300C               	movlw	12
  4402  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0C89  00BA               	movwf	??_LCD_Init+1
  4405  0C8A  30F7               	movlw	247
  4406  0C8B  00B9               	movwf	??_LCD_Init
  4407  0C8C                     u3457:	
  4408  0C8C  0BB9               	decfsz	??_LCD_Init,f
  4409  0C8D  2C8C               	goto	u3457
  4410  0C8E  0BBA               	decfsz	??_LCD_Init+1,f
  4411  0C8F  2C8C               	goto	u3457
  4412                           
  4413                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4414  0C90  300C               	movlw	12
  4415  0C91  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4416                           
  4417                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4418  0C96  303D               	movlw	61
  4419  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0C99  00B9               	movwf	??_LCD_Init
  4422  0C9A                     u3467:	
  4423  0C9A  0BB9               	decfsz	??_LCD_Init,f
  4424  0C9B  2C9A               	goto	u3467
  4425                           
  4426                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4427  0C9C  3006               	movlw	6
  4428  0C9D  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4429                           
  4430                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4431  0CA2  303D               	movlw	61
  4432  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  4434  0CA5  00B9               	movwf	??_LCD_Init
  4435  0CA6                     u3477:	
  4436  0CA6  0BB9               	decfsz	??_LCD_Init,f
  4437  0CA7  2CA6               	goto	u3477
  4438  0CA8  0008               	return
  4439  0CA9                     __end_of_LCD_Init:	
  4440                           
  4441                           	psect	text18
  4442  08F1                     __ptext18:	
  4443 ;; *************** function _LCD_Cursor *****************
  4444 ;; Defined at:
  4445 ;;		line 10 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  Row             1    wreg     unsigned char 
  4448 ;;  Col             1   23[BANK0 ] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  Row             1   25[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       1       0       0       0
  4461 ;;      Locals:         0       1       0       0       0
  4462 ;;      Temps:          0       1       0       0       0
  4463 ;;      Totals:         0       3       0       0       0
  4464 ;;Total ram usage:        3 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    4
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _LCD_Cursor
  4476  08F1                     _LCD_Cursor:	
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4480                           ;LCD_Cursor@Row stored from wreg
  4481  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  4482  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  4483  08F3  00B9               	movwf	LCD_Cursor@Row
  4484                           
  4485                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4486  08F4  1009               	bcf	9,0	;volatile
  4487                           
  4488                           ;lcd.c: 14: if (Row == 0)
  4489  08F5  08B9               	movf	LCD_Cursor@Row,f
  4490  08F6  1D03               	skipz
  4491  08F7  28FB               	goto	l2565
  4492                           
  4493                           ;lcd.c: 15: {
  4494                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4495  08F8  0837               	movf	LCD_Cursor@Col,w
  4496  08F9  3E80               	addlw	128
  4497  08FA  28FD               	goto	L2
  4498  08FB                     l2565:	
  4499                           ;lcd.c: 17: }
  4500                           
  4501                           
  4502                           ;lcd.c: 18: else
  4503                           ;lcd.c: 19: {
  4504                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4505  08FB  0837               	movf	LCD_Cursor@Col,w
  4506  08FC  3EC0               	addlw	192
  4507  08FD                     L2:	
  4508  08FD  0088               	movwf	8	;volatile
  4509                           
  4510                           ;lcd.c: 21: }
  4511                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4512  08FE  1489               	bsf	9,1	;volatile
  4513                           
  4514                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4515  08FF  303D               	movlw	61
  4516  0900  00B8               	movwf	??_LCD_Cursor
  4517  0901                     u3487:	
  4518  0901  0BB8               	decfsz	??_LCD_Cursor,f
  4519  0902  2901               	goto	u3487
  4520                           
  4521                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4522  0903  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0904  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0905  1089               	bcf	9,1	;volatile
  4525  0906  0008               	return
  4526  0907                     __end_of_LCD_Cursor:	
  4527                           
  4528                           	psect	text19
  4529  0A31                     __ptext19:	
  4530 ;; *************** function _LCD_Clear *****************
  4531 ;; Defined at:
  4532 ;;		line 71 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;		None               void
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0
  4548 ;;      Temps:          0       2       0       0       0
  4549 ;;      Totals:         0       2       0       0       0
  4550 ;;Total ram usage:        2 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    5
  4553 ;; This function calls:
  4554 ;;		_LCD_WriteCmd
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _LCD_Clear
  4562  0A31                     _LCD_Clear:	
  4563                           
  4564                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4568  0A31  3001               	movlw	1
  4569  0A32  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4570                           
  4571                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4572  0A37  300C               	movlw	12
  4573  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  4574  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  4575  0A3A  00BA               	movwf	??_LCD_Clear+1
  4576  0A3B  30F7               	movlw	247
  4577  0A3C  00B9               	movwf	??_LCD_Clear
  4578  0A3D                     u3497:	
  4579  0A3D  0BB9               	decfsz	??_LCD_Clear,f
  4580  0A3E  2A3D               	goto	u3497
  4581  0A3F  0BBA               	decfsz	??_LCD_Clear+1,f
  4582  0A40  2A3D               	goto	u3497
  4583                           
  4584                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4585  0A41  300C               	movlw	12
  4586  0A42  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4587                           
  4588                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4589  0A47  303D               	movlw	61
  4590  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0A4A  00B9               	movwf	??_LCD_Clear
  4593  0A4B                     u3507:	
  4594  0A4B  0BB9               	decfsz	??_LCD_Clear,f
  4595  0A4C  2A4B               	goto	u3507
  4596                           
  4597                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4598  0A4D  3006               	movlw	6
  4599  0A4E  120A  158A  209D  120A  158A  	fcall	_LCD_WriteCmd
  4600                           
  4601                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4602  0A53  303D               	movlw	61
  4603  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0A56  00B9               	movwf	??_LCD_Clear
  4606  0A57                     u3517:	
  4607  0A57  0BB9               	decfsz	??_LCD_Clear,f
  4608  0A58  2A57               	goto	u3517
  4609  0A59  0008               	return
  4610  0A5A                     __end_of_LCD_Clear:	
  4611                           
  4612                           	psect	text20
  4613  089D                     __ptext20:	
  4614 ;; *************** function _LCD_WriteCmd *****************
  4615 ;; Defined at:
  4616 ;;		line 32 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\lcd.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  Byte            1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  Byte            1   24[BANK0 ] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       1       0       0       0
  4632 ;;      Temps:          0       1       0       0       0
  4633 ;;      Totals:         0       2       0       0       0
  4634 ;;Total ram usage:        2 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    4
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_LCD_Clear
  4641 ;;		_LCD_Init
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _LCD_WriteCmd
  4647  089D                     _LCD_WriteCmd:	
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _LCD_WriteCmd: [wreg]
  4651                           ;LCD_WriteCmd@Byte stored from wreg
  4652  089D  1283               	bcf	3,5	;RP0=0, select bank0
  4653  089E  1303               	bcf	3,6	;RP1=0, select bank0
  4654  089F  00B8               	movwf	LCD_WriteCmd@Byte
  4655                           
  4656                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4657  08A0  1009               	bcf	9,0	;volatile
  4658                           
  4659                           ;lcd.c: 36: PORTD = Byte;
  4660  08A1  0838               	movf	LCD_WriteCmd@Byte,w
  4661  08A2  0088               	movwf	8	;volatile
  4662                           
  4663                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4664  08A3  1489               	bsf	9,1	;volatile
  4665                           
  4666                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4667  08A4  303D               	movlw	61
  4668  08A5  00B7               	movwf	??_LCD_WriteCmd
  4669  08A6                     u3527:	
  4670  08A6  0BB7               	decfsz	??_LCD_WriteCmd,f
  4671  08A7  28A6               	goto	u3527
  4672                           
  4673                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4674  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  4675  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  4676  08AA  1089               	bcf	9,1	;volatile
  4677  08AB  0008               	return
  4678  08AC                     __end_of_LCD_WriteCmd:	
  4679                           
  4680                           	psect	text21
  4681  08CB                     __ptext21:	
  4682 ;; *************** function _ADC_Init *****************
  4683 ;; Defined at:
  4684 ;;		line 6 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\adc.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;		None               void
  4691 ;; Registers used:
  4692 ;;		None
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    4
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _ADC_Init
  4714  08CB                     _ADC_Init:	
  4715                           
  4716                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _ADC_Init: []
  4720  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  4721  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  4722  08CD  179F               	bsf	31,7	;volatile
  4723                           
  4724                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4725  08CE  159F               	bsf	31,3	;volatile
  4726                           
  4727                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4728  08CF  151F               	bsf	31,2	;volatile
  4729                           
  4730                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4731  08D0  149F               	bsf	31,1	;volatile
  4732                           
  4733                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4734  08D1  101F               	bcf	31,0	;volatile
  4735                           
  4736                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4737  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  4738  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  4739  08D4  179F               	bsf	31,7	;volatile
  4740                           
  4741                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4742  08D5  131F               	bcf	31,6	;volatile
  4743                           
  4744                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4745  08D6  1683               	bsf	3,5	;RP0=1, select bank1
  4746  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  4747  08D8  130C               	bcf	12,6	;volatile
  4748                           
  4749                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4750  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  4751  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  4752  08DB  130C               	bcf	12,6	;volatile
  4753  08DC  0008               	return
  4754  08DD                     __end_of_ADC_Init:	
  4755                           
  4756                           	psect	text22
  4757  0E83                     __ptext22:	
  4758 ;; *************** function _ISR *****************
  4759 ;; Defined at:
  4760 ;;		line 316 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;		None               void
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4774 ;;      Params:         0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0
  4776 ;;      Temps:          0       4       0       0       0
  4777 ;;      Totals:         0       4       0       0       0
  4778 ;;Total ram usage:        4 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    3
  4781 ;; This function calls:
  4782 ;;		_Fuzzy
  4783 ;;		_USART_ReceiveChar
  4784 ;;		i1_PWM_DutyCycle2
  4785 ;;		i1_TIMER0_Set
  4786 ;;		i1_USART_WriteString
  4787 ;;		i1___lwdiv
  4788 ;;		i1___wmul
  4789 ;; This function is called by:
  4790 ;;		Interrupt level 1
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _ISR
  4796  0E83                     _ISR:	
  4797                           
  4798                           ;main.c: 319: if (PIR1bits.RCIF)
  4799  0E83  1E8C               	btfss	12,5	;volatile
  4800  0E84  2F94               	goto	i1l2783
  4801                           
  4802                           ;main.c: 320: {
  4803                           ;main.c: 321: pwmAnt = pwm;
  4804  0E85  084A               	movf	_pwm+1,w
  4805  0E86  01CC               	clrf	_pwmAnt+1
  4806  0E87  07CC               	addwf	_pwmAnt+1,f
  4807  0E88  0849               	movf	_pwm,w
  4808  0E89  01CB               	clrf	_pwmAnt
  4809  0E8A  07CB               	addwf	_pwmAnt,f
  4810                           
  4811                           ;main.c: 322: if (USART_ReceiveChar() == '0')
  4812  0E8B  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4813  0E90  3A30               	xorlw	48
  4814  0E91  1D03               	skipz
  4815  0E92  2EAB               	goto	i1l2717
  4816                           
  4817                           ;main.c: 323: {
  4818                           ;main.c: 324: USART_WriteString("\n\rdesligado\n\r");
  4819  0E93  30EA               	movlw	low (STR_1| (0+32768))
  4820  0E94  00F1               	movwf	i1USART_WriteString@str
  4821  0E95  3090               	movlw	high (STR_1| (0+32768))
  4822  0E96  00F2               	movwf	i1USART_WriteString@str+1
  4823  0E97  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4824                           
  4825                           ;main.c: 325: pwm = 0;
  4826  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0E9E  01C9               	clrf	_pwm
  4829  0E9F  01CA               	clrf	_pwm+1
  4830                           
  4831                           ;main.c: 326: PWM_DutyCycle2(pwm);
  4832  0EA0  084A               	movf	_pwm+1,w
  4833  0EA1  01A1               	clrf	i1PWM_DutyCycle2@valor+1
  4834  0EA2  07A1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4835  0EA3  0849               	movf	_pwm,w
  4836  0EA4  01A0               	clrf	i1PWM_DutyCycle2@valor
  4837  0EA5  07A0               	addwf	i1PWM_DutyCycle2@valor,f
  4838  0EA6  120A  158A  2107  120A  158A  	fcall	i1_PWM_DutyCycle2
  4839  0EAB                     i1l2717:	
  4840                           
  4841                           ;main.c: 328: }
  4842                           ;main.c: 330: if (USART_ReceiveChar() == '1')
  4843  0EAB  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4844  0EB0  3A31               	xorlw	49
  4845  0EB1  1D03               	skipz
  4846  0EB2  2EC2               	goto	i1l2723
  4847                           
  4848                           ;main.c: 331: {
  4849                           ;main.c: 332: USART_WriteString("\n\rpwm = 32\n\r");
  4850  0EB3  30F8               	movlw	low (STR_2| (0+32768))
  4851  0EB4  00F1               	movwf	i1USART_WriteString@str
  4852  0EB5  3090               	movlw	high (STR_2| (0+32768))
  4853  0EB6  00F2               	movwf	i1USART_WriteString@str+1
  4854  0EB7  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4855                           
  4856                           ;main.c: 333: pwm = 32;
  4857  0EBC  3020               	movlw	32
  4858  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0EBF  00C9               	movwf	_pwm
  4861  0EC0  3000               	movlw	0
  4862  0EC1  00CA               	movwf	_pwm+1
  4863  0EC2                     i1l2723:	
  4864                           
  4865                           ;main.c: 335: }
  4866                           ;main.c: 337: if (USART_ReceiveChar() == '2')
  4867  0EC2  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4868  0EC7  3A32               	xorlw	50
  4869  0EC8  1D03               	skipz
  4870  0EC9  2ED9               	goto	i1l2729
  4871                           
  4872                           ;main.c: 338: {
  4873                           ;main.c: 339: USART_WriteString("\n\rpwm = 64\n\r");
  4874  0ECA  3005               	movlw	low (STR_3| (0+32768))
  4875  0ECB  00F1               	movwf	i1USART_WriteString@str
  4876  0ECC  3091               	movlw	high (STR_3| (0+32768))
  4877  0ECD  00F2               	movwf	i1USART_WriteString@str+1
  4878  0ECE  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4879                           
  4880                           ;main.c: 340: pwm = 64;
  4881  0ED3  3040               	movlw	64
  4882  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0ED6  00C9               	movwf	_pwm
  4885  0ED7  3000               	movlw	0
  4886  0ED8  00CA               	movwf	_pwm+1
  4887  0ED9                     i1l2729:	
  4888                           
  4889                           ;main.c: 342: }
  4890                           ;main.c: 344: if (USART_ReceiveChar() == '3')
  4891  0ED9  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4892  0EDE  3A33               	xorlw	51
  4893  0EDF  1D03               	skipz
  4894  0EE0  2EF5               	goto	i1l2739
  4895                           
  4896                           ;main.c: 345: {
  4897                           ;main.c: 346: USART_WriteString("\n\rpwm = 128\n\r");
  4898  0EE1  30CE               	movlw	low (STR_4| (0+32768))
  4899  0EE2  00F1               	movwf	i1USART_WriteString@str
  4900  0EE3  3090               	movlw	high (STR_4| (0+32768))
  4901  0EE4  00F2               	movwf	i1USART_WriteString@str+1
  4902  0EE5  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4903                           
  4904                           ;main.c: 347: pwm = 128;
  4905  0EEA  3080               	movlw	128
  4906  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0EED  00C9               	movwf	_pwm
  4909  0EEE  3000               	movlw	0
  4910  0EEF  00CA               	movwf	_pwm+1
  4911                           
  4912                           ;main.c: 349: if(PORTBbits.RB0 == 0)
  4913  0EF0  1806               	btfsc	6,0	;volatile
  4914  0EF1  2EF4               	goto	i1l194
  4915                           
  4916                           ;main.c: 350: {
  4917                           ;main.c: 351: PORTBbits.RB0 = 1;
  4918  0EF2  1406               	bsf	6,0	;volatile
  4919                           
  4920                           ;main.c: 352: }else{
  4921  0EF3  2EF5               	goto	i1l2739
  4922  0EF4                     i1l194:	
  4923                           
  4924                           ;main.c: 353: PORTBbits.RB0 = 0;
  4925  0EF4  1006               	bcf	6,0	;volatile
  4926  0EF5                     i1l2739:	
  4927                           
  4928                           ;main.c: 354: }
  4929                           ;main.c: 355: }
  4930                           ;main.c: 357: if (USART_ReceiveChar() == '4')
  4931  0EF5  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4932  0EFA  3A34               	xorlw	52
  4933  0EFB  1D03               	skipz
  4934  0EFC  2F11               	goto	i1l2749
  4935                           
  4936                           ;main.c: 358: {
  4937                           ;main.c: 359: USART_WriteString("\n\rpwm = 256\n\r");
  4938  0EFD  30B2               	movlw	low (STR_5| (0+32768))
  4939  0EFE  00F1               	movwf	i1USART_WriteString@str
  4940  0EFF  3090               	movlw	high (STR_5| (0+32768))
  4941  0F00  00F2               	movwf	i1USART_WriteString@str+1
  4942  0F01  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4943                           
  4944                           ;main.c: 360: pwm = 256;
  4945  0F06  3000               	movlw	0
  4946  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4947  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4948  0F09  00C9               	movwf	_pwm
  4949  0F0A  3001               	movlw	1
  4950  0F0B  00CA               	movwf	_pwm+1
  4951                           
  4952                           ;main.c: 362: if(PORTBbits.RB1 == 0)
  4953  0F0C  1886               	btfsc	6,1	;volatile
  4954  0F0D  2F10               	goto	i1l197
  4955                           
  4956                           ;main.c: 363: {
  4957                           ;main.c: 364: PORTBbits.RB1 = 1;
  4958  0F0E  1486               	bsf	6,1	;volatile
  4959                           
  4960                           ;main.c: 365: }else{
  4961  0F0F  2F11               	goto	i1l2749
  4962  0F10                     i1l197:	
  4963                           
  4964                           ;main.c: 366: PORTBbits.RB1 = 0;
  4965  0F10  1086               	bcf	6,1	;volatile
  4966  0F11                     i1l2749:	
  4967                           
  4968                           ;main.c: 367: }
  4969                           ;main.c: 368: }
  4970                           ;main.c: 370: if (USART_ReceiveChar() == '5')
  4971  0F11  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4972  0F16  3A35               	xorlw	53
  4973  0F17  1D03               	skipz
  4974  0F18  2F28               	goto	i1l2755
  4975                           
  4976                           ;main.c: 371: {
  4977                           ;main.c: 372: USART_WriteString("\n\rpwm = 512\n\r");
  4978  0F19  30A4               	movlw	low (STR_6| (0+32768))
  4979  0F1A  00F1               	movwf	i1USART_WriteString@str
  4980  0F1B  3090               	movlw	high (STR_6| (0+32768))
  4981  0F1C  00F2               	movwf	i1USART_WriteString@str+1
  4982  0F1D  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  4983                           
  4984                           ;main.c: 373: pwm = 512;
  4985  0F22  3000               	movlw	0
  4986  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0F25  00C9               	movwf	_pwm
  4989  0F26  3002               	movlw	2
  4990  0F27  00CA               	movwf	_pwm+1
  4991  0F28                     i1l2755:	
  4992                           
  4993                           ;main.c: 375: }
  4994                           ;main.c: 377: if (USART_ReceiveChar() == '6')
  4995  0F28  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  4996  0F2D  3A36               	xorlw	54
  4997  0F2E  1D03               	skipz
  4998  0F2F  2F3F               	goto	i1l2761
  4999                           
  5000                           ;main.c: 378: {
  5001                           ;main.c: 379: USART_WriteString("\n\rpwm = 768\n\r");
  5002  0F30  30DC               	movlw	low (STR_7| (0+32768))
  5003  0F31  00F1               	movwf	i1USART_WriteString@str
  5004  0F32  3090               	movlw	high (STR_7| (0+32768))
  5005  0F33  00F2               	movwf	i1USART_WriteString@str+1
  5006  0F34  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  5007                           
  5008                           ;main.c: 380: pwm = 768;
  5009  0F39  3000               	movlw	0
  5010  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0F3C  00C9               	movwf	_pwm
  5013  0F3D  3003               	movlw	3
  5014  0F3E  00CA               	movwf	_pwm+1
  5015  0F3F                     i1l2761:	
  5016                           
  5017                           ;main.c: 382: }
  5018                           ;main.c: 384: if (USART_ReceiveChar() == '7')
  5019  0F3F  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  5020  0F44  3A37               	xorlw	55
  5021  0F45  1D03               	skipz
  5022  0F46  2F56               	goto	i1l2767
  5023                           
  5024                           ;main.c: 385: {
  5025                           ;main.c: 386: USART_WriteString("\n\rpwm = 896\n\r");
  5026  0F47  30C0               	movlw	low (STR_8| (0+32768))
  5027  0F48  00F1               	movwf	i1USART_WriteString@str
  5028  0F49  3090               	movlw	high (STR_8| (0+32768))
  5029  0F4A  00F2               	movwf	i1USART_WriteString@str+1
  5030  0F4B  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  5031                           
  5032                           ;main.c: 387: pwm = 896;
  5033  0F50  3080               	movlw	128
  5034  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0F53  00C9               	movwf	_pwm
  5037  0F54  3003               	movlw	3
  5038  0F55  00CA               	movwf	_pwm+1
  5039  0F56                     i1l2767:	
  5040                           
  5041                           ;main.c: 389: }
  5042                           ;main.c: 391: if (USART_ReceiveChar() == '8')
  5043  0F56  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  5044  0F5B  3A38               	xorlw	56
  5045  0F5C  1D03               	skipz
  5046  0F5D  2F6D               	goto	i1l2773
  5047                           
  5048                           ;main.c: 392: {
  5049                           ;main.c: 393: USART_WriteString("\n\rpwm = 1000\n\r");
  5050  0F5E  3086               	movlw	low (STR_9| (0+32768))
  5051  0F5F  00F1               	movwf	i1USART_WriteString@str
  5052  0F60  3090               	movlw	high (STR_9| (0+32768))
  5053  0F61  00F2               	movwf	i1USART_WriteString@str+1
  5054  0F62  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  5055                           
  5056                           ;main.c: 394: pwm = 1000;
  5057  0F67  30E8               	movlw	232
  5058  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0F6A  00C9               	movwf	_pwm
  5061  0F6B  3003               	movlw	3
  5062  0F6C  00CA               	movwf	_pwm+1
  5063  0F6D                     i1l2773:	
  5064                           
  5065                           ;main.c: 396: }
  5066                           ;main.c: 398: if (USART_ReceiveChar() == '9')
  5067  0F6D  120A  158A  2122  120A  158A  	fcall	_USART_ReceiveChar
  5068  0F72  3A39               	xorlw	57
  5069  0F73  1D03               	skipz
  5070  0F74  2F84               	goto	i1l2779
  5071                           
  5072                           ;main.c: 399: {
  5073                           ;main.c: 400: USART_WriteString("\n\rpwm = 1023\n\r");
  5074  0F75  3095               	movlw	low (STR_10| (0+32768))
  5075  0F76  00F1               	movwf	i1USART_WriteString@str
  5076  0F77  3090               	movlw	high (STR_10| (0+32768))
  5077  0F78  00F2               	movwf	i1USART_WriteString@str+1
  5078  0F79  120A  158A  217B  120A  158A  	fcall	i1_USART_WriteString
  5079                           
  5080                           ;main.c: 401: pwm = 1023;
  5081  0F7E  30FF               	movlw	255
  5082  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0F81  00C9               	movwf	_pwm
  5085  0F82  3003               	movlw	3
  5086  0F83  00CA               	movwf	_pwm+1
  5087  0F84                     i1l2779:	
  5088                           
  5089                           ;main.c: 403: }
  5090                           ;main.c: 407: Fuzzy(pwm);
  5091  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0F86  084A               	movf	_pwm+1,w
  5094  0F87  01AD               	clrf	Fuzzy@setpoint+1
  5095  0F88  07AD               	addwf	Fuzzy@setpoint+1,f
  5096  0F89  0849               	movf	_pwm,w
  5097  0F8A  01AC               	clrf	Fuzzy@setpoint
  5098  0F8B  07AC               	addwf	Fuzzy@setpoint,f
  5099  0F8C  120A  118A  2042  120A  158A  	fcall	_Fuzzy
  5100                           
  5101                           ;main.c: 410: PIR1bits.RCIF = 0;
  5102  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0F93  128C               	bcf	12,5	;volatile
  5105  0F94                     i1l2783:	
  5106                           
  5107                           ;main.c: 411: }
  5108                           ;main.c: 414: if (PIR1bits.ADIF)
  5109  0F94  1B0C               	btfsc	12,6	;volatile
  5110                           
  5111                           ;main.c: 415: {
  5112                           ;main.c: 419: PIR1bits.ADIF = 0;
  5113  0F95  130C               	bcf	12,6	;volatile
  5114                           
  5115                           ;main.c: 420: }
  5116                           ;main.c: 424: if (INTCONbits.T0IF)
  5117  0F96  1D0B               	btfss	11,2	;volatile
  5118  0F97  2FF1               	goto	i1l2809
  5119                           
  5120                           ;main.c: 425: {
  5121                           ;main.c: 427: TIMER0_Set(238);
  5122  0F98  30EE               	movlw	238
  5123  0F99  120A  158A  205F  120A  158A  	fcall	i1_TIMER0_Set
  5124                           
  5125                           ;main.c: 430: if (contagens_tm0 < 499)
  5126  0F9E  3001               	movlw	1
  5127  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5128  0FA0  1303               	bcf	3,6	;RP1=0, select bank1
  5129  0FA1  0225               	subwf	(_contagens_tm0+1)^(0+128),w
  5130  0FA2  30F3               	movlw	243
  5131  0FA3  1903               	skipnz
  5132  0FA4  0224               	subwf	_contagens_tm0^(0+128),w
  5133  0FA5  1803               	skipnc
  5134  0FA6  2FB1               	goto	i1l2795
  5135                           
  5136                           ;main.c: 431: {
  5137                           ;main.c: 433: contagens_tm0++;
  5138  0FA7  3001               	movlw	1
  5139  0FA8  07A4               	addwf	_contagens_tm0^(0+128),f
  5140  0FA9  1803               	skipnc
  5141  0FAA  0AA5               	incf	(_contagens_tm0+1)^(0+128),f
  5142  0FAB  3000               	movlw	0
  5143  0FAC  07A5               	addwf	(_contagens_tm0+1)^(0+128),f
  5144                           
  5145                           ;main.c: 436: PORTBbits.RB6 = 1;
  5146  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0FAF  1706               	bsf	6,6	;volatile
  5149                           
  5150                           ;main.c: 437: }
  5151  0FB0  2FF0               	goto	i1l2807
  5152  0FB1                     i1l2795:	
  5153                           
  5154                           ;main.c: 438: else
  5155                           ;main.c: 439: {
  5156                           ;main.c: 441: contagens_tm0 = 0;
  5157  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  5158  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  5159  0FB3  01A4               	clrf	_contagens_tm0^(0+128)
  5160  0FB4  01A5               	clrf	(_contagens_tm0+1)^(0+128)
  5161                           
  5162                           ;main.c: 444: pulsos = (TMR1H << 8) + TMR1L;
  5163  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  5165  0FB7  080F               	movf	15,w	;volatile
  5166  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  5167  0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0FBA  01B7               	clrf	(_pulsos+1)^(0+128)
  5169  0FBB  07B7               	addwf	(_pulsos+1)^(0+128),f
  5170  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0FBE  080E               	movf	14,w	;volatile
  5173  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0FC1  01B6               	clrf	_pulsos^(0+128)
  5176  0FC2  07B6               	addwf	_pulsos^(0+128),f
  5177                           
  5178                           ;main.c: 445: rpm = ((pulsos / pas_cooler) * 120);
  5179  0FC3  086C               	movf	(_pas_cooler+1)^(0+128),w
  5180  0FC4  01F1               	clrf	i1___lwdiv@divisor+1
  5181  0FC5  07F1               	addwf	i1___lwdiv@divisor+1,f
  5182  0FC6  086B               	movf	_pas_cooler^(0+128),w
  5183  0FC7  01F0               	clrf	i1___lwdiv@divisor
  5184  0FC8  07F0               	addwf	i1___lwdiv@divisor,f
  5185  0FC9  0837               	movf	(_pulsos+1)^(0+128),w
  5186  0FCA  01F3               	clrf	i1___lwdiv@dividend+1
  5187  0FCB  07F3               	addwf	i1___lwdiv@dividend+1,f
  5188  0FCC  0836               	movf	_pulsos^(0+128),w
  5189  0FCD  01F2               	clrf	i1___lwdiv@dividend
  5190  0FCE  07F2               	addwf	i1___lwdiv@dividend,f
  5191  0FCF  120A  158A  225A  120A  158A  	fcall	i1___lwdiv
  5192  0FD4  0871               	movf	?i1___lwdiv+1,w
  5193  0FD5  01F9               	clrf	i1___wmul@multiplier+1
  5194  0FD6  07F9               	addwf	i1___wmul@multiplier+1,f
  5195  0FD7  0870               	movf	?i1___lwdiv,w
  5196  0FD8  01F8               	clrf	i1___wmul@multiplier
  5197  0FD9  07F8               	addwf	i1___wmul@multiplier,f
  5198  0FDA  3078               	movlw	120
  5199  0FDB  00FA               	movwf	i1___wmul@multiplicand
  5200  0FDC  3000               	movlw	0
  5201  0FDD  00FB               	movwf	i1___wmul@multiplicand+1
  5202  0FDE  120A  158A  2158  120A  158A  	fcall	i1___wmul
  5203  0FE3  0879               	movf	?i1___wmul+1,w
  5204  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  5205  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  5206  0FE6  01B9               	clrf	(_rpm+1)^(0+128)
  5207  0FE7  07B9               	addwf	(_rpm+1)^(0+128),f
  5208  0FE8  0878               	movf	?i1___wmul,w
  5209  0FE9  01B8               	clrf	_rpm^(0+128)
  5210  0FEA  07B8               	addwf	_rpm^(0+128),f
  5211                           
  5212                           ;main.c: 448: TMR1L = 0x00;
  5213  0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  5214  0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  5215  0FED  018E               	clrf	14	;volatile
  5216                           
  5217                           ;main.c: 449: TMR1H = 0x00;
  5218  0FEE  018F               	clrf	15	;volatile
  5219                           
  5220                           ;main.c: 452: PORTBbits.RB6 = 0;
  5221  0FEF  1306               	bcf	6,6	;volatile
  5222  0FF0                     i1l2807:	
  5223                           
  5224                           ;main.c: 453: }
  5225                           ;main.c: 456: INTCONbits.T0IF = 0;
  5226  0FF0  110B               	bcf	11,2	;volatile
  5227  0FF1                     i1l2809:	
  5228                           
  5229                           ;main.c: 457: }
  5230                           ;main.c: 460: if (PIR1bits.TMR1IF)
  5231  0FF1  180C               	btfsc	12,0	;volatile
  5232                           
  5233                           ;main.c: 461: {
  5234                           ;main.c: 465: PIR1bits.TMR1IF = 0;
  5235  0FF2  100C               	bcf	12,0	;volatile
  5236                           
  5237                           ;main.c: 466: }
  5238                           ;main.c: 469: if (PIR1bits.SSPIF)
  5239  0FF3  198C               	btfsc	12,3	;volatile
  5240                           
  5241                           ;main.c: 470: {
  5242                           ;main.c: 474: PIR1bits.SSPIF = 0;
  5243  0FF4  118C               	bcf	12,3	;volatile
  5244  0FF5  0836               	movf	??_ISR+3,w
  5245  0FF6  00FF               	movwf	127
  5246  0FF7  0835               	movf	??_ISR+2,w
  5247  0FF8  008A               	movwf	10
  5248  0FF9  0834               	movf	??_ISR+1,w
  5249  0FFA  0084               	movwf	4
  5250  0FFB  0E33               	swapf	??_ISR^0,w
  5251  0FFC  0083               	movwf	3
  5252  0FFD  0EFE               	swapf	126,f
  5253  0FFE  0E7E               	swapf	126,w
  5254  0FFF  0009               	retfie
  5255  1000                     __end_of_ISR:	
  5256                           
  5257                           	psect	intentry
  5258  0004                     __pintentry:	
  5259                           ;incstack = 0
  5260                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5261                           
  5262  0004                     interrupt_function:	
  5263  007E                     saved_w	set	btemp
  5264  0004  00FE               	movwf	btemp
  5265  0005  0E03               	swapf	3,w
  5266  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0008  00B3               	movwf	??_ISR
  5269  0009  0804               	movf	4,w
  5270  000A  00B4               	movwf	??_ISR+1
  5271  000B  080A               	movf	10,w
  5272  000C  00B5               	movwf	??_ISR+2
  5273  000D  087F               	movf	btemp+1,w
  5274  000E  00B6               	movwf	??_ISR+3
  5275  000F  120A  158A  2E83   	ljmp	_ISR
  5276                           
  5277                           	psect	text23
  5278  085F                     __ptext23:	
  5279 ;; *************** function i1_TIMER0_Set *****************
  5280 ;; Defined at:
  5281 ;;		line 20 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\timers.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  contagens       1    wreg     unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  contagens       1    0[COMMON] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         0       0       0       0       0
  5296 ;;      Locals:         1       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0
  5298 ;;      Totals:         1       0       0       0       0
  5299 ;;Total ram usage:        1 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_ISR
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           
  5309                           ;psect for function i1_TIMER0_Set
  5310  085F                     i1_TIMER0_Set:	
  5311                           
  5312                           ;incstack = 0
  5313                           ; Regs used in i1_TIMER0_Set: [wreg]
  5314                           ;i1TIMER0_Set@contagens stored from wreg
  5315  085F  00F0               	movwf	i1TIMER0_Set@contagens
  5316                           
  5317                           ;timers.c: 22: TMR0 = contagens;
  5318  0860  0870               	movf	i1TIMER0_Set@contagens,w
  5319  0861  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0862  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0863  0081               	movwf	1	;volatile
  5322  0864  0008               	return
  5323  0865                     __end_ofi1_TIMER0_Set:	
  5324                           
  5325                           	psect	text24
  5326  0922                     __ptext24:	
  5327 ;; *************** function _USART_ReceiveChar *****************
  5328 ;; Defined at:
  5329 ;;		line 63 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  byte            1    4[COMMON] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      unsigned char 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       0       0       0       0
  5344 ;;      Locals:         1       0       0       0       0
  5345 ;;      Temps:          1       0       0       0       0
  5346 ;;      Totals:         2       0       0       0       0
  5347 ;;Total ram usage:        2 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    2
  5350 ;; This function calls:
  5351 ;;		i1_USART_WriteString
  5352 ;; This function is called by:
  5353 ;;		_ISR
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _USART_ReceiveChar
  5359  0922                     _USART_ReceiveChar:	
  5360                           
  5361                           ;usart.c: 65: unsigned char byte;
  5362                           ;usart.c: 67: if (!OERR)
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5366  0922  1283               	bcf	3,5	;RP0=0, select bank0
  5367  0923  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0924  1898               	btfsc	24,1	;volatile
  5369  0925  292B               	goto	i1l2439
  5370                           
  5371                           ;usart.c: 68: {
  5372                           ;usart.c: 69: byte = RCREG;
  5373  0926  081A               	movf	26,w	;volatile
  5374  0927  00F3               	movwf	??_USART_ReceiveChar
  5375  0928  0873               	movf	??_USART_ReceiveChar,w
  5376  0929  00F4               	movwf	USART_ReceiveChar@byte
  5377  092A  293A               	goto	i1l2447
  5378  092B                     i1l2439:	
  5379                           ;usart.c: 71: }
  5380                           
  5381                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5382                           
  5383                           
  5384                           ;usart.c: 72: else
  5385                           ;usart.c: 73: {
  5386                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5387  092B  301C               	movlw	low (STR_19| (0+32768))
  5388  092C  00F1               	movwf	i1USART_WriteString@str
  5389  092D  3090               	movlw	high (STR_19| (0+32768))
  5390  092E  00F2               	movwf	i1USART_WriteString@str+1
  5391  092F  120A  158A  217B   	fcall	i1_USART_WriteString
  5392                           
  5393                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5394  0932  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0933  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0934  1218               	bcf	24,4	;volatile
  5397                           
  5398                           ;usart.c: 77: byte = RCREG;
  5399  0935  081A               	movf	26,w	;volatile
  5400  0936  00F3               	movwf	??_USART_ReceiveChar
  5401  0937  0873               	movf	??_USART_ReceiveChar,w
  5402  0938  00F4               	movwf	USART_ReceiveChar@byte
  5403                           
  5404                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5405  0939  1618               	bsf	24,4	;volatile
  5406  093A                     i1l2447:	
  5407                           
  5408                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5409  093A  128C               	bcf	12,5	;volatile
  5410                           
  5411                           ;usart.c: 80: }
  5412                           ;usart.c: 82: return(byte);
  5413  093B  0874               	movf	USART_ReceiveChar@byte,w
  5414  093C  0008               	return
  5415  093D                     __end_of_USART_ReceiveChar:	
  5416                           
  5417                           	psect	text25
  5418  097B                     __ptext25:	
  5419 ;; *************** function i1_USART_WriteString *****************
  5420 ;; Defined at:
  5421 ;;		line 52 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  str             2    1[COMMON] PTR const unsigned char 
  5424 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5425 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5426 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5427 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5439 ;;      Params:         2       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0
  5442 ;;      Totals:         2       0       0       0       0
  5443 ;;Total ram usage:        2 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    1
  5446 ;; This function calls:
  5447 ;;		i1_USART_WriteChar
  5448 ;; This function is called by:
  5449 ;;		_ISR
  5450 ;;		_USART_ReceiveChar
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function i1_USART_WriteString
  5456  097B                     i1_USART_WriteString:	
  5457  097B                     i1l2307:	
  5458                           ;usart.c: 54: while(*str != '\0')
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5462                           
  5463  097B  0872               	movf	i1USART_WriteString@str+1,w
  5464  097C  1283               	bcf	3,5	;RP0=0, select bank0
  5465  097D  1303               	bcf	3,6	;RP1=0, select bank0
  5466  097E  00FF               	movwf	127
  5467  097F  0871               	movf	i1USART_WriteString@str,w
  5468  0980  0084               	movwf	4
  5469  0981  160A  118A  2000  120A  158A  	fcall	stringtab
  5470  0986  3800               	iorlw	0
  5471  0987  1903               	btfsc	3,2
  5472  0988  0008               	return
  5473                           
  5474                           ;usart.c: 55: {
  5475                           ;usart.c: 56: USART_WriteChar(*str);
  5476  0989  0872               	movf	i1USART_WriteString@str+1,w
  5477  098A  1283               	bcf	3,5	;RP0=0, select bank0
  5478  098B  1303               	bcf	3,6	;RP1=0, select bank0
  5479  098C  00FF               	movwf	127
  5480  098D  0871               	movf	i1USART_WriteString@str,w
  5481  098E  0084               	movwf	4
  5482  098F  160A  118A  2000  120A  158A  	fcall	stringtab
  5483  0994  120A  158A  206B  120A  158A  	fcall	i1_USART_WriteChar
  5484                           
  5485                           ;usart.c: 57: str++;
  5486  0999  3001               	movlw	1
  5487  099A  07F1               	addwf	i1USART_WriteString@str,f
  5488  099B  1803               	skipnc
  5489  099C  0AF2               	incf	i1USART_WriteString@str+1,f
  5490  099D  297B               	goto	i1l2307
  5491  099E                     __end_ofi1_USART_WriteString:	
  5492                           
  5493                           	psect	text26
  5494  086B                     __ptext26:	
  5495 ;; *************** function i1_USART_WriteChar *****************
  5496 ;; Defined at:
  5497 ;;		line 44 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\usart.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  byte            1    wreg     unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  byte            1    0[COMMON] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		wreg
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5511 ;;      Params:         0       0       0       0       0
  5512 ;;      Locals:         1       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0
  5514 ;;      Totals:         1       0       0       0       0
  5515 ;;Total ram usage:        1 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		i1_USART_WriteString
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function i1_USART_WriteChar
  5526  086B                     i1_USART_WriteChar:	
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in i1_USART_WriteChar: [wreg]
  5530                           ;i1USART_WriteChar@byte stored from wreg
  5531  086B  00F0               	movwf	i1USART_WriteChar@byte
  5532  086C                     i1l238:	
  5533                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5534                           
  5535  086C  1283               	bcf	3,5	;RP0=0, select bank0
  5536  086D  1303               	bcf	3,6	;RP1=0, select bank0
  5537  086E  1E0C               	btfss	12,4	;volatile
  5538  086F  286C               	goto	i1l238
  5539                           
  5540                           ;usart.c: 47: TXREG = byte;
  5541  0870  0870               	movf	i1USART_WriteChar@byte,w
  5542  0871  0099               	movwf	25	;volatile
  5543  0872  0008               	return
  5544  0873                     __end_ofi1_USART_WriteChar:	
  5545                           
  5546                           	psect	text27
  5547  0042                     __ptext27:	
  5548 ;; *************** function _Fuzzy *****************
  5549 ;; Defined at:
  5550 ;;		line 136 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  setpoint        2   12[BANK0 ] unsigned int 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  sum             2   17[BANK0 ] unsigned int 
  5555 ;;  velocidade      1   16[BANK0 ] unsigned char [1]
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       2       0       0       0
  5566 ;;      Locals:         0       3       0       0       0
  5567 ;;      Temps:          0       2       0       0       0
  5568 ;;      Totals:         0       7       0       0       0
  5569 ;;Total ram usage:        7 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    2
  5572 ;; This function calls:
  5573 ;;		___ftge
  5574 ;;		___lwtoft
  5575 ;;		_max_val
  5576 ;;		_trapmf
  5577 ;;		_trimf
  5578 ;;		i1_PWM_DutyCycle2
  5579 ;;		i1___lwdiv
  5580 ;;		i1___wmul
  5581 ;; This function is called by:
  5582 ;;		_ISR
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _Fuzzy
  5588  0042                     _Fuzzy:	
  5589                           
  5590                           ;main.c: 147: fitemp =0;
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+pclath+cstack]
  5594  0042  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0043  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0044  01C1               	clrf	_fitemp
  5597  0045  01C2               	clrf	_fitemp+1
  5598                           
  5599                           ;main.c: 150: temp = (setpoint - pwmAnt);
  5600  0046  094B               	comf	_pwmAnt,w
  5601  0047  00AE               	movwf	??_Fuzzy
  5602  0048  094C               	comf	_pwmAnt+1,w
  5603  0049  00AF               	movwf	??_Fuzzy+1
  5604  004A  0AAE               	incf	??_Fuzzy,f
  5605  004B  1903               	skipnz
  5606  004C  0AAF               	incf	??_Fuzzy+1,f
  5607  004D  082C               	movf	Fuzzy@setpoint,w
  5608  004E  072E               	addwf	??_Fuzzy,w
  5609  004F  00CD               	movwf	_temp
  5610  0050  082D               	movf	Fuzzy@setpoint+1,w
  5611  0051  1803               	skipnc
  5612  0052  0A2D               	incf	Fuzzy@setpoint+1,w
  5613  0053  072F               	addwf	??_Fuzzy+1,w
  5614  0054  00CE               	movwf	_temp+1
  5615                           
  5616                           ;main.c: 152: if(PORTBbits.RB2 == 0)
  5617  0055  1906               	btfsc	6,2	;volatile
  5618  0056  2859               	goto	i1l167
  5619                           
  5620                           ;main.c: 153: {
  5621                           ;main.c: 154: PORTBbits.RB2 = 1;
  5622  0057  1506               	bsf	6,2	;volatile
  5623                           
  5624                           ;main.c: 155: }else{
  5625  0058  285A               	goto	i1l2333
  5626  0059                     i1l167:	
  5627                           
  5628                           ;main.c: 156: PORTBbits.RB2 = 0;
  5629  0059  1106               	bcf	6,2	;volatile
  5630  005A                     i1l2333:	
  5631                           
  5632                           ;main.c: 157: }
  5633                           ;main.c: 159: deltaV = (setpoint - pwmAnt);
  5634  005A  094B               	comf	_pwmAnt,w
  5635  005B  00AE               	movwf	??_Fuzzy
  5636  005C  094C               	comf	_pwmAnt+1,w
  5637  005D  00AF               	movwf	??_Fuzzy+1
  5638  005E  0AAE               	incf	??_Fuzzy,f
  5639  005F  1903               	skipnz
  5640  0060  0AAF               	incf	??_Fuzzy+1,f
  5641  0061  082C               	movf	Fuzzy@setpoint,w
  5642  0062  072E               	addwf	??_Fuzzy,w
  5643  0063  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0064  1303               	bcf	3,6	;RP1=0, select bank1
  5645  0065  00A6               	movwf	_deltaV^(0+128)
  5646  0066  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0067  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0068  082D               	movf	Fuzzy@setpoint+1,w
  5649  0069  1803               	skipnc
  5650  006A  0A2D               	incf	Fuzzy@setpoint+1,w
  5651  006B  072F               	addwf	??_Fuzzy+1,w
  5652  006C  1683               	bsf	3,5	;RP0=1, select bank1
  5653  006D  1303               	bcf	3,6	;RP1=0, select bank1
  5654  006E  00A7               	movwf	(_deltaV+1)^(0+128)
  5655                           
  5656                           ;main.c: 160: pwm = temp;
  5657  006F  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0070  1303               	bcf	3,6	;RP1=0, select bank0
  5659  0071  084E               	movf	_temp+1,w
  5660  0072  01CA               	clrf	_pwm+1
  5661  0073  07CA               	addwf	_pwm+1,f
  5662  0074  084D               	movf	_temp,w
  5663  0075  01C9               	clrf	_pwm
  5664  0076  07C9               	addwf	_pwm,f
  5665                           
  5666                           ;main.c: 161: rpm = temp;
  5667  0077  084E               	movf	_temp+1,w
  5668  0078  1683               	bsf	3,5	;RP0=1, select bank1
  5669  0079  1303               	bcf	3,6	;RP1=0, select bank1
  5670  007A  01B9               	clrf	(_rpm+1)^(0+128)
  5671  007B  07B9               	addwf	(_rpm+1)^(0+128),f
  5672  007C  1283               	bcf	3,5	;RP0=0, select bank0
  5673  007D  1303               	bcf	3,6	;RP1=0, select bank0
  5674  007E  084D               	movf	_temp,w
  5675  007F  1683               	bsf	3,5	;RP0=1, select bank1
  5676  0080  1303               	bcf	3,6	;RP1=0, select bank1
  5677  0081  01B8               	clrf	_rpm^(0+128)
  5678  0082  07B8               	addwf	_rpm^(0+128),f
  5679                           
  5680                           ;main.c: 164: if (temp >10) temp = 10;
  5681  0083  3000               	movlw	0
  5682  0084  1283               	bcf	3,5	;RP0=0, select bank0
  5683  0085  1303               	bcf	3,6	;RP1=0, select bank0
  5684  0086  024E               	subwf	_temp+1,w
  5685  0087  300B               	movlw	11
  5686  0088  1903               	skipnz
  5687  0089  024D               	subwf	_temp,w
  5688  008A  1C03               	skipc
  5689  008B  2890               	goto	i1l2341
  5690  008C  300A               	movlw	10
  5691  008D  00CD               	movwf	_temp
  5692  008E  3000               	movlw	0
  5693  008F  00CE               	movwf	_temp+1
  5694  0090                     i1l2341:	
  5695                           ;main.c: 165: if (temp <0) temp = 0;
  5696                           
  5697                           
  5698                           ;main.c: 168: if (temp < 2.5)
  5699  0090  084E               	movf	_temp+1,w
  5700  0091  01F9               	clrf	___lwtoft@c+1
  5701  0092  07F9               	addwf	___lwtoft@c+1,f
  5702  0093  084D               	movf	_temp,w
  5703  0094  01F8               	clrf	___lwtoft@c
  5704  0095  07F8               	addwf	___lwtoft@c,f
  5705  0096  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  5706  009B  0878               	movf	?___lwtoft,w
  5707  009C  1283               	bcf	3,5	;RP0=0, select bank0
  5708  009D  1303               	bcf	3,6	;RP1=0, select bank0
  5709  009E  00A0               	movwf	___ftge@ff1
  5710  009F  0879               	movf	?___lwtoft+1,w
  5711  00A0  00A1               	movwf	___ftge@ff1+1
  5712  00A1  087A               	movf	?___lwtoft+2,w
  5713  00A2  00A2               	movwf	___ftge@ff1+2
  5714  00A3  3000               	movlw	0
  5715  00A4  00A3               	movwf	___ftge@ff2
  5716  00A5  3020               	movlw	32
  5717  00A6  00A4               	movwf	___ftge@ff2+1
  5718  00A7  3040               	movlw	64
  5719  00A8  00A5               	movwf	___ftge@ff2+2
  5720  00A9  120A  158A  2375  120A  118A  	fcall	___ftge
  5721  00AE  1803               	btfsc	3,0
  5722  00AF  2931               	goto	i1l2355
  5723                           
  5724                           ;main.c: 169: {
  5725                           ;main.c: 171: fitemp = trapmf(temp,-1,0,1.5,3);
  5726  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  5727  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  5728  00B2  084E               	movf	_temp+1,w
  5729  00B3  01A1               	clrf	trapmf@x+1
  5730  00B4  07A1               	addwf	trapmf@x+1,f
  5731  00B5  084D               	movf	_temp,w
  5732  00B6  01A0               	clrf	trapmf@x
  5733  00B7  07A0               	addwf	trapmf@x,f
  5734  00B8  30FF               	movlw	255
  5735  00B9  00A2               	movwf	trapmf@a
  5736  00BA  30FF               	movlw	255
  5737  00BB  00A3               	movwf	trapmf@a+1
  5738  00BC  3000               	movlw	0
  5739  00BD  00A4               	movwf	trapmf@b
  5740  00BE  3000               	movlw	0
  5741  00BF  00A5               	movwf	trapmf@b+1
  5742  00C0  3001               	movlw	1
  5743  00C1  00A6               	movwf	trapmf@c
  5744  00C2  3000               	movlw	0
  5745  00C3  00A7               	movwf	trapmf@c+1
  5746  00C4  3003               	movlw	3
  5747  00C5  00A8               	movwf	trapmf@d
  5748  00C6  3000               	movlw	0
  5749  00C7  00A9               	movwf	trapmf@d+1
  5750  00C8  120A  158A  2529  120A  118A  	fcall	_trapmf
  5751  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  5752  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  5753  00CF  0821               	movf	?_trapmf+1,w
  5754  00D0  01C2               	clrf	_fitemp+1
  5755  00D1  07C2               	addwf	_fitemp+1,f
  5756  00D2  0820               	movf	?_trapmf,w
  5757  00D3  01C1               	clrf	_fitemp
  5758  00D4  07C1               	addwf	_fitemp,f
  5759                           
  5760                           ;main.c: 174: fop_rule1 = max_val(fitemp,0.1);
  5761  00D5  0842               	movf	_fitemp+1,w
  5762  00D6  01F1               	clrf	max_val@a+1
  5763  00D7  07F1               	addwf	max_val@a+1,f
  5764  00D8  0841               	movf	_fitemp,w
  5765  00D9  01F0               	clrf	max_val@a
  5766  00DA  07F0               	addwf	max_val@a,f
  5767  00DB  3000               	movlw	0
  5768  00DC  00F2               	movwf	max_val@b
  5769  00DD  3000               	movlw	0
  5770  00DE  00F3               	movwf	max_val@b+1
  5771  00DF  120A  158A  208E  120A  118A  	fcall	_max_val
  5772  00E4  0871               	movf	?_max_val+1,w
  5773  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5774  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5775  00E7  01C4               	clrf	_fop_rule1+1
  5776  00E8  07C4               	addwf	_fop_rule1+1,f
  5777  00E9  0870               	movf	?_max_val,w
  5778  00EA  01C3               	clrf	_fop_rule1
  5779  00EB  07C3               	addwf	_fop_rule1,f
  5780                           
  5781                           ;main.c: 177: x=0;
  5782  00EC  01D3               	clrf	_x
  5783  00ED  01D4               	clrf	_x+1
  5784                           
  5785                           ;main.c: 178: y=0;
  5786  00EE  01D5               	clrf	_y
  5787  00EF  01D6               	clrf	_y+1
  5788                           
  5789                           ;main.c: 180: y = trapmf(x,-1,0,1.5,3);
  5790  00F0  0854               	movf	_x+1,w
  5791  00F1  01A1               	clrf	trapmf@x+1
  5792  00F2  07A1               	addwf	trapmf@x+1,f
  5793  00F3  0853               	movf	_x,w
  5794  00F4  01A0               	clrf	trapmf@x
  5795  00F5  07A0               	addwf	trapmf@x,f
  5796  00F6  30FF               	movlw	255
  5797  00F7  00A2               	movwf	trapmf@a
  5798  00F8  30FF               	movlw	255
  5799  00F9  00A3               	movwf	trapmf@a+1
  5800  00FA  3000               	movlw	0
  5801  00FB  00A4               	movwf	trapmf@b
  5802  00FC  3000               	movlw	0
  5803  00FD  00A5               	movwf	trapmf@b+1
  5804  00FE  3001               	movlw	1
  5805  00FF  00A6               	movwf	trapmf@c
  5806  0100  3000               	movlw	0
  5807  0101  00A7               	movwf	trapmf@c+1
  5808  0102  3003               	movlw	3
  5809  0103  00A8               	movwf	trapmf@d
  5810  0104  3000               	movlw	0
  5811  0105  00A9               	movwf	trapmf@d+1
  5812  0106  120A  158A  2529  120A  118A  	fcall	_trapmf
  5813  010B  1283               	bcf	3,5	;RP0=0, select bank0
  5814  010C  1303               	bcf	3,6	;RP1=0, select bank0
  5815  010D  0821               	movf	?_trapmf+1,w
  5816  010E  01D6               	clrf	_y+1
  5817  010F  07D6               	addwf	_y+1,f
  5818  0110  0820               	movf	?_trapmf,w
  5819  0111  01D5               	clrf	_y
  5820  0112  07D5               	addwf	_y,f
  5821                           
  5822                           ;main.c: 182: if (y > fop_rule1)
  5823  0113  0856               	movf	_y+1,w
  5824  0114  0244               	subwf	_fop_rule1+1,w
  5825  0115  1D03               	skipz
  5826  0116  2919               	goto	u229_25
  5827  0117  0855               	movf	_y,w
  5828  0118  0243               	subwf	_fop_rule1,w
  5829  0119                     u229_25:	
  5830  0119  1803               	skipnc
  5831  011A  2924               	goto	i1l2353
  5832                           
  5833                           ;main.c: 183: {
  5834                           ;main.c: 184: ideal = fop_rule1;
  5835  011B  0844               	movf	_fop_rule1+1,w
  5836  011C  1683               	bsf	3,5	;RP0=1, select bank1
  5837  011D  1303               	bcf	3,6	;RP1=0, select bank1
  5838  011E  01AF               	clrf	(_ideal+1)^(0+128)
  5839  011F  07AF               	addwf	(_ideal+1)^(0+128),f
  5840  0120  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0121  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0122  0843               	movf	_fop_rule1,w
  5843  0123  292D               	goto	L3
  5844  0124                     i1l2353:	
  5845                           ;main.c: 185: }
  5846                           
  5847                           
  5848                           ;main.c: 186: else
  5849                           ;main.c: 187: {
  5850                           ;main.c: 188: ideal = y;
  5851  0124  1283               	bcf	3,5	;RP0=0, select bank0
  5852  0125  0856               	movf	_y+1,w
  5853  0126  1683               	bsf	3,5	;RP0=1, select bank1
  5854  0127  1303               	bcf	3,6	;RP1=0, select bank1
  5855  0128  01AF               	clrf	(_ideal+1)^(0+128)
  5856  0129  07AF               	addwf	(_ideal+1)^(0+128),f
  5857  012A  1283               	bcf	3,5	;RP0=0, select bank0
  5858  012B  1303               	bcf	3,6	;RP1=0, select bank0
  5859  012C  0855               	movf	_y,w
  5860  012D                     L3:	
  5861  012D  1683               	bsf	3,5	;RP0=1, select bank1
  5862  012E  1303               	bcf	3,6	;RP1=0, select bank1
  5863  012F  01AE               	clrf	_ideal^(0+128)
  5864  0130  07AE               	addwf	_ideal^(0+128),f
  5865  0131                     i1l2355:	
  5866                           
  5867                           ;main.c: 189: }
  5868                           ;main.c: 191: }
  5869                           ;main.c: 195: if ((temp > 2) && (temp < 7))
  5870  0131  3000               	movlw	0
  5871  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5872  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5873  0134  024E               	subwf	_temp+1,w
  5874  0135  3003               	movlw	3
  5875  0136  1903               	skipnz
  5876  0137  024D               	subwf	_temp,w
  5877  0138  1C03               	skipc
  5878  0139  29B8               	goto	i1l2371
  5879  013A  3000               	movlw	0
  5880  013B  024E               	subwf	_temp+1,w
  5881  013C  3007               	movlw	7
  5882  013D  1903               	skipnz
  5883  013E  024D               	subwf	_temp,w
  5884  013F  1803               	skipnc
  5885  0140  29B8               	goto	i1l2371
  5886                           
  5887                           ;main.c: 196: {
  5888                           ;main.c: 198: fitemp = trimf(temp,2,5,8);
  5889  0141  084E               	movf	_temp+1,w
  5890  0142  01A1               	clrf	trimf@x+1
  5891  0143  07A1               	addwf	trimf@x+1,f
  5892  0144  084D               	movf	_temp,w
  5893  0145  01A0               	clrf	trimf@x
  5894  0146  07A0               	addwf	trimf@x,f
  5895  0147  3002               	movlw	2
  5896  0148  00A2               	movwf	trimf@a
  5897  0149  3000               	movlw	0
  5898  014A  00A3               	movwf	trimf@a+1
  5899  014B  3005               	movlw	5
  5900  014C  00A4               	movwf	trimf@b
  5901  014D  3000               	movlw	0
  5902  014E  00A5               	movwf	trimf@b+1
  5903  014F  3008               	movlw	8
  5904  0150  00A6               	movwf	trimf@c
  5905  0151  3000               	movlw	0
  5906  0152  00A7               	movwf	trimf@c+1
  5907  0153  120A  158A  24A9  120A  118A  	fcall	_trimf
  5908  0158  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0159  1303               	bcf	3,6	;RP1=0, select bank0
  5910  015A  0821               	movf	?_trimf+1,w
  5911  015B  01C2               	clrf	_fitemp+1
  5912  015C  07C2               	addwf	_fitemp+1,f
  5913  015D  0820               	movf	?_trimf,w
  5914  015E  01C1               	clrf	_fitemp
  5915  015F  07C1               	addwf	_fitemp,f
  5916                           
  5917                           ;main.c: 201: fop_rule2 = max_val(fitemp,0.1);
  5918  0160  0842               	movf	_fitemp+1,w
  5919  0161  01F1               	clrf	max_val@a+1
  5920  0162  07F1               	addwf	max_val@a+1,f
  5921  0163  0841               	movf	_fitemp,w
  5922  0164  01F0               	clrf	max_val@a
  5923  0165  07F0               	addwf	max_val@a,f
  5924  0166  3000               	movlw	0
  5925  0167  00F2               	movwf	max_val@b
  5926  0168  3000               	movlw	0
  5927  0169  00F3               	movwf	max_val@b+1
  5928  016A  120A  158A  208E  120A  118A  	fcall	_max_val
  5929  016F  0871               	movf	?_max_val+1,w
  5930  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0172  01C6               	clrf	_fop_rule2+1
  5933  0173  07C6               	addwf	_fop_rule2+1,f
  5934  0174  0870               	movf	?_max_val,w
  5935  0175  01C5               	clrf	_fop_rule2
  5936  0176  07C5               	addwf	_fop_rule2,f
  5937                           
  5938                           ;main.c: 204: x=0;
  5939  0177  01D3               	clrf	_x
  5940  0178  01D4               	clrf	_x+1
  5941                           
  5942                           ;main.c: 205: y=0;
  5943  0179  01D5               	clrf	_y
  5944  017A  01D6               	clrf	_y+1
  5945                           
  5946                           ;main.c: 207: y = trimf(x,2,5,8);
  5947  017B  0854               	movf	_x+1,w
  5948  017C  01A1               	clrf	trimf@x+1
  5949  017D  07A1               	addwf	trimf@x+1,f
  5950  017E  0853               	movf	_x,w
  5951  017F  01A0               	clrf	trimf@x
  5952  0180  07A0               	addwf	trimf@x,f
  5953  0181  3002               	movlw	2
  5954  0182  00A2               	movwf	trimf@a
  5955  0183  3000               	movlw	0
  5956  0184  00A3               	movwf	trimf@a+1
  5957  0185  3005               	movlw	5
  5958  0186  00A4               	movwf	trimf@b
  5959  0187  3000               	movlw	0
  5960  0188  00A5               	movwf	trimf@b+1
  5961  0189  3008               	movlw	8
  5962  018A  00A6               	movwf	trimf@c
  5963  018B  3000               	movlw	0
  5964  018C  00A7               	movwf	trimf@c+1
  5965  018D  120A  158A  24A9  120A  118A  	fcall	_trimf
  5966  0192  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0193  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0194  0821               	movf	?_trimf+1,w
  5969  0195  01D6               	clrf	_y+1
  5970  0196  07D6               	addwf	_y+1,f
  5971  0197  0820               	movf	?_trimf,w
  5972  0198  01D5               	clrf	_y
  5973  0199  07D5               	addwf	_y,f
  5974                           
  5975                           ;main.c: 209: if (y >= fop_rule2)
  5976  019A  0846               	movf	_fop_rule2+1,w
  5977  019B  0256               	subwf	_y+1,w
  5978  019C  1D03               	skipz
  5979  019D  29A0               	goto	u232_25
  5980  019E  0845               	movf	_fop_rule2,w
  5981  019F  0255               	subwf	_y,w
  5982  01A0                     u232_25:	
  5983  01A0  1C03               	skipc
  5984  01A1  29AB               	goto	i1l2369
  5985                           
  5986                           ;main.c: 210: {
  5987                           ;main.c: 211: tip_average = fop_rule2;
  5988  01A2  0846               	movf	_fop_rule2+1,w
  5989  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  5990  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  5991  01A5  01C3               	clrf	(_tip_average+1)^(0+128)
  5992  01A6  07C3               	addwf	(_tip_average+1)^(0+128),f
  5993  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  5994  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  5995  01A9  0845               	movf	_fop_rule2,w
  5996  01AA  29B4               	goto	L4
  5997  01AB                     i1l2369:	
  5998                           ;main.c: 212: }
  5999                           
  6000                           
  6001                           ;main.c: 213: else
  6002                           ;main.c: 214: {
  6003                           ;main.c: 215: tip_average = y;
  6004  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  6005  01AC  0856               	movf	_y+1,w
  6006  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  6007  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  6008  01AF  01C3               	clrf	(_tip_average+1)^(0+128)
  6009  01B0  07C3               	addwf	(_tip_average+1)^(0+128),f
  6010  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  6011  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  6012  01B3  0855               	movf	_y,w
  6013  01B4                     L4:	
  6014  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  6015  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  6016  01B6  01C2               	clrf	_tip_average^(0+128)
  6017  01B7  07C2               	addwf	_tip_average^(0+128),f
  6018  01B8                     i1l2371:	
  6019                           
  6020                           ;main.c: 216: }
  6021                           ;main.c: 219: }
  6022                           ;main.c: 223: if (temp > 7 )
  6023  01B8  3000               	movlw	0
  6024  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  6025  01BA  024E               	subwf	_temp+1,w
  6026  01BB  3008               	movlw	8
  6027  01BC  1903               	skipnz
  6028  01BD  024D               	subwf	_temp,w
  6029  01BE  1C03               	skipc
  6030  01BF  2A3F               	goto	i1l2385
  6031                           
  6032                           ;main.c: 224: {
  6033                           ;main.c: 226: fitemp = trapmf(temp,6,8.5,10,11);
  6034  01C0  084E               	movf	_temp+1,w
  6035  01C1  01A1               	clrf	trapmf@x+1
  6036  01C2  07A1               	addwf	trapmf@x+1,f
  6037  01C3  084D               	movf	_temp,w
  6038  01C4  01A0               	clrf	trapmf@x
  6039  01C5  07A0               	addwf	trapmf@x,f
  6040  01C6  3006               	movlw	6
  6041  01C7  00A2               	movwf	trapmf@a
  6042  01C8  3000               	movlw	0
  6043  01C9  00A3               	movwf	trapmf@a+1
  6044  01CA  3008               	movlw	8
  6045  01CB  00A4               	movwf	trapmf@b
  6046  01CC  3000               	movlw	0
  6047  01CD  00A5               	movwf	trapmf@b+1
  6048  01CE  300A               	movlw	10
  6049  01CF  00A6               	movwf	trapmf@c
  6050  01D0  3000               	movlw	0
  6051  01D1  00A7               	movwf	trapmf@c+1
  6052  01D2  300B               	movlw	11
  6053  01D3  00A8               	movwf	trapmf@d
  6054  01D4  3000               	movlw	0
  6055  01D5  00A9               	movwf	trapmf@d+1
  6056  01D6  120A  158A  2529  120A  118A  	fcall	_trapmf
  6057  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  6058  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  6059  01DD  0821               	movf	?_trapmf+1,w
  6060  01DE  01C2               	clrf	_fitemp+1
  6061  01DF  07C2               	addwf	_fitemp+1,f
  6062  01E0  0820               	movf	?_trapmf,w
  6063  01E1  01C1               	clrf	_fitemp
  6064  01E2  07C1               	addwf	_fitemp,f
  6065                           
  6066                           ;main.c: 230: fop_rule3 = max_val(fitemp,0.1);
  6067  01E3  0842               	movf	_fitemp+1,w
  6068  01E4  01F1               	clrf	max_val@a+1
  6069  01E5  07F1               	addwf	max_val@a+1,f
  6070  01E6  0841               	movf	_fitemp,w
  6071  01E7  01F0               	clrf	max_val@a
  6072  01E8  07F0               	addwf	max_val@a,f
  6073  01E9  3000               	movlw	0
  6074  01EA  00F2               	movwf	max_val@b
  6075  01EB  3000               	movlw	0
  6076  01EC  00F3               	movwf	max_val@b+1
  6077  01ED  120A  158A  208E  120A  118A  	fcall	_max_val
  6078  01F2  0871               	movf	?_max_val+1,w
  6079  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  6080  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  6081  01F5  01C8               	clrf	_fop_rule3+1
  6082  01F6  07C8               	addwf	_fop_rule3+1,f
  6083  01F7  0870               	movf	?_max_val,w
  6084  01F8  01C7               	clrf	_fop_rule3
  6085  01F9  07C7               	addwf	_fop_rule3,f
  6086                           
  6087                           ;main.c: 233: x=0;
  6088  01FA  01D3               	clrf	_x
  6089  01FB  01D4               	clrf	_x+1
  6090                           
  6091                           ;main.c: 234: y=0;
  6092  01FC  01D5               	clrf	_y
  6093  01FD  01D6               	clrf	_y+1
  6094                           
  6095                           ;main.c: 236: y = trapmf(x,7,8.5,10,11);
  6096  01FE  0854               	movf	_x+1,w
  6097  01FF  01A1               	clrf	trapmf@x+1
  6098  0200  07A1               	addwf	trapmf@x+1,f
  6099  0201  0853               	movf	_x,w
  6100  0202  01A0               	clrf	trapmf@x
  6101  0203  07A0               	addwf	trapmf@x,f
  6102  0204  3007               	movlw	7
  6103  0205  00A2               	movwf	trapmf@a
  6104  0206  3000               	movlw	0
  6105  0207  00A3               	movwf	trapmf@a+1
  6106  0208  3008               	movlw	8
  6107  0209  00A4               	movwf	trapmf@b
  6108  020A  3000               	movlw	0
  6109  020B  00A5               	movwf	trapmf@b+1
  6110  020C  300A               	movlw	10
  6111  020D  00A6               	movwf	trapmf@c
  6112  020E  3000               	movlw	0
  6113  020F  00A7               	movwf	trapmf@c+1
  6114  0210  300B               	movlw	11
  6115  0211  00A8               	movwf	trapmf@d
  6116  0212  3000               	movlw	0
  6117  0213  00A9               	movwf	trapmf@d+1
  6118  0214  120A  158A  2529  120A  118A  	fcall	_trapmf
  6119  0219  1283               	bcf	3,5	;RP0=0, select bank0
  6120  021A  1303               	bcf	3,6	;RP1=0, select bank0
  6121  021B  0821               	movf	?_trapmf+1,w
  6122  021C  01D6               	clrf	_y+1
  6123  021D  07D6               	addwf	_y+1,f
  6124  021E  0820               	movf	?_trapmf,w
  6125  021F  01D5               	clrf	_y
  6126  0220  07D5               	addwf	_y,f
  6127                           
  6128                           ;main.c: 238: if (y >= fop_rule3)
  6129  0221  0848               	movf	_fop_rule3+1,w
  6130  0222  0256               	subwf	_y+1,w
  6131  0223  1D03               	skipz
  6132  0224  2A27               	goto	u234_25
  6133  0225  0847               	movf	_fop_rule3,w
  6134  0226  0255               	subwf	_y,w
  6135  0227                     u234_25:	
  6136  0227  1C03               	skipc
  6137  0228  2A32               	goto	i1l2383
  6138                           
  6139                           ;main.c: 239: {
  6140                           ;main.c: 240: tip_gorgeous = fop_rule3;
  6141  0229  0848               	movf	_fop_rule3+1,w
  6142  022A  1683               	bsf	3,5	;RP0=1, select bank1
  6143  022B  1303               	bcf	3,6	;RP1=0, select bank1
  6144  022C  01C5               	clrf	(_tip_gorgeous+1)^(0+128)
  6145  022D  07C5               	addwf	(_tip_gorgeous+1)^(0+128),f
  6146  022E  1283               	bcf	3,5	;RP0=0, select bank0
  6147  022F  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0230  0847               	movf	_fop_rule3,w
  6149  0231  2A3B               	goto	L5
  6150  0232                     i1l2383:	
  6151                           ;main.c: 241: }
  6152                           
  6153                           
  6154                           ;main.c: 242: else
  6155                           ;main.c: 243: {
  6156                           ;main.c: 244: tip_gorgeous = y;
  6157  0232  1283               	bcf	3,5	;RP0=0, select bank0
  6158  0233  0856               	movf	_y+1,w
  6159  0234  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0235  1303               	bcf	3,6	;RP1=0, select bank1
  6161  0236  01C5               	clrf	(_tip_gorgeous+1)^(0+128)
  6162  0237  07C5               	addwf	(_tip_gorgeous+1)^(0+128),f
  6163  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6164  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6165  023A  0855               	movf	_y,w
  6166  023B                     L5:	
  6167  023B  1683               	bsf	3,5	;RP0=1, select bank1
  6168  023C  1303               	bcf	3,6	;RP1=0, select bank1
  6169  023D  01C4               	clrf	_tip_gorgeous^(0+128)
  6170  023E  07C4               	addwf	_tip_gorgeous^(0+128),f
  6171  023F                     i1l2385:	
  6172                           
  6173                           ;main.c: 245: }
  6174                           ;main.c: 247: }
  6175                           ;main.c: 251: if (temp < 2.5)
  6176  023F  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0240  084E               	movf	_temp+1,w
  6178  0241  01F9               	clrf	___lwtoft@c+1
  6179  0242  07F9               	addwf	___lwtoft@c+1,f
  6180  0243  084D               	movf	_temp,w
  6181  0244  01F8               	clrf	___lwtoft@c
  6182  0245  07F8               	addwf	___lwtoft@c,f
  6183  0246  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6184  024B  0878               	movf	?___lwtoft,w
  6185  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6186  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6187  024E  00A0               	movwf	___ftge@ff1
  6188  024F  0879               	movf	?___lwtoft+1,w
  6189  0250  00A1               	movwf	___ftge@ff1+1
  6190  0251  087A               	movf	?___lwtoft+2,w
  6191  0252  00A2               	movwf	___ftge@ff1+2
  6192  0253  3000               	movlw	0
  6193  0254  00A3               	movwf	___ftge@ff2
  6194  0255  3020               	movlw	32
  6195  0256  00A4               	movwf	___ftge@ff2+1
  6196  0257  3040               	movlw	64
  6197  0258  00A5               	movwf	___ftge@ff2+2
  6198  0259  120A  158A  2375  120A  118A  	fcall	___ftge
  6199  025E  1803               	btfsc	3,0
  6200  025F  2A6E               	goto	i1l2389
  6201                           
  6202                           ;main.c: 252: {
  6203                           ;main.c: 253: tip = ideal ;
  6204  0260  1683               	bsf	3,5	;RP0=1, select bank1
  6205  0261  1303               	bcf	3,6	;RP1=0, select bank1
  6206  0262  082F               	movf	(_ideal+1)^(0+128),w
  6207  0263  1283               	bcf	3,5	;RP0=0, select bank0
  6208  0264  1303               	bcf	3,6	;RP1=0, select bank0
  6209  0265  01D0               	clrf	_tip+1
  6210  0266  07D0               	addwf	_tip+1,f
  6211  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6212  0268  1303               	bcf	3,6	;RP1=0, select bank1
  6213  0269  082E               	movf	_ideal^(0+128),w
  6214  026A  1283               	bcf	3,5	;RP0=0, select bank0
  6215  026B  1303               	bcf	3,6	;RP1=0, select bank0
  6216  026C  01CF               	clrf	_tip
  6217  026D  07CF               	addwf	_tip,f
  6218  026E                     i1l2389:	
  6219                           
  6220                           ;main.c: 254: }
  6221                           ;main.c: 256: if (temp >= 2.5 && temp < 7.5)
  6222  026E  1283               	bcf	3,5	;RP0=0, select bank0
  6223  026F  1303               	bcf	3,6	;RP1=0, select bank0
  6224  0270  084E               	movf	_temp+1,w
  6225  0271  01F9               	clrf	___lwtoft@c+1
  6226  0272  07F9               	addwf	___lwtoft@c+1,f
  6227  0273  084D               	movf	_temp,w
  6228  0274  01F8               	clrf	___lwtoft@c
  6229  0275  07F8               	addwf	___lwtoft@c,f
  6230  0276  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6231  027B  0878               	movf	?___lwtoft,w
  6232  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6233  027D  1303               	bcf	3,6	;RP1=0, select bank0
  6234  027E  00A0               	movwf	___ftge@ff1
  6235  027F  0879               	movf	?___lwtoft+1,w
  6236  0280  00A1               	movwf	___ftge@ff1+1
  6237  0281  087A               	movf	?___lwtoft+2,w
  6238  0282  00A2               	movwf	___ftge@ff1+2
  6239  0283  3000               	movlw	0
  6240  0284  00A3               	movwf	___ftge@ff2
  6241  0285  3020               	movlw	32
  6242  0286  00A4               	movwf	___ftge@ff2+1
  6243  0287  3040               	movlw	64
  6244  0288  00A5               	movwf	___ftge@ff2+2
  6245  0289  120A  158A  2375  120A  118A  	fcall	___ftge
  6246  028E  1C03               	btfss	3,0
  6247  028F  2AC0               	goto	i1l2395
  6248  0290  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0291  1303               	bcf	3,6	;RP1=0, select bank0
  6250  0292  084E               	movf	_temp+1,w
  6251  0293  01F9               	clrf	___lwtoft@c+1
  6252  0294  07F9               	addwf	___lwtoft@c+1,f
  6253  0295  084D               	movf	_temp,w
  6254  0296  01F8               	clrf	___lwtoft@c
  6255  0297  07F8               	addwf	___lwtoft@c,f
  6256  0298  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6257  029D  0878               	movf	?___lwtoft,w
  6258  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6259  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6260  02A0  00A0               	movwf	___ftge@ff1
  6261  02A1  0879               	movf	?___lwtoft+1,w
  6262  02A2  00A1               	movwf	___ftge@ff1+1
  6263  02A3  087A               	movf	?___lwtoft+2,w
  6264  02A4  00A2               	movwf	___ftge@ff1+2
  6265  02A5  3000               	movlw	0
  6266  02A6  00A3               	movwf	___ftge@ff2
  6267  02A7  30F0               	movlw	240
  6268  02A8  00A4               	movwf	___ftge@ff2+1
  6269  02A9  3040               	movlw	64
  6270  02AA  00A5               	movwf	___ftge@ff2+2
  6271  02AB  120A  158A  2375  120A  118A  	fcall	___ftge
  6272  02B0  1803               	btfsc	3,0
  6273  02B1  2AC0               	goto	i1l2395
  6274                           
  6275                           ;main.c: 257: {
  6276                           ;main.c: 258: tip = tip_average ;
  6277  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  6278  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  6279  02B4  0843               	movf	(_tip_average+1)^(0+128),w
  6280  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  6281  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  6282  02B7  01D0               	clrf	_tip+1
  6283  02B8  07D0               	addwf	_tip+1,f
  6284  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  6285  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  6286  02BB  0842               	movf	_tip_average^(0+128),w
  6287  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  6288  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  6289  02BE  01CF               	clrf	_tip
  6290  02BF  07CF               	addwf	_tip,f
  6291  02C0                     i1l2395:	
  6292                           
  6293                           ;main.c: 259: }
  6294                           ;main.c: 261: if (temp >= 7.5 && temp <= 10)
  6295  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  6296  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  6297  02C2  084E               	movf	_temp+1,w
  6298  02C3  01F9               	clrf	___lwtoft@c+1
  6299  02C4  07F9               	addwf	___lwtoft@c+1,f
  6300  02C5  084D               	movf	_temp,w
  6301  02C6  01F8               	clrf	___lwtoft@c
  6302  02C7  07F8               	addwf	___lwtoft@c,f
  6303  02C8  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6304  02CD  0878               	movf	?___lwtoft,w
  6305  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  6306  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  6307  02D0  00A0               	movwf	___ftge@ff1
  6308  02D1  0879               	movf	?___lwtoft+1,w
  6309  02D2  00A1               	movwf	___ftge@ff1+1
  6310  02D3  087A               	movf	?___lwtoft+2,w
  6311  02D4  00A2               	movwf	___ftge@ff1+2
  6312  02D5  3000               	movlw	0
  6313  02D6  00A3               	movwf	___ftge@ff2
  6314  02D7  30F0               	movlw	240
  6315  02D8  00A4               	movwf	___ftge@ff2+1
  6316  02D9  3040               	movlw	64
  6317  02DA  00A5               	movwf	___ftge@ff2+2
  6318  02DB  120A  158A  2375  120A  118A  	fcall	___ftge
  6319  02E0  1C03               	btfss	3,0
  6320  02E1  2AF9               	goto	i1l2401
  6321  02E2  3000               	movlw	0
  6322  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6323  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6324  02E5  024E               	subwf	_temp+1,w
  6325  02E6  300B               	movlw	11
  6326  02E7  1903               	skipnz
  6327  02E8  024D               	subwf	_temp,w
  6328  02E9  1803               	skipnc
  6329  02EA  2AF9               	goto	i1l2401
  6330                           
  6331                           ;main.c: 262: {
  6332                           ;main.c: 263: tip = tip_gorgeous;
  6333  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  6334  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  6335  02ED  0845               	movf	(_tip_gorgeous+1)^(0+128),w
  6336  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  6337  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  6338  02F0  01D0               	clrf	_tip+1
  6339  02F1  07D0               	addwf	_tip+1,f
  6340  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  6341  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  6342  02F4  0844               	movf	_tip_gorgeous^(0+128),w
  6343  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  6344  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  6345  02F7  01CF               	clrf	_tip
  6346  02F8  07CF               	addwf	_tip,f
  6347  02F9                     i1l2401:	
  6348                           
  6349                           ;main.c: 264: }
  6350                           ;main.c: 269: total_area = 1;
  6351  02F9  3001               	movlw	1
  6352  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  6353  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  6354  02FC  00D1               	movwf	_total_area
  6355  02FD  3000               	movlw	0
  6356  02FE  00D2               	movwf	_total_area+1
  6357                           
  6358                           ;main.c: 270: unsigned int sum = 0;
  6359  02FF  01B1               	clrf	Fuzzy@sum
  6360  0300  01B2               	clrf	Fuzzy@sum+1
  6361                           
  6362                           ;main.c: 272: total_area = total_area + tip ;
  6363  0301  084F               	movf	_tip,w
  6364  0302  0751               	addwf	_total_area,w
  6365  0303  00D1               	movwf	_total_area
  6366  0304  0850               	movf	_tip+1,w
  6367  0305  1803               	skipnc
  6368  0306  0A50               	incf	_tip+1,w
  6369  0307  0752               	addwf	_total_area+1,w
  6370  0308  00D2               	movwf	_total_area+1
  6371                           
  6372                           ;main.c: 273: sum = tip;
  6373  0309  0850               	movf	_tip+1,w
  6374  030A  01B2               	clrf	Fuzzy@sum+1
  6375  030B  07B2               	addwf	Fuzzy@sum+1,f
  6376  030C  084F               	movf	_tip,w
  6377  030D  01B1               	clrf	Fuzzy@sum
  6378  030E  07B1               	addwf	Fuzzy@sum,f
  6379                           
  6380                           ;main.c: 278: ativa_fan = sum/total_area;
  6381  030F  0852               	movf	_total_area+1,w
  6382  0310  01F1               	clrf	i1___lwdiv@divisor+1
  6383  0311  07F1               	addwf	i1___lwdiv@divisor+1,f
  6384  0312  0851               	movf	_total_area,w
  6385  0313  01F0               	clrf	i1___lwdiv@divisor
  6386  0314  07F0               	addwf	i1___lwdiv@divisor,f
  6387  0315  0832               	movf	Fuzzy@sum+1,w
  6388  0316  01F3               	clrf	i1___lwdiv@dividend+1
  6389  0317  07F3               	addwf	i1___lwdiv@dividend+1,f
  6390  0318  0831               	movf	Fuzzy@sum,w
  6391  0319  01F2               	clrf	i1___lwdiv@dividend
  6392  031A  07F2               	addwf	i1___lwdiv@dividend,f
  6393  031B  120A  158A  225A  120A  118A  	fcall	i1___lwdiv
  6394  0320  0871               	movf	?i1___lwdiv+1,w
  6395  0321  1283               	bcf	3,5	;RP0=0, select bank0
  6396  0322  1303               	bcf	3,6	;RP1=0, select bank0
  6397  0323  01D8               	clrf	_ativa_fan+1
  6398  0324  07D8               	addwf	_ativa_fan+1,f
  6399  0325  0870               	movf	?i1___lwdiv,w
  6400  0326  01D7               	clrf	_ativa_fan
  6401  0327  07D7               	addwf	_ativa_fan,f
  6402                           
  6403                           ;main.c: 282: char velocidade[1];
  6404                           ;main.c: 284: if(ativa_fan <= 2.5 )
  6405  0328  3000               	movlw	0
  6406  0329  00A0               	movwf	___ftge@ff1
  6407  032A  3020               	movlw	32
  6408  032B  00A1               	movwf	___ftge@ff1+1
  6409  032C  3040               	movlw	64
  6410  032D  00A2               	movwf	___ftge@ff1+2
  6411  032E  0858               	movf	_ativa_fan+1,w
  6412  032F  01F9               	clrf	___lwtoft@c+1
  6413  0330  07F9               	addwf	___lwtoft@c+1,f
  6414  0331  0857               	movf	_ativa_fan,w
  6415  0332  01F8               	clrf	___lwtoft@c
  6416  0333  07F8               	addwf	___lwtoft@c,f
  6417  0334  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6418  0339  0878               	movf	?___lwtoft,w
  6419  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6420  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6421  033C  00A3               	movwf	___ftge@ff2
  6422  033D  0879               	movf	?___lwtoft+1,w
  6423  033E  00A4               	movwf	___ftge@ff2+1
  6424  033F  087A               	movf	?___lwtoft+2,w
  6425  0340  00A5               	movwf	___ftge@ff2+2
  6426  0341  120A  158A  2375  120A  118A  	fcall	___ftge
  6427  0346  1C03               	btfss	3,0
  6428  0347  2B4E               	goto	i1l2415
  6429                           
  6430                           ;main.c: 285: {
  6431                           ;main.c: 287: velocidade[0] = '0';
  6432  0348  3030               	movlw	48
  6433  0349  1283               	bcf	3,5	;RP0=0, select bank0
  6434  034A  1303               	bcf	3,6	;RP1=0, select bank0
  6435  034B  00AE               	movwf	??_Fuzzy
  6436  034C  082E               	movf	??_Fuzzy,w
  6437  034D  00B0               	movwf	Fuzzy@velocidade
  6438  034E                     i1l2415:	
  6439                           
  6440                           ;main.c: 288: }
  6441                           ;main.c: 289: if(ativa_fan > 2.5 && ativa_fan < 7.5)
  6442  034E  3000               	movlw	0
  6443  034F  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0350  1303               	bcf	3,6	;RP1=0, select bank0
  6445  0351  00A0               	movwf	___ftge@ff1
  6446  0352  3020               	movlw	32
  6447  0353  00A1               	movwf	___ftge@ff1+1
  6448  0354  3040               	movlw	64
  6449  0355  00A2               	movwf	___ftge@ff1+2
  6450  0356  0858               	movf	_ativa_fan+1,w
  6451  0357  01F9               	clrf	___lwtoft@c+1
  6452  0358  07F9               	addwf	___lwtoft@c+1,f
  6453  0359  0857               	movf	_ativa_fan,w
  6454  035A  01F8               	clrf	___lwtoft@c
  6455  035B  07F8               	addwf	___lwtoft@c,f
  6456  035C  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6457  0361  0878               	movf	?___lwtoft,w
  6458  0362  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0363  1303               	bcf	3,6	;RP1=0, select bank0
  6460  0364  00A3               	movwf	___ftge@ff2
  6461  0365  0879               	movf	?___lwtoft+1,w
  6462  0366  00A4               	movwf	___ftge@ff2+1
  6463  0367  087A               	movf	?___lwtoft+2,w
  6464  0368  00A5               	movwf	___ftge@ff2+2
  6465  0369  120A  158A  2375  120A  118A  	fcall	___ftge
  6466  036E  1803               	btfsc	3,0
  6467  036F  2B98               	goto	i1l2421
  6468  0370  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0371  1303               	bcf	3,6	;RP1=0, select bank0
  6470  0372  0858               	movf	_ativa_fan+1,w
  6471  0373  01F9               	clrf	___lwtoft@c+1
  6472  0374  07F9               	addwf	___lwtoft@c+1,f
  6473  0375  0857               	movf	_ativa_fan,w
  6474  0376  01F8               	clrf	___lwtoft@c
  6475  0377  07F8               	addwf	___lwtoft@c,f
  6476  0378  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6477  037D  0878               	movf	?___lwtoft,w
  6478  037E  1283               	bcf	3,5	;RP0=0, select bank0
  6479  037F  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0380  00A0               	movwf	___ftge@ff1
  6481  0381  0879               	movf	?___lwtoft+1,w
  6482  0382  00A1               	movwf	___ftge@ff1+1
  6483  0383  087A               	movf	?___lwtoft+2,w
  6484  0384  00A2               	movwf	___ftge@ff1+2
  6485  0385  3000               	movlw	0
  6486  0386  00A3               	movwf	___ftge@ff2
  6487  0387  30F0               	movlw	240
  6488  0388  00A4               	movwf	___ftge@ff2+1
  6489  0389  3040               	movlw	64
  6490  038A  00A5               	movwf	___ftge@ff2+2
  6491  038B  120A  158A  2375  120A  118A  	fcall	___ftge
  6492  0390  1803               	btfsc	3,0
  6493  0391  2B98               	goto	i1l2421
  6494                           
  6495                           ;main.c: 290: {
  6496                           ;main.c: 292: velocidade[0] = '7';
  6497  0392  3037               	movlw	55
  6498  0393  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0394  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0395  00AE               	movwf	??_Fuzzy
  6501  0396  082E               	movf	??_Fuzzy,w
  6502  0397  00B0               	movwf	Fuzzy@velocidade
  6503  0398                     i1l2421:	
  6504                           
  6505                           ;main.c: 293: }
  6506                           ;main.c: 295: if(ativa_fan >= 7.5)
  6507  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6509  039A  0858               	movf	_ativa_fan+1,w
  6510  039B  01F9               	clrf	___lwtoft@c+1
  6511  039C  07F9               	addwf	___lwtoft@c+1,f
  6512  039D  0857               	movf	_ativa_fan,w
  6513  039E  01F8               	clrf	___lwtoft@c
  6514  039F  07F8               	addwf	___lwtoft@c,f
  6515  03A0  120A  158A  20DD  120A  118A  	fcall	___lwtoft
  6516  03A5  0878               	movf	?___lwtoft,w
  6517  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  6518  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  6519  03A8  00A0               	movwf	___ftge@ff1
  6520  03A9  0879               	movf	?___lwtoft+1,w
  6521  03AA  00A1               	movwf	___ftge@ff1+1
  6522  03AB  087A               	movf	?___lwtoft+2,w
  6523  03AC  00A2               	movwf	___ftge@ff1+2
  6524  03AD  3000               	movlw	0
  6525  03AE  00A3               	movwf	___ftge@ff2
  6526  03AF  30F0               	movlw	240
  6527  03B0  00A4               	movwf	___ftge@ff2+1
  6528  03B1  3040               	movlw	64
  6529  03B2  00A5               	movwf	___ftge@ff2+2
  6530  03B3  120A  158A  2375  120A  118A  	fcall	___ftge
  6531  03B8  1C03               	btfss	3,0
  6532  03B9  2BC0               	goto	i1l2425
  6533                           
  6534                           ;main.c: 296: {
  6535                           ;main.c: 298: velocidade[0] = '9';
  6536  03BA  3039               	movlw	57
  6537  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  6538  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  6539  03BD  00AE               	movwf	??_Fuzzy
  6540  03BE  082E               	movf	??_Fuzzy,w
  6541  03BF  00B0               	movwf	Fuzzy@velocidade
  6542  03C0                     i1l2425:	
  6543                           
  6544                           ;main.c: 299: }
  6545                           ;main.c: 302: PWM_DutyCycle2(ativa_fan*100);
  6546  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6547  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  6548  03C2  0858               	movf	_ativa_fan+1,w
  6549  03C3  01F9               	clrf	i1___wmul@multiplier+1
  6550  03C4  07F9               	addwf	i1___wmul@multiplier+1,f
  6551  03C5  0857               	movf	_ativa_fan,w
  6552  03C6  01F8               	clrf	i1___wmul@multiplier
  6553  03C7  07F8               	addwf	i1___wmul@multiplier,f
  6554  03C8  3064               	movlw	100
  6555  03C9  00FA               	movwf	i1___wmul@multiplicand
  6556  03CA  3000               	movlw	0
  6557  03CB  00FB               	movwf	i1___wmul@multiplicand+1
  6558  03CC  120A  158A  2158  120A  118A  	fcall	i1___wmul
  6559  03D1  0879               	movf	?i1___wmul+1,w
  6560  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  6561  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  6562  03D4  01A1               	clrf	i1PWM_DutyCycle2@valor+1
  6563  03D5  07A1               	addwf	i1PWM_DutyCycle2@valor+1,f
  6564  03D6  0878               	movf	?i1___wmul,w
  6565  03D7  01A0               	clrf	i1PWM_DutyCycle2@valor
  6566  03D8  07A0               	addwf	i1PWM_DutyCycle2@valor,f
  6567  03D9  120A  158A  2107   	fcall	i1_PWM_DutyCycle2
  6568                           
  6569                           ;main.c: 303: rpm = ativa_fan;
  6570  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  6571  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  6572  03DE  0858               	movf	_ativa_fan+1,w
  6573  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  6574  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  6575  03E1  01B9               	clrf	(_rpm+1)^(0+128)
  6576  03E2  07B9               	addwf	(_rpm+1)^(0+128),f
  6577  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  6578  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  6579  03E5  0857               	movf	_ativa_fan,w
  6580  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  6581  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  6582  03E8  01B8               	clrf	_rpm^(0+128)
  6583  03E9  07B8               	addwf	_rpm^(0+128),f
  6584  03EA  0008               	return
  6585  03EB                     __end_of_Fuzzy:	
  6586                           
  6587                           	psect	text28
  6588  0958                     __ptext28:	
  6589 ;; *************** function i1___wmul *****************
  6590 ;; Defined at:
  6591 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  multiplier      2    8[COMMON] unsigned int 
  6594 ;;  multiplicand    2   10[COMMON] unsigned int 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  __wmul          2   12[COMMON] unsigned int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2    8[COMMON] unsigned int 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         4       0       0       0       0
  6607 ;;      Locals:         2       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0
  6609 ;;      Totals:         6       0       0       0       0
  6610 ;;Total ram usage:        6 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_Fuzzy
  6616 ;;		_ISR
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           
  6621                           ;psect for function i1___wmul
  6622  0958                     i1___wmul:	
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6626  0958  01FC               	clrf	i1___wmul@product
  6627  0959  01FD               	clrf	i1___wmul@product+1
  6628  095A                     i1l2315:	
  6629  095A  1C78               	btfss	i1___wmul@multiplier,0
  6630  095B  2962               	goto	i1l609
  6631  095C  087A               	movf	i1___wmul@multiplicand,w
  6632  095D  07FC               	addwf	i1___wmul@product,f
  6633  095E  1803               	skipnc
  6634  095F  0AFD               	incf	i1___wmul@product+1,f
  6635  0960  087B               	movf	i1___wmul@multiplicand+1,w
  6636  0961  07FD               	addwf	i1___wmul@product+1,f
  6637  0962                     i1l609:	
  6638  0962  3001               	movlw	1
  6639  0963                     u223_25:	
  6640  0963  1003               	clrc
  6641  0964  0DFA               	rlf	i1___wmul@multiplicand,f
  6642  0965  0DFB               	rlf	i1___wmul@multiplicand+1,f
  6643  0966  3EFF               	addlw	-1
  6644  0967  1D03               	skipz
  6645  0968  2963               	goto	u223_25
  6646  0969  3001               	movlw	1
  6647  096A                     u224_25:	
  6648  096A  1003               	clrc
  6649  096B  0CF9               	rrf	i1___wmul@multiplier+1,f
  6650  096C  0CF8               	rrf	i1___wmul@multiplier,f
  6651  096D  3EFF               	addlw	-1
  6652  096E  1D03               	skipz
  6653  096F  296A               	goto	u224_25
  6654  0970  0879               	movf	i1___wmul@multiplier+1,w
  6655  0971  0478               	iorwf	i1___wmul@multiplier,w
  6656  0972  1D03               	skipz
  6657  0973  295A               	goto	i1l2315
  6658  0974  087D               	movf	i1___wmul@product+1,w
  6659  0975  01F9               	clrf	?i1___wmul+1
  6660  0976  07F9               	addwf	?i1___wmul+1,f
  6661  0977  087C               	movf	i1___wmul@product,w
  6662  0978  01F8               	clrf	?i1___wmul
  6663  0979  07F8               	addwf	?i1___wmul,f
  6664  097A  0008               	return
  6665  097B                     __end_ofi1___wmul:	
  6666                           
  6667                           	psect	text29
  6668  0907                     __ptext29:	
  6669 ;; *************** function i1_PWM_DutyCycle2 *****************
  6670 ;; Defined at:
  6671 ;;		line 96 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\pwm.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  valor           2    0[BANK0 ] int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         0       2       0       0       0
  6686 ;;      Locals:         0       0       0       0       0
  6687 ;;      Temps:          0       2       0       0       0
  6688 ;;      Totals:         0       4       0       0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_Fuzzy
  6695 ;;		_ISR
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function i1_PWM_DutyCycle2
  6701  0907                     i1_PWM_DutyCycle2:	
  6702                           
  6703                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6707  0907  1283               	bcf	3,5	;RP0=0, select bank0
  6708  0908  1303               	bcf	3,6	;RP1=0, select bank0
  6709  0909  0821               	movf	i1PWM_DutyCycle2@valor+1,w
  6710  090A  00A3               	movwf	??i1_PWM_DutyCycle2+1
  6711  090B  0820               	movf	i1PWM_DutyCycle2@valor,w
  6712  090C  00A2               	movwf	??i1_PWM_DutyCycle2
  6713  090D  0D23               	rlf	??i1_PWM_DutyCycle2+1,w
  6714  090E  0CA3               	rrf	??i1_PWM_DutyCycle2+1,f
  6715  090F  0CA2               	rrf	??i1_PWM_DutyCycle2,f
  6716  0910  0D23               	rlf	??i1_PWM_DutyCycle2+1,w
  6717  0911  0CA3               	rrf	??i1_PWM_DutyCycle2+1,f
  6718  0912  0CA2               	rrf	??i1_PWM_DutyCycle2,f
  6719  0913  0822               	movf	??i1_PWM_DutyCycle2,w
  6720  0914  009B               	movwf	27	;volatile
  6721                           
  6722                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6723  0915  0820               	movf	i1PWM_DutyCycle2@valor,w
  6724  0916  00A2               	movwf	??i1_PWM_DutyCycle2
  6725  0917  3003               	movlw	3
  6726  0918                     u221_25:	
  6727  0918  1003               	clrc
  6728  0919  0DA2               	rlf	??i1_PWM_DutyCycle2,f
  6729  091A  3EFF               	addlw	-1
  6730  091B  1D03               	skipz
  6731  091C  2918               	goto	u221_25
  6732  091D  1003               	clrc
  6733  091E  0D22               	rlf	??i1_PWM_DutyCycle2,w
  6734  091F  380C               	iorlw	12
  6735  0920  009D               	movwf	29	;volatile
  6736  0921  0008               	return
  6737  0922                     __end_ofi1_PWM_DutyCycle2:	
  6738                           
  6739                           	psect	text30
  6740  0CA9                     __ptext30:	
  6741 ;; *************** function _trimf *****************
  6742 ;; Defined at:
  6743 ;;		line 78 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  x               2    0[BANK0 ] unsigned int 
  6746 ;;  a               2    2[BANK0 ] unsigned int 
  6747 ;;  b               2    4[BANK0 ] unsigned int 
  6748 ;;  c               2    6[BANK0 ] unsigned int 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  ua              2   12[COMMON] unsigned int 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  2    0[BANK0 ] unsigned int 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0, pclath, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6760 ;;      Params:         0       8       0       0       0
  6761 ;;      Locals:         2       0       0       0       0
  6762 ;;      Temps:          4       0       0       0       0
  6763 ;;      Totals:         6       8       0       0       0
  6764 ;;Total ram usage:       14 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    1
  6767 ;; This function calls:
  6768 ;;		i1___lwdiv
  6769 ;; This function is called by:
  6770 ;;		_Fuzzy
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           
  6775                           ;psect for function _trimf
  6776  0CA9                     _trimf:	
  6777                           
  6778                           ;main.c: 80: unsigned int ua = 0;
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  6782  0CA9  01FC               	clrf	trimf@ua
  6783  0CAA  01FD               	clrf	trimf@ua+1
  6784                           
  6785                           ;main.c: 82: if (x <= a)
  6786  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  6788  0CAD  0821               	movf	trimf@x+1,w
  6789  0CAE  0223               	subwf	trimf@a+1,w
  6790  0CAF  1D03               	skipz
  6791  0CB0  2CB3               	goto	u170_25
  6792  0CB1  0820               	movf	trimf@x,w
  6793  0CB2  0222               	subwf	trimf@a,w
  6794  0CB3                     u170_25:	
  6795  0CB3  1803               	btfsc	3,0
  6796  0CB4  2D1E               	goto	i1l2097
  6797                           
  6798                           ;main.c: 84: else if ((a < x) && (x <= b))
  6799                           
  6800                           ;main.c: 83: ua = 0;
  6801  0CB5  0821               	movf	trimf@x+1,w
  6802  0CB6  0223               	subwf	trimf@a+1,w
  6803  0CB7  1D03               	skipz
  6804  0CB8  2CBB               	goto	u171_25
  6805  0CB9  0820               	movf	trimf@x,w
  6806  0CBA  0222               	subwf	trimf@a,w
  6807  0CBB                     u171_25:	
  6808  0CBB  1803               	skipnc
  6809  0CBC  2CD8               	goto	i1l2089
  6810  0CBD  0821               	movf	trimf@x+1,w
  6811  0CBE  0225               	subwf	trimf@b+1,w
  6812  0CBF  1D03               	skipz
  6813  0CC0  2CC3               	goto	u172_25
  6814  0CC1  0820               	movf	trimf@x,w
  6815  0CC2  0224               	subwf	trimf@b,w
  6816  0CC3                     u172_25:	
  6817  0CC3  1C03               	skipc
  6818  0CC4  2CD8               	goto	i1l2089
  6819                           
  6820                           ;main.c: 85: ua = ((x - a) / (b - a));
  6821  0CC5  0922               	comf	trimf@a,w
  6822  0CC6  00F8               	movwf	??_trimf
  6823  0CC7  0923               	comf	trimf@a+1,w
  6824  0CC8  00F9               	movwf	??_trimf+1
  6825  0CC9  0AF8               	incf	??_trimf,f
  6826  0CCA  1903               	skipnz
  6827  0CCB  0AF9               	incf	??_trimf+1,f
  6828  0CCC  0824               	movf	trimf@b,w
  6829  0CCD  0778               	addwf	??_trimf,w
  6830  0CCE  00F0               	movwf	i1___lwdiv@divisor
  6831  0CCF  0825               	movf	trimf@b+1,w
  6832  0CD0  1803               	skipnc
  6833  0CD1  0A25               	incf	trimf@b+1,w
  6834  0CD2  0779               	addwf	??_trimf+1,w
  6835  0CD3  00F1               	movwf	i1___lwdiv@divisor+1
  6836  0CD4  0922               	comf	trimf@a,w
  6837  0CD5  00FA               	movwf	??_trimf+2
  6838  0CD6  0923               	comf	trimf@a+1,w
  6839  0CD7  2CFC               	goto	L7
  6840  0CD8                     i1l2089:	
  6841                           
  6842                           ;main.c: 86: else if ((b < x) && (x <= c))
  6843  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  6844  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  6845  0CDA  0821               	movf	trimf@x+1,w
  6846  0CDB  0225               	subwf	trimf@b+1,w
  6847  0CDC  1D03               	skipz
  6848  0CDD  2CE0               	goto	u173_25
  6849  0CDE  0820               	movf	trimf@x,w
  6850  0CDF  0224               	subwf	trimf@b,w
  6851  0CE0                     u173_25:	
  6852  0CE0  1803               	skipnc
  6853  0CE1  2D14               	goto	i1l2095
  6854  0CE2  0821               	movf	trimf@x+1,w
  6855  0CE3  0227               	subwf	trimf@c+1,w
  6856  0CE4  1D03               	skipz
  6857  0CE5  2CE8               	goto	u174_25
  6858  0CE6  0820               	movf	trimf@x,w
  6859  0CE7  0226               	subwf	trimf@c,w
  6860  0CE8                     u174_25:	
  6861  0CE8  1C03               	skipc
  6862  0CE9  2D14               	goto	i1l2095
  6863                           
  6864                           ;main.c: 87: ua = ((x - c) / (b - c));
  6865  0CEA  0926               	comf	trimf@c,w
  6866  0CEB  00F8               	movwf	??_trimf
  6867  0CEC  0927               	comf	trimf@c+1,w
  6868  0CED  00F9               	movwf	??_trimf+1
  6869  0CEE  0AF8               	incf	??_trimf,f
  6870  0CEF  1903               	skipnz
  6871  0CF0  0AF9               	incf	??_trimf+1,f
  6872  0CF1  0824               	movf	trimf@b,w
  6873  0CF2  0778               	addwf	??_trimf,w
  6874  0CF3  00F0               	movwf	i1___lwdiv@divisor
  6875  0CF4  0825               	movf	trimf@b+1,w
  6876  0CF5  1803               	skipnc
  6877  0CF6  0A25               	incf	trimf@b+1,w
  6878  0CF7  0779               	addwf	??_trimf+1,w
  6879  0CF8  00F1               	movwf	i1___lwdiv@divisor+1
  6880  0CF9  0926               	comf	trimf@c,w
  6881  0CFA  00FA               	movwf	??_trimf+2
  6882  0CFB  0927               	comf	trimf@c+1,w
  6883  0CFC                     L7:	
  6884  0CFC  00FB               	movwf	??_trimf+3
  6885  0CFD  0AFA               	incf	??_trimf+2,f
  6886  0CFE  1903               	skipnz
  6887  0CFF  0AFB               	incf	??_trimf+3,f
  6888  0D00  0820               	movf	trimf@x,w
  6889  0D01  077A               	addwf	??_trimf+2,w
  6890  0D02  00F2               	movwf	i1___lwdiv@dividend
  6891  0D03  0821               	movf	trimf@x+1,w
  6892  0D04  1803               	skipnc
  6893  0D05  0A21               	incf	trimf@x+1,w
  6894  0D06  077B               	addwf	??_trimf+3,w
  6895  0D07  00F3               	movwf	i1___lwdiv@dividend+1
  6896  0D08  120A  158A  225A  120A  158A  	fcall	i1___lwdiv
  6897  0D0D  0871               	movf	?i1___lwdiv+1,w
  6898  0D0E  01FD               	clrf	trimf@ua+1
  6899  0D0F  07FD               	addwf	trimf@ua+1,f
  6900  0D10  0870               	movf	?i1___lwdiv,w
  6901  0D11  01FC               	clrf	trimf@ua
  6902  0D12  07FC               	addwf	trimf@ua,f
  6903  0D13  2D20               	goto	i1l2099
  6904  0D14                     i1l2095:	
  6905                           
  6906                           ;main.c: 88: else if (x > c)
  6907  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0D16  0821               	movf	trimf@x+1,w
  6910  0D17  0227               	subwf	trimf@c+1,w
  6911  0D18  1D03               	skipz
  6912  0D19  2D1C               	goto	u175_25
  6913  0D1A  0820               	movf	trimf@x,w
  6914  0D1B  0226               	subwf	trimf@c,w
  6915  0D1C                     u175_25:	
  6916  0D1C  1803               	skipnc
  6917  0D1D  2D20               	goto	i1l2099
  6918  0D1E                     i1l2097:	
  6919                           
  6920                           ;main.c: 89: ua = 0;
  6921  0D1E  01FC               	clrf	trimf@ua
  6922  0D1F  01FD               	clrf	trimf@ua+1
  6923  0D20                     i1l2099:	
  6924                           
  6925                           ;main.c: 91: return(ua);
  6926  0D20  087D               	movf	trimf@ua+1,w
  6927  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  6928  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  6929  0D23  01A1               	clrf	?_trimf+1
  6930  0D24  07A1               	addwf	?_trimf+1,f
  6931  0D25  087C               	movf	trimf@ua,w
  6932  0D26  01A0               	clrf	?_trimf
  6933  0D27  07A0               	addwf	?_trimf,f
  6934  0D28  0008               	return
  6935  0D29                     __end_of_trimf:	
  6936                           
  6937                           	psect	text31
  6938  0D29                     __ptext31:	
  6939 ;; *************** function _trapmf *****************
  6940 ;; Defined at:
  6941 ;;		line 97 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  x               2    0[BANK0 ] unsigned int 
  6944 ;;  a               2    2[BANK0 ] unsigned int 
  6945 ;;  b               2    4[BANK0 ] unsigned int 
  6946 ;;  c               2    6[BANK0 ] unsigned int 
  6947 ;;  d               2    8[BANK0 ] unsigned int 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  ua              2   12[COMMON] unsigned int 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  2    0[BANK0 ] unsigned int 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0, pclath, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6959 ;;      Params:         0      10       0       0       0
  6960 ;;      Locals:         2       0       0       0       0
  6961 ;;      Temps:          4       0       0       0       0
  6962 ;;      Totals:         6      10       0       0       0
  6963 ;;Total ram usage:       16 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    1
  6966 ;; This function calls:
  6967 ;;		i1___lwdiv
  6968 ;; This function is called by:
  6969 ;;		_Fuzzy
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _trapmf
  6975  0D29                     _trapmf:	
  6976                           
  6977                           ;main.c: 99: unsigned int ua = 0;
  6978                           
  6979                           ;incstack = 0
  6980                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  6981  0D29  01FC               	clrf	trapmf@ua
  6982  0D2A  01FD               	clrf	trapmf@ua+1
  6983                           
  6984                           ;main.c: 101: if (x <= a)
  6985  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  6986  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  6987  0D2D  0821               	movf	trapmf@x+1,w
  6988  0D2E  0223               	subwf	trapmf@a+1,w
  6989  0D2F  1D03               	skipz
  6990  0D30  2D33               	goto	u176_25
  6991  0D31  0820               	movf	trapmf@x,w
  6992  0D32  0222               	subwf	trapmf@a,w
  6993  0D33                     u176_25:	
  6994  0D33  1803               	btfsc	3,0
  6995  0D34  2DBD               	goto	i1l2129
  6996                           
  6997                           ;main.c: 103: else if ((a < x) && (x <= b))
  6998                           
  6999                           ;main.c: 102: ua = 0;
  7000  0D35  0821               	movf	trapmf@x+1,w
  7001  0D36  0223               	subwf	trapmf@a+1,w
  7002  0D37  1D03               	skipz
  7003  0D38  2D3B               	goto	u177_25
  7004  0D39  0820               	movf	trapmf@x,w
  7005  0D3A  0222               	subwf	trapmf@a,w
  7006  0D3B                     u177_25:	
  7007  0D3B  1803               	skipnc
  7008  0D3C  2D62               	goto	i1l2115
  7009  0D3D  0821               	movf	trapmf@x+1,w
  7010  0D3E  0225               	subwf	trapmf@b+1,w
  7011  0D3F  1D03               	skipz
  7012  0D40  2D43               	goto	u178_25
  7013  0D41  0820               	movf	trapmf@x,w
  7014  0D42  0224               	subwf	trapmf@b,w
  7015  0D43                     u178_25:	
  7016  0D43  1C03               	skipc
  7017  0D44  2D62               	goto	i1l2115
  7018                           
  7019                           ;main.c: 104: ua = ((x - a) / (b - a));
  7020  0D45  0922               	comf	trapmf@a,w
  7021  0D46  00F8               	movwf	??_trapmf
  7022  0D47  0923               	comf	trapmf@a+1,w
  7023  0D48  00F9               	movwf	??_trapmf+1
  7024  0D49  0AF8               	incf	??_trapmf,f
  7025  0D4A  1903               	skipnz
  7026  0D4B  0AF9               	incf	??_trapmf+1,f
  7027  0D4C  0824               	movf	trapmf@b,w
  7028  0D4D  0778               	addwf	??_trapmf,w
  7029  0D4E  00F0               	movwf	i1___lwdiv@divisor
  7030  0D4F  0825               	movf	trapmf@b+1,w
  7031  0D50  1803               	skipnc
  7032  0D51  0A25               	incf	trapmf@b+1,w
  7033  0D52  0779               	addwf	??_trapmf+1,w
  7034  0D53  00F1               	movwf	i1___lwdiv@divisor+1
  7035  0D54  0922               	comf	trapmf@a,w
  7036  0D55  00FA               	movwf	??_trapmf+2
  7037  0D56  0923               	comf	trapmf@a+1,w
  7038  0D57  00FB               	movwf	??_trapmf+3
  7039  0D58  0AFA               	incf	??_trapmf+2,f
  7040  0D59  1903               	skipnz
  7041  0D5A  0AFB               	incf	??_trapmf+3,f
  7042  0D5B  0820               	movf	trapmf@x,w
  7043  0D5C  077A               	addwf	??_trapmf+2,w
  7044  0D5D  00F2               	movwf	i1___lwdiv@dividend
  7045  0D5E  0821               	movf	trapmf@x+1,w
  7046  0D5F  1803               	skipnc
  7047  0D60  0A21               	incf	trapmf@x+1,w
  7048  0D61  2DA5               	goto	L9
  7049  0D62                     i1l2115:	
  7050                           
  7051                           ;main.c: 105: else if ((b <= x) && (x <= c))
  7052  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  7053  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  7054  0D64  0825               	movf	trapmf@b+1,w
  7055  0D65  0221               	subwf	trapmf@x+1,w
  7056  0D66  1D03               	skipz
  7057  0D67  2D6A               	goto	u179_25
  7058  0D68  0824               	movf	trapmf@b,w
  7059  0D69  0220               	subwf	trapmf@x,w
  7060  0D6A                     u179_25:	
  7061  0D6A  1C03               	skipc
  7062  0D6B  2D79               	goto	i1l2121
  7063  0D6C  0821               	movf	trapmf@x+1,w
  7064  0D6D  0227               	subwf	trapmf@c+1,w
  7065  0D6E  1D03               	skipz
  7066  0D6F  2D72               	goto	u180_25
  7067  0D70  0820               	movf	trapmf@x,w
  7068  0D71  0226               	subwf	trapmf@c,w
  7069  0D72                     u180_25:	
  7070  0D72  1C03               	skipc
  7071  0D73  2D79               	goto	i1l2121
  7072                           
  7073                           ;main.c: 106: ua = 1;
  7074  0D74  3001               	movlw	1
  7075  0D75  00FC               	movwf	trapmf@ua
  7076  0D76  3000               	movlw	0
  7077  0D77  00FD               	movwf	trapmf@ua+1
  7078  0D78  2DBF               	goto	i1l2131
  7079  0D79                     i1l2121:	
  7080                           
  7081                           ;main.c: 107: else if ((c < x) && (x <= d))
  7082  0D79  0821               	movf	trapmf@x+1,w
  7083  0D7A  0227               	subwf	trapmf@c+1,w
  7084  0D7B  1D03               	skipz
  7085  0D7C  2D7F               	goto	u181_25
  7086  0D7D  0820               	movf	trapmf@x,w
  7087  0D7E  0226               	subwf	trapmf@c,w
  7088  0D7F                     u181_25:	
  7089  0D7F  1803               	skipnc
  7090  0D80  2DB3               	goto	i1l2127
  7091  0D81  0821               	movf	trapmf@x+1,w
  7092  0D82  0229               	subwf	trapmf@d+1,w
  7093  0D83  1D03               	skipz
  7094  0D84  2D87               	goto	u182_25
  7095  0D85  0820               	movf	trapmf@x,w
  7096  0D86  0228               	subwf	trapmf@d,w
  7097  0D87                     u182_25:	
  7098  0D87  1C03               	skipc
  7099  0D88  2DB3               	goto	i1l2127
  7100                           
  7101                           ;main.c: 108: ua = ((d - x) / (d - c));
  7102  0D89  0926               	comf	trapmf@c,w
  7103  0D8A  00F8               	movwf	??_trapmf
  7104  0D8B  0927               	comf	trapmf@c+1,w
  7105  0D8C  00F9               	movwf	??_trapmf+1
  7106  0D8D  0AF8               	incf	??_trapmf,f
  7107  0D8E  1903               	skipnz
  7108  0D8F  0AF9               	incf	??_trapmf+1,f
  7109  0D90  0828               	movf	trapmf@d,w
  7110  0D91  0778               	addwf	??_trapmf,w
  7111  0D92  00F0               	movwf	i1___lwdiv@divisor
  7112  0D93  0829               	movf	trapmf@d+1,w
  7113  0D94  1803               	skipnc
  7114  0D95  0A29               	incf	trapmf@d+1,w
  7115  0D96  0779               	addwf	??_trapmf+1,w
  7116  0D97  00F1               	movwf	i1___lwdiv@divisor+1
  7117  0D98  0920               	comf	trapmf@x,w
  7118  0D99  00FA               	movwf	??_trapmf+2
  7119  0D9A  0921               	comf	trapmf@x+1,w
  7120  0D9B  00FB               	movwf	??_trapmf+3
  7121  0D9C  0AFA               	incf	??_trapmf+2,f
  7122  0D9D  1903               	skipnz
  7123  0D9E  0AFB               	incf	??_trapmf+3,f
  7124  0D9F  0828               	movf	trapmf@d,w
  7125  0DA0  077A               	addwf	??_trapmf+2,w
  7126  0DA1  00F2               	movwf	i1___lwdiv@dividend
  7127  0DA2  0829               	movf	trapmf@d+1,w
  7128  0DA3  1803               	skipnc
  7129  0DA4  0A29               	incf	trapmf@d+1,w
  7130  0DA5                     L9:	
  7131  0DA5  077B               	addwf	??_trapmf+3,w
  7132  0DA6  00F3               	movwf	i1___lwdiv@dividend+1
  7133  0DA7  120A  158A  225A  120A  158A  	fcall	i1___lwdiv
  7134  0DAC  0871               	movf	?i1___lwdiv+1,w
  7135  0DAD  01FD               	clrf	trapmf@ua+1
  7136  0DAE  07FD               	addwf	trapmf@ua+1,f
  7137  0DAF  0870               	movf	?i1___lwdiv,w
  7138  0DB0  01FC               	clrf	trapmf@ua
  7139  0DB1  07FC               	addwf	trapmf@ua,f
  7140  0DB2  2DBF               	goto	i1l2131
  7141  0DB3                     i1l2127:	
  7142                           
  7143                           ;main.c: 109: else if (x > d)
  7144  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  7145  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  7146  0DB5  0821               	movf	trapmf@x+1,w
  7147  0DB6  0229               	subwf	trapmf@d+1,w
  7148  0DB7  1D03               	skipz
  7149  0DB8  2DBB               	goto	u183_25
  7150  0DB9  0820               	movf	trapmf@x,w
  7151  0DBA  0228               	subwf	trapmf@d,w
  7152  0DBB                     u183_25:	
  7153  0DBB  1803               	skipnc
  7154  0DBC  2DBF               	goto	i1l2131
  7155  0DBD                     i1l2129:	
  7156                           
  7157                           ;main.c: 110: ua = 0;
  7158  0DBD  01FC               	clrf	trapmf@ua
  7159  0DBE  01FD               	clrf	trapmf@ua+1
  7160  0DBF                     i1l2131:	
  7161                           
  7162                           ;main.c: 112: return(ua);
  7163  0DBF  087D               	movf	trapmf@ua+1,w
  7164  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  7166  0DC2  01A1               	clrf	?_trapmf+1
  7167  0DC3  07A1               	addwf	?_trapmf+1,f
  7168  0DC4  087C               	movf	trapmf@ua,w
  7169  0DC5  01A0               	clrf	?_trapmf
  7170  0DC6  07A0               	addwf	?_trapmf,f
  7171  0DC7  0008               	return
  7172  0DC8                     __end_of_trapmf:	
  7173                           
  7174                           	psect	text32
  7175  0A5A                     __ptext32:	
  7176 ;; *************** function i1___lwdiv *****************
  7177 ;; Defined at:
  7178 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  divisor         2    0[COMMON] unsigned int 
  7181 ;;  dividend        2    2[COMMON] unsigned int 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7184 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  2    0[COMMON] unsigned int 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7194 ;;      Params:         4       0       0       0       0
  7195 ;;      Locals:         3       0       0       0       0
  7196 ;;      Temps:          1       0       0       0       0
  7197 ;;      Totals:         8       0       0       0       0
  7198 ;;Total ram usage:        8 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_trimf
  7204 ;;		_trapmf
  7205 ;;		_Fuzzy
  7206 ;;		_ISR
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function i1___lwdiv
  7212  0A5A                     i1___lwdiv:	
  7213                           
  7214                           ;incstack = 0
  7215                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7216  0A5A  01F5               	clrf	i1___lwdiv@quotient
  7217  0A5B  01F6               	clrf	i1___lwdiv@quotient+1
  7218  0A5C  0871               	movf	i1___lwdiv@divisor+1,w
  7219  0A5D  0470               	iorwf	i1___lwdiv@divisor,w
  7220  0A5E  1903               	skipnz
  7221  0A5F  2A91               	goto	i1l2073
  7222  0A60  01F7               	clrf	i1___lwdiv@counter
  7223  0A61  0AF7               	incf	i1___lwdiv@counter,f
  7224  0A62                     i1l2061:	
  7225  0A62  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  7226  0A63  2A70               	goto	i1l2063
  7227  0A64  3001               	movlw	1
  7228  0A65                     u164_25:	
  7229  0A65  1003               	clrc
  7230  0A66  0DF0               	rlf	i1___lwdiv@divisor,f
  7231  0A67  0DF1               	rlf	i1___lwdiv@divisor+1,f
  7232  0A68  3EFF               	addlw	-1
  7233  0A69  1D03               	skipz
  7234  0A6A  2A65               	goto	u164_25
  7235  0A6B  3001               	movlw	1
  7236  0A6C  00F4               	movwf	??i1___lwdiv
  7237  0A6D  0874               	movf	??i1___lwdiv,w
  7238  0A6E  07F7               	addwf	i1___lwdiv@counter,f
  7239  0A6F  2A62               	goto	i1l2061
  7240  0A70                     i1l2063:	
  7241  0A70  3001               	movlw	1
  7242  0A71                     u166_25:	
  7243  0A71  1003               	clrc
  7244  0A72  0DF5               	rlf	i1___lwdiv@quotient,f
  7245  0A73  0DF6               	rlf	i1___lwdiv@quotient+1,f
  7246  0A74  3EFF               	addlw	-1
  7247  0A75  1D03               	skipz
  7248  0A76  2A71               	goto	u166_25
  7249  0A77  0871               	movf	i1___lwdiv@divisor+1,w
  7250  0A78  0273               	subwf	i1___lwdiv@dividend+1,w
  7251  0A79  1D03               	skipz
  7252  0A7A  2A7D               	goto	u167_25
  7253  0A7B  0870               	movf	i1___lwdiv@divisor,w
  7254  0A7C  0272               	subwf	i1___lwdiv@dividend,w
  7255  0A7D                     u167_25:	
  7256  0A7D  1C03               	skipc
  7257  0A7E  2A86               	goto	i1l2069
  7258  0A7F  0870               	movf	i1___lwdiv@divisor,w
  7259  0A80  02F2               	subwf	i1___lwdiv@dividend,f
  7260  0A81  0871               	movf	i1___lwdiv@divisor+1,w
  7261  0A82  1C03               	skipc
  7262  0A83  03F3               	decf	i1___lwdiv@dividend+1,f
  7263  0A84  02F3               	subwf	i1___lwdiv@dividend+1,f
  7264  0A85  1475               	bsf	i1___lwdiv@quotient,0
  7265  0A86                     i1l2069:	
  7266  0A86  3001               	movlw	1
  7267  0A87                     u168_25:	
  7268  0A87  1003               	clrc
  7269  0A88  0CF1               	rrf	i1___lwdiv@divisor+1,f
  7270  0A89  0CF0               	rrf	i1___lwdiv@divisor,f
  7271  0A8A  3EFF               	addlw	-1
  7272  0A8B  1D03               	skipz
  7273  0A8C  2A87               	goto	u168_25
  7274  0A8D  3001               	movlw	1
  7275  0A8E  02F7               	subwf	i1___lwdiv@counter,f
  7276  0A8F  1D03               	btfss	3,2
  7277  0A90  2A70               	goto	i1l2063
  7278  0A91                     i1l2073:	
  7279  0A91  0876               	movf	i1___lwdiv@quotient+1,w
  7280  0A92  01F1               	clrf	?i1___lwdiv+1
  7281  0A93  07F1               	addwf	?i1___lwdiv+1,f
  7282  0A94  0875               	movf	i1___lwdiv@quotient,w
  7283  0A95  01F0               	clrf	?i1___lwdiv
  7284  0A96  07F0               	addwf	?i1___lwdiv,f
  7285  0A97  0008               	return
  7286  0A98                     __end_ofi1___lwdiv:	
  7287                           
  7288                           	psect	text33
  7289  088E                     __ptext33:	
  7290 ;; *************** function _max_val *****************
  7291 ;; Defined at:
  7292 ;;		line 127 in file "C:\Users\Ninguem\Desktop\Trabalho Sistemas Inteligentes Cruzeiro\Retrab C no MPLAB\main.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  a               2    0[COMMON] unsigned int 
  7295 ;;  b               2    2[COMMON] unsigned int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2    0[COMMON] unsigned int 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         4       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0
  7310 ;;      Totals:         4       0       0       0       0
  7311 ;;Total ram usage:        4 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_Fuzzy
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _max_val
  7322  088E                     _max_val:	
  7323                           
  7324                           ;main.c: 129: if (a > b)
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in _max_val: [wreg+status,2+status,0]
  7328  088E  0871               	movf	max_val@a+1,w
  7329  088F  0273               	subwf	max_val@b+1,w
  7330  0890  1D03               	skipz
  7331  0891  2894               	goto	u184_25
  7332  0892  0870               	movf	max_val@a,w
  7333  0893  0272               	subwf	max_val@b,w
  7334  0894                     u184_25:	
  7335  0894  1C03               	btfss	3,0
  7336  0895  0008               	return
  7337                           
  7338                           ;main.c: 131: else
  7339                           ;main.c: 132: return b;
  7340                           
  7341                           ;main.c: 130: return a;
  7342  0896  0873               	movf	max_val@b+1,w
  7343  0897  01F1               	clrf	?_max_val+1
  7344  0898  07F1               	addwf	?_max_val+1,f
  7345  0899  0872               	movf	max_val@b,w
  7346  089A  01F0               	clrf	?_max_val
  7347  089B  07F0               	addwf	?_max_val,f
  7348  089C  0008               	return
  7349  089D                     __end_of_max_val:	
  7350                           
  7351                           	psect	text34
  7352  08DD                     __ptext34:	
  7353 ;; *************** function ___lwtoft *****************
  7354 ;; Defined at:
  7355 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  c               2    8[COMMON] unsigned int 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  3    8[COMMON] float 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, pclath, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7369 ;;      Params:         3       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0
  7371 ;;      Temps:          1       0       0       0       0
  7372 ;;      Totals:         4       0       0       0       0
  7373 ;;Total ram usage:        4 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    1
  7376 ;; This function calls:
  7377 ;;		___ftpack
  7378 ;; This function is called by:
  7379 ;;		_Fuzzy
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           
  7384                           ;psect for function ___lwtoft
  7385  08DD                     ___lwtoft:	
  7386                           
  7387                           ;incstack = 0
  7388                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7389  08DD  0878               	movf	___lwtoft@c,w
  7390  08DE  00F0               	movwf	___ftpack@arg
  7391  08DF  0879               	movf	___lwtoft@c+1,w
  7392  08E0  00F1               	movwf	___ftpack@arg+1
  7393  08E1  01F2               	clrf	___ftpack@arg+2
  7394  08E2  308E               	movlw	142
  7395  08E3  00FB               	movwf	??___lwtoft
  7396  08E4  087B               	movf	??___lwtoft,w
  7397  08E5  00F3               	movwf	___ftpack@exp
  7398  08E6  01F4               	clrf	___ftpack@sign
  7399  08E7  120A  158A  23D4   	fcall	___ftpack
  7400  08EA  0870               	movf	?___ftpack,w
  7401  08EB  00F8               	movwf	?___lwtoft
  7402  08EC  0871               	movf	?___ftpack+1,w
  7403  08ED  00F9               	movwf	?___lwtoft+1
  7404  08EE  0872               	movf	?___ftpack+2,w
  7405  08EF  00FA               	movwf	?___lwtoft+2
  7406  08F0  0008               	return
  7407  08F1                     __end_of___lwtoft:	
  7408                           
  7409                           	psect	text35
  7410  0BD4                     __ptext35:	
  7411 ;; *************** function ___ftpack *****************
  7412 ;; Defined at:
  7413 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  arg             3    0[COMMON] unsigned um
  7416 ;;  exp             1    3[COMMON] unsigned char 
  7417 ;;  sign            1    4[COMMON] unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  3    0[COMMON] float 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7429 ;;      Params:         5       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0
  7431 ;;      Temps:          3       0       0       0       0
  7432 ;;      Totals:         8       0       0       0       0
  7433 ;;Total ram usage:        8 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		___lwtoft
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function ___ftpack
  7444  0BD4                     ___ftpack:	
  7445                           
  7446                           ;incstack = 0
  7447                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7448  0BD4  0873               	movf	___ftpack@exp,w
  7449  0BD5  1903               	btfsc	3,2
  7450  0BD6  2BDC               	goto	i1l2021
  7451  0BD7  0872               	movf	___ftpack@arg+2,w
  7452  0BD8  0471               	iorwf	___ftpack@arg+1,w
  7453  0BD9  0470               	iorwf	___ftpack@arg,w
  7454  0BDA  1D03               	skipz
  7455  0BDB  2BEF               	goto	i1l2027
  7456  0BDC                     i1l2021:	
  7457  0BDC  3000               	movlw	0
  7458  0BDD  00F0               	movwf	?___ftpack
  7459  0BDE  3000               	movlw	0
  7460  0BDF  00F1               	movwf	?___ftpack+1
  7461  0BE0  3000               	movlw	0
  7462  0BE1  00F2               	movwf	?___ftpack+2
  7463  0BE2  0008               	return
  7464  0BE3                     i1l2025:	
  7465  0BE3  3001               	movlw	1
  7466  0BE4  00F5               	movwf	??___ftpack
  7467  0BE5  0875               	movf	??___ftpack,w
  7468  0BE6  07F3               	addwf	___ftpack@exp,f
  7469  0BE7  3001               	movlw	1
  7470  0BE8                     u153_25:	
  7471  0BE8  1003               	clrc
  7472  0BE9  0CF2               	rrf	___ftpack@arg+2,f
  7473  0BEA  0CF1               	rrf	___ftpack@arg+1,f
  7474  0BEB  0CF0               	rrf	___ftpack@arg,f
  7475  0BEC  3EFF               	addlw	-1
  7476  0BED  1D03               	skipz
  7477  0BEE  2BE8               	goto	u153_25
  7478  0BEF                     i1l2027:	
  7479  0BEF  30FE               	movlw	254
  7480  0BF0  0572               	andwf	___ftpack@arg+2,w
  7481  0BF1  1903               	btfsc	3,2
  7482  0BF2  2C0A               	goto	i1l770
  7483  0BF3  2BE3               	goto	i1l2025
  7484  0BF4                     i1l2029:	
  7485  0BF4  3001               	movlw	1
  7486  0BF5  00F5               	movwf	??___ftpack
  7487  0BF6  0875               	movf	??___ftpack,w
  7488  0BF7  07F3               	addwf	___ftpack@exp,f
  7489  0BF8  3001               	movlw	1
  7490  0BF9  07F0               	addwf	___ftpack@arg,f
  7491  0BFA  3000               	movlw	0
  7492  0BFB  1803               	skipnc
  7493  0BFC  3001               	movlw	1
  7494  0BFD  07F1               	addwf	___ftpack@arg+1,f
  7495  0BFE  3000               	movlw	0
  7496  0BFF  1803               	skipnc
  7497  0C00  3001               	movlw	1
  7498  0C01  07F2               	addwf	___ftpack@arg+2,f
  7499  0C02  3001               	movlw	1
  7500  0C03                     u155_25:	
  7501  0C03  1003               	clrc
  7502  0C04  0CF2               	rrf	___ftpack@arg+2,f
  7503  0C05  0CF1               	rrf	___ftpack@arg+1,f
  7504  0C06  0CF0               	rrf	___ftpack@arg,f
  7505  0C07  3EFF               	addlw	-1
  7506  0C08  1D03               	skipz
  7507  0C09  2C03               	goto	u155_25
  7508  0C0A                     i1l770:	
  7509  0C0A  30FF               	movlw	255
  7510  0C0B  0572               	andwf	___ftpack@arg+2,w
  7511  0C0C  1903               	btfsc	3,2
  7512  0C0D  2C19               	goto	i1l2037
  7513  0C0E  2BF4               	goto	i1l2029
  7514  0C0F                     i1l2035:	
  7515  0C0F  3001               	movlw	1
  7516  0C10  02F3               	subwf	___ftpack@exp,f
  7517  0C11  3001               	movlw	1
  7518  0C12                     u157_25:	
  7519  0C12  1003               	clrc
  7520  0C13  0DF0               	rlf	___ftpack@arg,f
  7521  0C14  0DF1               	rlf	___ftpack@arg+1,f
  7522  0C15  0DF2               	rlf	___ftpack@arg+2,f
  7523  0C16  3EFF               	addlw	-1
  7524  0C17  1D03               	skipz
  7525  0C18  2C12               	goto	u157_25
  7526  0C19                     i1l2037:	
  7527  0C19  1FF1               	btfss	___ftpack@arg+1,7
  7528  0C1A  2C0F               	goto	i1l2035
  7529  0C1B  1873               	btfsc	___ftpack@exp,0
  7530  0C1C  2C23               	goto	i1l776
  7531  0C1D  30FF               	movlw	255
  7532  0C1E  05F0               	andwf	___ftpack@arg,f
  7533  0C1F  307F               	movlw	127
  7534  0C20  05F1               	andwf	___ftpack@arg+1,f
  7535  0C21  30FF               	movlw	255
  7536  0C22  05F2               	andwf	___ftpack@arg+2,f
  7537  0C23                     i1l776:	
  7538  0C23  1003               	clrc
  7539  0C24  0CF3               	rrf	___ftpack@exp,f
  7540  0C25  0873               	movf	___ftpack@exp,w
  7541  0C26  00F5               	movwf	??___ftpack
  7542  0C27  01F6               	clrf	??___ftpack+1
  7543  0C28  01F7               	clrf	??___ftpack+2
  7544  0C29  3010               	movlw	16
  7545  0C2A                     u160_25:	
  7546  0C2A  1003               	clrc
  7547  0C2B  0DF5               	rlf	??___ftpack,f
  7548  0C2C  0DF6               	rlf	??___ftpack+1,f
  7549  0C2D  0DF7               	rlf	??___ftpack+2,f
  7550  0C2E  3EFF               	addlw	-1
  7551  0C2F  1D03               	skipz
  7552  0C30  2C2A               	goto	u160_25
  7553  0C31  0875               	movf	??___ftpack,w
  7554  0C32  04F0               	iorwf	___ftpack@arg,f
  7555  0C33  0876               	movf	??___ftpack+1,w
  7556  0C34  04F1               	iorwf	___ftpack@arg+1,f
  7557  0C35  0877               	movf	??___ftpack+2,w
  7558  0C36  04F2               	iorwf	___ftpack@arg+2,f
  7559  0C37  0874               	movf	___ftpack@sign,w
  7560  0C38  1903               	btfsc	3,2
  7561  0C39  0008               	return
  7562  0C3A  17F2               	bsf	___ftpack@arg+2,7
  7563  0C3B  0008               	return
  7564  0C3C                     __end_of___ftpack:	
  7565                           
  7566                           	psect	text36
  7567  0B75                     __ptext36:	
  7568 ;; *************** function ___ftge *****************
  7569 ;; Defined at:
  7570 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  ff1             3    0[BANK0 ] float 
  7573 ;;  ff2             3    3[BANK0 ] float 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;		None               void
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7585 ;;      Params:         0       6       0       0       0
  7586 ;;      Locals:         0       0       0       0       0
  7587 ;;      Temps:          0       6       0       0       0
  7588 ;;      Totals:         0      12       0       0       0
  7589 ;;Total ram usage:       12 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_Fuzzy
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function ___ftge
  7600  0B75                     ___ftge:	
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7604  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  7605  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  7606  0B77  1FA2               	btfss	___ftge@ff1+2,7
  7607  0B78  2B9E               	goto	i1l2233
  7608  0B79  3000               	movlw	0
  7609  0B7A  00A6               	movwf	??___ftge
  7610  0B7B  3000               	movlw	0
  7611  0B7C  00A7               	movwf	??___ftge+1
  7612  0B7D  3080               	movlw	128
  7613  0B7E  00A8               	movwf	??___ftge+2
  7614  0B7F  0920               	comf	___ftge@ff1,w
  7615  0B80  00A9               	movwf	??___ftge+3
  7616  0B81  0921               	comf	___ftge@ff1+1,w
  7617  0B82  00AA               	movwf	??___ftge+4
  7618  0B83  0922               	comf	___ftge@ff1+2,w
  7619  0B84  00AB               	movwf	??___ftge+5
  7620  0B85  0AA9               	incf	??___ftge+3,f
  7621  0B86  1903               	skipnz
  7622  0B87  0AAA               	incf	??___ftge+4,f
  7623  0B88  1903               	skipnz
  7624  0B89  0AAB               	incf	??___ftge+5,f
  7625  0B8A  0829               	movf	??___ftge+3,w
  7626  0B8B  07A6               	addwf	??___ftge,f
  7627  0B8C  082A               	movf	??___ftge+4,w
  7628  0B8D  1803               	skipnc
  7629  0B8E  0F2A               	incfsz	??___ftge+4,w
  7630  0B8F  2B91               	goto	u203_21
  7631  0B90  2B92               	goto	u203_22
  7632  0B91                     u203_21:	
  7633  0B91  07A7               	addwf	??___ftge+1,f
  7634  0B92                     u203_22:	
  7635  0B92  082B               	movf	??___ftge+5,w
  7636  0B93  1803               	skipnc
  7637  0B94  0F2B               	incfsz	??___ftge+5,w
  7638  0B95  2B97               	goto	u203_23
  7639  0B96  2B98               	goto	u203_24
  7640  0B97                     u203_23:	
  7641  0B97  07A8               	addwf	??___ftge+2,f
  7642  0B98                     u203_24:	
  7643  0B98  0826               	movf	??___ftge,w
  7644  0B99  00A0               	movwf	___ftge@ff1
  7645  0B9A  0827               	movf	??___ftge+1,w
  7646  0B9B  00A1               	movwf	___ftge@ff1+1
  7647  0B9C  0828               	movf	??___ftge+2,w
  7648  0B9D  00A2               	movwf	___ftge@ff1+2
  7649  0B9E                     i1l2233:	
  7650  0B9E  1FA5               	btfss	___ftge@ff2+2,7
  7651  0B9F  2BC5               	goto	i1l2237
  7652  0BA0  3000               	movlw	0
  7653  0BA1  00A6               	movwf	??___ftge
  7654  0BA2  3000               	movlw	0
  7655  0BA3  00A7               	movwf	??___ftge+1
  7656  0BA4  3080               	movlw	128
  7657  0BA5  00A8               	movwf	??___ftge+2
  7658  0BA6  0923               	comf	___ftge@ff2,w
  7659  0BA7  00A9               	movwf	??___ftge+3
  7660  0BA8  0924               	comf	___ftge@ff2+1,w
  7661  0BA9  00AA               	movwf	??___ftge+4
  7662  0BAA  0925               	comf	___ftge@ff2+2,w
  7663  0BAB  00AB               	movwf	??___ftge+5
  7664  0BAC  0AA9               	incf	??___ftge+3,f
  7665  0BAD  1903               	skipnz
  7666  0BAE  0AAA               	incf	??___ftge+4,f
  7667  0BAF  1903               	skipnz
  7668  0BB0  0AAB               	incf	??___ftge+5,f
  7669  0BB1  0829               	movf	??___ftge+3,w
  7670  0BB2  07A6               	addwf	??___ftge,f
  7671  0BB3  082A               	movf	??___ftge+4,w
  7672  0BB4  1803               	skipnc
  7673  0BB5  0F2A               	incfsz	??___ftge+4,w
  7674  0BB6  2BB8               	goto	u205_21
  7675  0BB7  2BB9               	goto	u205_22
  7676  0BB8                     u205_21:	
  7677  0BB8  07A7               	addwf	??___ftge+1,f
  7678  0BB9                     u205_22:	
  7679  0BB9  082B               	movf	??___ftge+5,w
  7680  0BBA  1803               	skipnc
  7681  0BBB  0F2B               	incfsz	??___ftge+5,w
  7682  0BBC  2BBE               	goto	u205_23
  7683  0BBD  2BBF               	goto	u205_24
  7684  0BBE                     u205_23:	
  7685  0BBE  07A8               	addwf	??___ftge+2,f
  7686  0BBF                     u205_24:	
  7687  0BBF  0826               	movf	??___ftge,w
  7688  0BC0  00A3               	movwf	___ftge@ff2
  7689  0BC1  0827               	movf	??___ftge+1,w
  7690  0BC2  00A4               	movwf	___ftge@ff2+1
  7691  0BC3  0828               	movf	??___ftge+2,w
  7692  0BC4  00A5               	movwf	___ftge@ff2+2
  7693  0BC5                     i1l2237:	
  7694  0BC5  3080               	movlw	128
  7695  0BC6  06A2               	xorwf	___ftge@ff1+2,f
  7696  0BC7  3080               	movlw	128
  7697  0BC8  06A5               	xorwf	___ftge@ff2+2,f
  7698  0BC9  0825               	movf	___ftge@ff2+2,w
  7699  0BCA  0222               	subwf	___ftge@ff1+2,w
  7700  0BCB  1D03               	skipz
  7701  0BCC  0008               	return
  7702  0BCD  0824               	movf	___ftge@ff2+1,w
  7703  0BCE  0221               	subwf	___ftge@ff1+1,w
  7704  0BCF  1D03               	skipz
  7705  0BD0  0008               	return
  7706  0BD1  0823               	movf	___ftge@ff2,w
  7707  0BD2  0220               	subwf	___ftge@ff1,w
  7708  0BD3  0008               	return
  7709  0BD4                     __end_of___ftge:	
  7710  007E                     btemp	set	126	;btemp
  7711  007E                     wtemp	set	126
  7712  007E                     wtemp0	set	126
  7713  0080                     wtemp1	set	128
  7714  0082                     wtemp2	set	130
  7715  0084                     wtemp3	set	132
  7716  0086                     wtemp4	set	134
  7717  0088                     wtemp5	set	136
  7718  007F                     wtemp6	set	127
  7719  007E                     ttemp	set	126
  7720  007E                     ttemp0	set	126
  7721  0081                     ttemp1	set	129
  7722  0084                     ttemp2	set	132
  7723  0087                     ttemp3	set	135
  7724  007F                     ttemp4	set	127
  7725  007E                     ltemp	set	126
  7726  007E                     ltemp0	set	126
  7727  0082                     ltemp1	set	130
  7728  0086                     ltemp2	set	134
  7729  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        4
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      57
    BANK1            80     17      79
    BANK3            96     11      11
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK1[10]), display_rpm(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1256$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK1[10]), display_rpm(BANK1[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK1[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->_trapmf
    _Fuzzy->_trimf
    _Fuzzy->i1___wmul
    i1___wmul->i1___lwdiv
    i1_PWM_DutyCycle2->i1___wmul
    _trimf->i1___lwdiv
    _trapmf->i1___lwdiv
    ___lwtoft->___ftpack
    ___ftge->___lwtoft

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->___ftge

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5983
                                             14 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    3404
                                              4 BANK1      7     3      4
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     458
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             31 BANK0      2     2      0
                                              0 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     899
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                             24 BANK0      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                              6 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                             23 BANK0      9     1      8
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     184
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                             25 BANK0      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                             25 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                             23 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                             25 BANK0      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   10471
                                             19 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                                7     5      2    8953
                                             12 BANK0      7     5      2
                             ___ftge
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     196
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      96
                                              0 BANK0      4     2      2
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               14     6      8    1453
                                              8 COMMON     6     6      0
                                              0 BANK0      8     0      8
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              16     6     10    2310
                                              8 COMMON     6     6      0
                                              0 BANK0     10     0     10
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     474
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _max_val                                              4     0      4     472
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             4     1      3    2529
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1931
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1288
                                              0 BANK0     12     6      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
     _trapmf
       i1___lwdiv
     _trimf
       i1___lwdiv
     i1_PWM_DutyCycle2
       i1___wmul (ARG)
         i1___lwdiv (ARG)
     i1___lwdiv
     i1___wmul
       i1___lwdiv (ARG)
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   i1_PWM_DutyCycle2
     i1___wmul (ARG)
       i1___lwdiv (ARG)
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B       B       9       11.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     11      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      39       5       71.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A1      12        0.0%
ABS                  0      0      A1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 24 16:20:25 2022

           ?i1_PWM_DutyCycle2 0020                             _x 0053                             _y 0055  
                           pc 0002                   ?_LCD_Cursor 0037       __size_of_PWM_DutyCycle1 001B  
     __size_of_PWM_DutyCycle2 001B                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00ED                            fsr 0004           ___wmul@multiplicand 0039  
          ??i1_PWM_DutyCycle2 0022              i1___wmul@product 007C                 _contagens_tm0 00A4  
                         l213 0731                           l238 0876                           l508 0569  
                         l609 0A18                           l490 0434                           l664 0DDE  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E83  
                         _tip 004F                           _rpm 00B8                           fsr0 0004  
                         _pwm 0049                           _sum 00BC    __size_of_USART_WriteString 0025  
                         indf 0000                  __CFG_FOSC$HS 0000             ??_LCD_WriteString 003B  
                __CFG_LVP$OFF 0000                          ?_ISR 0070            LCD_WriteString@Str 0039  
                        l3113 05F6                          l3105 05D5                          l3041 0452  
                        l3107 05D9                          l3131 0685                          l3035 0430  
                        l3045 046E                          l3127 0615                          l3119 060D  
                        l3071 0522                          l3055 04D6                          l3039 043D  
                        l3057 04FB                          l3129 03F6                          l3067 051C  
                        l3087 059A                          l3079 055B                          l3097 05B7  
                        l3089 059E                          l2459 09E7                          l2565 08FB  
                        l2579 09C2                          l2931 0E5C                          l2917 0E08  
                        l2909 0DF2                          l2935 0E6C                          l2927 0E4C  
                        l2919 0E1D                          l2951 0AB0                          l2961 0AD1  
                        l2883 08C9                          l2957 0AC6                          l2949 0AA2  
                        l2973 0AE2                          l2975 0AF6                          l2983 0B13  
                        l2889 0A10                          l2979 0B06                          STR_1 10EA  
                        STR_2 10F8                          STR_3 1105                          STR_4 10CE  
                        STR_5 10B2                          STR_6 10A4                          STR_7 10DC  
                        STR_8 10C0                          STR_9 1086                          u3005 0E39  
                        u3015 0E4D                          u3125 0AE9                          u3055 0AA5  
                        u2505 094E                          u3145 0AFE                          u3075 0AB1  
                        u3155 0B07                          u3235 054D                          u2445 07F2  
                        u3085 0ABD                          u3407 0C48                          u3175 0B27  
                        u3095 0AC7                          u3417 0C58                          u3507 0A4B  
                        u3427 0C66                          u3275 0582                          u3517 0A57  
                        u3437 0C72                          u3527 08A6                          u3447 0C7E  
                        u3457 0C8C                          u3377 072A                          u3467 0C9A  
                        u2915 0A19                          u3387 07DA                          u3477 0CA6  
                        u3397 08B5                          u2925 0A20                          u3487 0901  
                        u3497 0A3D                          u2975 0E0F                          u2995 0E20  
                        _OERR 00C1                          _TMR0 0001                          _TMR1 000E  
                        _main 068C                  ___ftpack@arg 0070            __size_of_LCD_Clear 0029  
                ___ftpack@exp 0073                          _temp 004D                          btemp 007E  
            __end_of_ADC_Init 08DD                          ltemp 007E                          start 0012  
                        ttemp 007E                          wtemp 007E                 ?_LCD_WriteCmd 0070  
               _LCD_WriteData 08AC       __end_of_USART_WriteChar 087B                         ??_ISR 0033  
                 ?_TIMER0_Set 0070              __end_of_LCD_Init 0CA9               __end_of___aldiv 0E83  
                       ?_main 0070                         _EEADR 010D                         STR_10 1095  
                       STR_11 1044                         STR_12 1061                         STR_13 1075  
                       STR_14 111E                         STR_15 111E                         STR_16 1092  
                       STR_17 1118                 __CFG_WDTE$OFF 0000                         STR_18 1112  
                       STR_19 101C                         _T1CON 0010               __end_of___lwdiv 0AD8  
                       i1l238 086C                         i1l167 0059               __end_of___lwmod 0B1C  
                       i1l194 0EF4                         i1l197 0F10                         i1l609 0962  
                       i1l770 0C0A                         i1l776 0C23                         _RCREG 001A  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                 __CFG_PWRTE$ON 0000  
                       _Fuzzy 0042                         _foTip 00AC                         _ideal 00AE  
                       _derro 00A8               __end_of_dpowers 101C               __end_of_max_val 089D  
             __end_of_isdigit 08CB                 ___ftpack@sign 0074                         _trimf 0CA9  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0016                         pclath 000A  
            __end_of_PWM_Init 09C2              __end_ofi1___wmul 097B                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 068C  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 0037                ?_LCD_WriteData 0070  
                 ?_USART_Init 00E0         i1TIMER0_Set@contagens 0070               __initialization 0015  
                __end_of_main 07E1                        ??_main 00E8                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 0A5A                        ?_Fuzzy 002C                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON2 018D              __end_of___ftpack 0C3C  
                      ?_trimf 0020                        i1l2021 0BDC                        i1l2025 0BE3  
                      i1l2121 0D79                        i1l2035 0C0F                        i1l2027 0BEF  
                      i1l2115 0D62                        i1l2131 0DBF                        i1l2037 0C19  
                      i1l2029 0BF4                        i1l2061 0A62                        i1l2063 0A70  
                      i1l2127 0DB3                        i1l2233 0B9E                        i1l2073 0A91  
                      i1l2129 0DBD                        i1l2401 02F9                        i1l2315 095A  
                      i1l2307 097B                        i1l2237 0BC5                        i1l2069 0A86  
                      i1l2421 0398                        i1l2341 0090                        i1l2333 005A  
                      i1l2095 0D14                        i1l2415 034E                        i1l2097 0D1E  
                      i1l2089 0CD8                        i1l2425 03C0                        i1l2353 0124  
                      i1l2099 0D20                        i1l2371 01B8                        i1l2355 0131  
                      i1l2383 0232                        i1l2447 093A                        i1l2439 092B  
                      i1l2385 023F                        i1l2369 01AB                        i1l2395 02C0  
                      i1l2723 0EC2                        i1l2389 026E                        i1l2717 0EAB  
                      i1l2807 0FF0                        u203_21 0B91                        i1l2809 0FF1  
                      i1l2761 0F3F                        i1l2729 0ED9                        u203_22 0B92  
                      u203_23 0B97                        i1l2755 0F28                        i1l2739 0EF5  
                      u203_24 0B98                        i1l2773 0F6D                        i1l2749 0F11  
                      i1l2767 0F56                        i1l2783 0F94                        i1l2795 0FB1  
                      i1l2779 0F84                        u205_21 0BB8                        u205_22 0BB9  
                      u205_23 0BBE                        u205_24 0BBF                        u221_25 0918  
                      u223_25 0963                        u160_25 0C2A                        u224_25 096A  
                      u232_25 01A0                        u153_25 0BE8                        u170_25 0CB3  
                      u234_25 0227                        u155_25 0C03                        u171_25 0CBB  
                      u164_25 0A65                        u180_25 0D72                        u172_25 0CC3  
                      u157_25 0C12                        u181_25 0D7F                        u173_25 0CE0  
                      u229_25 0119                        u166_25 0A71                        u182_25 0D87  
                      u174_25 0CE8                        u167_25 0A7D                        u183_25 0DBB  
                      u175_25 0D1C                        u184_25 0894                        u168_25 0A87  
                      u176_25 0D33                        u177_25 0D3B              __end_of___lwtoft 08F1  
                      u178_25 0D43                        u179_25 0D6A           __size_of_TIMER0_Set 0006  
                      _SSPADD 0093                        _SSPBUF 0013              LCD_WriteCmd@Byte 0038  
         i1_USART_WriteString 097B                        ___ftge 0B75                     ??___aldiv 003F  
                      ___wmul 0A0C                _PWM_DutyCycle1 093D                _PWM_DutyCycle2 07E1  
            ?_USART_WriteChar 0070                        _deltaV 00A6                     ??___lwdiv 003B  
                   ??___lwmod 003F                        _fitemp 0041         USART_ReceiveChar@byte 0074  
                      _pwmAnt 004B                        _trapmf 0D29                        _pulsos 00B6  
                      _status 00BA                     ??_max_val 0074             __end_ofi1___lwdiv 0A98  
                   ??_isdigit 0037                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0059                        trimf@a 0022  
                      trimf@b 0024                        trimf@c 0026                        trimf@x 0020  
                   ??_sprintf 00E2                 ?i1_TIMER0_Set 0070       __end_of__initialization 003E  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0037                    ___ftge@ff1 0020  
                  ___ftge@ff2 0023        __end_of_PWM_DutyCycle1 0958        __end_of_PWM_DutyCycle2 07FC  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 03EB                  __pidataBANK1 07FC  
               LCD_Cursor@Col 0037                 LCD_Cursor@Row 0039                  ??_LCD_Cursor 0038  
             _LCD_WriteString 09C2                 __end_of_trimf 0D29                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 0037          __end_of_LCD_WriteCmd 08AC         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 002E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 0197                       ??_trimf 0078                    __pbssBANK0 0041  
                  __pbssBANK1 00A0            __end_of_LCD_Cursor 0907                    ??_LCD_Init 0039  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 0037               ?_PWM_DutyCycle2 0037  
                  __pmaintext 068C                       ?___ftge 0020                       ?___wmul 0037  
                  __pintentry 0004                  ??_TIMER0_Set 0037                       _CCP1CON 0017  
                     _CCP2CON 001D                     ?___ftpack 0070                       ?_trapmf 0020  
                  ??_PWM_Init 0037                    ??i1___wmul 007C                     ?___lwtoft 0078  
               Fuzzy@setpoint 002C          __size_of_TIMER0_Init 000B       _posicao_do_grafico_food 00B2  
                     _SSPCON2 0091                    __stringtab 1000                    _fisetpoint 00AA  
          __end_of_TIMER0_Set 086B       __end_of_LCD_WriteString 09E7                     _ADCResult 00A0  
                ??_USART_Init 00E4             LCD_WriteData@Byte 0038                       ___aldiv 0DC8  
             __size_of___ftge 005F               __size_of___wmul 0025                       ___lwdiv 0A98  
                     ___lwmod 0AD8                    ??___ftpack 0075            _posicao_do_grafico 00B0  
                     __ptext1 03EB                       __ptext2 08BB                       __ptext3 0A0C  
                     __ptext4 0AD8                       __ptext5 0A98                       __ptext6 09E7  
                     __ptext7 0873                       __ptext8 0B1C                       __ptext9 0DC8  
                  _pas_cooler 00EB                    ??___lwtoft 007B               __size_of_trapmf 009F  
                __size_of_ISR 017D                     _T1CONbits 0010                       _dpowers 1012  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 088E  
                     _isdigit 08BB             i1___lwdiv@counter 0077              ___aldiv@dividend 003B  
                   _LCD_Clear 0A31            __end_of_USART_Init 0B75                       _sprintf 03EB  
                     clrloop0 087C          end_of_initialization 003E               Fuzzy@velocidade 0030  
                   _RCSTAbits 0018              ___aldiv@quotient 00DC                       trapmf@a 0022  
                     trapmf@b 0024                       trapmf@c 0026                       trapmf@d 0028  
                     trapmf@x 0020                       trimf@ua 007C                  __pstringtext 1000  
        __end_ofi1_TIMER0_Set 0865         i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 000F  
                   _PORTBbits 0006                     _PORTEbits 0009                    ?_LCD_Clear 0070  
            i1_PWM_DutyCycle2 0907             __size_of_ADC_Init 0012                     i1___lwdiv 0A5A  
                _contador_rb6 00A2           PWM_DutyCycle1@valor 0037                    _total_area 0051  
         PWM_DutyCycle2@valor 0037                   _CCP1CONbits 0017                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 0039             __size_of_LCD_Init 006D  
                _LCD_WriteCmd 089D                __end_of___ftge 0BD4                __end_of___wmul 0A31  
           i1_USART_WriteChar 086B            ?i1_USART_WriteChar 0070                __end_of_trapmf 0DC8  
    __size_of_USART_WriteChar 0008             __size_of_PWM_Init 0024           start_initialization 0015  
           __size_ofi1___wmul 0023                   __end_of_ISR 1000           ??i1_USART_WriteChar 0070  
                  ?i1___lwdiv 0070              ??_PWM_DutyCycle1 0039              ??_PWM_DutyCycle2 0039  
       __end_of_LCD_WriteData 08BB             _USART_ReceiveChar 0922                      ??___ftge 0026  
          ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 0873                      ??___wmul 003B  
                 __pdataBANK1 00EB   __end_ofi1_USART_WriteString 099E                      ??_trapmf 0078  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00DA  
               __pcstackBANK3 0190                   ??_LCD_Clear 0039           __end_of__stringdata 1123  
                _isdigit$1452 0037                   sprintf@_val 0192                   sprintf@flag 0196  
                 sprintf@prec 0191     __end_of_USART_ReceiveChar 093D         __size_ofi1_TIMER0_Set 0006  
            ___lwdiv@dividend 0039           TIMER0_Set@contagens 0037                      ?___aldiv 0037  
                    ?___lwdiv 0037                      ?___lwmod 00DA                     _ativa_fan 0057  
               ??_TIMER0_Init 0037            USART_Init@BaudRate 00E0                      ?_max_val 0070  
                    ?_isdigit 0070                      _ADC_Init 08CB                     _fop_rule1 0043  
                   _fop_rule2 0045                     _fop_rule3 0047                __size_of_Fuzzy 03A9  
  _posicao_do_grafico_service 00B4              ___lwdiv@quotient 003D                   ??i1___lwdiv 0074  
                    ?_sprintf 00DE                __size_of_trimf 0080             ??_USART_WriteChar 0037  
                i1_TIMER0_Set 085F               ___aldiv@divisor 0037             interrupt_function 0004  
             ___aldiv@counter 00DA                      _LCD_Init 0C3C                ___wmul@product 003B  
                   clear_ram0 087B                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 00BE  
    __end_ofi1_PWM_DutyCycle2 0922                     _tempo_rb6 00C0    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 00D0                   _display_pwm 00C6                    _ADCON0bits 001F  
                 __stringbase 1012                    _ADCON1bits 009F                   __stringdata 101C  
                    _PWM_Init 099E             ___wmul@multiplier 0037                      i1___wmul 0958  
         __end_of_TIMER0_Init 088E    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@sum 0031              __size_of___aldiv 00BB              __size_of___lwdiv 0040  
            __size_of___lwmod 0044                      ___ftpack 0BD4            __end_of__stringtab 1012  
                    ___lwtoft 08DD              __size_of_max_val 000F              __size_of_isdigit 0010  
             ___lwdiv@divisor 0037               ___lwdiv@counter 003C             _USART_WriteString 09E7  
                    __ptext10 0865                      __ptext11 0883                      __ptext20 089D  
                    __ptext12 099E                      __ptext21 08CB                      __ptext13 07E1  
                    __ptext30 0CA9                      __ptext22 0E83                      __ptext14 093D  
                    __ptext31 0D29                      __ptext23 085F                      __ptext15 09C2  
                    __ptext32 0A5A                      __ptext24 0922                      __ptext16 08AC  
                    __ptext33 088E                      __ptext25 097B                      __ptext17 0C3C  
                    __ptext34 08DD                      __ptext26 086B                      __ptext18 08F1  
                    __ptext35 0BD4                      __ptext27 0042                      __ptext19 0A31  
                    __ptext36 0B75                      __ptext28 0958                      __ptext29 0907  
          ?_USART_WriteString 0038              __size_of_sprintf 02A1            i1___lwdiv@dividend 0072  
               __size_of_main 0155           USART_WriteChar@byte 0037           ??_USART_WriteString 003A  
      i1USART_WriteString@str 0071                    _LCD_Cursor 08F1      __size_of_LCD_WriteString 0025  
          i1___lwdiv@quotient 0075                   _TIMER0_Init 0883                    _INTCONbits 000B  
   __end_of_USART_WriteString 0A0C                      max_val@a 0070                      max_val@b 0072  
                    isdigit@c 0038                      intlevel1 0000                     sprintf@ap 0190  
                   sprintf@sp 0199              ___lwmod@dividend 00DC                     stringcode 100A  
                _tip_gorgeous 00C4          USART_WriteString@str 0038                    _TIMER0_Set 0865  
                    trapmf@ua 007C               _USART_WriteChar 0873                      sprintf@c 019A  
                    sprintf@f 00DE               ___lwmod@divisor 00DA               ___lwmod@counter 0040  
                 _tip_average 00C2                      stringtab 1000                  ___aldiv@sign 00DB  
      __size_of_LCD_WriteData 000F  __size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091  
       i1PWM_DutyCycle2@valor 0020                    _SSPCONbits 0014                    _USART_Init 0B1C  
