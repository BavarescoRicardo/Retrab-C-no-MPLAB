

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 15:23:06 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK0
   603  07FE                     __pidataBANK0:	
   604                           
   605                           ;initializer for _pas_cooler
   606  07FE  3407               	retlw	7
   607  07FF  3400               	retlw	0
   608                           
   609                           	psect	idataBANK1
   610  11E6                     __pidataBANK1:	
   611                           
   612                           ;initializer for _setpoint
   613  11E6  3400               	retlw	0
   614  11E7  34A0               	retlw	160
   615  11E8  3441               	retlw	65
   616                           
   617                           	psect	strings
   618  0800                     __pstrings:	
   619  0800                     stringtab:	
   620  0800                     __stringtab:	
   621                           
   622                           ;	String table - string pointers are 1 byte each
   623  0800  1BFF               	btfsc	btemp+1,7
   624  0801  280A               	ljmp	stringcode
   625  0802  1383               	bcf	3,7
   626  0803  187F               	btfsc	btemp+1,0
   627  0804  1783               	bsf	3,7
   628  0805  0800               	movf	0,w
   629  0806  0A84               	incf	4,f
   630  0807  1903               	skipnz
   631  0808  0AFF               	incf	btemp+1,f
   632  0809  0008               	return
   633  080A                     stringcode:	
   634  080A                     stringdir:	
   635  080A  3008               	movlw	high stringdir
   636  080B  008A               	movwf	10
   637  080C  0804               	movf	4,w
   638  080D  0A84               	incf	4,f
   639  080E  0782               	addwf	2,f
   640  080F                     __stringbase:	
   641  080F  3400               	retlw	0
   642  0810                     __end_of__stringtab:	
   643  0810                     _dpowers:	
   644  0810  3401               	retlw	1
   645  0811  3400               	retlw	0
   646  0812  340A               	retlw	10
   647  0813  3400               	retlw	0
   648  0814  3464               	retlw	100
   649  0815  3400               	retlw	0
   650  0816  34E8               	retlw	232
   651  0817  3403               	retlw	3
   652  0818  3410               	retlw	16
   653  0819  3427               	retlw	39
   654  081A                     __end_of_dpowers:	
   655  000E                     _TMR1	set	14
   656  001F                     _ADCON0bits	set	31
   657  001E                     _ADRESH	set	30
   658  0017                     _CCP1CON	set	23
   659  0017                     _CCP1CONbits	set	23
   660  001D                     _CCP2CON	set	29
   661  001D                     _CCP2CONbits	set	29
   662  0015                     _CCPR1L	set	21
   663  001B                     _CCPR2L	set	27
   664  000B                     _INTCONbits	set	11
   665  000C                     _PIR1bits	set	12
   666  000D                     _PIR2bits	set	13
   667  0005                     _PORTA	set	5
   668  0006                     _PORTB	set	6
   669  0006                     _PORTBbits	set	6
   670  0007                     _PORTC	set	7
   671  0008                     _PORTD	set	8
   672  0009                     _PORTE	set	9
   673  0009                     _PORTEbits	set	9
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  0013                     _SSPBUF	set	19
   677  0014                     _SSPCONbits	set	20
   678  0010                     _T1CON	set	16
   679  0010                     _T1CONbits	set	16
   680  0012                     _T2CONbits	set	18
   681  0001                     _TMR0	set	1
   682  000F                     _TMR1H	set	15
   683  000E                     _TMR1L	set	14
   684  0019                     _TXREG	set	25
   685  00C1                     _OERR	set	193
   686  009F                     _ADCON1bits	set	159
   687  009E                     _ADRESL	set	158
   688  0081                     _OPTION_REGbits	set	129
   689  008C                     _PIE1bits	set	140
   690  008D                     _PIE2bits	set	141
   691  0092                     _PR2	set	146
   692  0099                     _SPBRG	set	153
   693  0093                     _SSPADD	set	147
   694  0091                     _SSPCON2	set	145
   695  0091                     _SSPCON2bits	set	145
   696  0094                     _SSPSTATbits	set	148
   697  0085                     _TRISA	set	133
   698  0086                     _TRISB	set	134
   699  0087                     _TRISC	set	135
   700  0088                     _TRISD	set	136
   701  0089                     _TRISE	set	137
   702  0098                     _TXSTAbits	set	152
   703  010D                     _EEADR	set	269
   704  010C                     _EEDATA	set	268
   705  018C                     _EECON1bits	set	396
   706  018D                     _EECON2	set	397
   707  081A                     __stringdata:	
   708  081A                     STR_19:	
   709  081A  340A               	retlw	10
   710  081B  340D               	retlw	13
   711  081C  3420               	retlw	32	;' '
   712  081D  342D               	retlw	45	;'-'
   713  081E  342D               	retlw	45	;'-'
   714  081F  342D               	retlw	45	;'-'
   715  0820  342D               	retlw	45	;'-'
   716  0821  342D               	retlw	45	;'-'
   717  0822  342D               	retlw	45	;'-'
   718  0823  342D               	retlw	45	;'-'
   719  0824  3420               	retlw	32	;' '
   720  0825  3445               	retlw	69	;'E'
   721  0826  3453               	retlw	83	;'S'
   722  0827  3454               	retlw	84	;'T'
   723  0828  344F               	retlw	79	;'O'
   724  0829  3455               	retlw	85	;'U'
   725  082A  3452               	retlw	82	;'R'
   726  082B  344F               	retlw	79	;'O'
   727  082C  3420               	retlw	32	;' '
   728  082D  3444               	retlw	68	;'D'
   729  082E  3445               	retlw	69	;'E'
   730  082F  3420               	retlw	32	;' '
   731  0830  3450               	retlw	80	;'P'
   732  0831  3449               	retlw	73	;'I'
   733  0832  344C               	retlw	76	;'L'
   734  0833  3448               	retlw	72	;'H'
   735  0834  3441               	retlw	65	;'A'
   736  0835  3420               	retlw	32	;' '
   737  0836  342D               	retlw	45	;'-'
   738  0837  342D               	retlw	45	;'-'
   739  0838  342D               	retlw	45	;'-'
   740  0839  342D               	retlw	45	;'-'
   741  083A  342D               	retlw	45	;'-'
   742  083B  342D               	retlw	45	;'-'
   743  083C  342D               	retlw	45	;'-'
   744  083D  3420               	retlw	32	;' '
   745  083E  340A               	retlw	10
   746  083F  340D               	retlw	13
   747  0840  3420               	retlw	32	;' '
   748  0841  3400               	retlw	0
   749  0842                     STR_11:	
   750  0842  3449               	retlw	73	;'I'
   751  0843  346E               	retlw	110	;'n'
   752  0844  3469               	retlw	105	;'i'
   753  0845  3463               	retlw	99	;'c'
   754  0846  3469               	retlw	105	;'i'
   755  0847  3461               	retlw	97	;'a'
   756  0848  346C               	retlw	108	;'l'
   757  0849  3469               	retlw	105	;'i'
   758  084A  347A               	retlw	122	;'z'
   759  084B  3461               	retlw	97	;'a'
   760  084C  346E               	retlw	110	;'n'
   761  084D  3464               	retlw	100	;'d'
   762  084E  346F               	retlw	111	;'o'
   763  084F  3420               	retlw	32	;' '
   764  0850  346F               	retlw	111	;'o'
   765  0851  3420               	retlw	32	;' '
   766  0852  3450               	retlw	80	;'P'
   767  0853  3449               	retlw	73	;'I'
   768  0854  3443               	retlw	67	;'C'
   769  0855  3431               	retlw	49	;'1'
   770  0856  3436               	retlw	54	;'6'
   771  0857  3446               	retlw	70	;'F'
   772  0858  3438               	retlw	56	;'8'
   773  0859  3437               	retlw	55	;'7'
   774  085A  3437               	retlw	55	;'7'
   775  085B  3441               	retlw	65	;'A'
   776  085C  340A               	retlw	10
   777  085D  340D               	retlw	13
   778  085E  3400               	retlw	0
   779  085F                     STR_12:	
   780  085F  3455               	retlw	85	;'U'
   781  0860  3453               	retlw	83	;'S'
   782  0861  3441               	retlw	65	;'A'
   783  0862  3452               	retlw	82	;'R'
   784  0863  3454               	retlw	84	;'T'
   785  0864  343A               	retlw	58	;':'
   786  0865  3420               	retlw	32	;' '
   787  0866  3431               	retlw	49	;'1'
   788  0867  3431               	retlw	49	;'1'
   789  0868  3435               	retlw	53	;'5'
   790  0869  342E               	retlw	46	;'.'
   791  086A  3432               	retlw	50	;'2'
   792  086B  3430               	retlw	48	;'0'
   793  086C  3430               	retlw	48	;'0'
   794  086D  3462               	retlw	98	;'b'
   795  086E  3470               	retlw	112	;'p'
   796  086F  3473               	retlw	115	;'s'
   797  0870  340A               	retlw	10
   798  0871  340D               	retlw	13
   799  0872  3400               	retlw	0
   800  0873                     STR_13:	
   801  0873  3449               	retlw	73	;'I'
   802  0874  346E               	retlw	110	;'n'
   803  0875  3469               	retlw	105	;'i'
   804  0876  3463               	retlw	99	;'c'
   805  0877  3469               	retlw	105	;'i'
   806  0878  3461               	retlw	97	;'a'
   807  0879  346C               	retlw	108	;'l'
   808  087A  3469               	retlw	105	;'i'
   809  087B  347A               	retlw	122	;'z'
   810  087C  3461               	retlw	97	;'a'
   811  087D  346E               	retlw	110	;'n'
   812  087E  3464               	retlw	100	;'d'
   813  087F  346F               	retlw	111	;'o'
   814  0880  342E               	retlw	46	;'.'
   815  0881  342E               	retlw	46	;'.'
   816  0882  342E               	retlw	46	;'.'
   817  0883  3400               	retlw	0
   818  0884                     STR_10:	
   819  0884  340A               	retlw	10
   820  0885  340D               	retlw	13
   821  0886  3470               	retlw	112	;'p'
   822  0887  3477               	retlw	119	;'w'
   823  0888  346D               	retlw	109	;'m'
   824  0889  3420               	retlw	32	;' '
   825  088A  343D               	retlw	61	;'='
   826  088B  3420               	retlw	32	;' '
   827  088C  3431               	retlw	49	;'1'
   828  088D  3430               	retlw	48	;'0'
   829  088E  3432               	retlw	50	;'2'
   830  088F  3433               	retlw	51	;'3'
   831  0890  340A               	retlw	10
   832  0891  340D               	retlw	13
   833  0892  3400               	retlw	0
   834  0893                     STR_8:	
   835  0893  340A               	retlw	10
   836  0894  340D               	retlw	13
   837  0895  3470               	retlw	112	;'p'
   838  0896  3477               	retlw	119	;'w'
   839  0897  346D               	retlw	109	;'m'
   840  0898  3420               	retlw	32	;' '
   841  0899  343D               	retlw	61	;'='
   842  089A  3420               	retlw	32	;' '
   843  089B  3438               	retlw	56	;'8'
   844  089C  3439               	retlw	57	;'9'
   845  089D  3436               	retlw	54	;'6'
   846  089E  340A               	retlw	10
   847  089F  340D               	retlw	13
   848  08A0  3400               	retlw	0
   849  08A1                     STR_7:	
   850  08A1  340A               	retlw	10
   851  08A2  340D               	retlw	13
   852  08A3  3470               	retlw	112	;'p'
   853  08A4  3477               	retlw	119	;'w'
   854  08A5  346D               	retlw	109	;'m'
   855  08A6  3420               	retlw	32	;' '
   856  08A7  343D               	retlw	61	;'='
   857  08A8  3420               	retlw	32	;' '
   858  08A9  3437               	retlw	55	;'7'
   859  08AA  3436               	retlw	54	;'6'
   860  08AB  3438               	retlw	56	;'8'
   861  08AC  340A               	retlw	10
   862  08AD  340D               	retlw	13
   863  08AE  3400               	retlw	0
   864  08AF                     STR_1:	
   865  08AF  340A               	retlw	10
   866  08B0  340D               	retlw	13
   867  08B1  3464               	retlw	100	;'d'
   868  08B2  3465               	retlw	101	;'e'
   869  08B3  3473               	retlw	115	;'s'
   870  08B4  346C               	retlw	108	;'l'
   871  08B5  3469               	retlw	105	;'i'
   872  08B6  3467               	retlw	103	;'g'
   873  08B7  3461               	retlw	97	;'a'
   874  08B8  3464               	retlw	100	;'d'
   875  08B9  346F               	retlw	111	;'o'
   876  08BA  340A               	retlw	10
   877  08BB  340D               	retlw	13
   878  08BC  3400               	retlw	0
   879  08BD                     STR_2:	
   880  08BD  340A               	retlw	10
   881  08BE  340D               	retlw	13
   882  08BF  3470               	retlw	112	;'p'
   883  08C0  3477               	retlw	119	;'w'
   884  08C1  346D               	retlw	109	;'m'
   885  08C2  3420               	retlw	32	;' '
   886  08C3  343D               	retlw	61	;'='
   887  08C4  3420               	retlw	32	;' '
   888  08C5  340A               	retlw	10
   889  08C6  340D               	retlw	13
   890  08C7  3400               	retlw	0
   891  08C8                     STR_18:	
   892  08C8  3444               	retlw	68	;'D'
   893  08C9  3465               	retlw	101	;'e'
   894  08CA  346C               	retlw	108	;'l'
   895  08CB  3474               	retlw	116	;'t'
   896  08CC  3461               	retlw	97	;'a'
   897  08CD  343A               	retlw	58	;':'
   898  08CE  3420               	retlw	32	;' '
   899  08CF  3400               	retlw	0
   900  08D0                     STR_17:	
   901  08D0  3452               	retlw	82	;'R'
   902  08D1  3450               	retlw	80	;'P'
   903  08D2  344D               	retlw	77	;'M'
   904  08D3  343A               	retlw	58	;':'
   905  08D4  3420               	retlw	32	;' '
   906  08D5  3400               	retlw	0
   907  08D6                     STR_14:	
   908  08D6  3425               	retlw	37	;'%'
   909  08D7  3430               	retlw	48	;'0'
   910  08D8  3434               	retlw	52	;'4'
   911  08D9  3464               	retlw	100	;'d'
   912  08DA  3400               	retlw	0
   913  08DB                     __end_of__stringdata:	
   914                           
   915                           ; #config settings
   916  0000                     
   917                           	psect	cinit
   918  0015                     start_initialization:	
   919  0015                     __initialization:	
   920                           
   921                           ; Clear objects allocated to BANK0
   922  0015  1383               	bcf	3,7	;select IRP bank0
   923  0016  3061               	movlw	low __pbssBANK0
   924  0017  0084               	movwf	4
   925  0018  306E               	movlw	low (__pbssBANK0+13)
   926  0019  160A  118A  2207  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to BANK1
   929  001E  30A0               	movlw	low __pbssBANK1
   930  001F  0084               	movwf	4
   931  0020  30CA               	movlw	low (__pbssBANK1+42)
   932  0021  160A  118A  2207  120A  118A  	fcall	clear_ram0
   933                           
   934                           ; Clear objects allocated to BANK3
   935  0026  1783               	bsf	3,7	;select IRP bank2
   936  0027  3090               	movlw	low __pbssBANK3
   937  0028  0084               	movwf	4
   938  0029  30A7               	movlw	low (__pbssBANK3+23)
   939  002A  160A  118A  2207  120A  118A  	fcall	clear_ram0
   940                           
   941                           ; Initialize objects allocated to BANK1
   942  002F  1683               	bsf	3,5	;RP0=1, select bank1
   943  0030  1303               	bcf	3,6	;RP1=0, select bank1
   944  0031  160A  118A  21E6  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   945  0036  00EC               	movwf	__pdataBANK1& (0+127)
   946  0037  160A  118A  21E7  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   947  003C  00ED               	movwf	(__pdataBANK1+1)& (0+127)
   948  003D  160A  118A  21E8  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   949  0042  00EE               	movwf	(__pdataBANK1+2)& (0+127)
   950                           
   951                           ; Initialize objects allocated to BANK0
   952  0043  1283               	bcf	3,5	;RP0=0, select bank0
   953  0044  1303               	bcf	3,6	;RP1=0, select bank0
   954  0045  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   955  004A  00EE               	movwf	__pdataBANK0& (0+127)
   956  004B  120A  118A  27FF   	fcall	__pidataBANK0+1	;fetch initializer
   957  004E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   958  004F                     end_of_initialization:	
   959                           ;End of C runtime variable initialization code
   960                           
   961  004F                     __end_of__initialization:	
   962  004F  0183               	clrf	3
   963  0050  120A  158A  2D14   	ljmp	_main	;jump to C main() function
   964                           
   965                           	psect	bssBANK0
   966  0061                     __pbssBANK0:	
   967  0061                     _temp:	
   968  0061                     	ds	3
   969  0064                     _x:	
   970  0064                     	ds	3
   971  0067                     _y:	
   972  0067                     	ds	3
   973  006A                     _deltaV:	
   974  006A                     	ds	2
   975  006C                     _pwm:	
   976  006C                     	ds	2
   977                           
   978                           	psect	dataBANK0
   979  006E                     __pdataBANK0:	
   980  006E                     _pas_cooler:	
   981  006E                     	ds	2
   982                           
   983                           	psect	bssBANK1
   984  00A0                     __pbssBANK1:	
   985  00A0                     _ativa_fan:	
   986  00A0                     	ds	3
   987  00A3                     _fitemp:	
   988  00A3                     	ds	3
   989  00A6                     _fop_rule1:	
   990  00A6                     	ds	3
   991  00A9                     _fop_rule2:	
   992  00A9                     	ds	3
   993  00AC                     _fop_rule3:	
   994  00AC                     	ds	3
   995  00AF                     _sum:	
   996  00AF                     	ds	3
   997  00B2                     _tf:	
   998  00B2                     	ds	3
   999  00B5                     _total_area:	
  1000  00B5                     	ds	3
  1001  00B8                     _ADCResult:	
  1002  00B8                     	ds	2
  1003  00BA                     _contador_rb6:	
  1004  00BA                     	ds	2
  1005  00BC                     _contagens_tm0:	
  1006  00BC                     	ds	2
  1007  00BE                     _pulsos:	
  1008  00BE                     	ds	2
  1009  00C0                     _rpm:	
  1010  00C0                     	ds	2
  1011  00C2                     _setpointUI:	
  1012  00C2                     	ds	2
  1013  00C4                     _status:	
  1014  00C4                     	ds	2
  1015  00C6                     _temp_lida:	
  1016  00C6                     	ds	2
  1017  00C8                     _tempo_rb6:	
  1018  00C8                     	ds	2
  1019                           
  1020                           	psect	dataBANK1
  1021  00EC                     __pdataBANK1:	
  1022  00EC                     _setpoint:	
  1023  00EC                     	ds	3
  1024                           
  1025                           	psect	bssBANK3
  1026  0190                     __pbssBANK3:	
  1027  0190                     _derro:	
  1028  0190                     	ds	3
  1029  0193                     _display_pwm:	
  1030  0193                     	ds	10
  1031  019D                     _display_rpm:	
  1032  019D                     	ds	10
  1033                           
  1034                           	psect	clrtext
  1035  1207                     clear_ram0:	
  1036                           ;	Called with FSR containing the base address, and
  1037                           ;	W with the last address+1
  1038                           
  1039  1207  0064               	clrwdt	;clear the watchdog before getting into this loop
  1040  1208                     clrloop0:	
  1041  1208  0180               	clrf	0	;clear RAM location pointed to by FSR
  1042  1209  0A84               	incf	4,f	;increment pointer
  1043  120A  0604               	xorwf	4,w	;XOR with final address
  1044  120B  1903               	btfsc	3,2	;have we reached the end yet?
  1045  120C  3400               	retlw	0	;all done for this memory range, return
  1046  120D  0604               	xorwf	4,w	;XOR again to restore value
  1047  120E  2A08               	goto	clrloop0	;do the next byte
  1048                           
  1049                           	psect	cstackBANK1
  1050  00CA                     __pcstackBANK1:	
  1051  00CA                     ?_PWM_DutyCycle2:	
  1052  00CA                     ??_TIMER0_Set:	
  1053                           ; 0 bytes @ 0x0
  1054                           
  1055  00CA                     ??_TIMER0_Init:	
  1056                           ; 0 bytes @ 0x0
  1057                           
  1058  00CA                     ??_ADC_Init:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  00CA                     ??_PWM_Init:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  00CA                     ?_LCD_Cursor:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  00CA                     ?_PWM_DutyCycle1:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  00CA                     ??_isdigit:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  00CA                     ??_USART_WriteChar:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  00CA                     ??_LCD_WriteCmd:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  00CA                     ??_LCD_WriteData:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  00CA                     ?___wmul:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  00CA                     ?___lwdiv:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088  00CA                     ?___aldiv:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091  00CA                     USART_WriteChar@byte:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  00CA                     TIMER0_Set@contagens:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  00CA                     LCD_Cursor@Col:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  00CA                     _isdigit$1449:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  00CA                     PWM_DutyCycle1@valor:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  00CA                     PWM_DutyCycle2@valor:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109  00CA                     ___wmul@multiplier:	
  1110                           ; 2 bytes @ 0x0
  1111                           
  1112  00CA                     ___lwdiv@divisor:	
  1113                           ; 2 bytes @ 0x0
  1114                           
  1115  00CA                     ___aldiv@divisor:	
  1116                           ; 2 bytes @ 0x0
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x0
  1120  00CA                     	ds	1
  1121  00CB                     ?_USART_WriteString:	
  1122  00CB                     ??_LCD_Cursor:	
  1123                           ; 0 bytes @ 0x1
  1124                           
  1125  00CB                     LCD_WriteCmd@Byte:	
  1126                           ; 0 bytes @ 0x1
  1127                           
  1128  00CB                     LCD_WriteData@Byte:	
  1129                           ; 1 bytes @ 0x1
  1130                           
  1131  00CB                     isdigit@c:	
  1132                           ; 1 bytes @ 0x1
  1133                           
  1134  00CB                     USART_WriteString@str:	
  1135                           ; 1 bytes @ 0x1
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0x1
  1139  00CB                     	ds	1
  1140  00CC                     ??_PWM_DutyCycle2:	
  1141  00CC                     ??_LCD_Init:	
  1142                           ; 0 bytes @ 0x2
  1143                           
  1144  00CC                     ?_LCD_WriteString:	
  1145                           ; 0 bytes @ 0x2
  1146                           
  1147  00CC                     ??_PWM_DutyCycle1:	
  1148                           ; 0 bytes @ 0x2
  1149                           
  1150  00CC                     ??_LCD_Clear:	
  1151                           ; 0 bytes @ 0x2
  1152                           
  1153  00CC                     LCD_Cursor@Row:	
  1154                           ; 0 bytes @ 0x2
  1155                           
  1156  00CC                     LCD_WriteString@Str:	
  1157                           ; 1 bytes @ 0x2
  1158                           
  1159  00CC                     ___wmul@multiplicand:	
  1160                           ; 2 bytes @ 0x2
  1161                           
  1162  00CC                     ___lwdiv@dividend:	
  1163                           ; 2 bytes @ 0x2
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x2
  1167  00CC                     	ds	1
  1168  00CD                     ??_USART_WriteString:	
  1169                           
  1170                           ; 0 bytes @ 0x3
  1171  00CD                     	ds	1
  1172  00CE                     ??_LCD_WriteString:	
  1173  00CE                     ??___wmul:	
  1174                           ; 0 bytes @ 0x4
  1175                           
  1176  00CE                     ??___lwdiv:	
  1177                           ; 0 bytes @ 0x4
  1178                           
  1179  00CE                     ___wmul@product:	
  1180                           ; 0 bytes @ 0x4
  1181                           
  1182  00CE                     ___aldiv@dividend:	
  1183                           ; 2 bytes @ 0x4
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x4
  1187  00CE                     	ds	1
  1188  00CF                     ___lwdiv@quotient:	
  1189                           
  1190                           ; 2 bytes @ 0x5
  1191  00CF                     	ds	2
  1192  00D1                     ___lwdiv@counter:	
  1193                           
  1194                           ; 1 bytes @ 0x7
  1195  00D1                     	ds	1
  1196  00D2                     ??___aldiv:	
  1197  00D2                     ?___lwmod:	
  1198                           ; 0 bytes @ 0x8
  1199                           
  1200  00D2                     ___lwmod@divisor:	
  1201                           ; 2 bytes @ 0x8
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x8
  1205  00D2                     	ds	1
  1206  00D3                     ___aldiv@counter:	
  1207                           
  1208                           ; 1 bytes @ 0x9
  1209  00D3                     	ds	1
  1210  00D4                     ___aldiv@sign:	
  1211  00D4                     ___lwmod@dividend:	
  1212                           ; 1 bytes @ 0xA
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0xA
  1216  00D4                     	ds	1
  1217  00D5                     ___aldiv@quotient:	
  1218                           
  1219                           ; 4 bytes @ 0xB
  1220  00D5                     	ds	1
  1221  00D6                     ??___lwmod:	
  1222                           
  1223                           ; 0 bytes @ 0xC
  1224  00D6                     	ds	1
  1225  00D7                     ___lwmod@counter:	
  1226                           
  1227                           ; 1 bytes @ 0xD
  1228  00D7                     	ds	1
  1229  00D8                     ?_sprintf:	
  1230  00D8                     sprintf@f:	
  1231                           ; 2 bytes @ 0xE
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0xE
  1235  00D8                     	ds	1
  1236  00D9                     ?_USART_Init:	
  1237  00D9                     USART_Init@BaudRate:	
  1238                           ; 0 bytes @ 0xF
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0xF
  1242  00D9                     	ds	2
  1243  00DB                     ??_sprintf:	
  1244                           
  1245                           ; 0 bytes @ 0x11
  1246  00DB                     	ds	2
  1247  00DD                     ??_USART_Init:	
  1248                           
  1249                           ; 0 bytes @ 0x13
  1250  00DD                     	ds	1
  1251  00DE                     sprintf@ap:	
  1252                           
  1253                           ; 1 bytes @ 0x14
  1254  00DE                     	ds	1
  1255  00DF                     sprintf@prec:	
  1256                           
  1257                           ; 1 bytes @ 0x15
  1258  00DF                     	ds	1
  1259  00E0                     sprintf@_val:	
  1260                           
  1261                           ; 4 bytes @ 0x16
  1262  00E0                     	ds	4
  1263  00E4                     sprintf@flag:	
  1264                           
  1265                           ; 1 bytes @ 0x1A
  1266  00E4                     	ds	1
  1267  00E5                     sprintf@width:	
  1268                           
  1269                           ; 2 bytes @ 0x1B
  1270  00E5                     	ds	2
  1271  00E7                     sprintf@sp:	
  1272                           
  1273                           ; 1 bytes @ 0x1D
  1274  00E7                     	ds	1
  1275  00E8                     sprintf@c:	
  1276                           
  1277                           ; 1 bytes @ 0x1E
  1278  00E8                     	ds	1
  1279  00E9                     ??_main:	
  1280                           
  1281                           ; 0 bytes @ 0x1F
  1282  00E9                     	ds	3
  1283                           
  1284                           	psect	cstackCOMMON
  1285  0070                     __pcstackCOMMON:	
  1286  0070                     ?_TIMER0_Set:	
  1287  0070                     ?_TIMER0_Init:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_ADC_Init:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ?_PWM_Init:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0070                     ?_LCD_Init:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_LCD_Clear:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ?_isdigit:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_Fuzzy:	
  1306                           ; 1 bit 
  1307                           
  1308  0070                     ?_ISR:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_main:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?_USART_WriteChar:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_LCD_WriteCmd:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_LCD_WriteData:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ?___ftge:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_USART_WriteChar:	
  1327                           ; 1 bit 
  1328                           
  1329  0070                     ??i1_USART_WriteChar:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?i1_TIMER0_Set:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ??i1_TIMER0_Set:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?i1_PWM_DutyCycle2:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_USART_ReceiveChar:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?i1___lwdiv:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?___ftpack:	
  1348                           ; 2 bytes @ 0x0
  1349                           
  1350  0070                     ?___ftneg:	
  1351                           ; 3 bytes @ 0x0
  1352                           
  1353  0070                     ?___fttol:	
  1354                           ; 3 bytes @ 0x0
  1355                           
  1356  0070                     i1USART_WriteChar@byte:	
  1357                           ; 4 bytes @ 0x0
  1358                           
  1359  0070                     i1TIMER0_Set@contagens:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     i1PWM_DutyCycle2@valor:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     i1___lwdiv@divisor:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ___ftpack@arg:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0070                     ___ftge@ff1:	
  1372                           ; 3 bytes @ 0x0
  1373                           
  1374  0070                     ___ftneg@f1:	
  1375                           ; 3 bytes @ 0x0
  1376                           
  1377  0070                     ___fttol@f1:	
  1378                           ; 3 bytes @ 0x0
  1379                           
  1380                           
  1381                           ; 3 bytes @ 0x0
  1382  0070                     	ds	1
  1383  0071                     ?i1_USART_WriteString:	
  1384  0071                     i1USART_WriteString@str:	
  1385                           ; 0 bytes @ 0x1
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x1
  1389  0071                     	ds	1
  1390  0072                     ??i1_PWM_DutyCycle2:	
  1391  0072                     i1___lwdiv@dividend:	
  1392                           ; 0 bytes @ 0x2
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x2
  1396  0072                     	ds	1
  1397  0073                     ??_USART_ReceiveChar:	
  1398  0073                     ??___ftneg:	
  1399                           ; 0 bytes @ 0x3
  1400                           
  1401  0073                     ??i1_USART_WriteString:	
  1402                           ; 0 bytes @ 0x3
  1403                           
  1404  0073                     ___ftpack@exp:	
  1405                           ; 0 bytes @ 0x3
  1406                           
  1407  0073                     ___ftge@ff2:	
  1408                           ; 1 bytes @ 0x3
  1409                           
  1410                           
  1411                           ; 3 bytes @ 0x3
  1412  0073                     	ds	1
  1413  0074                     ??___fttol:	
  1414  0074                     ??i1___lwdiv:	
  1415                           ; 0 bytes @ 0x4
  1416                           
  1417  0074                     USART_ReceiveChar@byte:	
  1418                           ; 0 bytes @ 0x4
  1419                           
  1420  0074                     ___ftpack@sign:	
  1421                           ; 1 bytes @ 0x4
  1422                           
  1423                           
  1424                           ; 1 bytes @ 0x4
  1425  0074                     	ds	1
  1426  0075                     ??___ftpack:	
  1427  0075                     i1___lwdiv@quotient:	
  1428                           ; 0 bytes @ 0x5
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x5
  1432  0075                     	ds	1
  1433  0076                     ??___ftge:	
  1434                           
  1435                           ; 0 bytes @ 0x6
  1436  0076                     	ds	1
  1437  0077                     i1___lwdiv@counter:	
  1438                           
  1439                           ; 1 bytes @ 0x7
  1440  0077                     	ds	1
  1441  0078                     ?i1___wmul:	
  1442  0078                     ?___ftadd:	
  1443                           ; 2 bytes @ 0x8
  1444                           
  1445  0078                     ?___lwtoft:	
  1446                           ; 3 bytes @ 0x8
  1447                           
  1448  0078                     ___fttol@sign1:	
  1449                           ; 3 bytes @ 0x8
  1450                           
  1451  0078                     ___lwtoft@c:	
  1452                           ; 1 bytes @ 0x8
  1453                           
  1454  0078                     i1___wmul@multiplier:	
  1455                           ; 2 bytes @ 0x8
  1456                           
  1457  0078                     ___ftadd@f1:	
  1458                           ; 2 bytes @ 0x8
  1459                           
  1460                           
  1461                           ; 3 bytes @ 0x8
  1462  0078                     	ds	1
  1463  0079                     ___fttol@lval:	
  1464                           
  1465                           ; 4 bytes @ 0x9
  1466  0079                     	ds	1
  1467  007A                     i1___wmul@multiplicand:	
  1468                           
  1469                           ; 2 bytes @ 0xA
  1470  007A                     	ds	1
  1471  007B                     ??___lwtoft:	
  1472  007B                     ___ftadd@f2:	
  1473                           ; 0 bytes @ 0xB
  1474                           
  1475                           
  1476                           ; 3 bytes @ 0xB
  1477  007B                     	ds	1
  1478  007C                     ??_max_val:	
  1479  007C                     ??i1___wmul:	
  1480                           ; 0 bytes @ 0xC
  1481                           
  1482  007C                     i1___wmul@product:	
  1483                           ; 0 bytes @ 0xC
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0xC
  1487  007C                     	ds	1
  1488  007D                     ___fttol@exp1:	
  1489                           
  1490                           ; 1 bytes @ 0xD
  1491  007D                     	ds	1
  1492  007E                     ??_trimf:	
  1493  007E                     ??_trapmf:	
  1494                           ; 0 bytes @ 0xE
  1495                           
  1496  007E                     ??_Fuzzy:	
  1497                           ; 0 bytes @ 0xE
  1498                           
  1499                           
  1500                           	psect	cstackBANK0
  1501  0020                     __pcstackBANK0:	
  1502                           ; 0 bytes @ 0xE
  1503                           
  1504  0020                     ??___ftadd:	
  1505  0020                     ?_max_val:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0020                     max_val@a:	
  1509                           ; 3 bytes @ 0x0
  1510                           
  1511                           
  1512                           ; 3 bytes @ 0x0
  1513  0020                     	ds	3
  1514  0023                     max_val@b:	
  1515                           
  1516                           ; 3 bytes @ 0x3
  1517  0023                     	ds	1
  1518  0024                     ___ftadd@sign:	
  1519                           
  1520                           ; 1 bytes @ 0x4
  1521  0024                     	ds	1
  1522  0025                     ___ftadd@exp2:	
  1523                           
  1524                           ; 1 bytes @ 0x5
  1525  0025                     	ds	1
  1526  0026                     ___ftadd@exp1:	
  1527                           
  1528                           ; 1 bytes @ 0x6
  1529  0026                     	ds	1
  1530  0027                     ?___ftdiv:	
  1531  0027                     ___ftdiv@f2:	
  1532                           ; 3 bytes @ 0x7
  1533                           
  1534                           
  1535                           ; 3 bytes @ 0x7
  1536  0027                     	ds	3
  1537  002A                     ___ftdiv@f1:	
  1538                           
  1539                           ; 3 bytes @ 0xA
  1540  002A                     	ds	3
  1541  002D                     ??___ftdiv:	
  1542                           
  1543                           ; 0 bytes @ 0xD
  1544  002D                     	ds	4
  1545  0031                     ___ftdiv@cntr:	
  1546                           
  1547                           ; 1 bytes @ 0x11
  1548  0031                     	ds	1
  1549  0032                     ___ftdiv@f3:	
  1550                           
  1551                           ; 3 bytes @ 0x12
  1552  0032                     	ds	3
  1553  0035                     ___ftdiv@exp:	
  1554                           
  1555                           ; 1 bytes @ 0x15
  1556  0035                     	ds	1
  1557  0036                     ___ftdiv@sign:	
  1558                           
  1559                           ; 1 bytes @ 0x16
  1560  0036                     	ds	1
  1561  0037                     ?_trimf:	
  1562  0037                     ?_trapmf:	
  1563                           ; 3 bytes @ 0x17
  1564                           
  1565  0037                     ?___ftmul:	
  1566                           ; 3 bytes @ 0x17
  1567                           
  1568  0037                     trimf@x:	
  1569                           ; 3 bytes @ 0x17
  1570                           
  1571  0037                     trapmf@x:	
  1572                           ; 3 bytes @ 0x17
  1573                           
  1574  0037                     ___ftmul@f1:	
  1575                           ; 3 bytes @ 0x17
  1576                           
  1577                           
  1578                           ; 3 bytes @ 0x17
  1579  0037                     	ds	3
  1580  003A                     trimf@a:	
  1581  003A                     trapmf@a:	
  1582                           ; 3 bytes @ 0x1A
  1583                           
  1584  003A                     ___ftmul@f2:	
  1585                           ; 3 bytes @ 0x1A
  1586                           
  1587                           
  1588                           ; 3 bytes @ 0x1A
  1589  003A                     	ds	3
  1590  003D                     ??___ftmul:	
  1591  003D                     trimf@b:	
  1592                           ; 0 bytes @ 0x1D
  1593                           
  1594  003D                     trapmf@b:	
  1595                           ; 3 bytes @ 0x1D
  1596                           
  1597                           
  1598                           ; 3 bytes @ 0x1D
  1599  003D                     	ds	3
  1600  0040                     trimf@c:	
  1601  0040                     trapmf@c:	
  1602                           ; 3 bytes @ 0x20
  1603                           
  1604                           
  1605                           ; 3 bytes @ 0x20
  1606  0040                     	ds	1
  1607  0041                     ___ftmul@exp:	
  1608                           
  1609                           ; 1 bytes @ 0x21
  1610  0041                     	ds	1
  1611  0042                     ___ftmul@f3_as_product:	
  1612                           
  1613                           ; 3 bytes @ 0x22
  1614  0042                     	ds	1
  1615  0043                     trimf@ua:	
  1616  0043                     trapmf@d:	
  1617                           ; 3 bytes @ 0x23
  1618                           
  1619                           
  1620                           ; 3 bytes @ 0x23
  1621  0043                     	ds	2
  1622  0045                     ___ftmul@cntr:	
  1623                           
  1624                           ; 1 bytes @ 0x25
  1625  0045                     	ds	1
  1626  0046                     ___ftmul@sign:	
  1627  0046                     trapmf@ua:	
  1628                           ; 1 bytes @ 0x26
  1629                           
  1630                           
  1631                           ; 3 bytes @ 0x26
  1632  0046                     	ds	3
  1633  0049                     Fuzzy@tip:	
  1634                           
  1635                           ; 3 bytes @ 0x29
  1636  0049                     	ds	3
  1637  004C                     Fuzzy@a:	
  1638                           
  1639                           ; 2 bytes @ 0x2C
  1640  004C                     	ds	2
  1641  004E                     Fuzzy@a_233:	
  1642                           
  1643                           ; 2 bytes @ 0x2E
  1644  004E                     	ds	2
  1645  0050                     Fuzzy@a_234:	
  1646                           
  1647                           ; 2 bytes @ 0x30
  1648  0050                     	ds	2
  1649  0052                     Fuzzy@a_235:	
  1650                           
  1651                           ; 2 bytes @ 0x32
  1652  0052                     	ds	2
  1653  0054                     Fuzzy@mantem:	
  1654                           
  1655                           ; 3 bytes @ 0x34
  1656  0054                     	ds	3
  1657  0057                     Fuzzy@reduz:	
  1658                           
  1659                           ; 3 bytes @ 0x37
  1660  0057                     	ds	3
  1661  005A                     Fuzzy@aumenta:	
  1662                           
  1663                           ; 3 bytes @ 0x3A
  1664  005A                     	ds	3
  1665  005D                     ??_ISR:	
  1666                           
  1667                           ; 0 bytes @ 0x3D
  1668  005D                     	ds	4
  1669                           
  1670                           	psect	maintext
  1671  0D14                     __pmaintext:	
  1672 ;;
  1673 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1674 ;;
  1675 ;; *************** function _main *****************
  1676 ;; Defined at:
  1677 ;;		line 468 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 17F/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       3       0       0
  1694 ;;      Totals:         0       0       3       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels required when called:    7
  1697 ;; This function calls:
  1698 ;;		_ADC_Init
  1699 ;;		_LCD_Clear
  1700 ;;		_LCD_Cursor
  1701 ;;		_LCD_Init
  1702 ;;		_LCD_WriteString
  1703 ;;		_PWM_DutyCycle1
  1704 ;;		_PWM_DutyCycle2
  1705 ;;		_PWM_Init
  1706 ;;		_TIMER0_Init
  1707 ;;		_TIMER0_Set
  1708 ;;		_USART_Init
  1709 ;;		_USART_WriteString
  1710 ;;		_sprintf
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _main
  1718  0D14                     _main:	
  1719                           
  1720                           ;main.c: 470: TRISA = 0b00000001;
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1724  0D14  3001               	movlw	1
  1725  0D15  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0D16  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0D17  0085               	movwf	5	;volatile
  1728                           
  1729                           ;main.c: 471: PORTA = 0b00000001;
  1730  0D18  3001               	movlw	1
  1731  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0D1B  0085               	movwf	5	;volatile
  1734                           
  1735                           ;main.c: 472: TRISB = 0b00000000;
  1736  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0D1E  0186               	clrf	6	;volatile
  1739                           
  1740                           ;main.c: 473: PORTB = 0b00000000;
  1741  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0D21  0186               	clrf	6	;volatile
  1744                           
  1745                           ;main.c: 474: TRISC = 0b10000001;
  1746  0D22  3081               	movlw	129
  1747  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0D24  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0D25  0087               	movwf	7	;volatile
  1750                           
  1751                           ;main.c: 475: PORTC = 0b11000000;
  1752  0D26  30C0               	movlw	192
  1753  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0D29  0087               	movwf	7	;volatile
  1756                           
  1757                           ;main.c: 476: TRISD = 0b00000000;
  1758  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0D2C  0188               	clrf	8	;volatile
  1761                           
  1762                           ;main.c: 477: PORTD = 0b00000000;
  1763  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0D2F  0188               	clrf	8	;volatile
  1766                           
  1767                           ;main.c: 478: TRISE = 0b00000000;
  1768  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0D32  0189               	clrf	9	;volatile
  1771                           
  1772                           ;main.c: 479: PORTE = 0b00000000;
  1773  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0D35  0189               	clrf	9	;volatile
  1776                           
  1777                           ;main.c: 482: T1CON = 0x03;
  1778  0D36  3003               	movlw	3
  1779  0D37  0090               	movwf	16	;volatile
  1780                           
  1781                           ;main.c: 483: TMR1L = 0x00;
  1782  0D38  018E               	clrf	14	;volatile
  1783                           
  1784                           ;main.c: 484: TMR1H = 0x00;
  1785  0D39  018F               	clrf	15	;volatile
  1786                           
  1787                           ;main.c: 487: USART_Init(115200);
  1788  0D3A  3000               	movlw	0
  1789  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0D3C  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0D3D  00DC               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1792  0D3E  3001               	movlw	1
  1793  0D3F  00DB               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1794  0D40  30C2               	movlw	194
  1795  0D41  00DA               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1796  0D42  3000               	movlw	0
  1797  0D43  00D9               	movwf	USART_Init@BaudRate^(0+128)
  1798  0D44  160A  118A  2504  120A  158A  	fcall	_USART_Init
  1799                           
  1800                           ;main.c: 488: TIMER0_Init();
  1801  0D49  120A  158A  20DC  120A  158A  	fcall	_TIMER0_Init
  1802                           
  1803                           ;main.c: 489: ADC_Init();
  1804  0D4E  160A  118A  222C  120A  158A  	fcall	_ADC_Init
  1805                           
  1806                           ;main.c: 490: PWM_Init();
  1807  0D53  160A  118A  237C  120A  158A  	fcall	_PWM_Init
  1808                           
  1809                           ;main.c: 491: LCD_Init();
  1810  0D58  120A  118A  2793  120A  158A  	fcall	_LCD_Init
  1811                           
  1812                           ;main.c: 494: INTCONbits.PEIE = 1;
  1813  0D5D  170B               	bsf	11,6	;volatile
  1814                           
  1815                           ;main.c: 495: INTCONbits.GIE = 1;
  1816  0D5E  178B               	bsf	11,7	;volatile
  1817                           
  1818                           ;main.c: 498: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1819  0D5F  3033               	movlw	low (STR_11-__stringbase)
  1820  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0D61  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0D62  00CB               	movwf	USART_WriteString@str^(0+128)
  1823  0D63  3080               	movlw	128
  1824  0D64  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1825  0D65  160A  118A  241F  120A  158A  	fcall	_USART_WriteString
  1826                           
  1827                           ;main.c: 499: USART_WriteString("USART: 115.200bps\n\r");
  1828  0D6A  3050               	movlw	low (STR_12-__stringbase)
  1829  0D6B  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0D6C  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0D6D  00CB               	movwf	USART_WriteString@str^(0+128)
  1832  0D6E  3080               	movlw	128
  1833  0D6F  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1834  0D70  160A  118A  241F  120A  158A  	fcall	_USART_WriteString
  1835                           
  1836                           ;main.c: 502: LCD_Init();
  1837  0D75  120A  118A  2793  120A  158A  	fcall	_LCD_Init
  1838                           
  1839                           ;main.c: 503: LCD_Cursor(0,0);
  1840  0D7A  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0D7B  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0D7C  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1843  0D7D  3000               	movlw	0
  1844  0D7E  160A  118A  22D4  120A  158A  	fcall	_LCD_Cursor
  1845                           
  1846                           ;main.c: 504: LCD_WriteString("Inicializando...");
  1847  0D83  3064               	movlw	low (STR_13-__stringbase)
  1848  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0D86  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1851  0D87  3080               	movlw	128
  1852  0D88  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1853  0D89  160A  118A  23EE  120A  158A  	fcall	_LCD_WriteString
  1854                           
  1855                           ;main.c: 507: PWM_DutyCycle1(0);
  1856  0D8E  3000               	movlw	0
  1857  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0D91  00CA               	movwf	PWM_DutyCycle1@valor^(0+128)
  1860  0D92  3000               	movlw	0
  1861  0D93  00CB               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1862  0D94  160A  118A  22F4  120A  158A  	fcall	_PWM_DutyCycle1
  1863                           
  1864                           ;main.c: 508: PWM_DutyCycle2(0);
  1865  0D99  3000               	movlw	0
  1866  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  1868  0D9C  00CA               	movwf	PWM_DutyCycle2@valor^(0+128)
  1869  0D9D  3000               	movlw	0
  1870  0D9E  00CB               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1871  0D9F  160A  118A  2315  120A  158A  	fcall	_PWM_DutyCycle2
  1872                           
  1873                           ;main.c: 511: TIMER0_Set(238);
  1874  0DA4  30EE               	movlw	238
  1875  0DA5  160A  118A  21FF  120A  158A  	fcall	_TIMER0_Set
  1876                           
  1877                           ;main.c: 514: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1878  0DAA  3018               	movlw	24
  1879  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1880  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1881  0DAD  00EB               	movwf	(??_main^(0+128)+2)
  1882  0DAE  3061               	movlw	97
  1883  0DAF  00EA               	movwf	(??_main^(0+128)+1)
  1884  0DB0  306E               	movlw	110
  1885  0DB1  00E9               	movwf	??_main^(0+128)
  1886  0DB2                     u4107:	
  1887  0DB2  0BE9               	decfsz	??_main^(0+128),f
  1888  0DB3  2DB2               	goto	u4107
  1889  0DB4  0BEA               	decfsz	(??_main^(0+128)+1),f
  1890  0DB5  2DB2               	goto	u4107
  1891  0DB6  0BEB               	decfsz	(??_main^(0+128)+2),f
  1892  0DB7  2DB2               	goto	u4107
  1893  0DB8  0000               	nop
  1894  0DB9                     l202:	
  1895                           ;main.c: 517: while(1)
  1896                           
  1897                           
  1898                           ;main.c: 518: {
  1899                           ;main.c: 522: sprintf(display_rpm,"%04d", rpm);
  1900  0DB9  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1901  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0DBC  00E9               	movwf	??_main^(0+128)
  1904  0DBD  0869               	movf	??_main^(0+128),w
  1905  0DBE  00D8               	movwf	sprintf@f^(0+128)
  1906  0DBF  0841               	movf	(_rpm+1)^(0+128),w
  1907  0DC0  01DA               	clrf	((?_sprintf+1)^(0+128)+1)
  1908  0DC1  07DA               	addwf	((?_sprintf+1)^(0+128)+1),f
  1909  0DC2  0840               	movf	_rpm^(0+128),w
  1910  0DC3  01D9               	clrf	(?_sprintf^(0+128)+1)
  1911  0DC4  07D9               	addwf	(?_sprintf^(0+128)+1),f
  1912  0DC5  309D               	movlw	_display_rpm& (0+255)
  1913  0DC6  120A  118A  25DC  120A  158A  	fcall	_sprintf
  1914                           
  1915                           ;main.c: 523: sprintf(display_pwm,"%04d", deltaV);
  1916  0DCB  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1917  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0DCE  00E9               	movwf	??_main^(0+128)
  1920  0DCF  0869               	movf	??_main^(0+128),w
  1921  0DD0  00D8               	movwf	sprintf@f^(0+128)
  1922  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0DD3  086B               	movf	_deltaV+1,w
  1925  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0DD6  01DA               	clrf	((?_sprintf+1)^(0+128)+1)
  1928  0DD7  07DA               	addwf	((?_sprintf+1)^(0+128)+1),f
  1929  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0DDA  086A               	movf	_deltaV,w
  1932  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0DDD  01D9               	clrf	(?_sprintf^(0+128)+1)
  1935  0DDE  07D9               	addwf	(?_sprintf^(0+128)+1),f
  1936  0DDF  3093               	movlw	_display_pwm& (0+255)
  1937  0DE0  120A  118A  25DC  120A  158A  	fcall	_sprintf
  1938                           
  1939                           ;main.c: 527: USART_WriteString(display_rpm);
  1940  0DE5  309D               	movlw	_display_rpm& (0+255)
  1941  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0DE8  00CB               	movwf	USART_WriteString@str^(0+128)
  1944  0DE9  3001               	movlw	1
  1945  0DEA  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1946  0DEB  160A  118A  241F  120A  158A  	fcall	_USART_WriteString
  1947                           
  1948                           ;main.c: 528: USART_WriteString("\n\r");
  1949  0DF0  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1950  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  1952  0DF3  00CB               	movwf	USART_WriteString@str^(0+128)
  1953  0DF4  3080               	movlw	128
  1954  0DF5  00CC               	movwf	(USART_WriteString@str+1)^(0+128)
  1955  0DF6  160A  118A  241F  120A  158A  	fcall	_USART_WriteString
  1956                           
  1957                           ;main.c: 531: LCD_Clear();
  1958  0DFB  160A  118A  23C5  120A  158A  	fcall	_LCD_Clear
  1959                           
  1960                           ;main.c: 532: LCD_Cursor(0,0);
  1961  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  1962  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  1963  0E02  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1964  0E03  3000               	movlw	0
  1965  0E04  160A  118A  22D4  120A  158A  	fcall	_LCD_Cursor
  1966                           
  1967                           ;main.c: 533: LCD_WriteString("RPM: ");
  1968  0E09  30C1               	movlw	low (STR_17-__stringbase)
  1969  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0E0C  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1972  0E0D  3080               	movlw	128
  1973  0E0E  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1974  0E0F  160A  118A  23EE  120A  158A  	fcall	_LCD_WriteString
  1975                           
  1976                           ;main.c: 534: LCD_Cursor(0,6);
  1977  0E14  3006               	movlw	6
  1978  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0E16  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0E17  00E9               	movwf	??_main^(0+128)
  1981  0E18  0869               	movf	??_main^(0+128),w
  1982  0E19  00CA               	movwf	LCD_Cursor@Col^(0+128)
  1983  0E1A  3000               	movlw	0
  1984  0E1B  160A  118A  22D4  120A  158A  	fcall	_LCD_Cursor
  1985                           
  1986                           ;main.c: 535: LCD_WriteString(display_rpm);
  1987  0E20  309D               	movlw	_display_rpm& (0+255)
  1988  0E21  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0E22  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0E23  00CC               	movwf	LCD_WriteString@Str^(0+128)
  1991  0E24  3001               	movlw	1
  1992  0E25  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1993  0E26  160A  118A  23EE  120A  158A  	fcall	_LCD_WriteString
  1994                           
  1995                           ;main.c: 536: LCD_Cursor(1,0);
  1996  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0E2D  01CA               	clrf	LCD_Cursor@Col^(0+128)
  1999  0E2E  3001               	movlw	1
  2000  0E2F  160A  118A  22D4  120A  158A  	fcall	_LCD_Cursor
  2001                           
  2002                           ;main.c: 537: LCD_WriteString("Delta: ");
  2003  0E34  30B9               	movlw	low (STR_18-__stringbase)
  2004  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0E37  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2007  0E38  3080               	movlw	128
  2008  0E39  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2009  0E3A  160A  118A  23EE  120A  158A  	fcall	_LCD_WriteString
  2010                           
  2011                           ;main.c: 538: LCD_Cursor(1,6);
  2012  0E3F  3006               	movlw	6
  2013  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0E42  00E9               	movwf	??_main^(0+128)
  2016  0E43  0869               	movf	??_main^(0+128),w
  2017  0E44  00CA               	movwf	LCD_Cursor@Col^(0+128)
  2018  0E45  3001               	movlw	1
  2019  0E46  160A  118A  22D4  120A  158A  	fcall	_LCD_Cursor
  2020                           
  2021                           ;main.c: 539: LCD_WriteString(display_pwm);
  2022  0E4B  3093               	movlw	_display_pwm& (0+255)
  2023  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0E4E  00CC               	movwf	LCD_WriteString@Str^(0+128)
  2026  0E4F  3001               	movlw	1
  2027  0E50  00CD               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2028  0E51  160A  118A  23EE  120A  158A  	fcall	_LCD_WriteString
  2029                           
  2030                           ;main.c: 541: _delay((unsigned long)((200)*(18432000/4000.0)));
  2031  0E56  3005               	movlw	5
  2032  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0E59  00EB               	movwf	(??_main^(0+128)+2)
  2035  0E5A  30AD               	movlw	173
  2036  0E5B  00EA               	movwf	(??_main^(0+128)+1)
  2037  0E5C  30E0               	movlw	224
  2038  0E5D  00E9               	movwf	??_main^(0+128)
  2039  0E5E                     u4117:	
  2040  0E5E  0BE9               	decfsz	??_main^(0+128),f
  2041  0E5F  2E5E               	goto	u4117
  2042  0E60  0BEA               	decfsz	(??_main^(0+128)+1),f
  2043  0E61  2E5E               	goto	u4117
  2044  0E62  0BEB               	decfsz	(??_main^(0+128)+2),f
  2045  0E63  2E5E               	goto	u4117
  2046  0E64  2DB9               	goto	l202
  2047  0E65                     __end_of_main:	
  2048                           
  2049                           	psect	text1
  2050  05DC                     __ptext1:	
  2051 ;; *************** function _sprintf *****************
  2052 ;; Defined at:
  2053 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  sp              1    wreg     PTR unsigned char 
  2056 ;;		 -> display_pwm(10), display_rpm(10), 
  2057 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2058 ;;		 -> STR_15(5), STR_14(5), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2061 ;;		 -> display_pwm(10), display_rpm(10), 
  2062 ;;  _val            4   22[BANK1 ] struct .
  2063 ;;  width           2   27[BANK1 ] int 
  2064 ;;  c               1   30[BANK1 ] char 
  2065 ;;  flag            1   26[BANK1 ] unsigned char 
  2066 ;;  prec            1   21[BANK1 ] char 
  2067 ;;  ap              1   20[BANK1 ] PTR void [1]
  2068 ;;		 -> ?_sprintf(2), 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2   14[BANK1 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       3       0       0
  2079 ;;      Locals:         0       0      11       0       0
  2080 ;;      Temps:          0       0       3       0       0
  2081 ;;      Totals:         0       0      17       0       0
  2082 ;;Total ram usage:       17 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    6
  2085 ;; This function calls:
  2086 ;;		___lwdiv
  2087 ;;		___lwmod
  2088 ;;		___wmul
  2089 ;;		_isdigit
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _sprintf
  2097  05DC                     _sprintf:	
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2101                           ;sprintf@sp stored from wreg
  2102  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2103  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2104  05DE  00E7               	movwf	sprintf@sp^(0+128)
  2105                           
  2106                           ;doprnt.c: 494: va_list ap;
  2107                           ;doprnt.c: 499: signed char c;
  2108                           ;doprnt.c: 501: int width;
  2109                           ;doprnt.c: 506: signed char prec;
  2110                           ;doprnt.c: 508: unsigned char flag;
  2111                           ;doprnt.c: 527: union {
  2112                           ;doprnt.c: 528: unsigned int _val;
  2113                           ;doprnt.c: 529: struct {
  2114                           ;doprnt.c: 530: const char * _cp;
  2115                           ;doprnt.c: 531: unsigned _len;
  2116                           ;doprnt.c: 532: } _str;
  2117                           ;doprnt.c: 533: } _val;
  2118                           ;doprnt.c: 542: *ap = __va_start();
  2119  05DF  30D9               	movlw	(?_sprintf+1)& (0+255)
  2120  05E0  00DB               	movwf	??_sprintf^(0+128)
  2121  05E1  085B               	movf	??_sprintf^(0+128),w
  2122  05E2  00DE               	movwf	sprintf@ap^(0+128)
  2123  05E3                     l3110:	
  2124                           ;doprnt.c: 545: while(c = *f++) {
  2125                           
  2126  05E3  3001               	movlw	1
  2127  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2128  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2129  05E6  07D8               	addwf	sprintf@f^(0+128),f
  2130  05E7  30FF               	movlw	-1
  2131  05E8  0758               	addwf	sprintf@f^(0+128),w
  2132  05E9  0084               	movwf	4
  2133  05EA  120A  158A  200A  120A  118A  	fcall	stringdir
  2134  05EF  00DB               	movwf	??_sprintf^(0+128)
  2135  05F0  085B               	movf	??_sprintf^(0+128),w
  2136  05F1  00E8               	movwf	sprintf@c^(0+128)
  2137  05F2  08E8               	movf	sprintf@c^(0+128),f
  2138  05F3  1903               	btfsc	3,2
  2139  05F4  2F8C               	goto	l3112
  2140                           
  2141                           ;doprnt.c: 547: if(c != '%')
  2142  05F5  0868               	movf	sprintf@c^(0+128),w
  2143  05F6  3A25               	xorlw	37
  2144  05F7  1903               	skipnz
  2145  05F8  2E05               	goto	l3014
  2146                           
  2147                           ;doprnt.c: 549: {
  2148                           ;doprnt.c: 550: ((*sp++ = (c)));
  2149  05F9  0868               	movf	sprintf@c^(0+128),w
  2150  05FA  00DB               	movwf	??_sprintf^(0+128)
  2151  05FB  0867               	movf	sprintf@sp^(0+128),w
  2152  05FC  0084               	movwf	4
  2153  05FD  085B               	movf	??_sprintf^(0+128),w
  2154  05FE  1783               	bsf	3,7	;select IRP bank2
  2155  05FF  0080               	movwf	0
  2156  0600  3001               	movlw	1
  2157  0601  00DB               	movwf	??_sprintf^(0+128)
  2158  0602  085B               	movf	??_sprintf^(0+128),w
  2159  0603  07E7               	addwf	sprintf@sp^(0+128),f
  2160                           
  2161                           ;doprnt.c: 551: continue;
  2162  0604  2DE3               	goto	l3110
  2163  0605                     l3014:	
  2164                           
  2165                           ;doprnt.c: 552: }
  2166                           ;doprnt.c: 555: width = 0;
  2167  0605  01E5               	clrf	sprintf@width^(0+128)
  2168  0606  01E6               	clrf	(sprintf@width+1)^(0+128)
  2169                           
  2170                           ;doprnt.c: 557: flag = 0;
  2171  0607  01E4               	clrf	sprintf@flag^(0+128)
  2172                           
  2173                           ;doprnt.c: 560: switch(*f) {
  2174                           
  2175                           ;doprnt.c: 559: for(;;) {
  2176  0608  2E0E               	goto	l3020
  2177  0609                     l479:	
  2178                           ;doprnt.c: 588: case '0':
  2179                           
  2180                           
  2181                           ;doprnt.c: 589: flag |= 0x04;
  2182  0609  1564               	bsf	sprintf@flag^(0+128),2
  2183                           
  2184                           ;doprnt.c: 590: f++;
  2185  060A  3001               	movlw	1
  2186  060B  00DB               	movwf	??_sprintf^(0+128)
  2187  060C  085B               	movf	??_sprintf^(0+128),w
  2188  060D  07D8               	addwf	sprintf@f^(0+128),f
  2189  060E                     l3020:	
  2190                           ;doprnt.c: 593: }
  2191                           
  2192                           ;doprnt.c: 591: continue;
  2193                           
  2194  060E  0858               	movf	sprintf@f^(0+128),w
  2195  060F  0084               	movwf	4
  2196  0610  120A  158A  200A  120A  118A  	fcall	stringdir
  2197                           
  2198                           ; Switch size 1, requested type "space"
  2199                           ; Number of cases is 1, Range of values is 48 to 48
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ; direct_byte           14    11 (fixed)
  2204                           ; jumptable            263     9 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206  0615  3A30               	xorlw	48	; case 48
  2207  0616  1903               	skipnz
  2208  0617  2E09               	goto	l479
  2209  0618  2E19               	goto	l3022
  2210  0619                     l3022:	
  2211                           ;doprnt.c: 595: }
  2212                           
  2213                           ;doprnt.c: 594: break;
  2214                           
  2215                           
  2216                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2217  0619  0858               	movf	sprintf@f^(0+128),w
  2218  061A  0084               	movwf	4
  2219  061B  120A  158A  200A  120A  118A  	fcall	stringdir
  2220  0620  160A  118A  221C  120A  118A  	fcall	_isdigit
  2221  0625  1C03               	btfss	3,0
  2222  0626  2E69               	goto	l3036
  2223                           
  2224                           ;doprnt.c: 607: width = 0;
  2225  0627  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0628  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0629  01E5               	clrf	sprintf@width^(0+128)
  2228  062A  01E6               	clrf	(sprintf@width+1)^(0+128)
  2229  062B                     l3026:	
  2230                           ;doprnt.c: 608: do {
  2231                           
  2232                           
  2233                           ;doprnt.c: 609: width *= 10;
  2234  062B  300A               	movlw	10
  2235  062C  1683               	bsf	3,5	;RP0=1, select bank1
  2236  062D  1303               	bcf	3,6	;RP1=0, select bank1
  2237  062E  00CA               	movwf	___wmul@multiplier^(0+128)
  2238  062F  3000               	movlw	0
  2239  0630  00CB               	movwf	(___wmul@multiplier^(0+128)+1)
  2240  0631  0866               	movf	(sprintf@width+1)^(0+128),w
  2241  0632  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
  2242  0633  07CD               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2243  0634  0865               	movf	sprintf@width^(0+128),w
  2244  0635  01CC               	clrf	___wmul@multiplicand^(0+128)
  2245  0636  07CC               	addwf	___wmul@multiplicand^(0+128),f
  2246  0637  160A  118A  23A0  120A  118A  	fcall	___wmul
  2247  063C  1683               	bsf	3,5	;RP0=1, select bank1
  2248  063D  1303               	bcf	3,6	;RP1=0, select bank1
  2249  063E  084B               	movf	(?___wmul+1)^(0+128),w
  2250  063F  01E6               	clrf	(sprintf@width+1)^(0+128)
  2251  0640  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2252  0641  084A               	movf	?___wmul^(0+128),w
  2253  0642  01E5               	clrf	sprintf@width^(0+128)
  2254  0643  07E5               	addwf	sprintf@width^(0+128),f
  2255                           
  2256                           ;doprnt.c: 610: width += *f++ - '0';
  2257  0644  0858               	movf	sprintf@f^(0+128),w
  2258  0645  0084               	movwf	4
  2259  0646  120A  158A  200A  120A  118A  	fcall	stringdir
  2260  064B  3ED0               	addlw	208
  2261  064C  00DB               	movwf	??_sprintf^(0+128)
  2262  064D  30FF               	movlw	255
  2263  064E  1803               	skipnc
  2264  064F  3000               	movlw	0
  2265  0650  00DC               	movwf	(??_sprintf^(0+128)+1)
  2266  0651  085B               	movf	??_sprintf^(0+128),w
  2267  0652  07E5               	addwf	sprintf@width^(0+128),f
  2268  0653  1803               	skipnc
  2269  0654  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2270  0655  085C               	movf	(??_sprintf+1)^(0+128),w
  2271  0656  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2272  0657  3001               	movlw	1
  2273  0658  00DB               	movwf	??_sprintf^(0+128)
  2274  0659  085B               	movf	??_sprintf^(0+128),w
  2275  065A  07D8               	addwf	sprintf@f^(0+128),f
  2276                           
  2277                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2278  065B  0858               	movf	sprintf@f^(0+128),w
  2279  065C  0084               	movwf	4
  2280  065D  120A  158A  200A  120A  118A  	fcall	stringdir
  2281  0662  160A  118A  221C  120A  118A  	fcall	_isdigit
  2282  0667  1803               	btfsc	3,0
  2283  0668  2E2B               	goto	l3026
  2284  0669                     l3036:	
  2285                           ;doprnt.c: 831: }
  2286                           
  2287                           ;doprnt.c: 822: continue;
  2288                           
  2289                           ;doprnt.c: 811: default:
  2290                           
  2291                           ;doprnt.c: 707: case 'i':
  2292                           ;doprnt.c: 708: break;
  2293                           
  2294                           ;doprnt.c: 706: case 'd':
  2295                           
  2296                           ;doprnt.c: 647: goto alldone;
  2297                           
  2298                           ;doprnt.c: 646: case 0:
  2299                           
  2300                           ;doprnt.c: 617: }
  2301                           ;doprnt.c: 644: switch(c = *f++) {
  2302                           
  2303  0669  3001               	movlw	1
  2304  066A  1683               	bsf	3,5	;RP0=1, select bank1
  2305  066B  1303               	bcf	3,6	;RP1=0, select bank1
  2306  066C  07D8               	addwf	sprintf@f^(0+128),f
  2307  066D  30FF               	movlw	-1
  2308  066E  0758               	addwf	sprintf@f^(0+128),w
  2309  066F  0084               	movwf	4
  2310  0670  120A  158A  200A  120A  118A  	fcall	stringdir
  2311  0675  00E8               	movwf	sprintf@c^(0+128)
  2312                           
  2313                           ; Switch size 1, requested type "space"
  2314                           ; Number of cases is 3, Range of values is 0 to 105
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte           10     6 (average)
  2318                           ; jumptable            260     6 (fixed)
  2319                           ;	Chosen strategy is simple_byte
  2320  0676  3A00               	xorlw	0	; case 0
  2321  0677  1903               	skipnz
  2322  0678  2F8C               	goto	l3112
  2323  0679  3A64               	xorlw	100	; case 100
  2324  067A  1903               	skipnz
  2325  067B  2E80               	goto	l3038
  2326  067C  3A0D               	xorlw	13	; case 105
  2327  067D  1903               	skipnz
  2328  067E  2E80               	goto	l3038
  2329  067F  2DE3               	goto	l3110
  2330  0680                     l3038:	
  2331                           
  2332                           ;doprnt.c: 1262: {
  2333                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2334  0680  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0681  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0682  085E               	movf	sprintf@ap^(0+128),w
  2337  0683  0084               	movwf	4
  2338  0684  1383               	bcf	3,7	;select IRP bank0
  2339  0685  0800               	movf	0,w
  2340  0686  00E0               	movwf	sprintf@_val^(0+128)
  2341  0687  0A84               	incf	4,f
  2342  0688  0800               	movf	0,w
  2343  0689  00E1               	movwf	(sprintf@_val+1)^(0+128)
  2344  068A  3002               	movlw	2
  2345  068B  00DB               	movwf	??_sprintf^(0+128)
  2346  068C  085B               	movf	??_sprintf^(0+128),w
  2347  068D  07DE               	addwf	sprintf@ap^(0+128),f
  2348                           
  2349                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2350  068E  1FE1               	btfss	(sprintf@_val+1)^(0+128),7
  2351  068F  2E99               	goto	l3048
  2352                           
  2353                           ;doprnt.c: 1271: flag |= 0x03;
  2354  0690  3003               	movlw	3
  2355  0691  00DB               	movwf	??_sprintf^(0+128)
  2356  0692  085B               	movf	??_sprintf^(0+128),w
  2357  0693  04E4               	iorwf	sprintf@flag^(0+128),f
  2358                           
  2359                           ;doprnt.c: 1272: _val._val = -_val._val;
  2360  0694  09E0               	comf	sprintf@_val^(0+128),f
  2361  0695  09E1               	comf	(sprintf@_val+1)^(0+128),f
  2362  0696  0AE0               	incf	sprintf@_val^(0+128),f
  2363  0697  1903               	skipnz
  2364  0698  0AE1               	incf	(sprintf@_val+1)^(0+128),f
  2365  0699                     l3048:	
  2366                           
  2367                           ;doprnt.c: 1273: }
  2368                           ;doprnt.c: 1275: }
  2369                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2370  0699  01E8               	clrf	sprintf@c^(0+128)
  2371  069A  0AE8               	incf	sprintf@c^(0+128),f
  2372  069B  0868               	movf	sprintf@c^(0+128),w
  2373  069C  3A05               	xorlw	5
  2374  069D  1903               	btfsc	3,2
  2375  069E  2EC0               	goto	l3060
  2376  069F                     l3052:	
  2377                           
  2378                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2379  069F  0868               	movf	sprintf@c^(0+128),w
  2380  06A0  00DB               	movwf	??_sprintf^(0+128)
  2381  06A1  075B               	addwf	??_sprintf^(0+128),w
  2382  06A2  3E01               	addlw	low (_dpowers-__stringbase)
  2383  06A3  0084               	movwf	4
  2384  06A4  120A  158A  200A  120A  118A  	fcall	stringdir
  2385  06A9  00DC               	movwf	(??_sprintf+1)^(0+128)
  2386  06AA  120A  158A  200A  120A  118A  	fcall	stringdir
  2387  06AF  00DD               	movwf	((??_sprintf+1)^(0+128)+1)
  2388  06B0  085D               	movf	(??_sprintf+2)^(0+128),w
  2389  06B1  0261               	subwf	(sprintf@_val+1)^(0+128),w
  2390  06B2  1D03               	skipz
  2391  06B3  2EB6               	goto	u3675
  2392  06B4  085C               	movf	(??_sprintf+1)^(0+128),w
  2393  06B5  0260               	subwf	sprintf@_val^(0+128),w
  2394  06B6                     u3675:	
  2395  06B6  1C03               	btfss	3,0
  2396  06B7  2EC0               	goto	l3060
  2397                           
  2398                           ;doprnt.c: 1316: break;
  2399  06B8  3001               	movlw	1
  2400  06B9  00DB               	movwf	??_sprintf^(0+128)
  2401  06BA  085B               	movf	??_sprintf^(0+128),w
  2402  06BB  07E8               	addwf	sprintf@c^(0+128),f
  2403  06BC  0868               	movf	sprintf@c^(0+128),w
  2404  06BD  3A05               	xorlw	5
  2405  06BE  1D03               	skipz
  2406  06BF  2E9F               	goto	l3052
  2407  06C0                     l3060:	
  2408                           
  2409                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2410  06C0  0866               	movf	(sprintf@width+1)^(0+128),w
  2411  06C1  0465               	iorwf	sprintf@width^(0+128),w
  2412  06C2  1903               	skipnz
  2413  06C3  2ECE               	goto	l497
  2414  06C4  0864               	movf	sprintf@flag^(0+128),w
  2415  06C5  3903               	andlw	3
  2416  06C6  1903               	btfsc	3,2
  2417  06C7  2ECE               	goto	l497
  2418                           
  2419                           ;doprnt.c: 1355: width--;
  2420  06C8  30FF               	movlw	255
  2421  06C9  07E5               	addwf	sprintf@width^(0+128),f
  2422  06CA  1803               	skipnc
  2423  06CB  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2424  06CC  30FF               	movlw	255
  2425  06CD  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2426  06CE                     l497:	
  2427                           
  2428                           ;doprnt.c: 1390: if(width > c)
  2429  06CE  0868               	movf	sprintf@c^(0+128),w
  2430  06CF  00DB               	movwf	??_sprintf^(0+128)
  2431  06D0  01DC               	clrf	(??_sprintf^(0+128)+1)
  2432  06D1  1BDB               	btfsc	??_sprintf^(0+128),7
  2433  06D2  03DC               	decf	(??_sprintf^(0+128)+1),f
  2434  06D3  085C               	movf	(??_sprintf+1)^(0+128),w
  2435  06D4  3A80               	xorlw	128
  2436  06D5  00DD               	movwf	(??_sprintf+2)^(0+128)
  2437  06D6  0866               	movf	(sprintf@width+1)^(0+128),w
  2438  06D7  3A80               	xorlw	128
  2439  06D8  025D               	subwf	(??_sprintf+2)^(0+128),w
  2440  06D9  1D03               	skipz
  2441  06DA  2EDD               	goto	u3715
  2442  06DB  0865               	movf	sprintf@width^(0+128),w
  2443  06DC  025B               	subwf	??_sprintf^(0+128),w
  2444  06DD                     u3715:	
  2445  06DD  1803               	skipnc
  2446  06DE  2EED               	goto	l3068
  2447                           
  2448                           ;doprnt.c: 1391: width -= c;
  2449  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  2450  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  2451  06E1  0868               	movf	sprintf@c^(0+128),w
  2452  06E2  00DB               	movwf	??_sprintf^(0+128)
  2453  06E3  01DC               	clrf	(??_sprintf^(0+128)+1)
  2454  06E4  1BDB               	btfsc	??_sprintf^(0+128),7
  2455  06E5  03DC               	decf	(??_sprintf^(0+128)+1),f
  2456  06E6  085B               	movf	??_sprintf^(0+128),w
  2457  06E7  02E5               	subwf	sprintf@width^(0+128),f
  2458  06E8  085C               	movf	(??_sprintf+1)^(0+128),w
  2459  06E9  1C03               	skipc
  2460  06EA  03E6               	decf	(sprintf@width+1)^(0+128),f
  2461  06EB  02E6               	subwf	(sprintf@width+1)^(0+128),f
  2462  06EC  2EF1               	goto	l3070
  2463  06ED                     l3068:	
  2464                           
  2465                           ;doprnt.c: 1392: else
  2466                           ;doprnt.c: 1393: width = 0;
  2467  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  2468  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  2469  06EF  01E5               	clrf	sprintf@width^(0+128)
  2470  06F0  01E6               	clrf	(sprintf@width+1)^(0+128)
  2471  06F1                     l3070:	
  2472                           
  2473                           ;doprnt.c: 1396: if(flag & 0x04) {
  2474  06F1  1D64               	btfss	sprintf@flag^(0+128),2
  2475  06F2  2F18               	goto	l3086
  2476                           
  2477                           ;doprnt.c: 1401: if(flag & 0x03)
  2478  06F3  0864               	movf	sprintf@flag^(0+128),w
  2479  06F4  3903               	andlw	3
  2480  06F5  1903               	btfsc	3,2
  2481  06F6  2F02               	goto	l3078
  2482                           
  2483                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2484  06F7  302D               	movlw	45
  2485  06F8  00DB               	movwf	??_sprintf^(0+128)
  2486  06F9  0867               	movf	sprintf@sp^(0+128),w
  2487  06FA  0084               	movwf	4
  2488  06FB  085B               	movf	??_sprintf^(0+128),w
  2489  06FC  1783               	bsf	3,7	;select IRP bank2
  2490  06FD  0080               	movwf	0
  2491  06FE  3001               	movlw	1
  2492  06FF  00DB               	movwf	??_sprintf^(0+128)
  2493  0700  085B               	movf	??_sprintf^(0+128),w
  2494  0701  07E7               	addwf	sprintf@sp^(0+128),f
  2495  0702                     l3078:	
  2496                           
  2497                           ;doprnt.c: 1424: if(width)
  2498  0702  0866               	movf	(sprintf@width+1)^(0+128),w
  2499  0703  0465               	iorwf	sprintf@width^(0+128),w
  2500  0704  1903               	skipnz
  2501  0705  2F40               	goto	l3100
  2502                           
  2503                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2504                           
  2505                           ;doprnt.c: 1425: do
  2506  0706  3030               	movlw	48
  2507  0707  00DB               	movwf	??_sprintf^(0+128)
  2508  0708  0867               	movf	sprintf@sp^(0+128),w
  2509  0709  0084               	movwf	4
  2510  070A  085B               	movf	??_sprintf^(0+128),w
  2511  070B  1783               	bsf	3,7	;select IRP bank2
  2512  070C  0080               	movwf	0
  2513  070D  3001               	movlw	1
  2514  070E  00DB               	movwf	??_sprintf^(0+128)
  2515  070F  085B               	movf	??_sprintf^(0+128),w
  2516  0710  07E7               	addwf	sprintf@sp^(0+128),f
  2517                           
  2518                           ;doprnt.c: 1427: while(--width);
  2519  0711  30FF               	movlw	255
  2520  0712  07E5               	addwf	sprintf@width^(0+128),f
  2521  0713  1803               	skipnc
  2522  0714  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2523  0715  30FF               	movlw	255
  2524  0716  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2525  0717  2F02               	goto	l3078
  2526  0718                     l3086:	
  2527                           ;doprnt.c: 1429: } else
  2528                           
  2529                           
  2530                           ;doprnt.c: 1431: {
  2531                           ;doprnt.c: 1433: if(width
  2532                           ;doprnt.c: 1437: )
  2533  0718  0866               	movf	(sprintf@width+1)^(0+128),w
  2534  0719  0465               	iorwf	sprintf@width^(0+128),w
  2535  071A  1903               	skipnz
  2536  071B  2F31               	goto	l3094
  2537  071C                     l3088:	
  2538                           ;doprnt.c: 1438: do
  2539                           
  2540                           
  2541                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2542  071C  3020               	movlw	32
  2543  071D  00DB               	movwf	??_sprintf^(0+128)
  2544  071E  0867               	movf	sprintf@sp^(0+128),w
  2545  071F  0084               	movwf	4
  2546  0720  085B               	movf	??_sprintf^(0+128),w
  2547  0721  1783               	bsf	3,7	;select IRP bank2
  2548  0722  0080               	movwf	0
  2549  0723  3001               	movlw	1
  2550  0724  00DB               	movwf	??_sprintf^(0+128)
  2551  0725  085B               	movf	??_sprintf^(0+128),w
  2552  0726  07E7               	addwf	sprintf@sp^(0+128),f
  2553                           
  2554                           ;doprnt.c: 1440: while(--width);
  2555  0727  30FF               	movlw	255
  2556  0728  07E5               	addwf	sprintf@width^(0+128),f
  2557  0729  1803               	skipnc
  2558  072A  0AE6               	incf	(sprintf@width+1)^(0+128),f
  2559  072B  30FF               	movlw	255
  2560  072C  07E6               	addwf	(sprintf@width+1)^(0+128),f
  2561  072D  0866               	movf	(sprintf@width+1)^(0+128),w
  2562  072E  0465               	iorwf	sprintf@width^(0+128),w
  2563  072F  1D03               	skipz
  2564  0730  2F1C               	goto	l3088
  2565  0731                     l3094:	
  2566                           
  2567                           ;doprnt.c: 1447: if(flag & 0x03)
  2568  0731  0864               	movf	sprintf@flag^(0+128),w
  2569  0732  3903               	andlw	3
  2570  0733  1903               	btfsc	3,2
  2571  0734  2F40               	goto	l3100
  2572                           
  2573                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2574  0735  302D               	movlw	45
  2575  0736  00DB               	movwf	??_sprintf^(0+128)
  2576  0737  0867               	movf	sprintf@sp^(0+128),w
  2577  0738  0084               	movwf	4
  2578  0739  085B               	movf	??_sprintf^(0+128),w
  2579  073A  1783               	bsf	3,7	;select IRP bank2
  2580  073B  0080               	movwf	0
  2581  073C  3001               	movlw	1
  2582  073D  00DB               	movwf	??_sprintf^(0+128)
  2583  073E  085B               	movf	??_sprintf^(0+128),w
  2584  073F  07E7               	addwf	sprintf@sp^(0+128),f
  2585  0740                     l3100:	
  2586                           
  2587                           ;doprnt.c: 1478: }
  2588                           ;doprnt.c: 1481: prec = c;
  2589  0740  0868               	movf	sprintf@c^(0+128),w
  2590  0741  00DB               	movwf	??_sprintf^(0+128)
  2591  0742  085B               	movf	??_sprintf^(0+128),w
  2592  0743  00DF               	movwf	sprintf@prec^(0+128)
  2593  0744                     l3108:	
  2594                           ;doprnt.c: 1483: while(prec--) {
  2595                           
  2596  0744  30FF               	movlw	-1
  2597  0745  00DB               	movwf	??_sprintf^(0+128)
  2598  0746  085B               	movf	??_sprintf^(0+128),w
  2599  0747  07DF               	addwf	sprintf@prec^(0+128),f
  2600  0748  085F               	movf	sprintf@prec^(0+128),w
  2601  0749  3AFF               	xorlw	-1
  2602  074A  1903               	btfsc	3,2
  2603  074B  2DE3               	goto	l3110
  2604                           
  2605                           ;doprnt.c: 1487: {
  2606                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2607  074C  300A               	movlw	10
  2608  074D  00D2               	movwf	___lwmod@divisor^(0+128)
  2609  074E  3000               	movlw	0
  2610  074F  00D3               	movwf	(___lwmod@divisor^(0+128)+1)
  2611  0750  085F               	movf	sprintf@prec^(0+128),w
  2612  0751  00DB               	movwf	??_sprintf^(0+128)
  2613  0752  075B               	addwf	??_sprintf^(0+128),w
  2614  0753  3E01               	addlw	low (_dpowers-__stringbase)
  2615  0754  0084               	movwf	4
  2616  0755  120A  158A  200A  120A  118A  	fcall	stringdir
  2617  075A  00CA               	movwf	___lwdiv@divisor^(0+128)
  2618  075B  120A  158A  200A  120A  118A  	fcall	stringdir
  2619  0760  00CB               	movwf	(___lwdiv@divisor+1)^(0+128)
  2620  0761  0861               	movf	(sprintf@_val+1)^(0+128),w
  2621  0762  01CD               	clrf	(___lwdiv@dividend+1)^(0+128)
  2622  0763  07CD               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2623  0764  0860               	movf	sprintf@_val^(0+128),w
  2624  0765  01CC               	clrf	___lwdiv@dividend^(0+128)
  2625  0766  07CC               	addwf	___lwdiv@dividend^(0+128),f
  2626  0767  160A  118A  24C4  120A  118A  	fcall	___lwdiv
  2627  076C  1683               	bsf	3,5	;RP0=1, select bank1
  2628  076D  1303               	bcf	3,6	;RP1=0, select bank1
  2629  076E  084B               	movf	(?___lwdiv+1)^(0+128),w
  2630  076F  01D5               	clrf	(___lwmod@dividend+1)^(0+128)
  2631  0770  07D5               	addwf	(___lwmod@dividend+1)^(0+128),f
  2632  0771  084A               	movf	?___lwdiv^(0+128),w
  2633  0772  01D4               	clrf	___lwmod@dividend^(0+128)
  2634  0773  07D4               	addwf	___lwmod@dividend^(0+128),f
  2635  0774  160A  118A  2450  120A  118A  	fcall	___lwmod
  2636  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2637  077A  1303               	bcf	3,6	;RP1=0, select bank1
  2638  077B  0852               	movf	?___lwmod^(0+128),w
  2639  077C  3E30               	addlw	48
  2640  077D  00DC               	movwf	(??_sprintf+1)^(0+128)
  2641  077E  085C               	movf	(??_sprintf+1)^(0+128),w
  2642  077F  00E8               	movwf	sprintf@c^(0+128)
  2643                           
  2644                           ;doprnt.c: 1532: }
  2645                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2646  0780  0868               	movf	sprintf@c^(0+128),w
  2647  0781  00DB               	movwf	??_sprintf^(0+128)
  2648  0782  0867               	movf	sprintf@sp^(0+128),w
  2649  0783  0084               	movwf	4
  2650  0784  085B               	movf	??_sprintf^(0+128),w
  2651  0785  1783               	bsf	3,7	;select IRP bank2
  2652  0786  0080               	movwf	0
  2653  0787  3001               	movlw	1
  2654  0788  00DB               	movwf	??_sprintf^(0+128)
  2655  0789  085B               	movf	??_sprintf^(0+128),w
  2656  078A  07E7               	addwf	sprintf@sp^(0+128),f
  2657  078B  2F44               	goto	l3108
  2658  078C                     l3112:	
  2659                           ;doprnt.c: 1534: }
  2660                           ;doprnt.c: 1542: }
  2661                           ;doprnt.c: 1544: alldone:
  2662                           
  2663                           
  2664                           ;doprnt.c: 1547: *sp = 0;
  2665  078C  1683               	bsf	3,5	;RP0=1, select bank1
  2666  078D  1303               	bcf	3,6	;RP1=0, select bank1
  2667  078E  0867               	movf	sprintf@sp^(0+128),w
  2668  078F  0084               	movwf	4
  2669  0790  1783               	bsf	3,7	;select IRP bank2
  2670  0791  0180               	clrf	0
  2671  0792  0008               	return
  2672  0793                     __end_of_sprintf:	
  2673                           ;doprnt.c: 1549: return 0;
  2674                           ;	Return value of _sprintf is never used
  2675                           
  2676                           
  2677                           	psect	text2
  2678  121C                     __ptext2:	
  2679 ;; *************** function _isdigit *****************
  2680 ;; Defined at:
  2681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  c               1    wreg     unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  c               1    1[BANK1 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       0       0       0
  2696 ;;      Locals:         0       0       2       0       0
  2697 ;;      Temps:          0       0       0       0       0
  2698 ;;      Totals:         0       0       2       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    5
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_sprintf
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _isdigit
  2711  121C                     _isdigit:	
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2715                           ;isdigit@c stored from wreg
  2716  121C  1683               	bsf	3,5	;RP0=1, select bank1
  2717  121D  1303               	bcf	3,6	;RP1=0, select bank1
  2718  121E  00CB               	movwf	isdigit@c^(0+128)
  2719  121F  01CA               	clrf	_isdigit$1449^(0+128)
  2720  1220  303A               	movlw	58
  2721  1221  024B               	subwf	isdigit@c^(0+128),w
  2722  1222  1803               	skipnc
  2723  1223  2A2A               	goto	l2512
  2724  1224  3030               	movlw	48
  2725  1225  024B               	subwf	isdigit@c^(0+128),w
  2726  1226  1C03               	skipc
  2727  1227  2A2A               	goto	l2512
  2728  1228  01CA               	clrf	_isdigit$1449^(0+128)
  2729  1229  0ACA               	incf	_isdigit$1449^(0+128),f
  2730  122A                     l2512:	
  2731  122A  0C4A               	rrf	_isdigit$1449^(0+128),w
  2732  122B  0008               	return
  2733  122C                     __end_of_isdigit:	
  2734                           
  2735                           	psect	text3
  2736  13A0                     __ptext3:	
  2737 ;; *************** function ___wmul *****************
  2738 ;; Defined at:
  2739 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2742 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  product         2    4[BANK1 ] unsigned int 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    0[BANK1 ] unsigned int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       0       4       0       0
  2755 ;;      Locals:         0       0       2       0       0
  2756 ;;      Temps:          0       0       0       0       0
  2757 ;;      Totals:         0       0       6       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    5
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_sprintf
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___wmul
  2770  13A0                     ___wmul:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2774  13A0  1683               	bsf	3,5	;RP0=1, select bank1
  2775  13A1  1303               	bcf	3,6	;RP1=0, select bank1
  2776  13A2  01CE               	clrf	___wmul@product^(0+128)
  2777  13A3  01CF               	clrf	(___wmul@product+1)^(0+128)
  2778  13A4                     l2518:	
  2779  13A4  1C4A               	btfss	___wmul@multiplier^(0+128),0
  2780  13A5  2BAC               	goto	l598
  2781  13A6  084C               	movf	___wmul@multiplicand^(0+128),w
  2782  13A7  07CE               	addwf	___wmul@product^(0+128),f
  2783  13A8  1803               	skipnc
  2784  13A9  0ACF               	incf	(___wmul@product+1)^(0+128),f
  2785  13AA  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
  2786  13AB  07CF               	addwf	(___wmul@product+1)^(0+128),f
  2787  13AC                     l598:	
  2788  13AC  3001               	movlw	1
  2789  13AD                     u2815:	
  2790  13AD  1003               	clrc
  2791  13AE  0DCC               	rlf	___wmul@multiplicand^(0+128),f
  2792  13AF  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2793  13B0  3EFF               	addlw	-1
  2794  13B1  1D03               	skipz
  2795  13B2  2BAD               	goto	u2815
  2796  13B3  3001               	movlw	1
  2797  13B4                     u2825:	
  2798  13B4  1003               	clrc
  2799  13B5  0CCB               	rrf	(___wmul@multiplier+1)^(0+128),f
  2800  13B6  0CCA               	rrf	___wmul@multiplier^(0+128),f
  2801  13B7  3EFF               	addlw	-1
  2802  13B8  1D03               	skipz
  2803  13B9  2BB4               	goto	u2825
  2804  13BA  084B               	movf	(___wmul@multiplier+1)^(0+128),w
  2805  13BB  044A               	iorwf	___wmul@multiplier^(0+128),w
  2806  13BC  1D03               	skipz
  2807  13BD  2BA4               	goto	l2518
  2808  13BE  084F               	movf	(___wmul@product+1)^(0+128),w
  2809  13BF  01CB               	clrf	(?___wmul+1)^(0+128)
  2810  13C0  07CB               	addwf	(?___wmul+1)^(0+128),f
  2811  13C1  084E               	movf	___wmul@product^(0+128),w
  2812  13C2  01CA               	clrf	?___wmul^(0+128)
  2813  13C3  07CA               	addwf	?___wmul^(0+128),f
  2814  13C4  0008               	return
  2815  13C5                     __end_of___wmul:	
  2816                           
  2817                           	psect	text4
  2818  1450                     __ptext4:	
  2819 ;; *************** function ___lwmod *****************
  2820 ;; Defined at:
  2821 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  divisor         2    8[BANK1 ] unsigned int 
  2824 ;;  dividend        2   10[BANK1 ] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  counter         1   13[BANK1 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  2    8[BANK1 ] unsigned int 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       4       0       0
  2837 ;;      Locals:         0       0       1       0       0
  2838 ;;      Temps:          0       0       1       0       0
  2839 ;;      Totals:         0       0       6       0       0
  2840 ;;Total ram usage:        6 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    5
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_sprintf
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function ___lwmod
  2852  1450                     ___lwmod:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2856  1450  1683               	bsf	3,5	;RP0=1, select bank1
  2857  1451  1303               	bcf	3,6	;RP1=0, select bank1
  2858  1452  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2859  1453  0452               	iorwf	___lwmod@divisor^(0+128),w
  2860  1454  1903               	skipnz
  2861  1455  2C7F               	goto	l2706
  2862  1456  01D7               	clrf	___lwmod@counter^(0+128)
  2863  1457  0AD7               	incf	___lwmod@counter^(0+128),f
  2864  1458                     l2696:	
  2865  1458  1BD3               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2866  1459  2C66               	goto	l2698
  2867  145A  3001               	movlw	1
  2868  145B                     u3265:	
  2869  145B  1003               	clrc
  2870  145C  0DD2               	rlf	___lwmod@divisor^(0+128),f
  2871  145D  0DD3               	rlf	(___lwmod@divisor+1)^(0+128),f
  2872  145E  3EFF               	addlw	-1
  2873  145F  1D03               	skipz
  2874  1460  2C5B               	goto	u3265
  2875  1461  3001               	movlw	1
  2876  1462  00D6               	movwf	??___lwmod^(0+128)
  2877  1463  0856               	movf	??___lwmod^(0+128),w
  2878  1464  07D7               	addwf	___lwmod@counter^(0+128),f
  2879  1465  2C58               	goto	l2696
  2880  1466                     l2698:	
  2881  1466  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2882  1467  0255               	subwf	(___lwmod@dividend+1)^(0+128),w
  2883  1468  1D03               	skipz
  2884  1469  2C6C               	goto	u3285
  2885  146A  0852               	movf	___lwmod@divisor^(0+128),w
  2886  146B  0254               	subwf	___lwmod@dividend^(0+128),w
  2887  146C                     u3285:	
  2888  146C  1C03               	skipc
  2889  146D  2C74               	goto	l2702
  2890  146E  0852               	movf	___lwmod@divisor^(0+128),w
  2891  146F  02D4               	subwf	___lwmod@dividend^(0+128),f
  2892  1470  0853               	movf	(___lwmod@divisor+1)^(0+128),w
  2893  1471  1C03               	skipc
  2894  1472  03D5               	decf	(___lwmod@dividend+1)^(0+128),f
  2895  1473  02D5               	subwf	(___lwmod@dividend+1)^(0+128),f
  2896  1474                     l2702:	
  2897  1474  3001               	movlw	1
  2898  1475                     u3295:	
  2899  1475  1003               	clrc
  2900  1476  0CD3               	rrf	(___lwmod@divisor+1)^(0+128),f
  2901  1477  0CD2               	rrf	___lwmod@divisor^(0+128),f
  2902  1478  3EFF               	addlw	-1
  2903  1479  1D03               	skipz
  2904  147A  2C75               	goto	u3295
  2905  147B  3001               	movlw	1
  2906  147C  02D7               	subwf	___lwmod@counter^(0+128),f
  2907  147D  1D03               	btfss	3,2
  2908  147E  2C66               	goto	l2698
  2909  147F                     l2706:	
  2910  147F  0855               	movf	(___lwmod@dividend+1)^(0+128),w
  2911  1480  01D3               	clrf	(?___lwmod+1)^(0+128)
  2912  1481  07D3               	addwf	(?___lwmod+1)^(0+128),f
  2913  1482  0854               	movf	___lwmod@dividend^(0+128),w
  2914  1483  01D2               	clrf	?___lwmod^(0+128)
  2915  1484  07D2               	addwf	?___lwmod^(0+128),f
  2916  1485  0008               	return
  2917  1486                     __end_of___lwmod:	
  2918                           
  2919                           	psect	text5
  2920  14C4                     __ptext5:	
  2921 ;; *************** function ___lwdiv *****************
  2922 ;; Defined at:
  2923 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  divisor         2    0[BANK1 ] unsigned int 
  2926 ;;  dividend        2    2[BANK1 ] unsigned int 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  quotient        2    5[BANK1 ] unsigned int 
  2929 ;;  counter         1    7[BANK1 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  2    0[BANK1 ] unsigned int 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       4       0       0
  2940 ;;      Locals:         0       0       3       0       0
  2941 ;;      Temps:          0       0       1       0       0
  2942 ;;      Totals:         0       0       8       0       0
  2943 ;;Total ram usage:        8 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    5
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_sprintf
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function ___lwdiv
  2955  14C4                     ___lwdiv:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2959  14C4  1683               	bsf	3,5	;RP0=1, select bank1
  2960  14C5  1303               	bcf	3,6	;RP1=0, select bank1
  2961  14C6  01CF               	clrf	___lwdiv@quotient^(0+128)
  2962  14C7  01D0               	clrf	(___lwdiv@quotient+1)^(0+128)
  2963  14C8  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  2964  14C9  044A               	iorwf	___lwdiv@divisor^(0+128),w
  2965  14CA  1903               	skipnz
  2966  14CB  2CFD               	goto	l2684
  2967  14CC  01D1               	clrf	___lwdiv@counter^(0+128)
  2968  14CD  0AD1               	incf	___lwdiv@counter^(0+128),f
  2969  14CE                     l2672:	
  2970  14CE  1BCB               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2971  14CF  2CDC               	goto	l2674
  2972  14D0  3001               	movlw	1
  2973  14D1                     u3195:	
  2974  14D1  1003               	clrc
  2975  14D2  0DCA               	rlf	___lwdiv@divisor^(0+128),f
  2976  14D3  0DCB               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2977  14D4  3EFF               	addlw	-1
  2978  14D5  1D03               	skipz
  2979  14D6  2CD1               	goto	u3195
  2980  14D7  3001               	movlw	1
  2981  14D8  00CE               	movwf	??___lwdiv^(0+128)
  2982  14D9  084E               	movf	??___lwdiv^(0+128),w
  2983  14DA  07D1               	addwf	___lwdiv@counter^(0+128),f
  2984  14DB  2CCE               	goto	l2672
  2985  14DC                     l2674:	
  2986  14DC  3001               	movlw	1
  2987  14DD                     u3215:	
  2988  14DD  1003               	clrc
  2989  14DE  0DCF               	rlf	___lwdiv@quotient^(0+128),f
  2990  14DF  0DD0               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2991  14E0  3EFF               	addlw	-1
  2992  14E1  1D03               	skipz
  2993  14E2  2CDD               	goto	u3215
  2994  14E3  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  2995  14E4  024D               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2996  14E5  1D03               	skipz
  2997  14E6  2CE9               	goto	u3225
  2998  14E7  084A               	movf	___lwdiv@divisor^(0+128),w
  2999  14E8  024C               	subwf	___lwdiv@dividend^(0+128),w
  3000  14E9                     u3225:	
  3001  14E9  1C03               	skipc
  3002  14EA  2CF2               	goto	l2680
  3003  14EB  084A               	movf	___lwdiv@divisor^(0+128),w
  3004  14EC  02CC               	subwf	___lwdiv@dividend^(0+128),f
  3005  14ED  084B               	movf	(___lwdiv@divisor+1)^(0+128),w
  3006  14EE  1C03               	skipc
  3007  14EF  03CD               	decf	(___lwdiv@dividend+1)^(0+128),f
  3008  14F0  02CD               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3009  14F1  144F               	bsf	___lwdiv@quotient^(0+128),0
  3010  14F2                     l2680:	
  3011  14F2  3001               	movlw	1
  3012  14F3                     u3235:	
  3013  14F3  1003               	clrc
  3014  14F4  0CCB               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3015  14F5  0CCA               	rrf	___lwdiv@divisor^(0+128),f
  3016  14F6  3EFF               	addlw	-1
  3017  14F7  1D03               	skipz
  3018  14F8  2CF3               	goto	u3235
  3019  14F9  3001               	movlw	1
  3020  14FA  02D1               	subwf	___lwdiv@counter^(0+128),f
  3021  14FB  1D03               	btfss	3,2
  3022  14FC  2CDC               	goto	l2674
  3023  14FD                     l2684:	
  3024  14FD  0850               	movf	(___lwdiv@quotient+1)^(0+128),w
  3025  14FE  01CB               	clrf	(?___lwdiv+1)^(0+128)
  3026  14FF  07CB               	addwf	(?___lwdiv+1)^(0+128),f
  3027  1500  084F               	movf	___lwdiv@quotient^(0+128),w
  3028  1501  01CA               	clrf	?___lwdiv^(0+128)
  3029  1502  07CA               	addwf	?___lwdiv^(0+128),f
  3030  1503  0008               	return
  3031  1504                     __end_of___lwdiv:	
  3032                           
  3033                           	psect	text6
  3034  141F                     __ptext6:	
  3035 ;; *************** function _USART_WriteString *****************
  3036 ;; Defined at:
  3037 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3040 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3041 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3042 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3043 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       2       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       0       2       0       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    6
  3062 ;; This function calls:
  3063 ;;		_USART_WriteChar
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _USART_WriteString
  3071  141F                     _USART_WriteString:	
  3072  141F                     l2880:	
  3073                           ;usart.c: 54: while(*str != '\0')
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3077                           
  3078  141F  1683               	bsf	3,5	;RP0=1, select bank1
  3079  1420  1303               	bcf	3,6	;RP1=0, select bank1
  3080  1421  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3081  1422  1283               	bcf	3,5	;RP0=0, select bank0
  3082  1423  1303               	bcf	3,6	;RP1=0, select bank0
  3083  1424  00FF               	movwf	127
  3084  1425  1683               	bsf	3,5	;RP0=1, select bank1
  3085  1426  1303               	bcf	3,6	;RP1=0, select bank1
  3086  1427  084B               	movf	USART_WriteString@str^(0+128),w
  3087  1428  0084               	movwf	4
  3088  1429  1283               	bcf	3,5	;RP0=0, select bank0
  3089  142A  1303               	bcf	3,6	;RP1=0, select bank0
  3090  142B  120A  158A  2000  160A  118A  	fcall	stringtab
  3091  1430  3800               	iorlw	0
  3092  1431  1903               	btfsc	3,2
  3093  1432  0008               	return
  3094                           
  3095                           ;usart.c: 55: {
  3096                           ;usart.c: 56: USART_WriteChar(*str);
  3097  1433  1683               	bsf	3,5	;RP0=1, select bank1
  3098  1434  1303               	bcf	3,6	;RP1=0, select bank1
  3099  1435  084C               	movf	(USART_WriteString@str+1)^(0+128),w
  3100  1436  1283               	bcf	3,5	;RP0=0, select bank0
  3101  1437  1303               	bcf	3,6	;RP1=0, select bank0
  3102  1438  00FF               	movwf	127
  3103  1439  1683               	bsf	3,5	;RP0=1, select bank1
  3104  143A  1303               	bcf	3,6	;RP1=0, select bank1
  3105  143B  084B               	movf	USART_WriteString@str^(0+128),w
  3106  143C  0084               	movwf	4
  3107  143D  1283               	bcf	3,5	;RP0=0, select bank0
  3108  143E  1303               	bcf	3,6	;RP1=0, select bank0
  3109  143F  120A  158A  2000  160A  118A  	fcall	stringtab
  3110  1444  160A  118A  220F  160A  118A  	fcall	_USART_WriteChar
  3111                           
  3112                           ;usart.c: 57: str++;
  3113  1449  3001               	movlw	1
  3114  144A  1683               	bsf	3,5	;RP0=1, select bank1
  3115  144B  1303               	bcf	3,6	;RP1=0, select bank1
  3116  144C  07CB               	addwf	USART_WriteString@str^(0+128),f
  3117  144D  1803               	skipnc
  3118  144E  0ACC               	incf	(USART_WriteString@str+1)^(0+128),f
  3119  144F  2C1F               	goto	l2880
  3120  1450                     __end_of_USART_WriteString:	
  3121                           
  3122                           	psect	text7
  3123  120F                     __ptext7:	
  3124 ;; *************** function _USART_WriteChar *****************
  3125 ;; Defined at:
  3126 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  byte            1    wreg     unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  byte            1    0[BANK1 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		wreg
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       1       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       1       0       0
  3144 ;;Total ram usage:        1 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    5
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_USART_WriteString
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _USART_WriteChar
  3156  120F                     _USART_WriteChar:	
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _USART_WriteChar: [wreg]
  3160                           ;USART_WriteChar@byte stored from wreg
  3161  120F  1683               	bsf	3,5	;RP0=1, select bank1
  3162  1210  1303               	bcf	3,6	;RP1=0, select bank1
  3163  1211  00CA               	movwf	USART_WriteChar@byte^(0+128)
  3164  1212                     l227:	
  3165                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3166                           
  3167  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3168  1213  1E0C               	btfss	12,4	;volatile
  3169  1214  2A12               	goto	l227
  3170                           
  3171                           ;usart.c: 47: TXREG = byte;
  3172  1215  1683               	bsf	3,5	;RP0=1, select bank1
  3173  1216  1303               	bcf	3,6	;RP1=0, select bank1
  3174  1217  084A               	movf	USART_WriteChar@byte^(0+128),w
  3175  1218  1283               	bcf	3,5	;RP0=0, select bank0
  3176  1219  1303               	bcf	3,6	;RP1=0, select bank0
  3177  121A  0099               	movwf	25	;volatile
  3178  121B  0008               	return
  3179  121C                     __end_of_USART_WriteChar:	
  3180                           
  3181                           	psect	text8
  3182  1504                     __ptext8:	
  3183 ;; *************** function _USART_Init *****************
  3184 ;; Defined at:
  3185 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  BaudRate        4   15[BANK1 ] long 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       4       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       4       0       0
  3202 ;;      Totals:         0       0       8       0       0
  3203 ;;Total ram usage:        8 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    6
  3206 ;; This function calls:
  3207 ;;		___aldiv
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _USART_Init
  3215  1504                     _USART_Init:	
  3216                           
  3217                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3218                           
  3219                           ;incstack = 0
  3220                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3221  1504  1683               	bsf	3,5	;RP0=1, select bank1
  3222  1505  1303               	bcf	3,6	;RP1=0, select bank1
  3223  1506  0859               	movf	USART_Init@BaudRate^(0+128),w
  3224  1507  00DD               	movwf	??_USART_Init^(0+128)
  3225  1508  085A               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3226  1509  00DE               	movwf	(??_USART_Init^(0+128)+1)
  3227  150A  085B               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3228  150B  00DF               	movwf	(??_USART_Init^(0+128)+2)
  3229  150C  085C               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3230  150D  00E0               	movwf	(??_USART_Init^(0+128)+3)
  3231  150E  3004               	movlw	4
  3232  150F                     u3585:	
  3233  150F  1003               	clrc
  3234  1510  0DDD               	rlf	??_USART_Init^(0+128),f
  3235  1511  0DDE               	rlf	(??_USART_Init^(0+128)+1),f
  3236  1512  0DDF               	rlf	(??_USART_Init^(0+128)+2),f
  3237  1513  0DE0               	rlf	(??_USART_Init^(0+128)+3),f
  3238  1514  3EFF               	addlw	-1
  3239  1515  1D03               	skipz
  3240  1516  2D0F               	goto	u3585
  3241  1517  0860               	movf	(??_USART_Init+3)^(0+128),w
  3242  1518  00CD               	movwf	(___aldiv@divisor+3)^(0+128)
  3243  1519  085F               	movf	(??_USART_Init+2)^(0+128),w
  3244  151A  00CC               	movwf	(___aldiv@divisor+2)^(0+128)
  3245  151B  085E               	movf	(??_USART_Init+1)^(0+128),w
  3246  151C  00CB               	movwf	(___aldiv@divisor+1)^(0+128)
  3247  151D  085D               	movf	??_USART_Init^(0+128),w
  3248  151E  00CA               	movwf	___aldiv@divisor^(0+128)
  3249  151F  3001               	movlw	1
  3250  1520  00D1               	movwf	(___aldiv@dividend+3)^(0+128)
  3251  1521  3019               	movlw	25
  3252  1522  00D0               	movwf	(___aldiv@dividend+2)^(0+128)
  3253  1523  3040               	movlw	64
  3254  1524  00CF               	movwf	(___aldiv@dividend+1)^(0+128)
  3255  1525  3000               	movlw	0
  3256  1526  00CE               	movwf	___aldiv@dividend^(0+128)
  3257  1527  160A  118A  269E   	fcall	___aldiv
  3258  152A  1683               	bsf	3,5	;RP0=1, select bank1
  3259  152B  1303               	bcf	3,6	;RP1=0, select bank1
  3260  152C  084A               	movf	?___aldiv^(0+128),w
  3261  152D  3EFF               	addlw	255
  3262  152E  0099               	movwf	25	;volatile
  3263                           
  3264                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3265  152F  1398               	bcf	24,7	;volatile
  3266                           
  3267                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3268  1530  1318               	bcf	24,6	;volatile
  3269                           
  3270                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3271  1531  1698               	bsf	24,5	;volatile
  3272                           
  3273                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3274  1532  1218               	bcf	24,4	;volatile
  3275                           
  3276                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3277  1533  1518               	bsf	24,2	;volatile
  3278                           
  3279                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3280  1534  1498               	bsf	24,1	;volatile
  3281                           
  3282                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3283  1535  1018               	bcf	24,0	;volatile
  3284                           
  3285                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3286  1536  1283               	bcf	3,5	;RP0=0, select bank0
  3287  1537  1303               	bcf	3,6	;RP1=0, select bank0
  3288  1538  1798               	bsf	24,7	;volatile
  3289                           
  3290                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3291  1539  1318               	bcf	24,6	;volatile
  3292                           
  3293                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3294  153A  1298               	bcf	24,5	;volatile
  3295                           
  3296                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3297  153B  1618               	bsf	24,4	;volatile
  3298                           
  3299                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3300  153C  1198               	bcf	24,3	;volatile
  3301                           
  3302                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3303  153D  1118               	bcf	24,2	;volatile
  3304                           
  3305                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3306  153E  1098               	bcf	24,1	;volatile
  3307                           
  3308                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3309  153F  1018               	bcf	24,0	;volatile
  3310                           
  3311                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3312  1540  1683               	bsf	3,5	;RP0=1, select bank1
  3313  1541  1303               	bcf	3,6	;RP1=0, select bank1
  3314  1542  120C               	bcf	12,4	;volatile
  3315                           
  3316                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3317  1543  1283               	bcf	3,5	;RP0=0, select bank0
  3318  1544  1303               	bcf	3,6	;RP1=0, select bank0
  3319  1545  120C               	bcf	12,4	;volatile
  3320                           
  3321                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3322  1546  1683               	bsf	3,5	;RP0=1, select bank1
  3323  1547  1303               	bcf	3,6	;RP1=0, select bank1
  3324  1548  168C               	bsf	12,5	;volatile
  3325                           
  3326                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3327  1549  1283               	bcf	3,5	;RP0=0, select bank0
  3328  154A  1303               	bcf	3,6	;RP1=0, select bank0
  3329  154B  128C               	bcf	12,5	;volatile
  3330  154C  0008               	return
  3331  154D                     __end_of_USART_Init:	
  3332                           
  3333                           	psect	text9
  3334  169E                     __ptext9:	
  3335 ;; *************** function ___aldiv *****************
  3336 ;; Defined at:
  3337 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  divisor         4    0[BANK1 ] long 
  3340 ;;  dividend        4    4[BANK1 ] long 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  quotient        4   11[BANK1 ] long 
  3343 ;;  sign            1   10[BANK1 ] unsigned char 
  3344 ;;  counter         1    9[BANK1 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  4    0[BANK1 ] long 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       8       0       0
  3355 ;;      Locals:         0       0       6       0       0
  3356 ;;      Temps:          0       0       1       0       0
  3357 ;;      Totals:         0       0      15       0       0
  3358 ;;Total ram usage:       15 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    5
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_USART_Init
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___aldiv
  3370  169E                     ___aldiv:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3374  169E  1683               	bsf	3,5	;RP0=1, select bank1
  3375  169F  1303               	bcf	3,6	;RP1=0, select bank1
  3376  16A0  01D4               	clrf	___aldiv@sign^(0+128)
  3377  16A1  1FCD               	btfss	(___aldiv@divisor+3)^(0+128),7
  3378  16A2  2EB0               	goto	l653
  3379  16A3  09CA               	comf	___aldiv@divisor^(0+128),f
  3380  16A4  09CB               	comf	(___aldiv@divisor+1)^(0+128),f
  3381  16A5  09CC               	comf	(___aldiv@divisor+2)^(0+128),f
  3382  16A6  09CD               	comf	(___aldiv@divisor+3)^(0+128),f
  3383  16A7  0ACA               	incf	___aldiv@divisor^(0+128),f
  3384  16A8  1903               	skipnz
  3385  16A9  0ACB               	incf	(___aldiv@divisor+1)^(0+128),f
  3386  16AA  1903               	skipnz
  3387  16AB  0ACC               	incf	(___aldiv@divisor+2)^(0+128),f
  3388  16AC  1903               	skipnz
  3389  16AD  0ACD               	incf	(___aldiv@divisor+3)^(0+128),f
  3390  16AE  01D4               	clrf	___aldiv@sign^(0+128)
  3391  16AF  0AD4               	incf	___aldiv@sign^(0+128),f
  3392  16B0                     l653:	
  3393  16B0  1FD1               	btfss	(___aldiv@dividend+3)^(0+128),7
  3394  16B1  2EC1               	goto	l2538
  3395  16B2  09CE               	comf	___aldiv@dividend^(0+128),f
  3396  16B3  09CF               	comf	(___aldiv@dividend+1)^(0+128),f
  3397  16B4  09D0               	comf	(___aldiv@dividend+2)^(0+128),f
  3398  16B5  09D1               	comf	(___aldiv@dividend+3)^(0+128),f
  3399  16B6  0ACE               	incf	___aldiv@dividend^(0+128),f
  3400  16B7  1903               	skipnz
  3401  16B8  0ACF               	incf	(___aldiv@dividend+1)^(0+128),f
  3402  16B9  1903               	skipnz
  3403  16BA  0AD0               	incf	(___aldiv@dividend+2)^(0+128),f
  3404  16BB  1903               	skipnz
  3405  16BC  0AD1               	incf	(___aldiv@dividend+3)^(0+128),f
  3406  16BD  3001               	movlw	1
  3407  16BE  00D2               	movwf	??___aldiv^(0+128)
  3408  16BF  0852               	movf	??___aldiv^(0+128),w
  3409  16C0  06D4               	xorwf	___aldiv@sign^(0+128),f
  3410  16C1                     l2538:	
  3411  16C1  3000               	movlw	0
  3412  16C2  00D8               	movwf	(___aldiv@quotient+3)^(0+128)
  3413  16C3  3000               	movlw	0
  3414  16C4  00D7               	movwf	(___aldiv@quotient+2)^(0+128)
  3415  16C5  3000               	movlw	0
  3416  16C6  00D6               	movwf	(___aldiv@quotient+1)^(0+128)
  3417  16C7  3000               	movlw	0
  3418  16C8  00D5               	movwf	___aldiv@quotient^(0+128)
  3419  16C9  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3420  16CA  044C               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3421  16CB  044B               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3422  16CC  044A               	iorwf	___aldiv@divisor^(0+128),w
  3423  16CD  1903               	skipnz
  3424  16CE  2F16               	goto	l2560
  3425  16CF  01D3               	clrf	___aldiv@counter^(0+128)
  3426  16D0  0AD3               	incf	___aldiv@counter^(0+128),f
  3427  16D1                     l2546:	
  3428  16D1  1BCD               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3429  16D2  2EE1               	goto	l2548
  3430  16D3  3001               	movlw	1
  3431  16D4  00D2               	movwf	??___aldiv^(0+128)
  3432  16D5                     u2875:	
  3433  16D5  1003               	clrc
  3434  16D6  0DCA               	rlf	___aldiv@divisor^(0+128),f
  3435  16D7  0DCB               	rlf	(___aldiv@divisor+1)^(0+128),f
  3436  16D8  0DCC               	rlf	(___aldiv@divisor+2)^(0+128),f
  3437  16D9  0DCD               	rlf	(___aldiv@divisor+3)^(0+128),f
  3438  16DA  0BD2               	decfsz	??___aldiv^(0+128),f
  3439  16DB  2ED5               	goto	u2875
  3440  16DC  3001               	movlw	1
  3441  16DD  00D2               	movwf	??___aldiv^(0+128)
  3442  16DE  0852               	movf	??___aldiv^(0+128),w
  3443  16DF  07D3               	addwf	___aldiv@counter^(0+128),f
  3444  16E0  2ED1               	goto	l2546
  3445  16E1                     l2548:	
  3446  16E1  3001               	movlw	1
  3447  16E2  00D2               	movwf	??___aldiv^(0+128)
  3448  16E3                     u2895:	
  3449  16E3  1003               	clrc
  3450  16E4  0DD5               	rlf	___aldiv@quotient^(0+128),f
  3451  16E5  0DD6               	rlf	(___aldiv@quotient+1)^(0+128),f
  3452  16E6  0DD7               	rlf	(___aldiv@quotient+2)^(0+128),f
  3453  16E7  0DD8               	rlf	(___aldiv@quotient+3)^(0+128),f
  3454  16E8  0BD2               	decfsz	??___aldiv^(0+128),f
  3455  16E9  2EE3               	goto	u2895
  3456  16EA  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3457  16EB  0251               	subwf	(___aldiv@dividend+3)^(0+128),w
  3458  16EC  1D03               	skipz
  3459  16ED  2EF8               	goto	u2905
  3460  16EE  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3461  16EF  0250               	subwf	(___aldiv@dividend+2)^(0+128),w
  3462  16F0  1D03               	skipz
  3463  16F1  2EF8               	goto	u2905
  3464  16F2  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3465  16F3  024F               	subwf	(___aldiv@dividend+1)^(0+128),w
  3466  16F4  1D03               	skipz
  3467  16F5  2EF8               	goto	u2905
  3468  16F6  084A               	movf	___aldiv@divisor^(0+128),w
  3469  16F7  024E               	subwf	___aldiv@dividend^(0+128),w
  3470  16F8                     u2905:	
  3471  16F8  1C03               	skipc
  3472  16F9  2F09               	goto	l2556
  3473  16FA  084A               	movf	___aldiv@divisor^(0+128),w
  3474  16FB  02CE               	subwf	___aldiv@dividend^(0+128),f
  3475  16FC  084B               	movf	(___aldiv@divisor+1)^(0+128),w
  3476  16FD  1C03               	skipc
  3477  16FE  0F4B               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3478  16FF  02CF               	subwf	(___aldiv@dividend+1)^(0+128),f
  3479  1700  084C               	movf	(___aldiv@divisor+2)^(0+128),w
  3480  1701  1C03               	skipc
  3481  1702  0F4C               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3482  1703  02D0               	subwf	(___aldiv@dividend+2)^(0+128),f
  3483  1704  084D               	movf	(___aldiv@divisor+3)^(0+128),w
  3484  1705  1C03               	skipc
  3485  1706  0F4D               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3486  1707  02D1               	subwf	(___aldiv@dividend+3)^(0+128),f
  3487  1708  1455               	bsf	___aldiv@quotient^(0+128),0
  3488  1709                     l2556:	
  3489  1709  3001               	movlw	1
  3490  170A                     u2915:	
  3491  170A  1003               	clrc
  3492  170B  0CCD               	rrf	(___aldiv@divisor+3)^(0+128),f
  3493  170C  0CCC               	rrf	(___aldiv@divisor+2)^(0+128),f
  3494  170D  0CCB               	rrf	(___aldiv@divisor+1)^(0+128),f
  3495  170E  0CCA               	rrf	___aldiv@divisor^(0+128),f
  3496  170F  3EFF               	addlw	-1
  3497  1710  1D03               	skipz
  3498  1711  2F0A               	goto	u2915
  3499  1712  3001               	movlw	1
  3500  1713  02D3               	subwf	___aldiv@counter^(0+128),f
  3501  1714  1D03               	btfss	3,2
  3502  1715  2EE1               	goto	l2548
  3503  1716                     l2560:	
  3504  1716  0854               	movf	___aldiv@sign^(0+128),w
  3505  1717  1903               	btfsc	3,2
  3506  1718  2F24               	goto	l2564
  3507  1719  09D5               	comf	___aldiv@quotient^(0+128),f
  3508  171A  09D6               	comf	(___aldiv@quotient+1)^(0+128),f
  3509  171B  09D7               	comf	(___aldiv@quotient+2)^(0+128),f
  3510  171C  09D8               	comf	(___aldiv@quotient+3)^(0+128),f
  3511  171D  0AD5               	incf	___aldiv@quotient^(0+128),f
  3512  171E  1903               	skipnz
  3513  171F  0AD6               	incf	(___aldiv@quotient+1)^(0+128),f
  3514  1720  1903               	skipnz
  3515  1721  0AD7               	incf	(___aldiv@quotient+2)^(0+128),f
  3516  1722  1903               	skipnz
  3517  1723  0AD8               	incf	(___aldiv@quotient+3)^(0+128),f
  3518  1724                     l2564:	
  3519  1724  0858               	movf	(___aldiv@quotient+3)^(0+128),w
  3520  1725  00CD               	movwf	(?___aldiv+3)^(0+128)
  3521  1726  0857               	movf	(___aldiv@quotient+2)^(0+128),w
  3522  1727  00CC               	movwf	(?___aldiv+2)^(0+128)
  3523  1728  0856               	movf	(___aldiv@quotient+1)^(0+128),w
  3524  1729  00CB               	movwf	(?___aldiv+1)^(0+128)
  3525  172A  0855               	movf	___aldiv@quotient^(0+128),w
  3526  172B  00CA               	movwf	?___aldiv^(0+128)
  3527  172C  0008               	return
  3528  172D                     __end_of___aldiv:	
  3529                           
  3530                           	psect	text10
  3531  11FF                     __ptext10:	
  3532 ;; *************** function _TIMER0_Set *****************
  3533 ;; Defined at:
  3534 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  contagens       1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  contagens       1    0[BANK1 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       1       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       1       0       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    5
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _TIMER0_Set
  3564  11FF                     _TIMER0_Set:	
  3565                           
  3566                           ;incstack = 0
  3567                           ; Regs used in _TIMER0_Set: [wreg]
  3568                           ;TIMER0_Set@contagens stored from wreg
  3569  11FF  1683               	bsf	3,5	;RP0=1, select bank1
  3570  1200  1303               	bcf	3,6	;RP1=0, select bank1
  3571  1201  00CA               	movwf	TIMER0_Set@contagens^(0+128)
  3572                           
  3573                           ;timers.c: 22: TMR0 = contagens;
  3574  1202  084A               	movf	TIMER0_Set@contagens^(0+128),w
  3575  1203  1283               	bcf	3,5	;RP0=0, select bank0
  3576  1204  1303               	bcf	3,6	;RP1=0, select bank0
  3577  1205  0081               	movwf	1	;volatile
  3578  1206  0008               	return
  3579  1207                     __end_of_TIMER0_Set:	
  3580                           
  3581                           	psect	text11
  3582  08DC                     __ptext11:	
  3583 ;; *************** function _TIMER0_Init *****************
  3584 ;; Defined at:
  3585 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		None
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _TIMER0_Init
  3615  08DC                     _TIMER0_Init:	
  3616                           
  3617                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _TIMER0_Init: []
  3621  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  3622  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  3623  08DE  1281               	bcf	1,5	;volatile
  3624                           
  3625                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3626  08DF  1201               	bcf	1,4	;volatile
  3627                           
  3628                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3629  08E0  1181               	bcf	1,3	;volatile
  3630                           
  3631                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3632  08E1  1501               	bsf	1,2	;volatile
  3633                           
  3634                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3635  08E2  1481               	bsf	1,1	;volatile
  3636                           
  3637                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3638  08E3  1401               	bsf	1,0	;volatile
  3639                           
  3640                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3641  08E4  110B               	bcf	11,2	;volatile
  3642                           
  3643                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3644  08E5  168B               	bsf	11,5	;volatile
  3645  08E6  0008               	return
  3646  08E7                     __end_of_TIMER0_Init:	
  3647                           
  3648                           	psect	text12
  3649  137C                     __ptext12:	
  3650 ;; *************** function _PWM_Init *****************
  3651 ;; Defined at:
  3652 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;		None               void
  3659 ;; Registers used:
  3660 ;;		wreg
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3666 ;;      Params:         0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0
  3669 ;;      Totals:         0       0       0       0       0
  3670 ;;Total ram usage:        0 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    5
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _PWM_Init
  3682  137C                     _PWM_Init:	
  3683                           
  3684                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3685                           
  3686                           ;incstack = 0
  3687                           ; Regs used in _PWM_Init: [wreg]
  3688  137C  1283               	bcf	3,5	;RP0=0, select bank0
  3689  137D  1303               	bcf	3,6	;RP1=0, select bank0
  3690  137E  1492               	bsf	18,1	;volatile
  3691                           
  3692                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3693  137F  1012               	bcf	18,0	;volatile
  3694                           
  3695                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3696  1380  1312               	bcf	18,6	;volatile
  3697                           
  3698                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3699  1381  1292               	bcf	18,5	;volatile
  3700                           
  3701                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3702  1382  1212               	bcf	18,4	;volatile
  3703                           
  3704                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3705  1383  1192               	bcf	18,3	;volatile
  3706                           
  3707                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3708  1384  1512               	bsf	18,2	;volatile
  3709                           
  3710                           ;pwm.c: 27: PR2 = 255;
  3711  1385  30FF               	movlw	255
  3712  1386  1683               	bsf	3,5	;RP0=1, select bank1
  3713  1387  1303               	bcf	3,6	;RP1=0, select bank1
  3714  1388  0092               	movwf	18	;volatile
  3715                           
  3716                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3717  1389  1283               	bcf	3,5	;RP0=0, select bank0
  3718  138A  1303               	bcf	3,6	;RP1=0, select bank0
  3719  138B  1597               	bsf	23,3	;volatile
  3720                           
  3721                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3722  138C  1517               	bsf	23,2	;volatile
  3723                           
  3724                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3725  138D  1497               	bsf	23,1	;volatile
  3726                           
  3727                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3728  138E  1417               	bsf	23,0	;volatile
  3729                           
  3730                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3731  138F  1683               	bsf	3,5	;RP0=1, select bank1
  3732  1390  1303               	bcf	3,6	;RP1=0, select bank1
  3733  1391  150C               	bsf	12,2	;volatile
  3734                           
  3735                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3736  1392  1283               	bcf	3,5	;RP0=0, select bank0
  3737  1393  1303               	bcf	3,6	;RP1=0, select bank0
  3738  1394  110C               	bcf	12,2	;volatile
  3739                           
  3740                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3741  1395  159D               	bsf	29,3	;volatile
  3742                           
  3743                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3744  1396  151D               	bsf	29,2	;volatile
  3745                           
  3746                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3747  1397  149D               	bsf	29,1	;volatile
  3748                           
  3749                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3750  1398  141D               	bsf	29,0	;volatile
  3751                           
  3752                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3753  1399  1683               	bsf	3,5	;RP0=1, select bank1
  3754  139A  1303               	bcf	3,6	;RP1=0, select bank1
  3755  139B  140D               	bsf	13,0	;volatile
  3756                           
  3757                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3758  139C  1283               	bcf	3,5	;RP0=0, select bank0
  3759  139D  1303               	bcf	3,6	;RP1=0, select bank0
  3760  139E  100D               	bcf	13,0	;volatile
  3761  139F  0008               	return
  3762  13A0                     __end_of_PWM_Init:	
  3763                           
  3764                           	psect	text13
  3765  1315                     __ptext13:	
  3766 ;; *************** function _PWM_DutyCycle2 *****************
  3767 ;; Defined at:
  3768 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  valor           2    0[BANK1 ] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;		None               void
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       2       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          0       0       2       0       0
  3785 ;;      Totals:         0       0       4       0       0
  3786 ;;Total ram usage:        4 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    5
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _PWM_DutyCycle2
  3798  1315                     _PWM_DutyCycle2:	
  3799                           
  3800                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3804  1315  1683               	bsf	3,5	;RP0=1, select bank1
  3805  1316  1303               	bcf	3,6	;RP1=0, select bank1
  3806  1317  084B               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3807  1318  00CD               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3808  1319  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  3809  131A  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  3810  131B  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3811  131C  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3812  131D  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  3813  131E  0D4D               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3814  131F  0CCD               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3815  1320  0CCC               	rrf	??_PWM_DutyCycle2^(0+128),f
  3816  1321  084C               	movf	??_PWM_DutyCycle2^(0+128),w
  3817  1322  1283               	bcf	3,5	;RP0=0, select bank0
  3818  1323  1303               	bcf	3,6	;RP1=0, select bank0
  3819  1324  009B               	movwf	27	;volatile
  3820                           
  3821                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3822  1325  1683               	bsf	3,5	;RP0=1, select bank1
  3823  1326  1303               	bcf	3,6	;RP1=0, select bank1
  3824  1327  084A               	movf	PWM_DutyCycle2@valor^(0+128),w
  3825  1328  00CC               	movwf	??_PWM_DutyCycle2^(0+128)
  3826  1329  3003               	movlw	3
  3827  132A                     u3555:	
  3828  132A  1003               	clrc
  3829  132B  0DCC               	rlf	??_PWM_DutyCycle2^(0+128),f
  3830  132C  3EFF               	addlw	-1
  3831  132D  1D03               	skipz
  3832  132E  2B2A               	goto	u3555
  3833  132F  1003               	clrc
  3834  1330  0D4C               	rlf	??_PWM_DutyCycle2^(0+128),w
  3835  1331  380C               	iorlw	12
  3836  1332  1283               	bcf	3,5	;RP0=0, select bank0
  3837  1333  1303               	bcf	3,6	;RP1=0, select bank0
  3838  1334  009D               	movwf	29	;volatile
  3839  1335  0008               	return
  3840  1336                     __end_of_PWM_DutyCycle2:	
  3841                           
  3842                           	psect	text14
  3843  12F4                     __ptext14:	
  3844 ;; *************** function _PWM_DutyCycle1 *****************
  3845 ;; Defined at:
  3846 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  valor           2    0[BANK1 ] int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;		None               void
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       0       2       0       0
  3861 ;;      Locals:         0       0       0       0       0
  3862 ;;      Temps:          0       0       2       0       0
  3863 ;;      Totals:         0       0       4       0       0
  3864 ;;Total ram usage:        4 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    5
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _PWM_DutyCycle1
  3876  12F4                     _PWM_DutyCycle1:	
  3877                           
  3878                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3879                           
  3880                           ;incstack = 0
  3881                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3882  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  3883  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  3884  12F6  084B               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3885  12F7  00CD               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3886  12F8  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  3887  12F9  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  3888  12FA  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3889  12FB  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3890  12FC  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  3891  12FD  0D4D               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3892  12FE  0CCD               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3893  12FF  0CCC               	rrf	??_PWM_DutyCycle1^(0+128),f
  3894  1300  084C               	movf	??_PWM_DutyCycle1^(0+128),w
  3895  1301  1283               	bcf	3,5	;RP0=0, select bank0
  3896  1302  1303               	bcf	3,6	;RP1=0, select bank0
  3897  1303  0095               	movwf	21	;volatile
  3898                           
  3899                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3900  1304  1683               	bsf	3,5	;RP0=1, select bank1
  3901  1305  1303               	bcf	3,6	;RP1=0, select bank1
  3902  1306  084A               	movf	PWM_DutyCycle1@valor^(0+128),w
  3903  1307  00CC               	movwf	??_PWM_DutyCycle1^(0+128)
  3904  1308  3003               	movlw	3
  3905  1309                     u3615:	
  3906  1309  1003               	clrc
  3907  130A  0DCC               	rlf	??_PWM_DutyCycle1^(0+128),f
  3908  130B  3EFF               	addlw	-1
  3909  130C  1D03               	skipz
  3910  130D  2B09               	goto	u3615
  3911  130E  1003               	clrc
  3912  130F  0D4C               	rlf	??_PWM_DutyCycle1^(0+128),w
  3913  1310  380C               	iorlw	12
  3914  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3915  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3916  1313  0097               	movwf	23	;volatile
  3917  1314  0008               	return
  3918  1315                     __end_of_PWM_DutyCycle1:	
  3919                           
  3920                           	psect	text15
  3921  13EE                     __ptext15:	
  3922 ;; *************** function _LCD_WriteString *****************
  3923 ;; Defined at:
  3924 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3927 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3928 ;;		 -> STR_13(17), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       2       0       0
  3941 ;;      Locals:         0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         0       0       2       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    6
  3947 ;; This function calls:
  3948 ;;		_LCD_WriteData
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _LCD_WriteString
  3956  13EE                     _LCD_WriteString:	
  3957  13EE                     l3000:	
  3958                           ;lcd.c: 63: while(*Str != '\0')
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3962                           
  3963  13EE  1683               	bsf	3,5	;RP0=1, select bank1
  3964  13EF  1303               	bcf	3,6	;RP1=0, select bank1
  3965  13F0  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3966  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  3967  13F2  1303               	bcf	3,6	;RP1=0, select bank0
  3968  13F3  00FF               	movwf	127
  3969  13F4  1683               	bsf	3,5	;RP0=1, select bank1
  3970  13F5  1303               	bcf	3,6	;RP1=0, select bank1
  3971  13F6  084C               	movf	LCD_WriteString@Str^(0+128),w
  3972  13F7  0084               	movwf	4
  3973  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  3974  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  3975  13FA  120A  158A  2000  160A  118A  	fcall	stringtab
  3976  13FF  3800               	iorlw	0
  3977  1400  1903               	btfsc	3,2
  3978  1401  0008               	return
  3979                           
  3980                           ;lcd.c: 64: {
  3981                           ;lcd.c: 65: LCD_WriteData(*Str);
  3982  1402  1683               	bsf	3,5	;RP0=1, select bank1
  3983  1403  1303               	bcf	3,6	;RP1=0, select bank1
  3984  1404  084D               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3985  1405  1283               	bcf	3,5	;RP0=0, select bank0
  3986  1406  1303               	bcf	3,6	;RP1=0, select bank0
  3987  1407  00FF               	movwf	127
  3988  1408  1683               	bsf	3,5	;RP0=1, select bank1
  3989  1409  1303               	bcf	3,6	;RP1=0, select bank1
  3990  140A  084C               	movf	LCD_WriteString@Str^(0+128),w
  3991  140B  0084               	movwf	4
  3992  140C  1283               	bcf	3,5	;RP0=0, select bank0
  3993  140D  1303               	bcf	3,6	;RP1=0, select bank0
  3994  140E  120A  158A  2000  160A  118A  	fcall	stringtab
  3995  1413  160A  118A  2269  160A  118A  	fcall	_LCD_WriteData
  3996                           
  3997                           ;lcd.c: 66: Str++;
  3998  1418  3001               	movlw	1
  3999  1419  1683               	bsf	3,5	;RP0=1, select bank1
  4000  141A  1303               	bcf	3,6	;RP1=0, select bank1
  4001  141B  07CC               	addwf	LCD_WriteString@Str^(0+128),f
  4002  141C  1803               	skipnc
  4003  141D  0ACD               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4004  141E  2BEE               	goto	l3000
  4005  141F                     __end_of_LCD_WriteString:	
  4006                           
  4007                           	psect	text16
  4008  1269                     __ptext16:	
  4009 ;; *************** function _LCD_WriteData *****************
  4010 ;; Defined at:
  4011 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  Byte            1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  Byte            1    1[BANK1 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         0       0       1       0       0
  4027 ;;      Temps:          0       0       1       0       0
  4028 ;;      Totals:         0       0       2       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    5
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_LCD_WriteString
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _LCD_WriteData
  4041  1269                     _LCD_WriteData:	
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _LCD_WriteData: [wreg]
  4045                           ;LCD_WriteData@Byte stored from wreg
  4046  1269  1683               	bsf	3,5	;RP0=1, select bank1
  4047  126A  1303               	bcf	3,6	;RP1=0, select bank1
  4048  126B  00CB               	movwf	LCD_WriteData@Byte^(0+128)
  4049                           
  4050                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4051  126C  1283               	bcf	3,5	;RP0=0, select bank0
  4052  126D  1303               	bcf	3,6	;RP1=0, select bank0
  4053  126E  1409               	bsf	9,0	;volatile
  4054                           
  4055                           ;lcd.c: 51: PORTD = Byte;
  4056  126F  1683               	bsf	3,5	;RP0=1, select bank1
  4057  1270  1303               	bcf	3,6	;RP1=0, select bank1
  4058  1271  084B               	movf	LCD_WriteData@Byte^(0+128),w
  4059  1272  1283               	bcf	3,5	;RP0=0, select bank0
  4060  1273  1303               	bcf	3,6	;RP1=0, select bank0
  4061  1274  0088               	movwf	8	;volatile
  4062                           
  4063                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4064  1275  1489               	bsf	9,1	;volatile
  4065                           
  4066                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4067  1276  303D               	movlw	61
  4068  1277  1683               	bsf	3,5	;RP0=1, select bank1
  4069  1278  1303               	bcf	3,6	;RP1=0, select bank1
  4070  1279  00CA               	movwf	??_LCD_WriteData^(0+128)
  4071  127A                     u4127:	
  4072  127A  0BCA               	decfsz	??_LCD_WriteData^(0+128),f
  4073  127B  2A7A               	goto	u4127
  4074                           
  4075                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4076  127C  1283               	bcf	3,5	;RP0=0, select bank0
  4077  127D  1303               	bcf	3,6	;RP1=0, select bank0
  4078  127E  1089               	bcf	9,1	;volatile
  4079  127F  0008               	return
  4080  1280                     __end_of_LCD_WriteData:	
  4081                           
  4082                           	psect	text17
  4083  0793                     __ptext17:	
  4084 ;; *************** function _LCD_Init *****************
  4085 ;; Defined at:
  4086 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       2       0       0
  4103 ;;      Totals:         0       0       2       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    6
  4107 ;; This function calls:
  4108 ;;		_LCD_WriteCmd
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _LCD_Init
  4116  0793                     _LCD_Init:	
  4117                           
  4118                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4122  0793  1683               	bsf	3,5	;RP0=1, select bank1
  4123  0794  1303               	bcf	3,6	;RP1=0, select bank1
  4124  0795  119F               	bcf	31,3	;volatile
  4125                           
  4126                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4127  0796  151F               	bsf	31,2	;volatile
  4128                           
  4129                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4130  0797  109F               	bcf	31,1	;volatile
  4131                           
  4132                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4133  0798  101F               	bcf	31,0	;volatile
  4134                           
  4135                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4136  0799  305A               	movlw	90
  4137  079A  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4138  079B  30C3               	movlw	195
  4139  079C  00CC               	movwf	??_LCD_Init^(0+128)
  4140  079D                     u4137:	
  4141  079D  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4142  079E  2F9D               	goto	u4137
  4143  079F  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4144  07A0  2F9D               	goto	u4137
  4145                           
  4146                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4147  07A1  3030               	movlw	48
  4148  07A2  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4149                           
  4150                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4151  07A7  3018               	movlw	24
  4152  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  4153  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  4154  07AA  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4155  07AB  30EF               	movlw	239
  4156  07AC  00CC               	movwf	??_LCD_Init^(0+128)
  4157  07AD                     u4147:	
  4158  07AD  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4159  07AE  2FAD               	goto	u4147
  4160  07AF  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4161  07B0  2FAD               	goto	u4147
  4162                           
  4163                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4164  07B1  3030               	movlw	48
  4165  07B2  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4166                           
  4167                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4168  07B7  3099               	movlw	153
  4169  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  4170  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  4171  07BA  00CC               	movwf	??_LCD_Init^(0+128)
  4172  07BB                     u4157:	
  4173  07BB  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4174  07BC  2FBB               	goto	u4157
  4175                           
  4176                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4177  07BD  3030               	movlw	48
  4178  07BE  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4179                           
  4180                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4181  07C3  303D               	movlw	61
  4182  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  4183  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  4184  07C6  00CC               	movwf	??_LCD_Init^(0+128)
  4185  07C7                     u4167:	
  4186  07C7  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4187  07C8  2FC7               	goto	u4167
  4188                           
  4189                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4190  07C9  3038               	movlw	56
  4191  07CA  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4192                           
  4193                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4194  07CF  303D               	movlw	61
  4195  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4196  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4197  07D2  00CC               	movwf	??_LCD_Init^(0+128)
  4198  07D3                     u4177:	
  4199  07D3  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4200  07D4  2FD3               	goto	u4177
  4201                           
  4202                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4203  07D5  3001               	movlw	1
  4204  07D6  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4205                           
  4206                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4207  07DB  300C               	movlw	12
  4208  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  4209  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  4210  07DE  00CD               	movwf	(??_LCD_Init^(0+128)+1)
  4211  07DF  30F7               	movlw	247
  4212  07E0  00CC               	movwf	??_LCD_Init^(0+128)
  4213  07E1                     u4187:	
  4214  07E1  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4215  07E2  2FE1               	goto	u4187
  4216  07E3  0BCD               	decfsz	(??_LCD_Init^(0+128)+1),f
  4217  07E4  2FE1               	goto	u4187
  4218                           
  4219                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4220  07E5  300C               	movlw	12
  4221  07E6  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4222                           
  4223                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4224  07EB  303D               	movlw	61
  4225  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4226  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  4227  07EE  00CC               	movwf	??_LCD_Init^(0+128)
  4228  07EF                     u4197:	
  4229  07EF  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4230  07F0  2FEF               	goto	u4197
  4231                           
  4232                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4233  07F1  3006               	movlw	6
  4234  07F2  160A  118A  2252  120A  118A  	fcall	_LCD_WriteCmd
  4235                           
  4236                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4237  07F7  303D               	movlw	61
  4238  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  4239  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  4240  07FA  00CC               	movwf	??_LCD_Init^(0+128)
  4241  07FB                     u4207:	
  4242  07FB  0BCC               	decfsz	??_LCD_Init^(0+128),f
  4243  07FC  2FFB               	goto	u4207
  4244  07FD  0008               	return
  4245  07FE                     __end_of_LCD_Init:	
  4246                           
  4247                           	psect	text18
  4248  12D4                     __ptext18:	
  4249 ;; *************** function _LCD_Cursor *****************
  4250 ;; Defined at:
  4251 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  Row             1    wreg     unsigned char 
  4254 ;;  Col             1    0[BANK1 ] unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  Row             1    2[BANK1 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;		None               void
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       1       0       0
  4267 ;;      Locals:         0       0       1       0       0
  4268 ;;      Temps:          0       0       1       0       0
  4269 ;;      Totals:         0       0       3       0       0
  4270 ;;Total ram usage:        3 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    5
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _LCD_Cursor
  4282  12D4                     _LCD_Cursor:	
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4286                           ;LCD_Cursor@Row stored from wreg
  4287  12D4  1683               	bsf	3,5	;RP0=1, select bank1
  4288  12D5  1303               	bcf	3,6	;RP1=0, select bank1
  4289  12D6  00CC               	movwf	LCD_Cursor@Row^(0+128)
  4290                           
  4291                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4292  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  4293  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  4294  12D9  1009               	bcf	9,0	;volatile
  4295                           
  4296                           ;lcd.c: 14: if (Row == 0)
  4297  12DA  1683               	bsf	3,5	;RP0=1, select bank1
  4298  12DB  1303               	bcf	3,6	;RP1=0, select bank1
  4299  12DC  08CC               	movf	LCD_Cursor@Row^(0+128),f
  4300  12DD  1D03               	skipz
  4301  12DE  2AE2               	goto	l2986
  4302                           
  4303                           ;lcd.c: 15: {
  4304                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4305  12DF  084A               	movf	LCD_Cursor@Col^(0+128),w
  4306  12E0  3E80               	addlw	128
  4307  12E1  2AE6               	goto	L2
  4308  12E2                     l2986:	
  4309                           ;lcd.c: 17: }
  4310                           
  4311                           
  4312                           ;lcd.c: 18: else
  4313                           ;lcd.c: 19: {
  4314                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4315  12E2  1683               	bsf	3,5	;RP0=1, select bank1
  4316  12E3  1303               	bcf	3,6	;RP1=0, select bank1
  4317  12E4  084A               	movf	LCD_Cursor@Col^(0+128),w
  4318  12E5  3EC0               	addlw	192
  4319  12E6                     L2:	
  4320  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  4321  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  4322  12E8  0088               	movwf	8	;volatile
  4323                           
  4324                           ;lcd.c: 21: }
  4325                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4326  12E9  1489               	bsf	9,1	;volatile
  4327                           
  4328                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4329  12EA  303D               	movlw	61
  4330  12EB  1683               	bsf	3,5	;RP0=1, select bank1
  4331  12EC  1303               	bcf	3,6	;RP1=0, select bank1
  4332  12ED  00CB               	movwf	??_LCD_Cursor^(0+128)
  4333  12EE                     u4217:	
  4334  12EE  0BCB               	decfsz	??_LCD_Cursor^(0+128),f
  4335  12EF  2AEE               	goto	u4217
  4336                           
  4337                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4338  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  4339  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  4340  12F2  1089               	bcf	9,1	;volatile
  4341  12F3  0008               	return
  4342  12F4                     __end_of_LCD_Cursor:	
  4343                           
  4344                           	psect	text19
  4345  13C5                     __ptext19:	
  4346 ;; *************** function _LCD_Clear *****************
  4347 ;; Defined at:
  4348 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, pclath, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0
  4364 ;;      Temps:          0       0       2       0       0
  4365 ;;      Totals:         0       0       2       0       0
  4366 ;;Total ram usage:        2 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    6
  4369 ;; This function calls:
  4370 ;;		_LCD_WriteCmd
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _LCD_Clear
  4378  13C5                     _LCD_Clear:	
  4379                           
  4380                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4384  13C5  3001               	movlw	1
  4385  13C6  160A  118A  2252  160A  118A  	fcall	_LCD_WriteCmd
  4386                           
  4387                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4388  13CB  300C               	movlw	12
  4389  13CC  1683               	bsf	3,5	;RP0=1, select bank1
  4390  13CD  1303               	bcf	3,6	;RP1=0, select bank1
  4391  13CE  00CD               	movwf	(??_LCD_Clear^(0+128)+1)
  4392  13CF  30F7               	movlw	247
  4393  13D0  00CC               	movwf	??_LCD_Clear^(0+128)
  4394  13D1                     u4227:	
  4395  13D1  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4396  13D2  2BD1               	goto	u4227
  4397  13D3  0BCD               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4398  13D4  2BD1               	goto	u4227
  4399                           
  4400                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4401  13D5  300C               	movlw	12
  4402  13D6  160A  118A  2252  160A  118A  	fcall	_LCD_WriteCmd
  4403                           
  4404                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4405  13DB  303D               	movlw	61
  4406  13DC  1683               	bsf	3,5	;RP0=1, select bank1
  4407  13DD  1303               	bcf	3,6	;RP1=0, select bank1
  4408  13DE  00CC               	movwf	??_LCD_Clear^(0+128)
  4409  13DF                     u4237:	
  4410  13DF  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4411  13E0  2BDF               	goto	u4237
  4412                           
  4413                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4414  13E1  3006               	movlw	6
  4415  13E2  160A  118A  2252  160A  118A  	fcall	_LCD_WriteCmd
  4416                           
  4417                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4418  13E7  303D               	movlw	61
  4419  13E8  1683               	bsf	3,5	;RP0=1, select bank1
  4420  13E9  1303               	bcf	3,6	;RP1=0, select bank1
  4421  13EA  00CC               	movwf	??_LCD_Clear^(0+128)
  4422  13EB                     u4247:	
  4423  13EB  0BCC               	decfsz	??_LCD_Clear^(0+128),f
  4424  13EC  2BEB               	goto	u4247
  4425  13ED  0008               	return
  4426  13EE                     __end_of_LCD_Clear:	
  4427                           
  4428                           	psect	text20
  4429  1252                     __ptext20:	
  4430 ;; *************** function _LCD_WriteCmd *****************
  4431 ;; Defined at:
  4432 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  Byte            1    wreg     unsigned char 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  Byte            1    1[BANK1 ] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         0       0       0       0       0
  4447 ;;      Locals:         0       0       1       0       0
  4448 ;;      Temps:          0       0       1       0       0
  4449 ;;      Totals:         0       0       2       0       0
  4450 ;;Total ram usage:        2 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    5
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_LCD_Clear
  4457 ;;		_LCD_Init
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _LCD_WriteCmd
  4463  1252                     _LCD_WriteCmd:	
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _LCD_WriteCmd: [wreg]
  4467                           ;LCD_WriteCmd@Byte stored from wreg
  4468  1252  1683               	bsf	3,5	;RP0=1, select bank1
  4469  1253  1303               	bcf	3,6	;RP1=0, select bank1
  4470  1254  00CB               	movwf	LCD_WriteCmd@Byte^(0+128)
  4471                           
  4472                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4473  1255  1283               	bcf	3,5	;RP0=0, select bank0
  4474  1256  1303               	bcf	3,6	;RP1=0, select bank0
  4475  1257  1009               	bcf	9,0	;volatile
  4476                           
  4477                           ;lcd.c: 36: PORTD = Byte;
  4478  1258  1683               	bsf	3,5	;RP0=1, select bank1
  4479  1259  1303               	bcf	3,6	;RP1=0, select bank1
  4480  125A  084B               	movf	LCD_WriteCmd@Byte^(0+128),w
  4481  125B  1283               	bcf	3,5	;RP0=0, select bank0
  4482  125C  1303               	bcf	3,6	;RP1=0, select bank0
  4483  125D  0088               	movwf	8	;volatile
  4484                           
  4485                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4486  125E  1489               	bsf	9,1	;volatile
  4487                           
  4488                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4489  125F  303D               	movlw	61
  4490  1260  1683               	bsf	3,5	;RP0=1, select bank1
  4491  1261  1303               	bcf	3,6	;RP1=0, select bank1
  4492  1262  00CA               	movwf	??_LCD_WriteCmd^(0+128)
  4493  1263                     u4257:	
  4494  1263  0BCA               	decfsz	??_LCD_WriteCmd^(0+128),f
  4495  1264  2A63               	goto	u4257
  4496                           
  4497                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4498  1265  1283               	bcf	3,5	;RP0=0, select bank0
  4499  1266  1303               	bcf	3,6	;RP1=0, select bank0
  4500  1267  1089               	bcf	9,1	;volatile
  4501  1268  0008               	return
  4502  1269                     __end_of_LCD_WriteCmd:	
  4503                           
  4504                           	psect	text21
  4505  122C                     __ptext21:	
  4506 ;; *************** function _ADC_Init *****************
  4507 ;; Defined at:
  4508 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;		None               void
  4515 ;; Registers used:
  4516 ;;		None
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    5
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _ADC_Init
  4538  122C                     _ADC_Init:	
  4539                           
  4540                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _ADC_Init: []
  4544  122C  1683               	bsf	3,5	;RP0=1, select bank1
  4545  122D  1303               	bcf	3,6	;RP1=0, select bank1
  4546  122E  179F               	bsf	31,7	;volatile
  4547                           
  4548                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4549  122F  159F               	bsf	31,3	;volatile
  4550                           
  4551                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4552  1230  151F               	bsf	31,2	;volatile
  4553                           
  4554                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4555  1231  149F               	bsf	31,1	;volatile
  4556                           
  4557                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4558  1232  101F               	bcf	31,0	;volatile
  4559                           
  4560                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4561  1233  1283               	bcf	3,5	;RP0=0, select bank0
  4562  1234  1303               	bcf	3,6	;RP1=0, select bank0
  4563  1235  179F               	bsf	31,7	;volatile
  4564                           
  4565                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4566  1236  131F               	bcf	31,6	;volatile
  4567                           
  4568                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4569  1237  1683               	bsf	3,5	;RP0=1, select bank1
  4570  1238  1303               	bcf	3,6	;RP1=0, select bank1
  4571  1239  130C               	bcf	12,6	;volatile
  4572                           
  4573                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4574  123A  1283               	bcf	3,5	;RP0=0, select bank0
  4575  123B  1303               	bcf	3,6	;RP1=0, select bank0
  4576  123C  130C               	bcf	12,6	;volatile
  4577  123D  0008               	return
  4578  123E                     __end_of_ADC_Init:	
  4579                           
  4580                           	psect	text22
  4581  0E65                     __ptext22:	
  4582 ;; *************** function _ISR *****************
  4583 ;; Defined at:
  4584 ;;		line 305 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0
  4600 ;;      Temps:          0       4       0       0       0
  4601 ;;      Totals:         0       4       0       0       0
  4602 ;;Total ram usage:        4 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    4
  4605 ;; This function calls:
  4606 ;;		_Fuzzy
  4607 ;;		_USART_ReceiveChar
  4608 ;;		___lwtoft
  4609 ;;		i1_PWM_DutyCycle2
  4610 ;;		i1_TIMER0_Set
  4611 ;;		i1_USART_WriteString
  4612 ;;		i1___lwdiv
  4613 ;;		i1___wmul
  4614 ;; This function is called by:
  4615 ;;		Interrupt level 1
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _ISR
  4621  0E65                     _ISR:	
  4622                           
  4623                           ;main.c: 308: if (PIR1bits.RCIF)
  4624  0E65  1E8C               	btfss	12,5	;volatile
  4625  0E66  2F8E               	goto	i1l3254
  4626                           
  4627                           ;main.c: 309: {
  4628                           ;main.c: 310: if (USART_ReceiveChar() == '0')
  4629  0E67  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4630  0E6C  3A30               	xorlw	48
  4631  0E6D  1D03               	skipz
  4632  0E6E  2E88               	goto	i1l3184
  4633                           
  4634                           ;main.c: 311: {
  4635                           ;main.c: 312: USART_WriteString("\n\rdesligado\n\r");
  4636  0E6F  30A0               	movlw	low (STR_1-__stringbase)
  4637  0E70  00F1               	movwf	i1USART_WriteString@str
  4638  0E71  3080               	movlw	128
  4639  0E72  00F2               	movwf	i1USART_WriteString@str+1
  4640  0E73  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4641                           
  4642                           ;main.c: 313: pwm = 0;
  4643  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0E7A  01EC               	clrf	_pwm
  4646  0E7B  01ED               	clrf	_pwm+1
  4647                           
  4648                           ;main.c: 314: PWM_DutyCycle2(pwm);
  4649  0E7C  086D               	movf	_pwm+1,w
  4650  0E7D  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4651  0E7E  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4652  0E7F  086C               	movf	_pwm,w
  4653  0E80  01F0               	clrf	i1PWM_DutyCycle2@valor
  4654  0E81  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4655  0E82  160A  118A  2280  120A  158A  	fcall	i1_PWM_DutyCycle2
  4656                           
  4657                           ;main.c: 315: return;
  4658  0E87  2FF3               	goto	i1l180
  4659  0E88                     i1l3184:	
  4660                           
  4661                           ;main.c: 316: }
  4662                           ;main.c: 318: if (USART_ReceiveChar() == '1')
  4663  0E88  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4664  0E8D  3A31               	xorlw	49
  4665  0E8E  1D03               	skipz
  4666  0E8F  2E9F               	goto	i1l3190
  4667                           
  4668                           ;main.c: 319: {
  4669                           ;main.c: 320: USART_WriteString("\n\rpwm = \n\r");
  4670  0E90  30AE               	movlw	low (STR_2-__stringbase)
  4671  0E91  00F1               	movwf	i1USART_WriteString@str
  4672  0E92  3080               	movlw	128
  4673  0E93  00F2               	movwf	i1USART_WriteString@str+1
  4674  0E94  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4675                           
  4676                           ;main.c: 321: setpointUI = 720;
  4677  0E99  30D0               	movlw	208
  4678  0E9A  1683               	bsf	3,5	;RP0=1, select bank1
  4679  0E9B  1303               	bcf	3,6	;RP1=0, select bank1
  4680  0E9C  00C2               	movwf	_setpointUI^(0+128)
  4681  0E9D  3002               	movlw	2
  4682  0E9E  00C3               	movwf	(_setpointUI^(0+128)+1)
  4683  0E9F                     i1l3190:	
  4684                           
  4685                           ;main.c: 323: }
  4686                           ;main.c: 325: if (USART_ReceiveChar() == '2')
  4687  0E9F  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4688  0EA4  3A32               	xorlw	50
  4689  0EA5  1D03               	skipz
  4690  0EA6  2EB6               	goto	i1l3196
  4691                           
  4692                           ;main.c: 326: {
  4693                           ;main.c: 327: USART_WriteString("\n\rpwm = \n\r");
  4694  0EA7  30AE               	movlw	low (STR_2-__stringbase)
  4695  0EA8  00F1               	movwf	i1USART_WriteString@str
  4696  0EA9  3080               	movlw	128
  4697  0EAA  00F2               	movwf	i1USART_WriteString@str+1
  4698  0EAB  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4699                           
  4700                           ;main.c: 328: setpointUI = 1450;
  4701  0EB0  30AA               	movlw	170
  4702  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  4703  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  4704  0EB3  00C2               	movwf	_setpointUI^(0+128)
  4705  0EB4  3005               	movlw	5
  4706  0EB5  00C3               	movwf	(_setpointUI^(0+128)+1)
  4707  0EB6                     i1l3196:	
  4708                           
  4709                           ;main.c: 330: }
  4710                           ;main.c: 332: if (USART_ReceiveChar() == '3')
  4711  0EB6  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4712  0EBB  3A33               	xorlw	51
  4713  0EBC  1D03               	skipz
  4714  0EBD  2ED4               	goto	i1l3206
  4715                           
  4716                           ;main.c: 333: {
  4717                           ;main.c: 334: USART_WriteString("\n\rpwm = \n\r");
  4718  0EBE  30AE               	movlw	low (STR_2-__stringbase)
  4719  0EBF  00F1               	movwf	i1USART_WriteString@str
  4720  0EC0  3080               	movlw	128
  4721  0EC1  00F2               	movwf	i1USART_WriteString@str+1
  4722  0EC2  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4723                           
  4724                           ;main.c: 335: setpointUI = 2828;
  4725  0EC7  300C               	movlw	12
  4726  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  4727  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  4728  0ECA  00C2               	movwf	_setpointUI^(0+128)
  4729  0ECB  300B               	movlw	11
  4730  0ECC  00C3               	movwf	(_setpointUI^(0+128)+1)
  4731                           
  4732                           ;main.c: 337: if(PORTBbits.RB0 == 0)
  4733  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0ECF  1806               	btfsc	6,0	;volatile
  4736  0ED0  2ED3               	goto	i1l184
  4737                           
  4738                           ;main.c: 338: {
  4739                           ;main.c: 339: PORTBbits.RB0 = 1;
  4740  0ED1  1406               	bsf	6,0	;volatile
  4741                           
  4742                           ;main.c: 340: }else{
  4743  0ED2  2ED4               	goto	i1l3206
  4744  0ED3                     i1l184:	
  4745                           
  4746                           ;main.c: 341: PORTBbits.RB0 = 0;
  4747  0ED3  1006               	bcf	6,0	;volatile
  4748  0ED4                     i1l3206:	
  4749                           
  4750                           ;main.c: 342: }
  4751                           ;main.c: 343: }
  4752                           ;main.c: 345: if (USART_ReceiveChar() == '4')
  4753  0ED4  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4754  0ED9  3A34               	xorlw	52
  4755  0EDA  1D03               	skipz
  4756  0EDB  2EFE               	goto	i1l3218
  4757                           
  4758                           ;main.c: 346: {
  4759                           ;main.c: 347: USART_WriteString("\n\rpwm = \n\r");
  4760  0EDC  30AE               	movlw	low (STR_2-__stringbase)
  4761  0EDD  00F1               	movwf	i1USART_WriteString@str
  4762  0EDE  3080               	movlw	128
  4763  0EDF  00F2               	movwf	i1USART_WriteString@str+1
  4764  0EE0  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4765                           
  4766                           ;main.c: 348: pwm = 3256;
  4767  0EE5  30B8               	movlw	184
  4768  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4770  0EE8  00EC               	movwf	_pwm
  4771  0EE9  300C               	movlw	12
  4772  0EEA  00ED               	movwf	_pwm+1
  4773                           
  4774                           ;main.c: 349: PWM_DutyCycle2(pwm);
  4775  0EEB  086D               	movf	_pwm+1,w
  4776  0EEC  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4777  0EED  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4778  0EEE  086C               	movf	_pwm,w
  4779  0EEF  01F0               	clrf	i1PWM_DutyCycle2@valor
  4780  0EF0  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4781  0EF1  160A  118A  2280  120A  158A  	fcall	i1_PWM_DutyCycle2
  4782                           
  4783                           ;main.c: 350: if(PORTBbits.RB1 == 0)
  4784  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0EF8  1886               	btfsc	6,1	;volatile
  4787  0EF9  2EFC               	goto	i1l187
  4788                           
  4789                           ;main.c: 351: {
  4790                           ;main.c: 352: PORTBbits.RB1 = 1;
  4791  0EFA  1486               	bsf	6,1	;volatile
  4792                           
  4793                           ;main.c: 353: }else{
  4794  0EFB  2FF3               	goto	i1l180
  4795  0EFC                     i1l187:	
  4796                           
  4797                           ;main.c: 354: PORTBbits.RB1 = 0;
  4798  0EFC  1086               	bcf	6,1	;volatile
  4799                           
  4800                           ;main.c: 355: }
  4801                           ;main.c: 356: return;
  4802  0EFD  2FF3               	goto	i1l180
  4803  0EFE                     i1l3218:	
  4804                           
  4805                           ;main.c: 357: }
  4806                           ;main.c: 359: if (USART_ReceiveChar() == '5')
  4807  0EFE  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4808  0F03  3A35               	xorlw	53
  4809  0F04  1D03               	skipz
  4810  0F05  2F15               	goto	i1l3224
  4811                           
  4812                           ;main.c: 360: {
  4813                           ;main.c: 361: USART_WriteString("\n\rpwm = \n\r");
  4814  0F06  30AE               	movlw	low (STR_2-__stringbase)
  4815  0F07  00F1               	movwf	i1USART_WriteString@str
  4816  0F08  3080               	movlw	128
  4817  0F09  00F2               	movwf	i1USART_WriteString@str+1
  4818  0F0A  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4819                           
  4820                           ;main.c: 362: setpointUI = 4512;
  4821  0F0F  30A0               	movlw	160
  4822  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  4823  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  4824  0F12  00C2               	movwf	_setpointUI^(0+128)
  4825  0F13  3011               	movlw	17
  4826  0F14  00C3               	movwf	(_setpointUI^(0+128)+1)
  4827  0F15                     i1l3224:	
  4828                           
  4829                           ;main.c: 364: }
  4830                           ;main.c: 366: if (USART_ReceiveChar() == '6')
  4831  0F15  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4832  0F1A  3A36               	xorlw	54
  4833  0F1B  1D03               	skipz
  4834  0F1C  2F2C               	goto	i1l3230
  4835                           
  4836                           ;main.c: 367: {
  4837                           ;main.c: 368: USART_WriteString("\n\rpwm = 768\n\r");
  4838  0F1D  3092               	movlw	low (STR_7-__stringbase)
  4839  0F1E  00F1               	movwf	i1USART_WriteString@str
  4840  0F1F  3080               	movlw	128
  4841  0F20  00F2               	movwf	i1USART_WriteString@str+1
  4842  0F21  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4843                           
  4844                           ;main.c: 369: setpointUI = 5768;
  4845  0F26  3088               	movlw	136
  4846  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  4847  0F28  1303               	bcf	3,6	;RP1=0, select bank1
  4848  0F29  00C2               	movwf	_setpointUI^(0+128)
  4849  0F2A  3016               	movlw	22
  4850  0F2B  00C3               	movwf	(_setpointUI^(0+128)+1)
  4851  0F2C                     i1l3230:	
  4852                           
  4853                           ;main.c: 371: }
  4854                           ;main.c: 373: if (USART_ReceiveChar() == '7')
  4855  0F2C  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4856  0F31  3A37               	xorlw	55
  4857  0F32  1D03               	skipz
  4858  0F33  2F43               	goto	i1l3236
  4859                           
  4860                           ;main.c: 374: {
  4861                           ;main.c: 375: USART_WriteString("\n\rpwm = 896\n\r");
  4862  0F34  3084               	movlw	low (STR_8-__stringbase)
  4863  0F35  00F1               	movwf	i1USART_WriteString@str
  4864  0F36  3080               	movlw	128
  4865  0F37  00F2               	movwf	i1USART_WriteString@str+1
  4866  0F38  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4867                           
  4868                           ;main.c: 376: setpointUI = 6896;
  4869  0F3D  30F0               	movlw	240
  4870  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0F40  00C2               	movwf	_setpointUI^(0+128)
  4873  0F41  301A               	movlw	26
  4874  0F42  00C3               	movwf	(_setpointUI^(0+128)+1)
  4875  0F43                     i1l3236:	
  4876                           
  4877                           ;main.c: 378: }
  4878                           ;main.c: 380: if (USART_ReceiveChar() == '8')
  4879  0F43  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4880  0F48  3A38               	xorlw	56
  4881  0F49  1D03               	skipz
  4882  0F4A  2F5A               	goto	i1l3242
  4883                           
  4884                           ;main.c: 381: {
  4885                           ;main.c: 382: USART_WriteString("\n\rpwm = \n\r");
  4886  0F4B  30AE               	movlw	low (STR_2-__stringbase)
  4887  0F4C  00F1               	movwf	i1USART_WriteString@str
  4888  0F4D  3080               	movlw	128
  4889  0F4E  00F2               	movwf	i1USART_WriteString@str+1
  4890  0F4F  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4891                           
  4892                           ;main.c: 383: setpointUI = 8100;
  4893  0F54  30A4               	movlw	164
  4894  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  4895  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  4896  0F57  00C2               	movwf	_setpointUI^(0+128)
  4897  0F58  301F               	movlw	31
  4898  0F59  00C3               	movwf	(_setpointUI^(0+128)+1)
  4899  0F5A                     i1l3242:	
  4900                           
  4901                           ;main.c: 385: }
  4902                           ;main.c: 387: if (USART_ReceiveChar() == '9')
  4903  0F5A  160A  118A  229B  120A  158A  	fcall	_USART_ReceiveChar
  4904  0F5F  3A39               	xorlw	57
  4905  0F60  1D03               	skipz
  4906  0F61  2F71               	goto	i1l3248
  4907                           
  4908                           ;main.c: 388: {
  4909                           ;main.c: 389: USART_WriteString("\n\rpwm = 1023\n\r");
  4910  0F62  3075               	movlw	low (STR_10-__stringbase)
  4911  0F63  00F1               	movwf	i1USART_WriteString@str
  4912  0F64  3080               	movlw	128
  4913  0F65  00F2               	movwf	i1USART_WriteString@str+1
  4914  0F66  160A  118A  2336  120A  158A  	fcall	i1_USART_WriteString
  4915                           
  4916                           ;main.c: 390: setpointUI = 9000;
  4917  0F6B  3028               	movlw	40
  4918  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4919  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4920  0F6E  00C2               	movwf	_setpointUI^(0+128)
  4921  0F6F  3023               	movlw	35
  4922  0F70  00C3               	movwf	(_setpointUI^(0+128)+1)
  4923  0F71                     i1l3248:	
  4924                           
  4925                           ;main.c: 392: }
  4926                           ;main.c: 396: Fuzzy();
  4927  0F71  120A  118A  2053  120A  158A  	fcall	_Fuzzy
  4928                           
  4929                           ;main.c: 397: tf = setpointUI;
  4930  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  4931  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  4932  0F78  0843               	movf	(_setpointUI+1)^(0+128),w
  4933  0F79  01F9               	clrf	___lwtoft@c+1
  4934  0F7A  07F9               	addwf	___lwtoft@c+1,f
  4935  0F7B  0842               	movf	_setpointUI^(0+128),w
  4936  0F7C  01F8               	clrf	___lwtoft@c
  4937  0F7D  07F8               	addwf	___lwtoft@c,f
  4938  0F7E  160A  118A  223E  120A  158A  	fcall	___lwtoft
  4939  0F83  0878               	movf	?___lwtoft,w
  4940  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  4941  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  4942  0F86  00B2               	movwf	_tf^(0+128)
  4943  0F87  0879               	movf	?___lwtoft+1,w
  4944  0F88  00B3               	movwf	(_tf+1)^(0+128)
  4945  0F89  087A               	movf	?___lwtoft+2,w
  4946  0F8A  00B4               	movwf	(_tf+2)^(0+128)
  4947                           
  4948                           ;main.c: 399: PIR1bits.RCIF = 0;
  4949  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0F8D  128C               	bcf	12,5	;volatile
  4952  0F8E                     i1l3254:	
  4953                           
  4954                           ;main.c: 400: }
  4955                           ;main.c: 403: if (PIR1bits.ADIF)
  4956  0F8E  1B0C               	btfsc	12,6	;volatile
  4957                           
  4958                           ;main.c: 404: {
  4959                           ;main.c: 408: PIR1bits.ADIF = 0;
  4960  0F8F  130C               	bcf	12,6	;volatile
  4961                           
  4962                           ;main.c: 409: }
  4963                           ;main.c: 413: if (INTCONbits.T0IF)
  4964  0F90  1D0B               	btfss	11,2	;volatile
  4965  0F91  2FEF               	goto	i1l3280
  4966                           
  4967                           ;main.c: 414: {
  4968                           ;main.c: 416: TIMER0_Set(238);
  4969  0F92  30EE               	movlw	238
  4970  0F93  160A  118A  21E9  120A  158A  	fcall	i1_TIMER0_Set
  4971                           
  4972                           ;main.c: 419: if (contagens_tm0 < 499)
  4973  0F98  3001               	movlw	1
  4974  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0F9B  023D               	subwf	(_contagens_tm0+1)^(0+128),w
  4977  0F9C  30F3               	movlw	243
  4978  0F9D  1903               	skipnz
  4979  0F9E  023C               	subwf	_contagens_tm0^(0+128),w
  4980  0F9F  1803               	skipnc
  4981  0FA0  2FAB               	goto	i1l3266
  4982                           
  4983                           ;main.c: 420: {
  4984                           ;main.c: 422: contagens_tm0++;
  4985  0FA1  3001               	movlw	1
  4986  0FA2  07BC               	addwf	_contagens_tm0^(0+128),f
  4987  0FA3  1803               	skipnc
  4988  0FA4  0ABD               	incf	(_contagens_tm0+1)^(0+128),f
  4989  0FA5  3000               	movlw	0
  4990  0FA6  07BD               	addwf	(_contagens_tm0+1)^(0+128),f
  4991                           
  4992                           ;main.c: 425: PORTBbits.RB6 = 1;
  4993  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0FA9  1706               	bsf	6,6	;volatile
  4996                           
  4997                           ;main.c: 426: }
  4998  0FAA  2FEE               	goto	i1l3278
  4999  0FAB                     i1l3266:	
  5000                           
  5001                           ;main.c: 427: else
  5002                           ;main.c: 428: {
  5003                           ;main.c: 430: contagens_tm0 = 0;
  5004  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  5005  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  5006  0FAD  01BC               	clrf	_contagens_tm0^(0+128)
  5007  0FAE  01BD               	clrf	(_contagens_tm0+1)^(0+128)
  5008                           
  5009                           ;main.c: 433: pulsos = (TMR1H << 8) + TMR1L;
  5010  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0FB1  080F               	movf	15,w	;volatile
  5013  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  5014  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  5015  0FB4  01BF               	clrf	(_pulsos+1)^(0+128)
  5016  0FB5  07BF               	addwf	(_pulsos+1)^(0+128),f
  5017  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  5018  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  5019  0FB8  080E               	movf	14,w	;volatile
  5020  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  5021  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  5022  0FBB  01BE               	clrf	_pulsos^(0+128)
  5023  0FBC  07BE               	addwf	_pulsos^(0+128),f
  5024                           
  5025                           ;main.c: 434: rpm = ((pulsos / pas_cooler) * 120);
  5026  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0FBF  086F               	movf	_pas_cooler+1,w
  5029  0FC0  01F1               	clrf	i1___lwdiv@divisor+1
  5030  0FC1  07F1               	addwf	i1___lwdiv@divisor+1,f
  5031  0FC2  086E               	movf	_pas_cooler,w
  5032  0FC3  01F0               	clrf	i1___lwdiv@divisor
  5033  0FC4  07F0               	addwf	i1___lwdiv@divisor,f
  5034  0FC5  1683               	bsf	3,5	;RP0=1, select bank1
  5035  0FC6  1303               	bcf	3,6	;RP1=0, select bank1
  5036  0FC7  083F               	movf	(_pulsos+1)^(0+128),w
  5037  0FC8  01F3               	clrf	i1___lwdiv@dividend+1
  5038  0FC9  07F3               	addwf	i1___lwdiv@dividend+1,f
  5039  0FCA  083E               	movf	_pulsos^(0+128),w
  5040  0FCB  01F2               	clrf	i1___lwdiv@dividend
  5041  0FCC  07F2               	addwf	i1___lwdiv@dividend,f
  5042  0FCD  160A  118A  2486  120A  158A  	fcall	i1___lwdiv
  5043  0FD2  0871               	movf	?i1___lwdiv+1,w
  5044  0FD3  01F9               	clrf	i1___wmul@multiplier+1
  5045  0FD4  07F9               	addwf	i1___wmul@multiplier+1,f
  5046  0FD5  0870               	movf	?i1___lwdiv,w
  5047  0FD6  01F8               	clrf	i1___wmul@multiplier
  5048  0FD7  07F8               	addwf	i1___wmul@multiplier,f
  5049  0FD8  3078               	movlw	120
  5050  0FD9  00FA               	movwf	i1___wmul@multiplicand
  5051  0FDA  3000               	movlw	0
  5052  0FDB  00FB               	movwf	i1___wmul@multiplicand+1
  5053  0FDC  160A  118A  2359  120A  158A  	fcall	i1___wmul
  5054  0FE1  0879               	movf	?i1___wmul+1,w
  5055  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5056  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  5057  0FE4  01C1               	clrf	(_rpm+1)^(0+128)
  5058  0FE5  07C1               	addwf	(_rpm+1)^(0+128),f
  5059  0FE6  0878               	movf	?i1___wmul,w
  5060  0FE7  01C0               	clrf	_rpm^(0+128)
  5061  0FE8  07C0               	addwf	_rpm^(0+128),f
  5062                           
  5063                           ;main.c: 437: TMR1L = 0x00;
  5064  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0FEB  018E               	clrf	14	;volatile
  5067                           
  5068                           ;main.c: 438: TMR1H = 0x00;
  5069  0FEC  018F               	clrf	15	;volatile
  5070                           
  5071                           ;main.c: 441: PORTBbits.RB6 = 0;
  5072  0FED  1306               	bcf	6,6	;volatile
  5073  0FEE                     i1l3278:	
  5074                           
  5075                           ;main.c: 442: }
  5076                           ;main.c: 445: INTCONbits.T0IF = 0;
  5077  0FEE  110B               	bcf	11,2	;volatile
  5078  0FEF                     i1l3280:	
  5079                           
  5080                           ;main.c: 446: }
  5081                           ;main.c: 449: if (PIR1bits.TMR1IF)
  5082  0FEF  180C               	btfsc	12,0	;volatile
  5083                           
  5084                           ;main.c: 450: {
  5085                           ;main.c: 454: PIR1bits.TMR1IF = 0;
  5086  0FF0  100C               	bcf	12,0	;volatile
  5087                           
  5088                           ;main.c: 455: }
  5089                           ;main.c: 458: if (PIR1bits.SSPIF)
  5090  0FF1  198C               	btfsc	12,3	;volatile
  5091                           
  5092                           ;main.c: 459: {
  5093                           ;main.c: 463: PIR1bits.SSPIF = 0;
  5094  0FF2  118C               	bcf	12,3	;volatile
  5095  0FF3                     i1l180:	
  5096  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0FF5  0860               	movf	??_ISR+3,w
  5099  0FF6  00FF               	movwf	127
  5100  0FF7  085F               	movf	??_ISR+2,w
  5101  0FF8  008A               	movwf	10
  5102  0FF9  085E               	movf	??_ISR+1,w
  5103  0FFA  0084               	movwf	4
  5104  0FFB  0E5D               	swapf	??_ISR^0,w
  5105  0FFC  0083               	movwf	3
  5106  0FFD  0EFE               	swapf	126,f
  5107  0FFE  0E7E               	swapf	126,w
  5108  0FFF  0009               	retfie
  5109  1000                     __end_of_ISR:	
  5110                           
  5111                           	psect	intentry
  5112  0004                     __pintentry:	
  5113                           ;incstack = 0
  5114                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5115                           
  5116  0004                     interrupt_function:	
  5117  007E                     saved_w	set	btemp
  5118  0004  00FE               	movwf	btemp
  5119  0005  0E03               	swapf	3,w
  5120  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0008  00DD               	movwf	??_ISR
  5123  0009  0804               	movf	4,w
  5124  000A  00DE               	movwf	??_ISR+1
  5125  000B  080A               	movf	10,w
  5126  000C  00DF               	movwf	??_ISR+2
  5127  000D  087F               	movf	btemp+1,w
  5128  000E  00E0               	movwf	??_ISR+3
  5129  000F  120A  158A  2E65   	ljmp	_ISR
  5130                           
  5131                           	psect	text23
  5132  1359                     __ptext23:	
  5133 ;; *************** function i1___wmul *****************
  5134 ;; Defined at:
  5135 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  multiplier      2    8[COMMON] unsigned int 
  5138 ;;  multiplicand    2   10[COMMON] unsigned int 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  __wmul          2   12[COMMON] unsigned int 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2    8[COMMON] unsigned int 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         4       0       0       0       0
  5151 ;;      Locals:         2       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0
  5153 ;;      Totals:         6       0       0       0       0
  5154 ;;Total ram usage:        6 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_ISR
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           
  5164                           ;psect for function i1___wmul
  5165  1359                     i1___wmul:	
  5166                           
  5167                           ;incstack = 0
  5168                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5169  1359  01FC               	clrf	i1___wmul@product
  5170  135A  01FD               	clrf	i1___wmul@product+1
  5171  135B                     i1l3130:	
  5172  135B  1C78               	btfss	i1___wmul@multiplier,0
  5173  135C  2B63               	goto	i1l598
  5174  135D  087A               	movf	i1___wmul@multiplicand,w
  5175  135E  07FC               	addwf	i1___wmul@product,f
  5176  135F  1803               	skipnc
  5177  1360  0AFD               	incf	i1___wmul@product+1,f
  5178  1361  087B               	movf	i1___wmul@multiplicand+1,w
  5179  1362  07FD               	addwf	i1___wmul@product+1,f
  5180  1363                     i1l598:	
  5181  1363  3001               	movlw	1
  5182  1364                     u382_25:	
  5183  1364  1003               	clrc
  5184  1365  0DFA               	rlf	i1___wmul@multiplicand,f
  5185  1366  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5186  1367  3EFF               	addlw	-1
  5187  1368  1D03               	skipz
  5188  1369  2B64               	goto	u382_25
  5189  136A  3001               	movlw	1
  5190  136B                     u383_25:	
  5191  136B  1003               	clrc
  5192  136C  0CF9               	rrf	i1___wmul@multiplier+1,f
  5193  136D  0CF8               	rrf	i1___wmul@multiplier,f
  5194  136E  3EFF               	addlw	-1
  5195  136F  1D03               	skipz
  5196  1370  2B6B               	goto	u383_25
  5197  1371  0879               	movf	i1___wmul@multiplier+1,w
  5198  1372  0478               	iorwf	i1___wmul@multiplier,w
  5199  1373  1D03               	skipz
  5200  1374  2B5B               	goto	i1l3130
  5201  1375  087D               	movf	i1___wmul@product+1,w
  5202  1376  01F9               	clrf	?i1___wmul+1
  5203  1377  07F9               	addwf	?i1___wmul+1,f
  5204  1378  087C               	movf	i1___wmul@product,w
  5205  1379  01F8               	clrf	?i1___wmul
  5206  137A  07F8               	addwf	?i1___wmul,f
  5207  137B  0008               	return
  5208  137C                     __end_ofi1___wmul:	
  5209                           
  5210                           	psect	text24
  5211  1486                     __ptext24:	
  5212 ;; *************** function i1___lwdiv *****************
  5213 ;; Defined at:
  5214 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  divisor         2    0[COMMON] unsigned int 
  5217 ;;  dividend        2    2[COMMON] unsigned int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5220 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    0[COMMON] unsigned int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         4       0       0       0       0
  5231 ;;      Locals:         3       0       0       0       0
  5232 ;;      Temps:          1       0       0       0       0
  5233 ;;      Totals:         8       0       0       0       0
  5234 ;;Total ram usage:        8 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_ISR
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function i1___lwdiv
  5245  1486                     i1___lwdiv:	
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5249  1486  01F5               	clrf	i1___lwdiv@quotient
  5250  1487  01F6               	clrf	i1___lwdiv@quotient+1
  5251  1488  0871               	movf	i1___lwdiv@divisor+1,w
  5252  1489  0470               	iorwf	i1___lwdiv@divisor,w
  5253  148A  1903               	skipnz
  5254  148B  2CBD               	goto	i1l3162
  5255  148C  01F7               	clrf	i1___lwdiv@counter
  5256  148D  0AF7               	incf	i1___lwdiv@counter,f
  5257  148E                     i1l3150:	
  5258  148E  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5259  148F  2C9C               	goto	i1l3152
  5260  1490  3001               	movlw	1
  5261  1491                     u386_25:	
  5262  1491  1003               	clrc
  5263  1492  0DF0               	rlf	i1___lwdiv@divisor,f
  5264  1493  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5265  1494  3EFF               	addlw	-1
  5266  1495  1D03               	skipz
  5267  1496  2C91               	goto	u386_25
  5268  1497  3001               	movlw	1
  5269  1498  00F4               	movwf	??i1___lwdiv
  5270  1499  0874               	movf	??i1___lwdiv,w
  5271  149A  07F7               	addwf	i1___lwdiv@counter,f
  5272  149B  2C8E               	goto	i1l3150
  5273  149C                     i1l3152:	
  5274  149C  3001               	movlw	1
  5275  149D                     u388_25:	
  5276  149D  1003               	clrc
  5277  149E  0DF5               	rlf	i1___lwdiv@quotient,f
  5278  149F  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5279  14A0  3EFF               	addlw	-1
  5280  14A1  1D03               	skipz
  5281  14A2  2C9D               	goto	u388_25
  5282  14A3  0871               	movf	i1___lwdiv@divisor+1,w
  5283  14A4  0273               	subwf	i1___lwdiv@dividend+1,w
  5284  14A5  1D03               	skipz
  5285  14A6  2CA9               	goto	u389_25
  5286  14A7  0870               	movf	i1___lwdiv@divisor,w
  5287  14A8  0272               	subwf	i1___lwdiv@dividend,w
  5288  14A9                     u389_25:	
  5289  14A9  1C03               	skipc
  5290  14AA  2CB2               	goto	i1l3158
  5291  14AB  0870               	movf	i1___lwdiv@divisor,w
  5292  14AC  02F2               	subwf	i1___lwdiv@dividend,f
  5293  14AD  0871               	movf	i1___lwdiv@divisor+1,w
  5294  14AE  1C03               	skipc
  5295  14AF  03F3               	decf	i1___lwdiv@dividend+1,f
  5296  14B0  02F3               	subwf	i1___lwdiv@dividend+1,f
  5297  14B1  1475               	bsf	i1___lwdiv@quotient,0
  5298  14B2                     i1l3158:	
  5299  14B2  3001               	movlw	1
  5300  14B3                     u390_25:	
  5301  14B3  1003               	clrc
  5302  14B4  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5303  14B5  0CF0               	rrf	i1___lwdiv@divisor,f
  5304  14B6  3EFF               	addlw	-1
  5305  14B7  1D03               	skipz
  5306  14B8  2CB3               	goto	u390_25
  5307  14B9  3001               	movlw	1
  5308  14BA  02F7               	subwf	i1___lwdiv@counter,f
  5309  14BB  1D03               	btfss	3,2
  5310  14BC  2C9C               	goto	i1l3152
  5311  14BD                     i1l3162:	
  5312  14BD  0876               	movf	i1___lwdiv@quotient+1,w
  5313  14BE  01F1               	clrf	?i1___lwdiv+1
  5314  14BF  07F1               	addwf	?i1___lwdiv+1,f
  5315  14C0  0875               	movf	i1___lwdiv@quotient,w
  5316  14C1  01F0               	clrf	?i1___lwdiv
  5317  14C2  07F0               	addwf	?i1___lwdiv,f
  5318  14C3  0008               	return
  5319  14C4                     __end_ofi1___lwdiv:	
  5320                           
  5321                           	psect	text25
  5322  11E9                     __ptext25:	
  5323 ;; *************** function i1_TIMER0_Set *****************
  5324 ;; Defined at:
  5325 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  contagens       1    wreg     unsigned char 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  contagens       1    0[COMMON] unsigned char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		wreg
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5339 ;;      Params:         0       0       0       0       0
  5340 ;;      Locals:         1       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0
  5342 ;;      Totals:         1       0       0       0       0
  5343 ;;Total ram usage:        1 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_ISR
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function i1_TIMER0_Set
  5354  11E9                     i1_TIMER0_Set:	
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in i1_TIMER0_Set: [wreg]
  5358                           ;i1TIMER0_Set@contagens stored from wreg
  5359  11E9  00F0               	movwf	i1TIMER0_Set@contagens
  5360                           
  5361                           ;timers.c: 22: TMR0 = contagens;
  5362  11EA  0870               	movf	i1TIMER0_Set@contagens,w
  5363  11EB  1283               	bcf	3,5	;RP0=0, select bank0
  5364  11EC  1303               	bcf	3,6	;RP1=0, select bank0
  5365  11ED  0081               	movwf	1	;volatile
  5366  11EE  0008               	return
  5367  11EF                     __end_ofi1_TIMER0_Set:	
  5368                           
  5369                           	psect	text26
  5370  129B                     __ptext26:	
  5371 ;; *************** function _USART_ReceiveChar *****************
  5372 ;; Defined at:
  5373 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  byte            1    4[COMMON] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      unsigned char 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5387 ;;      Params:         0       0       0       0       0
  5388 ;;      Locals:         1       0       0       0       0
  5389 ;;      Temps:          1       0       0       0       0
  5390 ;;      Totals:         2       0       0       0       0
  5391 ;;Total ram usage:        2 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    2
  5394 ;; This function calls:
  5395 ;;		i1_USART_WriteString
  5396 ;; This function is called by:
  5397 ;;		_ISR
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _USART_ReceiveChar
  5403  129B                     _USART_ReceiveChar:	
  5404                           
  5405                           ;usart.c: 65: unsigned char byte;
  5406                           ;usart.c: 67: if (!OERR)
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5410  129B  1283               	bcf	3,5	;RP0=0, select bank0
  5411  129C  1303               	bcf	3,6	;RP1=0, select bank0
  5412  129D  1898               	btfsc	24,1	;volatile
  5413  129E  2AA4               	goto	i1l2860
  5414                           
  5415                           ;usart.c: 68: {
  5416                           ;usart.c: 69: byte = RCREG;
  5417  129F  081A               	movf	26,w	;volatile
  5418  12A0  00F3               	movwf	??_USART_ReceiveChar
  5419  12A1  0873               	movf	??_USART_ReceiveChar,w
  5420  12A2  00F4               	movwf	USART_ReceiveChar@byte
  5421  12A3  2AB3               	goto	i1l2868
  5422  12A4                     i1l2860:	
  5423                           ;usart.c: 71: }
  5424                           
  5425                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5426                           
  5427                           
  5428                           ;usart.c: 72: else
  5429                           ;usart.c: 73: {
  5430                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5431  12A4  300B               	movlw	low (STR_19-__stringbase)
  5432  12A5  00F1               	movwf	i1USART_WriteString@str
  5433  12A6  3080               	movlw	128
  5434  12A7  00F2               	movwf	i1USART_WriteString@str+1
  5435  12A8  160A  118A  2336   	fcall	i1_USART_WriteString
  5436                           
  5437                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5438  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  5439  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  5440  12AD  1218               	bcf	24,4	;volatile
  5441                           
  5442                           ;usart.c: 77: byte = RCREG;
  5443  12AE  081A               	movf	26,w	;volatile
  5444  12AF  00F3               	movwf	??_USART_ReceiveChar
  5445  12B0  0873               	movf	??_USART_ReceiveChar,w
  5446  12B1  00F4               	movwf	USART_ReceiveChar@byte
  5447                           
  5448                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5449  12B2  1618               	bsf	24,4	;volatile
  5450  12B3                     i1l2868:	
  5451                           
  5452                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5453  12B3  128C               	bcf	12,5	;volatile
  5454                           
  5455                           ;usart.c: 80: }
  5456                           ;usart.c: 82: return(byte);
  5457  12B4  0874               	movf	USART_ReceiveChar@byte,w
  5458  12B5  0008               	return
  5459  12B6                     __end_of_USART_ReceiveChar:	
  5460                           
  5461                           	psect	text27
  5462  1336                     __ptext27:	
  5463 ;; *************** function i1_USART_WriteString *****************
  5464 ;; Defined at:
  5465 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  str             2    1[COMMON] PTR const unsigned char 
  5468 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5469 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5470 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5471 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;		None               void
  5476 ;; Registers used:
  5477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         2       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0
  5486 ;;      Totals:         2       0       0       0       0
  5487 ;;Total ram usage:        2 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    1
  5490 ;; This function calls:
  5491 ;;		i1_USART_WriteChar
  5492 ;; This function is called by:
  5493 ;;		_ISR
  5494 ;;		_USART_ReceiveChar
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function i1_USART_WriteString
  5500  1336                     i1_USART_WriteString:	
  5501  1336                     i1l2720:	
  5502                           ;usart.c: 54: while(*str != '\0')
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5506                           
  5507  1336  0872               	movf	i1USART_WriteString@str+1,w
  5508  1337  1283               	bcf	3,5	;RP0=0, select bank0
  5509  1338  1303               	bcf	3,6	;RP1=0, select bank0
  5510  1339  00FF               	movwf	127
  5511  133A  0871               	movf	i1USART_WriteString@str,w
  5512  133B  0084               	movwf	4
  5513  133C  120A  158A  2000  160A  118A  	fcall	stringtab
  5514  1341  3800               	iorlw	0
  5515  1342  1903               	btfsc	3,2
  5516  1343  0008               	return
  5517                           
  5518                           ;usart.c: 55: {
  5519                           ;usart.c: 56: USART_WriteChar(*str);
  5520  1344  0872               	movf	i1USART_WriteString@str+1,w
  5521  1345  1283               	bcf	3,5	;RP0=0, select bank0
  5522  1346  1303               	bcf	3,6	;RP1=0, select bank0
  5523  1347  00FF               	movwf	127
  5524  1348  0871               	movf	i1USART_WriteString@str,w
  5525  1349  0084               	movwf	4
  5526  134A  120A  158A  2000  160A  118A  	fcall	stringtab
  5527  134F  160A  118A  21F7  160A  118A  	fcall	i1_USART_WriteChar
  5528                           
  5529                           ;usart.c: 57: str++;
  5530  1354  3001               	movlw	1
  5531  1355  07F1               	addwf	i1USART_WriteString@str,f
  5532  1356  1803               	skipnc
  5533  1357  0AF2               	incf	i1USART_WriteString@str+1,f
  5534  1358  2B36               	goto	i1l2720
  5535  1359                     __end_ofi1_USART_WriteString:	
  5536                           
  5537                           	psect	text28
  5538  11F7                     __ptext28:	
  5539 ;; *************** function i1_USART_WriteChar *****************
  5540 ;; Defined at:
  5541 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  byte            1    wreg     unsigned char 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  byte            1    0[COMMON] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;		None               void
  5548 ;; Registers used:
  5549 ;;		wreg
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       0       0       0       0
  5556 ;;      Locals:         1       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0
  5558 ;;      Totals:         1       0       0       0       0
  5559 ;;Total ram usage:        1 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		i1_USART_WriteString
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function i1_USART_WriteChar
  5570  11F7                     i1_USART_WriteChar:	
  5571                           
  5572                           ;incstack = 0
  5573                           ; Regs used in i1_USART_WriteChar: [wreg]
  5574                           ;i1USART_WriteChar@byte stored from wreg
  5575  11F7  00F0               	movwf	i1USART_WriteChar@byte
  5576  11F8                     i1l227:	
  5577                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5578                           
  5579  11F8  1283               	bcf	3,5	;RP0=0, select bank0
  5580  11F9  1303               	bcf	3,6	;RP1=0, select bank0
  5581  11FA  1E0C               	btfss	12,4	;volatile
  5582  11FB  29F8               	goto	i1l227
  5583                           
  5584                           ;usart.c: 47: TXREG = byte;
  5585  11FC  0870               	movf	i1USART_WriteChar@byte,w
  5586  11FD  0099               	movwf	25	;volatile
  5587  11FE  0008               	return
  5588  11FF                     __end_ofi1_USART_WriteChar:	
  5589                           
  5590                           	psect	text29
  5591  0053                     __ptext29:	
  5592 ;; *************** function _Fuzzy *****************
  5593 ;; Defined at:
  5594 ;;		line 130 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  a               2   48[BANK0 ] int 
  5599 ;;  a               2   46[BANK0 ] int 
  5600 ;;  a               2   44[BANK0 ] int 
  5601 ;;  a               2   50[BANK0 ] int 
  5602 ;;  aumenta         3   58[BANK0 ] float 
  5603 ;;  reduz           3   55[BANK0 ] float 
  5604 ;;  mantem          3   52[BANK0 ] float 
  5605 ;;  tip             3   41[BANK0 ] float 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5615 ;;      Params:         0       0       0       0       0
  5616 ;;      Locals:         0      20       0       0       0
  5617 ;;      Temps:          0       0       0       0       0
  5618 ;;      Totals:         0      20       0       0       0
  5619 ;;Total ram usage:       20 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    3
  5622 ;; This function calls:
  5623 ;;		___ftadd
  5624 ;;		___ftdiv
  5625 ;;		___ftge
  5626 ;;		___ftmul
  5627 ;;		___ftneg
  5628 ;;		___fttol
  5629 ;;		___lwtoft
  5630 ;;		_max_val
  5631 ;;		_trapmf
  5632 ;;		_trimf
  5633 ;;		i1_PWM_DutyCycle2
  5634 ;; This function is called by:
  5635 ;;		_ISR
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _Fuzzy
  5641  0053                     _Fuzzy:	
  5642                           
  5643                           ;main.c: 141: setpoint = (float)pwm;
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5647  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0055  086D               	movf	_pwm+1,w
  5650  0056  01F9               	clrf	___lwtoft@c+1
  5651  0057  07F9               	addwf	___lwtoft@c+1,f
  5652  0058  086C               	movf	_pwm,w
  5653  0059  01F8               	clrf	___lwtoft@c
  5654  005A  07F8               	addwf	___lwtoft@c,f
  5655  005B  160A  118A  223E  120A  118A  	fcall	___lwtoft
  5656  0060  0878               	movf	?___lwtoft,w
  5657  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5658  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5659  0063  00EC               	movwf	_setpoint^(0+128)
  5660  0064  0879               	movf	?___lwtoft+1,w
  5661  0065  00ED               	movwf	(_setpoint+1)^(0+128)
  5662  0066  087A               	movf	?___lwtoft+2,w
  5663  0067  00EE               	movwf	(_setpoint+2)^(0+128)
  5664                           
  5665                           ;main.c: 143: float mantem = 1100;
  5666  0068  3080               	movlw	128
  5667  0069  1283               	bcf	3,5	;RP0=0, select bank0
  5668  006A  1303               	bcf	3,6	;RP1=0, select bank0
  5669  006B  00D4               	movwf	Fuzzy@mantem
  5670  006C  3089               	movlw	137
  5671  006D  00D5               	movwf	Fuzzy@mantem+1
  5672  006E  3044               	movlw	68
  5673  006F  00D6               	movwf	Fuzzy@mantem+2
  5674                           
  5675                           ;main.c: 144: float reduz = 2200;
  5676  0070  3080               	movlw	128
  5677  0071  00D7               	movwf	Fuzzy@reduz
  5678  0072  3009               	movlw	9
  5679  0073  00D8               	movwf	Fuzzy@reduz+1
  5680  0074  3045               	movlw	69
  5681  0075  00D9               	movwf	Fuzzy@reduz+2
  5682                           
  5683                           ;main.c: 145: float aumenta = 3300;
  5684  0076  3040               	movlw	64
  5685  0077  00DA               	movwf	Fuzzy@aumenta
  5686  0078  304E               	movlw	78
  5687  0079  00DB               	movwf	Fuzzy@aumenta+1
  5688  007A  3045               	movlw	69
  5689  007B  00DC               	movwf	Fuzzy@aumenta+2
  5690                           
  5691                           ;main.c: 146: float tip;
  5692                           ;main.c: 147: fitemp =0;
  5693  007C  3000               	movlw	0
  5694  007D  1683               	bsf	3,5	;RP0=1, select bank1
  5695  007E  1303               	bcf	3,6	;RP1=0, select bank1
  5696  007F  00A3               	movwf	_fitemp^(0+128)
  5697  0080  3000               	movlw	0
  5698  0081  00A4               	movwf	(_fitemp+1)^(0+128)
  5699  0082  3000               	movlw	0
  5700  0083  00A5               	movwf	(_fitemp+2)^(0+128)
  5701                           
  5702                           ;main.c: 150: temp = (setpoint - tf);
  5703  0084  086C               	movf	_setpoint^(0+128),w
  5704  0085  00F8               	movwf	___ftadd@f1
  5705  0086  086D               	movf	(_setpoint+1)^(0+128),w
  5706  0087  00F9               	movwf	___ftadd@f1+1
  5707  0088  086E               	movf	(_setpoint+2)^(0+128),w
  5708  0089  00FA               	movwf	___ftadd@f1+2
  5709  008A  0832               	movf	_tf^(0+128),w
  5710  008B  00F0               	movwf	___ftneg@f1
  5711  008C  0833               	movf	(_tf+1)^(0+128),w
  5712  008D  00F1               	movwf	___ftneg@f1+1
  5713  008E  0834               	movf	(_tf+2)^(0+128),w
  5714  008F  00F2               	movwf	___ftneg@f1+2
  5715  0090  160A  118A  21EF  120A  118A  	fcall	___ftneg
  5716  0095  0870               	movf	?___ftneg,w
  5717  0096  00FB               	movwf	___ftadd@f2
  5718  0097  0871               	movf	?___ftneg+1,w
  5719  0098  00FC               	movwf	___ftadd@f2+1
  5720  0099  0872               	movf	?___ftneg+2,w
  5721  009A  00FD               	movwf	___ftadd@f2+2
  5722  009B  120A  158A  219F  120A  118A  	fcall	___ftadd
  5723  00A0  0878               	movf	?___ftadd,w
  5724  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5725  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5726  00A3  00E1               	movwf	_temp
  5727  00A4  0879               	movf	?___ftadd+1,w
  5728  00A5  00E2               	movwf	_temp+1
  5729  00A6  087A               	movf	?___ftadd+2,w
  5730  00A7  00E3               	movwf	_temp+2
  5731                           
  5732                           ;main.c: 151: temp = (temp/100)*-1;
  5733  00A8  3000               	movlw	0
  5734  00A9  00B7               	movwf	___ftmul@f1
  5735  00AA  3080               	movlw	128
  5736  00AB  00B8               	movwf	___ftmul@f1+1
  5737  00AC  30BF               	movlw	191
  5738  00AD  00B9               	movwf	___ftmul@f1+2
  5739  00AE  3000               	movlw	0
  5740  00AF  00A7               	movwf	___ftdiv@f2
  5741  00B0  30C8               	movlw	200
  5742  00B1  00A8               	movwf	___ftdiv@f2+1
  5743  00B2  3042               	movlw	66
  5744  00B3  00A9               	movwf	___ftdiv@f2+2
  5745  00B4  0861               	movf	_temp,w
  5746  00B5  00AA               	movwf	___ftdiv@f1
  5747  00B6  0862               	movf	_temp+1,w
  5748  00B7  00AB               	movwf	___ftdiv@f1+1
  5749  00B8  0863               	movf	_temp+2,w
  5750  00B9  00AC               	movwf	___ftdiv@f1+2
  5751  00BA  120A  158A  20E7  120A  118A  	fcall	___ftdiv
  5752  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5753  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5754  00C1  0827               	movf	?___ftdiv,w
  5755  00C2  00BA               	movwf	___ftmul@f2
  5756  00C3  0828               	movf	?___ftdiv+1,w
  5757  00C4  00BB               	movwf	___ftmul@f2+1
  5758  00C5  0829               	movf	?___ftdiv+2,w
  5759  00C6  00BC               	movwf	___ftmul@f2+2
  5760  00C7  160A  118A  272D  120A  118A  	fcall	___ftmul
  5761  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  5762  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  5763  00CE  0837               	movf	?___ftmul,w
  5764  00CF  00E1               	movwf	_temp
  5765  00D0  0838               	movf	?___ftmul+1,w
  5766  00D1  00E2               	movwf	_temp+1
  5767  00D2  0839               	movf	?___ftmul+2,w
  5768  00D3  00E3               	movwf	_temp+2
  5769                           
  5770                           ;main.c: 153: deltaV = temp;
  5771  00D4  0861               	movf	_temp,w
  5772  00D5  00F0               	movwf	___fttol@f1
  5773  00D6  0862               	movf	_temp+1,w
  5774  00D7  00F1               	movwf	___fttol@f1+1
  5775  00D8  0863               	movf	_temp+2,w
  5776  00D9  00F2               	movwf	___fttol@f1+2
  5777  00DA  160A  118A  2612  120A  118A  	fcall	___fttol
  5778  00DF  0871               	movf	?___fttol+1,w
  5779  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5780  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5781  00E2  01EB               	clrf	_deltaV+1
  5782  00E3  07EB               	addwf	_deltaV+1,f
  5783  00E4  0870               	movf	?___fttol,w
  5784  00E5  01EA               	clrf	_deltaV
  5785  00E6  07EA               	addwf	_deltaV,f
  5786                           
  5787                           ;main.c: 156: if (temp >100) temp = 100;
  5788  00E7  3000               	movlw	0
  5789  00E8  00F0               	movwf	___ftge@ff1
  5790  00E9  30C8               	movlw	200
  5791  00EA  00F1               	movwf	___ftge@ff1+1
  5792  00EB  3042               	movlw	66
  5793  00EC  00F2               	movwf	___ftge@ff1+2
  5794  00ED  0861               	movf	_temp,w
  5795  00EE  00F3               	movwf	___ftge@ff2
  5796  00EF  0862               	movf	_temp+1,w
  5797  00F0  00F4               	movwf	___ftge@ff2+1
  5798  00F1  0863               	movf	_temp+2,w
  5799  00F2  00F5               	movwf	___ftge@ff2+2
  5800  00F3  160A  118A  254D  120A  118A  	fcall	___ftge
  5801  00F8  1803               	btfsc	3,0
  5802  00F9  2902               	goto	i1l2738
  5803  00FA  3000               	movlw	0
  5804  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  5805  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  5806  00FD  00E1               	movwf	_temp
  5807  00FE  30C8               	movlw	200
  5808  00FF  00E2               	movwf	_temp+1
  5809  0100  3042               	movlw	66
  5810  0101  00E3               	movwf	_temp+2
  5811  0102                     i1l2738:	
  5812                           
  5813                           ;main.c: 157: if (temp <0) temp = 0;
  5814  0102  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0103  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0104  0861               	movf	_temp,w
  5817  0105  00F0               	movwf	___ftge@ff1
  5818  0106  0862               	movf	_temp+1,w
  5819  0107  00F1               	movwf	___ftge@ff1+1
  5820  0108  0863               	movf	_temp+2,w
  5821  0109  00F2               	movwf	___ftge@ff1+2
  5822  010A  3000               	movlw	0
  5823  010B  00F3               	movwf	___ftge@ff2
  5824  010C  3000               	movlw	0
  5825  010D  00F4               	movwf	___ftge@ff2+1
  5826  010E  3000               	movlw	0
  5827  010F  00F5               	movwf	___ftge@ff2+2
  5828  0110  160A  118A  254D  120A  118A  	fcall	___ftge
  5829  0115  1803               	btfsc	3,0
  5830  0116  291F               	goto	i1l2742
  5831  0117  3000               	movlw	0
  5832  0118  1283               	bcf	3,5	;RP0=0, select bank0
  5833  0119  1303               	bcf	3,6	;RP1=0, select bank0
  5834  011A  00E1               	movwf	_temp
  5835  011B  3000               	movlw	0
  5836  011C  00E2               	movwf	_temp+1
  5837  011D  3000               	movlw	0
  5838  011E  00E3               	movwf	_temp+2
  5839  011F                     i1l2742:	
  5840                           
  5841                           ;main.c: 160: if (temp < 25)
  5842  011F  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0120  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0121  0861               	movf	_temp,w
  5845  0122  00F0               	movwf	___ftge@ff1
  5846  0123  0862               	movf	_temp+1,w
  5847  0124  00F1               	movwf	___ftge@ff1+1
  5848  0125  0863               	movf	_temp+2,w
  5849  0126  00F2               	movwf	___ftge@ff1+2
  5850  0127  3000               	movlw	0
  5851  0128  00F3               	movwf	___ftge@ff2
  5852  0129  30C8               	movlw	200
  5853  012A  00F4               	movwf	___ftge@ff2+1
  5854  012B  3041               	movlw	65
  5855  012C  00F5               	movwf	___ftge@ff2+2
  5856  012D  160A  118A  254D  120A  118A  	fcall	___ftge
  5857  0132  1803               	btfsc	3,0
  5858  0133  2A47               	goto	i1l2766
  5859                           
  5860                           ;main.c: 161: {
  5861                           ;main.c: 164: fitemp = trapmf(temp, 0,0,13,32);
  5862  0134  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0135  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0136  0861               	movf	_temp,w
  5865  0137  00B7               	movwf	trapmf@x
  5866  0138  0862               	movf	_temp+1,w
  5867  0139  00B8               	movwf	trapmf@x+1
  5868  013A  0863               	movf	_temp+2,w
  5869  013B  00B9               	movwf	trapmf@x+2
  5870  013C  3000               	movlw	0
  5871  013D  00BA               	movwf	trapmf@a
  5872  013E  3000               	movlw	0
  5873  013F  00BB               	movwf	trapmf@a+1
  5874  0140  3000               	movlw	0
  5875  0141  00BC               	movwf	trapmf@a+2
  5876  0142  3000               	movlw	0
  5877  0143  00BD               	movwf	trapmf@b
  5878  0144  3000               	movlw	0
  5879  0145  00BE               	movwf	trapmf@b+1
  5880  0146  3000               	movlw	0
  5881  0147  00BF               	movwf	trapmf@b+2
  5882  0148  3000               	movlw	0
  5883  0149  00C0               	movwf	trapmf@c
  5884  014A  3050               	movlw	80
  5885  014B  00C1               	movwf	trapmf@c+1
  5886  014C  3041               	movlw	65
  5887  014D  00C2               	movwf	trapmf@c+2
  5888  014E  3000               	movlw	0
  5889  014F  00C3               	movwf	trapmf@d
  5890  0150  3000               	movlw	0
  5891  0151  00C4               	movwf	trapmf@d+1
  5892  0152  3042               	movlw	66
  5893  0153  00C5               	movwf	trapmf@d+2
  5894  0154  120A  158A  23C4  120A  118A  	fcall	_trapmf
  5895  0159  1283               	bcf	3,5	;RP0=0, select bank0
  5896  015A  1303               	bcf	3,6	;RP1=0, select bank0
  5897  015B  0837               	movf	?_trapmf,w
  5898  015C  1683               	bsf	3,5	;RP0=1, select bank1
  5899  015D  1303               	bcf	3,6	;RP1=0, select bank1
  5900  015E  00A3               	movwf	_fitemp^(0+128)
  5901  015F  1283               	bcf	3,5	;RP0=0, select bank0
  5902  0160  1303               	bcf	3,6	;RP1=0, select bank0
  5903  0161  0838               	movf	?_trapmf+1,w
  5904  0162  1683               	bsf	3,5	;RP0=1, select bank1
  5905  0163  1303               	bcf	3,6	;RP1=0, select bank1
  5906  0164  00A4               	movwf	(_fitemp+1)^(0+128)
  5907  0165  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0166  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0167  0839               	movf	?_trapmf+2,w
  5910  0168  1683               	bsf	3,5	;RP0=1, select bank1
  5911  0169  1303               	bcf	3,6	;RP1=0, select bank1
  5912  016A  00A5               	movwf	(_fitemp+2)^(0+128)
  5913                           
  5914                           ;main.c: 167: fop_rule1 = max_val(fitemp,0.1);
  5915  016B  0823               	movf	_fitemp^(0+128),w
  5916  016C  1283               	bcf	3,5	;RP0=0, select bank0
  5917  016D  1303               	bcf	3,6	;RP1=0, select bank0
  5918  016E  00A0               	movwf	max_val@a
  5919  016F  1683               	bsf	3,5	;RP0=1, select bank1
  5920  0170  1303               	bcf	3,6	;RP1=0, select bank1
  5921  0171  0824               	movf	(_fitemp+1)^(0+128),w
  5922  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5923  0173  1303               	bcf	3,6	;RP1=0, select bank0
  5924  0174  00A1               	movwf	max_val@a+1
  5925  0175  1683               	bsf	3,5	;RP0=1, select bank1
  5926  0176  1303               	bcf	3,6	;RP1=0, select bank1
  5927  0177  0825               	movf	(_fitemp+2)^(0+128),w
  5928  0178  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0179  1303               	bcf	3,6	;RP1=0, select bank0
  5930  017A  00A2               	movwf	max_val@a+2
  5931  017B  30CD               	movlw	205
  5932  017C  00A3               	movwf	max_val@b
  5933  017D  30CC               	movlw	204
  5934  017E  00A4               	movwf	max_val@b+1
  5935  017F  303D               	movlw	61
  5936  0180  00A5               	movwf	max_val@b+2
  5937  0181  160A  118A  22B6  120A  118A  	fcall	_max_val
  5938  0186  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0187  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0188  0820               	movf	?_max_val,w
  5941  0189  1683               	bsf	3,5	;RP0=1, select bank1
  5942  018A  1303               	bcf	3,6	;RP1=0, select bank1
  5943  018B  00A6               	movwf	_fop_rule1^(0+128)
  5944  018C  1283               	bcf	3,5	;RP0=0, select bank0
  5945  018D  1303               	bcf	3,6	;RP1=0, select bank0
  5946  018E  0821               	movf	?_max_val+1,w
  5947  018F  1683               	bsf	3,5	;RP0=1, select bank1
  5948  0190  1303               	bcf	3,6	;RP1=0, select bank1
  5949  0191  00A7               	movwf	(_fop_rule1+1)^(0+128)
  5950  0192  1283               	bcf	3,5	;RP0=0, select bank0
  5951  0193  1303               	bcf	3,6	;RP1=0, select bank0
  5952  0194  0822               	movf	?_max_val+2,w
  5953  0195  1683               	bsf	3,5	;RP0=1, select bank1
  5954  0196  1303               	bcf	3,6	;RP1=0, select bank1
  5955  0197  00A8               	movwf	(_fop_rule1+2)^(0+128)
  5956                           
  5957                           ;main.c: 170: x=0;
  5958  0198  3000               	movlw	0
  5959  0199  1283               	bcf	3,5	;RP0=0, select bank0
  5960  019A  1303               	bcf	3,6	;RP1=0, select bank0
  5961  019B  00E4               	movwf	_x
  5962  019C  3000               	movlw	0
  5963  019D  00E5               	movwf	_x+1
  5964  019E  3000               	movlw	0
  5965  019F  00E6               	movwf	_x+2
  5966                           
  5967                           ;main.c: 171: y=0;
  5968  01A0  3000               	movlw	0
  5969  01A1  00E7               	movwf	_y
  5970  01A2  3000               	movlw	0
  5971  01A3  00E8               	movwf	_y+1
  5972  01A4  3000               	movlw	0
  5973  01A5  00E9               	movwf	_y+2
  5974                           
  5975                           ;main.c: 172: for (int a=0; a<=90; a++)
  5976  01A6  01CC               	clrf	Fuzzy@a
  5977  01A7  01CD               	clrf	Fuzzy@a+1
  5978  01A8  084D               	movf	Fuzzy@a+1,w
  5979  01A9  3A80               	xorlw	128
  5980  01AA  00FF               	movwf	127
  5981  01AB  3080               	movlw	128
  5982  01AC  027F               	subwf	127,w
  5983  01AD  1D03               	skipz
  5984  01AE  29B1               	goto	u336_25
  5985  01AF  305B               	movlw	91
  5986  01B0  024C               	subwf	Fuzzy@a,w
  5987  01B1                     u336_25:	
  5988  01B1  1803               	btfsc	3,0
  5989  01B2  2A47               	goto	i1l2766
  5990  01B3                     i1l2756:	
  5991                           
  5992                           ;main.c: 173: {
  5993                           ;main.c: 174: y = trapmf(x,0,0,13,32);
  5994  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  5995  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  5996  01B5  0864               	movf	_x,w
  5997  01B6  00B7               	movwf	trapmf@x
  5998  01B7  0865               	movf	_x+1,w
  5999  01B8  00B8               	movwf	trapmf@x+1
  6000  01B9  0866               	movf	_x+2,w
  6001  01BA  00B9               	movwf	trapmf@x+2
  6002  01BB  3000               	movlw	0
  6003  01BC  00BA               	movwf	trapmf@a
  6004  01BD  3000               	movlw	0
  6005  01BE  00BB               	movwf	trapmf@a+1
  6006  01BF  3000               	movlw	0
  6007  01C0  00BC               	movwf	trapmf@a+2
  6008  01C1  3000               	movlw	0
  6009  01C2  00BD               	movwf	trapmf@b
  6010  01C3  3000               	movlw	0
  6011  01C4  00BE               	movwf	trapmf@b+1
  6012  01C5  3000               	movlw	0
  6013  01C6  00BF               	movwf	trapmf@b+2
  6014  01C7  3000               	movlw	0
  6015  01C8  00C0               	movwf	trapmf@c
  6016  01C9  3050               	movlw	80
  6017  01CA  00C1               	movwf	trapmf@c+1
  6018  01CB  3041               	movlw	65
  6019  01CC  00C2               	movwf	trapmf@c+2
  6020  01CD  3000               	movlw	0
  6021  01CE  00C3               	movwf	trapmf@d
  6022  01CF  3000               	movlw	0
  6023  01D0  00C4               	movwf	trapmf@d+1
  6024  01D1  3042               	movlw	66
  6025  01D2  00C5               	movwf	trapmf@d+2
  6026  01D3  120A  158A  23C4  120A  118A  	fcall	_trapmf
  6027  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  6028  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  6029  01DA  0837               	movf	?_trapmf,w
  6030  01DB  00E7               	movwf	_y
  6031  01DC  0838               	movf	?_trapmf+1,w
  6032  01DD  00E8               	movwf	_y+1
  6033  01DE  0839               	movf	?_trapmf+2,w
  6034  01DF  00E9               	movwf	_y+2
  6035                           
  6036                           ;main.c: 176: if (y > fop_rule1)
  6037  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  6038  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  6039  01E2  0826               	movf	_fop_rule1^(0+128),w
  6040  01E3  00F0               	movwf	___ftge@ff1
  6041  01E4  0827               	movf	(_fop_rule1+1)^(0+128),w
  6042  01E5  00F1               	movwf	___ftge@ff1+1
  6043  01E6  0828               	movf	(_fop_rule1+2)^(0+128),w
  6044  01E7  00F2               	movwf	___ftge@ff1+2
  6045  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6046  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  6047  01EA  0867               	movf	_y,w
  6048  01EB  00F3               	movwf	___ftge@ff2
  6049  01EC  0868               	movf	_y+1,w
  6050  01ED  00F4               	movwf	___ftge@ff2+1
  6051  01EE  0869               	movf	_y+2,w
  6052  01EF  00F5               	movwf	___ftge@ff2+2
  6053  01F0  160A  118A  254D  120A  118A  	fcall	___ftge
  6054  01F5  1803               	btfsc	3,0
  6055  01F6  2A02               	goto	i1l2760
  6056                           
  6057                           ;main.c: 177: {
  6058                           ;main.c: 178: mantem += fop_rule1;
  6059  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  6060  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  6061  01F9  0826               	movf	_fop_rule1^(0+128),w
  6062  01FA  00F8               	movwf	___ftadd@f1
  6063  01FB  0827               	movf	(_fop_rule1+1)^(0+128),w
  6064  01FC  00F9               	movwf	___ftadd@f1+1
  6065  01FD  0828               	movf	(_fop_rule1+2)^(0+128),w
  6066  01FE  00FA               	movwf	___ftadd@f1+2
  6067  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  6068  0200  1303               	bcf	3,6	;RP1=0, select bank0
  6069  0201  2A0A               	goto	L3
  6070  0202                     i1l2760:	
  6071                           ;main.c: 179: }
  6072                           
  6073                           
  6074                           ;main.c: 180: else
  6075                           ;main.c: 181: {
  6076                           ;main.c: 182: mantem += y;
  6077  0202  1283               	bcf	3,5	;RP0=0, select bank0
  6078  0203  1303               	bcf	3,6	;RP1=0, select bank0
  6079  0204  0867               	movf	_y,w
  6080  0205  00F8               	movwf	___ftadd@f1
  6081  0206  0868               	movf	_y+1,w
  6082  0207  00F9               	movwf	___ftadd@f1+1
  6083  0208  0869               	movf	_y+2,w
  6084  0209  00FA               	movwf	___ftadd@f1+2
  6085  020A                     L3:	
  6086  020A  0854               	movf	Fuzzy@mantem,w
  6087  020B  00FB               	movwf	___ftadd@f2
  6088  020C  0855               	movf	Fuzzy@mantem+1,w
  6089  020D  00FC               	movwf	___ftadd@f2+1
  6090  020E  0856               	movf	Fuzzy@mantem+2,w
  6091  020F  00FD               	movwf	___ftadd@f2+2
  6092  0210  120A  158A  219F  120A  118A  	fcall	___ftadd
  6093  0215  0878               	movf	?___ftadd,w
  6094  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0217  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0218  00D4               	movwf	Fuzzy@mantem
  6097  0219  0879               	movf	?___ftadd+1,w
  6098  021A  00D5               	movwf	Fuzzy@mantem+1
  6099  021B  087A               	movf	?___ftadd+2,w
  6100  021C  00D6               	movwf	Fuzzy@mantem+2
  6101                           
  6102                           ;main.c: 183: }
  6103                           ;main.c: 185: x=x+1;
  6104  021D  3000               	movlw	0
  6105  021E  00F8               	movwf	___ftadd@f1
  6106  021F  3080               	movlw	128
  6107  0220  00F9               	movwf	___ftadd@f1+1
  6108  0221  303F               	movlw	63
  6109  0222  00FA               	movwf	___ftadd@f1+2
  6110  0223  0864               	movf	_x,w
  6111  0224  00FB               	movwf	___ftadd@f2
  6112  0225  0865               	movf	_x+1,w
  6113  0226  00FC               	movwf	___ftadd@f2+1
  6114  0227  0866               	movf	_x+2,w
  6115  0228  00FD               	movwf	___ftadd@f2+2
  6116  0229  120A  158A  219F  120A  118A  	fcall	___ftadd
  6117  022E  0878               	movf	?___ftadd,w
  6118  022F  1283               	bcf	3,5	;RP0=0, select bank0
  6119  0230  1303               	bcf	3,6	;RP1=0, select bank0
  6120  0231  00E4               	movwf	_x
  6121  0232  0879               	movf	?___ftadd+1,w
  6122  0233  00E5               	movwf	_x+1
  6123  0234  087A               	movf	?___ftadd+2,w
  6124  0235  00E6               	movwf	_x+2
  6125  0236  3001               	movlw	1
  6126  0237  07CC               	addwf	Fuzzy@a,f
  6127  0238  1803               	skipnc
  6128  0239  0ACD               	incf	Fuzzy@a+1,f
  6129  023A  3000               	movlw	0
  6130  023B  07CD               	addwf	Fuzzy@a+1,f
  6131  023C  084D               	movf	Fuzzy@a+1,w
  6132  023D  3A80               	xorlw	128
  6133  023E  00FF               	movwf	127
  6134  023F  3080               	movlw	128
  6135  0240  027F               	subwf	127,w
  6136  0241  1D03               	skipz
  6137  0242  2A45               	goto	u338_25
  6138  0243  305B               	movlw	91
  6139  0244  024C               	subwf	Fuzzy@a,w
  6140  0245                     u338_25:	
  6141  0245  1C03               	skipc
  6142  0246  29B3               	goto	i1l2756
  6143  0247                     i1l2766:	
  6144                           
  6145                           ;main.c: 186: }
  6146                           ;main.c: 188: }
  6147                           ;main.c: 194: if ((temp > 20) && (temp < 70))
  6148  0247  3000               	movlw	0
  6149  0248  00F0               	movwf	___ftge@ff1
  6150  0249  30A0               	movlw	160
  6151  024A  00F1               	movwf	___ftge@ff1+1
  6152  024B  3041               	movlw	65
  6153  024C  00F2               	movwf	___ftge@ff1+2
  6154  024D  1283               	bcf	3,5	;RP0=0, select bank0
  6155  024E  1303               	bcf	3,6	;RP1=0, select bank0
  6156  024F  0861               	movf	_temp,w
  6157  0250  00F3               	movwf	___ftge@ff2
  6158  0251  0862               	movf	_temp+1,w
  6159  0252  00F4               	movwf	___ftge@ff2+1
  6160  0253  0863               	movf	_temp+2,w
  6161  0254  00F5               	movwf	___ftge@ff2+2
  6162  0255  160A  118A  254D  120A  118A  	fcall	___ftge
  6163  025A  1803               	btfsc	3,0
  6164  025B  2B76               	goto	i1l2792
  6165  025C  1283               	bcf	3,5	;RP0=0, select bank0
  6166  025D  1303               	bcf	3,6	;RP1=0, select bank0
  6167  025E  0861               	movf	_temp,w
  6168  025F  00F0               	movwf	___ftge@ff1
  6169  0260  0862               	movf	_temp+1,w
  6170  0261  00F1               	movwf	___ftge@ff1+1
  6171  0262  0863               	movf	_temp+2,w
  6172  0263  00F2               	movwf	___ftge@ff1+2
  6173  0264  3000               	movlw	0
  6174  0265  00F3               	movwf	___ftge@ff2
  6175  0266  308C               	movlw	140
  6176  0267  00F4               	movwf	___ftge@ff2+1
  6177  0268  3042               	movlw	66
  6178  0269  00F5               	movwf	___ftge@ff2+2
  6179  026A  160A  118A  254D  120A  118A  	fcall	___ftge
  6180  026F  1803               	btfsc	3,0
  6181  0270  2B76               	goto	i1l2792
  6182                           
  6183                           ;main.c: 195: {
  6184                           ;main.c: 197: fitemp = trimf(temp, 9, 45, 81);
  6185  0271  1283               	bcf	3,5	;RP0=0, select bank0
  6186  0272  1303               	bcf	3,6	;RP1=0, select bank0
  6187  0273  0861               	movf	_temp,w
  6188  0274  00B7               	movwf	trimf@x
  6189  0275  0862               	movf	_temp+1,w
  6190  0276  00B8               	movwf	trimf@x+1
  6191  0277  0863               	movf	_temp+2,w
  6192  0278  00B9               	movwf	trimf@x+2
  6193  0279  3000               	movlw	0
  6194  027A  00BA               	movwf	trimf@a
  6195  027B  3010               	movlw	16
  6196  027C  00BB               	movwf	trimf@a+1
  6197  027D  3041               	movlw	65
  6198  027E  00BC               	movwf	trimf@a+2
  6199  027F  3000               	movlw	0
  6200  0280  00BD               	movwf	trimf@b
  6201  0281  3034               	movlw	52
  6202  0282  00BE               	movwf	trimf@b+1
  6203  0283  3042               	movlw	66
  6204  0284  00BF               	movwf	trimf@b+2
  6205  0285  3000               	movlw	0
  6206  0286  00C0               	movwf	trimf@c
  6207  0287  30A2               	movlw	162
  6208  0288  00C1               	movwf	trimf@c+1
  6209  0289  3042               	movlw	66
  6210  028A  00C2               	movwf	trimf@c+2
  6211  028B  120A  158A  22A6  120A  118A  	fcall	_trimf
  6212  0290  1283               	bcf	3,5	;RP0=0, select bank0
  6213  0291  1303               	bcf	3,6	;RP1=0, select bank0
  6214  0292  0837               	movf	?_trimf,w
  6215  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6216  0294  1303               	bcf	3,6	;RP1=0, select bank1
  6217  0295  00A3               	movwf	_fitemp^(0+128)
  6218  0296  1283               	bcf	3,5	;RP0=0, select bank0
  6219  0297  1303               	bcf	3,6	;RP1=0, select bank0
  6220  0298  0838               	movf	?_trimf+1,w
  6221  0299  1683               	bsf	3,5	;RP0=1, select bank1
  6222  029A  1303               	bcf	3,6	;RP1=0, select bank1
  6223  029B  00A4               	movwf	(_fitemp+1)^(0+128)
  6224  029C  1283               	bcf	3,5	;RP0=0, select bank0
  6225  029D  1303               	bcf	3,6	;RP1=0, select bank0
  6226  029E  0839               	movf	?_trimf+2,w
  6227  029F  1683               	bsf	3,5	;RP0=1, select bank1
  6228  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  6229  02A1  00A5               	movwf	(_fitemp+2)^(0+128)
  6230                           
  6231                           ;main.c: 200: fop_rule2 = max_val(fitemp,0.1);
  6232  02A2  0823               	movf	_fitemp^(0+128),w
  6233  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6234  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6235  02A5  00A0               	movwf	max_val@a
  6236  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6237  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  6238  02A8  0824               	movf	(_fitemp+1)^(0+128),w
  6239  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6240  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6241  02AB  00A1               	movwf	max_val@a+1
  6242  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  6243  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  6244  02AE  0825               	movf	(_fitemp+2)^(0+128),w
  6245  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6246  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  6247  02B1  00A2               	movwf	max_val@a+2
  6248  02B2  30CD               	movlw	205
  6249  02B3  00A3               	movwf	max_val@b
  6250  02B4  30CC               	movlw	204
  6251  02B5  00A4               	movwf	max_val@b+1
  6252  02B6  303D               	movlw	61
  6253  02B7  00A5               	movwf	max_val@b+2
  6254  02B8  160A  118A  22B6  120A  118A  	fcall	_max_val
  6255  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  6256  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  6257  02BF  0820               	movf	?_max_val,w
  6258  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  6259  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  6260  02C2  00A9               	movwf	_fop_rule2^(0+128)
  6261  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  6262  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  6263  02C5  0821               	movf	?_max_val+1,w
  6264  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  6265  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  6266  02C8  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6267  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  6268  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  6269  02CB  0822               	movf	?_max_val+2,w
  6270  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  6271  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  6272  02CE  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6273                           
  6274                           ;main.c: 203: x=0;
  6275  02CF  3000               	movlw	0
  6276  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  6277  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  6278  02D2  00E4               	movwf	_x
  6279  02D3  3000               	movlw	0
  6280  02D4  00E5               	movwf	_x+1
  6281  02D5  3000               	movlw	0
  6282  02D6  00E6               	movwf	_x+2
  6283                           
  6284                           ;main.c: 204: y=0;
  6285  02D7  3000               	movlw	0
  6286  02D8  00E7               	movwf	_y
  6287  02D9  3000               	movlw	0
  6288  02DA  00E8               	movwf	_y+1
  6289  02DB  3000               	movlw	0
  6290  02DC  00E9               	movwf	_y+2
  6291                           
  6292                           ;main.c: 205: for (int a=0; a<=90; a++)
  6293  02DD  01CE               	clrf	Fuzzy@a_233
  6294  02DE  01CF               	clrf	Fuzzy@a_233+1
  6295  02DF  084F               	movf	Fuzzy@a_233+1,w
  6296  02E0  3A80               	xorlw	128
  6297  02E1  00FF               	movwf	127
  6298  02E2  3080               	movlw	128
  6299  02E3  027F               	subwf	127,w
  6300  02E4  1D03               	skipz
  6301  02E5  2AE8               	goto	u341_25
  6302  02E6  305B               	movlw	91
  6303  02E7  024E               	subwf	Fuzzy@a_233,w
  6304  02E8                     u341_25:	
  6305  02E8  1803               	btfsc	3,0
  6306  02E9  2B76               	goto	i1l2792
  6307  02EA                     i1l2782:	
  6308                           
  6309                           ;main.c: 206: {
  6310                           ;main.c: 207: y = trimf(x, 9, 45, 81);
  6311  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6312  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6313  02EC  0864               	movf	_x,w
  6314  02ED  00B7               	movwf	trimf@x
  6315  02EE  0865               	movf	_x+1,w
  6316  02EF  00B8               	movwf	trimf@x+1
  6317  02F0  0866               	movf	_x+2,w
  6318  02F1  00B9               	movwf	trimf@x+2
  6319  02F2  3000               	movlw	0
  6320  02F3  00BA               	movwf	trimf@a
  6321  02F4  3010               	movlw	16
  6322  02F5  00BB               	movwf	trimf@a+1
  6323  02F6  3041               	movlw	65
  6324  02F7  00BC               	movwf	trimf@a+2
  6325  02F8  3000               	movlw	0
  6326  02F9  00BD               	movwf	trimf@b
  6327  02FA  3034               	movlw	52
  6328  02FB  00BE               	movwf	trimf@b+1
  6329  02FC  3042               	movlw	66
  6330  02FD  00BF               	movwf	trimf@b+2
  6331  02FE  3000               	movlw	0
  6332  02FF  00C0               	movwf	trimf@c
  6333  0300  30A2               	movlw	162
  6334  0301  00C1               	movwf	trimf@c+1
  6335  0302  3042               	movlw	66
  6336  0303  00C2               	movwf	trimf@c+2
  6337  0304  120A  158A  22A6  120A  118A  	fcall	_trimf
  6338  0309  1283               	bcf	3,5	;RP0=0, select bank0
  6339  030A  1303               	bcf	3,6	;RP1=0, select bank0
  6340  030B  0837               	movf	?_trimf,w
  6341  030C  00E7               	movwf	_y
  6342  030D  0838               	movf	?_trimf+1,w
  6343  030E  00E8               	movwf	_y+1
  6344  030F  0839               	movf	?_trimf+2,w
  6345  0310  00E9               	movwf	_y+2
  6346                           
  6347                           ;main.c: 209: if (y >= fop_rule2)
  6348  0311  0867               	movf	_y,w
  6349  0312  00F0               	movwf	___ftge@ff1
  6350  0313  0868               	movf	_y+1,w
  6351  0314  00F1               	movwf	___ftge@ff1+1
  6352  0315  0869               	movf	_y+2,w
  6353  0316  00F2               	movwf	___ftge@ff1+2
  6354  0317  1683               	bsf	3,5	;RP0=1, select bank1
  6355  0318  1303               	bcf	3,6	;RP1=0, select bank1
  6356  0319  0829               	movf	_fop_rule2^(0+128),w
  6357  031A  00F3               	movwf	___ftge@ff2
  6358  031B  082A               	movf	(_fop_rule2+1)^(0+128),w
  6359  031C  00F4               	movwf	___ftge@ff2+1
  6360  031D  082B               	movf	(_fop_rule2+2)^(0+128),w
  6361  031E  00F5               	movwf	___ftge@ff2+2
  6362  031F  160A  118A  254D  120A  118A  	fcall	___ftge
  6363  0324  1C03               	btfss	3,0
  6364  0325  2B31               	goto	i1l2786
  6365                           
  6366                           ;main.c: 210: {
  6367                           ;main.c: 211: reduz += fop_rule2;
  6368  0326  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0327  1303               	bcf	3,6	;RP1=0, select bank1
  6370  0328  0829               	movf	_fop_rule2^(0+128),w
  6371  0329  00F8               	movwf	___ftadd@f1
  6372  032A  082A               	movf	(_fop_rule2+1)^(0+128),w
  6373  032B  00F9               	movwf	___ftadd@f1+1
  6374  032C  082B               	movf	(_fop_rule2+2)^(0+128),w
  6375  032D  00FA               	movwf	___ftadd@f1+2
  6376  032E  1283               	bcf	3,5	;RP0=0, select bank0
  6377  032F  1303               	bcf	3,6	;RP1=0, select bank0
  6378  0330  2B39               	goto	L4
  6379  0331                     i1l2786:	
  6380                           ;main.c: 212: }
  6381                           
  6382                           
  6383                           ;main.c: 213: else
  6384                           ;main.c: 214: {
  6385                           ;main.c: 215: reduz += y;
  6386  0331  1283               	bcf	3,5	;RP0=0, select bank0
  6387  0332  1303               	bcf	3,6	;RP1=0, select bank0
  6388  0333  0867               	movf	_y,w
  6389  0334  00F8               	movwf	___ftadd@f1
  6390  0335  0868               	movf	_y+1,w
  6391  0336  00F9               	movwf	___ftadd@f1+1
  6392  0337  0869               	movf	_y+2,w
  6393  0338  00FA               	movwf	___ftadd@f1+2
  6394  0339                     L4:	
  6395  0339  0857               	movf	Fuzzy@reduz,w
  6396  033A  00FB               	movwf	___ftadd@f2
  6397  033B  0858               	movf	Fuzzy@reduz+1,w
  6398  033C  00FC               	movwf	___ftadd@f2+1
  6399  033D  0859               	movf	Fuzzy@reduz+2,w
  6400  033E  00FD               	movwf	___ftadd@f2+2
  6401  033F  120A  158A  219F  120A  118A  	fcall	___ftadd
  6402  0344  0878               	movf	?___ftadd,w
  6403  0345  1283               	bcf	3,5	;RP0=0, select bank0
  6404  0346  1303               	bcf	3,6	;RP1=0, select bank0
  6405  0347  00D7               	movwf	Fuzzy@reduz
  6406  0348  0879               	movf	?___ftadd+1,w
  6407  0349  00D8               	movwf	Fuzzy@reduz+1
  6408  034A  087A               	movf	?___ftadd+2,w
  6409  034B  00D9               	movwf	Fuzzy@reduz+2
  6410                           
  6411                           ;main.c: 216: }
  6412                           ;main.c: 218: x=x+1;
  6413  034C  3000               	movlw	0
  6414  034D  00F8               	movwf	___ftadd@f1
  6415  034E  3080               	movlw	128
  6416  034F  00F9               	movwf	___ftadd@f1+1
  6417  0350  303F               	movlw	63
  6418  0351  00FA               	movwf	___ftadd@f1+2
  6419  0352  0864               	movf	_x,w
  6420  0353  00FB               	movwf	___ftadd@f2
  6421  0354  0865               	movf	_x+1,w
  6422  0355  00FC               	movwf	___ftadd@f2+1
  6423  0356  0866               	movf	_x+2,w
  6424  0357  00FD               	movwf	___ftadd@f2+2
  6425  0358  120A  158A  219F  120A  118A  	fcall	___ftadd
  6426  035D  0878               	movf	?___ftadd,w
  6427  035E  1283               	bcf	3,5	;RP0=0, select bank0
  6428  035F  1303               	bcf	3,6	;RP1=0, select bank0
  6429  0360  00E4               	movwf	_x
  6430  0361  0879               	movf	?___ftadd+1,w
  6431  0362  00E5               	movwf	_x+1
  6432  0363  087A               	movf	?___ftadd+2,w
  6433  0364  00E6               	movwf	_x+2
  6434  0365  3001               	movlw	1
  6435  0366  07CE               	addwf	Fuzzy@a_233,f
  6436  0367  1803               	skipnc
  6437  0368  0ACF               	incf	Fuzzy@a_233+1,f
  6438  0369  3000               	movlw	0
  6439  036A  07CF               	addwf	Fuzzy@a_233+1,f
  6440  036B  084F               	movf	Fuzzy@a_233+1,w
  6441  036C  3A80               	xorlw	128
  6442  036D  00FF               	movwf	127
  6443  036E  3080               	movlw	128
  6444  036F  027F               	subwf	127,w
  6445  0370  1D03               	skipz
  6446  0371  2B74               	goto	u343_25
  6447  0372  305B               	movlw	91
  6448  0373  024E               	subwf	Fuzzy@a_233,w
  6449  0374                     u343_25:	
  6450  0374  1C03               	skipc
  6451  0375  2AEA               	goto	i1l2782
  6452  0376                     i1l2792:	
  6453                           
  6454                           ;main.c: 219: }
  6455                           ;main.c: 221: }
  6456                           ;main.c: 227: if (temp > 70 )
  6457  0376  3000               	movlw	0
  6458  0377  00F0               	movwf	___ftge@ff1
  6459  0378  308C               	movlw	140
  6460  0379  00F1               	movwf	___ftge@ff1+1
  6461  037A  3042               	movlw	66
  6462  037B  00F2               	movwf	___ftge@ff1+2
  6463  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6464  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6465  037E  0861               	movf	_temp,w
  6466  037F  00F3               	movwf	___ftge@ff2
  6467  0380  0862               	movf	_temp+1,w
  6468  0381  00F4               	movwf	___ftge@ff2+1
  6469  0382  0863               	movf	_temp+2,w
  6470  0383  00F5               	movwf	___ftge@ff2+2
  6471  0384  160A  118A  254D  120A  118A  	fcall	___ftge
  6472  0389  1803               	btfsc	3,0
  6473  038A  2C9C               	goto	i1l2816
  6474                           
  6475                           ;main.c: 228: {
  6476                           ;main.c: 230: fitemp = trapmf(temp, 62, 79, 90, 90);
  6477  038B  1283               	bcf	3,5	;RP0=0, select bank0
  6478  038C  1303               	bcf	3,6	;RP1=0, select bank0
  6479  038D  0861               	movf	_temp,w
  6480  038E  00B7               	movwf	trapmf@x
  6481  038F  0862               	movf	_temp+1,w
  6482  0390  00B8               	movwf	trapmf@x+1
  6483  0391  0863               	movf	_temp+2,w
  6484  0392  00B9               	movwf	trapmf@x+2
  6485  0393  3000               	movlw	0
  6486  0394  00BA               	movwf	trapmf@a
  6487  0395  3078               	movlw	120
  6488  0396  00BB               	movwf	trapmf@a+1
  6489  0397  3042               	movlw	66
  6490  0398  00BC               	movwf	trapmf@a+2
  6491  0399  3000               	movlw	0
  6492  039A  00BD               	movwf	trapmf@b
  6493  039B  309E               	movlw	158
  6494  039C  00BE               	movwf	trapmf@b+1
  6495  039D  3042               	movlw	66
  6496  039E  00BF               	movwf	trapmf@b+2
  6497  039F  3000               	movlw	0
  6498  03A0  00C0               	movwf	trapmf@c
  6499  03A1  30B4               	movlw	180
  6500  03A2  00C1               	movwf	trapmf@c+1
  6501  03A3  3042               	movlw	66
  6502  03A4  00C2               	movwf	trapmf@c+2
  6503  03A5  3000               	movlw	0
  6504  03A6  00C3               	movwf	trapmf@d
  6505  03A7  30B4               	movlw	180
  6506  03A8  00C4               	movwf	trapmf@d+1
  6507  03A9  3042               	movlw	66
  6508  03AA  00C5               	movwf	trapmf@d+2
  6509  03AB  120A  158A  23C4  120A  118A  	fcall	_trapmf
  6510  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  6511  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  6512  03B2  0837               	movf	?_trapmf,w
  6513  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  6514  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  6515  03B5  00A3               	movwf	_fitemp^(0+128)
  6516  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  6517  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  6518  03B8  0838               	movf	?_trapmf+1,w
  6519  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  6520  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  6521  03BB  00A4               	movwf	(_fitemp+1)^(0+128)
  6522  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  6523  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  6524  03BE  0839               	movf	?_trapmf+2,w
  6525  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  6526  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  6527  03C1  00A5               	movwf	(_fitemp+2)^(0+128)
  6528                           
  6529                           ;main.c: 234: fop_rule3 = max_val(fitemp,0.1);
  6530  03C2  0823               	movf	_fitemp^(0+128),w
  6531  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6532  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6533  03C5  00A0               	movwf	max_val@a
  6534  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6535  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6536  03C8  0824               	movf	(_fitemp+1)^(0+128),w
  6537  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6538  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6539  03CB  00A1               	movwf	max_val@a+1
  6540  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  6541  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  6542  03CE  0825               	movf	(_fitemp+2)^(0+128),w
  6543  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  6544  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  6545  03D1  00A2               	movwf	max_val@a+2
  6546  03D2  30CD               	movlw	205
  6547  03D3  00A3               	movwf	max_val@b
  6548  03D4  30CC               	movlw	204
  6549  03D5  00A4               	movwf	max_val@b+1
  6550  03D6  303D               	movlw	61
  6551  03D7  00A5               	movwf	max_val@b+2
  6552  03D8  160A  118A  22B6  120A  118A  	fcall	_max_val
  6553  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  6554  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  6555  03DF  0820               	movf	?_max_val,w
  6556  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  6557  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  6558  03E2  00AC               	movwf	_fop_rule3^(0+128)
  6559  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  6560  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  6561  03E5  0821               	movf	?_max_val+1,w
  6562  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  6563  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  6564  03E8  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6565  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  6566  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  6567  03EB  0822               	movf	?_max_val+2,w
  6568  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  6569  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  6570  03EE  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6571                           
  6572                           ;main.c: 237: x=0;
  6573  03EF  3000               	movlw	0
  6574  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  6575  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  6576  03F2  00E4               	movwf	_x
  6577  03F3  3000               	movlw	0
  6578  03F4  00E5               	movwf	_x+1
  6579  03F5  3000               	movlw	0
  6580  03F6  00E6               	movwf	_x+2
  6581                           
  6582                           ;main.c: 238: y=0;
  6583  03F7  3000               	movlw	0
  6584  03F8  00E7               	movwf	_y
  6585  03F9  3000               	movlw	0
  6586  03FA  00E8               	movwf	_y+1
  6587  03FB  3000               	movlw	0
  6588  03FC  00E9               	movwf	_y+2
  6589                           
  6590                           ;main.c: 239: for (int a=0; a<=90; a++)
  6591  03FD  01D0               	clrf	Fuzzy@a_234
  6592  03FE  01D1               	clrf	Fuzzy@a_234+1
  6593  03FF  0851               	movf	Fuzzy@a_234+1,w
  6594  0400  3A80               	xorlw	128
  6595  0401  00FF               	movwf	127
  6596  0402  3080               	movlw	128
  6597  0403  027F               	subwf	127,w
  6598  0404  1D03               	skipz
  6599  0405  2C08               	goto	u345_25
  6600  0406  305B               	movlw	91
  6601  0407  0250               	subwf	Fuzzy@a_234,w
  6602  0408                     u345_25:	
  6603  0408  1803               	btfsc	3,0
  6604  0409  2C9C               	goto	i1l2816
  6605  040A                     i1l2806:	
  6606                           
  6607                           ;main.c: 240: {
  6608                           ;main.c: 241: y = trapmf(x, 62, 79, 90, 90);
  6609  040A  1283               	bcf	3,5	;RP0=0, select bank0
  6610  040B  1303               	bcf	3,6	;RP1=0, select bank0
  6611  040C  0864               	movf	_x,w
  6612  040D  00B7               	movwf	trapmf@x
  6613  040E  0865               	movf	_x+1,w
  6614  040F  00B8               	movwf	trapmf@x+1
  6615  0410  0866               	movf	_x+2,w
  6616  0411  00B9               	movwf	trapmf@x+2
  6617  0412  3000               	movlw	0
  6618  0413  00BA               	movwf	trapmf@a
  6619  0414  3078               	movlw	120
  6620  0415  00BB               	movwf	trapmf@a+1
  6621  0416  3042               	movlw	66
  6622  0417  00BC               	movwf	trapmf@a+2
  6623  0418  3000               	movlw	0
  6624  0419  00BD               	movwf	trapmf@b
  6625  041A  309E               	movlw	158
  6626  041B  00BE               	movwf	trapmf@b+1
  6627  041C  3042               	movlw	66
  6628  041D  00BF               	movwf	trapmf@b+2
  6629  041E  3000               	movlw	0
  6630  041F  00C0               	movwf	trapmf@c
  6631  0420  30B4               	movlw	180
  6632  0421  00C1               	movwf	trapmf@c+1
  6633  0422  3042               	movlw	66
  6634  0423  00C2               	movwf	trapmf@c+2
  6635  0424  3000               	movlw	0
  6636  0425  00C3               	movwf	trapmf@d
  6637  0426  30B4               	movlw	180
  6638  0427  00C4               	movwf	trapmf@d+1
  6639  0428  3042               	movlw	66
  6640  0429  00C5               	movwf	trapmf@d+2
  6641  042A  120A  158A  23C4  120A  118A  	fcall	_trapmf
  6642  042F  1283               	bcf	3,5	;RP0=0, select bank0
  6643  0430  1303               	bcf	3,6	;RP1=0, select bank0
  6644  0431  0837               	movf	?_trapmf,w
  6645  0432  00E7               	movwf	_y
  6646  0433  0838               	movf	?_trapmf+1,w
  6647  0434  00E8               	movwf	_y+1
  6648  0435  0839               	movf	?_trapmf+2,w
  6649  0436  00E9               	movwf	_y+2
  6650                           
  6651                           ;main.c: 243: if (y >= fop_rule3)
  6652  0437  0867               	movf	_y,w
  6653  0438  00F0               	movwf	___ftge@ff1
  6654  0439  0868               	movf	_y+1,w
  6655  043A  00F1               	movwf	___ftge@ff1+1
  6656  043B  0869               	movf	_y+2,w
  6657  043C  00F2               	movwf	___ftge@ff1+2
  6658  043D  1683               	bsf	3,5	;RP0=1, select bank1
  6659  043E  1303               	bcf	3,6	;RP1=0, select bank1
  6660  043F  082C               	movf	_fop_rule3^(0+128),w
  6661  0440  00F3               	movwf	___ftge@ff2
  6662  0441  082D               	movf	(_fop_rule3+1)^(0+128),w
  6663  0442  00F4               	movwf	___ftge@ff2+1
  6664  0443  082E               	movf	(_fop_rule3+2)^(0+128),w
  6665  0444  00F5               	movwf	___ftge@ff2+2
  6666  0445  160A  118A  254D  120A  118A  	fcall	___ftge
  6667  044A  1C03               	btfss	3,0
  6668  044B  2C57               	goto	i1l2810
  6669                           
  6670                           ;main.c: 244: {
  6671                           ;main.c: 245: aumenta += fop_rule3;
  6672  044C  1683               	bsf	3,5	;RP0=1, select bank1
  6673  044D  1303               	bcf	3,6	;RP1=0, select bank1
  6674  044E  082C               	movf	_fop_rule3^(0+128),w
  6675  044F  00F8               	movwf	___ftadd@f1
  6676  0450  082D               	movf	(_fop_rule3+1)^(0+128),w
  6677  0451  00F9               	movwf	___ftadd@f1+1
  6678  0452  082E               	movf	(_fop_rule3+2)^(0+128),w
  6679  0453  00FA               	movwf	___ftadd@f1+2
  6680  0454  1283               	bcf	3,5	;RP0=0, select bank0
  6681  0455  1303               	bcf	3,6	;RP1=0, select bank0
  6682  0456  2C5F               	goto	L5
  6683  0457                     i1l2810:	
  6684                           ;main.c: 246: }
  6685                           
  6686                           
  6687                           ;main.c: 247: else
  6688                           ;main.c: 248: {
  6689                           ;main.c: 249: aumenta += y;
  6690  0457  1283               	bcf	3,5	;RP0=0, select bank0
  6691  0458  1303               	bcf	3,6	;RP1=0, select bank0
  6692  0459  0867               	movf	_y,w
  6693  045A  00F8               	movwf	___ftadd@f1
  6694  045B  0868               	movf	_y+1,w
  6695  045C  00F9               	movwf	___ftadd@f1+1
  6696  045D  0869               	movf	_y+2,w
  6697  045E  00FA               	movwf	___ftadd@f1+2
  6698  045F                     L5:	
  6699  045F  085A               	movf	Fuzzy@aumenta,w
  6700  0460  00FB               	movwf	___ftadd@f2
  6701  0461  085B               	movf	Fuzzy@aumenta+1,w
  6702  0462  00FC               	movwf	___ftadd@f2+1
  6703  0463  085C               	movf	Fuzzy@aumenta+2,w
  6704  0464  00FD               	movwf	___ftadd@f2+2
  6705  0465  120A  158A  219F  120A  118A  	fcall	___ftadd
  6706  046A  0878               	movf	?___ftadd,w
  6707  046B  1283               	bcf	3,5	;RP0=0, select bank0
  6708  046C  1303               	bcf	3,6	;RP1=0, select bank0
  6709  046D  00DA               	movwf	Fuzzy@aumenta
  6710  046E  0879               	movf	?___ftadd+1,w
  6711  046F  00DB               	movwf	Fuzzy@aumenta+1
  6712  0470  087A               	movf	?___ftadd+2,w
  6713  0471  00DC               	movwf	Fuzzy@aumenta+2
  6714                           
  6715                           ;main.c: 250: }
  6716                           ;main.c: 252: x=x+1;
  6717  0472  3000               	movlw	0
  6718  0473  00F8               	movwf	___ftadd@f1
  6719  0474  3080               	movlw	128
  6720  0475  00F9               	movwf	___ftadd@f1+1
  6721  0476  303F               	movlw	63
  6722  0477  00FA               	movwf	___ftadd@f1+2
  6723  0478  0864               	movf	_x,w
  6724  0479  00FB               	movwf	___ftadd@f2
  6725  047A  0865               	movf	_x+1,w
  6726  047B  00FC               	movwf	___ftadd@f2+1
  6727  047C  0866               	movf	_x+2,w
  6728  047D  00FD               	movwf	___ftadd@f2+2
  6729  047E  120A  158A  219F  120A  118A  	fcall	___ftadd
  6730  0483  0878               	movf	?___ftadd,w
  6731  0484  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0485  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0486  00E4               	movwf	_x
  6734  0487  0879               	movf	?___ftadd+1,w
  6735  0488  00E5               	movwf	_x+1
  6736  0489  087A               	movf	?___ftadd+2,w
  6737  048A  00E6               	movwf	_x+2
  6738  048B  3001               	movlw	1
  6739  048C  07D0               	addwf	Fuzzy@a_234,f
  6740  048D  1803               	skipnc
  6741  048E  0AD1               	incf	Fuzzy@a_234+1,f
  6742  048F  3000               	movlw	0
  6743  0490  07D1               	addwf	Fuzzy@a_234+1,f
  6744  0491  0851               	movf	Fuzzy@a_234+1,w
  6745  0492  3A80               	xorlw	128
  6746  0493  00FF               	movwf	127
  6747  0494  3080               	movlw	128
  6748  0495  027F               	subwf	127,w
  6749  0496  1D03               	skipz
  6750  0497  2C9A               	goto	u347_25
  6751  0498  305B               	movlw	91
  6752  0499  0250               	subwf	Fuzzy@a_234,w
  6753  049A                     u347_25:	
  6754  049A  1C03               	skipc
  6755  049B  2C0A               	goto	i1l2806
  6756  049C                     i1l2816:	
  6757                           
  6758                           ;main.c: 253: }
  6759                           ;main.c: 255: }
  6760                           ;main.c: 258: for (int a=0; a<1; a++)
  6761  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6762  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6763  049E  01D2               	clrf	Fuzzy@a_235
  6764  049F  01D3               	clrf	Fuzzy@a_235+1
  6765  04A0  0853               	movf	Fuzzy@a_235+1,w
  6766  04A1  3A80               	xorlw	128
  6767  04A2  00FF               	movwf	127
  6768  04A3  3080               	movlw	128
  6769  04A4  027F               	subwf	127,w
  6770  04A5  1D03               	skipz
  6771  04A6  2CA9               	goto	u348_25
  6772  04A7  3001               	movlw	1
  6773  04A8  0252               	subwf	Fuzzy@a_235,w
  6774  04A9                     u348_25:	
  6775  04A9  1803               	btfsc	3,0
  6776  04AA  2D13               	goto	i1l2836
  6777  04AB                     i1l2822:	
  6778                           
  6779                           ;main.c: 259: {
  6780                           ;main.c: 260: if (temp < 25)
  6781  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  6782  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  6783  04AD  0861               	movf	_temp,w
  6784  04AE  00F0               	movwf	___ftge@ff1
  6785  04AF  0862               	movf	_temp+1,w
  6786  04B0  00F1               	movwf	___ftge@ff1+1
  6787  04B1  0863               	movf	_temp+2,w
  6788  04B2  00F2               	movwf	___ftge@ff1+2
  6789  04B3  3000               	movlw	0
  6790  04B4  00F3               	movwf	___ftge@ff2
  6791  04B5  30C8               	movlw	200
  6792  04B6  00F4               	movwf	___ftge@ff2+1
  6793  04B7  3041               	movlw	65
  6794  04B8  00F5               	movwf	___ftge@ff2+2
  6795  04B9  160A  118A  254D  120A  118A  	fcall	___ftge
  6796  04BE  1803               	btfsc	3,0
  6797  04BF  2CC8               	goto	i1l2826
  6798                           
  6799                           ;main.c: 261: {
  6800                           ;main.c: 262: tip = mantem;
  6801  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  6802  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  6803  04C2  0854               	movf	Fuzzy@mantem,w
  6804  04C3  00C9               	movwf	Fuzzy@tip
  6805  04C4  0855               	movf	Fuzzy@mantem+1,w
  6806  04C5  00CA               	movwf	Fuzzy@tip+1
  6807  04C6  0856               	movf	Fuzzy@mantem+2,w
  6808  04C7  2D01               	goto	L7
  6809  04C8                     i1l2826:	
  6810                           ;main.c: 263: }else
  6811                           
  6812                           
  6813                           ;main.c: 264: if (temp >= 25 && temp < 75)
  6814  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  6815  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  6816  04CA  0861               	movf	_temp,w
  6817  04CB  00F0               	movwf	___ftge@ff1
  6818  04CC  0862               	movf	_temp+1,w
  6819  04CD  00F1               	movwf	___ftge@ff1+1
  6820  04CE  0863               	movf	_temp+2,w
  6821  04CF  00F2               	movwf	___ftge@ff1+2
  6822  04D0  3000               	movlw	0
  6823  04D1  00F3               	movwf	___ftge@ff2
  6824  04D2  30C8               	movlw	200
  6825  04D3  00F4               	movwf	___ftge@ff2+1
  6826  04D4  3041               	movlw	65
  6827  04D5  00F5               	movwf	___ftge@ff2+2
  6828  04D6  160A  118A  254D  120A  118A  	fcall	___ftge
  6829  04DB  1C03               	btfss	3,0
  6830  04DC  2CFA               	goto	i1l2832
  6831  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  6832  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  6833  04DF  0861               	movf	_temp,w
  6834  04E0  00F0               	movwf	___ftge@ff1
  6835  04E1  0862               	movf	_temp+1,w
  6836  04E2  00F1               	movwf	___ftge@ff1+1
  6837  04E3  0863               	movf	_temp+2,w
  6838  04E4  00F2               	movwf	___ftge@ff1+2
  6839  04E5  3000               	movlw	0
  6840  04E6  00F3               	movwf	___ftge@ff2
  6841  04E7  3096               	movlw	150
  6842  04E8  00F4               	movwf	___ftge@ff2+1
  6843  04E9  3042               	movlw	66
  6844  04EA  00F5               	movwf	___ftge@ff2+2
  6845  04EB  160A  118A  254D  120A  118A  	fcall	___ftge
  6846  04F0  1803               	btfsc	3,0
  6847  04F1  2CFA               	goto	i1l2832
  6848                           
  6849                           ;main.c: 265: {
  6850                           ;main.c: 266: tip = reduz;
  6851  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6852  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6853  04F4  0857               	movf	Fuzzy@reduz,w
  6854  04F5  00C9               	movwf	Fuzzy@tip
  6855  04F6  0858               	movf	Fuzzy@reduz+1,w
  6856  04F7  00CA               	movwf	Fuzzy@tip+1
  6857  04F8  0859               	movf	Fuzzy@reduz+2,w
  6858  04F9  2D01               	goto	L7
  6859  04FA                     i1l2832:	
  6860                           ;main.c: 267: }else
  6861                           
  6862                           
  6863                           ;main.c: 268: {
  6864                           ;main.c: 269: tip = aumenta;
  6865  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  6866  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  6867  04FC  085A               	movf	Fuzzy@aumenta,w
  6868  04FD  00C9               	movwf	Fuzzy@tip
  6869  04FE  085B               	movf	Fuzzy@aumenta+1,w
  6870  04FF  00CA               	movwf	Fuzzy@tip+1
  6871  0500  085C               	movf	Fuzzy@aumenta+2,w
  6872  0501                     L7:	
  6873  0501  00CB               	movwf	Fuzzy@tip+2
  6874  0502  3001               	movlw	1
  6875  0503  07D2               	addwf	Fuzzy@a_235,f
  6876  0504  1803               	skipnc
  6877  0505  0AD3               	incf	Fuzzy@a_235+1,f
  6878  0506  3000               	movlw	0
  6879  0507  07D3               	addwf	Fuzzy@a_235+1,f
  6880  0508  0853               	movf	Fuzzy@a_235+1,w
  6881  0509  3A80               	xorlw	128
  6882  050A  00FF               	movwf	127
  6883  050B  3080               	movlw	128
  6884  050C  027F               	subwf	127,w
  6885  050D  1D03               	skipz
  6886  050E  2D11               	goto	u352_25
  6887  050F  3001               	movlw	1
  6888  0510  0252               	subwf	Fuzzy@a_235,w
  6889  0511                     u352_25:	
  6890  0511  1C03               	skipc
  6891  0512  2CAB               	goto	i1l2822
  6892  0513                     i1l2836:	
  6893                           
  6894                           ;main.c: 270: }
  6895                           ;main.c: 271: }
  6896                           ;main.c: 275: total_area = 90;
  6897  0513  3000               	movlw	0
  6898  0514  1683               	bsf	3,5	;RP0=1, select bank1
  6899  0515  1303               	bcf	3,6	;RP1=0, select bank1
  6900  0516  00B5               	movwf	_total_area^(0+128)
  6901  0517  30B4               	movlw	180
  6902  0518  00B6               	movwf	(_total_area+1)^(0+128)
  6903  0519  3042               	movlw	66
  6904  051A  00B7               	movwf	(_total_area+2)^(0+128)
  6905                           
  6906                           ;main.c: 276: sum = 0;
  6907  051B  3000               	movlw	0
  6908  051C  00AF               	movwf	_sum^(0+128)
  6909  051D  3000               	movlw	0
  6910  051E  00B0               	movwf	(_sum+1)^(0+128)
  6911  051F  3000               	movlw	0
  6912  0520  00B1               	movwf	(_sum+2)^(0+128)
  6913                           
  6914                           ;main.c: 278: sum = sum + tip;
  6915  0521  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0522  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0523  0849               	movf	Fuzzy@tip,w
  6918  0524  00F8               	movwf	___ftadd@f1
  6919  0525  084A               	movf	Fuzzy@tip+1,w
  6920  0526  00F9               	movwf	___ftadd@f1+1
  6921  0527  084B               	movf	Fuzzy@tip+2,w
  6922  0528  00FA               	movwf	___ftadd@f1+2
  6923  0529  1683               	bsf	3,5	;RP0=1, select bank1
  6924  052A  1303               	bcf	3,6	;RP1=0, select bank1
  6925  052B  082F               	movf	_sum^(0+128),w
  6926  052C  00FB               	movwf	___ftadd@f2
  6927  052D  0830               	movf	(_sum+1)^(0+128),w
  6928  052E  00FC               	movwf	___ftadd@f2+1
  6929  052F  0831               	movf	(_sum+2)^(0+128),w
  6930  0530  00FD               	movwf	___ftadd@f2+2
  6931  0531  120A  158A  219F  120A  118A  	fcall	___ftadd
  6932  0536  0878               	movf	?___ftadd,w
  6933  0537  1683               	bsf	3,5	;RP0=1, select bank1
  6934  0538  1303               	bcf	3,6	;RP1=0, select bank1
  6935  0539  00AF               	movwf	_sum^(0+128)
  6936  053A  0879               	movf	?___ftadd+1,w
  6937  053B  00B0               	movwf	(_sum+1)^(0+128)
  6938  053C  087A               	movf	?___ftadd+2,w
  6939  053D  00B1               	movwf	(_sum+2)^(0+128)
  6940                           
  6941                           ;main.c: 280: x=x+1;
  6942  053E  3000               	movlw	0
  6943  053F  00F8               	movwf	___ftadd@f1
  6944  0540  3080               	movlw	128
  6945  0541  00F9               	movwf	___ftadd@f1+1
  6946  0542  303F               	movlw	63
  6947  0543  00FA               	movwf	___ftadd@f1+2
  6948  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0546  0864               	movf	_x,w
  6951  0547  00FB               	movwf	___ftadd@f2
  6952  0548  0865               	movf	_x+1,w
  6953  0549  00FC               	movwf	___ftadd@f2+1
  6954  054A  0866               	movf	_x+2,w
  6955  054B  00FD               	movwf	___ftadd@f2+2
  6956  054C  120A  158A  219F  120A  118A  	fcall	___ftadd
  6957  0551  0878               	movf	?___ftadd,w
  6958  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6959  0553  1303               	bcf	3,6	;RP1=0, select bank0
  6960  0554  00E4               	movwf	_x
  6961  0555  0879               	movf	?___ftadd+1,w
  6962  0556  00E5               	movwf	_x+1
  6963  0557  087A               	movf	?___ftadd+2,w
  6964  0558  00E6               	movwf	_x+2
  6965                           
  6966                           ;main.c: 283: ativa_fan = sum/total_area;
  6967  0559  1683               	bsf	3,5	;RP0=1, select bank1
  6968  055A  1303               	bcf	3,6	;RP1=0, select bank1
  6969  055B  0835               	movf	_total_area^(0+128),w
  6970  055C  1283               	bcf	3,5	;RP0=0, select bank0
  6971  055D  1303               	bcf	3,6	;RP1=0, select bank0
  6972  055E  00A7               	movwf	___ftdiv@f2
  6973  055F  1683               	bsf	3,5	;RP0=1, select bank1
  6974  0560  1303               	bcf	3,6	;RP1=0, select bank1
  6975  0561  0836               	movf	(_total_area+1)^(0+128),w
  6976  0562  1283               	bcf	3,5	;RP0=0, select bank0
  6977  0563  1303               	bcf	3,6	;RP1=0, select bank0
  6978  0564  00A8               	movwf	___ftdiv@f2+1
  6979  0565  1683               	bsf	3,5	;RP0=1, select bank1
  6980  0566  1303               	bcf	3,6	;RP1=0, select bank1
  6981  0567  0837               	movf	(_total_area+2)^(0+128),w
  6982  0568  1283               	bcf	3,5	;RP0=0, select bank0
  6983  0569  1303               	bcf	3,6	;RP1=0, select bank0
  6984  056A  00A9               	movwf	___ftdiv@f2+2
  6985  056B  1683               	bsf	3,5	;RP0=1, select bank1
  6986  056C  1303               	bcf	3,6	;RP1=0, select bank1
  6987  056D  082F               	movf	_sum^(0+128),w
  6988  056E  1283               	bcf	3,5	;RP0=0, select bank0
  6989  056F  1303               	bcf	3,6	;RP1=0, select bank0
  6990  0570  00AA               	movwf	___ftdiv@f1
  6991  0571  1683               	bsf	3,5	;RP0=1, select bank1
  6992  0572  1303               	bcf	3,6	;RP1=0, select bank1
  6993  0573  0830               	movf	(_sum+1)^(0+128),w
  6994  0574  1283               	bcf	3,5	;RP0=0, select bank0
  6995  0575  1303               	bcf	3,6	;RP1=0, select bank0
  6996  0576  00AB               	movwf	___ftdiv@f1+1
  6997  0577  1683               	bsf	3,5	;RP0=1, select bank1
  6998  0578  1303               	bcf	3,6	;RP1=0, select bank1
  6999  0579  0831               	movf	(_sum+2)^(0+128),w
  7000  057A  1283               	bcf	3,5	;RP0=0, select bank0
  7001  057B  1303               	bcf	3,6	;RP1=0, select bank0
  7002  057C  00AC               	movwf	___ftdiv@f1+2
  7003  057D  120A  158A  20E7  120A  118A  	fcall	___ftdiv
  7004  0582  1283               	bcf	3,5	;RP0=0, select bank0
  7005  0583  1303               	bcf	3,6	;RP1=0, select bank0
  7006  0584  0827               	movf	?___ftdiv,w
  7007  0585  1683               	bsf	3,5	;RP0=1, select bank1
  7008  0586  1303               	bcf	3,6	;RP1=0, select bank1
  7009  0587  00A0               	movwf	_ativa_fan^(0+128)
  7010  0588  1283               	bcf	3,5	;RP0=0, select bank0
  7011  0589  1303               	bcf	3,6	;RP1=0, select bank0
  7012  058A  0828               	movf	?___ftdiv+1,w
  7013  058B  1683               	bsf	3,5	;RP0=1, select bank1
  7014  058C  1303               	bcf	3,6	;RP1=0, select bank1
  7015  058D  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7016  058E  1283               	bcf	3,5	;RP0=0, select bank0
  7017  058F  1303               	bcf	3,6	;RP1=0, select bank0
  7018  0590  0829               	movf	?___ftdiv+2,w
  7019  0591  1683               	bsf	3,5	;RP0=1, select bank1
  7020  0592  1303               	bcf	3,6	;RP1=0, select bank1
  7021  0593  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7022                           
  7023                           ;main.c: 286: ativa_fan = ativa_fan*20;
  7024  0594  3000               	movlw	0
  7025  0595  1283               	bcf	3,5	;RP0=0, select bank0
  7026  0596  1303               	bcf	3,6	;RP1=0, select bank0
  7027  0597  00B7               	movwf	___ftmul@f1
  7028  0598  30A0               	movlw	160
  7029  0599  00B8               	movwf	___ftmul@f1+1
  7030  059A  3041               	movlw	65
  7031  059B  00B9               	movwf	___ftmul@f1+2
  7032  059C  1683               	bsf	3,5	;RP0=1, select bank1
  7033  059D  1303               	bcf	3,6	;RP1=0, select bank1
  7034  059E  0820               	movf	_ativa_fan^(0+128),w
  7035  059F  1283               	bcf	3,5	;RP0=0, select bank0
  7036  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  7037  05A1  00BA               	movwf	___ftmul@f2
  7038  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  7039  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  7040  05A4  0821               	movf	(_ativa_fan+1)^(0+128),w
  7041  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  7042  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  7043  05A7  00BB               	movwf	___ftmul@f2+1
  7044  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  7045  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  7046  05AA  0822               	movf	(_ativa_fan+2)^(0+128),w
  7047  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  7048  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  7049  05AD  00BC               	movwf	___ftmul@f2+2
  7050  05AE  160A  118A  272D  120A  118A  	fcall	___ftmul
  7051  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  7052  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  7053  05B5  0837               	movf	?___ftmul,w
  7054  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  7055  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  7056  05B8  00A0               	movwf	_ativa_fan^(0+128)
  7057  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  7058  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  7059  05BB  0838               	movf	?___ftmul+1,w
  7060  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  7061  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  7062  05BE  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7063  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  7064  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  7065  05C1  0839               	movf	?___ftmul+2,w
  7066  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  7067  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  7068  05C4  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7069                           
  7070                           ;main.c: 288: if (deltaV >0 && deltaV < 1020)
  7071  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  7072  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  7073  05C7  086B               	movf	_deltaV+1,w
  7074  05C8  046A               	iorwf	_deltaV,w
  7075  05C9  1903               	skipnz
  7076  05CA  0008               	return
  7077  05CB  3003               	movlw	3
  7078  05CC  026B               	subwf	_deltaV+1,w
  7079  05CD  30FC               	movlw	252
  7080  05CE  1903               	skipnz
  7081  05CF  026A               	subwf	_deltaV,w
  7082  05D0  1803               	skipnc
  7083  05D1  0008               	return
  7084                           
  7085                           ;main.c: 289: {
  7086                           ;main.c: 290: PWM_DutyCycle2(deltaV);
  7087  05D2  086B               	movf	_deltaV+1,w
  7088  05D3  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7089  05D4  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7090  05D5  086A               	movf	_deltaV,w
  7091  05D6  01F0               	clrf	i1PWM_DutyCycle2@valor
  7092  05D7  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7093  05D8  160A  118A  2280   	fcall	i1_PWM_DutyCycle2
  7094  05DB  0008               	return
  7095  05DC                     __end_of_Fuzzy:	
  7096                           
  7097                           	psect	text30
  7098  1280                     __ptext30:	
  7099 ;; *************** function i1_PWM_DutyCycle2 *****************
  7100 ;; Defined at:
  7101 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  valor           2    0[COMMON] int 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;		None               void
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7115 ;;      Params:         2       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0
  7117 ;;      Temps:          2       0       0       0       0
  7118 ;;      Totals:         4       0       0       0       0
  7119 ;;Total ram usage:        4 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_Fuzzy
  7125 ;;		_ISR
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           
  7130                           ;psect for function i1_PWM_DutyCycle2
  7131  1280                     i1_PWM_DutyCycle2:	
  7132                           
  7133                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7134                           
  7135                           ;incstack = 0
  7136                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7137  1280  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7138  1281  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7139  1282  0870               	movf	i1PWM_DutyCycle2@valor,w
  7140  1283  00F2               	movwf	??i1_PWM_DutyCycle2
  7141  1284  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7142  1285  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7143  1286  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7144  1287  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7145  1288  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7146  1289  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7147  128A  0872               	movf	??i1_PWM_DutyCycle2,w
  7148  128B  1283               	bcf	3,5	;RP0=0, select bank0
  7149  128C  1303               	bcf	3,6	;RP1=0, select bank0
  7150  128D  009B               	movwf	27	;volatile
  7151                           
  7152                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7153  128E  0870               	movf	i1PWM_DutyCycle2@valor,w
  7154  128F  00F2               	movwf	??i1_PWM_DutyCycle2
  7155  1290  3003               	movlw	3
  7156  1291                     u332_25:	
  7157  1291  1003               	clrc
  7158  1292  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7159  1293  3EFF               	addlw	-1
  7160  1294  1D03               	skipz
  7161  1295  2A91               	goto	u332_25
  7162  1296  1003               	clrc
  7163  1297  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7164  1298  380C               	iorlw	12
  7165  1299  009D               	movwf	29	;volatile
  7166  129A  0008               	return
  7167  129B                     __end_ofi1_PWM_DutyCycle2:	
  7168                           
  7169                           	psect	text31
  7170  0AA6                     __ptext31:	
  7171 ;; *************** function _trimf *****************
  7172 ;; Defined at:
  7173 ;;		line 69 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  x               3   23[BANK0 ] float 
  7176 ;;  a               3   26[BANK0 ] float 
  7177 ;;  b               3   29[BANK0 ] float 
  7178 ;;  c               3   32[BANK0 ] float 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  ua              3   35[BANK0 ] float 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  3   23[BANK0 ] float 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0, pclath, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7190 ;;      Params:         0      12       0       0       0
  7191 ;;      Locals:         0       3       0       0       0
  7192 ;;      Temps:          0       0       0       0       0
  7193 ;;      Totals:         0      15       0       0       0
  7194 ;;Total ram usage:       15 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    2
  7197 ;; This function calls:
  7198 ;;		___ftadd
  7199 ;;		___ftdiv
  7200 ;;		___ftge
  7201 ;;		___ftneg
  7202 ;; This function is called by:
  7203 ;;		_Fuzzy
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           
  7208                           ;psect for function _trimf
  7209  0AA6                     _trimf:	
  7210                           
  7211                           ;main.c: 71: float ua = 0;
  7212                           
  7213                           ;incstack = 0
  7214                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7215  0AA6  3000               	movlw	0
  7216  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0AA9  00C3               	movwf	trimf@ua
  7219  0AAA  3000               	movlw	0
  7220  0AAB  00C4               	movwf	trimf@ua+1
  7221  0AAC  3000               	movlw	0
  7222  0AAD  00C5               	movwf	trimf@ua+2
  7223                           
  7224                           ;main.c: 73: if (x <= a)
  7225  0AAE  083A               	movf	trimf@a,w
  7226  0AAF  00F0               	movwf	___ftge@ff1
  7227  0AB0  083B               	movf	trimf@a+1,w
  7228  0AB1  00F1               	movwf	___ftge@ff1+1
  7229  0AB2  083C               	movf	trimf@a+2,w
  7230  0AB3  00F2               	movwf	___ftge@ff1+2
  7231  0AB4  0837               	movf	trimf@x,w
  7232  0AB5  00F3               	movwf	___ftge@ff2
  7233  0AB6  0838               	movf	trimf@x+1,w
  7234  0AB7  00F4               	movwf	___ftge@ff2+1
  7235  0AB8  0839               	movf	trimf@x+2,w
  7236  0AB9  00F5               	movwf	___ftge@ff2+2
  7237  0ABA  160A  118A  254D  120A  158A  	fcall	___ftge
  7238  0ABF  1803               	btfsc	3,0
  7239  0AC0  2BB3               	goto	L12
  7240                           
  7241                           ;main.c: 75: else if ((a < x) && (x <= b))
  7242                           
  7243                           ;main.c: 74: ua = 0;
  7244  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  7245  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  7246  0AC3  083A               	movf	trimf@a,w
  7247  0AC4  00F0               	movwf	___ftge@ff1
  7248  0AC5  083B               	movf	trimf@a+1,w
  7249  0AC6  00F1               	movwf	___ftge@ff1+1
  7250  0AC7  083C               	movf	trimf@a+2,w
  7251  0AC8  00F2               	movwf	___ftge@ff1+2
  7252  0AC9  0837               	movf	trimf@x,w
  7253  0ACA  00F3               	movwf	___ftge@ff2
  7254  0ACB  0838               	movf	trimf@x+1,w
  7255  0ACC  00F4               	movwf	___ftge@ff2+1
  7256  0ACD  0839               	movf	trimf@x+2,w
  7257  0ACE  00F5               	movwf	___ftge@ff2+2
  7258  0ACF  160A  118A  254D  120A  158A  	fcall	___ftge
  7259  0AD4  1803               	btfsc	3,0
  7260  0AD5  2B1D               	goto	i1l2432
  7261  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  7262  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  7263  0AD8  083D               	movf	trimf@b,w
  7264  0AD9  00F0               	movwf	___ftge@ff1
  7265  0ADA  083E               	movf	trimf@b+1,w
  7266  0ADB  00F1               	movwf	___ftge@ff1+1
  7267  0ADC  083F               	movf	trimf@b+2,w
  7268  0ADD  00F2               	movwf	___ftge@ff1+2
  7269  0ADE  0837               	movf	trimf@x,w
  7270  0ADF  00F3               	movwf	___ftge@ff2
  7271  0AE0  0838               	movf	trimf@x+1,w
  7272  0AE1  00F4               	movwf	___ftge@ff2+1
  7273  0AE2  0839               	movf	trimf@x+2,w
  7274  0AE3  00F5               	movwf	___ftge@ff2+2
  7275  0AE4  160A  118A  254D  120A  158A  	fcall	___ftge
  7276  0AE9  1C03               	btfss	3,0
  7277  0AEA  2B1D               	goto	i1l2432
  7278                           
  7279                           ;main.c: 76: ua = ((x - a) / (b - a));
  7280  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  7281  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  7282  0AED  083D               	movf	trimf@b,w
  7283  0AEE  00F8               	movwf	___ftadd@f1
  7284  0AEF  083E               	movf	trimf@b+1,w
  7285  0AF0  00F9               	movwf	___ftadd@f1+1
  7286  0AF1  083F               	movf	trimf@b+2,w
  7287  0AF2  00FA               	movwf	___ftadd@f1+2
  7288  0AF3  083A               	movf	trimf@a,w
  7289  0AF4  00F0               	movwf	___ftneg@f1
  7290  0AF5  083B               	movf	trimf@a+1,w
  7291  0AF6  00F1               	movwf	___ftneg@f1+1
  7292  0AF7  083C               	movf	trimf@a+2,w
  7293  0AF8  00F2               	movwf	___ftneg@f1+2
  7294  0AF9  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7295  0AFE  0870               	movf	?___ftneg,w
  7296  0AFF  00FB               	movwf	___ftadd@f2
  7297  0B00  0871               	movf	?___ftneg+1,w
  7298  0B01  00FC               	movwf	___ftadd@f2+1
  7299  0B02  0872               	movf	?___ftneg+2,w
  7300  0B03  00FD               	movwf	___ftadd@f2+2
  7301  0B04  120A  158A  219F  120A  158A  	fcall	___ftadd
  7302  0B09  0878               	movf	?___ftadd,w
  7303  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  7304  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  7305  0B0C  00A7               	movwf	___ftdiv@f2
  7306  0B0D  0879               	movf	?___ftadd+1,w
  7307  0B0E  00A8               	movwf	___ftdiv@f2+1
  7308  0B0F  087A               	movf	?___ftadd+2,w
  7309  0B10  00A9               	movwf	___ftdiv@f2+2
  7310  0B11  0837               	movf	trimf@x,w
  7311  0B12  00F8               	movwf	___ftadd@f1
  7312  0B13  0838               	movf	trimf@x+1,w
  7313  0B14  00F9               	movwf	___ftadd@f1+1
  7314  0B15  0839               	movf	trimf@x+2,w
  7315  0B16  00FA               	movwf	___ftadd@f1+2
  7316  0B17  083A               	movf	trimf@a,w
  7317  0B18  00F0               	movwf	___ftneg@f1
  7318  0B19  083B               	movf	trimf@a+1,w
  7319  0B1A  00F1               	movwf	___ftneg@f1+1
  7320  0B1B  083C               	movf	trimf@a+2,w
  7321  0B1C  2B78               	goto	L13
  7322  0B1D                     i1l2432:	
  7323                           
  7324                           ;main.c: 77: else if ((b < x) && (x <= c))
  7325  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  7326  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  7327  0B1F  083D               	movf	trimf@b,w
  7328  0B20  00F0               	movwf	___ftge@ff1
  7329  0B21  083E               	movf	trimf@b+1,w
  7330  0B22  00F1               	movwf	___ftge@ff1+1
  7331  0B23  083F               	movf	trimf@b+2,w
  7332  0B24  00F2               	movwf	___ftge@ff1+2
  7333  0B25  0837               	movf	trimf@x,w
  7334  0B26  00F3               	movwf	___ftge@ff2
  7335  0B27  0838               	movf	trimf@x+1,w
  7336  0B28  00F4               	movwf	___ftge@ff2+1
  7337  0B29  0839               	movf	trimf@x+2,w
  7338  0B2A  00F5               	movwf	___ftge@ff2+2
  7339  0B2B  160A  118A  254D  120A  158A  	fcall	___ftge
  7340  0B30  1803               	btfsc	3,0
  7341  0B31  2B9E               	goto	i1l2438
  7342  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  7343  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  7344  0B34  0840               	movf	trimf@c,w
  7345  0B35  00F0               	movwf	___ftge@ff1
  7346  0B36  0841               	movf	trimf@c+1,w
  7347  0B37  00F1               	movwf	___ftge@ff1+1
  7348  0B38  0842               	movf	trimf@c+2,w
  7349  0B39  00F2               	movwf	___ftge@ff1+2
  7350  0B3A  0837               	movf	trimf@x,w
  7351  0B3B  00F3               	movwf	___ftge@ff2
  7352  0B3C  0838               	movf	trimf@x+1,w
  7353  0B3D  00F4               	movwf	___ftge@ff2+1
  7354  0B3E  0839               	movf	trimf@x+2,w
  7355  0B3F  00F5               	movwf	___ftge@ff2+2
  7356  0B40  160A  118A  254D  120A  158A  	fcall	___ftge
  7357  0B45  1C03               	btfss	3,0
  7358  0B46  2B9E               	goto	i1l2438
  7359                           
  7360                           ;main.c: 78: ua = ((x - c) / (b - c));
  7361  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  7362  0B48  1303               	bcf	3,6	;RP1=0, select bank0
  7363  0B49  083D               	movf	trimf@b,w
  7364  0B4A  00F8               	movwf	___ftadd@f1
  7365  0B4B  083E               	movf	trimf@b+1,w
  7366  0B4C  00F9               	movwf	___ftadd@f1+1
  7367  0B4D  083F               	movf	trimf@b+2,w
  7368  0B4E  00FA               	movwf	___ftadd@f1+2
  7369  0B4F  0840               	movf	trimf@c,w
  7370  0B50  00F0               	movwf	___ftneg@f1
  7371  0B51  0841               	movf	trimf@c+1,w
  7372  0B52  00F1               	movwf	___ftneg@f1+1
  7373  0B53  0842               	movf	trimf@c+2,w
  7374  0B54  00F2               	movwf	___ftneg@f1+2
  7375  0B55  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7376  0B5A  0870               	movf	?___ftneg,w
  7377  0B5B  00FB               	movwf	___ftadd@f2
  7378  0B5C  0871               	movf	?___ftneg+1,w
  7379  0B5D  00FC               	movwf	___ftadd@f2+1
  7380  0B5E  0872               	movf	?___ftneg+2,w
  7381  0B5F  00FD               	movwf	___ftadd@f2+2
  7382  0B60  120A  158A  219F  120A  158A  	fcall	___ftadd
  7383  0B65  0878               	movf	?___ftadd,w
  7384  0B66  1283               	bcf	3,5	;RP0=0, select bank0
  7385  0B67  1303               	bcf	3,6	;RP1=0, select bank0
  7386  0B68  00A7               	movwf	___ftdiv@f2
  7387  0B69  0879               	movf	?___ftadd+1,w
  7388  0B6A  00A8               	movwf	___ftdiv@f2+1
  7389  0B6B  087A               	movf	?___ftadd+2,w
  7390  0B6C  00A9               	movwf	___ftdiv@f2+2
  7391  0B6D  0837               	movf	trimf@x,w
  7392  0B6E  00F8               	movwf	___ftadd@f1
  7393  0B6F  0838               	movf	trimf@x+1,w
  7394  0B70  00F9               	movwf	___ftadd@f1+1
  7395  0B71  0839               	movf	trimf@x+2,w
  7396  0B72  00FA               	movwf	___ftadd@f1+2
  7397  0B73  0840               	movf	trimf@c,w
  7398  0B74  00F0               	movwf	___ftneg@f1
  7399  0B75  0841               	movf	trimf@c+1,w
  7400  0B76  00F1               	movwf	___ftneg@f1+1
  7401  0B77  0842               	movf	trimf@c+2,w
  7402  0B78                     L13:	
  7403  0B78  00F2               	movwf	___ftneg@f1+2
  7404  0B79  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7405  0B7E  0870               	movf	?___ftneg,w
  7406  0B7F  00FB               	movwf	___ftadd@f2
  7407  0B80  0871               	movf	?___ftneg+1,w
  7408  0B81  00FC               	movwf	___ftadd@f2+1
  7409  0B82  0872               	movf	?___ftneg+2,w
  7410  0B83  00FD               	movwf	___ftadd@f2+2
  7411  0B84  120A  158A  219F  120A  158A  	fcall	___ftadd
  7412  0B89  0878               	movf	?___ftadd,w
  7413  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  7414  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  7415  0B8C  00AA               	movwf	___ftdiv@f1
  7416  0B8D  0879               	movf	?___ftadd+1,w
  7417  0B8E  00AB               	movwf	___ftdiv@f1+1
  7418  0B8F  087A               	movf	?___ftadd+2,w
  7419  0B90  00AC               	movwf	___ftdiv@f1+2
  7420  0B91  120A  158A  20E7  120A  158A  	fcall	___ftdiv
  7421  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  7422  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  7423  0B98  0827               	movf	?___ftdiv,w
  7424  0B99  00C3               	movwf	trimf@ua
  7425  0B9A  0828               	movf	?___ftdiv+1,w
  7426  0B9B  00C4               	movwf	trimf@ua+1
  7427  0B9C  0829               	movf	?___ftdiv+2,w
  7428  0B9D  2BBA               	goto	L10
  7429  0B9E                     i1l2438:	
  7430                           
  7431                           ;main.c: 79: else if (x > c)
  7432  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  7433  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  7434  0BA0  0840               	movf	trimf@c,w
  7435  0BA1  00F0               	movwf	___ftge@ff1
  7436  0BA2  0841               	movf	trimf@c+1,w
  7437  0BA3  00F1               	movwf	___ftge@ff1+1
  7438  0BA4  0842               	movf	trimf@c+2,w
  7439  0BA5  00F2               	movwf	___ftge@ff1+2
  7440  0BA6  0837               	movf	trimf@x,w
  7441  0BA7  00F3               	movwf	___ftge@ff2
  7442  0BA8  0838               	movf	trimf@x+1,w
  7443  0BA9  00F4               	movwf	___ftge@ff2+1
  7444  0BAA  0839               	movf	trimf@x+2,w
  7445  0BAB  00F5               	movwf	___ftge@ff2+2
  7446  0BAC  160A  118A  254D  120A  158A  	fcall	___ftge
  7447  0BB1  1803               	btfsc	3,0
  7448  0BB2  2BBB               	goto	i1l120
  7449  0BB3                     L12:	
  7450                           
  7451                           ;main.c: 80: ua = 0;
  7452  0BB3  3000               	movlw	0
  7453  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  7454  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  7455  0BB6  00C3               	movwf	trimf@ua
  7456  0BB7  3000               	movlw	0
  7457  0BB8  00C4               	movwf	trimf@ua+1
  7458  0BB9  3000               	movlw	0
  7459  0BBA                     L10:	
  7460  0BBA  00C5               	movwf	trimf@ua+2
  7461  0BBB                     i1l120:	
  7462                           
  7463                           ;main.c: 82: return(ua);
  7464  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0BBD  0843               	movf	trimf@ua,w
  7467  0BBE  00B7               	movwf	?_trimf
  7468  0BBF  0844               	movf	trimf@ua+1,w
  7469  0BC0  00B8               	movwf	?_trimf+1
  7470  0BC1  0845               	movf	trimf@ua+2,w
  7471  0BC2  00B9               	movwf	?_trimf+2
  7472  0BC3  0008               	return
  7473  0BC4                     __end_of_trimf:	
  7474                           
  7475                           	psect	text32
  7476  0BC4                     __ptext32:	
  7477 ;; *************** function _trapmf *****************
  7478 ;; Defined at:
  7479 ;;		line 88 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  x               3   23[BANK0 ] float 
  7482 ;;  a               3   26[BANK0 ] float 
  7483 ;;  b               3   29[BANK0 ] float 
  7484 ;;  c               3   32[BANK0 ] float 
  7485 ;;  d               3   35[BANK0 ] float 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  ua              3   38[BANK0 ] float 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  3   23[BANK0 ] float 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, pclath, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7497 ;;      Params:         0      15       0       0       0
  7498 ;;      Locals:         0       3       0       0       0
  7499 ;;      Temps:          0       0       0       0       0
  7500 ;;      Totals:         0      18       0       0       0
  7501 ;;Total ram usage:       18 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    2
  7504 ;; This function calls:
  7505 ;;		___ftadd
  7506 ;;		___ftdiv
  7507 ;;		___ftge
  7508 ;;		___ftneg
  7509 ;; This function is called by:
  7510 ;;		_Fuzzy
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           
  7515                           ;psect for function _trapmf
  7516  0BC4                     _trapmf:	
  7517                           
  7518                           ;main.c: 90: float ua = 0;
  7519                           
  7520                           ;incstack = 0
  7521                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7522  0BC4  3000               	movlw	0
  7523  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  7524  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  7525  0BC7  00C6               	movwf	trapmf@ua
  7526  0BC8  3000               	movlw	0
  7527  0BC9  00C7               	movwf	trapmf@ua+1
  7528  0BCA  3000               	movlw	0
  7529  0BCB  00C8               	movwf	trapmf@ua+2
  7530                           
  7531                           ;main.c: 92: if (x <= a)
  7532  0BCC  083A               	movf	trapmf@a,w
  7533  0BCD  00F0               	movwf	___ftge@ff1
  7534  0BCE  083B               	movf	trapmf@a+1,w
  7535  0BCF  00F1               	movwf	___ftge@ff1+1
  7536  0BD0  083C               	movf	trapmf@a+2,w
  7537  0BD1  00F2               	movwf	___ftge@ff1+2
  7538  0BD2  0837               	movf	trapmf@x,w
  7539  0BD3  00F3               	movwf	___ftge@ff2
  7540  0BD4  0838               	movf	trapmf@x+1,w
  7541  0BD5  00F4               	movwf	___ftge@ff2+1
  7542  0BD6  0839               	movf	trapmf@x+2,w
  7543  0BD7  00F5               	movwf	___ftge@ff2+2
  7544  0BD8  160A  118A  254D  120A  158A  	fcall	___ftge
  7545  0BDD  1803               	btfsc	3,0
  7546  0BDE  2D03               	goto	L18
  7547                           
  7548                           ;main.c: 94: else if ((a < x) && (x <= b))
  7549                           
  7550                           ;main.c: 93: ua = 0;
  7551  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  7552  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  7553  0BE1  083A               	movf	trapmf@a,w
  7554  0BE2  00F0               	movwf	___ftge@ff1
  7555  0BE3  083B               	movf	trapmf@a+1,w
  7556  0BE4  00F1               	movwf	___ftge@ff1+1
  7557  0BE5  083C               	movf	trapmf@a+2,w
  7558  0BE6  00F2               	movwf	___ftge@ff1+2
  7559  0BE7  0837               	movf	trapmf@x,w
  7560  0BE8  00F3               	movwf	___ftge@ff2
  7561  0BE9  0838               	movf	trapmf@x+1,w
  7562  0BEA  00F4               	movwf	___ftge@ff2+1
  7563  0BEB  0839               	movf	trapmf@x+2,w
  7564  0BEC  00F5               	movwf	___ftge@ff2+2
  7565  0BED  160A  118A  254D  120A  158A  	fcall	___ftge
  7566  0BF2  1803               	btfsc	3,0
  7567  0BF3  2C3B               	goto	i1l2456
  7568  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0BF6  083D               	movf	trapmf@b,w
  7571  0BF7  00F0               	movwf	___ftge@ff1
  7572  0BF8  083E               	movf	trapmf@b+1,w
  7573  0BF9  00F1               	movwf	___ftge@ff1+1
  7574  0BFA  083F               	movf	trapmf@b+2,w
  7575  0BFB  00F2               	movwf	___ftge@ff1+2
  7576  0BFC  0837               	movf	trapmf@x,w
  7577  0BFD  00F3               	movwf	___ftge@ff2
  7578  0BFE  0838               	movf	trapmf@x+1,w
  7579  0BFF  00F4               	movwf	___ftge@ff2+1
  7580  0C00  0839               	movf	trapmf@x+2,w
  7581  0C01  00F5               	movwf	___ftge@ff2+2
  7582  0C02  160A  118A  254D  120A  158A  	fcall	___ftge
  7583  0C07  1C03               	btfss	3,0
  7584  0C08  2C3B               	goto	i1l2456
  7585                           
  7586                           ;main.c: 95: ua = ((x - a) / (b - a));
  7587  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  7588  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  7589  0C0B  083D               	movf	trapmf@b,w
  7590  0C0C  00F8               	movwf	___ftadd@f1
  7591  0C0D  083E               	movf	trapmf@b+1,w
  7592  0C0E  00F9               	movwf	___ftadd@f1+1
  7593  0C0F  083F               	movf	trapmf@b+2,w
  7594  0C10  00FA               	movwf	___ftadd@f1+2
  7595  0C11  083A               	movf	trapmf@a,w
  7596  0C12  00F0               	movwf	___ftneg@f1
  7597  0C13  083B               	movf	trapmf@a+1,w
  7598  0C14  00F1               	movwf	___ftneg@f1+1
  7599  0C15  083C               	movf	trapmf@a+2,w
  7600  0C16  00F2               	movwf	___ftneg@f1+2
  7601  0C17  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7602  0C1C  0870               	movf	?___ftneg,w
  7603  0C1D  00FB               	movwf	___ftadd@f2
  7604  0C1E  0871               	movf	?___ftneg+1,w
  7605  0C1F  00FC               	movwf	___ftadd@f2+1
  7606  0C20  0872               	movf	?___ftneg+2,w
  7607  0C21  00FD               	movwf	___ftadd@f2+2
  7608  0C22  120A  158A  219F  120A  158A  	fcall	___ftadd
  7609  0C27  0878               	movf	?___ftadd,w
  7610  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  7611  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  7612  0C2A  00A7               	movwf	___ftdiv@f2
  7613  0C2B  0879               	movf	?___ftadd+1,w
  7614  0C2C  00A8               	movwf	___ftdiv@f2+1
  7615  0C2D  087A               	movf	?___ftadd+2,w
  7616  0C2E  00A9               	movwf	___ftdiv@f2+2
  7617  0C2F  0837               	movf	trapmf@x,w
  7618  0C30  00F8               	movwf	___ftadd@f1
  7619  0C31  0838               	movf	trapmf@x+1,w
  7620  0C32  00F9               	movwf	___ftadd@f1+1
  7621  0C33  0839               	movf	trapmf@x+2,w
  7622  0C34  00FA               	movwf	___ftadd@f1+2
  7623  0C35  083A               	movf	trapmf@a,w
  7624  0C36  00F0               	movwf	___ftneg@f1
  7625  0C37  083B               	movf	trapmf@a+1,w
  7626  0C38  00F1               	movwf	___ftneg@f1+1
  7627  0C39  083C               	movf	trapmf@a+2,w
  7628  0C3A  2CC8               	goto	L20
  7629  0C3B                     i1l2456:	
  7630                           
  7631                           ;main.c: 96: else if ((b <= x) && (x <= c))
  7632  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  7633  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  7634  0C3D  0837               	movf	trapmf@x,w
  7635  0C3E  00F0               	movwf	___ftge@ff1
  7636  0C3F  0838               	movf	trapmf@x+1,w
  7637  0C40  00F1               	movwf	___ftge@ff1+1
  7638  0C41  0839               	movf	trapmf@x+2,w
  7639  0C42  00F2               	movwf	___ftge@ff1+2
  7640  0C43  083D               	movf	trapmf@b,w
  7641  0C44  00F3               	movwf	___ftge@ff2
  7642  0C45  083E               	movf	trapmf@b+1,w
  7643  0C46  00F4               	movwf	___ftge@ff2+1
  7644  0C47  083F               	movf	trapmf@b+2,w
  7645  0C48  00F5               	movwf	___ftge@ff2+2
  7646  0C49  160A  118A  254D  120A  158A  	fcall	___ftge
  7647  0C4E  1C03               	btfss	3,0
  7648  0C4F  2C6D               	goto	i1l2462
  7649  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  7650  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  7651  0C52  0840               	movf	trapmf@c,w
  7652  0C53  00F0               	movwf	___ftge@ff1
  7653  0C54  0841               	movf	trapmf@c+1,w
  7654  0C55  00F1               	movwf	___ftge@ff1+1
  7655  0C56  0842               	movf	trapmf@c+2,w
  7656  0C57  00F2               	movwf	___ftge@ff1+2
  7657  0C58  0837               	movf	trapmf@x,w
  7658  0C59  00F3               	movwf	___ftge@ff2
  7659  0C5A  0838               	movf	trapmf@x+1,w
  7660  0C5B  00F4               	movwf	___ftge@ff2+1
  7661  0C5C  0839               	movf	trapmf@x+2,w
  7662  0C5D  00F5               	movwf	___ftge@ff2+2
  7663  0C5E  160A  118A  254D  120A  158A  	fcall	___ftge
  7664  0C63  1C03               	btfss	3,0
  7665  0C64  2C6D               	goto	i1l2462
  7666                           
  7667                           ;main.c: 97: ua = 1;
  7668  0C65  3000               	movlw	0
  7669  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  7670  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  7671  0C68  00C6               	movwf	trapmf@ua
  7672  0C69  3080               	movlw	128
  7673  0C6A  00C7               	movwf	trapmf@ua+1
  7674  0C6B  303F               	movlw	63
  7675  0C6C  2D0A               	goto	L17
  7676  0C6D                     i1l2462:	
  7677                           
  7678                           ;main.c: 98: else if ((c < x) && (x <= d))
  7679  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  7680  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  7681  0C6F  0840               	movf	trapmf@c,w
  7682  0C70  00F0               	movwf	___ftge@ff1
  7683  0C71  0841               	movf	trapmf@c+1,w
  7684  0C72  00F1               	movwf	___ftge@ff1+1
  7685  0C73  0842               	movf	trapmf@c+2,w
  7686  0C74  00F2               	movwf	___ftge@ff1+2
  7687  0C75  0837               	movf	trapmf@x,w
  7688  0C76  00F3               	movwf	___ftge@ff2
  7689  0C77  0838               	movf	trapmf@x+1,w
  7690  0C78  00F4               	movwf	___ftge@ff2+1
  7691  0C79  0839               	movf	trapmf@x+2,w
  7692  0C7A  00F5               	movwf	___ftge@ff2+2
  7693  0C7B  160A  118A  254D  120A  158A  	fcall	___ftge
  7694  0C80  1803               	btfsc	3,0
  7695  0C81  2CEE               	goto	i1l2468
  7696  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  7697  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  7698  0C84  0843               	movf	trapmf@d,w
  7699  0C85  00F0               	movwf	___ftge@ff1
  7700  0C86  0844               	movf	trapmf@d+1,w
  7701  0C87  00F1               	movwf	___ftge@ff1+1
  7702  0C88  0845               	movf	trapmf@d+2,w
  7703  0C89  00F2               	movwf	___ftge@ff1+2
  7704  0C8A  0837               	movf	trapmf@x,w
  7705  0C8B  00F3               	movwf	___ftge@ff2
  7706  0C8C  0838               	movf	trapmf@x+1,w
  7707  0C8D  00F4               	movwf	___ftge@ff2+1
  7708  0C8E  0839               	movf	trapmf@x+2,w
  7709  0C8F  00F5               	movwf	___ftge@ff2+2
  7710  0C90  160A  118A  254D  120A  158A  	fcall	___ftge
  7711  0C95  1C03               	btfss	3,0
  7712  0C96  2CEE               	goto	i1l2468
  7713                           
  7714                           ;main.c: 99: ua = ((d - x) / (d - c));
  7715  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  7716  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  7717  0C99  0843               	movf	trapmf@d,w
  7718  0C9A  00F8               	movwf	___ftadd@f1
  7719  0C9B  0844               	movf	trapmf@d+1,w
  7720  0C9C  00F9               	movwf	___ftadd@f1+1
  7721  0C9D  0845               	movf	trapmf@d+2,w
  7722  0C9E  00FA               	movwf	___ftadd@f1+2
  7723  0C9F  0840               	movf	trapmf@c,w
  7724  0CA0  00F0               	movwf	___ftneg@f1
  7725  0CA1  0841               	movf	trapmf@c+1,w
  7726  0CA2  00F1               	movwf	___ftneg@f1+1
  7727  0CA3  0842               	movf	trapmf@c+2,w
  7728  0CA4  00F2               	movwf	___ftneg@f1+2
  7729  0CA5  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7730  0CAA  0870               	movf	?___ftneg,w
  7731  0CAB  00FB               	movwf	___ftadd@f2
  7732  0CAC  0871               	movf	?___ftneg+1,w
  7733  0CAD  00FC               	movwf	___ftadd@f2+1
  7734  0CAE  0872               	movf	?___ftneg+2,w
  7735  0CAF  00FD               	movwf	___ftadd@f2+2
  7736  0CB0  120A  158A  219F  120A  158A  	fcall	___ftadd
  7737  0CB5  0878               	movf	?___ftadd,w
  7738  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  7739  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  7740  0CB8  00A7               	movwf	___ftdiv@f2
  7741  0CB9  0879               	movf	?___ftadd+1,w
  7742  0CBA  00A8               	movwf	___ftdiv@f2+1
  7743  0CBB  087A               	movf	?___ftadd+2,w
  7744  0CBC  00A9               	movwf	___ftdiv@f2+2
  7745  0CBD  0843               	movf	trapmf@d,w
  7746  0CBE  00F8               	movwf	___ftadd@f1
  7747  0CBF  0844               	movf	trapmf@d+1,w
  7748  0CC0  00F9               	movwf	___ftadd@f1+1
  7749  0CC1  0845               	movf	trapmf@d+2,w
  7750  0CC2  00FA               	movwf	___ftadd@f1+2
  7751  0CC3  0837               	movf	trapmf@x,w
  7752  0CC4  00F0               	movwf	___ftneg@f1
  7753  0CC5  0838               	movf	trapmf@x+1,w
  7754  0CC6  00F1               	movwf	___ftneg@f1+1
  7755  0CC7  0839               	movf	trapmf@x+2,w
  7756  0CC8                     L20:	
  7757  0CC8  00F2               	movwf	___ftneg@f1+2
  7758  0CC9  160A  118A  21EF  120A  158A  	fcall	___ftneg
  7759  0CCE  0870               	movf	?___ftneg,w
  7760  0CCF  00FB               	movwf	___ftadd@f2
  7761  0CD0  0871               	movf	?___ftneg+1,w
  7762  0CD1  00FC               	movwf	___ftadd@f2+1
  7763  0CD2  0872               	movf	?___ftneg+2,w
  7764  0CD3  00FD               	movwf	___ftadd@f2+2
  7765  0CD4  120A  158A  219F  120A  158A  	fcall	___ftadd
  7766  0CD9  0878               	movf	?___ftadd,w
  7767  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  7768  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  7769  0CDC  00AA               	movwf	___ftdiv@f1
  7770  0CDD  0879               	movf	?___ftadd+1,w
  7771  0CDE  00AB               	movwf	___ftdiv@f1+1
  7772  0CDF  087A               	movf	?___ftadd+2,w
  7773  0CE0  00AC               	movwf	___ftdiv@f1+2
  7774  0CE1  120A  158A  20E7  120A  158A  	fcall	___ftdiv
  7775  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  7776  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  7777  0CE8  0827               	movf	?___ftdiv,w
  7778  0CE9  00C6               	movwf	trapmf@ua
  7779  0CEA  0828               	movf	?___ftdiv+1,w
  7780  0CEB  00C7               	movwf	trapmf@ua+1
  7781  0CEC  0829               	movf	?___ftdiv+2,w
  7782  0CED  2D0A               	goto	L17
  7783  0CEE                     i1l2468:	
  7784                           
  7785                           ;main.c: 100: else if (x > d)
  7786  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  7787  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  7788  0CF0  0843               	movf	trapmf@d,w
  7789  0CF1  00F0               	movwf	___ftge@ff1
  7790  0CF2  0844               	movf	trapmf@d+1,w
  7791  0CF3  00F1               	movwf	___ftge@ff1+1
  7792  0CF4  0845               	movf	trapmf@d+2,w
  7793  0CF5  00F2               	movwf	___ftge@ff1+2
  7794  0CF6  0837               	movf	trapmf@x,w
  7795  0CF7  00F3               	movwf	___ftge@ff2
  7796  0CF8  0838               	movf	trapmf@x+1,w
  7797  0CF9  00F4               	movwf	___ftge@ff2+1
  7798  0CFA  0839               	movf	trapmf@x+2,w
  7799  0CFB  00F5               	movwf	___ftge@ff2+2
  7800  0CFC  160A  118A  254D  120A  158A  	fcall	___ftge
  7801  0D01  1803               	btfsc	3,0
  7802  0D02  2D0B               	goto	i1l130
  7803  0D03                     L18:	
  7804                           
  7805                           ;main.c: 101: ua = 0;
  7806  0D03  3000               	movlw	0
  7807  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  7808  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  7809  0D06  00C6               	movwf	trapmf@ua
  7810  0D07  3000               	movlw	0
  7811  0D08  00C7               	movwf	trapmf@ua+1
  7812  0D09  3000               	movlw	0
  7813  0D0A                     L17:	
  7814  0D0A  00C8               	movwf	trapmf@ua+2
  7815  0D0B                     i1l130:	
  7816                           
  7817                           ;main.c: 103: return(ua);
  7818  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  7819  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  7820  0D0D  0846               	movf	trapmf@ua,w
  7821  0D0E  00B7               	movwf	?_trapmf
  7822  0D0F  0847               	movf	trapmf@ua+1,w
  7823  0D10  00B8               	movwf	?_trapmf+1
  7824  0D11  0848               	movf	trapmf@ua+2,w
  7825  0D12  00B9               	movwf	?_trapmf+2
  7826  0D13  0008               	return
  7827  0D14                     __end_of_trapmf:	
  7828                           
  7829                           	psect	text33
  7830  11EF                     __ptext33:	
  7831 ;; *************** function ___ftneg *****************
  7832 ;; Defined at:
  7833 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  f1              3    0[COMMON] float 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  3    0[COMMON] float 
  7840 ;; Registers used:
  7841 ;;		wreg
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7847 ;;      Params:         3       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0
  7850 ;;      Totals:         3       0       0       0       0
  7851 ;;Total ram usage:        3 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_trimf
  7857 ;;		_trapmf
  7858 ;;		_Fuzzy
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function ___ftneg
  7864  11EF                     ___ftneg:	
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in ___ftneg: [wreg]
  7868  11EF  0872               	movf	___ftneg@f1+2,w
  7869  11F0  0471               	iorwf	___ftneg@f1+1,w
  7870  11F1  0470               	iorwf	___ftneg@f1,w
  7871  11F2  1903               	skipnz
  7872  11F3  0008               	return
  7873  11F4  3080               	movlw	128
  7874  11F5  06F2               	xorwf	___ftneg@f1+2,f
  7875  11F6  0008               	return
  7876  11F7                     __end_of___ftneg:	
  7877                           
  7878                           	psect	text34
  7879  08E7                     __ptext34:	
  7880 ;; *************** function ___ftdiv *****************
  7881 ;; Defined at:
  7882 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  f2              3    7[BANK0 ] float 
  7885 ;;  f1              3   10[BANK0 ] float 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  f3              3   18[BANK0 ] float 
  7888 ;;  sign            1   22[BANK0 ] unsigned char 
  7889 ;;  exp             1   21[BANK0 ] unsigned char 
  7890 ;;  cntr            1   17[BANK0 ] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  3    7[BANK0 ] float 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0, pclath, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7900 ;;      Params:         0       6       0       0       0
  7901 ;;      Locals:         0       6       0       0       0
  7902 ;;      Temps:          0       4       0       0       0
  7903 ;;      Totals:         0      16       0       0       0
  7904 ;;Total ram usage:       16 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    1
  7907 ;; This function calls:
  7908 ;;		___ftpack
  7909 ;; This function is called by:
  7910 ;;		_trimf
  7911 ;;		_trapmf
  7912 ;;		_Fuzzy
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           
  7917                           ;psect for function ___ftdiv
  7918  08E7                     ___ftdiv:	
  7919                           
  7920                           ;incstack = 0
  7921                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7922  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  7923  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  7924  08E9  082A               	movf	___ftdiv@f1,w
  7925  08EA  00AD               	movwf	??___ftdiv
  7926  08EB  082B               	movf	___ftdiv@f1+1,w
  7927  08EC  00AE               	movwf	??___ftdiv+1
  7928  08ED  082C               	movf	___ftdiv@f1+2,w
  7929  08EE  00AF               	movwf	??___ftdiv+2
  7930  08EF  1003               	clrc
  7931  08F0  0D2E               	rlf	??___ftdiv+1,w
  7932  08F1  0D2F               	rlf	??___ftdiv+2,w
  7933  08F2  00B0               	movwf	??___ftdiv+3
  7934  08F3  0830               	movf	??___ftdiv+3,w
  7935  08F4  00B5               	movwf	___ftdiv@exp
  7936  08F5  08B5               	movf	___ftdiv@exp,f
  7937  08F6  1D03               	skipz
  7938  08F7  28FF               	goto	i1l2352
  7939  08F8  3000               	movlw	0
  7940  08F9  00A7               	movwf	?___ftdiv
  7941  08FA  3000               	movlw	0
  7942  08FB  00A8               	movwf	?___ftdiv+1
  7943  08FC  3000               	movlw	0
  7944  08FD  00A9               	movwf	?___ftdiv+2
  7945  08FE  0008               	return
  7946  08FF                     i1l2352:	
  7947  08FF  0827               	movf	___ftdiv@f2,w
  7948  0900  00AD               	movwf	??___ftdiv
  7949  0901  0828               	movf	___ftdiv@f2+1,w
  7950  0902  00AE               	movwf	??___ftdiv+1
  7951  0903  0829               	movf	___ftdiv@f2+2,w
  7952  0904  00AF               	movwf	??___ftdiv+2
  7953  0905  1003               	clrc
  7954  0906  0D2E               	rlf	??___ftdiv+1,w
  7955  0907  0D2F               	rlf	??___ftdiv+2,w
  7956  0908  00B0               	movwf	??___ftdiv+3
  7957  0909  0830               	movf	??___ftdiv+3,w
  7958  090A  00B6               	movwf	___ftdiv@sign
  7959  090B  08B6               	movf	___ftdiv@sign,f
  7960  090C  1D03               	skipz
  7961  090D  2915               	goto	i1l2358
  7962  090E  3000               	movlw	0
  7963  090F  00A7               	movwf	?___ftdiv
  7964  0910  3000               	movlw	0
  7965  0911  00A8               	movwf	?___ftdiv+1
  7966  0912  3000               	movlw	0
  7967  0913  00A9               	movwf	?___ftdiv+2
  7968  0914  0008               	return
  7969  0915                     i1l2358:	
  7970  0915  3000               	movlw	0
  7971  0916  00B2               	movwf	___ftdiv@f3
  7972  0917  3000               	movlw	0
  7973  0918  00B3               	movwf	___ftdiv@f3+1
  7974  0919  3000               	movlw	0
  7975  091A  00B4               	movwf	___ftdiv@f3+2
  7976  091B  3089               	movlw	137
  7977  091C  0736               	addwf	___ftdiv@sign,w
  7978  091D  00AD               	movwf	??___ftdiv
  7979  091E  082D               	movf	??___ftdiv,w
  7980  091F  02B5               	subwf	___ftdiv@exp,f
  7981  0920  082A               	movf	___ftdiv@f1,w
  7982  0921  00AD               	movwf	??___ftdiv
  7983  0922  082B               	movf	___ftdiv@f1+1,w
  7984  0923  00AE               	movwf	??___ftdiv+1
  7985  0924  082C               	movf	___ftdiv@f1+2,w
  7986  0925  00AF               	movwf	??___ftdiv+2
  7987  0926  3010               	movlw	16
  7988  0927                     u249_25:	
  7989  0927  1003               	clrc
  7990  0928  0CAF               	rrf	??___ftdiv+2,f
  7991  0929  0CAE               	rrf	??___ftdiv+1,f
  7992  092A  0CAD               	rrf	??___ftdiv,f
  7993  092B  3EFF               	addlw	-1
  7994  092C  1D03               	skipz
  7995  092D  2927               	goto	u249_25
  7996  092E  082D               	movf	??___ftdiv,w
  7997  092F  00B0               	movwf	??___ftdiv+3
  7998  0930  0830               	movf	??___ftdiv+3,w
  7999  0931  00B6               	movwf	___ftdiv@sign
  8000  0932  0827               	movf	___ftdiv@f2,w
  8001  0933  00AD               	movwf	??___ftdiv
  8002  0934  0828               	movf	___ftdiv@f2+1,w
  8003  0935  00AE               	movwf	??___ftdiv+1
  8004  0936  0829               	movf	___ftdiv@f2+2,w
  8005  0937  00AF               	movwf	??___ftdiv+2
  8006  0938  3010               	movlw	16
  8007  0939                     u250_25:	
  8008  0939  1003               	clrc
  8009  093A  0CAF               	rrf	??___ftdiv+2,f
  8010  093B  0CAE               	rrf	??___ftdiv+1,f
  8011  093C  0CAD               	rrf	??___ftdiv,f
  8012  093D  3EFF               	addlw	-1
  8013  093E  1D03               	skipz
  8014  093F  2939               	goto	u250_25
  8015  0940  082D               	movf	??___ftdiv,w
  8016  0941  00B0               	movwf	??___ftdiv+3
  8017  0942  0830               	movf	??___ftdiv+3,w
  8018  0943  06B6               	xorwf	___ftdiv@sign,f
  8019  0944  3080               	movlw	128
  8020  0945  00AD               	movwf	??___ftdiv
  8021  0946  082D               	movf	??___ftdiv,w
  8022  0947  05B6               	andwf	___ftdiv@sign,f
  8023  0948  17AB               	bsf	___ftdiv@f1+1,7
  8024  0949  30FF               	movlw	255
  8025  094A  05AA               	andwf	___ftdiv@f1,f
  8026  094B  30FF               	movlw	255
  8027  094C  05AB               	andwf	___ftdiv@f1+1,f
  8028  094D  3000               	movlw	0
  8029  094E  05AC               	andwf	___ftdiv@f1+2,f
  8030  094F  17A8               	bsf	___ftdiv@f2+1,7
  8031  0950  30FF               	movlw	255
  8032  0951  05A7               	andwf	___ftdiv@f2,f
  8033  0952  30FF               	movlw	255
  8034  0953  05A8               	andwf	___ftdiv@f2+1,f
  8035  0954  3000               	movlw	0
  8036  0955  05A9               	andwf	___ftdiv@f2+2,f
  8037  0956  3018               	movlw	24
  8038  0957  00AD               	movwf	??___ftdiv
  8039  0958  082D               	movf	??___ftdiv,w
  8040  0959  00B1               	movwf	___ftdiv@cntr
  8041  095A                     i1l2372:	
  8042  095A  3001               	movlw	1
  8043  095B                     u251_25:	
  8044  095B  1003               	clrc
  8045  095C  0DB2               	rlf	___ftdiv@f3,f
  8046  095D  0DB3               	rlf	___ftdiv@f3+1,f
  8047  095E  0DB4               	rlf	___ftdiv@f3+2,f
  8048  095F  3EFF               	addlw	-1
  8049  0960  1D03               	skipz
  8050  0961  295B               	goto	u251_25
  8051  0962  0829               	movf	___ftdiv@f2+2,w
  8052  0963  022C               	subwf	___ftdiv@f1+2,w
  8053  0964  1D03               	skipz
  8054  0965  296C               	goto	u252_25
  8055  0966  0828               	movf	___ftdiv@f2+1,w
  8056  0967  022B               	subwf	___ftdiv@f1+1,w
  8057  0968  1D03               	skipz
  8058  0969  296C               	goto	u252_25
  8059  096A  0827               	movf	___ftdiv@f2,w
  8060  096B  022A               	subwf	___ftdiv@f1,w
  8061  096C                     u252_25:	
  8062  096C  1C03               	skipc
  8063  096D  2979               	goto	i1l2380
  8064  096E  0827               	movf	___ftdiv@f2,w
  8065  096F  02AA               	subwf	___ftdiv@f1,f
  8066  0970  0828               	movf	___ftdiv@f2+1,w
  8067  0971  1C03               	skipc
  8068  0972  0F28               	incfsz	___ftdiv@f2+1,w
  8069  0973  02AB               	subwf	___ftdiv@f1+1,f
  8070  0974  0829               	movf	___ftdiv@f2+2,w
  8071  0975  1C03               	skipc
  8072  0976  0A29               	incf	___ftdiv@f2+2,w
  8073  0977  02AC               	subwf	___ftdiv@f1+2,f
  8074  0978  1432               	bsf	___ftdiv@f3,0
  8075  0979                     i1l2380:	
  8076  0979  3001               	movlw	1
  8077  097A                     u253_25:	
  8078  097A  1003               	clrc
  8079  097B  0DAA               	rlf	___ftdiv@f1,f
  8080  097C  0DAB               	rlf	___ftdiv@f1+1,f
  8081  097D  0DAC               	rlf	___ftdiv@f1+2,f
  8082  097E  3EFF               	addlw	-1
  8083  097F  1D03               	skipz
  8084  0980  297A               	goto	u253_25
  8085  0981  3001               	movlw	1
  8086  0982  02B1               	subwf	___ftdiv@cntr,f
  8087  0983  1D03               	btfss	3,2
  8088  0984  295A               	goto	i1l2372
  8089  0985  0832               	movf	___ftdiv@f3,w
  8090  0986  00F0               	movwf	___ftpack@arg
  8091  0987  0833               	movf	___ftdiv@f3+1,w
  8092  0988  00F1               	movwf	___ftpack@arg+1
  8093  0989  0834               	movf	___ftdiv@f3+2,w
  8094  098A  00F2               	movwf	___ftpack@arg+2
  8095  098B  0835               	movf	___ftdiv@exp,w
  8096  098C  00AD               	movwf	??___ftdiv
  8097  098D  082D               	movf	??___ftdiv,w
  8098  098E  00F3               	movwf	___ftpack@exp
  8099  098F  0836               	movf	___ftdiv@sign,w
  8100  0990  00AE               	movwf	??___ftdiv+1
  8101  0991  082E               	movf	??___ftdiv+1,w
  8102  0992  00F4               	movwf	___ftpack@sign
  8103  0993  160A  118A  25AA   	fcall	___ftpack
  8104  0996  0870               	movf	?___ftpack,w
  8105  0997  1283               	bcf	3,5	;RP0=0, select bank0
  8106  0998  1303               	bcf	3,6	;RP1=0, select bank0
  8107  0999  00A7               	movwf	?___ftdiv
  8108  099A  0871               	movf	?___ftpack+1,w
  8109  099B  00A8               	movwf	?___ftdiv+1
  8110  099C  0872               	movf	?___ftpack+2,w
  8111  099D  00A9               	movwf	?___ftdiv+2
  8112  099E  0008               	return
  8113  099F                     __end_of___ftdiv:	
  8114                           
  8115                           	psect	text35
  8116  099F                     __ptext35:	
  8117 ;; *************** function ___ftadd *****************
  8118 ;; Defined at:
  8119 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  f1              3    8[COMMON] float 
  8122 ;;  f2              3   11[COMMON] float 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  exp1            1    6[BANK0 ] unsigned char 
  8125 ;;  exp2            1    5[BANK0 ] unsigned char 
  8126 ;;  sign            1    4[BANK0 ] unsigned char 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  3    8[COMMON] float 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         6       0       0       0       0
  8137 ;;      Locals:         0       3       0       0       0
  8138 ;;      Temps:          0       4       0       0       0
  8139 ;;      Totals:         6       7       0       0       0
  8140 ;;Total ram usage:       13 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    1
  8143 ;; This function calls:
  8144 ;;		___ftpack
  8145 ;; This function is called by:
  8146 ;;		_trimf
  8147 ;;		_trapmf
  8148 ;;		_Fuzzy
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function ___ftadd
  8154  099F                     ___ftadd:	
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8158  099F  0878               	movf	___ftadd@f1,w
  8159  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  8160  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  8161  09A2  00A0               	movwf	??___ftadd
  8162  09A3  0879               	movf	___ftadd@f1+1,w
  8163  09A4  00A1               	movwf	??___ftadd+1
  8164  09A5  087A               	movf	___ftadd@f1+2,w
  8165  09A6  00A2               	movwf	??___ftadd+2
  8166  09A7  1003               	clrc
  8167  09A8  0D21               	rlf	??___ftadd+1,w
  8168  09A9  0D22               	rlf	??___ftadd+2,w
  8169  09AA  00A3               	movwf	??___ftadd+3
  8170  09AB  0823               	movf	??___ftadd+3,w
  8171  09AC  00A6               	movwf	___ftadd@exp1
  8172  09AD  087B               	movf	___ftadd@f2,w
  8173  09AE  00A0               	movwf	??___ftadd
  8174  09AF  087C               	movf	___ftadd@f2+1,w
  8175  09B0  00A1               	movwf	??___ftadd+1
  8176  09B1  087D               	movf	___ftadd@f2+2,w
  8177  09B2  00A2               	movwf	??___ftadd+2
  8178  09B3  1003               	clrc
  8179  09B4  0D21               	rlf	??___ftadd+1,w
  8180  09B5  0D22               	rlf	??___ftadd+2,w
  8181  09B6  00A3               	movwf	??___ftadd+3
  8182  09B7  0823               	movf	??___ftadd+3,w
  8183  09B8  00A5               	movwf	___ftadd@exp2
  8184  09B9  0826               	movf	___ftadd@exp1,w
  8185  09BA  1903               	btfsc	3,2
  8186  09BB  29C8               	goto	i1l2282
  8187  09BC  0825               	movf	___ftadd@exp2,w
  8188  09BD  0226               	subwf	___ftadd@exp1,w
  8189  09BE  1803               	skipnc
  8190  09BF  29CF               	goto	i1l2286
  8191  09C0  0326               	decf	___ftadd@exp1,w
  8192  09C1  3AFF               	xorlw	255
  8193  09C2  0725               	addwf	___ftadd@exp2,w
  8194  09C3  00A0               	movwf	??___ftadd
  8195  09C4  3019               	movlw	25
  8196  09C5  0220               	subwf	??___ftadd,w
  8197  09C6  1C03               	skipc
  8198  09C7  29CF               	goto	i1l2286
  8199  09C8                     i1l2282:	
  8200  09C8  087B               	movf	___ftadd@f2,w
  8201  09C9  00F8               	movwf	?___ftadd
  8202  09CA  087C               	movf	___ftadd@f2+1,w
  8203  09CB  00F9               	movwf	?___ftadd+1
  8204  09CC  087D               	movf	___ftadd@f2+2,w
  8205  09CD  00FA               	movwf	?___ftadd+2
  8206  09CE  0008               	return
  8207  09CF                     i1l2286:	
  8208  09CF  0825               	movf	___ftadd@exp2,w
  8209  09D0  1903               	btfsc	3,2
  8210  09D1  0008               	return
  8211  09D2  0826               	movf	___ftadd@exp1,w
  8212  09D3  0225               	subwf	___ftadd@exp2,w
  8213  09D4  1803               	skipnc
  8214  09D5  29DE               	goto	i1l2292
  8215  09D6  0325               	decf	___ftadd@exp2,w
  8216  09D7  3AFF               	xorlw	255
  8217  09D8  0726               	addwf	___ftadd@exp1,w
  8218  09D9  00A0               	movwf	??___ftadd
  8219  09DA  3019               	movlw	25
  8220  09DB  0220               	subwf	??___ftadd,w
  8221  09DC  1803               	btfsc	3,0
  8222  09DD  0008               	return
  8223  09DE                     i1l2292:	
  8224  09DE  3006               	movlw	6
  8225  09DF  00A0               	movwf	??___ftadd
  8226  09E0  0820               	movf	??___ftadd,w
  8227  09E1  00A4               	movwf	___ftadd@sign
  8228  09E2  1BFA               	btfsc	___ftadd@f1+2,7
  8229  09E3  17A4               	bsf	___ftadd@sign,7
  8230  09E4  1BFD               	btfsc	___ftadd@f2+2,7
  8231  09E5  1724               	bsf	___ftadd@sign,6
  8232  09E6  17F9               	bsf	___ftadd@f1+1,7
  8233  09E7  30FF               	movlw	255
  8234  09E8  05F8               	andwf	___ftadd@f1,f
  8235  09E9  30FF               	movlw	255
  8236  09EA  05F9               	andwf	___ftadd@f1+1,f
  8237  09EB  3000               	movlw	0
  8238  09EC  05FA               	andwf	___ftadd@f1+2,f
  8239  09ED  17FC               	bsf	___ftadd@f2+1,7
  8240  09EE  30FF               	movlw	255
  8241  09EF  05FB               	andwf	___ftadd@f2,f
  8242  09F0  30FF               	movlw	255
  8243  09F1  05FC               	andwf	___ftadd@f2+1,f
  8244  09F2  3000               	movlw	0
  8245  09F3  05FD               	andwf	___ftadd@f2+2,f
  8246  09F4  0825               	movf	___ftadd@exp2,w
  8247  09F5  0226               	subwf	___ftadd@exp1,w
  8248  09F6  1803               	skipnc
  8249  09F7  2A1E               	goto	i1l2314
  8250  09F8                     i1l2304:	
  8251  09F8  3001               	movlw	1
  8252  09F9                     u232_25:	
  8253  09F9  1003               	clrc
  8254  09FA  0DFB               	rlf	___ftadd@f2,f
  8255  09FB  0DFC               	rlf	___ftadd@f2+1,f
  8256  09FC  0DFD               	rlf	___ftadd@f2+2,f
  8257  09FD  3EFF               	addlw	-1
  8258  09FE  1D03               	skipz
  8259  09FF  29F9               	goto	u232_25
  8260  0A00  3001               	movlw	1
  8261  0A01  02A5               	subwf	___ftadd@exp2,f
  8262  0A02  0825               	movf	___ftadd@exp2,w
  8263  0A03  0626               	xorwf	___ftadd@exp1,w
  8264  0A04  1903               	skipnz
  8265  0A05  2A19               	goto	i1l2312
  8266  0A06  3001               	movlw	1
  8267  0A07  02A4               	subwf	___ftadd@sign,f
  8268  0A08  0824               	movf	___ftadd@sign,w
  8269  0A09  3907               	andlw	7
  8270  0A0A  1903               	btfsc	3,2
  8271  0A0B  2A19               	goto	i1l2312
  8272  0A0C  29F8               	goto	i1l2304
  8273  0A0D                     i1l2310:	
  8274  0A0D  3001               	movlw	1
  8275  0A0E                     u235_25:	
  8276  0A0E  1003               	clrc
  8277  0A0F  0CFA               	rrf	___ftadd@f1+2,f
  8278  0A10  0CF9               	rrf	___ftadd@f1+1,f
  8279  0A11  0CF8               	rrf	___ftadd@f1,f
  8280  0A12  3EFF               	addlw	-1
  8281  0A13  1D03               	skipz
  8282  0A14  2A0E               	goto	u235_25
  8283  0A15  3001               	movlw	1
  8284  0A16  00A0               	movwf	??___ftadd
  8285  0A17  0820               	movf	??___ftadd,w
  8286  0A18  07A6               	addwf	___ftadd@exp1,f
  8287  0A19                     i1l2312:	
  8288  0A19  0826               	movf	___ftadd@exp1,w
  8289  0A1A  0625               	xorwf	___ftadd@exp2,w
  8290  0A1B  1903               	btfsc	3,2
  8291  0A1C  2A47               	goto	i1l788
  8292  0A1D  2A0D               	goto	i1l2310
  8293  0A1E                     i1l2314:	
  8294  0A1E  0826               	movf	___ftadd@exp1,w
  8295  0A1F  0225               	subwf	___ftadd@exp2,w
  8296  0A20  1803               	skipnc
  8297  0A21  2A47               	goto	i1l788
  8298  0A22                     i1l2316:	
  8299  0A22  3001               	movlw	1
  8300  0A23                     u238_25:	
  8301  0A23  1003               	clrc
  8302  0A24  0DF8               	rlf	___ftadd@f1,f
  8303  0A25  0DF9               	rlf	___ftadd@f1+1,f
  8304  0A26  0DFA               	rlf	___ftadd@f1+2,f
  8305  0A27  3EFF               	addlw	-1
  8306  0A28  1D03               	skipz
  8307  0A29  2A23               	goto	u238_25
  8308  0A2A  3001               	movlw	1
  8309  0A2B  02A6               	subwf	___ftadd@exp1,f
  8310  0A2C  0825               	movf	___ftadd@exp2,w
  8311  0A2D  0626               	xorwf	___ftadd@exp1,w
  8312  0A2E  1903               	skipnz
  8313  0A2F  2A43               	goto	i1l2324
  8314  0A30  3001               	movlw	1
  8315  0A31  02A4               	subwf	___ftadd@sign,f
  8316  0A32  0824               	movf	___ftadd@sign,w
  8317  0A33  3907               	andlw	7
  8318  0A34  1903               	btfsc	3,2
  8319  0A35  2A43               	goto	i1l2324
  8320  0A36  2A22               	goto	i1l2316
  8321  0A37                     i1l2322:	
  8322  0A37  3001               	movlw	1
  8323  0A38                     u241_25:	
  8324  0A38  1003               	clrc
  8325  0A39  0CFD               	rrf	___ftadd@f2+2,f
  8326  0A3A  0CFC               	rrf	___ftadd@f2+1,f
  8327  0A3B  0CFB               	rrf	___ftadd@f2,f
  8328  0A3C  3EFF               	addlw	-1
  8329  0A3D  1D03               	skipz
  8330  0A3E  2A38               	goto	u241_25
  8331  0A3F  3001               	movlw	1
  8332  0A40  00A0               	movwf	??___ftadd
  8333  0A41  0820               	movf	??___ftadd,w
  8334  0A42  07A5               	addwf	___ftadd@exp2,f
  8335  0A43                     i1l2324:	
  8336  0A43  0826               	movf	___ftadd@exp1,w
  8337  0A44  0625               	xorwf	___ftadd@exp2,w
  8338  0A45  1D03               	skipz
  8339  0A46  2A37               	goto	i1l2322
  8340  0A47                     i1l788:	
  8341  0A47  1FA4               	btfss	___ftadd@sign,7
  8342  0A48  2A59               	goto	i1l2328
  8343  0A49  30FF               	movlw	255
  8344  0A4A  06F8               	xorwf	___ftadd@f1,f
  8345  0A4B  30FF               	movlw	255
  8346  0A4C  06F9               	xorwf	___ftadd@f1+1,f
  8347  0A4D  30FF               	movlw	255
  8348  0A4E  06FA               	xorwf	___ftadd@f1+2,f
  8349  0A4F  3001               	movlw	1
  8350  0A50  07F8               	addwf	___ftadd@f1,f
  8351  0A51  3000               	movlw	0
  8352  0A52  1803               	skipnc
  8353  0A53  3001               	movlw	1
  8354  0A54  07F9               	addwf	___ftadd@f1+1,f
  8355  0A55  3000               	movlw	0
  8356  0A56  1803               	skipnc
  8357  0A57  3001               	movlw	1
  8358  0A58  07FA               	addwf	___ftadd@f1+2,f
  8359  0A59                     i1l2328:	
  8360  0A59  1F24               	btfss	___ftadd@sign,6
  8361  0A5A  2A6B               	goto	i1l2332
  8362  0A5B  30FF               	movlw	255
  8363  0A5C  06FB               	xorwf	___ftadd@f2,f
  8364  0A5D  30FF               	movlw	255
  8365  0A5E  06FC               	xorwf	___ftadd@f2+1,f
  8366  0A5F  30FF               	movlw	255
  8367  0A60  06FD               	xorwf	___ftadd@f2+2,f
  8368  0A61  3001               	movlw	1
  8369  0A62  07FB               	addwf	___ftadd@f2,f
  8370  0A63  3000               	movlw	0
  8371  0A64  1803               	skipnc
  8372  0A65  3001               	movlw	1
  8373  0A66  07FC               	addwf	___ftadd@f2+1,f
  8374  0A67  3000               	movlw	0
  8375  0A68  1803               	skipnc
  8376  0A69  3001               	movlw	1
  8377  0A6A  07FD               	addwf	___ftadd@f2+2,f
  8378  0A6B                     i1l2332:	
  8379  0A6B  01A4               	clrf	___ftadd@sign
  8380  0A6C  0878               	movf	___ftadd@f1,w
  8381  0A6D  07FB               	addwf	___ftadd@f2,f
  8382  0A6E  0879               	movf	___ftadd@f1+1,w
  8383  0A6F  1103               	clrz
  8384  0A70  1803               	skipnc
  8385  0A71  0A79               	incf	___ftadd@f1+1,w
  8386  0A72  1D03               	btfss	3,2
  8387  0A73  07FC               	addwf	___ftadd@f2+1,f
  8388  0A74  087A               	movf	___ftadd@f1+2,w
  8389  0A75  1103               	clrz
  8390  0A76  1803               	skipnc
  8391  0A77  0A7A               	incf	___ftadd@f1+2,w
  8392  0A78  1D03               	btfss	3,2
  8393  0A79  07FD               	addwf	___ftadd@f2+2,f
  8394  0A7A  1FFD               	btfss	___ftadd@f2+2,7
  8395  0A7B  2A8E               	goto	i1l2342
  8396  0A7C  30FF               	movlw	255
  8397  0A7D  06FB               	xorwf	___ftadd@f2,f
  8398  0A7E  30FF               	movlw	255
  8399  0A7F  06FC               	xorwf	___ftadd@f2+1,f
  8400  0A80  30FF               	movlw	255
  8401  0A81  06FD               	xorwf	___ftadd@f2+2,f
  8402  0A82  3001               	movlw	1
  8403  0A83  07FB               	addwf	___ftadd@f2,f
  8404  0A84  3000               	movlw	0
  8405  0A85  1803               	skipnc
  8406  0A86  3001               	movlw	1
  8407  0A87  07FC               	addwf	___ftadd@f2+1,f
  8408  0A88  3000               	movlw	0
  8409  0A89  1803               	skipnc
  8410  0A8A  3001               	movlw	1
  8411  0A8B  07FD               	addwf	___ftadd@f2+2,f
  8412  0A8C  01A4               	clrf	___ftadd@sign
  8413  0A8D  0AA4               	incf	___ftadd@sign,f
  8414  0A8E                     i1l2342:	
  8415  0A8E  087B               	movf	___ftadd@f2,w
  8416  0A8F  00F0               	movwf	___ftpack@arg
  8417  0A90  087C               	movf	___ftadd@f2+1,w
  8418  0A91  00F1               	movwf	___ftpack@arg+1
  8419  0A92  087D               	movf	___ftadd@f2+2,w
  8420  0A93  00F2               	movwf	___ftpack@arg+2
  8421  0A94  0826               	movf	___ftadd@exp1,w
  8422  0A95  00A0               	movwf	??___ftadd
  8423  0A96  0820               	movf	??___ftadd,w
  8424  0A97  00F3               	movwf	___ftpack@exp
  8425  0A98  0824               	movf	___ftadd@sign,w
  8426  0A99  00A1               	movwf	??___ftadd+1
  8427  0A9A  0821               	movf	??___ftadd+1,w
  8428  0A9B  00F4               	movwf	___ftpack@sign
  8429  0A9C  160A  118A  25AA   	fcall	___ftpack
  8430  0A9F  0870               	movf	?___ftpack,w
  8431  0AA0  00F8               	movwf	?___ftadd
  8432  0AA1  0871               	movf	?___ftpack+1,w
  8433  0AA2  00F9               	movwf	?___ftadd+1
  8434  0AA3  0872               	movf	?___ftpack+2,w
  8435  0AA4  00FA               	movwf	?___ftadd+2
  8436  0AA5  0008               	return
  8437  0AA6                     __end_of___ftadd:	
  8438                           
  8439                           	psect	text36
  8440  12B6                     __ptext36:	
  8441 ;; *************** function _max_val *****************
  8442 ;; Defined at:
  8443 ;;		line 118 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  a               3    0[BANK0 ] float 
  8446 ;;  b               3    3[BANK0 ] float 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  3    0[BANK0 ] float 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0, pclath, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8458 ;;      Params:         0       6       0       0       0
  8459 ;;      Locals:         0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0
  8461 ;;      Totals:         0       6       0       0       0
  8462 ;;Total ram usage:        6 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    1
  8465 ;; This function calls:
  8466 ;;		___ftge
  8467 ;; This function is called by:
  8468 ;;		_Fuzzy
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function _max_val
  8474  12B6                     _max_val:	
  8475                           
  8476                           ;main.c: 120: if (a > b)
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8480  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  8481  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  8482  12B8  0823               	movf	max_val@b,w
  8483  12B9  00F0               	movwf	___ftge@ff1
  8484  12BA  0824               	movf	max_val@b+1,w
  8485  12BB  00F1               	movwf	___ftge@ff1+1
  8486  12BC  0825               	movf	max_val@b+2,w
  8487  12BD  00F2               	movwf	___ftge@ff1+2
  8488  12BE  0820               	movf	max_val@a,w
  8489  12BF  00F3               	movwf	___ftge@ff2
  8490  12C0  0821               	movf	max_val@a+1,w
  8491  12C1  00F4               	movwf	___ftge@ff2+1
  8492  12C2  0822               	movf	max_val@a+2,w
  8493  12C3  00F5               	movwf	___ftge@ff2+2
  8494  12C4  160A  118A  254D  160A  118A  	fcall	___ftge
  8495  12C9  1C03               	btfss	3,0
  8496  12CA  0008               	return
  8497                           
  8498                           ;main.c: 122: else
  8499                           ;main.c: 123: return b;
  8500                           
  8501                           ;main.c: 121: return a;
  8502  12CB  1283               	bcf	3,5	;RP0=0, select bank0
  8503  12CC  1303               	bcf	3,6	;RP1=0, select bank0
  8504  12CD  0823               	movf	max_val@b,w
  8505  12CE  00A0               	movwf	?_max_val
  8506  12CF  0824               	movf	max_val@b+1,w
  8507  12D0  00A1               	movwf	?_max_val+1
  8508  12D1  0825               	movf	max_val@b+2,w
  8509  12D2  00A2               	movwf	?_max_val+2
  8510  12D3  0008               	return
  8511  12D4                     __end_of_max_val:	
  8512                           
  8513                           	psect	text37
  8514  154D                     __ptext37:	
  8515 ;; *************** function ___ftge *****************
  8516 ;; Defined at:
  8517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  ff1             3    0[COMMON] float 
  8520 ;;  ff2             3    3[COMMON] float 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;		None               void
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8532 ;;      Params:         6       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0
  8534 ;;      Temps:          6       0       0       0       0
  8535 ;;      Totals:        12       0       0       0       0
  8536 ;;Total ram usage:       12 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; This function calls:
  8539 ;;		Nothing
  8540 ;; This function is called by:
  8541 ;;		_trimf
  8542 ;;		_trapmf
  8543 ;;		_max_val
  8544 ;;		_Fuzzy
  8545 ;;		_min_val
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           
  8550                           ;psect for function ___ftge
  8551  154D                     ___ftge:	
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8555  154D  1FF2               	btfss	___ftge@ff1+2,7
  8556  154E  2D74               	goto	i1l2392
  8557  154F  3000               	movlw	0
  8558  1550  00F6               	movwf	??___ftge
  8559  1551  3000               	movlw	0
  8560  1552  00F7               	movwf	??___ftge+1
  8561  1553  3080               	movlw	128
  8562  1554  00F8               	movwf	??___ftge+2
  8563  1555  0970               	comf	___ftge@ff1,w
  8564  1556  00F9               	movwf	??___ftge+3
  8565  1557  0971               	comf	___ftge@ff1+1,w
  8566  1558  00FA               	movwf	??___ftge+4
  8567  1559  0972               	comf	___ftge@ff1+2,w
  8568  155A  00FB               	movwf	??___ftge+5
  8569  155B  0AF9               	incf	??___ftge+3,f
  8570  155C  1903               	skipnz
  8571  155D  0AFA               	incf	??___ftge+4,f
  8572  155E  1903               	skipnz
  8573  155F  0AFB               	incf	??___ftge+5,f
  8574  1560  0879               	movf	??___ftge+3,w
  8575  1561  07F6               	addwf	??___ftge,f
  8576  1562  087A               	movf	??___ftge+4,w
  8577  1563  1803               	skipnc
  8578  1564  0F7A               	incfsz	??___ftge+4,w
  8579  1565  2D67               	goto	u256_21
  8580  1566  2D68               	goto	u256_22
  8581  1567                     u256_21:	
  8582  1567  07F7               	addwf	??___ftge+1,f
  8583  1568                     u256_22:	
  8584  1568  087B               	movf	??___ftge+5,w
  8585  1569  1803               	skipnc
  8586  156A  0F7B               	incfsz	??___ftge+5,w
  8587  156B  2D6D               	goto	u256_23
  8588  156C  2D6E               	goto	u256_24
  8589  156D                     u256_23:	
  8590  156D  07F8               	addwf	??___ftge+2,f
  8591  156E                     u256_24:	
  8592  156E  0876               	movf	??___ftge,w
  8593  156F  00F0               	movwf	___ftge@ff1
  8594  1570  0877               	movf	??___ftge+1,w
  8595  1571  00F1               	movwf	___ftge@ff1+1
  8596  1572  0878               	movf	??___ftge+2,w
  8597  1573  00F2               	movwf	___ftge@ff1+2
  8598  1574                     i1l2392:	
  8599  1574  1FF5               	btfss	___ftge@ff2+2,7
  8600  1575  2D9B               	goto	i1l2396
  8601  1576  3000               	movlw	0
  8602  1577  00F6               	movwf	??___ftge
  8603  1578  3000               	movlw	0
  8604  1579  00F7               	movwf	??___ftge+1
  8605  157A  3080               	movlw	128
  8606  157B  00F8               	movwf	??___ftge+2
  8607  157C  0973               	comf	___ftge@ff2,w
  8608  157D  00F9               	movwf	??___ftge+3
  8609  157E  0974               	comf	___ftge@ff2+1,w
  8610  157F  00FA               	movwf	??___ftge+4
  8611  1580  0975               	comf	___ftge@ff2+2,w
  8612  1581  00FB               	movwf	??___ftge+5
  8613  1582  0AF9               	incf	??___ftge+3,f
  8614  1583  1903               	skipnz
  8615  1584  0AFA               	incf	??___ftge+4,f
  8616  1585  1903               	skipnz
  8617  1586  0AFB               	incf	??___ftge+5,f
  8618  1587  0879               	movf	??___ftge+3,w
  8619  1588  07F6               	addwf	??___ftge,f
  8620  1589  087A               	movf	??___ftge+4,w
  8621  158A  1803               	skipnc
  8622  158B  0F7A               	incfsz	??___ftge+4,w
  8623  158C  2D8E               	goto	u258_21
  8624  158D  2D8F               	goto	u258_22
  8625  158E                     u258_21:	
  8626  158E  07F7               	addwf	??___ftge+1,f
  8627  158F                     u258_22:	
  8628  158F  087B               	movf	??___ftge+5,w
  8629  1590  1803               	skipnc
  8630  1591  0F7B               	incfsz	??___ftge+5,w
  8631  1592  2D94               	goto	u258_23
  8632  1593  2D95               	goto	u258_24
  8633  1594                     u258_23:	
  8634  1594  07F8               	addwf	??___ftge+2,f
  8635  1595                     u258_24:	
  8636  1595  0876               	movf	??___ftge,w
  8637  1596  00F3               	movwf	___ftge@ff2
  8638  1597  0877               	movf	??___ftge+1,w
  8639  1598  00F4               	movwf	___ftge@ff2+1
  8640  1599  0878               	movf	??___ftge+2,w
  8641  159A  00F5               	movwf	___ftge@ff2+2
  8642  159B                     i1l2396:	
  8643  159B  3080               	movlw	128
  8644  159C  06F2               	xorwf	___ftge@ff1+2,f
  8645  159D  3080               	movlw	128
  8646  159E  06F5               	xorwf	___ftge@ff2+2,f
  8647  159F  0875               	movf	___ftge@ff2+2,w
  8648  15A0  0272               	subwf	___ftge@ff1+2,w
  8649  15A1  1D03               	skipz
  8650  15A2  0008               	return
  8651  15A3  0874               	movf	___ftge@ff2+1,w
  8652  15A4  0271               	subwf	___ftge@ff1+1,w
  8653  15A5  1D03               	skipz
  8654  15A6  0008               	return
  8655  15A7  0873               	movf	___ftge@ff2,w
  8656  15A8  0270               	subwf	___ftge@ff1,w
  8657  15A9  0008               	return
  8658  15AA                     __end_of___ftge:	
  8659                           
  8660                           	psect	text38
  8661  123E                     __ptext38:	
  8662 ;; *************** function ___lwtoft *****************
  8663 ;; Defined at:
  8664 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  c               2    8[COMMON] unsigned int 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  3    8[COMMON] float 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0, pclath, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8678 ;;      Params:         3       0       0       0       0
  8679 ;;      Locals:         0       0       0       0       0
  8680 ;;      Temps:          1       0       0       0       0
  8681 ;;      Totals:         4       0       0       0       0
  8682 ;;Total ram usage:        4 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    1
  8685 ;; This function calls:
  8686 ;;		___ftpack
  8687 ;; This function is called by:
  8688 ;;		_Fuzzy
  8689 ;;		_ISR
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           
  8694                           ;psect for function ___lwtoft
  8695  123E                     ___lwtoft:	
  8696                           
  8697                           ;incstack = 0
  8698                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8699  123E  0878               	movf	___lwtoft@c,w
  8700  123F  00F0               	movwf	___ftpack@arg
  8701  1240  0879               	movf	___lwtoft@c+1,w
  8702  1241  00F1               	movwf	___ftpack@arg+1
  8703  1242  01F2               	clrf	___ftpack@arg+2
  8704  1243  308E               	movlw	142
  8705  1244  00FB               	movwf	??___lwtoft
  8706  1245  087B               	movf	??___lwtoft,w
  8707  1246  00F3               	movwf	___ftpack@exp
  8708  1247  01F4               	clrf	___ftpack@sign
  8709  1248  160A  118A  25AA   	fcall	___ftpack
  8710  124B  0870               	movf	?___ftpack,w
  8711  124C  00F8               	movwf	?___lwtoft
  8712  124D  0871               	movf	?___ftpack+1,w
  8713  124E  00F9               	movwf	?___lwtoft+1
  8714  124F  0872               	movf	?___ftpack+2,w
  8715  1250  00FA               	movwf	?___lwtoft+2
  8716  1251  0008               	return
  8717  1252                     __end_of___lwtoft:	
  8718                           
  8719                           	psect	text39
  8720  1612                     __ptext39:	
  8721 ;; *************** function ___fttol *****************
  8722 ;; Defined at:
  8723 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  f1              3    0[COMMON] float 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  lval            4    9[COMMON] unsigned long 
  8728 ;;  exp1            1   13[COMMON] unsigned char 
  8729 ;;  sign1           1    8[COMMON] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  4    0[COMMON] long 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2, status,0
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8739 ;;      Params:         4       0       0       0       0
  8740 ;;      Locals:         6       0       0       0       0
  8741 ;;      Temps:          4       0       0       0       0
  8742 ;;      Totals:        14       0       0       0       0
  8743 ;;Total ram usage:       14 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_Fuzzy
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function ___fttol
  8754  1612                     ___fttol:	
  8755                           
  8756                           ;incstack = 0
  8757                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8758  1612  0870               	movf	___fttol@f1,w
  8759  1613  00F4               	movwf	??___fttol
  8760  1614  0871               	movf	___fttol@f1+1,w
  8761  1615  00F5               	movwf	??___fttol+1
  8762  1616  0872               	movf	___fttol@f1+2,w
  8763  1617  00F6               	movwf	??___fttol+2
  8764  1618  1003               	clrc
  8765  1619  0D75               	rlf	??___fttol+1,w
  8766  161A  0D76               	rlf	??___fttol+2,w
  8767  161B  00F7               	movwf	??___fttol+3
  8768  161C  0877               	movf	??___fttol+3,w
  8769  161D  00FD               	movwf	___fttol@exp1
  8770  161E  08FD               	movf	___fttol@exp1,f
  8771  161F  1D03               	skipz
  8772  1620  2E2A               	goto	i1l2624
  8773  1621  3000               	movlw	0
  8774  1622  00F3               	movwf	?___fttol+3
  8775  1623  3000               	movlw	0
  8776  1624  00F2               	movwf	?___fttol+2
  8777  1625  3000               	movlw	0
  8778  1626  00F1               	movwf	?___fttol+1
  8779  1627  3000               	movlw	0
  8780  1628  00F0               	movwf	?___fttol
  8781  1629  0008               	return
  8782  162A                     i1l2624:	
  8783  162A  0870               	movf	___fttol@f1,w
  8784  162B  00F4               	movwf	??___fttol
  8785  162C  0871               	movf	___fttol@f1+1,w
  8786  162D  00F5               	movwf	??___fttol+1
  8787  162E  0872               	movf	___fttol@f1+2,w
  8788  162F  00F6               	movwf	??___fttol+2
  8789  1630  3017               	movlw	23
  8790  1631                     u309_25:	
  8791  1631  1003               	clrc
  8792  1632  0CF6               	rrf	??___fttol+2,f
  8793  1633  0CF5               	rrf	??___fttol+1,f
  8794  1634  0CF4               	rrf	??___fttol,f
  8795  1635  3EFF               	addlw	-1
  8796  1636  1D03               	skipz
  8797  1637  2E31               	goto	u309_25
  8798  1638  0874               	movf	??___fttol,w
  8799  1639  00F7               	movwf	??___fttol+3
  8800  163A  0877               	movf	??___fttol+3,w
  8801  163B  00F8               	movwf	___fttol@sign1
  8802  163C  17F1               	bsf	___fttol@f1+1,7
  8803  163D  30FF               	movlw	255
  8804  163E  05F0               	andwf	___fttol@f1,f
  8805  163F  30FF               	movlw	255
  8806  1640  05F1               	andwf	___fttol@f1+1,f
  8807  1641  3000               	movlw	0
  8808  1642  05F2               	andwf	___fttol@f1+2,f
  8809  1643  0870               	movf	___fttol@f1,w
  8810  1644  00F9               	movwf	___fttol@lval
  8811  1645  0871               	movf	___fttol@f1+1,w
  8812  1646  00FA               	movwf	___fttol@lval+1
  8813  1647  0872               	movf	___fttol@f1+2,w
  8814  1648  00FB               	movwf	___fttol@lval+2
  8815  1649  01FC               	clrf	___fttol@lval+3
  8816  164A  308E               	movlw	142
  8817  164B  02FD               	subwf	___fttol@exp1,f
  8818  164C  1FFD               	btfss	___fttol@exp1,7
  8819  164D  2E6C               	goto	i1l2644
  8820  164E  087D               	movf	___fttol@exp1,w
  8821  164F  3A80               	xorlw	128
  8822  1650  3E8F               	addlw	143
  8823  1651  1803               	skipnc
  8824  1652  2E5C               	goto	i1l2642
  8825  1653  3000               	movlw	0
  8826  1654  00F3               	movwf	?___fttol+3
  8827  1655  3000               	movlw	0
  8828  1656  00F2               	movwf	?___fttol+2
  8829  1657  3000               	movlw	0
  8830  1658  00F1               	movwf	?___fttol+1
  8831  1659  3000               	movlw	0
  8832  165A  00F0               	movwf	?___fttol
  8833  165B  0008               	return
  8834  165C                     i1l2642:	
  8835  165C  3001               	movlw	1
  8836  165D                     u312_25:	
  8837  165D  1003               	clrc
  8838  165E  0CFC               	rrf	___fttol@lval+3,f
  8839  165F  0CFB               	rrf	___fttol@lval+2,f
  8840  1660  0CFA               	rrf	___fttol@lval+1,f
  8841  1661  0CF9               	rrf	___fttol@lval,f
  8842  1662  3EFF               	addlw	-1
  8843  1663  1D03               	skipz
  8844  1664  2E5D               	goto	u312_25
  8845  1665  3001               	movlw	1
  8846  1666  00F4               	movwf	??___fttol
  8847  1667  0874               	movf	??___fttol,w
  8848  1668  07FD               	addwf	___fttol@exp1,f
  8849  1669  1903               	btfsc	3,2
  8850  166A  2E87               	goto	i1l2654
  8851  166B  2E5C               	goto	i1l2642
  8852  166C                     i1l2644:	
  8853  166C  3018               	movlw	24
  8854  166D  027D               	subwf	___fttol@exp1,w
  8855  166E  1C03               	skipc
  8856  166F  2E84               	goto	i1l2652
  8857  1670  3000               	movlw	0
  8858  1671  00F3               	movwf	?___fttol+3
  8859  1672  3000               	movlw	0
  8860  1673  00F2               	movwf	?___fttol+2
  8861  1674  3000               	movlw	0
  8862  1675  00F1               	movwf	?___fttol+1
  8863  1676  3000               	movlw	0
  8864  1677  00F0               	movwf	?___fttol
  8865  1678  0008               	return
  8866  1679                     i1l2650:	
  8867  1679  3001               	movlw	1
  8868  167A  00F4               	movwf	??___fttol
  8869  167B                     u315_25:	
  8870  167B  1003               	clrc
  8871  167C  0DF9               	rlf	___fttol@lval,f
  8872  167D  0DFA               	rlf	___fttol@lval+1,f
  8873  167E  0DFB               	rlf	___fttol@lval+2,f
  8874  167F  0DFC               	rlf	___fttol@lval+3,f
  8875  1680  0BF4               	decfsz	??___fttol,f
  8876  1681  2E7B               	goto	u315_25
  8877  1682  3001               	movlw	1
  8878  1683  02FD               	subwf	___fttol@exp1,f
  8879  1684                     i1l2652:	
  8880  1684  08FD               	movf	___fttol@exp1,f
  8881  1685  1D03               	skipz
  8882  1686  2E79               	goto	i1l2650
  8883  1687                     i1l2654:	
  8884  1687  0878               	movf	___fttol@sign1,w
  8885  1688  1903               	btfsc	3,2
  8886  1689  2E95               	goto	i1l2658
  8887  168A  09F9               	comf	___fttol@lval,f
  8888  168B  09FA               	comf	___fttol@lval+1,f
  8889  168C  09FB               	comf	___fttol@lval+2,f
  8890  168D  09FC               	comf	___fttol@lval+3,f
  8891  168E  0AF9               	incf	___fttol@lval,f
  8892  168F  1903               	skipnz
  8893  1690  0AFA               	incf	___fttol@lval+1,f
  8894  1691  1903               	skipnz
  8895  1692  0AFB               	incf	___fttol@lval+2,f
  8896  1693  1903               	skipnz
  8897  1694  0AFC               	incf	___fttol@lval+3,f
  8898  1695                     i1l2658:	
  8899  1695  087C               	movf	___fttol@lval+3,w
  8900  1696  00F3               	movwf	?___fttol+3
  8901  1697  087B               	movf	___fttol@lval+2,w
  8902  1698  00F2               	movwf	?___fttol+2
  8903  1699  087A               	movf	___fttol@lval+1,w
  8904  169A  00F1               	movwf	?___fttol+1
  8905  169B  0879               	movf	___fttol@lval,w
  8906  169C  00F0               	movwf	?___fttol
  8907  169D  0008               	return
  8908  169E                     __end_of___fttol:	
  8909                           
  8910                           	psect	text40
  8911  172D                     __ptext40:	
  8912 ;; *************** function ___ftmul *****************
  8913 ;; Defined at:
  8914 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  f1              3   23[BANK0 ] float 
  8917 ;;  f2              3   26[BANK0 ] float 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  8920 ;;  sign            1   38[BANK0 ] unsigned char 
  8921 ;;  cntr            1   37[BANK0 ] unsigned char 
  8922 ;;  exp             1   33[BANK0 ] unsigned char 
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  3   23[BANK0 ] float 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0, pclath, cstack
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8932 ;;      Params:         0       6       0       0       0
  8933 ;;      Locals:         0       6       0       0       0
  8934 ;;      Temps:          0       4       0       0       0
  8935 ;;      Totals:         0      16       0       0       0
  8936 ;;Total ram usage:       16 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:    1
  8939 ;; This function calls:
  8940 ;;		___ftpack
  8941 ;; This function is called by:
  8942 ;;		_Fuzzy
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           
  8947                           ;psect for function ___ftmul
  8948  172D                     ___ftmul:	
  8949                           
  8950                           ;incstack = 0
  8951                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8952  172D  1283               	bcf	3,5	;RP0=0, select bank0
  8953  172E  1303               	bcf	3,6	;RP1=0, select bank0
  8954  172F  0837               	movf	___ftmul@f1,w
  8955  1730  00BD               	movwf	??___ftmul
  8956  1731  0838               	movf	___ftmul@f1+1,w
  8957  1732  00BE               	movwf	??___ftmul+1
  8958  1733  0839               	movf	___ftmul@f1+2,w
  8959  1734  00BF               	movwf	??___ftmul+2
  8960  1735  1003               	clrc
  8961  1736  0D3E               	rlf	??___ftmul+1,w
  8962  1737  0D3F               	rlf	??___ftmul+2,w
  8963  1738  00C0               	movwf	??___ftmul+3
  8964  1739  0840               	movf	??___ftmul+3,w
  8965  173A  00C1               	movwf	___ftmul@exp
  8966  173B  08C1               	movf	___ftmul@exp,f
  8967  173C  1D03               	skipz
  8968  173D  2F45               	goto	i1l2574
  8969  173E  3000               	movlw	0
  8970  173F  00B7               	movwf	?___ftmul
  8971  1740  3000               	movlw	0
  8972  1741  00B8               	movwf	?___ftmul+1
  8973  1742  3000               	movlw	0
  8974  1743  00B9               	movwf	?___ftmul+2
  8975  1744  0008               	return
  8976  1745                     i1l2574:	
  8977  1745  083A               	movf	___ftmul@f2,w
  8978  1746  00BD               	movwf	??___ftmul
  8979  1747  083B               	movf	___ftmul@f2+1,w
  8980  1748  00BE               	movwf	??___ftmul+1
  8981  1749  083C               	movf	___ftmul@f2+2,w
  8982  174A  00BF               	movwf	??___ftmul+2
  8983  174B  1003               	clrc
  8984  174C  0D3E               	rlf	??___ftmul+1,w
  8985  174D  0D3F               	rlf	??___ftmul+2,w
  8986  174E  00C0               	movwf	??___ftmul+3
  8987  174F  0840               	movf	??___ftmul+3,w
  8988  1750  00C6               	movwf	___ftmul@sign
  8989  1751  08C6               	movf	___ftmul@sign,f
  8990  1752  1D03               	skipz
  8991  1753  2F5B               	goto	i1l2580
  8992  1754  3000               	movlw	0
  8993  1755  00B7               	movwf	?___ftmul
  8994  1756  3000               	movlw	0
  8995  1757  00B8               	movwf	?___ftmul+1
  8996  1758  3000               	movlw	0
  8997  1759  00B9               	movwf	?___ftmul+2
  8998  175A  0008               	return
  8999  175B                     i1l2580:	
  9000  175B  0846               	movf	___ftmul@sign,w
  9001  175C  3E7B               	addlw	123
  9002  175D  00BD               	movwf	??___ftmul
  9003  175E  083D               	movf	??___ftmul,w
  9004  175F  07C1               	addwf	___ftmul@exp,f
  9005  1760  0837               	movf	___ftmul@f1,w
  9006  1761  00BD               	movwf	??___ftmul
  9007  1762  0838               	movf	___ftmul@f1+1,w
  9008  1763  00BE               	movwf	??___ftmul+1
  9009  1764  0839               	movf	___ftmul@f1+2,w
  9010  1765  00BF               	movwf	??___ftmul+2
  9011  1766  3010               	movlw	16
  9012  1767                     u296_25:	
  9013  1767  1003               	clrc
  9014  1768  0CBF               	rrf	??___ftmul+2,f
  9015  1769  0CBE               	rrf	??___ftmul+1,f
  9016  176A  0CBD               	rrf	??___ftmul,f
  9017  176B  3EFF               	addlw	-1
  9018  176C  1D03               	skipz
  9019  176D  2F67               	goto	u296_25
  9020  176E  083D               	movf	??___ftmul,w
  9021  176F  00C0               	movwf	??___ftmul+3
  9022  1770  0840               	movf	??___ftmul+3,w
  9023  1771  00C6               	movwf	___ftmul@sign
  9024  1772  083A               	movf	___ftmul@f2,w
  9025  1773  00BD               	movwf	??___ftmul
  9026  1774  083B               	movf	___ftmul@f2+1,w
  9027  1775  00BE               	movwf	??___ftmul+1
  9028  1776  083C               	movf	___ftmul@f2+2,w
  9029  1777  00BF               	movwf	??___ftmul+2
  9030  1778  3010               	movlw	16
  9031  1779                     u297_25:	
  9032  1779  1003               	clrc
  9033  177A  0CBF               	rrf	??___ftmul+2,f
  9034  177B  0CBE               	rrf	??___ftmul+1,f
  9035  177C  0CBD               	rrf	??___ftmul,f
  9036  177D  3EFF               	addlw	-1
  9037  177E  1D03               	skipz
  9038  177F  2F79               	goto	u297_25
  9039  1780  083D               	movf	??___ftmul,w
  9040  1781  00C0               	movwf	??___ftmul+3
  9041  1782  0840               	movf	??___ftmul+3,w
  9042  1783  06C6               	xorwf	___ftmul@sign,f
  9043  1784  3080               	movlw	128
  9044  1785  00BD               	movwf	??___ftmul
  9045  1786  083D               	movf	??___ftmul,w
  9046  1787  05C6               	andwf	___ftmul@sign,f
  9047  1788  17B8               	bsf	___ftmul@f1+1,7
  9048  1789  17BB               	bsf	___ftmul@f2+1,7
  9049  178A  30FF               	movlw	255
  9050  178B  05BA               	andwf	___ftmul@f2,f
  9051  178C  30FF               	movlw	255
  9052  178D  05BB               	andwf	___ftmul@f2+1,f
  9053  178E  3000               	movlw	0
  9054  178F  05BC               	andwf	___ftmul@f2+2,f
  9055  1790  3000               	movlw	0
  9056  1791  00C2               	movwf	___ftmul@f3_as_product
  9057  1792  3000               	movlw	0
  9058  1793  00C3               	movwf	___ftmul@f3_as_product+1
  9059  1794  3000               	movlw	0
  9060  1795  00C4               	movwf	___ftmul@f3_as_product+2
  9061  1796  3007               	movlw	7
  9062  1797  00BD               	movwf	??___ftmul
  9063  1798  083D               	movf	??___ftmul,w
  9064  1799  00C5               	movwf	___ftmul@cntr
  9065  179A                     i1l2592:	
  9066  179A  1C37               	btfss	___ftmul@f1,0
  9067  179B  2FAA               	goto	i1l2596
  9068  179C  083A               	movf	___ftmul@f2,w
  9069  179D  07C2               	addwf	___ftmul@f3_as_product,f
  9070  179E  083B               	movf	___ftmul@f2+1,w
  9071  179F  1103               	clrz
  9072  17A0  1803               	skipnc
  9073  17A1  0A3B               	incf	___ftmul@f2+1,w
  9074  17A2  1D03               	btfss	3,2
  9075  17A3  07C3               	addwf	___ftmul@f3_as_product+1,f
  9076  17A4  083C               	movf	___ftmul@f2+2,w
  9077  17A5  1103               	clrz
  9078  17A6  1803               	skipnc
  9079  17A7  0A3C               	incf	___ftmul@f2+2,w
  9080  17A8  1D03               	btfss	3,2
  9081  17A9  07C4               	addwf	___ftmul@f3_as_product+2,f
  9082  17AA                     i1l2596:	
  9083  17AA  3001               	movlw	1
  9084  17AB                     u300_25:	
  9085  17AB  1003               	clrc
  9086  17AC  0CB9               	rrf	___ftmul@f1+2,f
  9087  17AD  0CB8               	rrf	___ftmul@f1+1,f
  9088  17AE  0CB7               	rrf	___ftmul@f1,f
  9089  17AF  3EFF               	addlw	-1
  9090  17B0  1D03               	skipz
  9091  17B1  2FAB               	goto	u300_25
  9092  17B2  3001               	movlw	1
  9093  17B3                     u301_25:	
  9094  17B3  1003               	clrc
  9095  17B4  0DBA               	rlf	___ftmul@f2,f
  9096  17B5  0DBB               	rlf	___ftmul@f2+1,f
  9097  17B6  0DBC               	rlf	___ftmul@f2+2,f
  9098  17B7  3EFF               	addlw	-1
  9099  17B8  1D03               	skipz
  9100  17B9  2FB3               	goto	u301_25
  9101  17BA  3001               	movlw	1
  9102  17BB  02C5               	subwf	___ftmul@cntr,f
  9103  17BC  1D03               	btfss	3,2
  9104  17BD  2F9A               	goto	i1l2592
  9105  17BE  3009               	movlw	9
  9106  17BF  00BD               	movwf	??___ftmul
  9107  17C0  083D               	movf	??___ftmul,w
  9108  17C1  00C5               	movwf	___ftmul@cntr
  9109  17C2                     i1l2604:	
  9110  17C2  1C37               	btfss	___ftmul@f1,0
  9111  17C3  2FD2               	goto	i1l2608
  9112  17C4  083A               	movf	___ftmul@f2,w
  9113  17C5  07C2               	addwf	___ftmul@f3_as_product,f
  9114  17C6  083B               	movf	___ftmul@f2+1,w
  9115  17C7  1103               	clrz
  9116  17C8  1803               	skipnc
  9117  17C9  0A3B               	incf	___ftmul@f2+1,w
  9118  17CA  1D03               	btfss	3,2
  9119  17CB  07C3               	addwf	___ftmul@f3_as_product+1,f
  9120  17CC  083C               	movf	___ftmul@f2+2,w
  9121  17CD  1103               	clrz
  9122  17CE  1803               	skipnc
  9123  17CF  0A3C               	incf	___ftmul@f2+2,w
  9124  17D0  1D03               	btfss	3,2
  9125  17D1  07C4               	addwf	___ftmul@f3_as_product+2,f
  9126  17D2                     i1l2608:	
  9127  17D2  3001               	movlw	1
  9128  17D3                     u305_25:	
  9129  17D3  1003               	clrc
  9130  17D4  0CB9               	rrf	___ftmul@f1+2,f
  9131  17D5  0CB8               	rrf	___ftmul@f1+1,f
  9132  17D6  0CB7               	rrf	___ftmul@f1,f
  9133  17D7  3EFF               	addlw	-1
  9134  17D8  1D03               	skipz
  9135  17D9  2FD3               	goto	u305_25
  9136  17DA  3001               	movlw	1
  9137  17DB                     u306_25:	
  9138  17DB  1003               	clrc
  9139  17DC  0CC4               	rrf	___ftmul@f3_as_product+2,f
  9140  17DD  0CC3               	rrf	___ftmul@f3_as_product+1,f
  9141  17DE  0CC2               	rrf	___ftmul@f3_as_product,f
  9142  17DF  3EFF               	addlw	-1
  9143  17E0  1D03               	skipz
  9144  17E1  2FDB               	goto	u306_25
  9145  17E2  3001               	movlw	1
  9146  17E3  02C5               	subwf	___ftmul@cntr,f
  9147  17E4  1D03               	btfss	3,2
  9148  17E5  2FC2               	goto	i1l2604
  9149  17E6  0842               	movf	___ftmul@f3_as_product,w
  9150  17E7  00F0               	movwf	___ftpack@arg
  9151  17E8  0843               	movf	___ftmul@f3_as_product+1,w
  9152  17E9  00F1               	movwf	___ftpack@arg+1
  9153  17EA  0844               	movf	___ftmul@f3_as_product+2,w
  9154  17EB  00F2               	movwf	___ftpack@arg+2
  9155  17EC  0841               	movf	___ftmul@exp,w
  9156  17ED  00BD               	movwf	??___ftmul
  9157  17EE  083D               	movf	??___ftmul,w
  9158  17EF  00F3               	movwf	___ftpack@exp
  9159  17F0  0846               	movf	___ftmul@sign,w
  9160  17F1  00BE               	movwf	??___ftmul+1
  9161  17F2  083E               	movf	??___ftmul+1,w
  9162  17F3  00F4               	movwf	___ftpack@sign
  9163  17F4  160A  118A  25AA   	fcall	___ftpack
  9164  17F7  0870               	movf	?___ftpack,w
  9165  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  9166  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  9167  17FA  00B7               	movwf	?___ftmul
  9168  17FB  0871               	movf	?___ftpack+1,w
  9169  17FC  00B8               	movwf	?___ftmul+1
  9170  17FD  0872               	movf	?___ftpack+2,w
  9171  17FE  00B9               	movwf	?___ftmul+2
  9172  17FF  0008               	return
  9173  1800                     __end_of___ftmul:	
  9174                           
  9175                           	psect	text41
  9176  15AA                     __ptext41:	
  9177 ;; *************** function ___ftpack *****************
  9178 ;; Defined at:
  9179 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  arg             3    0[COMMON] unsigned um
  9182 ;;  exp             1    3[COMMON] unsigned char 
  9183 ;;  sign            1    4[COMMON] unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  3    0[COMMON] float 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9195 ;;      Params:         5       0       0       0       0
  9196 ;;      Locals:         0       0       0       0       0
  9197 ;;      Temps:          3       0       0       0       0
  9198 ;;      Totals:         8       0       0       0       0
  9199 ;;Total ram usage:        8 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; This function calls:
  9202 ;;		Nothing
  9203 ;; This function is called by:
  9204 ;;		___ftadd
  9205 ;;		___ftdiv
  9206 ;;		___ftmul
  9207 ;;		___lwtoft
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function ___ftpack
  9213  15AA                     ___ftpack:	
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9217  15AA  0873               	movf	___ftpack@exp,w
  9218  15AB  1903               	btfsc	3,2
  9219  15AC  2DB2               	goto	i1l2248
  9220  15AD  0872               	movf	___ftpack@arg+2,w
  9221  15AE  0471               	iorwf	___ftpack@arg+1,w
  9222  15AF  0470               	iorwf	___ftpack@arg,w
  9223  15B0  1D03               	skipz
  9224  15B1  2DC5               	goto	i1l2254
  9225  15B2                     i1l2248:	
  9226  15B2  3000               	movlw	0
  9227  15B3  00F0               	movwf	?___ftpack
  9228  15B4  3000               	movlw	0
  9229  15B5  00F1               	movwf	?___ftpack+1
  9230  15B6  3000               	movlw	0
  9231  15B7  00F2               	movwf	?___ftpack+2
  9232  15B8  0008               	return
  9233  15B9                     i1l2252:	
  9234  15B9  3001               	movlw	1
  9235  15BA  00F5               	movwf	??___ftpack
  9236  15BB  0875               	movf	??___ftpack,w
  9237  15BC  07F3               	addwf	___ftpack@exp,f
  9238  15BD  3001               	movlw	1
  9239  15BE                     u214_25:	
  9240  15BE  1003               	clrc
  9241  15BF  0CF2               	rrf	___ftpack@arg+2,f
  9242  15C0  0CF1               	rrf	___ftpack@arg+1,f
  9243  15C1  0CF0               	rrf	___ftpack@arg,f
  9244  15C2  3EFF               	addlw	-1
  9245  15C3  1D03               	skipz
  9246  15C4  2DBE               	goto	u214_25
  9247  15C5                     i1l2254:	
  9248  15C5  30FE               	movlw	254
  9249  15C6  0572               	andwf	___ftpack@arg+2,w
  9250  15C7  1903               	btfsc	3,2
  9251  15C8  2DE0               	goto	i1l759
  9252  15C9  2DB9               	goto	i1l2252
  9253  15CA                     i1l2256:	
  9254  15CA  3001               	movlw	1
  9255  15CB  00F5               	movwf	??___ftpack
  9256  15CC  0875               	movf	??___ftpack,w
  9257  15CD  07F3               	addwf	___ftpack@exp,f
  9258  15CE  3001               	movlw	1
  9259  15CF  07F0               	addwf	___ftpack@arg,f
  9260  15D0  3000               	movlw	0
  9261  15D1  1803               	skipnc
  9262  15D2  3001               	movlw	1
  9263  15D3  07F1               	addwf	___ftpack@arg+1,f
  9264  15D4  3000               	movlw	0
  9265  15D5  1803               	skipnc
  9266  15D6  3001               	movlw	1
  9267  15D7  07F2               	addwf	___ftpack@arg+2,f
  9268  15D8  3001               	movlw	1
  9269  15D9                     u216_25:	
  9270  15D9  1003               	clrc
  9271  15DA  0CF2               	rrf	___ftpack@arg+2,f
  9272  15DB  0CF1               	rrf	___ftpack@arg+1,f
  9273  15DC  0CF0               	rrf	___ftpack@arg,f
  9274  15DD  3EFF               	addlw	-1
  9275  15DE  1D03               	skipz
  9276  15DF  2DD9               	goto	u216_25
  9277  15E0                     i1l759:	
  9278  15E0  30FF               	movlw	255
  9279  15E1  0572               	andwf	___ftpack@arg+2,w
  9280  15E2  1903               	btfsc	3,2
  9281  15E3  2DEF               	goto	i1l2264
  9282  15E4  2DCA               	goto	i1l2256
  9283  15E5                     i1l2262:	
  9284  15E5  3001               	movlw	1
  9285  15E6  02F3               	subwf	___ftpack@exp,f
  9286  15E7  3001               	movlw	1
  9287  15E8                     u218_25:	
  9288  15E8  1003               	clrc
  9289  15E9  0DF0               	rlf	___ftpack@arg,f
  9290  15EA  0DF1               	rlf	___ftpack@arg+1,f
  9291  15EB  0DF2               	rlf	___ftpack@arg+2,f
  9292  15EC  3EFF               	addlw	-1
  9293  15ED  1D03               	skipz
  9294  15EE  2DE8               	goto	u218_25
  9295  15EF                     i1l2264:	
  9296  15EF  1FF1               	btfss	___ftpack@arg+1,7
  9297  15F0  2DE5               	goto	i1l2262
  9298  15F1  1873               	btfsc	___ftpack@exp,0
  9299  15F2  2DF9               	goto	i1l765
  9300  15F3  30FF               	movlw	255
  9301  15F4  05F0               	andwf	___ftpack@arg,f
  9302  15F5  307F               	movlw	127
  9303  15F6  05F1               	andwf	___ftpack@arg+1,f
  9304  15F7  30FF               	movlw	255
  9305  15F8  05F2               	andwf	___ftpack@arg+2,f
  9306  15F9                     i1l765:	
  9307  15F9  1003               	clrc
  9308  15FA  0CF3               	rrf	___ftpack@exp,f
  9309  15FB  0873               	movf	___ftpack@exp,w
  9310  15FC  00F5               	movwf	??___ftpack
  9311  15FD  01F6               	clrf	??___ftpack+1
  9312  15FE  01F7               	clrf	??___ftpack+2
  9313  15FF  3010               	movlw	16
  9314  1600                     u221_25:	
  9315  1600  1003               	clrc
  9316  1601  0DF5               	rlf	??___ftpack,f
  9317  1602  0DF6               	rlf	??___ftpack+1,f
  9318  1603  0DF7               	rlf	??___ftpack+2,f
  9319  1604  3EFF               	addlw	-1
  9320  1605  1D03               	skipz
  9321  1606  2E00               	goto	u221_25
  9322  1607  0875               	movf	??___ftpack,w
  9323  1608  04F0               	iorwf	___ftpack@arg,f
  9324  1609  0876               	movf	??___ftpack+1,w
  9325  160A  04F1               	iorwf	___ftpack@arg+1,f
  9326  160B  0877               	movf	??___ftpack+2,w
  9327  160C  04F2               	iorwf	___ftpack@arg+2,f
  9328  160D  0874               	movf	___ftpack@sign,w
  9329  160E  1903               	btfsc	3,2
  9330  160F  0008               	return
  9331  1610  17F2               	bsf	___ftpack@arg+2,7
  9332  1611  0008               	return
  9333  1612                     __end_of___ftpack:	
  9334  007E                     btemp	set	126	;btemp
  9335  007E                     wtemp	set	126
  9336  007E                     wtemp0	set	126
  9337  0080                     wtemp1	set	128
  9338  0082                     wtemp2	set	130
  9339  0084                     wtemp3	set	132
  9340  0086                     wtemp4	set	134
  9341  0088                     wtemp5	set	136
  9342  007F                     wtemp6	set	127
  9343  007E                     ttemp	set	126
  9344  007E                     ttemp0	set	126
  9345  0081                     ttemp1	set	129
  9346  0084                     ttemp2	set	132
  9347  0087                     ttemp3	set	135
  9348  007F                     ttemp4	set	127
  9349  007E                     ltemp	set	126
  9350  007E                     ltemp0	set	126
  9351  0082                     ltemp1	set	130
  9352  0086                     ltemp2	set	134
  9353  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        5
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      80
    BANK1            80     34      79
    BANK3            96      0      23
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftadd
    _Fuzzy->___fttol
    _trimf->___ftadd
    _trapmf->___ftadd
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    _max_val->___ftge
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2129
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55080
                                             61 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               20    20      0   51650
                                             41 BANK0     20    20      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             23 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             23 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5550
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                             23 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      17       9       24.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C4      12        0.0%
ABS                  0      0      C4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 15:23:06 2022

           ?i1_PWM_DutyCycle2 0070                             _x 0064                             _y 0067  
                           pc 0002                   ?_LCD_Cursor 00CA       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00B2                            fsr 0004           ___wmul@multiplicand 00CC  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0026  
                ___ftadd@exp2 0025                 _contagens_tm0 00BC                  ___ftadd@sign 0024  
                         l202 0DB9                           l227 1212                           l653 16B0  
                         l479 0609                           l497 06CE                           l598 13AC  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0E65  
                         _rpm 00C0                           fsr0 0004                           _pwm 006C  
                         _sum 00AF    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CE                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0031                  ___ftdiv@sign 0036  
                        l3000 13EE                          l3100 0740                          l3020 060E  
          LCD_WriteString@Str 00CC                          l3022 0619                          l3014 0605  
                        l3110 05E3                          l3112 078C                          l3026 062B  
                        l3108 0744                          l3060 06C0                          l3052 069F  
                        l3036 0669                          l3070 06F1                          l3038 0680  
                        l2512 122A                          l3048 0699                          l3068 06ED  
                        l2702 1474                          l2518 13A4                          l3094 0731  
                        l3078 0702                          l3086 0718                          l2560 1716  
                        l3088 071C                          l2546 16D1                          l2538 16C1  
                        l2706 147F                          l2564 1724                          l2556 1709  
                        l2548 16E1                          l2680 14F2                          l2672 14CE  
                        l2674 14DC                          l2684 14FD                          l2880 141F  
                        l2696 1458                          l2698 1466                          l2986 12E2  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3215 14DD                          u3225 14E9                          u3235 14F3  
                        u4107 0DB2                          u4117 0E5E                          u4207 07FB  
                        u4127 127A                          u4217 12EE                          u4137 079D  
                        u3265 145B                          u4227 13D1                          u4147 07AD  
                        u3195 14D1                          u4237 13DF                          u4157 07BB  
                        u3285 146C                          u4247 13EB                          u4167 07C7  
                        u3615 1309                          u3295 1475                          u2815 13AD  
                        u4257 1263                          u4177 07D3                          u2905 16F8  
                        u2825 13B4                          u4187 07E1                          u3555 132A  
                        u2915 170A                          u3715 06DD                          u4197 07EF  
                        u3585 150F                          u2875 16D5                          u3675 06B6  
                        u2895 16E3                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0D14                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 0061  
                        btemp 007E              __end_of_ADC_Init 123E                          ltemp 007E  
                        start 0012                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 1269                  ___ftmul@cntr 0045  
                ___ftmul@sign 0046       __end_of_USART_WriteChar 121C                         ??_ISR 005D  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 07FE               __end_of___aldiv 172D                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 0AA6                         STR_10 0884  
                       STR_11 0842                         STR_12 085F                         STR_13 0873  
                       STR_14 08D6                         STR_15 08D6                         STR_16 08C5  
                       STR_17 08D0                 __CFG_WDTE$OFF 0000                         STR_18 08C8  
                       STR_19 081A               __end_of___ftdiv 099F               __end_of___ftneg 11F7  
             __end_of___ftmul 1800                         _T1CON 0010               __end_of___fttol 169E  
             __end_of___lwdiv 1504                         i1l120 0BBB                         i1l130 0D0B  
                       i1l227 11F8                         i1l180 0FF3                         i1l184 0ED3  
             __end_of___lwmod 1486                         i1l187 0EFC                         i1l765 15F9  
                       i1l598 1363                         i1l759 15E0                         i1l788 0A47  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0053                         _derro 0190  
             __end_of_dpowers 081A               __end_of_max_val 12D4               __end_of_isdigit 122C  
               ___ftpack@sign 0074                         _trimf 0AA6                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 13A0  
            __end_ofi1___wmul 137C                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 0793            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00CA                ?_LCD_WriteData 0070                   ?_USART_Init 00D9  
       i1TIMER0_Set@contagens 0070               __initialization 0015                  __end_of_main 0E65  
                      ??_main 00E9                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 13EE                    Fuzzy@a_233 004E                    Fuzzy@a_234 0050  
                  Fuzzy@a_235 0052                        ?_Fuzzy 0070                    Fuzzy@reduz 0057  
                      _ADRESH 001E                        _ADRESL 009E                        _EEDATA 010C  
                      _CCPR1L 0015                        _CCPR2L 001B                        _EECON2 018D  
            __end_of___ftpack 1612                        ?_trimf 0037                        i1l2310 0A0D  
                      i1l2312 0A19                        i1l2304 09F8                        i1l2322 0A37  
                      i1l2314 0A1E                        i1l3130 135B                        i1l2252 15B9  
                      i1l2332 0A6B                        i1l2324 0A43                        i1l2316 0A22  
                      i1l2262 15E5                        i1l2254 15C5                        i1l2342 0A8E  
                      i1l3150 148E                        i1l3230 0F2C                        i1l3206 0ED4  
                      i1l2264 15EF                        i1l2256 15CA                        i1l2248 15B2  
                      i1l2328 0A59                        i1l2352 08FF                        i1l2432 0B1D  
                      i1l3152 149C                        i1l3224 0F15                        i1l2282 09C8  
                      i1l3162 14BD                        i1l3242 0F5A                        i1l3218 0EFE  
                      i1l2604 17C2                        i1l2292 09DE                        i1l2380 0979  
                      i1l2372 095A                        i1l3236 0F43                        i1l2286 09CF  
                      i1l2358 0915                        i1l2462 0C6D                        i1l2438 0B9E  
                      i1l3158 14B2                        i1l3190 0E9F                        i1l3254 0F8E  
                      i1l2608 17D2                        i1l2624 162A                        i1l2392 1574  
                      i1l2456 0C3B                        i1l2720 1336                        i1l3280 0FEF  
                      i1l3248 0F71                        i1l3184 0E88                        i1l2650 1679  
                      i1l2642 165C                        i1l2810 0457                        i1l3266 0FAB  
                      i1l2580 175B                        i1l2652 1684                        i1l2644 166C  
                      i1l2396 159B                        i1l2468 0CEE                        i1l3196 0EB6  
                      i1l2574 1745                        i1l2654 1687                        i1l2822 04AB  
                      i1l2806 040A                        i1l2742 011F                        i1l3278 0FEE  
                      i1l2592 179A                        i1l2832 04FA                        i1l2816 049C  
                      i1l2760 0202                        i1l2658 1695                        i1l2826 04C8  
                      i1l2738 0102                        i1l2596 17AA                        i1l2836 0513  
                      i1l2756 01B3                        i1l2860 12A4                        i1l2782 02EA  
                      i1l2766 0247                        i1l2792 0376                        i1l2786 0331  
                      i1l2868 12B3                        u300_25 17AB                        u221_25 1600  
                      u301_25 17B3                        u214_25 15BE                        u216_25 15D9  
                      u312_25 165D                        u232_25 09F9                        u305_25 17D3  
                      u241_25 0A38                        u218_25 15E8                        u306_25 17DB  
                      u250_25 0939                        u315_25 167B                        u235_25 0A0E  
                      u251_25 095B                        u252_25 096C                        u332_25 1291  
                      u309_25 1631                        u253_25 097A                        u341_25 02E8  
                      u238_25 0A23                        u343_25 0374                        u256_21 1567  
                      u256_22 1568                        u256_23 156D                        u256_24 156E  
                      u352_25 0511                        u336_25 01B1                        u249_25 0927  
                      u345_25 0408                        u258_21 158E              __end_of___lwtoft 1252  
                      u258_22 158F                        u258_23 1594                        u258_24 1595  
                      u338_25 0245                        u347_25 049A                        u348_25 04A9  
         __size_of_TIMER0_Set 0008                        u390_25 14B3                        u382_25 1364  
                      u383_25 136B                        u296_25 1767                        u297_25 1779  
                      u386_25 1491                        u388_25 149D                        u389_25 14A9  
                      _SSPADD 0093                        _SSPBUF 0013                        Fuzzy@a 004C  
            LCD_WriteCmd@Byte 00CB           i1_USART_WriteString 1336                        ___ftge 154D  
                   ??___aldiv 00D2                        ___wmul 13A0                     ??___ftadd 0020  
              _PWM_DutyCycle1 12F4                _PWM_DutyCycle2 1315              ?_USART_WriteChar 0070  
                   ??___ftdiv 002D                     ??___ftneg 0073                        _deltaV 006A  
                   ??___ftmul 003D                     ??___fttol 0074                     ??___lwdiv 00CE  
                   ??___lwmod 00D6                        _fitemp 00A3         USART_ReceiveChar@byte 0074  
                      _trapmf 0BC4                        _pulsos 00BE                        _status 00C4  
       ___ftmul@f3_as_product 0042                     ??_max_val 007C             __end_ofi1___lwdiv 14C4  
                   ??_isdigit 00CA                     ?_ADC_Init 0070                        saved_w 007E  
        ?i1_USART_WriteString 0071           __size_of_USART_Init 0049                        trimf@a 003A  
                      trimf@b 003D                        trimf@c 0040                        trimf@x 0037  
                   ??_sprintf 00DB                 ?i1_TIMER0_Set 0070       __end_of__initialization 004F  
                   ?_LCD_Init 0070                    ___ftadd@f1 0078                    ___ftadd@f2 007B  
             ??_LCD_WriteData 00CA                    ___ftge@ff1 0070                    ___ftge@ff2 0073  
                  ___ftdiv@f1 002A                    ___ftdiv@f2 0027                    ___ftdiv@f3 0032  
                  ___ftneg@f1 0070        __end_of_PWM_DutyCycle1 1315        __end_of_PWM_DutyCycle2 1336  
                  ___ftmul@f1 0037                    ___ftmul@f2 003A                    ___fttol@f1 0070  
              __pcstackCOMMON 0070                 __end_of_Fuzzy 05DC                  __pidataBANK0 07FE  
                __pidataBANK1 11E6                 LCD_Cursor@Col 00CA                 LCD_Cursor@Row 00CC  
                ??_LCD_Cursor 00CB               _LCD_WriteString 13EE                 __end_of_trimf 0BC4  
                  ___lwtoft@c 0078                     ?_PWM_Init 0070                     ?i1___wmul 0078  
              _OPTION_REGbits 0081                    ??_ADC_Init 00CA          __end_of_LCD_WriteCmd 1269  
       ??i1_USART_WriteString 0073                       ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B  
              ??i1_TIMER0_Set 0070                  sprintf@width 00E5                       ??_trimf 007E  
                  __pbssBANK0 0061                    __pbssBANK1 00A0                    __pbssBANK3 0190  
          __end_of_LCD_Cursor 12F4                    ??_LCD_Init 00CC         i1USART_WriteChar@byte 0070  
             ?_PWM_DutyCycle1 00CA               ?_PWM_DutyCycle2 00CA                    __pmaintext 0D14  
                 Fuzzy@mantem 0054                       ?___ftge 0070                       ?___wmul 00CA  
                  __pintentry 0004                  ??_TIMER0_Set 00CA                       _CCP1CON 0017  
                     _CCP2CON 001D                     ?___ftpack 0070                       ?_trapmf 0037  
                  ??_PWM_Init 00CA                    ??i1___wmul 007C                     ?___lwtoft 0078  
        __size_of_TIMER0_Init 000B                       _SSPCON2 0091                    __stringtab 0800  
          __end_of_TIMER0_Set 1207       __end_of_LCD_WriteString 141F                     _ADCResult 00B8  
                ??_USART_Init 00DD             LCD_WriteData@Byte 00CB                       ___aldiv 169E  
             __size_of___ftge 005D                       ___ftadd 099F                       ___ftdiv 08E7  
                     ___ftneg 11EF               __size_of___wmul 0025                       ___ftmul 172D  
                     ___fttol 1612                       ___lwdiv 14C4                       ___lwmod 1450  
                  ??___ftpack 0075                       __ptext1 05DC                       __ptext2 121C  
                     __ptext3 13A0                       __ptext4 1450                       __ptext5 14C4  
                     __ptext6 141F                       __ptext7 120F                       __ptext8 1504  
                     __ptext9 169E                    _pas_cooler 006E                    ??___lwtoft 007B  
             __size_of_trapmf 0150                  __size_of_ISR 019B                     _T1CONbits 0010  
                     _dpowers 0810             i1___lwdiv@divisor 0070                     _T2CONbits 0012  
                     _max_val 12B6                       _isdigit 121C             i1___lwdiv@counter 0077  
            ___aldiv@dividend 00CE                     _LCD_Clear 13C5            __end_of_USART_Init 154D  
                     _sprintf 05DC                       clrloop0 1208          end_of_initialization 004F  
                   _RCSTAbits 0018              ___aldiv@quotient 00D5                       trapmf@a 003A  
                     trapmf@b 003D                       trapmf@c 0040                       trapmf@d 0043  
                     trapmf@x 0037                       trimf@ua 0043          __end_ofi1_TIMER0_Set 11EF  
       i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006  
                   _PORTEbits 0009                    _setpointUI 00C2                    ?_LCD_Clear 0070  
            i1_PWM_DutyCycle2 1280             __size_of_ADC_Init 0012                     i1___lwdiv 1486  
                _contador_rb6 00BA           PWM_DutyCycle1@valor 00CA                    _total_area 00B5  
         PWM_DutyCycle2@valor 00CA                   _CCP1CONbits 0017                   ___ftdiv@exp 0035  
                 _CCP2CONbits 001D                     _TXSTAbits 0098              ?_LCD_WriteString 00CC  
           __size_of_LCD_Init 006B                  _LCD_WriteCmd 1252                   ___ftmul@exp 0041  
              __end_of___ftge 15AA                __end_of___wmul 13C5             i1_USART_WriteChar 11F7  
          ?i1_USART_WriteChar 0070                __end_of_trapmf 0D14      __size_of_USART_WriteChar 000D  
           __size_of_PWM_Init 0024           start_initialization 0015             __size_ofi1___wmul 0023  
                 __end_of_ISR 1000           ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070  
            ??_PWM_DutyCycle1 00CC              ??_PWM_DutyCycle2 00CC         __end_of_LCD_WriteData 1280  
           _USART_ReceiveChar 129B                      ??___ftge 0076            ?_USART_ReceiveChar 0070  
   __end_ofi1_USART_WriteChar 11FF                      ??___wmul 00CE                   __pdataBANK0 006E  
                 __pdataBANK1 00EC   __end_ofi1_USART_WriteString 1359                      ??_trapmf 007E  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00CA  
                 ??_LCD_Clear 00CC           __end_of__stringdata 08DB                  _isdigit$1449 00CA  
                 sprintf@_val 00E0                   sprintf@flag 00E4                   sprintf@prec 00DF  
   __end_of_USART_ReceiveChar 12B6         __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CC  
         TIMER0_Set@contagens 00CA                  Fuzzy@aumenta 005A                      ?___aldiv 00CA  
                    ?___ftadd 0078                      ?___ftdiv 0027                      ?___ftneg 0070  
                    ?___ftmul 0037                      ?___fttol 0070                      ?___lwdiv 00CA  
                    ?___lwmod 00D2                     __pstrings 0800                     _ativa_fan 00A0  
               ??_TIMER0_Init 00CA            USART_Init@BaudRate 00D9                      ?_max_val 0020  
                    ?_isdigit 0070                      _ADC_Init 122C                     _fop_rule1 00A6  
                   _fop_rule2 00A9                     _fop_rule3 00AC                __size_of_Fuzzy 0589  
            ___lwdiv@quotient 00CF                   ??i1___lwdiv 0074                      ?_sprintf 00D8  
              __size_of_trimf 011E             ??_USART_WriteChar 00CA                  i1_TIMER0_Set 11E9  
             ___aldiv@divisor 00CA             interrupt_function 0004               ___aldiv@counter 00D3  
                    _LCD_Init 0793                ___wmul@product 00CE                     clear_ram0 1207  
                    _PIE1bits 008C                      _PIE2bits 008D                      _PIR1bits 000C  
                    _PIR2bits 000D                     _temp_lida 00C6      __end_ofi1_PWM_DutyCycle2 129B  
                   _tempo_rb6 00C8    __size_ofi1_USART_WriteChar 0008                   _display_rpm 019D  
                 _display_pwm 0193                    _ADCON0bits 001F                   __stringbase 080F  
                  _ADCON1bits 009F                   __stringdata 081A                      _PWM_Init 137C  
           ___wmul@multiplier 00CA                      i1___wmul 1359           __end_of_TIMER0_Init 08E7  
  __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C                      Fuzzy@tip 0049  
            __size_of___aldiv 008F              __size_of___ftadd 0107              __size_of___ftdiv 00B8  
            __size_of___ftneg 0008              __size_of___ftmul 00D3              __size_of___fttol 008C  
            __size_of___lwdiv 0040              __size_of___lwmod 0036                      ___ftpack 15AA  
          __end_of__stringtab 0810                      ___lwtoft 123E              __size_of_max_val 001E  
            __size_of_isdigit 0010               ___lwdiv@divisor 00CA               ___lwdiv@counter 00D1  
           _USART_WriteString 141F                      __ptext10 11FF                      __ptext11 08DC  
                    __ptext20 1252                      __ptext12 137C                      __ptext21 122C  
                    __ptext13 1315                      __ptext30 1280                      __ptext22 0E65  
                    __ptext14 12F4                      __ptext31 0AA6                      __ptext23 1359  
                    __ptext15 13EE                      __ptext40 172D                      __ptext32 0BC4  
                    __ptext24 1486                      __ptext16 1269                      __ptext41 15AA  
                    __ptext33 11EF                      __ptext25 11E9                      __ptext17 0793  
                    __ptext34 08E7                      __ptext26 129B                      __ptext18 12D4  
                    __ptext35 099F                      __ptext27 1336                      __ptext19 13C5  
                    __ptext36 12B6                      __ptext28 11F7                      __ptext37 154D  
                    __ptext29 0053                      __ptext38 123E                      __ptext39 1612  
          ?_USART_WriteString 00CB              __size_of_sprintf 01B7            i1___lwdiv@dividend 0072  
               __size_of_main 0151           USART_WriteChar@byte 00CA           ??_USART_WriteString 00CD  
      i1USART_WriteString@str 0071                      _setpoint 00EC                    _LCD_Cursor 12D4  
    __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075                   _TIMER0_Init 08DC  
                  _INTCONbits 000B     __end_of_USART_WriteString 1450                      max_val@a 0020  
                    max_val@b 0023                      isdigit@c 00CB                      intlevel1 0000  
                   sprintf@ap 00DE                     sprintf@sp 00E7              ___lwmod@dividend 00D4  
                   stringcode 080A          USART_WriteString@str 00CB                    _TIMER0_Set 11FF  
                    trapmf@ua 0046               _USART_WriteChar 120F                      sprintf@c 00E8  
                    sprintf@f 00D8               ___lwmod@divisor 00D2               ___lwmod@counter 00D7  
                    stringdir 080A                      stringtab 0800                  ___aldiv@sign 00D4  
      __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091  
       i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014                    _USART_Init 1504  
