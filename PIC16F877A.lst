

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 14:22:41 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  07FE                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  07FE  3407               	retlw	7
   607  07FF  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  108A                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  108A  3400               	retlw	0
   614  108B  34A0               	retlw	160
   615  108C  3441               	retlw	65
   616                           
   617                           	psect	strings
   618  0800                     __pstrings:	
   619  0800                     stringtab:	
   620  0800                     __stringtab:	
   621                           
   622                           ;	String table - string pointers are 1 byte each
   623  0800  1BFF               	btfsc	btemp+1,7
   624  0801  280A               	ljmp	stringcode
   625  0802  1383               	bcf	3,7
   626  0803  187F               	btfsc	btemp+1,0
   627  0804  1783               	bsf	3,7
   628  0805  0800               	movf	0,w
   629  0806  0A84               	incf	4,f
   630  0807  1903               	skipnz
   631  0808  0AFF               	incf	btemp+1,f
   632  0809  0008               	return
   633  080A                     stringcode:	
   634  080A                     stringdir:	
   635  080A  3008               	movlw	high stringdir
   636  080B  008A               	movwf	10
   637  080C  0804               	movf	4,w
   638  080D  0A84               	incf	4,f
   639  080E  0782               	addwf	2,f
   640  080F                     __stringbase:	
   641  080F  3400               	retlw	0
   642  0810                     __end_of__stringtab:	
   643  0810                     _dpowers:	
   644  0810  3401               	retlw	1
   645  0811  3400               	retlw	0
   646  0812  340A               	retlw	10
   647  0813  3400               	retlw	0
   648  0814  3464               	retlw	100
   649  0815  3400               	retlw	0
   650  0816  34E8               	retlw	232
   651  0817  3403               	retlw	3
   652  0818  3410               	retlw	16
   653  0819  3427               	retlw	39
   654  081A                     __end_of_dpowers:	
   655  000E                     _TMR1	set	14
   656  001F                     _ADCON0bits	set	31
   657  001E                     _ADRESH	set	30
   658  0017                     _CCP1CON	set	23
   659  0017                     _CCP1CONbits	set	23
   660  001D                     _CCP2CON	set	29
   661  001D                     _CCP2CONbits	set	29
   662  0015                     _CCPR1L	set	21
   663  001B                     _CCPR2L	set	27
   664  000B                     _INTCONbits	set	11
   665  000C                     _PIR1bits	set	12
   666  000D                     _PIR2bits	set	13
   667  0005                     _PORTA	set	5
   668  0006                     _PORTB	set	6
   669  0006                     _PORTBbits	set	6
   670  0007                     _PORTC	set	7
   671  0008                     _PORTD	set	8
   672  0009                     _PORTE	set	9
   673  0009                     _PORTEbits	set	9
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  0013                     _SSPBUF	set	19
   677  0014                     _SSPCONbits	set	20
   678  0010                     _T1CON	set	16
   679  0010                     _T1CONbits	set	16
   680  0012                     _T2CONbits	set	18
   681  0001                     _TMR0	set	1
   682  000F                     _TMR1H	set	15
   683  000E                     _TMR1L	set	14
   684  0019                     _TXREG	set	25
   685  00C1                     _OERR	set	193
   686  009F                     _ADCON1bits	set	159
   687  009E                     _ADRESL	set	158
   688  0081                     _OPTION_REGbits	set	129
   689  008C                     _PIE1bits	set	140
   690  008D                     _PIE2bits	set	141
   691  0092                     _PR2	set	146
   692  0099                     _SPBRG	set	153
   693  0093                     _SSPADD	set	147
   694  0091                     _SSPCON2	set	145
   695  0091                     _SSPCON2bits	set	145
   696  0094                     _SSPSTATbits	set	148
   697  0085                     _TRISA	set	133
   698  0086                     _TRISB	set	134
   699  0087                     _TRISC	set	135
   700  0088                     _TRISD	set	136
   701  0089                     _TRISE	set	137
   702  0098                     _TXSTAbits	set	152
   703  010D                     _EEADR	set	269
   704  010C                     _EEDATA	set	268
   705  018C                     _EECON1bits	set	396
   706  018D                     _EECON2	set	397
   707  081A                     __stringdata:	
   708  081A                     STR_19:	
   709  081A  340A               	retlw	10
   710  081B  340D               	retlw	13
   711  081C  3420               	retlw	32	;' '
   712  081D  342D               	retlw	45	;'-'
   713  081E  342D               	retlw	45	;'-'
   714  081F  342D               	retlw	45	;'-'
   715  0820  342D               	retlw	45	;'-'
   716  0821  342D               	retlw	45	;'-'
   717  0822  342D               	retlw	45	;'-'
   718  0823  342D               	retlw	45	;'-'
   719  0824  3420               	retlw	32	;' '
   720  0825  3445               	retlw	69	;'E'
   721  0826  3453               	retlw	83	;'S'
   722  0827  3454               	retlw	84	;'T'
   723  0828  344F               	retlw	79	;'O'
   724  0829  3455               	retlw	85	;'U'
   725  082A  3452               	retlw	82	;'R'
   726  082B  344F               	retlw	79	;'O'
   727  082C  3420               	retlw	32	;' '
   728  082D  3444               	retlw	68	;'D'
   729  082E  3445               	retlw	69	;'E'
   730  082F  3420               	retlw	32	;' '
   731  0830  3450               	retlw	80	;'P'
   732  0831  3449               	retlw	73	;'I'
   733  0832  344C               	retlw	76	;'L'
   734  0833  3448               	retlw	72	;'H'
   735  0834  3441               	retlw	65	;'A'
   736  0835  3420               	retlw	32	;' '
   737  0836  342D               	retlw	45	;'-'
   738  0837  342D               	retlw	45	;'-'
   739  0838  342D               	retlw	45	;'-'
   740  0839  342D               	retlw	45	;'-'
   741  083A  342D               	retlw	45	;'-'
   742  083B  342D               	retlw	45	;'-'
   743  083C  342D               	retlw	45	;'-'
   744  083D  3420               	retlw	32	;' '
   745  083E  340A               	retlw	10
   746  083F  340D               	retlw	13
   747  0840  3420               	retlw	32	;' '
   748  0841  3400               	retlw	0
   749  0842                     STR_11:	
   750  0842  3449               	retlw	73	;'I'
   751  0843  346E               	retlw	110	;'n'
   752  0844  3469               	retlw	105	;'i'
   753  0845  3463               	retlw	99	;'c'
   754  0846  3469               	retlw	105	;'i'
   755  0847  3461               	retlw	97	;'a'
   756  0848  346C               	retlw	108	;'l'
   757  0849  3469               	retlw	105	;'i'
   758  084A  347A               	retlw	122	;'z'
   759  084B  3461               	retlw	97	;'a'
   760  084C  346E               	retlw	110	;'n'
   761  084D  3464               	retlw	100	;'d'
   762  084E  346F               	retlw	111	;'o'
   763  084F  3420               	retlw	32	;' '
   764  0850  346F               	retlw	111	;'o'
   765  0851  3420               	retlw	32	;' '
   766  0852  3450               	retlw	80	;'P'
   767  0853  3449               	retlw	73	;'I'
   768  0854  3443               	retlw	67	;'C'
   769  0855  3431               	retlw	49	;'1'
   770  0856  3436               	retlw	54	;'6'
   771  0857  3446               	retlw	70	;'F'
   772  0858  3438               	retlw	56	;'8'
   773  0859  3437               	retlw	55	;'7'
   774  085A  3437               	retlw	55	;'7'
   775  085B  3441               	retlw	65	;'A'
   776  085C  340A               	retlw	10
   777  085D  340D               	retlw	13
   778  085E  3400               	retlw	0
   779  085F                     STR_12:	
   780  085F  3455               	retlw	85	;'U'
   781  0860  3453               	retlw	83	;'S'
   782  0861  3441               	retlw	65	;'A'
   783  0862  3452               	retlw	82	;'R'
   784  0863  3454               	retlw	84	;'T'
   785  0864  343A               	retlw	58	;':'
   786  0865  3420               	retlw	32	;' '
   787  0866  3431               	retlw	49	;'1'
   788  0867  3431               	retlw	49	;'1'
   789  0868  3435               	retlw	53	;'5'
   790  0869  342E               	retlw	46	;'.'
   791  086A  3432               	retlw	50	;'2'
   792  086B  3430               	retlw	48	;'0'
   793  086C  3430               	retlw	48	;'0'
   794  086D  3462               	retlw	98	;'b'
   795  086E  3470               	retlw	112	;'p'
   796  086F  3473               	retlw	115	;'s'
   797  0870  340A               	retlw	10
   798  0871  340D               	retlw	13
   799  0872  3400               	retlw	0
   800  0873                     STR_13:	
   801  0873  3449               	retlw	73	;'I'
   802  0874  346E               	retlw	110	;'n'
   803  0875  3469               	retlw	105	;'i'
   804  0876  3463               	retlw	99	;'c'
   805  0877  3469               	retlw	105	;'i'
   806  0878  3461               	retlw	97	;'a'
   807  0879  346C               	retlw	108	;'l'
   808  087A  3469               	retlw	105	;'i'
   809  087B  347A               	retlw	122	;'z'
   810  087C  3461               	retlw	97	;'a'
   811  087D  346E               	retlw	110	;'n'
   812  087E  3464               	retlw	100	;'d'
   813  087F  346F               	retlw	111	;'o'
   814  0880  342E               	retlw	46	;'.'
   815  0881  342E               	retlw	46	;'.'
   816  0882  342E               	retlw	46	;'.'
   817  0883  3400               	retlw	0
   818  0884                     STR_10:	
   819  0884  340A               	retlw	10
   820  0885  340D               	retlw	13
   821  0886  3470               	retlw	112	;'p'
   822  0887  3477               	retlw	119	;'w'
   823  0888  346D               	retlw	109	;'m'
   824  0889  3420               	retlw	32	;' '
   825  088A  343D               	retlw	61	;'='
   826  088B  3420               	retlw	32	;' '
   827  088C  3431               	retlw	49	;'1'
   828  088D  3430               	retlw	48	;'0'
   829  088E  3432               	retlw	50	;'2'
   830  088F  3433               	retlw	51	;'3'
   831  0890  340A               	retlw	10
   832  0891  340D               	retlw	13
   833  0892  3400               	retlw	0
   834  0893                     STR_8:	
   835  0893  340A               	retlw	10
   836  0894  340D               	retlw	13
   837  0895  3470               	retlw	112	;'p'
   838  0896  3477               	retlw	119	;'w'
   839  0897  346D               	retlw	109	;'m'
   840  0898  3420               	retlw	32	;' '
   841  0899  343D               	retlw	61	;'='
   842  089A  3420               	retlw	32	;' '
   843  089B  3438               	retlw	56	;'8'
   844  089C  3439               	retlw	57	;'9'
   845  089D  3436               	retlw	54	;'6'
   846  089E  340A               	retlw	10
   847  089F  340D               	retlw	13
   848  08A0  3400               	retlw	0
   849  08A1                     STR_7:	
   850  08A1  340A               	retlw	10
   851  08A2  340D               	retlw	13
   852  08A3  3470               	retlw	112	;'p'
   853  08A4  3477               	retlw	119	;'w'
   854  08A5  346D               	retlw	109	;'m'
   855  08A6  3420               	retlw	32	;' '
   856  08A7  343D               	retlw	61	;'='
   857  08A8  3420               	retlw	32	;' '
   858  08A9  3437               	retlw	55	;'7'
   859  08AA  3436               	retlw	54	;'6'
   860  08AB  3438               	retlw	56	;'8'
   861  08AC  340A               	retlw	10
   862  08AD  340D               	retlw	13
   863  08AE  3400               	retlw	0
   864  08AF                     STR_1:	
   865  08AF  340A               	retlw	10
   866  08B0  340D               	retlw	13
   867  08B1  3464               	retlw	100	;'d'
   868  08B2  3465               	retlw	101	;'e'
   869  08B3  3473               	retlw	115	;'s'
   870  08B4  346C               	retlw	108	;'l'
   871  08B5  3469               	retlw	105	;'i'
   872  08B6  3467               	retlw	103	;'g'
   873  08B7  3461               	retlw	97	;'a'
   874  08B8  3464               	retlw	100	;'d'
   875  08B9  346F               	retlw	111	;'o'
   876  08BA  340A               	retlw	10
   877  08BB  340D               	retlw	13
   878  08BC  3400               	retlw	0
   879  08BD                     STR_2:	
   880  08BD  340A               	retlw	10
   881  08BE  340D               	retlw	13
   882  08BF  3470               	retlw	112	;'p'
   883  08C0  3477               	retlw	119	;'w'
   884  08C1  346D               	retlw	109	;'m'
   885  08C2  3420               	retlw	32	;' '
   886  08C3  343D               	retlw	61	;'='
   887  08C4  3420               	retlw	32	;' '
   888  08C5  340A               	retlw	10
   889  08C6  340D               	retlw	13
   890  08C7  3400               	retlw	0
   891  08C8                     STR_18:	
   892  08C8  3444               	retlw	68	;'D'
   893  08C9  3465               	retlw	101	;'e'
   894  08CA  346C               	retlw	108	;'l'
   895  08CB  3474               	retlw	116	;'t'
   896  08CC  3461               	retlw	97	;'a'
   897  08CD  343A               	retlw	58	;':'
   898  08CE  3420               	retlw	32	;' '
   899  08CF  3400               	retlw	0
   900  08D0                     STR_17:	
   901  08D0  3452               	retlw	82	;'R'
   902  08D1  3450               	retlw	80	;'P'
   903  08D2  344D               	retlw	77	;'M'
   904  08D3  343A               	retlw	58	;':'
   905  08D4  3420               	retlw	32	;' '
   906  08D5  3400               	retlw	0
   907  08D6                     STR_14:	
   908  08D6  3425               	retlw	37	;'%'
   909  08D7  3430               	retlw	48	;'0'
   910  08D8  3434               	retlw	52	;'4'
   911  08D9  3464               	retlw	100	;'d'
   912  08DA  3400               	retlw	0
   913  08DB                     __end_of__stringdata:	
   914                           
   915                           ; #config settings
   916  0000                     
   917                           	psect	cinit
   918  0019                     start_initialization:	
   919  0019                     __initialization:	
   920                           
   921                           ; Clear objects allocated to BANK1
   922  0019  1383               	bcf	3,7	;select IRP bank0
   923  001A  30A0               	movlw	low __pbssBANK1
   924  001B  0084               	movwf	4
   925  001C  30C7               	movlw	low (__pbssBANK1+39)
   926  001D  160A  118A  20A5  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to BANK3
   929  0022  1783               	bsf	3,7	;select IRP bank2
   930  0023  3090               	movlw	low __pbssBANK3
   931  0024  0084               	movwf	4
   932  0025  30B7               	movlw	low (__pbssBANK3+39)
   933  0026  160A  118A  20A5  120A  118A  	fcall	clear_ram0
   934                           
   935                           ; Initialize objects allocated to BANK3
   936  002B  1683               	bsf	3,5	;RP0=1, select bank3
   937  002C  1703               	bsf	3,6	;RP1=1, select bank3
   938  002D  160A  118A  208A  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   939  0032  00B7               	movwf	__pdataBANK3& (0+127)
   940  0033  160A  118A  208B  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   941  0038  00B8               	movwf	(__pdataBANK3+1)& (0+127)
   942  0039  160A  118A  208C  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
   943  003E  00B9               	movwf	(__pdataBANK3+2)& (0+127)
   944                           
   945                           ; Initialize objects allocated to BANK1
   946  003F  1683               	bsf	3,5	;RP0=1, select bank1
   947  0040  1303               	bcf	3,6	;RP1=0, select bank1
   948  0041  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   949  0046  00EA               	movwf	__pdataBANK1& (0+127)
   950  0047  120A  118A  27FF   	fcall	__pidataBANK1+1	;fetch initializer
   951  004A  00EB               	movwf	(__pdataBANK1+1)& (0+127)
   952  004B                     end_of_initialization:	
   953                           ;End of C runtime variable initialization code
   954                           
   955  004B                     __end_of__initialization:	
   956  004B  0183               	clrf	3
   957  004C  120A  158A  2A05   	ljmp	_main	;jump to C main() function
   958                           
   959                           	psect	bssBANK1
   960  00A0                     __pbssBANK1:	
   961  00A0                     _fitemp:	
   962  00A0                     	ds	3
   963  00A3                     _fop_rule1:	
   964  00A3                     	ds	3
   965  00A6                     _fop_rule2:	
   966  00A6                     	ds	3
   967  00A9                     _fop_rule3:	
   968  00A9                     	ds	3
   969  00AC                     _sum:	
   970  00AC                     	ds	3
   971  00AF                     _temp:	
   972  00AF                     	ds	3
   973  00B2                     _total_area:	
   974  00B2                     	ds	3
   975  00B5                     _x:	
   976  00B5                     	ds	3
   977  00B8                     _y:	
   978  00B8                     	ds	3
   979  00BB                     _contagens_tm0:	
   980  00BB                     	ds	2
   981  00BD                     _deltaV:	
   982  00BD                     	ds	2
   983  00BF                     _pulsos:	
   984  00BF                     	ds	2
   985  00C1                     _pwm:	
   986  00C1                     	ds	2
   987  00C3                     _rpm:	
   988  00C3                     	ds	2
   989  00C5                     _setpointUI:	
   990  00C5                     	ds	2
   991                           
   992                           	psect	dataBANK1
   993  00EA                     __pdataBANK1:	
   994  00EA                     _pas_cooler:	
   995  00EA                     	ds	2
   996                           
   997                           	psect	bssBANK3
   998  0190                     __pbssBANK3:	
   999  0190                     _ativa_fan:	
  1000  0190                     	ds	3
  1001  0193                     _derro:	
  1002  0193                     	ds	3
  1003  0196                     _tf:	
  1004  0196                     	ds	3
  1005  0199                     _ADCResult:	
  1006  0199                     	ds	2
  1007  019B                     _contador_rb6:	
  1008  019B                     	ds	2
  1009  019D                     _status:	
  1010  019D                     	ds	2
  1011  019F                     _temp_lida:	
  1012  019F                     	ds	2
  1013  01A1                     _tempo_rb6:	
  1014  01A1                     	ds	2
  1015  01A3                     _display_pwm:	
  1016  01A3                     	ds	10
  1017  01AD                     _display_rpm:	
  1018  01AD                     	ds	10
  1019                           
  1020                           	psect	dataBANK3
  1021  01B7                     __pdataBANK3:	
  1022  01B7                     _setpoint:	
  1023  01B7                     	ds	3
  1024                           
  1025                           	psect	clrtext
  1026  10A5                     clear_ram0:	
  1027                           ;	Called with FSR containing the base address, and
  1028                           ;	W with the last address+1
  1029                           
  1030  10A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1031  10A6                     clrloop0:	
  1032  10A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1033  10A7  0A84               	incf	4,f	;increment pointer
  1034  10A8  0604               	xorwf	4,w	;XOR with final address
  1035  10A9  1903               	btfsc	3,2	;have we reached the end yet?
  1036  10AA  3400               	retlw	0	;all done for this memory range, return
  1037  10AB  0604               	xorwf	4,w	;XOR again to restore value
  1038  10AC  28A6               	goto	clrloop0	;do the next byte
  1039                           
  1040                           	psect	cstackBANK3
  1041  01BA                     __pcstackBANK3:	
  1042  01BA                     ??_main:	
  1043                           
  1044                           ; 0 bytes @ 0x0
  1045  01BA                     	ds	3
  1046                           
  1047                           	psect	cstackBANK1
  1048  00C7                     __pcstackBANK1:	
  1049  00C7                     ??_ISR:	
  1050                           
  1051                           ; 0 bytes @ 0x0
  1052  00C7                     	ds	4
  1053  00CB                     ?_PWM_DutyCycle2:	
  1054  00CB                     ??_TIMER0_Set:	
  1055                           ; 0 bytes @ 0x4
  1056                           
  1057  00CB                     ??_TIMER0_Init:	
  1058                           ; 0 bytes @ 0x4
  1059                           
  1060  00CB                     ??_ADC_Init:	
  1061                           ; 0 bytes @ 0x4
  1062                           
  1063  00CB                     ??_PWM_Init:	
  1064                           ; 0 bytes @ 0x4
  1065                           
  1066  00CB                     ?_LCD_Cursor:	
  1067                           ; 0 bytes @ 0x4
  1068                           
  1069  00CB                     ?_PWM_DutyCycle1:	
  1070                           ; 0 bytes @ 0x4
  1071                           
  1072  00CB                     ??_isdigit:	
  1073                           ; 0 bytes @ 0x4
  1074                           
  1075  00CB                     ??_USART_WriteChar:	
  1076                           ; 0 bytes @ 0x4
  1077                           
  1078  00CB                     ??_LCD_WriteCmd:	
  1079                           ; 0 bytes @ 0x4
  1080                           
  1081  00CB                     ??_LCD_WriteData:	
  1082                           ; 0 bytes @ 0x4
  1083                           
  1084  00CB                     ?___wmul:	
  1085                           ; 0 bytes @ 0x4
  1086                           
  1087  00CB                     ?___lwdiv:	
  1088                           ; 2 bytes @ 0x4
  1089                           
  1090  00CB                     ?___aldiv:	
  1091                           ; 2 bytes @ 0x4
  1092                           
  1093  00CB                     USART_WriteChar@byte:	
  1094                           ; 4 bytes @ 0x4
  1095                           
  1096  00CB                     TIMER0_Set@contagens:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  00CB                     LCD_Cursor@Col:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  00CB                     _isdigit$1450:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  00CB                     PWM_DutyCycle1@valor:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  00CB                     PWM_DutyCycle2@valor:	
  1109                           ; 2 bytes @ 0x4
  1110                           
  1111  00CB                     ___wmul@multiplier:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114  00CB                     ___lwdiv@divisor:	
  1115                           ; 2 bytes @ 0x4
  1116                           
  1117  00CB                     ___aldiv@divisor:	
  1118                           ; 2 bytes @ 0x4
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0x4
  1122  00CB                     	ds	1
  1123  00CC                     ?_USART_WriteString:	
  1124  00CC                     ??_LCD_Cursor:	
  1125                           ; 0 bytes @ 0x5
  1126                           
  1127  00CC                     LCD_WriteCmd@Byte:	
  1128                           ; 0 bytes @ 0x5
  1129                           
  1130  00CC                     LCD_WriteData@Byte:	
  1131                           ; 1 bytes @ 0x5
  1132                           
  1133  00CC                     isdigit@c:	
  1134                           ; 1 bytes @ 0x5
  1135                           
  1136  00CC                     USART_WriteString@str:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139                           
  1140                           ; 2 bytes @ 0x5
  1141  00CC                     	ds	1
  1142  00CD                     ??_PWM_DutyCycle2:	
  1143  00CD                     ??_LCD_Init:	
  1144                           ; 0 bytes @ 0x6
  1145                           
  1146  00CD                     ?_LCD_WriteString:	
  1147                           ; 0 bytes @ 0x6
  1148                           
  1149  00CD                     ??_PWM_DutyCycle1:	
  1150                           ; 0 bytes @ 0x6
  1151                           
  1152  00CD                     ??_LCD_Clear:	
  1153                           ; 0 bytes @ 0x6
  1154                           
  1155  00CD                     LCD_Cursor@Row:	
  1156                           ; 0 bytes @ 0x6
  1157                           
  1158  00CD                     LCD_WriteString@Str:	
  1159                           ; 1 bytes @ 0x6
  1160                           
  1161  00CD                     ___wmul@multiplicand:	
  1162                           ; 2 bytes @ 0x6
  1163                           
  1164  00CD                     ___lwdiv@dividend:	
  1165                           ; 2 bytes @ 0x6
  1166                           
  1167                           
  1168                           ; 2 bytes @ 0x6
  1169  00CD                     	ds	1
  1170  00CE                     ??_USART_WriteString:	
  1171                           
  1172                           ; 0 bytes @ 0x7
  1173  00CE                     	ds	1
  1174  00CF                     ??_LCD_WriteString:	
  1175  00CF                     ??___wmul:	
  1176                           ; 0 bytes @ 0x8
  1177                           
  1178  00CF                     ??___lwdiv:	
  1179                           ; 0 bytes @ 0x8
  1180                           
  1181  00CF                     ___wmul@product:	
  1182                           ; 0 bytes @ 0x8
  1183                           
  1184  00CF                     ___aldiv@dividend:	
  1185                           ; 2 bytes @ 0x8
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x8
  1189  00CF                     	ds	1
  1190  00D0                     ___lwdiv@quotient:	
  1191                           
  1192                           ; 2 bytes @ 0x9
  1193  00D0                     	ds	2
  1194  00D2                     ___lwdiv@counter:	
  1195                           
  1196                           ; 1 bytes @ 0xB
  1197  00D2                     	ds	1
  1198  00D3                     ??___aldiv:	
  1199  00D3                     ?___lwmod:	
  1200                           ; 0 bytes @ 0xC
  1201                           
  1202  00D3                     ___lwmod@divisor:	
  1203                           ; 2 bytes @ 0xC
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0xC
  1207  00D3                     	ds	1
  1208  00D4                     ___aldiv@counter:	
  1209                           
  1210                           ; 1 bytes @ 0xD
  1211  00D4                     	ds	1
  1212  00D5                     ___aldiv@sign:	
  1213  00D5                     ___lwmod@dividend:	
  1214                           ; 1 bytes @ 0xE
  1215                           
  1216                           
  1217                           ; 2 bytes @ 0xE
  1218  00D5                     	ds	1
  1219  00D6                     ___aldiv@quotient:	
  1220                           
  1221                           ; 4 bytes @ 0xF
  1222  00D6                     	ds	1
  1223  00D7                     ??___lwmod:	
  1224                           
  1225                           ; 0 bytes @ 0x10
  1226  00D7                     	ds	1
  1227  00D8                     ___lwmod@counter:	
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230  00D8                     	ds	1
  1231  00D9                     ?_sprintf:	
  1232  00D9                     sprintf@f:	
  1233                           ; 2 bytes @ 0x12
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x12
  1237  00D9                     	ds	1
  1238  00DA                     ?_USART_Init:	
  1239  00DA                     USART_Init@BaudRate:	
  1240                           ; 0 bytes @ 0x13
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x13
  1244  00DA                     	ds	2
  1245  00DC                     ??_sprintf:	
  1246                           
  1247                           ; 0 bytes @ 0x15
  1248  00DC                     	ds	2
  1249  00DE                     ??_USART_Init:	
  1250                           
  1251                           ; 0 bytes @ 0x17
  1252  00DE                     	ds	1
  1253  00DF                     sprintf@ap:	
  1254                           
  1255                           ; 1 bytes @ 0x18
  1256  00DF                     	ds	1
  1257  00E0                     sprintf@prec:	
  1258                           
  1259                           ; 1 bytes @ 0x19
  1260  00E0                     	ds	1
  1261  00E1                     sprintf@_val:	
  1262                           
  1263                           ; 4 bytes @ 0x1A
  1264  00E1                     	ds	4
  1265  00E5                     sprintf@flag:	
  1266                           
  1267                           ; 1 bytes @ 0x1E
  1268  00E5                     	ds	1
  1269  00E6                     sprintf@width:	
  1270                           
  1271                           ; 2 bytes @ 0x1F
  1272  00E6                     	ds	2
  1273  00E8                     sprintf@sp:	
  1274                           
  1275                           ; 1 bytes @ 0x21
  1276  00E8                     	ds	1
  1277  00E9                     sprintf@c:	
  1278                           
  1279                           ; 1 bytes @ 0x22
  1280  00E9                     	ds	1
  1281                           
  1282                           	psect	cstackCOMMON
  1283  0070                     __pcstackCOMMON:	
  1284  0070                     ?_TIMER0_Set:	
  1285  0070                     ?_TIMER0_Init:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_ADC_Init:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_PWM_Init:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_LCD_Init:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_LCD_Clear:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_isdigit:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_Fuzzy:	
  1304                           ; 1 bit 
  1305                           
  1306  0070                     ?_ISR:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_main:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_USART_WriteChar:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ?_LCD_WriteCmd:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_LCD_WriteData:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?___ftge:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?i1_USART_WriteChar:	
  1325                           ; 1 bit 
  1326                           
  1327  0070                     ??i1_USART_WriteChar:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?i1_TIMER0_Set:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ??i1_TIMER0_Set:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?i1_PWM_DutyCycle2:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_USART_ReceiveChar:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?i1___lwdiv:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?___ftpack:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348  0070                     ?___ftneg:	
  1349                           ; 3 bytes @ 0x0
  1350                           
  1351  0070                     ?___fttol:	
  1352                           ; 3 bytes @ 0x0
  1353                           
  1354  0070                     i1USART_WriteChar@byte:	
  1355                           ; 4 bytes @ 0x0
  1356                           
  1357  0070                     i1TIMER0_Set@contagens:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     i1PWM_DutyCycle2@valor:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     i1___lwdiv@divisor:	
  1364                           ; 2 bytes @ 0x0
  1365                           
  1366  0070                     ___ftpack@arg:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369  0070                     ___ftge@ff1:	
  1370                           ; 3 bytes @ 0x0
  1371                           
  1372  0070                     ___ftneg@f1:	
  1373                           ; 3 bytes @ 0x0
  1374                           
  1375  0070                     ___fttol@f1:	
  1376                           ; 3 bytes @ 0x0
  1377                           
  1378                           
  1379                           ; 3 bytes @ 0x0
  1380  0070                     	ds	1
  1381  0071                     ?i1_USART_WriteString:	
  1382  0071                     i1USART_WriteString@str:	
  1383                           ; 0 bytes @ 0x1
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x1
  1387  0071                     	ds	1
  1388  0072                     ??i1_PWM_DutyCycle2:	
  1389  0072                     i1___lwdiv@dividend:	
  1390                           ; 0 bytes @ 0x2
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x2
  1394  0072                     	ds	1
  1395  0073                     ??_USART_ReceiveChar:	
  1396  0073                     ??___ftneg:	
  1397                           ; 0 bytes @ 0x3
  1398                           
  1399  0073                     ??i1_USART_WriteString:	
  1400                           ; 0 bytes @ 0x3
  1401                           
  1402  0073                     ___ftpack@exp:	
  1403                           ; 0 bytes @ 0x3
  1404                           
  1405  0073                     ___ftge@ff2:	
  1406                           ; 1 bytes @ 0x3
  1407                           
  1408                           
  1409                           ; 3 bytes @ 0x3
  1410  0073                     	ds	1
  1411  0074                     ??___fttol:	
  1412  0074                     ??i1___lwdiv:	
  1413                           ; 0 bytes @ 0x4
  1414                           
  1415  0074                     USART_ReceiveChar@byte:	
  1416                           ; 0 bytes @ 0x4
  1417                           
  1418  0074                     ___ftpack@sign:	
  1419                           ; 1 bytes @ 0x4
  1420                           
  1421                           
  1422                           ; 1 bytes @ 0x4
  1423  0074                     	ds	1
  1424  0075                     ??___ftpack:	
  1425  0075                     i1___lwdiv@quotient:	
  1426                           ; 0 bytes @ 0x5
  1427                           
  1428                           
  1429                           ; 2 bytes @ 0x5
  1430  0075                     	ds	1
  1431  0076                     ??___ftge:	
  1432                           
  1433                           ; 0 bytes @ 0x6
  1434  0076                     	ds	1
  1435  0077                     i1___lwdiv@counter:	
  1436                           
  1437                           ; 1 bytes @ 0x7
  1438  0077                     	ds	1
  1439  0078                     ?i1___wmul:	
  1440  0078                     ?___ftdiv:	
  1441                           ; 2 bytes @ 0x8
  1442                           
  1443  0078                     ?___lwtoft:	
  1444                           ; 3 bytes @ 0x8
  1445                           
  1446  0078                     ___fttol@sign1:	
  1447                           ; 3 bytes @ 0x8
  1448                           
  1449  0078                     ___lwtoft@c:	
  1450                           ; 1 bytes @ 0x8
  1451                           
  1452  0078                     i1___wmul@multiplier:	
  1453                           ; 2 bytes @ 0x8
  1454                           
  1455  0078                     ___ftdiv@f2:	
  1456                           ; 2 bytes @ 0x8
  1457                           
  1458                           
  1459                           ; 3 bytes @ 0x8
  1460  0078                     	ds	1
  1461  0079                     ___fttol@lval:	
  1462                           
  1463                           ; 4 bytes @ 0x9
  1464  0079                     	ds	1
  1465  007A                     i1___wmul@multiplicand:	
  1466                           
  1467                           ; 2 bytes @ 0xA
  1468  007A                     	ds	1
  1469  007B                     ??___lwtoft:	
  1470  007B                     ___ftdiv@f1:	
  1471                           ; 0 bytes @ 0xB
  1472                           
  1473                           
  1474                           ; 3 bytes @ 0xB
  1475  007B                     	ds	1
  1476  007C                     ??_max_val:	
  1477  007C                     ??i1___wmul:	
  1478                           ; 0 bytes @ 0xC
  1479                           
  1480  007C                     i1___wmul@product:	
  1481                           ; 0 bytes @ 0xC
  1482                           
  1483                           
  1484                           ; 2 bytes @ 0xC
  1485  007C                     	ds	1
  1486  007D                     ___fttol@exp1:	
  1487                           
  1488                           ; 1 bytes @ 0xD
  1489  007D                     	ds	1
  1490  007E                     ??_trimf:	
  1491  007E                     ??_trapmf:	
  1492                           ; 0 bytes @ 0xE
  1493                           
  1494  007E                     ??_Fuzzy:	
  1495                           ; 0 bytes @ 0xE
  1496                           
  1497                           
  1498                           	psect	cstackBANK0
  1499  0020                     __pcstackBANK0:	
  1500                           ; 0 bytes @ 0xE
  1501                           
  1502  0020                     ??___ftdiv:	
  1503  0020                     ?_max_val:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0020                     max_val@a:	
  1507                           ; 3 bytes @ 0x0
  1508                           
  1509                           
  1510                           ; 3 bytes @ 0x0
  1511  0020                     	ds	3
  1512  0023                     max_val@b:	
  1513                           
  1514                           ; 3 bytes @ 0x3
  1515  0023                     	ds	1
  1516  0024                     ___ftdiv@cntr:	
  1517                           
  1518                           ; 1 bytes @ 0x4
  1519  0024                     	ds	1
  1520  0025                     ___ftdiv@f3:	
  1521                           
  1522                           ; 3 bytes @ 0x5
  1523  0025                     	ds	3
  1524  0028                     ___ftdiv@exp:	
  1525                           
  1526                           ; 1 bytes @ 0x8
  1527  0028                     	ds	1
  1528  0029                     ___ftdiv@sign:	
  1529                           
  1530                           ; 1 bytes @ 0x9
  1531  0029                     	ds	1
  1532  002A                     ?___ftmul:	
  1533  002A                     ___ftmul@f1:	
  1534                           ; 3 bytes @ 0xA
  1535                           
  1536                           
  1537                           ; 3 bytes @ 0xA
  1538  002A                     	ds	3
  1539  002D                     ___ftmul@f2:	
  1540                           
  1541                           ; 3 bytes @ 0xD
  1542  002D                     	ds	3
  1543  0030                     ??___ftmul:	
  1544                           
  1545                           ; 0 bytes @ 0x10
  1546  0030                     	ds	4
  1547  0034                     ___ftmul@exp:	
  1548                           
  1549                           ; 1 bytes @ 0x14
  1550  0034                     	ds	1
  1551  0035                     ___ftmul@f3_as_product:	
  1552                           
  1553                           ; 3 bytes @ 0x15
  1554  0035                     	ds	3
  1555  0038                     ___ftmul@cntr:	
  1556                           
  1557                           ; 1 bytes @ 0x18
  1558  0038                     	ds	1
  1559  0039                     ___ftmul@sign:	
  1560                           
  1561                           ; 1 bytes @ 0x19
  1562  0039                     	ds	1
  1563  003A                     ?___ftadd:	
  1564  003A                     ___ftadd@f1:	
  1565                           ; 3 bytes @ 0x1A
  1566                           
  1567                           
  1568                           ; 3 bytes @ 0x1A
  1569  003A                     	ds	3
  1570  003D                     ___ftadd@f2:	
  1571                           
  1572                           ; 3 bytes @ 0x1D
  1573  003D                     	ds	3
  1574  0040                     ??___ftadd:	
  1575                           
  1576                           ; 0 bytes @ 0x20
  1577  0040                     	ds	4
  1578  0044                     ___ftadd@sign:	
  1579                           
  1580                           ; 1 bytes @ 0x24
  1581  0044                     	ds	1
  1582  0045                     ___ftadd@exp2:	
  1583                           
  1584                           ; 1 bytes @ 0x25
  1585  0045                     	ds	1
  1586  0046                     ___ftadd@exp1:	
  1587                           
  1588                           ; 1 bytes @ 0x26
  1589  0046                     	ds	1
  1590  0047                     ?_trimf:	
  1591  0047                     ?_trapmf:	
  1592                           ; 3 bytes @ 0x27
  1593                           
  1594  0047                     trimf@x:	
  1595                           ; 3 bytes @ 0x27
  1596                           
  1597  0047                     trapmf@x:	
  1598                           ; 3 bytes @ 0x27
  1599                           
  1600                           
  1601                           ; 3 bytes @ 0x27
  1602  0047                     	ds	3
  1603  004A                     trimf@a:	
  1604  004A                     trapmf@a:	
  1605                           ; 3 bytes @ 0x2A
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0x2A
  1609  004A                     	ds	3
  1610  004D                     trimf@b:	
  1611  004D                     trapmf@b:	
  1612                           ; 3 bytes @ 0x2D
  1613                           
  1614                           
  1615                           ; 3 bytes @ 0x2D
  1616  004D                     	ds	3
  1617  0050                     trimf@c:	
  1618  0050                     trapmf@c:	
  1619                           ; 3 bytes @ 0x30
  1620                           
  1621                           
  1622                           ; 3 bytes @ 0x30
  1623  0050                     	ds	3
  1624  0053                     trimf@ua:	
  1625  0053                     trapmf@d:	
  1626                           ; 3 bytes @ 0x33
  1627                           
  1628                           
  1629                           ; 3 bytes @ 0x33
  1630  0053                     	ds	3
  1631  0056                     trapmf@ua:	
  1632                           
  1633                           ; 3 bytes @ 0x36
  1634  0056                     	ds	3
  1635  0059                     Fuzzy@a:	
  1636                           
  1637                           ; 2 bytes @ 0x39
  1638  0059                     	ds	2
  1639  005B                     Fuzzy@a_233:	
  1640                           
  1641                           ; 2 bytes @ 0x3B
  1642  005B                     	ds	2
  1643  005D                     Fuzzy@a_234:	
  1644                           
  1645                           ; 2 bytes @ 0x3D
  1646  005D                     	ds	2
  1647  005F                     Fuzzy@a_235:	
  1648                           
  1649                           ; 2 bytes @ 0x3F
  1650  005F                     	ds	2
  1651  0061                     Fuzzy@a_236:	
  1652                           
  1653                           ; 2 bytes @ 0x41
  1654  0061                     	ds	2
  1655  0063                     Fuzzy@tip:	
  1656                           
  1657                           ; 3 bytes @ 0x43
  1658  0063                     	ds	3
  1659  0066                     Fuzzy@mantem:	
  1660                           
  1661                           ; 3 bytes @ 0x46
  1662  0066                     	ds	3
  1663  0069                     Fuzzy@reduz:	
  1664                           
  1665                           ; 3 bytes @ 0x49
  1666  0069                     	ds	3
  1667  006C                     Fuzzy@aumenta:	
  1668                           
  1669                           ; 3 bytes @ 0x4C
  1670  006C                     	ds	3
  1671                           
  1672                           	psect	maintext
  1673  0A05                     __pmaintext:	
  1674 ;;
  1675 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1676 ;;
  1677 ;; *************** function _main *****************
  1678 ;; Defined at:
  1679 ;;		line 472 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 17F/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          0       0       0       3       0
  1696 ;;      Totals:         0       0       0       3       0
  1697 ;;Total ram usage:        3 bytes
  1698 ;; Hardware stack levels required when called:    7
  1699 ;; This function calls:
  1700 ;;		_ADC_Init
  1701 ;;		_LCD_Clear
  1702 ;;		_LCD_Cursor
  1703 ;;		_LCD_Init
  1704 ;;		_LCD_WriteString
  1705 ;;		_PWM_DutyCycle1
  1706 ;;		_PWM_DutyCycle2
  1707 ;;		_PWM_Init
  1708 ;;		_TIMER0_Init
  1709 ;;		_TIMER0_Set
  1710 ;;		_USART_Init
  1711 ;;		_USART_WriteString
  1712 ;;		_sprintf
  1713 ;; This function is called by:
  1714 ;;		Startup code after reset
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _main
  1720  0A05                     _main:	
  1721                           
  1722                           ;main.c: 474: TRISA = 0b00000001;
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1726  0A05  3001               	movlw	1
  1727  0A06  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0A07  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0A08  0085               	movwf	5	;volatile
  1730                           
  1731                           ;main.c: 475: PORTA = 0b00000001;
  1732  0A09  3001               	movlw	1
  1733  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0A0C  0085               	movwf	5	;volatile
  1736                           
  1737                           ;main.c: 476: TRISB = 0b00000000;
  1738  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0A0F  0186               	clrf	6	;volatile
  1741                           
  1742                           ;main.c: 477: PORTB = 0b00000000;
  1743  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0A12  0186               	clrf	6	;volatile
  1746                           
  1747                           ;main.c: 478: TRISC = 0b10000001;
  1748  0A13  3081               	movlw	129
  1749  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  1750  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  1751  0A16  0087               	movwf	7	;volatile
  1752                           
  1753                           ;main.c: 479: PORTC = 0b11000000;
  1754  0A17  30C0               	movlw	192
  1755  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0A1A  0087               	movwf	7	;volatile
  1758                           
  1759                           ;main.c: 480: TRISD = 0b00000000;
  1760  0A1B  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0A1C  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0A1D  0188               	clrf	8	;volatile
  1763                           
  1764                           ;main.c: 481: PORTD = 0b00000000;
  1765  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0A20  0188               	clrf	8	;volatile
  1768                           
  1769                           ;main.c: 482: TRISE = 0b00000000;
  1770  0A21  1683               	bsf	3,5	;RP0=1, select bank1
  1771  0A22  1303               	bcf	3,6	;RP1=0, select bank1
  1772  0A23  0189               	clrf	9	;volatile
  1773                           
  1774                           ;main.c: 483: PORTE = 0b00000000;
  1775  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0A26  0189               	clrf	9	;volatile
  1778                           
  1779                           ;main.c: 486: T1CON = 0x03;
  1780  0A27  3003               	movlw	3
  1781  0A28  0090               	movwf	16	;volatile
  1782                           
  1783                           ;main.c: 487: TMR1L = 0x00;
  1784  0A29  018E               	clrf	14	;volatile
  1785                           
  1786                           ;main.c: 488: TMR1H = 0x00;
  1787  0A2A  018F               	clrf	15	;volatile
  1788                           
  1789                           ;main.c: 491: USART_Init(115200);
  1790  0A2B  3000               	movlw	0
  1791  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0A2E  00DD               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1794  0A2F  3001               	movlw	1
  1795  0A30  00DC               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1796  0A31  30C2               	movlw	194
  1797  0A32  00DB               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1798  0A33  3000               	movlw	0
  1799  0A34  00DA               	movwf	USART_Init@BaudRate^(0+128)
  1800  0A35  160A  118A  23AD  120A  158A  	fcall	_USART_Init
  1801                           
  1802                           ;main.c: 492: TIMER0_Init();
  1803  0A3A  160A  118A  20AD  120A  158A  	fcall	_TIMER0_Init
  1804                           
  1805                           ;main.c: 493: ADC_Init();
  1806  0A3F  160A  118A  20D5  120A  158A  	fcall	_ADC_Init
  1807                           
  1808                           ;main.c: 494: PWM_Init();
  1809  0A44  160A  118A  2225  120A  158A  	fcall	_PWM_Init
  1810                           
  1811                           ;main.c: 495: LCD_Init();
  1812  0A49  160A  118A  24BB  120A  158A  	fcall	_LCD_Init
  1813                           
  1814                           ;main.c: 498: INTCONbits.PEIE = 1;
  1815  0A4E  170B               	bsf	11,6	;volatile
  1816                           
  1817                           ;main.c: 499: INTCONbits.GIE = 1;
  1818  0A4F  178B               	bsf	11,7	;volatile
  1819                           
  1820                           ;main.c: 502: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1821  0A50  3033               	movlw	low (STR_11-__stringbase)
  1822  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0A53  00CC               	movwf	USART_WriteString@str^(0+128)
  1825  0A54  3080               	movlw	128
  1826  0A55  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  1827  0A56  160A  118A  22C8  120A  158A  	fcall	_USART_WriteString
  1828                           
  1829                           ;main.c: 503: USART_WriteString("USART: 115.200bps\n\r");
  1830  0A5B  3050               	movlw	low (STR_12-__stringbase)
  1831  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0A5E  00CC               	movwf	USART_WriteString@str^(0+128)
  1834  0A5F  3080               	movlw	128
  1835  0A60  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  1836  0A61  160A  118A  22C8  120A  158A  	fcall	_USART_WriteString
  1837                           
  1838                           ;main.c: 506: LCD_Init();
  1839  0A66  160A  118A  24BB  120A  158A  	fcall	_LCD_Init
  1840                           
  1841                           ;main.c: 507: LCD_Cursor(0,0);
  1842  0A6B  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0A6C  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0A6D  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1845  0A6E  3000               	movlw	0
  1846  0A6F  160A  118A  217D  120A  158A  	fcall	_LCD_Cursor
  1847                           
  1848                           ;main.c: 508: LCD_WriteString("Inicializando...");
  1849  0A74  3064               	movlw	low (STR_13-__stringbase)
  1850  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0A76  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0A77  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1853  0A78  3080               	movlw	128
  1854  0A79  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1855  0A7A  160A  118A  2297  120A  158A  	fcall	_LCD_WriteString
  1856                           
  1857                           ;main.c: 511: PWM_DutyCycle1(0);
  1858  0A7F  3000               	movlw	0
  1859  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0A81  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0A82  00CB               	movwf	PWM_DutyCycle1@valor^(0+128)
  1862  0A83  3000               	movlw	0
  1863  0A84  00CC               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1864  0A85  160A  118A  219D  120A  158A  	fcall	_PWM_DutyCycle1
  1865                           
  1866                           ;main.c: 512: PWM_DutyCycle2(0);
  1867  0A8A  3000               	movlw	0
  1868  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0A8D  00CB               	movwf	PWM_DutyCycle2@valor^(0+128)
  1871  0A8E  3000               	movlw	0
  1872  0A8F  00CC               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1873  0A90  160A  118A  21BE  120A  158A  	fcall	_PWM_DutyCycle2
  1874                           
  1875                           ;main.c: 515: TIMER0_Set(238);
  1876  0A95  30EE               	movlw	238
  1877  0A96  160A  118A  209D  120A  158A  	fcall	_TIMER0_Set
  1878                           
  1879                           ;main.c: 518: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1880  0A9B  3018               	movlw	24
  1881  0A9C  1683               	bsf	3,5	;RP0=1, select bank3
  1882  0A9D  1703               	bsf	3,6	;RP1=1, select bank3
  1883  0A9E  00BC               	movwf	(??_main^(0+384)+2)
  1884  0A9F  3061               	movlw	97
  1885  0AA0  00BB               	movwf	(??_main^(0+384)+1)
  1886  0AA1  306E               	movlw	110
  1887  0AA2  00BA               	movwf	??_main^(0+384)
  1888  0AA3                     u4147:	
  1889  0AA3  0BBA               	decfsz	??_main^(0+384),f
  1890  0AA4  2AA3               	goto	u4147
  1891  0AA5  0BBB               	decfsz	(??_main^(0+384)+1),f
  1892  0AA6  2AA3               	goto	u4147
  1893  0AA7  0BBC               	decfsz	(??_main^(0+384)+2),f
  1894  0AA8  2AA3               	goto	u4147
  1895  0AA9  0000               	nop
  1896  0AAA                     l204:	
  1897                           ;main.c: 521: while(1)
  1898                           
  1899                           
  1900                           ;main.c: 522: {
  1901                           ;main.c: 526: sprintf(display_rpm,"%04d", rpm);
  1902  0AAA  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1903  0AAB  1683               	bsf	3,5	;RP0=1, select bank3
  1904  0AAC  1703               	bsf	3,6	;RP1=1, select bank3
  1905  0AAD  00BA               	movwf	??_main^(0+384)
  1906  0AAE  083A               	movf	??_main^(0+384),w
  1907  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0AB1  00D9               	movwf	sprintf@f^(0+128)
  1910  0AB2  0844               	movf	(_rpm+1)^(0+128),w
  1911  0AB3  01DB               	clrf	((?_sprintf+1)^(0+128)+1)
  1912  0AB4  07DB               	addwf	((?_sprintf+1)^(0+128)+1),f
  1913  0AB5  0843               	movf	_rpm^(0+128),w
  1914  0AB6  01DA               	clrf	(?_sprintf^(0+128)+1)
  1915  0AB7  07DA               	addwf	(?_sprintf^(0+128)+1),f
  1916  0AB8  30AD               	movlw	_display_rpm& (0+255)
  1917  0AB9  120A  158A  2649  120A  158A  	fcall	_sprintf
  1918                           
  1919                           ;main.c: 527: sprintf(display_pwm,"%04d", deltaV);
  1920  0ABE  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1921  0ABF  1683               	bsf	3,5	;RP0=1, select bank3
  1922  0AC0  1703               	bsf	3,6	;RP1=1, select bank3
  1923  0AC1  00BA               	movwf	??_main^(0+384)
  1924  0AC2  083A               	movf	??_main^(0+384),w
  1925  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0AC4  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0AC5  00D9               	movwf	sprintf@f^(0+128)
  1928  0AC6  083E               	movf	(_deltaV+1)^(0+128),w
  1929  0AC7  01DB               	clrf	((?_sprintf+1)^(0+128)+1)
  1930  0AC8  07DB               	addwf	((?_sprintf+1)^(0+128)+1),f
  1931  0AC9  083D               	movf	_deltaV^(0+128),w
  1932  0ACA  01DA               	clrf	(?_sprintf^(0+128)+1)
  1933  0ACB  07DA               	addwf	(?_sprintf^(0+128)+1),f
  1934  0ACC  30A3               	movlw	_display_pwm& (0+255)
  1935  0ACD  120A  158A  2649  120A  158A  	fcall	_sprintf
  1936                           
  1937                           ;main.c: 531: USART_WriteString(display_rpm);
  1938  0AD2  30AD               	movlw	_display_rpm& (0+255)
  1939  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  1940  0AD4  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0AD5  00CC               	movwf	USART_WriteString@str^(0+128)
  1942  0AD6  3001               	movlw	1
  1943  0AD7  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  1944  0AD8  160A  118A  22C8  120A  158A  	fcall	_USART_WriteString
  1945                           
  1946                           ;main.c: 532: USART_WriteString("\n\r");
  1947  0ADD  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1948  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0ADF  1303               	bcf	3,6	;RP1=0, select bank1
  1950  0AE0  00CC               	movwf	USART_WriteString@str^(0+128)
  1951  0AE1  3080               	movlw	128
  1952  0AE2  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  1953  0AE3  160A  118A  22C8  120A  158A  	fcall	_USART_WriteString
  1954                           
  1955                           ;main.c: 535: LCD_Clear();
  1956  0AE8  160A  118A  226E  120A  158A  	fcall	_LCD_Clear
  1957                           
  1958                           ;main.c: 536: LCD_Cursor(0,0);
  1959  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0AEF  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1962  0AF0  3000               	movlw	0
  1963  0AF1  160A  118A  217D  120A  158A  	fcall	_LCD_Cursor
  1964                           
  1965                           ;main.c: 537: LCD_WriteString("RPM: ");
  1966  0AF6  30C1               	movlw	low (STR_17-__stringbase)
  1967  0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0AF9  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1970  0AFA  3080               	movlw	128
  1971  0AFB  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1972  0AFC  160A  118A  2297  120A  158A  	fcall	_LCD_WriteString
  1973                           
  1974                           ;main.c: 538: LCD_Cursor(0,6);
  1975  0B01  3006               	movlw	6
  1976  0B02  1683               	bsf	3,5	;RP0=1, select bank3
  1977  0B03  1703               	bsf	3,6	;RP1=1, select bank3
  1978  0B04  00BA               	movwf	??_main^(0+384)
  1979  0B05  083A               	movf	??_main^(0+384),w
  1980  0B06  1683               	bsf	3,5	;RP0=1, select bank1
  1981  0B07  1303               	bcf	3,6	;RP1=0, select bank1
  1982  0B08  00CB               	movwf	LCD_Cursor@Col^(0+128)
  1983  0B09  3000               	movlw	0
  1984  0B0A  160A  118A  217D  120A  158A  	fcall	_LCD_Cursor
  1985                           
  1986                           ;main.c: 539: LCD_WriteString(display_rpm);
  1987  0B0F  30AD               	movlw	_display_rpm& (0+255)
  1988  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0B11  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0B12  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1991  0B13  3001               	movlw	1
  1992  0B14  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1993  0B15  160A  118A  2297  120A  158A  	fcall	_LCD_WriteString
  1994                           
  1995                           ;main.c: 540: LCD_Cursor(1,0);
  1996  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0B1C  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1999  0B1D  3001               	movlw	1
  2000  0B1E  160A  118A  217D  120A  158A  	fcall	_LCD_Cursor
  2001                           
  2002                           ;main.c: 541: LCD_WriteString("Delta: ");
  2003  0B23  30B9               	movlw	low (STR_18-__stringbase)
  2004  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0B26  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2007  0B27  3080               	movlw	128
  2008  0B28  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2009  0B29  160A  118A  2297  120A  158A  	fcall	_LCD_WriteString
  2010                           
  2011                           ;main.c: 542: LCD_Cursor(1,6);
  2012  0B2E  3006               	movlw	6
  2013  0B2F  1683               	bsf	3,5	;RP0=1, select bank3
  2014  0B30  1703               	bsf	3,6	;RP1=1, select bank3
  2015  0B31  00BA               	movwf	??_main^(0+384)
  2016  0B32  083A               	movf	??_main^(0+384),w
  2017  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0B34  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0B35  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2020  0B36  3001               	movlw	1
  2021  0B37  160A  118A  217D  120A  158A  	fcall	_LCD_Cursor
  2022                           
  2023                           ;main.c: 543: LCD_WriteString(display_pwm);
  2024  0B3C  30A3               	movlw	_display_pwm& (0+255)
  2025  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0B3F  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2028  0B40  3001               	movlw	1
  2029  0B41  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2030  0B42  160A  118A  2297  120A  158A  	fcall	_LCD_WriteString
  2031                           
  2032                           ;main.c: 545: _delay((unsigned long)((200)*(18432000/4000.0)));
  2033  0B47  3005               	movlw	5
  2034  0B48  1683               	bsf	3,5	;RP0=1, select bank3
  2035  0B49  1703               	bsf	3,6	;RP1=1, select bank3
  2036  0B4A  00BC               	movwf	(??_main^(0+384)+2)
  2037  0B4B  30AD               	movlw	173
  2038  0B4C  00BB               	movwf	(??_main^(0+384)+1)
  2039  0B4D  30E0               	movlw	224
  2040  0B4E  00BA               	movwf	??_main^(0+384)
  2041  0B4F                     u4157:	
  2042  0B4F  0BBA               	decfsz	??_main^(0+384),f
  2043  0B50  2B4F               	goto	u4157
  2044  0B51  0BBB               	decfsz	(??_main^(0+384)+1),f
  2045  0B52  2B4F               	goto	u4157
  2046  0B53  0BBC               	decfsz	(??_main^(0+384)+2),f
  2047  0B54  2B4F               	goto	u4157
  2048  0B55  2AAA               	goto	l204
  2049  0B56                     __end_of_main:	
  2050                           
  2051                           	psect	text1
  2052  0E49                     __ptext1:	
  2053 ;; *************** function _sprintf *****************
  2054 ;; Defined at:
  2055 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  sp              1    wreg     PTR unsigned char 
  2058 ;;		 -> display_pwm(10), display_rpm(10), 
  2059 ;;  f               1   18[BANK1 ] PTR const unsigned char 
  2060 ;;		 -> STR_15(5), STR_14(5), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2063 ;;		 -> display_pwm(10), display_rpm(10), 
  2064 ;;  _val            4   26[BANK1 ] struct .
  2065 ;;  width           2   31[BANK1 ] int 
  2066 ;;  c               1   34[BANK1 ] char 
  2067 ;;  flag            1   30[BANK1 ] unsigned char 
  2068 ;;  prec            1   25[BANK1 ] char 
  2069 ;;  ap              1   24[BANK1 ] PTR void [1]
  2070 ;;		 -> ?_sprintf(2), 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2   18[BANK1 ] int 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       3       0       0
  2081 ;;      Locals:         0       0      11       0       0
  2082 ;;      Temps:          0       0       3       0       0
  2083 ;;      Totals:         0       0      17       0       0
  2084 ;;Total ram usage:       17 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    6
  2087 ;; This function calls:
  2088 ;;		___lwdiv
  2089 ;;		___lwmod
  2090 ;;		___wmul
  2091 ;;		_isdigit
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _sprintf
  2099  0E49                     _sprintf:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2103                           ;sprintf@sp stored from wreg
  2104  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0E4B  00E8               	movwf	sprintf@sp^(0+128)
  2107                           
  2108                           ;doprnt.c: 494: va_list ap;
  2109                           ;doprnt.c: 499: signed char c;
  2110                           ;doprnt.c: 501: int width;
  2111                           ;doprnt.c: 506: signed char prec;
  2112                           ;doprnt.c: 508: unsigned char flag;
  2113                           ;doprnt.c: 527: union {
  2114                           ;doprnt.c: 528: unsigned int _val;
  2115                           ;doprnt.c: 529: struct {
  2116                           ;doprnt.c: 530: const char * _cp;
  2117                           ;doprnt.c: 531: unsigned _len;
  2118                           ;doprnt.c: 532: } _str;
  2119                           ;doprnt.c: 533: } _val;
  2120                           ;doprnt.c: 542: *ap = __va_start();
  2121  0E4C  30DA               	movlw	(?_sprintf+1)& (0+255)
  2122  0E4D  00DC               	movwf	??_sprintf^(0+128)
  2123  0E4E  085C               	movf	??_sprintf^(0+128),w
  2124  0E4F  00DF               	movwf	sprintf@ap^(0+128)
  2125  0E50                     l3140:	
  2126                           ;doprnt.c: 545: while(c = *f++) {
  2127                           
  2128  0E50  3001               	movlw	1
  2129  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0E53  07D9               	addwf	sprintf@f^(0+128),f
  2132  0E54  30FF               	movlw	-1
  2133  0E55  0759               	addwf	sprintf@f^(0+128),w
  2134  0E56  0084               	movwf	4
  2135  0E57  120A  158A  200A  120A  158A  	fcall	stringdir
  2136  0E5C  00DC               	movwf	??_sprintf^(0+128)
  2137  0E5D  085C               	movf	??_sprintf^(0+128),w
  2138  0E5E  00E9               	movwf	sprintf@c^(0+128)
  2139  0E5F  08E9               	movf	sprintf@c^(0+128),f
  2140  0E60  1903               	btfsc	3,2
  2141  0E61  2FF9               	goto	l3142
  2142                           
  2143                           ;doprnt.c: 547: if(c != '%')
  2144  0E62  0869               	movf	sprintf@c^(0+128),w
  2145  0E63  3A25               	xorlw	37
  2146  0E64  1903               	skipnz
  2147  0E65  2E72               	goto	l3044
  2148                           
  2149                           ;doprnt.c: 549: {
  2150                           ;doprnt.c: 550: ((*sp++ = (c)));
  2151  0E66  0869               	movf	sprintf@c^(0+128),w
  2152  0E67  00DC               	movwf	??_sprintf^(0+128)
  2153  0E68  0868               	movf	sprintf@sp^(0+128),w
  2154  0E69  0084               	movwf	4
  2155  0E6A  085C               	movf	??_sprintf^(0+128),w
  2156  0E6B  1783               	bsf	3,7	;select IRP bank2
  2157  0E6C  0080               	movwf	0
  2158  0E6D  3001               	movlw	1
  2159  0E6E  00DC               	movwf	??_sprintf^(0+128)
  2160  0E6F  085C               	movf	??_sprintf^(0+128),w
  2161  0E70  07E8               	addwf	sprintf@sp^(0+128),f
  2162                           
  2163                           ;doprnt.c: 551: continue;
  2164  0E71  2E50               	goto	l3140
  2165  0E72                     l3044:	
  2166                           
  2167                           ;doprnt.c: 552: }
  2168                           ;doprnt.c: 555: width = 0;
  2169  0E72  01E6               	clrf	sprintf@width^(0+128)
  2170  0E73  01E7               	clrf	(sprintf@width+1)^(0+128)
  2171                           
  2172                           ;doprnt.c: 557: flag = 0;
  2173  0E74  01E5               	clrf	sprintf@flag^(0+128)
  2174                           
  2175                           ;doprnt.c: 560: switch(*f) {
  2176                           
  2177                           ;doprnt.c: 559: for(;;) {
  2178  0E75  2E7B               	goto	l3050
  2179  0E76                     l481:	
  2180                           ;doprnt.c: 588: case '0':
  2181                           
  2182                           
  2183                           ;doprnt.c: 589: flag |= 0x04;
  2184  0E76  1565               	bsf	sprintf@flag^(0+128),2
  2185                           
  2186                           ;doprnt.c: 590: f++;
  2187  0E77  3001               	movlw	1
  2188  0E78  00DC               	movwf	??_sprintf^(0+128)
  2189  0E79  085C               	movf	??_sprintf^(0+128),w
  2190  0E7A  07D9               	addwf	sprintf@f^(0+128),f
  2191  0E7B                     l3050:	
  2192                           ;doprnt.c: 593: }
  2193                           
  2194                           ;doprnt.c: 591: continue;
  2195                           
  2196  0E7B  0859               	movf	sprintf@f^(0+128),w
  2197  0E7C  0084               	movwf	4
  2198  0E7D  120A  158A  200A  120A  158A  	fcall	stringdir
  2199                           
  2200                           ; Switch size 1, requested type "space"
  2201                           ; Number of cases is 1, Range of values is 48 to 48
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte            4     3 (average)
  2205                           ; direct_byte           14    11 (fixed)
  2206                           ; jumptable            263     9 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  0E82  3A30               	xorlw	48	; case 48
  2209  0E83  1903               	skipnz
  2210  0E84  2E76               	goto	l481
  2211  0E85  2E86               	goto	l3052
  2212  0E86                     l3052:	
  2213                           ;doprnt.c: 595: }
  2214                           
  2215                           ;doprnt.c: 594: break;
  2216                           
  2217                           
  2218                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2219  0E86  0859               	movf	sprintf@f^(0+128),w
  2220  0E87  0084               	movwf	4
  2221  0E88  120A  158A  200A  120A  158A  	fcall	stringdir
  2222  0E8D  160A  118A  20C5  120A  158A  	fcall	_isdigit
  2223  0E92  1C03               	btfss	3,0
  2224  0E93  2ED6               	goto	l3066
  2225                           
  2226                           ;doprnt.c: 607: width = 0;
  2227  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0E96  01E6               	clrf	sprintf@width^(0+128)
  2230  0E97  01E7               	clrf	(sprintf@width+1)^(0+128)
  2231  0E98                     l3056:	
  2232                           ;doprnt.c: 608: do {
  2233                           
  2234                           
  2235                           ;doprnt.c: 609: width *= 10;
  2236  0E98  300A               	movlw	10
  2237  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0E9B  00CB               	movwf	___wmul@multiplier^(0+128)
  2240  0E9C  3000               	movlw	0
  2241  0E9D  00CC               	movwf	(___wmul@multiplier^(0+128)+1)
  2242  0E9E  0867               	movf	(sprintf@width+1)^(0+128),w
  2243  0E9F  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
  2244  0EA0  07CE               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2245  0EA1  0866               	movf	sprintf@width^(0+128),w
  2246  0EA2  01CD               	clrf	___wmul@multiplicand^(0+128)
  2247  0EA3  07CD               	addwf	___wmul@multiplicand^(0+128),f
  2248  0EA4  160A  118A  2249  120A  158A  	fcall	___wmul
  2249  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0EAB  084C               	movf	(?___wmul+1)^(0+128),w
  2252  0EAC  01E7               	clrf	(sprintf@width+1)^(0+128)
  2253  0EAD  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2254  0EAE  084B               	movf	?___wmul^(0+128),w
  2255  0EAF  01E6               	clrf	sprintf@width^(0+128)
  2256  0EB0  07E6               	addwf	sprintf@width^(0+128),f
  2257                           
  2258                           ;doprnt.c: 610: width += *f++ - '0';
  2259  0EB1  0859               	movf	sprintf@f^(0+128),w
  2260  0EB2  0084               	movwf	4
  2261  0EB3  120A  158A  200A  120A  158A  	fcall	stringdir
  2262  0EB8  3ED0               	addlw	208
  2263  0EB9  00DC               	movwf	??_sprintf^(0+128)
  2264  0EBA  30FF               	movlw	255
  2265  0EBB  1803               	skipnc
  2266  0EBC  3000               	movlw	0
  2267  0EBD  00DD               	movwf	(??_sprintf^(0+128)+1)
  2268  0EBE  085C               	movf	??_sprintf^(0+128),w
  2269  0EBF  07E6               	addwf	sprintf@width^(0+128),f
  2270  0EC0  1803               	skipnc
  2271  0EC1  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2272  0EC2  085D               	movf	(??_sprintf+1)^(0+128),w
  2273  0EC3  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2274  0EC4  3001               	movlw	1
  2275  0EC5  00DC               	movwf	??_sprintf^(0+128)
  2276  0EC6  085C               	movf	??_sprintf^(0+128),w
  2277  0EC7  07D9               	addwf	sprintf@f^(0+128),f
  2278                           
  2279                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2280  0EC8  0859               	movf	sprintf@f^(0+128),w
  2281  0EC9  0084               	movwf	4
  2282  0ECA  120A  158A  200A  120A  158A  	fcall	stringdir
  2283  0ECF  160A  118A  20C5  120A  158A  	fcall	_isdigit
  2284  0ED4  1803               	btfsc	3,0
  2285  0ED5  2E98               	goto	l3056
  2286  0ED6                     l3066:	
  2287                           ;doprnt.c: 831: }
  2288                           
  2289                           ;doprnt.c: 822: continue;
  2290                           
  2291                           ;doprnt.c: 811: default:
  2292                           
  2293                           ;doprnt.c: 707: case 'i':
  2294                           ;doprnt.c: 708: break;
  2295                           
  2296                           ;doprnt.c: 706: case 'd':
  2297                           
  2298                           ;doprnt.c: 647: goto alldone;
  2299                           
  2300                           ;doprnt.c: 646: case 0:
  2301                           
  2302                           ;doprnt.c: 617: }
  2303                           ;doprnt.c: 644: switch(c = *f++) {
  2304                           
  2305  0ED6  3001               	movlw	1
  2306  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0ED9  07D9               	addwf	sprintf@f^(0+128),f
  2309  0EDA  30FF               	movlw	-1
  2310  0EDB  0759               	addwf	sprintf@f^(0+128),w
  2311  0EDC  0084               	movwf	4
  2312  0EDD  120A  158A  200A  120A  158A  	fcall	stringdir
  2313  0EE2  00E9               	movwf	sprintf@c^(0+128)
  2314                           
  2315                           ; Switch size 1, requested type "space"
  2316                           ; Number of cases is 3, Range of values is 0 to 105
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; simple_byte           10     6 (average)
  2320                           ; jumptable            260     6 (fixed)
  2321                           ;	Chosen strategy is simple_byte
  2322  0EE3  3A00               	xorlw	0	; case 0
  2323  0EE4  1903               	skipnz
  2324  0EE5  2FF9               	goto	l3142
  2325  0EE6  3A64               	xorlw	100	; case 100
  2326  0EE7  1903               	skipnz
  2327  0EE8  2EED               	goto	l3068
  2328  0EE9  3A0D               	xorlw	13	; case 105
  2329  0EEA  1903               	skipnz
  2330  0EEB  2EED               	goto	l3068
  2331  0EEC  2E50               	goto	l3140
  2332  0EED                     l3068:	
  2333                           
  2334                           ;doprnt.c: 1262: {
  2335                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2336  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0EEF  085F               	movf	sprintf@ap^(0+128),w
  2339  0EF0  0084               	movwf	4
  2340  0EF1  1383               	bcf	3,7	;select IRP bank0
  2341  0EF2  0800               	movf	0,w
  2342  0EF3  00E1               	movwf	sprintf@_val^(0+128)
  2343  0EF4  0A84               	incf	4,f
  2344  0EF5  0800               	movf	0,w
  2345  0EF6  00E2               	movwf	(sprintf@_val+1)^(0+128)
  2346  0EF7  3002               	movlw	2
  2347  0EF8  00DC               	movwf	??_sprintf^(0+128)
  2348  0EF9  085C               	movf	??_sprintf^(0+128),w
  2349  0EFA  07DF               	addwf	sprintf@ap^(0+128),f
  2350                           
  2351                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2352  0EFB  1FE2               	btfss	(sprintf@_val+1)^(0+128),7
  2353  0EFC  2F06               	goto	l3078
  2354                           
  2355                           ;doprnt.c: 1271: flag |= 0x03;
  2356  0EFD  3003               	movlw	3
  2357  0EFE  00DC               	movwf	??_sprintf^(0+128)
  2358  0EFF  085C               	movf	??_sprintf^(0+128),w
  2359  0F00  04E5               	iorwf	sprintf@flag^(0+128),f
  2360                           
  2361                           ;doprnt.c: 1272: _val._val = -_val._val;
  2362  0F01  09E1               	comf	sprintf@_val^(0+128),f
  2363  0F02  09E2               	comf	(sprintf@_val+1)^(0+128),f
  2364  0F03  0AE1               	incf	sprintf@_val^(0+128),f
  2365  0F04  1903               	skipnz
  2366  0F05  0AE2               	incf	(sprintf@_val+1)^(0+128),f
  2367  0F06                     l3078:	
  2368                           
  2369                           ;doprnt.c: 1273: }
  2370                           ;doprnt.c: 1275: }
  2371                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2372  0F06  01E9               	clrf	sprintf@c^(0+128)
  2373  0F07  0AE9               	incf	sprintf@c^(0+128),f
  2374  0F08  0869               	movf	sprintf@c^(0+128),w
  2375  0F09  3A05               	xorlw	5
  2376  0F0A  1903               	btfsc	3,2
  2377  0F0B  2F2D               	goto	l3090
  2378  0F0C                     l3082:	
  2379                           
  2380                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2381  0F0C  0869               	movf	sprintf@c^(0+128),w
  2382  0F0D  00DC               	movwf	??_sprintf^(0+128)
  2383  0F0E  075C               	addwf	??_sprintf^(0+128),w
  2384  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2385  0F10  0084               	movwf	4
  2386  0F11  120A  158A  200A  120A  158A  	fcall	stringdir
  2387  0F16  00DD               	movwf	(??_sprintf+1)^(0+128)
  2388  0F17  120A  158A  200A  120A  158A  	fcall	stringdir
  2389  0F1C  00DE               	movwf	((??_sprintf+1)^(0+128)+1)
  2390  0F1D  085E               	movf	(??_sprintf+2)^(0+128),w
  2391  0F1E  0262               	subwf	(sprintf@_val+1)^(0+128),w
  2392  0F1F  1D03               	skipz
  2393  0F20  2F23               	goto	u3755
  2394  0F21  085D               	movf	(??_sprintf+1)^(0+128),w
  2395  0F22  0261               	subwf	sprintf@_val^(0+128),w
  2396  0F23                     u3755:	
  2397  0F23  1C03               	btfss	3,0
  2398  0F24  2F2D               	goto	l3090
  2399                           
  2400                           ;doprnt.c: 1316: break;
  2401  0F25  3001               	movlw	1
  2402  0F26  00DC               	movwf	??_sprintf^(0+128)
  2403  0F27  085C               	movf	??_sprintf^(0+128),w
  2404  0F28  07E9               	addwf	sprintf@c^(0+128),f
  2405  0F29  0869               	movf	sprintf@c^(0+128),w
  2406  0F2A  3A05               	xorlw	5
  2407  0F2B  1D03               	skipz
  2408  0F2C  2F0C               	goto	l3082
  2409  0F2D                     l3090:	
  2410                           
  2411                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2412  0F2D  0867               	movf	(sprintf@width+1)^(0+128),w
  2413  0F2E  0466               	iorwf	sprintf@width^(0+128),w
  2414  0F2F  1903               	skipnz
  2415  0F30  2F3B               	goto	l499
  2416  0F31  0865               	movf	sprintf@flag^(0+128),w
  2417  0F32  3903               	andlw	3
  2418  0F33  1903               	btfsc	3,2
  2419  0F34  2F3B               	goto	l499
  2420                           
  2421                           ;doprnt.c: 1355: width--;
  2422  0F35  30FF               	movlw	255
  2423  0F36  07E6               	addwf	sprintf@width^(0+128),f
  2424  0F37  1803               	skipnc
  2425  0F38  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2426  0F39  30FF               	movlw	255
  2427  0F3A  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2428  0F3B                     l499:	
  2429                           
  2430                           ;doprnt.c: 1390: if(width > c)
  2431  0F3B  0869               	movf	sprintf@c^(0+128),w
  2432  0F3C  00DC               	movwf	??_sprintf^(0+128)
  2433  0F3D  01DD               	clrf	(??_sprintf^(0+128)+1)
  2434  0F3E  1BDC               	btfsc	??_sprintf^(0+128),7
  2435  0F3F  03DD               	decf	(??_sprintf^(0+128)+1),f
  2436  0F40  085D               	movf	(??_sprintf+1)^(0+128),w
  2437  0F41  3A80               	xorlw	128
  2438  0F42  00DE               	movwf	(??_sprintf+2)^(0+128)
  2439  0F43  0867               	movf	(sprintf@width+1)^(0+128),w
  2440  0F44  3A80               	xorlw	128
  2441  0F45  025E               	subwf	(??_sprintf+2)^(0+128),w
  2442  0F46  1D03               	skipz
  2443  0F47  2F4A               	goto	u3795
  2444  0F48  0866               	movf	sprintf@width^(0+128),w
  2445  0F49  025C               	subwf	??_sprintf^(0+128),w
  2446  0F4A                     u3795:	
  2447  0F4A  1803               	skipnc
  2448  0F4B  2F5A               	goto	l3098
  2449                           
  2450                           ;doprnt.c: 1391: width -= c;
  2451  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0F4E  0869               	movf	sprintf@c^(0+128),w
  2454  0F4F  00DC               	movwf	??_sprintf^(0+128)
  2455  0F50  01DD               	clrf	(??_sprintf^(0+128)+1)
  2456  0F51  1BDC               	btfsc	??_sprintf^(0+128),7
  2457  0F52  03DD               	decf	(??_sprintf^(0+128)+1),f
  2458  0F53  085C               	movf	??_sprintf^(0+128),w
  2459  0F54  02E6               	subwf	sprintf@width^(0+128),f
  2460  0F55  085D               	movf	(??_sprintf+1)^(0+128),w
  2461  0F56  1C03               	skipc
  2462  0F57  03E7               	decf	(sprintf@width+1)^(0+128),f
  2463  0F58  02E7               	subwf	(sprintf@width+1)^(0+128),f
  2464  0F59  2F5E               	goto	l3100
  2465  0F5A                     l3098:	
  2466                           
  2467                           ;doprnt.c: 1392: else
  2468                           ;doprnt.c: 1393: width = 0;
  2469  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2470  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2471  0F5C  01E6               	clrf	sprintf@width^(0+128)
  2472  0F5D  01E7               	clrf	(sprintf@width+1)^(0+128)
  2473  0F5E                     l3100:	
  2474                           
  2475                           ;doprnt.c: 1396: if(flag & 0x04) {
  2476  0F5E  1D65               	btfss	sprintf@flag^(0+128),2
  2477  0F5F  2F85               	goto	l3116
  2478                           
  2479                           ;doprnt.c: 1401: if(flag & 0x03)
  2480  0F60  0865               	movf	sprintf@flag^(0+128),w
  2481  0F61  3903               	andlw	3
  2482  0F62  1903               	btfsc	3,2
  2483  0F63  2F6F               	goto	l3108
  2484                           
  2485                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2486  0F64  302D               	movlw	45
  2487  0F65  00DC               	movwf	??_sprintf^(0+128)
  2488  0F66  0868               	movf	sprintf@sp^(0+128),w
  2489  0F67  0084               	movwf	4
  2490  0F68  085C               	movf	??_sprintf^(0+128),w
  2491  0F69  1783               	bsf	3,7	;select IRP bank2
  2492  0F6A  0080               	movwf	0
  2493  0F6B  3001               	movlw	1
  2494  0F6C  00DC               	movwf	??_sprintf^(0+128)
  2495  0F6D  085C               	movf	??_sprintf^(0+128),w
  2496  0F6E  07E8               	addwf	sprintf@sp^(0+128),f
  2497  0F6F                     l3108:	
  2498                           
  2499                           ;doprnt.c: 1424: if(width)
  2500  0F6F  0867               	movf	(sprintf@width+1)^(0+128),w
  2501  0F70  0466               	iorwf	sprintf@width^(0+128),w
  2502  0F71  1903               	skipnz
  2503  0F72  2FAD               	goto	l3130
  2504                           
  2505                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2506                           
  2507                           ;doprnt.c: 1425: do
  2508  0F73  3030               	movlw	48
  2509  0F74  00DC               	movwf	??_sprintf^(0+128)
  2510  0F75  0868               	movf	sprintf@sp^(0+128),w
  2511  0F76  0084               	movwf	4
  2512  0F77  085C               	movf	??_sprintf^(0+128),w
  2513  0F78  1783               	bsf	3,7	;select IRP bank2
  2514  0F79  0080               	movwf	0
  2515  0F7A  3001               	movlw	1
  2516  0F7B  00DC               	movwf	??_sprintf^(0+128)
  2517  0F7C  085C               	movf	??_sprintf^(0+128),w
  2518  0F7D  07E8               	addwf	sprintf@sp^(0+128),f
  2519                           
  2520                           ;doprnt.c: 1427: while(--width);
  2521  0F7E  30FF               	movlw	255
  2522  0F7F  07E6               	addwf	sprintf@width^(0+128),f
  2523  0F80  1803               	skipnc
  2524  0F81  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2525  0F82  30FF               	movlw	255
  2526  0F83  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2527  0F84  2F6F               	goto	l3108
  2528  0F85                     l3116:	
  2529                           ;doprnt.c: 1429: } else
  2530                           
  2531                           
  2532                           ;doprnt.c: 1431: {
  2533                           ;doprnt.c: 1433: if(width
  2534                           ;doprnt.c: 1437: )
  2535  0F85  0867               	movf	(sprintf@width+1)^(0+128),w
  2536  0F86  0466               	iorwf	sprintf@width^(0+128),w
  2537  0F87  1903               	skipnz
  2538  0F88  2F9E               	goto	l3124
  2539  0F89                     l3118:	
  2540                           ;doprnt.c: 1438: do
  2541                           
  2542                           
  2543                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2544  0F89  3020               	movlw	32
  2545  0F8A  00DC               	movwf	??_sprintf^(0+128)
  2546  0F8B  0868               	movf	sprintf@sp^(0+128),w
  2547  0F8C  0084               	movwf	4
  2548  0F8D  085C               	movf	??_sprintf^(0+128),w
  2549  0F8E  1783               	bsf	3,7	;select IRP bank2
  2550  0F8F  0080               	movwf	0
  2551  0F90  3001               	movlw	1
  2552  0F91  00DC               	movwf	??_sprintf^(0+128)
  2553  0F92  085C               	movf	??_sprintf^(0+128),w
  2554  0F93  07E8               	addwf	sprintf@sp^(0+128),f
  2555                           
  2556                           ;doprnt.c: 1440: while(--width);
  2557  0F94  30FF               	movlw	255
  2558  0F95  07E6               	addwf	sprintf@width^(0+128),f
  2559  0F96  1803               	skipnc
  2560  0F97  0AE7               	incf	(sprintf@width+1)^(0+128),f
  2561  0F98  30FF               	movlw	255
  2562  0F99  07E7               	addwf	(sprintf@width+1)^(0+128),f
  2563  0F9A  0867               	movf	(sprintf@width+1)^(0+128),w
  2564  0F9B  0466               	iorwf	sprintf@width^(0+128),w
  2565  0F9C  1D03               	skipz
  2566  0F9D  2F89               	goto	l3118
  2567  0F9E                     l3124:	
  2568                           
  2569                           ;doprnt.c: 1447: if(flag & 0x03)
  2570  0F9E  0865               	movf	sprintf@flag^(0+128),w
  2571  0F9F  3903               	andlw	3
  2572  0FA0  1903               	btfsc	3,2
  2573  0FA1  2FAD               	goto	l3130
  2574                           
  2575                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2576  0FA2  302D               	movlw	45
  2577  0FA3  00DC               	movwf	??_sprintf^(0+128)
  2578  0FA4  0868               	movf	sprintf@sp^(0+128),w
  2579  0FA5  0084               	movwf	4
  2580  0FA6  085C               	movf	??_sprintf^(0+128),w
  2581  0FA7  1783               	bsf	3,7	;select IRP bank2
  2582  0FA8  0080               	movwf	0
  2583  0FA9  3001               	movlw	1
  2584  0FAA  00DC               	movwf	??_sprintf^(0+128)
  2585  0FAB  085C               	movf	??_sprintf^(0+128),w
  2586  0FAC  07E8               	addwf	sprintf@sp^(0+128),f
  2587  0FAD                     l3130:	
  2588                           
  2589                           ;doprnt.c: 1478: }
  2590                           ;doprnt.c: 1481: prec = c;
  2591  0FAD  0869               	movf	sprintf@c^(0+128),w
  2592  0FAE  00DC               	movwf	??_sprintf^(0+128)
  2593  0FAF  085C               	movf	??_sprintf^(0+128),w
  2594  0FB0  00E0               	movwf	sprintf@prec^(0+128)
  2595  0FB1                     l3138:	
  2596                           ;doprnt.c: 1483: while(prec--) {
  2597                           
  2598  0FB1  30FF               	movlw	-1
  2599  0FB2  00DC               	movwf	??_sprintf^(0+128)
  2600  0FB3  085C               	movf	??_sprintf^(0+128),w
  2601  0FB4  07E0               	addwf	sprintf@prec^(0+128),f
  2602  0FB5  0860               	movf	sprintf@prec^(0+128),w
  2603  0FB6  3AFF               	xorlw	-1
  2604  0FB7  1903               	btfsc	3,2
  2605  0FB8  2E50               	goto	l3140
  2606                           
  2607                           ;doprnt.c: 1487: {
  2608                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2609  0FB9  300A               	movlw	10
  2610  0FBA  00D3               	movwf	___lwmod@divisor^(0+128)
  2611  0FBB  3000               	movlw	0
  2612  0FBC  00D4               	movwf	(___lwmod@divisor^(0+128)+1)
  2613  0FBD  0860               	movf	sprintf@prec^(0+128),w
  2614  0FBE  00DC               	movwf	??_sprintf^(0+128)
  2615  0FBF  075C               	addwf	??_sprintf^(0+128),w
  2616  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2617  0FC1  0084               	movwf	4
  2618  0FC2  120A  158A  200A  120A  158A  	fcall	stringdir
  2619  0FC7  00CB               	movwf	___lwdiv@divisor^(0+128)
  2620  0FC8  120A  158A  200A  120A  158A  	fcall	stringdir
  2621  0FCD  00CC               	movwf	(___lwdiv@divisor+1)^(0+128)
  2622  0FCE  0862               	movf	(sprintf@_val+1)^(0+128),w
  2623  0FCF  01CE               	clrf	(___lwdiv@dividend+1)^(0+128)
  2624  0FD0  07CE               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2625  0FD1  0861               	movf	sprintf@_val^(0+128),w
  2626  0FD2  01CD               	clrf	___lwdiv@dividend^(0+128)
  2627  0FD3  07CD               	addwf	___lwdiv@dividend^(0+128),f
  2628  0FD4  160A  118A  236D  120A  158A  	fcall	___lwdiv
  2629  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2630  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2631  0FDB  084C               	movf	(?___lwdiv+1)^(0+128),w
  2632  0FDC  01D6               	clrf	(___lwmod@dividend+1)^(0+128)
  2633  0FDD  07D6               	addwf	(___lwmod@dividend+1)^(0+128),f
  2634  0FDE  084B               	movf	?___lwdiv^(0+128),w
  2635  0FDF  01D5               	clrf	___lwmod@dividend^(0+128)
  2636  0FE0  07D5               	addwf	___lwmod@dividend^(0+128),f
  2637  0FE1  160A  118A  22F9  120A  158A  	fcall	___lwmod
  2638  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2639  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0FE8  0853               	movf	?___lwmod^(0+128),w
  2641  0FE9  3E30               	addlw	48
  2642  0FEA  00DD               	movwf	(??_sprintf+1)^(0+128)
  2643  0FEB  085D               	movf	(??_sprintf+1)^(0+128),w
  2644  0FEC  00E9               	movwf	sprintf@c^(0+128)
  2645                           
  2646                           ;doprnt.c: 1532: }
  2647                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2648  0FED  0869               	movf	sprintf@c^(0+128),w
  2649  0FEE  00DC               	movwf	??_sprintf^(0+128)
  2650  0FEF  0868               	movf	sprintf@sp^(0+128),w
  2651  0FF0  0084               	movwf	4
  2652  0FF1  085C               	movf	??_sprintf^(0+128),w
  2653  0FF2  1783               	bsf	3,7	;select IRP bank2
  2654  0FF3  0080               	movwf	0
  2655  0FF4  3001               	movlw	1
  2656  0FF5  00DC               	movwf	??_sprintf^(0+128)
  2657  0FF6  085C               	movf	??_sprintf^(0+128),w
  2658  0FF7  07E8               	addwf	sprintf@sp^(0+128),f
  2659  0FF8  2FB1               	goto	l3138
  2660  0FF9                     l3142:	
  2661                           ;doprnt.c: 1534: }
  2662                           ;doprnt.c: 1542: }
  2663                           ;doprnt.c: 1544: alldone:
  2664                           
  2665                           
  2666                           ;doprnt.c: 1547: *sp = 0;
  2667  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2669  0FFB  0868               	movf	sprintf@sp^(0+128),w
  2670  0FFC  0084               	movwf	4
  2671  0FFD  1783               	bsf	3,7	;select IRP bank2
  2672  0FFE  0180               	clrf	0
  2673  0FFF  0008               	return
  2674  1000                     __end_of_sprintf:	
  2675                           ;doprnt.c: 1549: return 0;
  2676                           ;	Return value of _sprintf is never used
  2677                           
  2678                           
  2679                           	psect	text2
  2680  10C5                     __ptext2:	
  2681 ;; *************** function _isdigit *****************
  2682 ;; Defined at:
  2683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  c               1    wreg     unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  c               1    5[BANK1 ] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;		None               void
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         0       0       2       0       0
  2699 ;;      Temps:          0       0       0       0       0
  2700 ;;      Totals:         0       0       2       0       0
  2701 ;;Total ram usage:        2 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    5
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_sprintf
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _isdigit
  2713  10C5                     _isdigit:	
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2717                           ;isdigit@c stored from wreg
  2718  10C5  1683               	bsf	3,5	;RP0=1, select bank1
  2719  10C6  1303               	bcf	3,6	;RP1=0, select bank1
  2720  10C7  00CC               	movwf	isdigit@c^(0+128)
  2721  10C8  01CB               	clrf	_isdigit$1450^(0+128)
  2722  10C9  303A               	movlw	58
  2723  10CA  024C               	subwf	isdigit@c^(0+128),w
  2724  10CB  1803               	skipnc
  2725  10CC  28D3               	goto	l2522
  2726  10CD  3030               	movlw	48
  2727  10CE  024C               	subwf	isdigit@c^(0+128),w
  2728  10CF  1C03               	skipc
  2729  10D0  28D3               	goto	l2522
  2730  10D1  01CB               	clrf	_isdigit$1450^(0+128)
  2731  10D2  0ACB               	incf	_isdigit$1450^(0+128),f
  2732  10D3                     l2522:	
  2733  10D3  0C4B               	rrf	_isdigit$1450^(0+128),w
  2734  10D4  0008               	return
  2735  10D5                     __end_of_isdigit:	
  2736                           
  2737                           	psect	text3
  2738  1249                     __ptext3:	
  2739 ;; *************** function ___wmul *****************
  2740 ;; Defined at:
  2741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  multiplier      2    4[BANK1 ] unsigned int 
  2744 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  product         2    8[BANK1 ] unsigned int 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  2    4[BANK1 ] unsigned int 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       4       0       0
  2757 ;;      Locals:         0       0       2       0       0
  2758 ;;      Temps:          0       0       0       0       0
  2759 ;;      Totals:         0       0       6       0       0
  2760 ;;Total ram usage:        6 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    5
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_sprintf
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function ___wmul
  2772  1249                     ___wmul:	
  2773                           
  2774                           ;incstack = 0
  2775                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2776  1249  1683               	bsf	3,5	;RP0=1, select bank1
  2777  124A  1303               	bcf	3,6	;RP1=0, select bank1
  2778  124B  01CF               	clrf	___wmul@product^(0+128)
  2779  124C  01D0               	clrf	(___wmul@product+1)^(0+128)
  2780  124D                     l2528:	
  2781  124D  1C4B               	btfss	___wmul@multiplier^(0+128),0
  2782  124E  2A55               	goto	l600
  2783  124F  084D               	movf	___wmul@multiplicand^(0+128),w
  2784  1250  07CF               	addwf	___wmul@product^(0+128),f
  2785  1251  1803               	skipnc
  2786  1252  0AD0               	incf	(___wmul@product+1)^(0+128),f
  2787  1253  084E               	movf	(___wmul@multiplicand+1)^(0+128),w
  2788  1254  07D0               	addwf	(___wmul@product+1)^(0+128),f
  2789  1255                     l600:	
  2790  1255  3001               	movlw	1
  2791  1256                     u2835:	
  2792  1256  1003               	clrc
  2793  1257  0DCD               	rlf	___wmul@multiplicand^(0+128),f
  2794  1258  0DCE               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2795  1259  3EFF               	addlw	-1
  2796  125A  1D03               	skipz
  2797  125B  2A56               	goto	u2835
  2798  125C  3001               	movlw	1
  2799  125D                     u2845:	
  2800  125D  1003               	clrc
  2801  125E  0CCC               	rrf	(___wmul@multiplier+1)^(0+128),f
  2802  125F  0CCB               	rrf	___wmul@multiplier^(0+128),f
  2803  1260  3EFF               	addlw	-1
  2804  1261  1D03               	skipz
  2805  1262  2A5D               	goto	u2845
  2806  1263  084C               	movf	(___wmul@multiplier+1)^(0+128),w
  2807  1264  044B               	iorwf	___wmul@multiplier^(0+128),w
  2808  1265  1D03               	skipz
  2809  1266  2A4D               	goto	l2528
  2810  1267  0850               	movf	(___wmul@product+1)^(0+128),w
  2811  1268  01CC               	clrf	(?___wmul+1)^(0+128)
  2812  1269  07CC               	addwf	(?___wmul+1)^(0+128),f
  2813  126A  084F               	movf	___wmul@product^(0+128),w
  2814  126B  01CB               	clrf	?___wmul^(0+128)
  2815  126C  07CB               	addwf	?___wmul^(0+128),f
  2816  126D  0008               	return
  2817  126E                     __end_of___wmul:	
  2818                           
  2819                           	psect	text4
  2820  12F9                     __ptext4:	
  2821 ;; *************** function ___lwmod *****************
  2822 ;; Defined at:
  2823 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  divisor         2   12[BANK1 ] unsigned int 
  2826 ;;  dividend        2   14[BANK1 ] unsigned int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  counter         1   17[BANK1 ] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2   12[BANK1 ] unsigned int 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       0       4       0       0
  2839 ;;      Locals:         0       0       1       0       0
  2840 ;;      Temps:          0       0       1       0       0
  2841 ;;      Totals:         0       0       6       0       0
  2842 ;;Total ram usage:        6 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    5
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_sprintf
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function ___lwmod
  2854  12F9                     ___lwmod:	
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2858  12F9  1683               	bsf	3,5	;RP0=1, select bank1
  2859  12FA  1303               	bcf	3,6	;RP1=0, select bank1
  2860  12FB  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  2861  12FC  0453               	iorwf	___lwmod@divisor^(0+128),w
  2862  12FD  1903               	skipnz
  2863  12FE  2B28               	goto	l2716
  2864  12FF  01D8               	clrf	___lwmod@counter^(0+128)
  2865  1300  0AD8               	incf	___lwmod@counter^(0+128),f
  2866  1301                     l2706:	
  2867  1301  1BD4               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2868  1302  2B0F               	goto	l2708
  2869  1303  3001               	movlw	1
  2870  1304                     u3285:	
  2871  1304  1003               	clrc
  2872  1305  0DD3               	rlf	___lwmod@divisor^(0+128),f
  2873  1306  0DD4               	rlf	(___lwmod@divisor+1)^(0+128),f
  2874  1307  3EFF               	addlw	-1
  2875  1308  1D03               	skipz
  2876  1309  2B04               	goto	u3285
  2877  130A  3001               	movlw	1
  2878  130B  00D7               	movwf	??___lwmod^(0+128)
  2879  130C  0857               	movf	??___lwmod^(0+128),w
  2880  130D  07D8               	addwf	___lwmod@counter^(0+128),f
  2881  130E  2B01               	goto	l2706
  2882  130F                     l2708:	
  2883  130F  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  2884  1310  0256               	subwf	(___lwmod@dividend+1)^(0+128),w
  2885  1311  1D03               	skipz
  2886  1312  2B15               	goto	u3305
  2887  1313  0853               	movf	___lwmod@divisor^(0+128),w
  2888  1314  0255               	subwf	___lwmod@dividend^(0+128),w
  2889  1315                     u3305:	
  2890  1315  1C03               	skipc
  2891  1316  2B1D               	goto	l2712
  2892  1317  0853               	movf	___lwmod@divisor^(0+128),w
  2893  1318  02D5               	subwf	___lwmod@dividend^(0+128),f
  2894  1319  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  2895  131A  1C03               	skipc
  2896  131B  03D6               	decf	(___lwmod@dividend+1)^(0+128),f
  2897  131C  02D6               	subwf	(___lwmod@dividend+1)^(0+128),f
  2898  131D                     l2712:	
  2899  131D  3001               	movlw	1
  2900  131E                     u3315:	
  2901  131E  1003               	clrc
  2902  131F  0CD4               	rrf	(___lwmod@divisor+1)^(0+128),f
  2903  1320  0CD3               	rrf	___lwmod@divisor^(0+128),f
  2904  1321  3EFF               	addlw	-1
  2905  1322  1D03               	skipz
  2906  1323  2B1E               	goto	u3315
  2907  1324  3001               	movlw	1
  2908  1325  02D8               	subwf	___lwmod@counter^(0+128),f
  2909  1326  1D03               	btfss	3,2
  2910  1327  2B0F               	goto	l2708
  2911  1328                     l2716:	
  2912  1328  0856               	movf	(___lwmod@dividend+1)^(0+128),w
  2913  1329  01D4               	clrf	(?___lwmod+1)^(0+128)
  2914  132A  07D4               	addwf	(?___lwmod+1)^(0+128),f
  2915  132B  0855               	movf	___lwmod@dividend^(0+128),w
  2916  132C  01D3               	clrf	?___lwmod^(0+128)
  2917  132D  07D3               	addwf	?___lwmod^(0+128),f
  2918  132E  0008               	return
  2919  132F                     __end_of___lwmod:	
  2920                           
  2921                           	psect	text5
  2922  136D                     __ptext5:	
  2923 ;; *************** function ___lwdiv *****************
  2924 ;; Defined at:
  2925 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  divisor         2    4[BANK1 ] unsigned int 
  2928 ;;  dividend        2    6[BANK1 ] unsigned int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  quotient        2    9[BANK1 ] unsigned int 
  2931 ;;  counter         1   11[BANK1 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2    4[BANK1 ] unsigned int 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       4       0       0
  2942 ;;      Locals:         0       0       3       0       0
  2943 ;;      Temps:          0       0       1       0       0
  2944 ;;      Totals:         0       0       8       0       0
  2945 ;;Total ram usage:        8 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    5
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_sprintf
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function ___lwdiv
  2957  136D                     ___lwdiv:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2961  136D  1683               	bsf	3,5	;RP0=1, select bank1
  2962  136E  1303               	bcf	3,6	;RP1=0, select bank1
  2963  136F  01D0               	clrf	___lwdiv@quotient^(0+128)
  2964  1370  01D1               	clrf	(___lwdiv@quotient+1)^(0+128)
  2965  1371  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  2966  1372  044B               	iorwf	___lwdiv@divisor^(0+128),w
  2967  1373  1903               	skipnz
  2968  1374  2BA6               	goto	l2694
  2969  1375  01D2               	clrf	___lwdiv@counter^(0+128)
  2970  1376  0AD2               	incf	___lwdiv@counter^(0+128),f
  2971  1377                     l2682:	
  2972  1377  1BCC               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2973  1378  2B85               	goto	l2684
  2974  1379  3001               	movlw	1
  2975  137A                     u3215:	
  2976  137A  1003               	clrc
  2977  137B  0DCB               	rlf	___lwdiv@divisor^(0+128),f
  2978  137C  0DCC               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2979  137D  3EFF               	addlw	-1
  2980  137E  1D03               	skipz
  2981  137F  2B7A               	goto	u3215
  2982  1380  3001               	movlw	1
  2983  1381  00CF               	movwf	??___lwdiv^(0+128)
  2984  1382  084F               	movf	??___lwdiv^(0+128),w
  2985  1383  07D2               	addwf	___lwdiv@counter^(0+128),f
  2986  1384  2B77               	goto	l2682
  2987  1385                     l2684:	
  2988  1385  3001               	movlw	1
  2989  1386                     u3235:	
  2990  1386  1003               	clrc
  2991  1387  0DD0               	rlf	___lwdiv@quotient^(0+128),f
  2992  1388  0DD1               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2993  1389  3EFF               	addlw	-1
  2994  138A  1D03               	skipz
  2995  138B  2B86               	goto	u3235
  2996  138C  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  2997  138D  024E               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2998  138E  1D03               	skipz
  2999  138F  2B92               	goto	u3245
  3000  1390  084B               	movf	___lwdiv@divisor^(0+128),w
  3001  1391  024D               	subwf	___lwdiv@dividend^(0+128),w
  3002  1392                     u3245:	
  3003  1392  1C03               	skipc
  3004  1393  2B9B               	goto	l2690
  3005  1394  084B               	movf	___lwdiv@divisor^(0+128),w
  3006  1395  02CD               	subwf	___lwdiv@dividend^(0+128),f
  3007  1396  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3008  1397  1C03               	skipc
  3009  1398  03CE               	decf	(___lwdiv@dividend+1)^(0+128),f
  3010  1399  02CE               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3011  139A  1450               	bsf	___lwdiv@quotient^(0+128),0
  3012  139B                     l2690:	
  3013  139B  3001               	movlw	1
  3014  139C                     u3255:	
  3015  139C  1003               	clrc
  3016  139D  0CCC               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3017  139E  0CCB               	rrf	___lwdiv@divisor^(0+128),f
  3018  139F  3EFF               	addlw	-1
  3019  13A0  1D03               	skipz
  3020  13A1  2B9C               	goto	u3255
  3021  13A2  3001               	movlw	1
  3022  13A3  02D2               	subwf	___lwdiv@counter^(0+128),f
  3023  13A4  1D03               	btfss	3,2
  3024  13A5  2B85               	goto	l2684
  3025  13A6                     l2694:	
  3026  13A6  0851               	movf	(___lwdiv@quotient+1)^(0+128),w
  3027  13A7  01CC               	clrf	(?___lwdiv+1)^(0+128)
  3028  13A8  07CC               	addwf	(?___lwdiv+1)^(0+128),f
  3029  13A9  0850               	movf	___lwdiv@quotient^(0+128),w
  3030  13AA  01CB               	clrf	?___lwdiv^(0+128)
  3031  13AB  07CB               	addwf	?___lwdiv^(0+128),f
  3032  13AC  0008               	return
  3033  13AD                     __end_of___lwdiv:	
  3034                           
  3035                           	psect	text6
  3036  12C8                     __ptext6:	
  3037 ;; *************** function _USART_WriteString *****************
  3038 ;; Defined at:
  3039 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3042 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3043 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3044 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3045 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       0       2       0       0
  3058 ;;      Locals:         0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0
  3060 ;;      Totals:         0       0       2       0       0
  3061 ;;Total ram usage:        2 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    6
  3064 ;; This function calls:
  3065 ;;		_USART_WriteChar
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _USART_WriteString
  3073  12C8                     _USART_WriteString:	
  3074  12C8                     l2910:	
  3075                           ;usart.c: 54: while(*str != '\0')
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3079                           
  3080  12C8  1683               	bsf	3,5	;RP0=1, select bank1
  3081  12C9  1303               	bcf	3,6	;RP1=0, select bank1
  3082  12CA  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3083  12CB  1283               	bcf	3,5	;RP0=0, select bank0
  3084  12CC  1303               	bcf	3,6	;RP1=0, select bank0
  3085  12CD  00FF               	movwf	127
  3086  12CE  1683               	bsf	3,5	;RP0=1, select bank1
  3087  12CF  1303               	bcf	3,6	;RP1=0, select bank1
  3088  12D0  084C               	movf	USART_WriteString@str^(0+128),w
  3089  12D1  0084               	movwf	4
  3090  12D2  1283               	bcf	3,5	;RP0=0, select bank0
  3091  12D3  1303               	bcf	3,6	;RP1=0, select bank0
  3092  12D4  120A  158A  2000  160A  118A  	fcall	stringtab
  3093  12D9  3800               	iorlw	0
  3094  12DA  1903               	btfsc	3,2
  3095  12DB  0008               	return
  3096                           
  3097                           ;usart.c: 55: {
  3098                           ;usart.c: 56: USART_WriteChar(*str);
  3099  12DC  1683               	bsf	3,5	;RP0=1, select bank1
  3100  12DD  1303               	bcf	3,6	;RP1=0, select bank1
  3101  12DE  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3102  12DF  1283               	bcf	3,5	;RP0=0, select bank0
  3103  12E0  1303               	bcf	3,6	;RP1=0, select bank0
  3104  12E1  00FF               	movwf	127
  3105  12E2  1683               	bsf	3,5	;RP0=1, select bank1
  3106  12E3  1303               	bcf	3,6	;RP1=0, select bank1
  3107  12E4  084C               	movf	USART_WriteString@str^(0+128),w
  3108  12E5  0084               	movwf	4
  3109  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  3110  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  3111  12E8  120A  158A  2000  160A  118A  	fcall	stringtab
  3112  12ED  160A  118A  20B8  160A  118A  	fcall	_USART_WriteChar
  3113                           
  3114                           ;usart.c: 57: str++;
  3115  12F2  3001               	movlw	1
  3116  12F3  1683               	bsf	3,5	;RP0=1, select bank1
  3117  12F4  1303               	bcf	3,6	;RP1=0, select bank1
  3118  12F5  07CC               	addwf	USART_WriteString@str^(0+128),f
  3119  12F6  1803               	skipnc
  3120  12F7  0ACD               	incf	(USART_WriteString@str+1)^(0+128),f
  3121  12F8  2AC8               	goto	l2910
  3122  12F9                     __end_of_USART_WriteString:	
  3123                           
  3124                           	psect	text7
  3125  10B8                     __ptext7:	
  3126 ;; *************** function _USART_WriteChar *****************
  3127 ;; Defined at:
  3128 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  byte            1    wreg     unsigned char 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  byte            1    4[BANK1 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       1       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       1       0       0
  3146 ;;Total ram usage:        1 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    5
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_USART_WriteString
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _USART_WriteChar
  3158  10B8                     _USART_WriteChar:	
  3159                           
  3160                           ;incstack = 0
  3161                           ; Regs used in _USART_WriteChar: [wreg]
  3162                           ;USART_WriteChar@byte stored from wreg
  3163  10B8  1683               	bsf	3,5	;RP0=1, select bank1
  3164  10B9  1303               	bcf	3,6	;RP1=0, select bank1
  3165  10BA  00CB               	movwf	USART_WriteChar@byte^(0+128)
  3166  10BB                     l229:	
  3167                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3168                           
  3169  10BB  1283               	bcf	3,5	;RP0=0, select bank0
  3170  10BC  1E0C               	btfss	12,4	;volatile
  3171  10BD  28BB               	goto	l229
  3172                           
  3173                           ;usart.c: 47: TXREG = byte;
  3174  10BE  1683               	bsf	3,5	;RP0=1, select bank1
  3175  10BF  1303               	bcf	3,6	;RP1=0, select bank1
  3176  10C0  084B               	movf	USART_WriteChar@byte^(0+128),w
  3177  10C1  1283               	bcf	3,5	;RP0=0, select bank0
  3178  10C2  1303               	bcf	3,6	;RP1=0, select bank0
  3179  10C3  0099               	movwf	25	;volatile
  3180  10C4  0008               	return
  3181  10C5                     __end_of_USART_WriteChar:	
  3182                           
  3183                           	psect	text8
  3184  13AD                     __ptext8:	
  3185 ;; *************** function _USART_Init *****************
  3186 ;; Defined at:
  3187 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  BaudRate        4   19[BANK1 ] long 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;		None               void
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       4       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       4       0       0
  3204 ;;      Totals:         0       0       8       0       0
  3205 ;;Total ram usage:        8 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    6
  3208 ;; This function calls:
  3209 ;;		___aldiv
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _USART_Init
  3217  13AD                     _USART_Init:	
  3218                           
  3219                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3223  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  3224  13AE  1303               	bcf	3,6	;RP1=0, select bank1
  3225  13AF  085A               	movf	USART_Init@BaudRate^(0+128),w
  3226  13B0  00DE               	movwf	??_USART_Init^(0+128)
  3227  13B1  085B               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3228  13B2  00DF               	movwf	(??_USART_Init^(0+128)+1)
  3229  13B3  085C               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3230  13B4  00E0               	movwf	(??_USART_Init^(0+128)+2)
  3231  13B5  085D               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3232  13B6  00E1               	movwf	(??_USART_Init^(0+128)+3)
  3233  13B7  3004               	movlw	4
  3234  13B8                     u3665:	
  3235  13B8  1003               	clrc
  3236  13B9  0DDE               	rlf	??_USART_Init^(0+128),f
  3237  13BA  0DDF               	rlf	(??_USART_Init^(0+128)+1),f
  3238  13BB  0DE0               	rlf	(??_USART_Init^(0+128)+2),f
  3239  13BC  0DE1               	rlf	(??_USART_Init^(0+128)+3),f
  3240  13BD  3EFF               	addlw	-1
  3241  13BE  1D03               	skipz
  3242  13BF  2BB8               	goto	u3665
  3243  13C0  0861               	movf	(??_USART_Init+3)^(0+128),w
  3244  13C1  00CE               	movwf	(___aldiv@divisor+3)^(0+128)
  3245  13C2  0860               	movf	(??_USART_Init+2)^(0+128),w
  3246  13C3  00CD               	movwf	(___aldiv@divisor+2)^(0+128)
  3247  13C4  085F               	movf	(??_USART_Init+1)^(0+128),w
  3248  13C5  00CC               	movwf	(___aldiv@divisor+1)^(0+128)
  3249  13C6  085E               	movf	??_USART_Init^(0+128),w
  3250  13C7  00CB               	movwf	___aldiv@divisor^(0+128)
  3251  13C8  3001               	movlw	1
  3252  13C9  00D2               	movwf	(___aldiv@dividend+3)^(0+128)
  3253  13CA  3019               	movlw	25
  3254  13CB  00D1               	movwf	(___aldiv@dividend+2)^(0+128)
  3255  13CC  3040               	movlw	64
  3256  13CD  00D0               	movwf	(___aldiv@dividend+1)^(0+128)
  3257  13CE  3000               	movlw	0
  3258  13CF  00CF               	movwf	___aldiv@dividend^(0+128)
  3259  13D0  160A  118A  25B2   	fcall	___aldiv
  3260  13D3  1683               	bsf	3,5	;RP0=1, select bank1
  3261  13D4  1303               	bcf	3,6	;RP1=0, select bank1
  3262  13D5  084B               	movf	?___aldiv^(0+128),w
  3263  13D6  3EFF               	addlw	255
  3264  13D7  0099               	movwf	25	;volatile
  3265                           
  3266                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3267  13D8  1398               	bcf	24,7	;volatile
  3268                           
  3269                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3270  13D9  1318               	bcf	24,6	;volatile
  3271                           
  3272                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3273  13DA  1698               	bsf	24,5	;volatile
  3274                           
  3275                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3276  13DB  1218               	bcf	24,4	;volatile
  3277                           
  3278                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3279  13DC  1518               	bsf	24,2	;volatile
  3280                           
  3281                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3282  13DD  1498               	bsf	24,1	;volatile
  3283                           
  3284                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3285  13DE  1018               	bcf	24,0	;volatile
  3286                           
  3287                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3288  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  3289  13E0  1303               	bcf	3,6	;RP1=0, select bank0
  3290  13E1  1798               	bsf	24,7	;volatile
  3291                           
  3292                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3293  13E2  1318               	bcf	24,6	;volatile
  3294                           
  3295                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3296  13E3  1298               	bcf	24,5	;volatile
  3297                           
  3298                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3299  13E4  1618               	bsf	24,4	;volatile
  3300                           
  3301                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3302  13E5  1198               	bcf	24,3	;volatile
  3303                           
  3304                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3305  13E6  1118               	bcf	24,2	;volatile
  3306                           
  3307                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3308  13E7  1098               	bcf	24,1	;volatile
  3309                           
  3310                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3311  13E8  1018               	bcf	24,0	;volatile
  3312                           
  3313                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3314  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  3315  13EA  1303               	bcf	3,6	;RP1=0, select bank1
  3316  13EB  120C               	bcf	12,4	;volatile
  3317                           
  3318                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3319  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  3320  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  3321  13EE  120C               	bcf	12,4	;volatile
  3322                           
  3323                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3324  13EF  1683               	bsf	3,5	;RP0=1, select bank1
  3325  13F0  1303               	bcf	3,6	;RP1=0, select bank1
  3326  13F1  168C               	bsf	12,5	;volatile
  3327                           
  3328                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3329  13F2  1283               	bcf	3,5	;RP0=0, select bank0
  3330  13F3  1303               	bcf	3,6	;RP1=0, select bank0
  3331  13F4  128C               	bcf	12,5	;volatile
  3332  13F5  0008               	return
  3333  13F6                     __end_of_USART_Init:	
  3334                           
  3335                           	psect	text9
  3336  15B2                     __ptext9:	
  3337 ;; *************** function ___aldiv *****************
  3338 ;; Defined at:
  3339 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  divisor         4    4[BANK1 ] long 
  3342 ;;  dividend        4    8[BANK1 ] long 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  quotient        4   15[BANK1 ] long 
  3345 ;;  sign            1   14[BANK1 ] unsigned char 
  3346 ;;  counter         1   13[BANK1 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  4    4[BANK1 ] long 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       8       0       0
  3357 ;;      Locals:         0       0       6       0       0
  3358 ;;      Temps:          0       0       1       0       0
  3359 ;;      Totals:         0       0      15       0       0
  3360 ;;Total ram usage:       15 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    5
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_USART_Init
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function ___aldiv
  3372  15B2                     ___aldiv:	
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3376  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  3377  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  3378  15B4  01D5               	clrf	___aldiv@sign^(0+128)
  3379  15B5  1FCE               	btfss	(___aldiv@divisor+3)^(0+128),7
  3380  15B6  2DC4               	goto	l655
  3381  15B7  09CB               	comf	___aldiv@divisor^(0+128),f
  3382  15B8  09CC               	comf	(___aldiv@divisor+1)^(0+128),f
  3383  15B9  09CD               	comf	(___aldiv@divisor+2)^(0+128),f
  3384  15BA  09CE               	comf	(___aldiv@divisor+3)^(0+128),f
  3385  15BB  0ACB               	incf	___aldiv@divisor^(0+128),f
  3386  15BC  1903               	skipnz
  3387  15BD  0ACC               	incf	(___aldiv@divisor+1)^(0+128),f
  3388  15BE  1903               	skipnz
  3389  15BF  0ACD               	incf	(___aldiv@divisor+2)^(0+128),f
  3390  15C0  1903               	skipnz
  3391  15C1  0ACE               	incf	(___aldiv@divisor+3)^(0+128),f
  3392  15C2  01D5               	clrf	___aldiv@sign^(0+128)
  3393  15C3  0AD5               	incf	___aldiv@sign^(0+128),f
  3394  15C4                     l655:	
  3395  15C4  1FD2               	btfss	(___aldiv@dividend+3)^(0+128),7
  3396  15C5  2DD5               	goto	l2548
  3397  15C6  09CF               	comf	___aldiv@dividend^(0+128),f
  3398  15C7  09D0               	comf	(___aldiv@dividend+1)^(0+128),f
  3399  15C8  09D1               	comf	(___aldiv@dividend+2)^(0+128),f
  3400  15C9  09D2               	comf	(___aldiv@dividend+3)^(0+128),f
  3401  15CA  0ACF               	incf	___aldiv@dividend^(0+128),f
  3402  15CB  1903               	skipnz
  3403  15CC  0AD0               	incf	(___aldiv@dividend+1)^(0+128),f
  3404  15CD  1903               	skipnz
  3405  15CE  0AD1               	incf	(___aldiv@dividend+2)^(0+128),f
  3406  15CF  1903               	skipnz
  3407  15D0  0AD2               	incf	(___aldiv@dividend+3)^(0+128),f
  3408  15D1  3001               	movlw	1
  3409  15D2  00D3               	movwf	??___aldiv^(0+128)
  3410  15D3  0853               	movf	??___aldiv^(0+128),w
  3411  15D4  06D5               	xorwf	___aldiv@sign^(0+128),f
  3412  15D5                     l2548:	
  3413  15D5  3000               	movlw	0
  3414  15D6  00D9               	movwf	(___aldiv@quotient+3)^(0+128)
  3415  15D7  3000               	movlw	0
  3416  15D8  00D8               	movwf	(___aldiv@quotient+2)^(0+128)
  3417  15D9  3000               	movlw	0
  3418  15DA  00D7               	movwf	(___aldiv@quotient+1)^(0+128)
  3419  15DB  3000               	movlw	0
  3420  15DC  00D6               	movwf	___aldiv@quotient^(0+128)
  3421  15DD  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3422  15DE  044D               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3423  15DF  044C               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3424  15E0  044B               	iorwf	___aldiv@divisor^(0+128),w
  3425  15E1  1903               	skipnz
  3426  15E2  2E2A               	goto	l2570
  3427  15E3  01D4               	clrf	___aldiv@counter^(0+128)
  3428  15E4  0AD4               	incf	___aldiv@counter^(0+128),f
  3429  15E5                     l2556:	
  3430  15E5  1BCE               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3431  15E6  2DF5               	goto	l2558
  3432  15E7  3001               	movlw	1
  3433  15E8  00D3               	movwf	??___aldiv^(0+128)
  3434  15E9                     u2895:	
  3435  15E9  1003               	clrc
  3436  15EA  0DCB               	rlf	___aldiv@divisor^(0+128),f
  3437  15EB  0DCC               	rlf	(___aldiv@divisor+1)^(0+128),f
  3438  15EC  0DCD               	rlf	(___aldiv@divisor+2)^(0+128),f
  3439  15ED  0DCE               	rlf	(___aldiv@divisor+3)^(0+128),f
  3440  15EE  0BD3               	decfsz	??___aldiv^(0+128),f
  3441  15EF  2DE9               	goto	u2895
  3442  15F0  3001               	movlw	1
  3443  15F1  00D3               	movwf	??___aldiv^(0+128)
  3444  15F2  0853               	movf	??___aldiv^(0+128),w
  3445  15F3  07D4               	addwf	___aldiv@counter^(0+128),f
  3446  15F4  2DE5               	goto	l2556
  3447  15F5                     l2558:	
  3448  15F5  3001               	movlw	1
  3449  15F6  00D3               	movwf	??___aldiv^(0+128)
  3450  15F7                     u2915:	
  3451  15F7  1003               	clrc
  3452  15F8  0DD6               	rlf	___aldiv@quotient^(0+128),f
  3453  15F9  0DD7               	rlf	(___aldiv@quotient+1)^(0+128),f
  3454  15FA  0DD8               	rlf	(___aldiv@quotient+2)^(0+128),f
  3455  15FB  0DD9               	rlf	(___aldiv@quotient+3)^(0+128),f
  3456  15FC  0BD3               	decfsz	??___aldiv^(0+128),f
  3457  15FD  2DF7               	goto	u2915
  3458  15FE  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3459  15FF  0252               	subwf	(___aldiv@dividend+3)^(0+128),w
  3460  1600  1D03               	skipz
  3461  1601  2E0C               	goto	u2925
  3462  1602  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3463  1603  0251               	subwf	(___aldiv@dividend+2)^(0+128),w
  3464  1604  1D03               	skipz
  3465  1605  2E0C               	goto	u2925
  3466  1606  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3467  1607  0250               	subwf	(___aldiv@dividend+1)^(0+128),w
  3468  1608  1D03               	skipz
  3469  1609  2E0C               	goto	u2925
  3470  160A  084B               	movf	___aldiv@divisor^(0+128),w
  3471  160B  024F               	subwf	___aldiv@dividend^(0+128),w
  3472  160C                     u2925:	
  3473  160C  1C03               	skipc
  3474  160D  2E1D               	goto	l2566
  3475  160E  084B               	movf	___aldiv@divisor^(0+128),w
  3476  160F  02CF               	subwf	___aldiv@dividend^(0+128),f
  3477  1610  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3478  1611  1C03               	skipc
  3479  1612  0F4C               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3480  1613  02D0               	subwf	(___aldiv@dividend+1)^(0+128),f
  3481  1614  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3482  1615  1C03               	skipc
  3483  1616  0F4D               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3484  1617  02D1               	subwf	(___aldiv@dividend+2)^(0+128),f
  3485  1618  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3486  1619  1C03               	skipc
  3487  161A  0F4E               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3488  161B  02D2               	subwf	(___aldiv@dividend+3)^(0+128),f
  3489  161C  1456               	bsf	___aldiv@quotient^(0+128),0
  3490  161D                     l2566:	
  3491  161D  3001               	movlw	1
  3492  161E                     u2935:	
  3493  161E  1003               	clrc
  3494  161F  0CCE               	rrf	(___aldiv@divisor+3)^(0+128),f
  3495  1620  0CCD               	rrf	(___aldiv@divisor+2)^(0+128),f
  3496  1621  0CCC               	rrf	(___aldiv@divisor+1)^(0+128),f
  3497  1622  0CCB               	rrf	___aldiv@divisor^(0+128),f
  3498  1623  3EFF               	addlw	-1
  3499  1624  1D03               	skipz
  3500  1625  2E1E               	goto	u2935
  3501  1626  3001               	movlw	1
  3502  1627  02D4               	subwf	___aldiv@counter^(0+128),f
  3503  1628  1D03               	btfss	3,2
  3504  1629  2DF5               	goto	l2558
  3505  162A                     l2570:	
  3506  162A  0855               	movf	___aldiv@sign^(0+128),w
  3507  162B  1903               	btfsc	3,2
  3508  162C  2E38               	goto	l2574
  3509  162D  09D6               	comf	___aldiv@quotient^(0+128),f
  3510  162E  09D7               	comf	(___aldiv@quotient+1)^(0+128),f
  3511  162F  09D8               	comf	(___aldiv@quotient+2)^(0+128),f
  3512  1630  09D9               	comf	(___aldiv@quotient+3)^(0+128),f
  3513  1631  0AD6               	incf	___aldiv@quotient^(0+128),f
  3514  1632  1903               	skipnz
  3515  1633  0AD7               	incf	(___aldiv@quotient+1)^(0+128),f
  3516  1634  1903               	skipnz
  3517  1635  0AD8               	incf	(___aldiv@quotient+2)^(0+128),f
  3518  1636  1903               	skipnz
  3519  1637  0AD9               	incf	(___aldiv@quotient+3)^(0+128),f
  3520  1638                     l2574:	
  3521  1638  0859               	movf	(___aldiv@quotient+3)^(0+128),w
  3522  1639  00CE               	movwf	(?___aldiv+3)^(0+128)
  3523  163A  0858               	movf	(___aldiv@quotient+2)^(0+128),w
  3524  163B  00CD               	movwf	(?___aldiv+2)^(0+128)
  3525  163C  0857               	movf	(___aldiv@quotient+1)^(0+128),w
  3526  163D  00CC               	movwf	(?___aldiv+1)^(0+128)
  3527  163E  0856               	movf	___aldiv@quotient^(0+128),w
  3528  163F  00CB               	movwf	?___aldiv^(0+128)
  3529  1640  0008               	return
  3530  1641                     __end_of___aldiv:	
  3531                           
  3532                           	psect	text10
  3533  109D                     __ptext10:	
  3534 ;; *************** function _TIMER0_Set *****************
  3535 ;; Defined at:
  3536 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  contagens       1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  contagens       1    4[BANK1 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;		None               void
  3543 ;; Registers used:
  3544 ;;		wreg
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       0       0       0
  3551 ;;      Locals:         0       0       1       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       0       1       0       0
  3554 ;;Total ram usage:        1 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    5
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function _TIMER0_Set
  3566  109D                     _TIMER0_Set:	
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _TIMER0_Set: [wreg]
  3570                           ;TIMER0_Set@contagens stored from wreg
  3571  109D  1683               	bsf	3,5	;RP0=1, select bank1
  3572  109E  1303               	bcf	3,6	;RP1=0, select bank1
  3573  109F  00CB               	movwf	TIMER0_Set@contagens^(0+128)
  3574                           
  3575                           ;timers.c: 22: TMR0 = contagens;
  3576  10A0  084B               	movf	TIMER0_Set@contagens^(0+128),w
  3577  10A1  1283               	bcf	3,5	;RP0=0, select bank0
  3578  10A2  1303               	bcf	3,6	;RP1=0, select bank0
  3579  10A3  0081               	movwf	1	;volatile
  3580  10A4  0008               	return
  3581  10A5                     __end_of_TIMER0_Set:	
  3582                           
  3583                           	psect	text11
  3584  10AD                     __ptext11:	
  3585 ;; *************** function _TIMER0_Init *****************
  3586 ;; Defined at:
  3587 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		None
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3601 ;;      Params:         0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    5
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _TIMER0_Init
  3617  10AD                     _TIMER0_Init:	
  3618                           
  3619                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in _TIMER0_Init: []
  3623  10AD  1683               	bsf	3,5	;RP0=1, select bank1
  3624  10AE  1303               	bcf	3,6	;RP1=0, select bank1
  3625  10AF  1281               	bcf	1,5	;volatile
  3626                           
  3627                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3628  10B0  1201               	bcf	1,4	;volatile
  3629                           
  3630                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3631  10B1  1181               	bcf	1,3	;volatile
  3632                           
  3633                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3634  10B2  1501               	bsf	1,2	;volatile
  3635                           
  3636                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3637  10B3  1481               	bsf	1,1	;volatile
  3638                           
  3639                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3640  10B4  1401               	bsf	1,0	;volatile
  3641                           
  3642                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3643  10B5  110B               	bcf	11,2	;volatile
  3644                           
  3645                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3646  10B6  168B               	bsf	11,5	;volatile
  3647  10B7  0008               	return
  3648  10B8                     __end_of_TIMER0_Init:	
  3649                           
  3650                           	psect	text12
  3651  1225                     __ptext12:	
  3652 ;; *************** function _PWM_Init *****************
  3653 ;; Defined at:
  3654 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       0       0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    5
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _PWM_Init
  3684  1225                     _PWM_Init:	
  3685                           
  3686                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _PWM_Init: [wreg]
  3690  1225  1283               	bcf	3,5	;RP0=0, select bank0
  3691  1226  1303               	bcf	3,6	;RP1=0, select bank0
  3692  1227  1492               	bsf	18,1	;volatile
  3693                           
  3694                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3695  1228  1012               	bcf	18,0	;volatile
  3696                           
  3697                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3698  1229  1312               	bcf	18,6	;volatile
  3699                           
  3700                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3701  122A  1292               	bcf	18,5	;volatile
  3702                           
  3703                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3704  122B  1212               	bcf	18,4	;volatile
  3705                           
  3706                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3707  122C  1192               	bcf	18,3	;volatile
  3708                           
  3709                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3710  122D  1512               	bsf	18,2	;volatile
  3711                           
  3712                           ;pwm.c: 27: PR2 = 255;
  3713  122E  30FF               	movlw	255
  3714  122F  1683               	bsf	3,5	;RP0=1, select bank1
  3715  1230  1303               	bcf	3,6	;RP1=0, select bank1
  3716  1231  0092               	movwf	18	;volatile
  3717                           
  3718                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3719  1232  1283               	bcf	3,5	;RP0=0, select bank0
  3720  1233  1303               	bcf	3,6	;RP1=0, select bank0
  3721  1234  1597               	bsf	23,3	;volatile
  3722                           
  3723                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3724  1235  1517               	bsf	23,2	;volatile
  3725                           
  3726                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3727  1236  1497               	bsf	23,1	;volatile
  3728                           
  3729                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3730  1237  1417               	bsf	23,0	;volatile
  3731                           
  3732                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3733  1238  1683               	bsf	3,5	;RP0=1, select bank1
  3734  1239  1303               	bcf	3,6	;RP1=0, select bank1
  3735  123A  150C               	bsf	12,2	;volatile
  3736                           
  3737                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3738  123B  1283               	bcf	3,5	;RP0=0, select bank0
  3739  123C  1303               	bcf	3,6	;RP1=0, select bank0
  3740  123D  110C               	bcf	12,2	;volatile
  3741                           
  3742                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3743  123E  159D               	bsf	29,3	;volatile
  3744                           
  3745                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3746  123F  151D               	bsf	29,2	;volatile
  3747                           
  3748                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3749  1240  149D               	bsf	29,1	;volatile
  3750                           
  3751                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3752  1241  141D               	bsf	29,0	;volatile
  3753                           
  3754                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3755  1242  1683               	bsf	3,5	;RP0=1, select bank1
  3756  1243  1303               	bcf	3,6	;RP1=0, select bank1
  3757  1244  140D               	bsf	13,0	;volatile
  3758                           
  3759                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3760  1245  1283               	bcf	3,5	;RP0=0, select bank0
  3761  1246  1303               	bcf	3,6	;RP1=0, select bank0
  3762  1247  100D               	bcf	13,0	;volatile
  3763  1248  0008               	return
  3764  1249                     __end_of_PWM_Init:	
  3765                           
  3766                           	psect	text13
  3767  11BE                     __ptext13:	
  3768 ;; *************** function _PWM_DutyCycle2 *****************
  3769 ;; Defined at:
  3770 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  valor           2    4[BANK1 ] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;		None               void
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       0       2       0       0
  3785 ;;      Locals:         0       0       0       0       0
  3786 ;;      Temps:          0       0       2       0       0
  3787 ;;      Totals:         0       0       4       0       0
  3788 ;;Total ram usage:        4 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    5
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _PWM_DutyCycle2
  3800  11BE                     _PWM_DutyCycle2:	
  3801                           
  3802                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3806  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  3807  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  3808  11C0  084C               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3809  11C1  00CE               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3810  11C2  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  3811  11C3  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  3812  11C4  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3813  11C5  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3814  11C6  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  3815  11C7  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3816  11C8  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3817  11C9  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  3818  11CA  084D               	movf	??_PWM_DutyCycle2^(0+128),w
  3819  11CB  1283               	bcf	3,5	;RP0=0, select bank0
  3820  11CC  1303               	bcf	3,6	;RP1=0, select bank0
  3821  11CD  009B               	movwf	27	;volatile
  3822                           
  3823                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3824  11CE  1683               	bsf	3,5	;RP0=1, select bank1
  3825  11CF  1303               	bcf	3,6	;RP1=0, select bank1
  3826  11D0  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  3827  11D1  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  3828  11D2  3003               	movlw	3
  3829  11D3                     u3635:	
  3830  11D3  1003               	clrc
  3831  11D4  0DCD               	rlf	??_PWM_DutyCycle2^(0+128),f
  3832  11D5  3EFF               	addlw	-1
  3833  11D6  1D03               	skipz
  3834  11D7  29D3               	goto	u3635
  3835  11D8  1003               	clrc
  3836  11D9  0D4D               	rlf	??_PWM_DutyCycle2^(0+128),w
  3837  11DA  380C               	iorlw	12
  3838  11DB  1283               	bcf	3,5	;RP0=0, select bank0
  3839  11DC  1303               	bcf	3,6	;RP1=0, select bank0
  3840  11DD  009D               	movwf	29	;volatile
  3841  11DE  0008               	return
  3842  11DF                     __end_of_PWM_DutyCycle2:	
  3843                           
  3844                           	psect	text14
  3845  119D                     __ptext14:	
  3846 ;; *************** function _PWM_DutyCycle1 *****************
  3847 ;; Defined at:
  3848 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  valor           2    4[BANK1 ] int 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       2       0       0
  3863 ;;      Locals:         0       0       0       0       0
  3864 ;;      Temps:          0       0       2       0       0
  3865 ;;      Totals:         0       0       4       0       0
  3866 ;;Total ram usage:        4 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    5
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _PWM_DutyCycle1
  3878  119D                     _PWM_DutyCycle1:	
  3879                           
  3880                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3884  119D  1683               	bsf	3,5	;RP0=1, select bank1
  3885  119E  1303               	bcf	3,6	;RP1=0, select bank1
  3886  119F  084C               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3887  11A0  00CE               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3888  11A1  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  3889  11A2  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  3890  11A3  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3891  11A4  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3892  11A5  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  3893  11A6  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3894  11A7  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3895  11A8  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  3896  11A9  084D               	movf	??_PWM_DutyCycle1^(0+128),w
  3897  11AA  1283               	bcf	3,5	;RP0=0, select bank0
  3898  11AB  1303               	bcf	3,6	;RP1=0, select bank0
  3899  11AC  0095               	movwf	21	;volatile
  3900                           
  3901                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3902  11AD  1683               	bsf	3,5	;RP0=1, select bank1
  3903  11AE  1303               	bcf	3,6	;RP1=0, select bank1
  3904  11AF  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  3905  11B0  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  3906  11B1  3003               	movlw	3
  3907  11B2                     u3695:	
  3908  11B2  1003               	clrc
  3909  11B3  0DCD               	rlf	??_PWM_DutyCycle1^(0+128),f
  3910  11B4  3EFF               	addlw	-1
  3911  11B5  1D03               	skipz
  3912  11B6  29B2               	goto	u3695
  3913  11B7  1003               	clrc
  3914  11B8  0D4D               	rlf	??_PWM_DutyCycle1^(0+128),w
  3915  11B9  380C               	iorlw	12
  3916  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  3917  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  3918  11BC  0097               	movwf	23	;volatile
  3919  11BD  0008               	return
  3920  11BE                     __end_of_PWM_DutyCycle1:	
  3921                           
  3922                           	psect	text15
  3923  1297                     __ptext15:	
  3924 ;; *************** function _LCD_WriteString *****************
  3925 ;; Defined at:
  3926 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  3929 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3930 ;;		 -> STR_13(17), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;		None               void
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       2       0       0
  3943 ;;      Locals:         0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       0       2       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    6
  3949 ;; This function calls:
  3950 ;;		_LCD_WriteData
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _LCD_WriteString
  3958  1297                     _LCD_WriteString:	
  3959  1297                     l3030:	
  3960                           ;lcd.c: 63: while(*Str != '\0')
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3964                           
  3965  1297  1683               	bsf	3,5	;RP0=1, select bank1
  3966  1298  1303               	bcf	3,6	;RP1=0, select bank1
  3967  1299  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3968  129A  1283               	bcf	3,5	;RP0=0, select bank0
  3969  129B  1303               	bcf	3,6	;RP1=0, select bank0
  3970  129C  00FF               	movwf	127
  3971  129D  1683               	bsf	3,5	;RP0=1, select bank1
  3972  129E  1303               	bcf	3,6	;RP1=0, select bank1
  3973  129F  084D               	movf	LCD_WriteString@Str^(0+128),w
  3974  12A0  0084               	movwf	4
  3975  12A1  1283               	bcf	3,5	;RP0=0, select bank0
  3976  12A2  1303               	bcf	3,6	;RP1=0, select bank0
  3977  12A3  120A  158A  2000  160A  118A  	fcall	stringtab
  3978  12A8  3800               	iorlw	0
  3979  12A9  1903               	btfsc	3,2
  3980  12AA  0008               	return
  3981                           
  3982                           ;lcd.c: 64: {
  3983                           ;lcd.c: 65: LCD_WriteData(*Str);
  3984  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  3985  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  3986  12AD  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  3987  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  3988  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  3989  12B0  00FF               	movwf	127
  3990  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  3991  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  3992  12B3  084D               	movf	LCD_WriteString@Str^(0+128),w
  3993  12B4  0084               	movwf	4
  3994  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  3995  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  3996  12B7  120A  158A  2000  160A  118A  	fcall	stringtab
  3997  12BC  160A  118A  2112  160A  118A  	fcall	_LCD_WriteData
  3998                           
  3999                           ;lcd.c: 66: Str++;
  4000  12C1  3001               	movlw	1
  4001  12C2  1683               	bsf	3,5	;RP0=1, select bank1
  4002  12C3  1303               	bcf	3,6	;RP1=0, select bank1
  4003  12C4  07CD               	addwf	LCD_WriteString@Str^(0+128),f
  4004  12C5  1803               	skipnc
  4005  12C6  0ACE               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4006  12C7  2A97               	goto	l3030
  4007  12C8                     __end_of_LCD_WriteString:	
  4008                           
  4009                           	psect	text16
  4010  1112                     __ptext16:	
  4011 ;; *************** function _LCD_WriteData *****************
  4012 ;; Defined at:
  4013 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  Byte            1    wreg     unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  Byte            1    5[BANK1 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;		None               void
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         0       0       0       0       0
  4028 ;;      Locals:         0       0       1       0       0
  4029 ;;      Temps:          0       0       1       0       0
  4030 ;;      Totals:         0       0       2       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    5
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_LCD_WriteString
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _LCD_WriteData
  4043  1112                     _LCD_WriteData:	
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _LCD_WriteData: [wreg]
  4047                           ;LCD_WriteData@Byte stored from wreg
  4048  1112  1683               	bsf	3,5	;RP0=1, select bank1
  4049  1113  1303               	bcf	3,6	;RP1=0, select bank1
  4050  1114  00CC               	movwf	LCD_WriteData@Byte^(0+128)
  4051                           
  4052                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4053  1115  1283               	bcf	3,5	;RP0=0, select bank0
  4054  1116  1303               	bcf	3,6	;RP1=0, select bank0
  4055  1117  1409               	bsf	9,0	;volatile
  4056                           
  4057                           ;lcd.c: 51: PORTD = Byte;
  4058  1118  1683               	bsf	3,5	;RP0=1, select bank1
  4059  1119  1303               	bcf	3,6	;RP1=0, select bank1
  4060  111A  084C               	movf	LCD_WriteData@Byte^(0+128),w
  4061  111B  1283               	bcf	3,5	;RP0=0, select bank0
  4062  111C  1303               	bcf	3,6	;RP1=0, select bank0
  4063  111D  0088               	movwf	8	;volatile
  4064                           
  4065                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4066  111E  1489               	bsf	9,1	;volatile
  4067                           
  4068                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4069  111F  303D               	movlw	61
  4070  1120  1683               	bsf	3,5	;RP0=1, select bank1
  4071  1121  1303               	bcf	3,6	;RP1=0, select bank1
  4072  1122  00CB               	movwf	??_LCD_WriteData^(0+128)
  4073  1123                     u4167:	
  4074  1123  0BCB               	decfsz	??_LCD_WriteData^(0+128),f
  4075  1124  2923               	goto	u4167
  4076                           
  4077                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4078  1125  1283               	bcf	3,5	;RP0=0, select bank0
  4079  1126  1303               	bcf	3,6	;RP1=0, select bank0
  4080  1127  1089               	bcf	9,1	;volatile
  4081  1128  0008               	return
  4082  1129                     __end_of_LCD_WriteData:	
  4083                           
  4084                           	psect	text17
  4085  14BB                     __ptext17:	
  4086 ;; *************** function _LCD_Init *****************
  4087 ;; Defined at:
  4088 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0
  4104 ;;      Temps:          0       0       2       0       0
  4105 ;;      Totals:         0       0       2       0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    6
  4109 ;; This function calls:
  4110 ;;		_LCD_WriteCmd
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _LCD_Init
  4118  14BB                     _LCD_Init:	
  4119                           
  4120                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4124  14BB  1683               	bsf	3,5	;RP0=1, select bank1
  4125  14BC  1303               	bcf	3,6	;RP1=0, select bank1
  4126  14BD  119F               	bcf	31,3	;volatile
  4127                           
  4128                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4129  14BE  151F               	bsf	31,2	;volatile
  4130                           
  4131                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4132  14BF  109F               	bcf	31,1	;volatile
  4133                           
  4134                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4135  14C0  101F               	bcf	31,0	;volatile
  4136                           
  4137                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4138  14C1  305A               	movlw	90
  4139  14C2  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4140  14C3  30C3               	movlw	195
  4141  14C4  00CD               	movwf	??_LCD_Init^(0+128)
  4142  14C5                     u4177:	
  4143  14C5  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4144  14C6  2CC5               	goto	u4177
  4145  14C7  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4146  14C8  2CC5               	goto	u4177
  4147                           
  4148                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4149  14C9  3030               	movlw	48
  4150  14CA  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4151                           
  4152                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4153  14CF  3018               	movlw	24
  4154  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  4155  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  4156  14D2  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4157  14D3  30EF               	movlw	239
  4158  14D4  00CD               	movwf	??_LCD_Init^(0+128)
  4159  14D5                     u4187:	
  4160  14D5  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4161  14D6  2CD5               	goto	u4187
  4162  14D7  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4163  14D8  2CD5               	goto	u4187
  4164                           
  4165                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4166  14D9  3030               	movlw	48
  4167  14DA  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4168                           
  4169                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4170  14DF  3099               	movlw	153
  4171  14E0  1683               	bsf	3,5	;RP0=1, select bank1
  4172  14E1  1303               	bcf	3,6	;RP1=0, select bank1
  4173  14E2  00CD               	movwf	??_LCD_Init^(0+128)
  4174  14E3                     u4197:	
  4175  14E3  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4176  14E4  2CE3               	goto	u4197
  4177                           
  4178                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4179  14E5  3030               	movlw	48
  4180  14E6  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4181                           
  4182                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4183  14EB  303D               	movlw	61
  4184  14EC  1683               	bsf	3,5	;RP0=1, select bank1
  4185  14ED  1303               	bcf	3,6	;RP1=0, select bank1
  4186  14EE  00CD               	movwf	??_LCD_Init^(0+128)
  4187  14EF                     u4207:	
  4188  14EF  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4189  14F0  2CEF               	goto	u4207
  4190                           
  4191                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4192  14F1  3038               	movlw	56
  4193  14F2  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4194                           
  4195                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4196  14F7  303D               	movlw	61
  4197  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  4198  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4199  14FA  00CD               	movwf	??_LCD_Init^(0+128)
  4200  14FB                     u4217:	
  4201  14FB  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4202  14FC  2CFB               	goto	u4217
  4203                           
  4204                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4205  14FD  3001               	movlw	1
  4206  14FE  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4207                           
  4208                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4209  1503  300C               	movlw	12
  4210  1504  1683               	bsf	3,5	;RP0=1, select bank1
  4211  1505  1303               	bcf	3,6	;RP1=0, select bank1
  4212  1506  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4213  1507  30F7               	movlw	247
  4214  1508  00CD               	movwf	??_LCD_Init^(0+128)
  4215  1509                     u4227:	
  4216  1509  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4217  150A  2D09               	goto	u4227
  4218  150B  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4219  150C  2D09               	goto	u4227
  4220                           
  4221                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4222  150D  300C               	movlw	12
  4223  150E  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4224                           
  4225                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4226  1513  303D               	movlw	61
  4227  1514  1683               	bsf	3,5	;RP0=1, select bank1
  4228  1515  1303               	bcf	3,6	;RP1=0, select bank1
  4229  1516  00CD               	movwf	??_LCD_Init^(0+128)
  4230  1517                     u4237:	
  4231  1517  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4232  1518  2D17               	goto	u4237
  4233                           
  4234                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4235  1519  3006               	movlw	6
  4236  151A  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4237                           
  4238                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4239  151F  303D               	movlw	61
  4240  1520  1683               	bsf	3,5	;RP0=1, select bank1
  4241  1521  1303               	bcf	3,6	;RP1=0, select bank1
  4242  1522  00CD               	movwf	??_LCD_Init^(0+128)
  4243  1523                     u4247:	
  4244  1523  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4245  1524  2D23               	goto	u4247
  4246  1525  0008               	return
  4247  1526                     __end_of_LCD_Init:	
  4248                           
  4249                           	psect	text18
  4250  117D                     __ptext18:	
  4251 ;; *************** function _LCD_Cursor *****************
  4252 ;; Defined at:
  4253 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  Row             1    wreg     unsigned char 
  4256 ;;  Col             1    4[BANK1 ] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  Row             1    6[BANK1 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       0       1       0       0
  4269 ;;      Locals:         0       0       1       0       0
  4270 ;;      Temps:          0       0       1       0       0
  4271 ;;      Totals:         0       0       3       0       0
  4272 ;;Total ram usage:        3 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    5
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _LCD_Cursor
  4284  117D                     _LCD_Cursor:	
  4285                           
  4286                           ;incstack = 0
  4287                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4288                           ;LCD_Cursor@Row stored from wreg
  4289  117D  1683               	bsf	3,5	;RP0=1, select bank1
  4290  117E  1303               	bcf	3,6	;RP1=0, select bank1
  4291  117F  00CD               	movwf	LCD_Cursor@Row^(0+128)
  4292                           
  4293                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4294  1180  1283               	bcf	3,5	;RP0=0, select bank0
  4295  1181  1303               	bcf	3,6	;RP1=0, select bank0
  4296  1182  1009               	bcf	9,0	;volatile
  4297                           
  4298                           ;lcd.c: 14: if (Row == 0)
  4299  1183  1683               	bsf	3,5	;RP0=1, select bank1
  4300  1184  1303               	bcf	3,6	;RP1=0, select bank1
  4301  1185  08CD               	movf	LCD_Cursor@Row^(0+128),f
  4302  1186  1D03               	skipz
  4303  1187  298B               	goto	l3016
  4304                           
  4305                           ;lcd.c: 15: {
  4306                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4307  1188  084B               	movf	LCD_Cursor@Col^(0+128),w
  4308  1189  3E80               	addlw	128
  4309  118A  298F               	goto	L2
  4310  118B                     l3016:	
  4311                           ;lcd.c: 17: }
  4312                           
  4313                           
  4314                           ;lcd.c: 18: else
  4315                           ;lcd.c: 19: {
  4316                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4317  118B  1683               	bsf	3,5	;RP0=1, select bank1
  4318  118C  1303               	bcf	3,6	;RP1=0, select bank1
  4319  118D  084B               	movf	LCD_Cursor@Col^(0+128),w
  4320  118E  3EC0               	addlw	192
  4321  118F                     L2:	
  4322  118F  1283               	bcf	3,5	;RP0=0, select bank0
  4323  1190  1303               	bcf	3,6	;RP1=0, select bank0
  4324  1191  0088               	movwf	8	;volatile
  4325                           
  4326                           ;lcd.c: 21: }
  4327                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4328  1192  1489               	bsf	9,1	;volatile
  4329                           
  4330                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4331  1193  303D               	movlw	61
  4332  1194  1683               	bsf	3,5	;RP0=1, select bank1
  4333  1195  1303               	bcf	3,6	;RP1=0, select bank1
  4334  1196  00CC               	movwf	??_LCD_Cursor^(0+128)
  4335  1197                     u4257:	
  4336  1197  0BCC               	decfsz	??_LCD_Cursor^(0+128),f
  4337  1198  2997               	goto	u4257
  4338                           
  4339                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4340  1199  1283               	bcf	3,5	;RP0=0, select bank0
  4341  119A  1303               	bcf	3,6	;RP1=0, select bank0
  4342  119B  1089               	bcf	9,1	;volatile
  4343  119C  0008               	return
  4344  119D                     __end_of_LCD_Cursor:	
  4345                           
  4346                           	psect	text19
  4347  126E                     __ptext19:	
  4348 ;; *************** function _LCD_Clear *****************
  4349 ;; Defined at:
  4350 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       2       0       0
  4367 ;;      Totals:         0       0       2       0       0
  4368 ;;Total ram usage:        2 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    6
  4371 ;; This function calls:
  4372 ;;		_LCD_WriteCmd
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function _LCD_Clear
  4380  126E                     _LCD_Clear:	
  4381                           
  4382                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4386  126E  3001               	movlw	1
  4387  126F  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4388                           
  4389                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4390  1274  300C               	movlw	12
  4391  1275  1683               	bsf	3,5	;RP0=1, select bank1
  4392  1276  1303               	bcf	3,6	;RP1=0, select bank1
  4393  1277  00CE               	movwf	(??_LCD_Clear^(0+128)+1)
  4394  1278  30F7               	movlw	247
  4395  1279  00CD               	movwf	??_LCD_Clear^(0+128)
  4396  127A                     u4267:	
  4397  127A  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4398  127B  2A7A               	goto	u4267
  4399  127C  0BCE               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4400  127D  2A7A               	goto	u4267
  4401                           
  4402                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4403  127E  300C               	movlw	12
  4404  127F  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4405                           
  4406                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4407  1284  303D               	movlw	61
  4408  1285  1683               	bsf	3,5	;RP0=1, select bank1
  4409  1286  1303               	bcf	3,6	;RP1=0, select bank1
  4410  1287  00CD               	movwf	??_LCD_Clear^(0+128)
  4411  1288                     u4277:	
  4412  1288  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4413  1289  2A88               	goto	u4277
  4414                           
  4415                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4416  128A  3006               	movlw	6
  4417  128B  160A  118A  20FB  160A  118A  	fcall	_LCD_WriteCmd
  4418                           
  4419                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4420  1290  303D               	movlw	61
  4421  1291  1683               	bsf	3,5	;RP0=1, select bank1
  4422  1292  1303               	bcf	3,6	;RP1=0, select bank1
  4423  1293  00CD               	movwf	??_LCD_Clear^(0+128)
  4424  1294                     u4287:	
  4425  1294  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4426  1295  2A94               	goto	u4287
  4427  1296  0008               	return
  4428  1297                     __end_of_LCD_Clear:	
  4429                           
  4430                           	psect	text20
  4431  10FB                     __ptext20:	
  4432 ;; *************** function _LCD_WriteCmd *****************
  4433 ;; Defined at:
  4434 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  Byte            1    wreg     unsigned char 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  Byte            1    5[BANK1 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       0       0       0       0
  4449 ;;      Locals:         0       0       1       0       0
  4450 ;;      Temps:          0       0       1       0       0
  4451 ;;      Totals:         0       0       2       0       0
  4452 ;;Total ram usage:        2 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    5
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_LCD_Clear
  4459 ;;		_LCD_Init
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _LCD_WriteCmd
  4465  10FB                     _LCD_WriteCmd:	
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _LCD_WriteCmd: [wreg]
  4469                           ;LCD_WriteCmd@Byte stored from wreg
  4470  10FB  1683               	bsf	3,5	;RP0=1, select bank1
  4471  10FC  1303               	bcf	3,6	;RP1=0, select bank1
  4472  10FD  00CC               	movwf	LCD_WriteCmd@Byte^(0+128)
  4473                           
  4474                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4475  10FE  1283               	bcf	3,5	;RP0=0, select bank0
  4476  10FF  1303               	bcf	3,6	;RP1=0, select bank0
  4477  1100  1009               	bcf	9,0	;volatile
  4478                           
  4479                           ;lcd.c: 36: PORTD = Byte;
  4480  1101  1683               	bsf	3,5	;RP0=1, select bank1
  4481  1102  1303               	bcf	3,6	;RP1=0, select bank1
  4482  1103  084C               	movf	LCD_WriteCmd@Byte^(0+128),w
  4483  1104  1283               	bcf	3,5	;RP0=0, select bank0
  4484  1105  1303               	bcf	3,6	;RP1=0, select bank0
  4485  1106  0088               	movwf	8	;volatile
  4486                           
  4487                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4488  1107  1489               	bsf	9,1	;volatile
  4489                           
  4490                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4491  1108  303D               	movlw	61
  4492  1109  1683               	bsf	3,5	;RP0=1, select bank1
  4493  110A  1303               	bcf	3,6	;RP1=0, select bank1
  4494  110B  00CB               	movwf	??_LCD_WriteCmd^(0+128)
  4495  110C                     u4297:	
  4496  110C  0BCB               	decfsz	??_LCD_WriteCmd^(0+128),f
  4497  110D  290C               	goto	u4297
  4498                           
  4499                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4500  110E  1283               	bcf	3,5	;RP0=0, select bank0
  4501  110F  1303               	bcf	3,6	;RP1=0, select bank0
  4502  1110  1089               	bcf	9,1	;volatile
  4503  1111  0008               	return
  4504  1112                     __end_of_LCD_WriteCmd:	
  4505                           
  4506                           	psect	text21
  4507  10D5                     __ptext21:	
  4508 ;; *************** function _ADC_Init *****************
  4509 ;; Defined at:
  4510 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		None
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    5
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _ADC_Init
  4540  10D5                     _ADC_Init:	
  4541                           
  4542                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _ADC_Init: []
  4546  10D5  1683               	bsf	3,5	;RP0=1, select bank1
  4547  10D6  1303               	bcf	3,6	;RP1=0, select bank1
  4548  10D7  179F               	bsf	31,7	;volatile
  4549                           
  4550                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4551  10D8  159F               	bsf	31,3	;volatile
  4552                           
  4553                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4554  10D9  151F               	bsf	31,2	;volatile
  4555                           
  4556                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4557  10DA  149F               	bsf	31,1	;volatile
  4558                           
  4559                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4560  10DB  101F               	bcf	31,0	;volatile
  4561                           
  4562                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4563  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  4564  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  4565  10DE  179F               	bsf	31,7	;volatile
  4566                           
  4567                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4568  10DF  131F               	bcf	31,6	;volatile
  4569                           
  4570                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4571  10E0  1683               	bsf	3,5	;RP0=1, select bank1
  4572  10E1  1303               	bcf	3,6	;RP1=0, select bank1
  4573  10E2  130C               	bcf	12,6	;volatile
  4574                           
  4575                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4576  10E3  1283               	bcf	3,5	;RP0=0, select bank0
  4577  10E4  1303               	bcf	3,6	;RP1=0, select bank0
  4578  10E5  130C               	bcf	12,6	;volatile
  4579  10E6  0008               	return
  4580  10E7                     __end_of_ADC_Init:	
  4581                           
  4582                           	psect	text22
  4583  0CAC                     __ptext22:	
  4584 ;; *************** function _ISR *****************
  4585 ;; Defined at:
  4586 ;;		line 309 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;		None               void
  4593 ;; Registers used:
  4594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4600 ;;      Params:         0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0
  4602 ;;      Temps:          0       0       4       0       0
  4603 ;;      Totals:         0       0       4       0       0
  4604 ;;Total ram usage:        4 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    4
  4607 ;; This function calls:
  4608 ;;		_Fuzzy
  4609 ;;		_USART_ReceiveChar
  4610 ;;		___lwtoft
  4611 ;;		i1_PWM_DutyCycle2
  4612 ;;		i1_TIMER0_Set
  4613 ;;		i1_USART_WriteString
  4614 ;;		i1___lwdiv
  4615 ;;		i1___wmul
  4616 ;; This function is called by:
  4617 ;;		Interrupt level 1
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _ISR
  4623  0CAC                     _ISR:	
  4624                           
  4625                           ;main.c: 312: if (PIR1bits.RCIF)
  4626  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0CAE  1E8C               	btfss	12,5	;volatile
  4629  0CAF  2DD7               	goto	i1l3272
  4630                           
  4631                           ;main.c: 313: {
  4632                           ;main.c: 314: if (USART_ReceiveChar() == '0')
  4633  0CB0  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4634  0CB5  3A30               	xorlw	48
  4635  0CB6  1D03               	skipz
  4636  0CB7  2CD1               	goto	i1l3202
  4637                           
  4638                           ;main.c: 315: {
  4639                           ;main.c: 316: USART_WriteString("\n\rdesligado\n\r");
  4640  0CB8  30A0               	movlw	low (STR_1-__stringbase)
  4641  0CB9  00F1               	movwf	i1USART_WriteString@str
  4642  0CBA  3080               	movlw	128
  4643  0CBB  00F2               	movwf	i1USART_WriteString@str+1
  4644  0CBC  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4645                           
  4646                           ;main.c: 317: pwm = 0;
  4647  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  4648  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  4649  0CC3  01C1               	clrf	_pwm^(0+128)
  4650  0CC4  01C2               	clrf	(_pwm+1)^(0+128)
  4651                           
  4652                           ;main.c: 318: PWM_DutyCycle2(pwm);
  4653  0CC5  0842               	movf	(_pwm+1)^(0+128),w
  4654  0CC6  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4655  0CC7  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4656  0CC8  0841               	movf	_pwm^(0+128),w
  4657  0CC9  01F0               	clrf	i1PWM_DutyCycle2@valor
  4658  0CCA  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4659  0CCB  160A  118A  2129  120A  158A  	fcall	i1_PWM_DutyCycle2
  4660                           
  4661                           ;main.c: 319: return;
  4662  0CD0  2E38               	goto	i1l182
  4663  0CD1                     i1l3202:	
  4664                           
  4665                           ;main.c: 320: }
  4666                           ;main.c: 322: if (USART_ReceiveChar() == '1')
  4667  0CD1  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4668  0CD6  3A31               	xorlw	49
  4669  0CD7  1D03               	skipz
  4670  0CD8  2CE8               	goto	i1l3208
  4671                           
  4672                           ;main.c: 323: {
  4673                           ;main.c: 324: USART_WriteString("\n\rpwm = \n\r");
  4674  0CD9  30AE               	movlw	low (STR_2-__stringbase)
  4675  0CDA  00F1               	movwf	i1USART_WriteString@str
  4676  0CDB  3080               	movlw	128
  4677  0CDC  00F2               	movwf	i1USART_WriteString@str+1
  4678  0CDD  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4679                           
  4680                           ;main.c: 325: setpointUI = 720;
  4681  0CE2  30D0               	movlw	208
  4682  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  4683  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  4684  0CE5  00C5               	movwf	_setpointUI^(0+128)
  4685  0CE6  3002               	movlw	2
  4686  0CE7  00C6               	movwf	(_setpointUI^(0+128)+1)
  4687  0CE8                     i1l3208:	
  4688                           
  4689                           ;main.c: 327: }
  4690                           ;main.c: 329: if (USART_ReceiveChar() == '2')
  4691  0CE8  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4692  0CED  3A32               	xorlw	50
  4693  0CEE  1D03               	skipz
  4694  0CEF  2CFF               	goto	i1l3214
  4695                           
  4696                           ;main.c: 330: {
  4697                           ;main.c: 331: USART_WriteString("\n\rpwm = \n\r");
  4698  0CF0  30AE               	movlw	low (STR_2-__stringbase)
  4699  0CF1  00F1               	movwf	i1USART_WriteString@str
  4700  0CF2  3080               	movlw	128
  4701  0CF3  00F2               	movwf	i1USART_WriteString@str+1
  4702  0CF4  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4703                           
  4704                           ;main.c: 332: setpointUI = 1450;
  4705  0CF9  30AA               	movlw	170
  4706  0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  4707  0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  4708  0CFC  00C5               	movwf	_setpointUI^(0+128)
  4709  0CFD  3005               	movlw	5
  4710  0CFE  00C6               	movwf	(_setpointUI^(0+128)+1)
  4711  0CFF                     i1l3214:	
  4712                           
  4713                           ;main.c: 334: }
  4714                           ;main.c: 336: if (USART_ReceiveChar() == '3')
  4715  0CFF  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4716  0D04  3A33               	xorlw	51
  4717  0D05  1D03               	skipz
  4718  0D06  2D1D               	goto	i1l3224
  4719                           
  4720                           ;main.c: 337: {
  4721                           ;main.c: 338: USART_WriteString("\n\rpwm = \n\r");
  4722  0D07  30AE               	movlw	low (STR_2-__stringbase)
  4723  0D08  00F1               	movwf	i1USART_WriteString@str
  4724  0D09  3080               	movlw	128
  4725  0D0A  00F2               	movwf	i1USART_WriteString@str+1
  4726  0D0B  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4727                           
  4728                           ;main.c: 339: setpointUI = 2828;
  4729  0D10  300C               	movlw	12
  4730  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  4731  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  4732  0D13  00C5               	movwf	_setpointUI^(0+128)
  4733  0D14  300B               	movlw	11
  4734  0D15  00C6               	movwf	(_setpointUI^(0+128)+1)
  4735                           
  4736                           ;main.c: 341: if(PORTBbits.RB0 == 0)
  4737  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0D18  1806               	btfsc	6,0	;volatile
  4740  0D19  2D1C               	goto	i1l186
  4741                           
  4742                           ;main.c: 342: {
  4743                           ;main.c: 343: PORTBbits.RB0 = 1;
  4744  0D1A  1406               	bsf	6,0	;volatile
  4745                           
  4746                           ;main.c: 344: }else{
  4747  0D1B  2D1D               	goto	i1l3224
  4748  0D1C                     i1l186:	
  4749                           
  4750                           ;main.c: 345: PORTBbits.RB0 = 0;
  4751  0D1C  1006               	bcf	6,0	;volatile
  4752  0D1D                     i1l3224:	
  4753                           
  4754                           ;main.c: 346: }
  4755                           ;main.c: 347: }
  4756                           ;main.c: 349: if (USART_ReceiveChar() == '4')
  4757  0D1D  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4758  0D22  3A34               	xorlw	52
  4759  0D23  1D03               	skipz
  4760  0D24  2D47               	goto	i1l3236
  4761                           
  4762                           ;main.c: 350: {
  4763                           ;main.c: 351: USART_WriteString("\n\rpwm = \n\r");
  4764  0D25  30AE               	movlw	low (STR_2-__stringbase)
  4765  0D26  00F1               	movwf	i1USART_WriteString@str
  4766  0D27  3080               	movlw	128
  4767  0D28  00F2               	movwf	i1USART_WriteString@str+1
  4768  0D29  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4769                           
  4770                           ;main.c: 352: pwm = 3256;
  4771  0D2E  30B8               	movlw	184
  4772  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  4773  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  4774  0D31  00C1               	movwf	_pwm^(0+128)
  4775  0D32  300C               	movlw	12
  4776  0D33  00C2               	movwf	(_pwm^(0+128)+1)
  4777                           
  4778                           ;main.c: 353: PWM_DutyCycle2(pwm);
  4779  0D34  0842               	movf	(_pwm+1)^(0+128),w
  4780  0D35  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4781  0D36  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4782  0D37  0841               	movf	_pwm^(0+128),w
  4783  0D38  01F0               	clrf	i1PWM_DutyCycle2@valor
  4784  0D39  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4785  0D3A  160A  118A  2129  120A  158A  	fcall	i1_PWM_DutyCycle2
  4786                           
  4787                           ;main.c: 354: if(PORTBbits.RB1 == 0)
  4788  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0D41  1886               	btfsc	6,1	;volatile
  4791  0D42  2D45               	goto	i1l189
  4792                           
  4793                           ;main.c: 355: {
  4794                           ;main.c: 356: PORTBbits.RB1 = 1;
  4795  0D43  1486               	bsf	6,1	;volatile
  4796                           
  4797                           ;main.c: 357: }else{
  4798  0D44  2E38               	goto	i1l182
  4799  0D45                     i1l189:	
  4800                           
  4801                           ;main.c: 358: PORTBbits.RB1 = 0;
  4802  0D45  1086               	bcf	6,1	;volatile
  4803                           
  4804                           ;main.c: 359: }
  4805                           ;main.c: 360: return;
  4806  0D46  2E38               	goto	i1l182
  4807  0D47                     i1l3236:	
  4808                           
  4809                           ;main.c: 361: }
  4810                           ;main.c: 363: if (USART_ReceiveChar() == '5')
  4811  0D47  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4812  0D4C  3A35               	xorlw	53
  4813  0D4D  1D03               	skipz
  4814  0D4E  2D5E               	goto	i1l3242
  4815                           
  4816                           ;main.c: 364: {
  4817                           ;main.c: 365: USART_WriteString("\n\rpwm = \n\r");
  4818  0D4F  30AE               	movlw	low (STR_2-__stringbase)
  4819  0D50  00F1               	movwf	i1USART_WriteString@str
  4820  0D51  3080               	movlw	128
  4821  0D52  00F2               	movwf	i1USART_WriteString@str+1
  4822  0D53  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4823                           
  4824                           ;main.c: 366: setpointUI = 4512;
  4825  0D58  30A0               	movlw	160
  4826  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  4827  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  4828  0D5B  00C5               	movwf	_setpointUI^(0+128)
  4829  0D5C  3011               	movlw	17
  4830  0D5D  00C6               	movwf	(_setpointUI^(0+128)+1)
  4831  0D5E                     i1l3242:	
  4832                           
  4833                           ;main.c: 368: }
  4834                           ;main.c: 370: if (USART_ReceiveChar() == '6')
  4835  0D5E  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4836  0D63  3A36               	xorlw	54
  4837  0D64  1D03               	skipz
  4838  0D65  2D75               	goto	i1l3248
  4839                           
  4840                           ;main.c: 371: {
  4841                           ;main.c: 372: USART_WriteString("\n\rpwm = 768\n\r");
  4842  0D66  3092               	movlw	low (STR_7-__stringbase)
  4843  0D67  00F1               	movwf	i1USART_WriteString@str
  4844  0D68  3080               	movlw	128
  4845  0D69  00F2               	movwf	i1USART_WriteString@str+1
  4846  0D6A  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4847                           
  4848                           ;main.c: 373: setpointUI = 5768;
  4849  0D6F  3088               	movlw	136
  4850  0D70  1683               	bsf	3,5	;RP0=1, select bank1
  4851  0D71  1303               	bcf	3,6	;RP1=0, select bank1
  4852  0D72  00C5               	movwf	_setpointUI^(0+128)
  4853  0D73  3016               	movlw	22
  4854  0D74  00C6               	movwf	(_setpointUI^(0+128)+1)
  4855  0D75                     i1l3248:	
  4856                           
  4857                           ;main.c: 375: }
  4858                           ;main.c: 377: if (USART_ReceiveChar() == '7')
  4859  0D75  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4860  0D7A  3A37               	xorlw	55
  4861  0D7B  1D03               	skipz
  4862  0D7C  2D8C               	goto	i1l3254
  4863                           
  4864                           ;main.c: 378: {
  4865                           ;main.c: 379: USART_WriteString("\n\rpwm = 896\n\r");
  4866  0D7D  3084               	movlw	low (STR_8-__stringbase)
  4867  0D7E  00F1               	movwf	i1USART_WriteString@str
  4868  0D7F  3080               	movlw	128
  4869  0D80  00F2               	movwf	i1USART_WriteString@str+1
  4870  0D81  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4871                           
  4872                           ;main.c: 380: setpointUI = 6896;
  4873  0D86  30F0               	movlw	240
  4874  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  4875  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  4876  0D89  00C5               	movwf	_setpointUI^(0+128)
  4877  0D8A  301A               	movlw	26
  4878  0D8B  00C6               	movwf	(_setpointUI^(0+128)+1)
  4879  0D8C                     i1l3254:	
  4880                           
  4881                           ;main.c: 382: }
  4882                           ;main.c: 384: if (USART_ReceiveChar() == '8')
  4883  0D8C  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4884  0D91  3A38               	xorlw	56
  4885  0D92  1D03               	skipz
  4886  0D93  2DA3               	goto	i1l3260
  4887                           
  4888                           ;main.c: 385: {
  4889                           ;main.c: 386: USART_WriteString("\n\rpwm = \n\r");
  4890  0D94  30AE               	movlw	low (STR_2-__stringbase)
  4891  0D95  00F1               	movwf	i1USART_WriteString@str
  4892  0D96  3080               	movlw	128
  4893  0D97  00F2               	movwf	i1USART_WriteString@str+1
  4894  0D98  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4895                           
  4896                           ;main.c: 387: setpointUI = 8100;
  4897  0D9D  30A4               	movlw	164
  4898  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  4899  0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  4900  0DA0  00C5               	movwf	_setpointUI^(0+128)
  4901  0DA1  301F               	movlw	31
  4902  0DA2  00C6               	movwf	(_setpointUI^(0+128)+1)
  4903  0DA3                     i1l3260:	
  4904                           
  4905                           ;main.c: 389: }
  4906                           ;main.c: 391: if (USART_ReceiveChar() == '9')
  4907  0DA3  160A  118A  2144  120A  158A  	fcall	_USART_ReceiveChar
  4908  0DA8  3A39               	xorlw	57
  4909  0DA9  1D03               	skipz
  4910  0DAA  2DBA               	goto	i1l3266
  4911                           
  4912                           ;main.c: 392: {
  4913                           ;main.c: 393: USART_WriteString("\n\rpwm = 1023\n\r");
  4914  0DAB  3075               	movlw	low (STR_10-__stringbase)
  4915  0DAC  00F1               	movwf	i1USART_WriteString@str
  4916  0DAD  3080               	movlw	128
  4917  0DAE  00F2               	movwf	i1USART_WriteString@str+1
  4918  0DAF  160A  118A  2202  120A  158A  	fcall	i1_USART_WriteString
  4919                           
  4920                           ;main.c: 394: setpointUI = 9000;
  4921  0DB4  3028               	movlw	40
  4922  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  4923  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  4924  0DB7  00C5               	movwf	_setpointUI^(0+128)
  4925  0DB8  3023               	movlw	35
  4926  0DB9  00C6               	movwf	(_setpointUI^(0+128)+1)
  4927  0DBA                     i1l3266:	
  4928                           
  4929                           ;main.c: 396: }
  4930                           ;main.c: 400: Fuzzy();
  4931  0DBA  120A  118A  204F  120A  158A  	fcall	_Fuzzy
  4932                           
  4933                           ;main.c: 401: tf = setpointUI;
  4934  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  4935  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  4936  0DC1  0846               	movf	(_setpointUI+1)^(0+128),w
  4937  0DC2  01F9               	clrf	___lwtoft@c+1
  4938  0DC3  07F9               	addwf	___lwtoft@c+1,f
  4939  0DC4  0845               	movf	_setpointUI^(0+128),w
  4940  0DC5  01F8               	clrf	___lwtoft@c
  4941  0DC6  07F8               	addwf	___lwtoft@c,f
  4942  0DC7  160A  118A  20E7  120A  158A  	fcall	___lwtoft
  4943  0DCC  0878               	movf	?___lwtoft,w
  4944  0DCD  1683               	bsf	3,5	;RP0=1, select bank3
  4945  0DCE  1703               	bsf	3,6	;RP1=1, select bank3
  4946  0DCF  0096               	movwf	_tf^(0+384)
  4947  0DD0  0879               	movf	?___lwtoft+1,w
  4948  0DD1  0097               	movwf	(_tf+1)^(0+384)
  4949  0DD2  087A               	movf	?___lwtoft+2,w
  4950  0DD3  0098               	movwf	(_tf+2)^(0+384)
  4951                           
  4952                           ;main.c: 403: PIR1bits.RCIF = 0;
  4953  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0DD6  128C               	bcf	12,5	;volatile
  4956  0DD7                     i1l3272:	
  4957                           
  4958                           ;main.c: 404: }
  4959                           ;main.c: 407: if (PIR1bits.ADIF)
  4960  0DD7  1B0C               	btfsc	12,6	;volatile
  4961                           
  4962                           ;main.c: 408: {
  4963                           ;main.c: 412: PIR1bits.ADIF = 0;
  4964  0DD8  130C               	bcf	12,6	;volatile
  4965                           
  4966                           ;main.c: 413: }
  4967                           ;main.c: 417: if (INTCONbits.T0IF)
  4968  0DD9  1D0B               	btfss	11,2	;volatile
  4969  0DDA  2E34               	goto	i1l3298
  4970                           
  4971                           ;main.c: 418: {
  4972                           ;main.c: 420: TIMER0_Set(238);
  4973  0DDB  30EE               	movlw	238
  4974  0DDC  120A  158A  20DB  120A  158A  	fcall	i1_TIMER0_Set
  4975                           
  4976                           ;main.c: 423: if (contagens_tm0 < 499)
  4977  0DE1  3001               	movlw	1
  4978  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  4979  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  4980  0DE4  023C               	subwf	(_contagens_tm0+1)^(0+128),w
  4981  0DE5  30F3               	movlw	243
  4982  0DE6  1903               	skipnz
  4983  0DE7  023B               	subwf	_contagens_tm0^(0+128),w
  4984  0DE8  1803               	skipnc
  4985  0DE9  2DF4               	goto	i1l3284
  4986                           
  4987                           ;main.c: 424: {
  4988                           ;main.c: 426: contagens_tm0++;
  4989  0DEA  3001               	movlw	1
  4990  0DEB  07BB               	addwf	_contagens_tm0^(0+128),f
  4991  0DEC  1803               	skipnc
  4992  0DED  0ABC               	incf	(_contagens_tm0+1)^(0+128),f
  4993  0DEE  3000               	movlw	0
  4994  0DEF  07BC               	addwf	(_contagens_tm0+1)^(0+128),f
  4995                           
  4996                           ;main.c: 429: PORTBbits.RB6 = 1;
  4997  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0DF2  1706               	bsf	6,6	;volatile
  5000                           
  5001                           ;main.c: 430: }
  5002  0DF3  2E33               	goto	i1l3296
  5003  0DF4                     i1l3284:	
  5004                           
  5005                           ;main.c: 431: else
  5006                           ;main.c: 432: {
  5007                           ;main.c: 434: contagens_tm0 = 0;
  5008  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  5010  0DF6  01BB               	clrf	_contagens_tm0^(0+128)
  5011  0DF7  01BC               	clrf	(_contagens_tm0+1)^(0+128)
  5012                           
  5013                           ;main.c: 437: pulsos = (TMR1H << 8) + TMR1L;
  5014  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0DFA  080F               	movf	15,w	;volatile
  5017  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0DFD  01C0               	clrf	(_pulsos+1)^(0+128)
  5020  0DFE  07C0               	addwf	(_pulsos+1)^(0+128),f
  5021  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0E01  080E               	movf	14,w	;volatile
  5024  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  5025  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  5026  0E04  01BF               	clrf	_pulsos^(0+128)
  5027  0E05  07BF               	addwf	_pulsos^(0+128),f
  5028                           
  5029                           ;main.c: 438: rpm = ((pulsos / pas_cooler) * 120);
  5030  0E06  086B               	movf	(_pas_cooler+1)^(0+128),w
  5031  0E07  01F1               	clrf	i1___lwdiv@divisor+1
  5032  0E08  07F1               	addwf	i1___lwdiv@divisor+1,f
  5033  0E09  086A               	movf	_pas_cooler^(0+128),w
  5034  0E0A  01F0               	clrf	i1___lwdiv@divisor
  5035  0E0B  07F0               	addwf	i1___lwdiv@divisor,f
  5036  0E0C  0840               	movf	(_pulsos+1)^(0+128),w
  5037  0E0D  01F3               	clrf	i1___lwdiv@dividend+1
  5038  0E0E  07F3               	addwf	i1___lwdiv@dividend+1,f
  5039  0E0F  083F               	movf	_pulsos^(0+128),w
  5040  0E10  01F2               	clrf	i1___lwdiv@dividend
  5041  0E11  07F2               	addwf	i1___lwdiv@dividend,f
  5042  0E12  160A  118A  232F  120A  158A  	fcall	i1___lwdiv
  5043  0E17  0871               	movf	?i1___lwdiv+1,w
  5044  0E18  01F9               	clrf	i1___wmul@multiplier+1
  5045  0E19  07F9               	addwf	i1___wmul@multiplier+1,f
  5046  0E1A  0870               	movf	?i1___lwdiv,w
  5047  0E1B  01F8               	clrf	i1___wmul@multiplier
  5048  0E1C  07F8               	addwf	i1___wmul@multiplier,f
  5049  0E1D  3078               	movlw	120
  5050  0E1E  00FA               	movwf	i1___wmul@multiplicand
  5051  0E1F  3000               	movlw	0
  5052  0E20  00FB               	movwf	i1___wmul@multiplicand+1
  5053  0E21  160A  118A  21DF  120A  158A  	fcall	i1___wmul
  5054  0E26  0879               	movf	?i1___wmul+1,w
  5055  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  5056  0E28  1303               	bcf	3,6	;RP1=0, select bank1
  5057  0E29  01C4               	clrf	(_rpm+1)^(0+128)
  5058  0E2A  07C4               	addwf	(_rpm+1)^(0+128),f
  5059  0E2B  0878               	movf	?i1___wmul,w
  5060  0E2C  01C3               	clrf	_rpm^(0+128)
  5061  0E2D  07C3               	addwf	_rpm^(0+128),f
  5062                           
  5063                           ;main.c: 441: TMR1L = 0x00;
  5064  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0E30  018E               	clrf	14	;volatile
  5067                           
  5068                           ;main.c: 442: TMR1H = 0x00;
  5069  0E31  018F               	clrf	15	;volatile
  5070                           
  5071                           ;main.c: 445: PORTBbits.RB6 = 0;
  5072  0E32  1306               	bcf	6,6	;volatile
  5073  0E33                     i1l3296:	
  5074                           
  5075                           ;main.c: 446: }
  5076                           ;main.c: 449: INTCONbits.T0IF = 0;
  5077  0E33  110B               	bcf	11,2	;volatile
  5078  0E34                     i1l3298:	
  5079                           
  5080                           ;main.c: 450: }
  5081                           ;main.c: 453: if (PIR1bits.TMR1IF)
  5082  0E34  180C               	btfsc	12,0	;volatile
  5083                           
  5084                           ;main.c: 454: {
  5085                           ;main.c: 458: PIR1bits.TMR1IF = 0;
  5086  0E35  100C               	bcf	12,0	;volatile
  5087                           
  5088                           ;main.c: 459: }
  5089                           ;main.c: 462: if (PIR1bits.SSPIF)
  5090  0E36  198C               	btfsc	12,3	;volatile
  5091                           
  5092                           ;main.c: 463: {
  5093                           ;main.c: 467: PIR1bits.SSPIF = 0;
  5094  0E37  118C               	bcf	12,3	;volatile
  5095  0E38                     i1l182:	
  5096  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  5097  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  5098  0E3A  084A               	movf	(??_ISR+3)^(0+128),w
  5099  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0E3D  00FF               	movwf	127
  5102  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  5103  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  5104  0E40  0849               	movf	(??_ISR+2)^(0+128),w
  5105  0E41  008A               	movwf	10
  5106  0E42  0848               	movf	(??_ISR+1)^(0+128),w
  5107  0E43  0084               	movwf	4
  5108  0E44  0E47               	swapf	??_ISR^(0+128),w
  5109  0E45  0083               	movwf	3
  5110  0E46  0EFE               	swapf	126,f
  5111  0E47  0E7E               	swapf	126,w
  5112  0E48  0009               	retfie
  5113  0E49                     __end_of_ISR:	
  5114                           
  5115                           	psect	intentry
  5116  0004                     __pintentry:	
  5117                           ;incstack = 0
  5118                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5119                           
  5120  0004                     interrupt_function:	
  5121  007E                     saved_w	set	btemp
  5122  0004  00FE               	movwf	btemp
  5123  0005  0E03               	swapf	3,w
  5124  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0008  00C7               	movwf	??_ISR^(0+128)
  5127  0009  0804               	movf	4,w
  5128  000A  00C8               	movwf	(??_ISR+1)^(0+128)
  5129  000B  080A               	movf	10,w
  5130  000C  00C9               	movwf	(??_ISR+2)^(0+128)
  5131  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5132  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5133  000F  087F               	movf	btemp+1,w
  5134  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5135  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5136  0012  00CA               	movwf	(??_ISR+3)^(0+128)
  5137  0013  120A  158A  2CAC   	ljmp	_ISR
  5138                           
  5139                           	psect	text23
  5140  132F                     __ptext23:	
  5141 ;; *************** function i1___lwdiv *****************
  5142 ;; Defined at:
  5143 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  divisor         2    0[COMMON] unsigned int 
  5146 ;;  dividend        2    2[COMMON] unsigned int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5149 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  2    0[COMMON] unsigned int 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5159 ;;      Params:         4       0       0       0       0
  5160 ;;      Locals:         3       0       0       0       0
  5161 ;;      Temps:          1       0       0       0       0
  5162 ;;      Totals:         8       0       0       0       0
  5163 ;;Total ram usage:        8 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_ISR
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function i1___lwdiv
  5174  132F                     i1___lwdiv:	
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5178  132F  01F5               	clrf	i1___lwdiv@quotient
  5179  1330  01F6               	clrf	i1___lwdiv@quotient+1
  5180  1331  0871               	movf	i1___lwdiv@divisor+1,w
  5181  1332  0470               	iorwf	i1___lwdiv@divisor,w
  5182  1333  1903               	skipnz
  5183  1334  2B66               	goto	i1l3180
  5184  1335  01F7               	clrf	i1___lwdiv@counter
  5185  1336  0AF7               	incf	i1___lwdiv@counter,f
  5186  1337                     i1l3168:	
  5187  1337  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5188  1338  2B45               	goto	i1l3170
  5189  1339  3001               	movlw	1
  5190  133A                     u390_25:	
  5191  133A  1003               	clrc
  5192  133B  0DF0               	rlf	i1___lwdiv@divisor,f
  5193  133C  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5194  133D  3EFF               	addlw	-1
  5195  133E  1D03               	skipz
  5196  133F  2B3A               	goto	u390_25
  5197  1340  3001               	movlw	1
  5198  1341  00F4               	movwf	??i1___lwdiv
  5199  1342  0874               	movf	??i1___lwdiv,w
  5200  1343  07F7               	addwf	i1___lwdiv@counter,f
  5201  1344  2B37               	goto	i1l3168
  5202  1345                     i1l3170:	
  5203  1345  3001               	movlw	1
  5204  1346                     u392_25:	
  5205  1346  1003               	clrc
  5206  1347  0DF5               	rlf	i1___lwdiv@quotient,f
  5207  1348  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5208  1349  3EFF               	addlw	-1
  5209  134A  1D03               	skipz
  5210  134B  2B46               	goto	u392_25
  5211  134C  0871               	movf	i1___lwdiv@divisor+1,w
  5212  134D  0273               	subwf	i1___lwdiv@dividend+1,w
  5213  134E  1D03               	skipz
  5214  134F  2B52               	goto	u393_25
  5215  1350  0870               	movf	i1___lwdiv@divisor,w
  5216  1351  0272               	subwf	i1___lwdiv@dividend,w
  5217  1352                     u393_25:	
  5218  1352  1C03               	skipc
  5219  1353  2B5B               	goto	i1l3176
  5220  1354  0870               	movf	i1___lwdiv@divisor,w
  5221  1355  02F2               	subwf	i1___lwdiv@dividend,f
  5222  1356  0871               	movf	i1___lwdiv@divisor+1,w
  5223  1357  1C03               	skipc
  5224  1358  03F3               	decf	i1___lwdiv@dividend+1,f
  5225  1359  02F3               	subwf	i1___lwdiv@dividend+1,f
  5226  135A  1475               	bsf	i1___lwdiv@quotient,0
  5227  135B                     i1l3176:	
  5228  135B  3001               	movlw	1
  5229  135C                     u394_25:	
  5230  135C  1003               	clrc
  5231  135D  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5232  135E  0CF0               	rrf	i1___lwdiv@divisor,f
  5233  135F  3EFF               	addlw	-1
  5234  1360  1D03               	skipz
  5235  1361  2B5C               	goto	u394_25
  5236  1362  3001               	movlw	1
  5237  1363  02F7               	subwf	i1___lwdiv@counter,f
  5238  1364  1D03               	btfss	3,2
  5239  1365  2B45               	goto	i1l3170
  5240  1366                     i1l3180:	
  5241  1366  0876               	movf	i1___lwdiv@quotient+1,w
  5242  1367  01F1               	clrf	?i1___lwdiv+1
  5243  1368  07F1               	addwf	?i1___lwdiv+1,f
  5244  1369  0875               	movf	i1___lwdiv@quotient,w
  5245  136A  01F0               	clrf	?i1___lwdiv
  5246  136B  07F0               	addwf	?i1___lwdiv,f
  5247  136C  0008               	return
  5248  136D                     __end_ofi1___lwdiv:	
  5249                           
  5250                           	psect	text24
  5251  08DB                     __ptext24:	
  5252 ;; *************** function i1_TIMER0_Set *****************
  5253 ;; Defined at:
  5254 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  contagens       1    wreg     unsigned char 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  contagens       1    0[COMMON] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       0       0       0       0
  5269 ;;      Locals:         1       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0
  5271 ;;      Totals:         1       0       0       0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_ISR
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function i1_TIMER0_Set
  5283  08DB                     i1_TIMER0_Set:	
  5284                           
  5285                           ;incstack = 0
  5286                           ; Regs used in i1_TIMER0_Set: [wreg]
  5287                           ;i1TIMER0_Set@contagens stored from wreg
  5288  08DB  00F0               	movwf	i1TIMER0_Set@contagens
  5289                           
  5290                           ;timers.c: 22: TMR0 = contagens;
  5291  08DC  0870               	movf	i1TIMER0_Set@contagens,w
  5292  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  5293  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  5294  08DF  0081               	movwf	1	;volatile
  5295  08E0  0008               	return
  5296  08E1                     __end_ofi1_TIMER0_Set:	
  5297                           
  5298                           	psect	text25
  5299  1144                     __ptext25:	
  5300 ;; *************** function _USART_ReceiveChar *****************
  5301 ;; Defined at:
  5302 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  byte            1    4[COMMON] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      unsigned char 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5316 ;;      Params:         0       0       0       0       0
  5317 ;;      Locals:         1       0       0       0       0
  5318 ;;      Temps:          1       0       0       0       0
  5319 ;;      Totals:         2       0       0       0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		i1_USART_WriteString
  5325 ;; This function is called by:
  5326 ;;		_ISR
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function _USART_ReceiveChar
  5332  1144                     _USART_ReceiveChar:	
  5333                           
  5334                           ;usart.c: 65: unsigned char byte;
  5335                           ;usart.c: 67: if (!OERR)
  5336                           
  5337                           ;incstack = 0
  5338                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5339  1144  1283               	bcf	3,5	;RP0=0, select bank0
  5340  1145  1303               	bcf	3,6	;RP1=0, select bank0
  5341  1146  1898               	btfsc	24,1	;volatile
  5342  1147  294D               	goto	i1l2890
  5343                           
  5344                           ;usart.c: 68: {
  5345                           ;usart.c: 69: byte = RCREG;
  5346  1148  081A               	movf	26,w	;volatile
  5347  1149  00F3               	movwf	??_USART_ReceiveChar
  5348  114A  0873               	movf	??_USART_ReceiveChar,w
  5349  114B  00F4               	movwf	USART_ReceiveChar@byte
  5350  114C  295C               	goto	i1l2898
  5351  114D                     i1l2890:	
  5352                           ;usart.c: 71: }
  5353                           
  5354                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5355                           
  5356                           
  5357                           ;usart.c: 72: else
  5358                           ;usart.c: 73: {
  5359                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5360  114D  300B               	movlw	low (STR_19-__stringbase)
  5361  114E  00F1               	movwf	i1USART_WriteString@str
  5362  114F  3080               	movlw	128
  5363  1150  00F2               	movwf	i1USART_WriteString@str+1
  5364  1151  160A  118A  2202   	fcall	i1_USART_WriteString
  5365                           
  5366                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5367  1154  1283               	bcf	3,5	;RP0=0, select bank0
  5368  1155  1303               	bcf	3,6	;RP1=0, select bank0
  5369  1156  1218               	bcf	24,4	;volatile
  5370                           
  5371                           ;usart.c: 77: byte = RCREG;
  5372  1157  081A               	movf	26,w	;volatile
  5373  1158  00F3               	movwf	??_USART_ReceiveChar
  5374  1159  0873               	movf	??_USART_ReceiveChar,w
  5375  115A  00F4               	movwf	USART_ReceiveChar@byte
  5376                           
  5377                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5378  115B  1618               	bsf	24,4	;volatile
  5379  115C                     i1l2898:	
  5380                           
  5381                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5382  115C  128C               	bcf	12,5	;volatile
  5383                           
  5384                           ;usart.c: 80: }
  5385                           ;usart.c: 82: return(byte);
  5386  115D  0874               	movf	USART_ReceiveChar@byte,w
  5387  115E  0008               	return
  5388  115F                     __end_of_USART_ReceiveChar:	
  5389                           
  5390                           	psect	text26
  5391  1202                     __ptext26:	
  5392 ;; *************** function i1_USART_WriteString *****************
  5393 ;; Defined at:
  5394 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  str             2    1[COMMON] PTR const unsigned char 
  5397 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5398 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5399 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5400 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;		None               void
  5405 ;; Registers used:
  5406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         2       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0
  5415 ;;      Totals:         2       0       0       0       0
  5416 ;;Total ram usage:        2 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    1
  5419 ;; This function calls:
  5420 ;;		i1_USART_WriteChar
  5421 ;; This function is called by:
  5422 ;;		_ISR
  5423 ;;		_USART_ReceiveChar
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function i1_USART_WriteString
  5429  1202                     i1_USART_WriteString:	
  5430  1202                     i1l2730:	
  5431                           ;usart.c: 54: while(*str != '\0')
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5435                           
  5436  1202  0872               	movf	i1USART_WriteString@str+1,w
  5437  1203  1283               	bcf	3,5	;RP0=0, select bank0
  5438  1204  1303               	bcf	3,6	;RP1=0, select bank0
  5439  1205  00FF               	movwf	127
  5440  1206  0871               	movf	i1USART_WriteString@str,w
  5441  1207  0084               	movwf	4
  5442  1208  120A  158A  2000  160A  118A  	fcall	stringtab
  5443  120D  3800               	iorlw	0
  5444  120E  1903               	btfsc	3,2
  5445  120F  0008               	return
  5446                           
  5447                           ;usart.c: 55: {
  5448                           ;usart.c: 56: USART_WriteChar(*str);
  5449  1210  0872               	movf	i1USART_WriteString@str+1,w
  5450  1211  1283               	bcf	3,5	;RP0=0, select bank0
  5451  1212  1303               	bcf	3,6	;RP1=0, select bank0
  5452  1213  00FF               	movwf	127
  5453  1214  0871               	movf	i1USART_WriteString@str,w
  5454  1215  0084               	movwf	4
  5455  1216  120A  158A  2000  160A  118A  	fcall	stringtab
  5456  121B  160A  118A  2095  160A  118A  	fcall	i1_USART_WriteChar
  5457                           
  5458                           ;usart.c: 57: str++;
  5459  1220  3001               	movlw	1
  5460  1221  07F1               	addwf	i1USART_WriteString@str,f
  5461  1222  1803               	skipnc
  5462  1223  0AF2               	incf	i1USART_WriteString@str+1,f
  5463  1224  2A02               	goto	i1l2730
  5464  1225                     __end_ofi1_USART_WriteString:	
  5465                           
  5466                           	psect	text27
  5467  1095                     __ptext27:	
  5468 ;; *************** function i1_USART_WriteChar *****************
  5469 ;; Defined at:
  5470 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  byte            1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  byte            1    0[COMMON] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         1       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0
  5487 ;;      Totals:         1       0       0       0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		i1_USART_WriteString
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function i1_USART_WriteChar
  5499  1095                     i1_USART_WriteChar:	
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in i1_USART_WriteChar: [wreg]
  5503                           ;i1USART_WriteChar@byte stored from wreg
  5504  1095  00F0               	movwf	i1USART_WriteChar@byte
  5505  1096                     i1l229:	
  5506                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5507                           
  5508  1096  1283               	bcf	3,5	;RP0=0, select bank0
  5509  1097  1303               	bcf	3,6	;RP1=0, select bank0
  5510  1098  1E0C               	btfss	12,4	;volatile
  5511  1099  2896               	goto	i1l229
  5512                           
  5513                           ;usart.c: 47: TXREG = byte;
  5514  109A  0870               	movf	i1USART_WriteChar@byte,w
  5515  109B  0099               	movwf	25	;volatile
  5516  109C  0008               	return
  5517  109D                     __end_ofi1_USART_WriteChar:	
  5518                           
  5519                           	psect	text28
  5520  004F                     __ptext28:	
  5521 ;; *************** function _Fuzzy *****************
  5522 ;; Defined at:
  5523 ;;		line 130 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  a               2   61[BANK0 ] int 
  5528 ;;  a               2   59[BANK0 ] int 
  5529 ;;  a               2   57[BANK0 ] int 
  5530 ;;  a               2   65[BANK0 ] int 
  5531 ;;  a               2   63[BANK0 ] int 
  5532 ;;  aumenta         3   76[BANK0 ] float 
  5533 ;;  reduz           3   73[BANK0 ] float 
  5534 ;;  mantem          3   70[BANK0 ] float 
  5535 ;;  tip             3   67[BANK0 ] float 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;		None               void
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5545 ;;      Params:         0       0       0       0       0
  5546 ;;      Locals:         0      22       0       0       0
  5547 ;;      Temps:          0       0       0       0       0
  5548 ;;      Totals:         0      22       0       0       0
  5549 ;;Total ram usage:       22 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    3
  5552 ;; This function calls:
  5553 ;;		___ftadd
  5554 ;;		___ftdiv
  5555 ;;		___ftge
  5556 ;;		___ftmul
  5557 ;;		___ftneg
  5558 ;;		___fttol
  5559 ;;		___lwtoft
  5560 ;;		_max_val
  5561 ;;		_trapmf
  5562 ;;		_trimf
  5563 ;;		i1_PWM_DutyCycle2
  5564 ;;		i1___wmul
  5565 ;; This function is called by:
  5566 ;;		_ISR
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _Fuzzy
  5572  004F                     _Fuzzy:	
  5573                           
  5574                           ;main.c: 141: setpoint = (float)pwm;
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5578  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5579  0050  1303               	bcf	3,6	;RP1=0, select bank1
  5580  0051  0842               	movf	(_pwm+1)^(0+128),w
  5581  0052  01F9               	clrf	___lwtoft@c+1
  5582  0053  07F9               	addwf	___lwtoft@c+1,f
  5583  0054  0841               	movf	_pwm^(0+128),w
  5584  0055  01F8               	clrf	___lwtoft@c
  5585  0056  07F8               	addwf	___lwtoft@c,f
  5586  0057  160A  118A  20E7  120A  118A  	fcall	___lwtoft
  5587  005C  0878               	movf	?___lwtoft,w
  5588  005D  1683               	bsf	3,5	;RP0=1, select bank3
  5589  005E  1703               	bsf	3,6	;RP1=1, select bank3
  5590  005F  00B7               	movwf	_setpoint^(0+384)
  5591  0060  0879               	movf	?___lwtoft+1,w
  5592  0061  00B8               	movwf	(_setpoint+1)^(0+384)
  5593  0062  087A               	movf	?___lwtoft+2,w
  5594  0063  00B9               	movwf	(_setpoint+2)^(0+384)
  5595                           
  5596                           ;main.c: 143: float mantem = 1100;
  5597  0064  3080               	movlw	128
  5598  0065  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0066  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0067  00E6               	movwf	Fuzzy@mantem
  5601  0068  3089               	movlw	137
  5602  0069  00E7               	movwf	Fuzzy@mantem+1
  5603  006A  3044               	movlw	68
  5604  006B  00E8               	movwf	Fuzzy@mantem+2
  5605                           
  5606                           ;main.c: 144: float reduz = 2200;
  5607  006C  3080               	movlw	128
  5608  006D  00E9               	movwf	Fuzzy@reduz
  5609  006E  3009               	movlw	9
  5610  006F  00EA               	movwf	Fuzzy@reduz+1
  5611  0070  3045               	movlw	69
  5612  0071  00EB               	movwf	Fuzzy@reduz+2
  5613                           
  5614                           ;main.c: 145: float aumenta = 3300;
  5615  0072  3040               	movlw	64
  5616  0073  00EC               	movwf	Fuzzy@aumenta
  5617  0074  304E               	movlw	78
  5618  0075  00ED               	movwf	Fuzzy@aumenta+1
  5619  0076  3045               	movlw	69
  5620  0077  00EE               	movwf	Fuzzy@aumenta+2
  5621                           
  5622                           ;main.c: 146: float tip;
  5623                           ;main.c: 147: fitemp =0;
  5624  0078  3000               	movlw	0
  5625  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5626  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5627  007B  00A0               	movwf	_fitemp^(0+128)
  5628  007C  3000               	movlw	0
  5629  007D  00A1               	movwf	(_fitemp+1)^(0+128)
  5630  007E  3000               	movlw	0
  5631  007F  00A2               	movwf	(_fitemp+2)^(0+128)
  5632                           
  5633                           ;main.c: 150: temp = (setpoint - tf);
  5634  0080  1683               	bsf	3,5	;RP0=1, select bank3
  5635  0081  1703               	bsf	3,6	;RP1=1, select bank3
  5636  0082  0837               	movf	_setpoint^(0+384),w
  5637  0083  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0084  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0085  00BA               	movwf	___ftadd@f1
  5640  0086  1683               	bsf	3,5	;RP0=1, select bank3
  5641  0087  1703               	bsf	3,6	;RP1=1, select bank3
  5642  0088  0838               	movf	(_setpoint+1)^(0+384),w
  5643  0089  1283               	bcf	3,5	;RP0=0, select bank0
  5644  008A  1303               	bcf	3,6	;RP1=0, select bank0
  5645  008B  00BB               	movwf	___ftadd@f1+1
  5646  008C  1683               	bsf	3,5	;RP0=1, select bank3
  5647  008D  1703               	bsf	3,6	;RP1=1, select bank3
  5648  008E  0839               	movf	(_setpoint+2)^(0+384),w
  5649  008F  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0090  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0091  00BC               	movwf	___ftadd@f1+2
  5652  0092  1683               	bsf	3,5	;RP0=1, select bank3
  5653  0093  1703               	bsf	3,6	;RP1=1, select bank3
  5654  0094  0816               	movf	_tf^(0+384),w
  5655  0095  00F0               	movwf	___ftneg@f1
  5656  0096  0817               	movf	(_tf+1)^(0+384),w
  5657  0097  00F1               	movwf	___ftneg@f1+1
  5658  0098  0818               	movf	(_tf+2)^(0+384),w
  5659  0099  00F2               	movwf	___ftneg@f1+2
  5660  009A  160A  118A  208D  120A  118A  	fcall	___ftneg
  5661  009F  0870               	movf	?___ftneg,w
  5662  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  5663  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  5664  00A2  00BD               	movwf	___ftadd@f2
  5665  00A3  0871               	movf	?___ftneg+1,w
  5666  00A4  00BE               	movwf	___ftadd@f2+1
  5667  00A5  0872               	movf	?___ftneg+2,w
  5668  00A6  00BF               	movwf	___ftadd@f2+2
  5669  00A7  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5670  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  5671  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  5672  00AE  083A               	movf	?___ftadd,w
  5673  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  5674  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  5675  00B1  00AF               	movwf	_temp^(0+128)
  5676  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  5677  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  5678  00B4  083B               	movf	?___ftadd+1,w
  5679  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  5680  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  5681  00B7  00B0               	movwf	(_temp+1)^(0+128)
  5682  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  5683  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  5684  00BA  083C               	movf	?___ftadd+2,w
  5685  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  5686  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  5687  00BD  00B1               	movwf	(_temp+2)^(0+128)
  5688                           
  5689                           ;main.c: 151: temp = (temp/100)*-1;
  5690  00BE  3000               	movlw	0
  5691  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  5692  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  5693  00C1  00AA               	movwf	___ftmul@f1
  5694  00C2  3080               	movlw	128
  5695  00C3  00AB               	movwf	___ftmul@f1+1
  5696  00C4  30BF               	movlw	191
  5697  00C5  00AC               	movwf	___ftmul@f1+2
  5698  00C6  3000               	movlw	0
  5699  00C7  00F8               	movwf	___ftdiv@f2
  5700  00C8  30C8               	movlw	200
  5701  00C9  00F9               	movwf	___ftdiv@f2+1
  5702  00CA  3042               	movlw	66
  5703  00CB  00FA               	movwf	___ftdiv@f2+2
  5704  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  5705  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  5706  00CE  082F               	movf	_temp^(0+128),w
  5707  00CF  00FB               	movwf	___ftdiv@f1
  5708  00D0  0830               	movf	(_temp+1)^(0+128),w
  5709  00D1  00FC               	movwf	___ftdiv@f1+1
  5710  00D2  0831               	movf	(_temp+2)^(0+128),w
  5711  00D3  00FD               	movwf	___ftdiv@f1+2
  5712  00D4  160A  118A  2641  120A  118A  	fcall	___ftdiv
  5713  00D9  0878               	movf	?___ftdiv,w
  5714  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  5715  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  5716  00DC  00AD               	movwf	___ftmul@f2
  5717  00DD  0879               	movf	?___ftdiv+1,w
  5718  00DE  00AE               	movwf	___ftmul@f2+1
  5719  00DF  087A               	movf	?___ftdiv+2,w
  5720  00E0  00AF               	movwf	___ftmul@f2+2
  5721  00E1  120A  118A  272B  120A  118A  	fcall	___ftmul
  5722  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5723  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  5724  00E8  082A               	movf	?___ftmul,w
  5725  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  5726  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  5727  00EB  00AF               	movwf	_temp^(0+128)
  5728  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  5729  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  5730  00EE  082B               	movf	?___ftmul+1,w
  5731  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  5732  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  5733  00F1  00B0               	movwf	(_temp+1)^(0+128)
  5734  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  5735  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  5736  00F4  082C               	movf	?___ftmul+2,w
  5737  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  5738  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  5739  00F7  00B1               	movwf	(_temp+2)^(0+128)
  5740                           
  5741                           ;main.c: 153: deltaV = temp;
  5742  00F8  082F               	movf	_temp^(0+128),w
  5743  00F9  00F0               	movwf	___fttol@f1
  5744  00FA  0830               	movf	(_temp+1)^(0+128),w
  5745  00FB  00F1               	movwf	___fttol@f1+1
  5746  00FC  0831               	movf	(_temp+2)^(0+128),w
  5747  00FD  00F2               	movwf	___fttol@f1+2
  5748  00FE  160A  118A  2526  120A  118A  	fcall	___fttol
  5749  0103  0871               	movf	?___fttol+1,w
  5750  0104  1683               	bsf	3,5	;RP0=1, select bank1
  5751  0105  1303               	bcf	3,6	;RP1=0, select bank1
  5752  0106  01BE               	clrf	(_deltaV+1)^(0+128)
  5753  0107  07BE               	addwf	(_deltaV+1)^(0+128),f
  5754  0108  0870               	movf	?___fttol,w
  5755  0109  01BD               	clrf	_deltaV^(0+128)
  5756  010A  07BD               	addwf	_deltaV^(0+128),f
  5757                           
  5758                           ;main.c: 156: if (temp >100) temp = 100;
  5759  010B  3000               	movlw	0
  5760  010C  00F0               	movwf	___ftge@ff1
  5761  010D  30C8               	movlw	200
  5762  010E  00F1               	movwf	___ftge@ff1+1
  5763  010F  3042               	movlw	66
  5764  0110  00F2               	movwf	___ftge@ff1+2
  5765  0111  082F               	movf	_temp^(0+128),w
  5766  0112  00F3               	movwf	___ftge@ff2
  5767  0113  0830               	movf	(_temp+1)^(0+128),w
  5768  0114  00F4               	movwf	___ftge@ff2+1
  5769  0115  0831               	movf	(_temp+2)^(0+128),w
  5770  0116  00F5               	movwf	___ftge@ff2+2
  5771  0117  160A  118A  23F6  120A  118A  	fcall	___ftge
  5772  011C  1803               	btfsc	3,0
  5773  011D  2926               	goto	i1l2760
  5774  011E  3000               	movlw	0
  5775  011F  1683               	bsf	3,5	;RP0=1, select bank1
  5776  0120  1303               	bcf	3,6	;RP1=0, select bank1
  5777  0121  00AF               	movwf	_temp^(0+128)
  5778  0122  30C8               	movlw	200
  5779  0123  00B0               	movwf	(_temp+1)^(0+128)
  5780  0124  3042               	movlw	66
  5781  0125  00B1               	movwf	(_temp+2)^(0+128)
  5782  0126                     i1l2760:	
  5783                           
  5784                           ;main.c: 157: if (temp <0) temp = 0;
  5785  0126  1683               	bsf	3,5	;RP0=1, select bank1
  5786  0127  1303               	bcf	3,6	;RP1=0, select bank1
  5787  0128  082F               	movf	_temp^(0+128),w
  5788  0129  00F0               	movwf	___ftge@ff1
  5789  012A  0830               	movf	(_temp+1)^(0+128),w
  5790  012B  00F1               	movwf	___ftge@ff1+1
  5791  012C  0831               	movf	(_temp+2)^(0+128),w
  5792  012D  00F2               	movwf	___ftge@ff1+2
  5793  012E  3000               	movlw	0
  5794  012F  00F3               	movwf	___ftge@ff2
  5795  0130  3000               	movlw	0
  5796  0131  00F4               	movwf	___ftge@ff2+1
  5797  0132  3000               	movlw	0
  5798  0133  00F5               	movwf	___ftge@ff2+2
  5799  0134  160A  118A  23F6  120A  118A  	fcall	___ftge
  5800  0139  1803               	btfsc	3,0
  5801  013A  2943               	goto	i1l2764
  5802  013B  3000               	movlw	0
  5803  013C  1683               	bsf	3,5	;RP0=1, select bank1
  5804  013D  1303               	bcf	3,6	;RP1=0, select bank1
  5805  013E  00AF               	movwf	_temp^(0+128)
  5806  013F  3000               	movlw	0
  5807  0140  00B0               	movwf	(_temp+1)^(0+128)
  5808  0141  3000               	movlw	0
  5809  0142  00B1               	movwf	(_temp+2)^(0+128)
  5810  0143                     i1l2764:	
  5811                           
  5812                           ;main.c: 160: if (temp < 25)
  5813  0143  1683               	bsf	3,5	;RP0=1, select bank1
  5814  0144  1303               	bcf	3,6	;RP1=0, select bank1
  5815  0145  082F               	movf	_temp^(0+128),w
  5816  0146  00F0               	movwf	___ftge@ff1
  5817  0147  0830               	movf	(_temp+1)^(0+128),w
  5818  0148  00F1               	movwf	___ftge@ff1+1
  5819  0149  0831               	movf	(_temp+2)^(0+128),w
  5820  014A  00F2               	movwf	___ftge@ff1+2
  5821  014B  3000               	movlw	0
  5822  014C  00F3               	movwf	___ftge@ff2
  5823  014D  30C8               	movlw	200
  5824  014E  00F4               	movwf	___ftge@ff2+1
  5825  014F  3041               	movlw	65
  5826  0150  00F5               	movwf	___ftge@ff2+2
  5827  0151  160A  118A  23F6  120A  118A  	fcall	___ftge
  5828  0156  1803               	btfsc	3,0
  5829  0157  2AAC               	goto	i1l2788
  5830                           
  5831                           ;main.c: 161: {
  5832                           ;main.c: 164: fitemp = trapmf(temp, 0,0,13,32);
  5833  0158  1683               	bsf	3,5	;RP0=1, select bank1
  5834  0159  1303               	bcf	3,6	;RP1=0, select bank1
  5835  015A  082F               	movf	_temp^(0+128),w
  5836  015B  1283               	bcf	3,5	;RP0=0, select bank0
  5837  015C  1303               	bcf	3,6	;RP1=0, select bank0
  5838  015D  00C7               	movwf	trapmf@x
  5839  015E  1683               	bsf	3,5	;RP0=1, select bank1
  5840  015F  1303               	bcf	3,6	;RP1=0, select bank1
  5841  0160  0830               	movf	(_temp+1)^(0+128),w
  5842  0161  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0162  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0163  00C8               	movwf	trapmf@x+1
  5845  0164  1683               	bsf	3,5	;RP0=1, select bank1
  5846  0165  1303               	bcf	3,6	;RP1=0, select bank1
  5847  0166  0831               	movf	(_temp+2)^(0+128),w
  5848  0167  1283               	bcf	3,5	;RP0=0, select bank0
  5849  0168  1303               	bcf	3,6	;RP1=0, select bank0
  5850  0169  00C9               	movwf	trapmf@x+2
  5851  016A  3000               	movlw	0
  5852  016B  00CA               	movwf	trapmf@a
  5853  016C  3000               	movlw	0
  5854  016D  00CB               	movwf	trapmf@a+1
  5855  016E  3000               	movlw	0
  5856  016F  00CC               	movwf	trapmf@a+2
  5857  0170  3000               	movlw	0
  5858  0171  00CD               	movwf	trapmf@b
  5859  0172  3000               	movlw	0
  5860  0173  00CE               	movwf	trapmf@b+1
  5861  0174  3000               	movlw	0
  5862  0175  00CF               	movwf	trapmf@b+2
  5863  0176  3000               	movlw	0
  5864  0177  00D0               	movwf	trapmf@c
  5865  0178  3050               	movlw	80
  5866  0179  00D1               	movwf	trapmf@c+1
  5867  017A  3041               	movlw	65
  5868  017B  00D2               	movwf	trapmf@c+2
  5869  017C  3000               	movlw	0
  5870  017D  00D3               	movwf	trapmf@d
  5871  017E  3000               	movlw	0
  5872  017F  00D4               	movwf	trapmf@d+1
  5873  0180  3042               	movlw	66
  5874  0181  00D5               	movwf	trapmf@d+2
  5875  0182  120A  158A  2356  120A  118A  	fcall	_trapmf
  5876  0187  1283               	bcf	3,5	;RP0=0, select bank0
  5877  0188  1303               	bcf	3,6	;RP1=0, select bank0
  5878  0189  0847               	movf	?_trapmf,w
  5879  018A  1683               	bsf	3,5	;RP0=1, select bank1
  5880  018B  1303               	bcf	3,6	;RP1=0, select bank1
  5881  018C  00A0               	movwf	_fitemp^(0+128)
  5882  018D  1283               	bcf	3,5	;RP0=0, select bank0
  5883  018E  1303               	bcf	3,6	;RP1=0, select bank0
  5884  018F  0848               	movf	?_trapmf+1,w
  5885  0190  1683               	bsf	3,5	;RP0=1, select bank1
  5886  0191  1303               	bcf	3,6	;RP1=0, select bank1
  5887  0192  00A1               	movwf	(_fitemp+1)^(0+128)
  5888  0193  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0194  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0195  0849               	movf	?_trapmf+2,w
  5891  0196  1683               	bsf	3,5	;RP0=1, select bank1
  5892  0197  1303               	bcf	3,6	;RP1=0, select bank1
  5893  0198  00A2               	movwf	(_fitemp+2)^(0+128)
  5894                           
  5895                           ;main.c: 167: fop_rule1 = max_val(fitemp,0.1);
  5896  0199  0820               	movf	_fitemp^(0+128),w
  5897  019A  1283               	bcf	3,5	;RP0=0, select bank0
  5898  019B  1303               	bcf	3,6	;RP1=0, select bank0
  5899  019C  00A0               	movwf	max_val@a
  5900  019D  1683               	bsf	3,5	;RP0=1, select bank1
  5901  019E  1303               	bcf	3,6	;RP1=0, select bank1
  5902  019F  0821               	movf	(_fitemp+1)^(0+128),w
  5903  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  5904  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  5905  01A2  00A1               	movwf	max_val@a+1
  5906  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  5907  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  5908  01A5  0822               	movf	(_fitemp+2)^(0+128),w
  5909  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  5910  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  5911  01A8  00A2               	movwf	max_val@a+2
  5912  01A9  30CD               	movlw	205
  5913  01AA  00A3               	movwf	max_val@b
  5914  01AB  30CC               	movlw	204
  5915  01AC  00A4               	movwf	max_val@b+1
  5916  01AD  303D               	movlw	61
  5917  01AE  00A5               	movwf	max_val@b+2
  5918  01AF  160A  118A  215F  120A  118A  	fcall	_max_val
  5919  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  5920  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  5921  01B6  0820               	movf	?_max_val,w
  5922  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  5923  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  5924  01B9  00A3               	movwf	_fop_rule1^(0+128)
  5925  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  5926  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  5927  01BC  0821               	movf	?_max_val+1,w
  5928  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  5929  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  5930  01BF  00A4               	movwf	(_fop_rule1+1)^(0+128)
  5931  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5932  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5933  01C2  0822               	movf	?_max_val+2,w
  5934  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  5935  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  5936  01C5  00A5               	movwf	(_fop_rule1+2)^(0+128)
  5937                           
  5938                           ;main.c: 170: x=0;
  5939  01C6  3000               	movlw	0
  5940  01C7  00B5               	movwf	_x^(0+128)
  5941  01C8  3000               	movlw	0
  5942  01C9  00B6               	movwf	(_x+1)^(0+128)
  5943  01CA  3000               	movlw	0
  5944  01CB  00B7               	movwf	(_x+2)^(0+128)
  5945                           
  5946                           ;main.c: 171: y=0;
  5947  01CC  3000               	movlw	0
  5948  01CD  00B8               	movwf	_y^(0+128)
  5949  01CE  3000               	movlw	0
  5950  01CF  00B9               	movwf	(_y+1)^(0+128)
  5951  01D0  3000               	movlw	0
  5952  01D1  00BA               	movwf	(_y+2)^(0+128)
  5953                           
  5954                           ;main.c: 172: for (int a=0; a<=90; a++)
  5955  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  5956  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  5957  01D4  01D9               	clrf	Fuzzy@a
  5958  01D5  01DA               	clrf	Fuzzy@a+1
  5959  01D6  085A               	movf	Fuzzy@a+1,w
  5960  01D7  3A80               	xorlw	128
  5961  01D8  00FF               	movwf	127
  5962  01D9  3080               	movlw	128
  5963  01DA  027F               	subwf	127,w
  5964  01DB  1D03               	skipz
  5965  01DC  29DF               	goto	u342_25
  5966  01DD  305B               	movlw	91
  5967  01DE  0259               	subwf	Fuzzy@a,w
  5968  01DF                     u342_25:	
  5969  01DF  1803               	btfsc	3,0
  5970  01E0  2AAC               	goto	i1l2788
  5971  01E1                     i1l2778:	
  5972                           
  5973                           ;main.c: 173: {
  5974                           ;main.c: 174: y = trapmf(x,0,0,13,32);
  5975  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  5976  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  5977  01E3  0835               	movf	_x^(0+128),w
  5978  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  5979  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  5980  01E6  00C7               	movwf	trapmf@x
  5981  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  5982  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  5983  01E9  0836               	movf	(_x+1)^(0+128),w
  5984  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5985  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5986  01EC  00C8               	movwf	trapmf@x+1
  5987  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  5988  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  5989  01EF  0837               	movf	(_x+2)^(0+128),w
  5990  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  5991  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  5992  01F2  00C9               	movwf	trapmf@x+2
  5993  01F3  3000               	movlw	0
  5994  01F4  00CA               	movwf	trapmf@a
  5995  01F5  3000               	movlw	0
  5996  01F6  00CB               	movwf	trapmf@a+1
  5997  01F7  3000               	movlw	0
  5998  01F8  00CC               	movwf	trapmf@a+2
  5999  01F9  3000               	movlw	0
  6000  01FA  00CD               	movwf	trapmf@b
  6001  01FB  3000               	movlw	0
  6002  01FC  00CE               	movwf	trapmf@b+1
  6003  01FD  3000               	movlw	0
  6004  01FE  00CF               	movwf	trapmf@b+2
  6005  01FF  3000               	movlw	0
  6006  0200  00D0               	movwf	trapmf@c
  6007  0201  3050               	movlw	80
  6008  0202  00D1               	movwf	trapmf@c+1
  6009  0203  3041               	movlw	65
  6010  0204  00D2               	movwf	trapmf@c+2
  6011  0205  3000               	movlw	0
  6012  0206  00D3               	movwf	trapmf@d
  6013  0207  3000               	movlw	0
  6014  0208  00D4               	movwf	trapmf@d+1
  6015  0209  3042               	movlw	66
  6016  020A  00D5               	movwf	trapmf@d+2
  6017  020B  120A  158A  2356  120A  118A  	fcall	_trapmf
  6018  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0212  0847               	movf	?_trapmf,w
  6021  0213  1683               	bsf	3,5	;RP0=1, select bank1
  6022  0214  1303               	bcf	3,6	;RP1=0, select bank1
  6023  0215  00B8               	movwf	_y^(0+128)
  6024  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6025  0217  1303               	bcf	3,6	;RP1=0, select bank0
  6026  0218  0848               	movf	?_trapmf+1,w
  6027  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6028  021A  1303               	bcf	3,6	;RP1=0, select bank1
  6029  021B  00B9               	movwf	(_y+1)^(0+128)
  6030  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6031  021D  1303               	bcf	3,6	;RP1=0, select bank0
  6032  021E  0849               	movf	?_trapmf+2,w
  6033  021F  1683               	bsf	3,5	;RP0=1, select bank1
  6034  0220  1303               	bcf	3,6	;RP1=0, select bank1
  6035  0221  00BA               	movwf	(_y+2)^(0+128)
  6036                           
  6037                           ;main.c: 176: if (y > fop_rule1)
  6038  0222  0823               	movf	_fop_rule1^(0+128),w
  6039  0223  00F0               	movwf	___ftge@ff1
  6040  0224  0824               	movf	(_fop_rule1+1)^(0+128),w
  6041  0225  00F1               	movwf	___ftge@ff1+1
  6042  0226  0825               	movf	(_fop_rule1+2)^(0+128),w
  6043  0227  00F2               	movwf	___ftge@ff1+2
  6044  0228  0838               	movf	_y^(0+128),w
  6045  0229  00F3               	movwf	___ftge@ff2
  6046  022A  0839               	movf	(_y+1)^(0+128),w
  6047  022B  00F4               	movwf	___ftge@ff2+1
  6048  022C  083A               	movf	(_y+2)^(0+128),w
  6049  022D  00F5               	movwf	___ftge@ff2+2
  6050  022E  160A  118A  23F6  120A  118A  	fcall	___ftge
  6051  0233  1803               	btfsc	3,0
  6052  0234  2A45               	goto	i1l2782
  6053                           
  6054                           ;main.c: 177: {
  6055                           ;main.c: 178: mantem += fop_rule1;
  6056  0235  1683               	bsf	3,5	;RP0=1, select bank1
  6057  0236  1303               	bcf	3,6	;RP1=0, select bank1
  6058  0237  0823               	movf	_fop_rule1^(0+128),w
  6059  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6060  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6061  023A  00BA               	movwf	___ftadd@f1
  6062  023B  1683               	bsf	3,5	;RP0=1, select bank1
  6063  023C  1303               	bcf	3,6	;RP1=0, select bank1
  6064  023D  0824               	movf	(_fop_rule1+1)^(0+128),w
  6065  023E  1283               	bcf	3,5	;RP0=0, select bank0
  6066  023F  1303               	bcf	3,6	;RP1=0, select bank0
  6067  0240  00BB               	movwf	___ftadd@f1+1
  6068  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6069  0242  1303               	bcf	3,6	;RP1=0, select bank1
  6070  0243  0825               	movf	(_fop_rule1+2)^(0+128),w
  6071  0244  2A54               	goto	L3
  6072  0245                     i1l2782:	
  6073                           ;main.c: 179: }
  6074                           
  6075                           
  6076                           ;main.c: 180: else
  6077                           ;main.c: 181: {
  6078                           ;main.c: 182: mantem += y;
  6079  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6080  0246  1303               	bcf	3,6	;RP1=0, select bank1
  6081  0247  0838               	movf	_y^(0+128),w
  6082  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0249  1303               	bcf	3,6	;RP1=0, select bank0
  6084  024A  00BA               	movwf	___ftadd@f1
  6085  024B  1683               	bsf	3,5	;RP0=1, select bank1
  6086  024C  1303               	bcf	3,6	;RP1=0, select bank1
  6087  024D  0839               	movf	(_y+1)^(0+128),w
  6088  024E  1283               	bcf	3,5	;RP0=0, select bank0
  6089  024F  1303               	bcf	3,6	;RP1=0, select bank0
  6090  0250  00BB               	movwf	___ftadd@f1+1
  6091  0251  1683               	bsf	3,5	;RP0=1, select bank1
  6092  0252  1303               	bcf	3,6	;RP1=0, select bank1
  6093  0253  083A               	movf	(_y+2)^(0+128),w
  6094  0254                     L3:	
  6095  0254  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0255  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0256  00BC               	movwf	___ftadd@f1+2
  6098  0257  0866               	movf	Fuzzy@mantem,w
  6099  0258  00BD               	movwf	___ftadd@f2
  6100  0259  0867               	movf	Fuzzy@mantem+1,w
  6101  025A  00BE               	movwf	___ftadd@f2+1
  6102  025B  0868               	movf	Fuzzy@mantem+2,w
  6103  025C  00BF               	movwf	___ftadd@f2+2
  6104  025D  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6105  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6106  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6107  0264  083A               	movf	?___ftadd,w
  6108  0265  00E6               	movwf	Fuzzy@mantem
  6109  0266  083B               	movf	?___ftadd+1,w
  6110  0267  00E7               	movwf	Fuzzy@mantem+1
  6111  0268  083C               	movf	?___ftadd+2,w
  6112  0269  00E8               	movwf	Fuzzy@mantem+2
  6113                           
  6114                           ;main.c: 183: }
  6115                           ;main.c: 185: x=x+1;
  6116  026A  3000               	movlw	0
  6117  026B  00BA               	movwf	___ftadd@f1
  6118  026C  3080               	movlw	128
  6119  026D  00BB               	movwf	___ftadd@f1+1
  6120  026E  303F               	movlw	63
  6121  026F  00BC               	movwf	___ftadd@f1+2
  6122  0270  1683               	bsf	3,5	;RP0=1, select bank1
  6123  0271  1303               	bcf	3,6	;RP1=0, select bank1
  6124  0272  0835               	movf	_x^(0+128),w
  6125  0273  1283               	bcf	3,5	;RP0=0, select bank0
  6126  0274  1303               	bcf	3,6	;RP1=0, select bank0
  6127  0275  00BD               	movwf	___ftadd@f2
  6128  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0277  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0278  0836               	movf	(_x+1)^(0+128),w
  6131  0279  1283               	bcf	3,5	;RP0=0, select bank0
  6132  027A  1303               	bcf	3,6	;RP1=0, select bank0
  6133  027B  00BE               	movwf	___ftadd@f2+1
  6134  027C  1683               	bsf	3,5	;RP0=1, select bank1
  6135  027D  1303               	bcf	3,6	;RP1=0, select bank1
  6136  027E  0837               	movf	(_x+2)^(0+128),w
  6137  027F  1283               	bcf	3,5	;RP0=0, select bank0
  6138  0280  1303               	bcf	3,6	;RP1=0, select bank0
  6139  0281  00BF               	movwf	___ftadd@f2+2
  6140  0282  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6141  0287  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0288  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0289  083A               	movf	?___ftadd,w
  6144  028A  1683               	bsf	3,5	;RP0=1, select bank1
  6145  028B  1303               	bcf	3,6	;RP1=0, select bank1
  6146  028C  00B5               	movwf	_x^(0+128)
  6147  028D  1283               	bcf	3,5	;RP0=0, select bank0
  6148  028E  1303               	bcf	3,6	;RP1=0, select bank0
  6149  028F  083B               	movf	?___ftadd+1,w
  6150  0290  1683               	bsf	3,5	;RP0=1, select bank1
  6151  0291  1303               	bcf	3,6	;RP1=0, select bank1
  6152  0292  00B6               	movwf	(_x+1)^(0+128)
  6153  0293  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0294  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0295  083C               	movf	?___ftadd+2,w
  6156  0296  1683               	bsf	3,5	;RP0=1, select bank1
  6157  0297  1303               	bcf	3,6	;RP1=0, select bank1
  6158  0298  00B7               	movwf	(_x+2)^(0+128)
  6159  0299  3001               	movlw	1
  6160  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6161  029B  1303               	bcf	3,6	;RP1=0, select bank0
  6162  029C  07D9               	addwf	Fuzzy@a,f
  6163  029D  1803               	skipnc
  6164  029E  0ADA               	incf	Fuzzy@a+1,f
  6165  029F  3000               	movlw	0
  6166  02A0  07DA               	addwf	Fuzzy@a+1,f
  6167  02A1  085A               	movf	Fuzzy@a+1,w
  6168  02A2  3A80               	xorlw	128
  6169  02A3  00FF               	movwf	127
  6170  02A4  3080               	movlw	128
  6171  02A5  027F               	subwf	127,w
  6172  02A6  1D03               	skipz
  6173  02A7  2AAA               	goto	u344_25
  6174  02A8  305B               	movlw	91
  6175  02A9  0259               	subwf	Fuzzy@a,w
  6176  02AA                     u344_25:	
  6177  02AA  1C03               	skipc
  6178  02AB  29E1               	goto	i1l2778
  6179  02AC                     i1l2788:	
  6180                           
  6181                           ;main.c: 186: }
  6182                           ;main.c: 188: }
  6183                           ;main.c: 194: if ((temp > 20) && (temp < 70))
  6184  02AC  3000               	movlw	0
  6185  02AD  00F0               	movwf	___ftge@ff1
  6186  02AE  30A0               	movlw	160
  6187  02AF  00F1               	movwf	___ftge@ff1+1
  6188  02B0  3041               	movlw	65
  6189  02B1  00F2               	movwf	___ftge@ff1+2
  6190  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  6191  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  6192  02B4  082F               	movf	_temp^(0+128),w
  6193  02B5  00F3               	movwf	___ftge@ff2
  6194  02B6  0830               	movf	(_temp+1)^(0+128),w
  6195  02B7  00F4               	movwf	___ftge@ff2+1
  6196  02B8  0831               	movf	(_temp+2)^(0+128),w
  6197  02B9  00F5               	movwf	___ftge@ff2+2
  6198  02BA  160A  118A  23F6  120A  118A  	fcall	___ftge
  6199  02BF  1803               	btfsc	3,0
  6200  02C0  2C1E               	goto	i1l2814
  6201  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  6202  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  6203  02C3  082F               	movf	_temp^(0+128),w
  6204  02C4  00F0               	movwf	___ftge@ff1
  6205  02C5  0830               	movf	(_temp+1)^(0+128),w
  6206  02C6  00F1               	movwf	___ftge@ff1+1
  6207  02C7  0831               	movf	(_temp+2)^(0+128),w
  6208  02C8  00F2               	movwf	___ftge@ff1+2
  6209  02C9  3000               	movlw	0
  6210  02CA  00F3               	movwf	___ftge@ff2
  6211  02CB  308C               	movlw	140
  6212  02CC  00F4               	movwf	___ftge@ff2+1
  6213  02CD  3042               	movlw	66
  6214  02CE  00F5               	movwf	___ftge@ff2+2
  6215  02CF  160A  118A  23F6  120A  118A  	fcall	___ftge
  6216  02D4  1803               	btfsc	3,0
  6217  02D5  2C1E               	goto	i1l2814
  6218                           
  6219                           ;main.c: 195: {
  6220                           ;main.c: 197: fitemp = trimf(temp, 9, 45, 81);
  6221  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  6222  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  6223  02D8  082F               	movf	_temp^(0+128),w
  6224  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  6225  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  6226  02DB  00C7               	movwf	trimf@x
  6227  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  6228  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  6229  02DE  0830               	movf	(_temp+1)^(0+128),w
  6230  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6231  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  6232  02E1  00C8               	movwf	trimf@x+1
  6233  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  6234  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  6235  02E4  0831               	movf	(_temp+2)^(0+128),w
  6236  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  6237  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  6238  02E7  00C9               	movwf	trimf@x+2
  6239  02E8  3000               	movlw	0
  6240  02E9  00CA               	movwf	trimf@a
  6241  02EA  3010               	movlw	16
  6242  02EB  00CB               	movwf	trimf@a+1
  6243  02EC  3041               	movlw	65
  6244  02ED  00CC               	movwf	trimf@a+2
  6245  02EE  3000               	movlw	0
  6246  02EF  00CD               	movwf	trimf@b
  6247  02F0  3034               	movlw	52
  6248  02F1  00CE               	movwf	trimf@b+1
  6249  02F2  3042               	movlw	66
  6250  02F3  00CF               	movwf	trimf@b+2
  6251  02F4  3000               	movlw	0
  6252  02F5  00D0               	movwf	trimf@c
  6253  02F6  30A2               	movlw	162
  6254  02F7  00D1               	movwf	trimf@c+1
  6255  02F8  3042               	movlw	66
  6256  02F9  00D2               	movwf	trimf@c+2
  6257  02FA  120A  158A  20E1  120A  118A  	fcall	_trimf
  6258  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  6259  0300  1303               	bcf	3,6	;RP1=0, select bank0
  6260  0301  0847               	movf	?_trimf,w
  6261  0302  1683               	bsf	3,5	;RP0=1, select bank1
  6262  0303  1303               	bcf	3,6	;RP1=0, select bank1
  6263  0304  00A0               	movwf	_fitemp^(0+128)
  6264  0305  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0306  1303               	bcf	3,6	;RP1=0, select bank0
  6266  0307  0848               	movf	?_trimf+1,w
  6267  0308  1683               	bsf	3,5	;RP0=1, select bank1
  6268  0309  1303               	bcf	3,6	;RP1=0, select bank1
  6269  030A  00A1               	movwf	(_fitemp+1)^(0+128)
  6270  030B  1283               	bcf	3,5	;RP0=0, select bank0
  6271  030C  1303               	bcf	3,6	;RP1=0, select bank0
  6272  030D  0849               	movf	?_trimf+2,w
  6273  030E  1683               	bsf	3,5	;RP0=1, select bank1
  6274  030F  1303               	bcf	3,6	;RP1=0, select bank1
  6275  0310  00A2               	movwf	(_fitemp+2)^(0+128)
  6276                           
  6277                           ;main.c: 200: fop_rule2 = max_val(fitemp,0.1);
  6278  0311  0820               	movf	_fitemp^(0+128),w
  6279  0312  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0313  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0314  00A0               	movwf	max_val@a
  6282  0315  1683               	bsf	3,5	;RP0=1, select bank1
  6283  0316  1303               	bcf	3,6	;RP1=0, select bank1
  6284  0317  0821               	movf	(_fitemp+1)^(0+128),w
  6285  0318  1283               	bcf	3,5	;RP0=0, select bank0
  6286  0319  1303               	bcf	3,6	;RP1=0, select bank0
  6287  031A  00A1               	movwf	max_val@a+1
  6288  031B  1683               	bsf	3,5	;RP0=1, select bank1
  6289  031C  1303               	bcf	3,6	;RP1=0, select bank1
  6290  031D  0822               	movf	(_fitemp+2)^(0+128),w
  6291  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6292  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0320  00A2               	movwf	max_val@a+2
  6294  0321  30CD               	movlw	205
  6295  0322  00A3               	movwf	max_val@b
  6296  0323  30CC               	movlw	204
  6297  0324  00A4               	movwf	max_val@b+1
  6298  0325  303D               	movlw	61
  6299  0326  00A5               	movwf	max_val@b+2
  6300  0327  160A  118A  215F  120A  118A  	fcall	_max_val
  6301  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6302  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6303  032E  0820               	movf	?_max_val,w
  6304  032F  1683               	bsf	3,5	;RP0=1, select bank1
  6305  0330  1303               	bcf	3,6	;RP1=0, select bank1
  6306  0331  00A6               	movwf	_fop_rule2^(0+128)
  6307  0332  1283               	bcf	3,5	;RP0=0, select bank0
  6308  0333  1303               	bcf	3,6	;RP1=0, select bank0
  6309  0334  0821               	movf	?_max_val+1,w
  6310  0335  1683               	bsf	3,5	;RP0=1, select bank1
  6311  0336  1303               	bcf	3,6	;RP1=0, select bank1
  6312  0337  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6313  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6314  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6315  033A  0822               	movf	?_max_val+2,w
  6316  033B  1683               	bsf	3,5	;RP0=1, select bank1
  6317  033C  1303               	bcf	3,6	;RP1=0, select bank1
  6318  033D  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6319                           
  6320                           ;main.c: 203: x=0;
  6321  033E  3000               	movlw	0
  6322  033F  00B5               	movwf	_x^(0+128)
  6323  0340  3000               	movlw	0
  6324  0341  00B6               	movwf	(_x+1)^(0+128)
  6325  0342  3000               	movlw	0
  6326  0343  00B7               	movwf	(_x+2)^(0+128)
  6327                           
  6328                           ;main.c: 204: y=0;
  6329  0344  3000               	movlw	0
  6330  0345  00B8               	movwf	_y^(0+128)
  6331  0346  3000               	movlw	0
  6332  0347  00B9               	movwf	(_y+1)^(0+128)
  6333  0348  3000               	movlw	0
  6334  0349  00BA               	movwf	(_y+2)^(0+128)
  6335                           
  6336                           ;main.c: 205: for (int a=0; a<=90; a++)
  6337  034A  1283               	bcf	3,5	;RP0=0, select bank0
  6338  034B  1303               	bcf	3,6	;RP1=0, select bank0
  6339  034C  01DB               	clrf	Fuzzy@a_233
  6340  034D  01DC               	clrf	Fuzzy@a_233+1
  6341  034E  085C               	movf	Fuzzy@a_233+1,w
  6342  034F  3A80               	xorlw	128
  6343  0350  00FF               	movwf	127
  6344  0351  3080               	movlw	128
  6345  0352  027F               	subwf	127,w
  6346  0353  1D03               	skipz
  6347  0354  2B57               	goto	u347_25
  6348  0355  305B               	movlw	91
  6349  0356  025B               	subwf	Fuzzy@a_233,w
  6350  0357                     u347_25:	
  6351  0357  1803               	btfsc	3,0
  6352  0358  2C1E               	goto	i1l2814
  6353  0359                     i1l2804:	
  6354                           
  6355                           ;main.c: 206: {
  6356                           ;main.c: 207: y = trimf(x, 9, 45, 81);
  6357  0359  1683               	bsf	3,5	;RP0=1, select bank1
  6358  035A  1303               	bcf	3,6	;RP1=0, select bank1
  6359  035B  0835               	movf	_x^(0+128),w
  6360  035C  1283               	bcf	3,5	;RP0=0, select bank0
  6361  035D  1303               	bcf	3,6	;RP1=0, select bank0
  6362  035E  00C7               	movwf	trimf@x
  6363  035F  1683               	bsf	3,5	;RP0=1, select bank1
  6364  0360  1303               	bcf	3,6	;RP1=0, select bank1
  6365  0361  0836               	movf	(_x+1)^(0+128),w
  6366  0362  1283               	bcf	3,5	;RP0=0, select bank0
  6367  0363  1303               	bcf	3,6	;RP1=0, select bank0
  6368  0364  00C8               	movwf	trimf@x+1
  6369  0365  1683               	bsf	3,5	;RP0=1, select bank1
  6370  0366  1303               	bcf	3,6	;RP1=0, select bank1
  6371  0367  0837               	movf	(_x+2)^(0+128),w
  6372  0368  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0369  1303               	bcf	3,6	;RP1=0, select bank0
  6374  036A  00C9               	movwf	trimf@x+2
  6375  036B  3000               	movlw	0
  6376  036C  00CA               	movwf	trimf@a
  6377  036D  3010               	movlw	16
  6378  036E  00CB               	movwf	trimf@a+1
  6379  036F  3041               	movlw	65
  6380  0370  00CC               	movwf	trimf@a+2
  6381  0371  3000               	movlw	0
  6382  0372  00CD               	movwf	trimf@b
  6383  0373  3034               	movlw	52
  6384  0374  00CE               	movwf	trimf@b+1
  6385  0375  3042               	movlw	66
  6386  0376  00CF               	movwf	trimf@b+2
  6387  0377  3000               	movlw	0
  6388  0378  00D0               	movwf	trimf@c
  6389  0379  30A2               	movlw	162
  6390  037A  00D1               	movwf	trimf@c+1
  6391  037B  3042               	movlw	66
  6392  037C  00D2               	movwf	trimf@c+2
  6393  037D  120A  158A  20E1  120A  118A  	fcall	_trimf
  6394  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6395  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6396  0384  0847               	movf	?_trimf,w
  6397  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6398  0386  1303               	bcf	3,6	;RP1=0, select bank1
  6399  0387  00B8               	movwf	_y^(0+128)
  6400  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6401  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6402  038A  0848               	movf	?_trimf+1,w
  6403  038B  1683               	bsf	3,5	;RP0=1, select bank1
  6404  038C  1303               	bcf	3,6	;RP1=0, select bank1
  6405  038D  00B9               	movwf	(_y+1)^(0+128)
  6406  038E  1283               	bcf	3,5	;RP0=0, select bank0
  6407  038F  1303               	bcf	3,6	;RP1=0, select bank0
  6408  0390  0849               	movf	?_trimf+2,w
  6409  0391  1683               	bsf	3,5	;RP0=1, select bank1
  6410  0392  1303               	bcf	3,6	;RP1=0, select bank1
  6411  0393  00BA               	movwf	(_y+2)^(0+128)
  6412                           
  6413                           ;main.c: 209: if (y >= fop_rule2)
  6414  0394  0838               	movf	_y^(0+128),w
  6415  0395  00F0               	movwf	___ftge@ff1
  6416  0396  0839               	movf	(_y+1)^(0+128),w
  6417  0397  00F1               	movwf	___ftge@ff1+1
  6418  0398  083A               	movf	(_y+2)^(0+128),w
  6419  0399  00F2               	movwf	___ftge@ff1+2
  6420  039A  0826               	movf	_fop_rule2^(0+128),w
  6421  039B  00F3               	movwf	___ftge@ff2
  6422  039C  0827               	movf	(_fop_rule2+1)^(0+128),w
  6423  039D  00F4               	movwf	___ftge@ff2+1
  6424  039E  0828               	movf	(_fop_rule2+2)^(0+128),w
  6425  039F  00F5               	movwf	___ftge@ff2+2
  6426  03A0  160A  118A  23F6  120A  118A  	fcall	___ftge
  6427  03A5  1C03               	btfss	3,0
  6428  03A6  2BB7               	goto	i1l2808
  6429                           
  6430                           ;main.c: 210: {
  6431                           ;main.c: 211: reduz += fop_rule2;
  6432  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  6433  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  6434  03A9  0826               	movf	_fop_rule2^(0+128),w
  6435  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  6436  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  6437  03AC  00BA               	movwf	___ftadd@f1
  6438  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  6439  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  6440  03AF  0827               	movf	(_fop_rule2+1)^(0+128),w
  6441  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  6442  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  6443  03B2  00BB               	movwf	___ftadd@f1+1
  6444  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  6445  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  6446  03B5  0828               	movf	(_fop_rule2+2)^(0+128),w
  6447  03B6  2BC6               	goto	L4
  6448  03B7                     i1l2808:	
  6449                           ;main.c: 212: }
  6450                           
  6451                           
  6452                           ;main.c: 213: else
  6453                           ;main.c: 214: {
  6454                           ;main.c: 215: reduz += y;
  6455  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  6456  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  6457  03B9  0838               	movf	_y^(0+128),w
  6458  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  6459  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  6460  03BC  00BA               	movwf	___ftadd@f1
  6461  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  6462  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  6463  03BF  0839               	movf	(_y+1)^(0+128),w
  6464  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6465  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  6466  03C2  00BB               	movwf	___ftadd@f1+1
  6467  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  6468  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  6469  03C5  083A               	movf	(_y+2)^(0+128),w
  6470  03C6                     L4:	
  6471  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  6472  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  6473  03C8  00BC               	movwf	___ftadd@f1+2
  6474  03C9  0869               	movf	Fuzzy@reduz,w
  6475  03CA  00BD               	movwf	___ftadd@f2
  6476  03CB  086A               	movf	Fuzzy@reduz+1,w
  6477  03CC  00BE               	movwf	___ftadd@f2+1
  6478  03CD  086B               	movf	Fuzzy@reduz+2,w
  6479  03CE  00BF               	movwf	___ftadd@f2+2
  6480  03CF  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6481  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  6482  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  6483  03D6  083A               	movf	?___ftadd,w
  6484  03D7  00E9               	movwf	Fuzzy@reduz
  6485  03D8  083B               	movf	?___ftadd+1,w
  6486  03D9  00EA               	movwf	Fuzzy@reduz+1
  6487  03DA  083C               	movf	?___ftadd+2,w
  6488  03DB  00EB               	movwf	Fuzzy@reduz+2
  6489                           
  6490                           ;main.c: 216: }
  6491                           ;main.c: 218: x=x+1;
  6492  03DC  3000               	movlw	0
  6493  03DD  00BA               	movwf	___ftadd@f1
  6494  03DE  3080               	movlw	128
  6495  03DF  00BB               	movwf	___ftadd@f1+1
  6496  03E0  303F               	movlw	63
  6497  03E1  00BC               	movwf	___ftadd@f1+2
  6498  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  6499  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  6500  03E4  0835               	movf	_x^(0+128),w
  6501  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  6502  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  6503  03E7  00BD               	movwf	___ftadd@f2
  6504  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  6505  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  6506  03EA  0836               	movf	(_x+1)^(0+128),w
  6507  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  6508  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  6509  03ED  00BE               	movwf	___ftadd@f2+1
  6510  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  6511  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  6512  03F0  0837               	movf	(_x+2)^(0+128),w
  6513  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  6514  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  6515  03F3  00BF               	movwf	___ftadd@f2+2
  6516  03F4  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6517  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  6518  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  6519  03FB  083A               	movf	?___ftadd,w
  6520  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  6521  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  6522  03FE  00B5               	movwf	_x^(0+128)
  6523  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0400  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0401  083B               	movf	?___ftadd+1,w
  6526  0402  1683               	bsf	3,5	;RP0=1, select bank1
  6527  0403  1303               	bcf	3,6	;RP1=0, select bank1
  6528  0404  00B6               	movwf	(_x+1)^(0+128)
  6529  0405  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0406  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0407  083C               	movf	?___ftadd+2,w
  6532  0408  1683               	bsf	3,5	;RP0=1, select bank1
  6533  0409  1303               	bcf	3,6	;RP1=0, select bank1
  6534  040A  00B7               	movwf	(_x+2)^(0+128)
  6535  040B  3001               	movlw	1
  6536  040C  1283               	bcf	3,5	;RP0=0, select bank0
  6537  040D  1303               	bcf	3,6	;RP1=0, select bank0
  6538  040E  07DB               	addwf	Fuzzy@a_233,f
  6539  040F  1803               	skipnc
  6540  0410  0ADC               	incf	Fuzzy@a_233+1,f
  6541  0411  3000               	movlw	0
  6542  0412  07DC               	addwf	Fuzzy@a_233+1,f
  6543  0413  085C               	movf	Fuzzy@a_233+1,w
  6544  0414  3A80               	xorlw	128
  6545  0415  00FF               	movwf	127
  6546  0416  3080               	movlw	128
  6547  0417  027F               	subwf	127,w
  6548  0418  1D03               	skipz
  6549  0419  2C1C               	goto	u349_25
  6550  041A  305B               	movlw	91
  6551  041B  025B               	subwf	Fuzzy@a_233,w
  6552  041C                     u349_25:	
  6553  041C  1C03               	skipc
  6554  041D  2B59               	goto	i1l2804
  6555  041E                     i1l2814:	
  6556                           
  6557                           ;main.c: 219: }
  6558                           ;main.c: 221: }
  6559                           ;main.c: 227: if (temp > 70 )
  6560  041E  3000               	movlw	0
  6561  041F  00F0               	movwf	___ftge@ff1
  6562  0420  308C               	movlw	140
  6563  0421  00F1               	movwf	___ftge@ff1+1
  6564  0422  3042               	movlw	66
  6565  0423  00F2               	movwf	___ftge@ff1+2
  6566  0424  1683               	bsf	3,5	;RP0=1, select bank1
  6567  0425  1303               	bcf	3,6	;RP1=0, select bank1
  6568  0426  082F               	movf	_temp^(0+128),w
  6569  0427  00F3               	movwf	___ftge@ff2
  6570  0428  0830               	movf	(_temp+1)^(0+128),w
  6571  0429  00F4               	movwf	___ftge@ff2+1
  6572  042A  0831               	movf	(_temp+2)^(0+128),w
  6573  042B  00F5               	movwf	___ftge@ff2+2
  6574  042C  160A  118A  23F6  120A  118A  	fcall	___ftge
  6575  0431  1803               	btfsc	3,0
  6576  0432  2D87               	goto	i1l2838
  6577                           
  6578                           ;main.c: 228: {
  6579                           ;main.c: 230: fitemp = trapmf(temp, 62, 79, 90, 90);
  6580  0433  1683               	bsf	3,5	;RP0=1, select bank1
  6581  0434  1303               	bcf	3,6	;RP1=0, select bank1
  6582  0435  082F               	movf	_temp^(0+128),w
  6583  0436  1283               	bcf	3,5	;RP0=0, select bank0
  6584  0437  1303               	bcf	3,6	;RP1=0, select bank0
  6585  0438  00C7               	movwf	trapmf@x
  6586  0439  1683               	bsf	3,5	;RP0=1, select bank1
  6587  043A  1303               	bcf	3,6	;RP1=0, select bank1
  6588  043B  0830               	movf	(_temp+1)^(0+128),w
  6589  043C  1283               	bcf	3,5	;RP0=0, select bank0
  6590  043D  1303               	bcf	3,6	;RP1=0, select bank0
  6591  043E  00C8               	movwf	trapmf@x+1
  6592  043F  1683               	bsf	3,5	;RP0=1, select bank1
  6593  0440  1303               	bcf	3,6	;RP1=0, select bank1
  6594  0441  0831               	movf	(_temp+2)^(0+128),w
  6595  0442  1283               	bcf	3,5	;RP0=0, select bank0
  6596  0443  1303               	bcf	3,6	;RP1=0, select bank0
  6597  0444  00C9               	movwf	trapmf@x+2
  6598  0445  3000               	movlw	0
  6599  0446  00CA               	movwf	trapmf@a
  6600  0447  3078               	movlw	120
  6601  0448  00CB               	movwf	trapmf@a+1
  6602  0449  3042               	movlw	66
  6603  044A  00CC               	movwf	trapmf@a+2
  6604  044B  3000               	movlw	0
  6605  044C  00CD               	movwf	trapmf@b
  6606  044D  309E               	movlw	158
  6607  044E  00CE               	movwf	trapmf@b+1
  6608  044F  3042               	movlw	66
  6609  0450  00CF               	movwf	trapmf@b+2
  6610  0451  3000               	movlw	0
  6611  0452  00D0               	movwf	trapmf@c
  6612  0453  30B4               	movlw	180
  6613  0454  00D1               	movwf	trapmf@c+1
  6614  0455  3042               	movlw	66
  6615  0456  00D2               	movwf	trapmf@c+2
  6616  0457  3000               	movlw	0
  6617  0458  00D3               	movwf	trapmf@d
  6618  0459  30B4               	movlw	180
  6619  045A  00D4               	movwf	trapmf@d+1
  6620  045B  3042               	movlw	66
  6621  045C  00D5               	movwf	trapmf@d+2
  6622  045D  120A  158A  2356  120A  118A  	fcall	_trapmf
  6623  0462  1283               	bcf	3,5	;RP0=0, select bank0
  6624  0463  1303               	bcf	3,6	;RP1=0, select bank0
  6625  0464  0847               	movf	?_trapmf,w
  6626  0465  1683               	bsf	3,5	;RP0=1, select bank1
  6627  0466  1303               	bcf	3,6	;RP1=0, select bank1
  6628  0467  00A0               	movwf	_fitemp^(0+128)
  6629  0468  1283               	bcf	3,5	;RP0=0, select bank0
  6630  0469  1303               	bcf	3,6	;RP1=0, select bank0
  6631  046A  0848               	movf	?_trapmf+1,w
  6632  046B  1683               	bsf	3,5	;RP0=1, select bank1
  6633  046C  1303               	bcf	3,6	;RP1=0, select bank1
  6634  046D  00A1               	movwf	(_fitemp+1)^(0+128)
  6635  046E  1283               	bcf	3,5	;RP0=0, select bank0
  6636  046F  1303               	bcf	3,6	;RP1=0, select bank0
  6637  0470  0849               	movf	?_trapmf+2,w
  6638  0471  1683               	bsf	3,5	;RP0=1, select bank1
  6639  0472  1303               	bcf	3,6	;RP1=0, select bank1
  6640  0473  00A2               	movwf	(_fitemp+2)^(0+128)
  6641                           
  6642                           ;main.c: 234: fop_rule3 = max_val(fitemp,0.1);
  6643  0474  0820               	movf	_fitemp^(0+128),w
  6644  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6645  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6646  0477  00A0               	movwf	max_val@a
  6647  0478  1683               	bsf	3,5	;RP0=1, select bank1
  6648  0479  1303               	bcf	3,6	;RP1=0, select bank1
  6649  047A  0821               	movf	(_fitemp+1)^(0+128),w
  6650  047B  1283               	bcf	3,5	;RP0=0, select bank0
  6651  047C  1303               	bcf	3,6	;RP1=0, select bank0
  6652  047D  00A1               	movwf	max_val@a+1
  6653  047E  1683               	bsf	3,5	;RP0=1, select bank1
  6654  047F  1303               	bcf	3,6	;RP1=0, select bank1
  6655  0480  0822               	movf	(_fitemp+2)^(0+128),w
  6656  0481  1283               	bcf	3,5	;RP0=0, select bank0
  6657  0482  1303               	bcf	3,6	;RP1=0, select bank0
  6658  0483  00A2               	movwf	max_val@a+2
  6659  0484  30CD               	movlw	205
  6660  0485  00A3               	movwf	max_val@b
  6661  0486  30CC               	movlw	204
  6662  0487  00A4               	movwf	max_val@b+1
  6663  0488  303D               	movlw	61
  6664  0489  00A5               	movwf	max_val@b+2
  6665  048A  160A  118A  215F  120A  118A  	fcall	_max_val
  6666  048F  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0490  1303               	bcf	3,6	;RP1=0, select bank0
  6668  0491  0820               	movf	?_max_val,w
  6669  0492  1683               	bsf	3,5	;RP0=1, select bank1
  6670  0493  1303               	bcf	3,6	;RP1=0, select bank1
  6671  0494  00A9               	movwf	_fop_rule3^(0+128)
  6672  0495  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0496  1303               	bcf	3,6	;RP1=0, select bank0
  6674  0497  0821               	movf	?_max_val+1,w
  6675  0498  1683               	bsf	3,5	;RP0=1, select bank1
  6676  0499  1303               	bcf	3,6	;RP1=0, select bank1
  6677  049A  00AA               	movwf	(_fop_rule3+1)^(0+128)
  6678  049B  1283               	bcf	3,5	;RP0=0, select bank0
  6679  049C  1303               	bcf	3,6	;RP1=0, select bank0
  6680  049D  0822               	movf	?_max_val+2,w
  6681  049E  1683               	bsf	3,5	;RP0=1, select bank1
  6682  049F  1303               	bcf	3,6	;RP1=0, select bank1
  6683  04A0  00AB               	movwf	(_fop_rule3+2)^(0+128)
  6684                           
  6685                           ;main.c: 237: x=0;
  6686  04A1  3000               	movlw	0
  6687  04A2  00B5               	movwf	_x^(0+128)
  6688  04A3  3000               	movlw	0
  6689  04A4  00B6               	movwf	(_x+1)^(0+128)
  6690  04A5  3000               	movlw	0
  6691  04A6  00B7               	movwf	(_x+2)^(0+128)
  6692                           
  6693                           ;main.c: 238: y=0;
  6694  04A7  3000               	movlw	0
  6695  04A8  00B8               	movwf	_y^(0+128)
  6696  04A9  3000               	movlw	0
  6697  04AA  00B9               	movwf	(_y+1)^(0+128)
  6698  04AB  3000               	movlw	0
  6699  04AC  00BA               	movwf	(_y+2)^(0+128)
  6700                           
  6701                           ;main.c: 239: for (int a=0; a<=90; a++)
  6702  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  6703  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  6704  04AF  01DD               	clrf	Fuzzy@a_234
  6705  04B0  01DE               	clrf	Fuzzy@a_234+1
  6706  04B1  085E               	movf	Fuzzy@a_234+1,w
  6707  04B2  3A80               	xorlw	128
  6708  04B3  00FF               	movwf	127
  6709  04B4  3080               	movlw	128
  6710  04B5  027F               	subwf	127,w
  6711  04B6  1D03               	skipz
  6712  04B7  2CBA               	goto	u351_25
  6713  04B8  305B               	movlw	91
  6714  04B9  025D               	subwf	Fuzzy@a_234,w
  6715  04BA                     u351_25:	
  6716  04BA  1803               	btfsc	3,0
  6717  04BB  2D87               	goto	i1l2838
  6718  04BC                     i1l2828:	
  6719                           
  6720                           ;main.c: 240: {
  6721                           ;main.c: 241: y = trapmf(x, 62, 79, 90, 90);
  6722  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  6723  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  6724  04BE  0835               	movf	_x^(0+128),w
  6725  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  6726  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  6727  04C1  00C7               	movwf	trapmf@x
  6728  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  6729  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  6730  04C4  0836               	movf	(_x+1)^(0+128),w
  6731  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  6732  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  6733  04C7  00C8               	movwf	trapmf@x+1
  6734  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  6735  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  6736  04CA  0837               	movf	(_x+2)^(0+128),w
  6737  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  6738  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  6739  04CD  00C9               	movwf	trapmf@x+2
  6740  04CE  3000               	movlw	0
  6741  04CF  00CA               	movwf	trapmf@a
  6742  04D0  3078               	movlw	120
  6743  04D1  00CB               	movwf	trapmf@a+1
  6744  04D2  3042               	movlw	66
  6745  04D3  00CC               	movwf	trapmf@a+2
  6746  04D4  3000               	movlw	0
  6747  04D5  00CD               	movwf	trapmf@b
  6748  04D6  309E               	movlw	158
  6749  04D7  00CE               	movwf	trapmf@b+1
  6750  04D8  3042               	movlw	66
  6751  04D9  00CF               	movwf	trapmf@b+2
  6752  04DA  3000               	movlw	0
  6753  04DB  00D0               	movwf	trapmf@c
  6754  04DC  30B4               	movlw	180
  6755  04DD  00D1               	movwf	trapmf@c+1
  6756  04DE  3042               	movlw	66
  6757  04DF  00D2               	movwf	trapmf@c+2
  6758  04E0  3000               	movlw	0
  6759  04E1  00D3               	movwf	trapmf@d
  6760  04E2  30B4               	movlw	180
  6761  04E3  00D4               	movwf	trapmf@d+1
  6762  04E4  3042               	movlw	66
  6763  04E5  00D5               	movwf	trapmf@d+2
  6764  04E6  120A  158A  2356  120A  118A  	fcall	_trapmf
  6765  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  6766  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  6767  04ED  0847               	movf	?_trapmf,w
  6768  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  6769  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  6770  04F0  00B8               	movwf	_y^(0+128)
  6771  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6772  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6773  04F3  0848               	movf	?_trapmf+1,w
  6774  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  6775  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  6776  04F6  00B9               	movwf	(_y+1)^(0+128)
  6777  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  6778  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  6779  04F9  0849               	movf	?_trapmf+2,w
  6780  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  6781  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  6782  04FC  00BA               	movwf	(_y+2)^(0+128)
  6783                           
  6784                           ;main.c: 243: if (y >= fop_rule3)
  6785  04FD  0838               	movf	_y^(0+128),w
  6786  04FE  00F0               	movwf	___ftge@ff1
  6787  04FF  0839               	movf	(_y+1)^(0+128),w
  6788  0500  00F1               	movwf	___ftge@ff1+1
  6789  0501  083A               	movf	(_y+2)^(0+128),w
  6790  0502  00F2               	movwf	___ftge@ff1+2
  6791  0503  0829               	movf	_fop_rule3^(0+128),w
  6792  0504  00F3               	movwf	___ftge@ff2
  6793  0505  082A               	movf	(_fop_rule3+1)^(0+128),w
  6794  0506  00F4               	movwf	___ftge@ff2+1
  6795  0507  082B               	movf	(_fop_rule3+2)^(0+128),w
  6796  0508  00F5               	movwf	___ftge@ff2+2
  6797  0509  160A  118A  23F6  120A  118A  	fcall	___ftge
  6798  050E  1C03               	btfss	3,0
  6799  050F  2D20               	goto	i1l2832
  6800                           
  6801                           ;main.c: 244: {
  6802                           ;main.c: 245: aumenta += fop_rule3;
  6803  0510  1683               	bsf	3,5	;RP0=1, select bank1
  6804  0511  1303               	bcf	3,6	;RP1=0, select bank1
  6805  0512  0829               	movf	_fop_rule3^(0+128),w
  6806  0513  1283               	bcf	3,5	;RP0=0, select bank0
  6807  0514  1303               	bcf	3,6	;RP1=0, select bank0
  6808  0515  00BA               	movwf	___ftadd@f1
  6809  0516  1683               	bsf	3,5	;RP0=1, select bank1
  6810  0517  1303               	bcf	3,6	;RP1=0, select bank1
  6811  0518  082A               	movf	(_fop_rule3+1)^(0+128),w
  6812  0519  1283               	bcf	3,5	;RP0=0, select bank0
  6813  051A  1303               	bcf	3,6	;RP1=0, select bank0
  6814  051B  00BB               	movwf	___ftadd@f1+1
  6815  051C  1683               	bsf	3,5	;RP0=1, select bank1
  6816  051D  1303               	bcf	3,6	;RP1=0, select bank1
  6817  051E  082B               	movf	(_fop_rule3+2)^(0+128),w
  6818  051F  2D2F               	goto	L5
  6819  0520                     i1l2832:	
  6820                           ;main.c: 246: }
  6821                           
  6822                           
  6823                           ;main.c: 247: else
  6824                           ;main.c: 248: {
  6825                           ;main.c: 249: aumenta += y;
  6826  0520  1683               	bsf	3,5	;RP0=1, select bank1
  6827  0521  1303               	bcf	3,6	;RP1=0, select bank1
  6828  0522  0838               	movf	_y^(0+128),w
  6829  0523  1283               	bcf	3,5	;RP0=0, select bank0
  6830  0524  1303               	bcf	3,6	;RP1=0, select bank0
  6831  0525  00BA               	movwf	___ftadd@f1
  6832  0526  1683               	bsf	3,5	;RP0=1, select bank1
  6833  0527  1303               	bcf	3,6	;RP1=0, select bank1
  6834  0528  0839               	movf	(_y+1)^(0+128),w
  6835  0529  1283               	bcf	3,5	;RP0=0, select bank0
  6836  052A  1303               	bcf	3,6	;RP1=0, select bank0
  6837  052B  00BB               	movwf	___ftadd@f1+1
  6838  052C  1683               	bsf	3,5	;RP0=1, select bank1
  6839  052D  1303               	bcf	3,6	;RP1=0, select bank1
  6840  052E  083A               	movf	(_y+2)^(0+128),w
  6841  052F                     L5:	
  6842  052F  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0530  1303               	bcf	3,6	;RP1=0, select bank0
  6844  0531  00BC               	movwf	___ftadd@f1+2
  6845  0532  086C               	movf	Fuzzy@aumenta,w
  6846  0533  00BD               	movwf	___ftadd@f2
  6847  0534  086D               	movf	Fuzzy@aumenta+1,w
  6848  0535  00BE               	movwf	___ftadd@f2+1
  6849  0536  086E               	movf	Fuzzy@aumenta+2,w
  6850  0537  00BF               	movwf	___ftadd@f2+2
  6851  0538  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6852  053D  1283               	bcf	3,5	;RP0=0, select bank0
  6853  053E  1303               	bcf	3,6	;RP1=0, select bank0
  6854  053F  083A               	movf	?___ftadd,w
  6855  0540  00EC               	movwf	Fuzzy@aumenta
  6856  0541  083B               	movf	?___ftadd+1,w
  6857  0542  00ED               	movwf	Fuzzy@aumenta+1
  6858  0543  083C               	movf	?___ftadd+2,w
  6859  0544  00EE               	movwf	Fuzzy@aumenta+2
  6860                           
  6861                           ;main.c: 250: }
  6862                           ;main.c: 252: x=x+1;
  6863  0545  3000               	movlw	0
  6864  0546  00BA               	movwf	___ftadd@f1
  6865  0547  3080               	movlw	128
  6866  0548  00BB               	movwf	___ftadd@f1+1
  6867  0549  303F               	movlw	63
  6868  054A  00BC               	movwf	___ftadd@f1+2
  6869  054B  1683               	bsf	3,5	;RP0=1, select bank1
  6870  054C  1303               	bcf	3,6	;RP1=0, select bank1
  6871  054D  0835               	movf	_x^(0+128),w
  6872  054E  1283               	bcf	3,5	;RP0=0, select bank0
  6873  054F  1303               	bcf	3,6	;RP1=0, select bank0
  6874  0550  00BD               	movwf	___ftadd@f2
  6875  0551  1683               	bsf	3,5	;RP0=1, select bank1
  6876  0552  1303               	bcf	3,6	;RP1=0, select bank1
  6877  0553  0836               	movf	(_x+1)^(0+128),w
  6878  0554  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0555  1303               	bcf	3,6	;RP1=0, select bank0
  6880  0556  00BE               	movwf	___ftadd@f2+1
  6881  0557  1683               	bsf	3,5	;RP0=1, select bank1
  6882  0558  1303               	bcf	3,6	;RP1=0, select bank1
  6883  0559  0837               	movf	(_x+2)^(0+128),w
  6884  055A  1283               	bcf	3,5	;RP0=0, select bank0
  6885  055B  1303               	bcf	3,6	;RP1=0, select bank0
  6886  055C  00BF               	movwf	___ftadd@f2+2
  6887  055D  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6888  0562  1283               	bcf	3,5	;RP0=0, select bank0
  6889  0563  1303               	bcf	3,6	;RP1=0, select bank0
  6890  0564  083A               	movf	?___ftadd,w
  6891  0565  1683               	bsf	3,5	;RP0=1, select bank1
  6892  0566  1303               	bcf	3,6	;RP1=0, select bank1
  6893  0567  00B5               	movwf	_x^(0+128)
  6894  0568  1283               	bcf	3,5	;RP0=0, select bank0
  6895  0569  1303               	bcf	3,6	;RP1=0, select bank0
  6896  056A  083B               	movf	?___ftadd+1,w
  6897  056B  1683               	bsf	3,5	;RP0=1, select bank1
  6898  056C  1303               	bcf	3,6	;RP1=0, select bank1
  6899  056D  00B6               	movwf	(_x+1)^(0+128)
  6900  056E  1283               	bcf	3,5	;RP0=0, select bank0
  6901  056F  1303               	bcf	3,6	;RP1=0, select bank0
  6902  0570  083C               	movf	?___ftadd+2,w
  6903  0571  1683               	bsf	3,5	;RP0=1, select bank1
  6904  0572  1303               	bcf	3,6	;RP1=0, select bank1
  6905  0573  00B7               	movwf	(_x+2)^(0+128)
  6906  0574  3001               	movlw	1
  6907  0575  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0576  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0577  07DD               	addwf	Fuzzy@a_234,f
  6910  0578  1803               	skipnc
  6911  0579  0ADE               	incf	Fuzzy@a_234+1,f
  6912  057A  3000               	movlw	0
  6913  057B  07DE               	addwf	Fuzzy@a_234+1,f
  6914  057C  085E               	movf	Fuzzy@a_234+1,w
  6915  057D  3A80               	xorlw	128
  6916  057E  00FF               	movwf	127
  6917  057F  3080               	movlw	128
  6918  0580  027F               	subwf	127,w
  6919  0581  1D03               	skipz
  6920  0582  2D85               	goto	u353_25
  6921  0583  305B               	movlw	91
  6922  0584  025D               	subwf	Fuzzy@a_234,w
  6923  0585                     u353_25:	
  6924  0585  1C03               	skipc
  6925  0586  2CBC               	goto	i1l2828
  6926  0587                     i1l2838:	
  6927                           
  6928                           ;main.c: 253: }
  6929                           ;main.c: 255: }
  6930                           ;main.c: 258: for (int a=0; a<1; a++)
  6931  0587  1283               	bcf	3,5	;RP0=0, select bank0
  6932  0588  1303               	bcf	3,6	;RP1=0, select bank0
  6933  0589  01DF               	clrf	Fuzzy@a_235
  6934  058A  01E0               	clrf	Fuzzy@a_235+1
  6935  058B  0860               	movf	Fuzzy@a_235+1,w
  6936  058C  3A80               	xorlw	128
  6937  058D  00FF               	movwf	127
  6938  058E  3080               	movlw	128
  6939  058F  027F               	subwf	127,w
  6940  0590  1D03               	skipz
  6941  0591  2D94               	goto	u354_25
  6942  0592  3001               	movlw	1
  6943  0593  025F               	subwf	Fuzzy@a_235,w
  6944  0594                     u354_25:	
  6945  0594  1803               	btfsc	3,0
  6946  0595  2DFE               	goto	i1l2858
  6947  0596                     i1l2844:	
  6948                           
  6949                           ;main.c: 259: {
  6950                           ;main.c: 260: if (temp < 25)
  6951  0596  1683               	bsf	3,5	;RP0=1, select bank1
  6952  0597  1303               	bcf	3,6	;RP1=0, select bank1
  6953  0598  082F               	movf	_temp^(0+128),w
  6954  0599  00F0               	movwf	___ftge@ff1
  6955  059A  0830               	movf	(_temp+1)^(0+128),w
  6956  059B  00F1               	movwf	___ftge@ff1+1
  6957  059C  0831               	movf	(_temp+2)^(0+128),w
  6958  059D  00F2               	movwf	___ftge@ff1+2
  6959  059E  3000               	movlw	0
  6960  059F  00F3               	movwf	___ftge@ff2
  6961  05A0  30C8               	movlw	200
  6962  05A1  00F4               	movwf	___ftge@ff2+1
  6963  05A2  3041               	movlw	65
  6964  05A3  00F5               	movwf	___ftge@ff2+2
  6965  05A4  160A  118A  23F6  120A  118A  	fcall	___ftge
  6966  05A9  1803               	btfsc	3,0
  6967  05AA  2DB3               	goto	i1l2848
  6968                           
  6969                           ;main.c: 261: {
  6970                           ;main.c: 262: tip = mantem;
  6971  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  6972  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  6973  05AD  0866               	movf	Fuzzy@mantem,w
  6974  05AE  00E3               	movwf	Fuzzy@tip
  6975  05AF  0867               	movf	Fuzzy@mantem+1,w
  6976  05B0  00E4               	movwf	Fuzzy@tip+1
  6977  05B1  0868               	movf	Fuzzy@mantem+2,w
  6978  05B2  2DEC               	goto	L7
  6979  05B3                     i1l2848:	
  6980                           ;main.c: 263: }else
  6981                           
  6982                           
  6983                           ;main.c: 264: if (temp >= 25 && temp < 75)
  6984  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  6985  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  6986  05B5  082F               	movf	_temp^(0+128),w
  6987  05B6  00F0               	movwf	___ftge@ff1
  6988  05B7  0830               	movf	(_temp+1)^(0+128),w
  6989  05B8  00F1               	movwf	___ftge@ff1+1
  6990  05B9  0831               	movf	(_temp+2)^(0+128),w
  6991  05BA  00F2               	movwf	___ftge@ff1+2
  6992  05BB  3000               	movlw	0
  6993  05BC  00F3               	movwf	___ftge@ff2
  6994  05BD  30C8               	movlw	200
  6995  05BE  00F4               	movwf	___ftge@ff2+1
  6996  05BF  3041               	movlw	65
  6997  05C0  00F5               	movwf	___ftge@ff2+2
  6998  05C1  160A  118A  23F6  120A  118A  	fcall	___ftge
  6999  05C6  1C03               	btfss	3,0
  7000  05C7  2DE5               	goto	i1l2854
  7001  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  7002  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  7003  05CA  082F               	movf	_temp^(0+128),w
  7004  05CB  00F0               	movwf	___ftge@ff1
  7005  05CC  0830               	movf	(_temp+1)^(0+128),w
  7006  05CD  00F1               	movwf	___ftge@ff1+1
  7007  05CE  0831               	movf	(_temp+2)^(0+128),w
  7008  05CF  00F2               	movwf	___ftge@ff1+2
  7009  05D0  3000               	movlw	0
  7010  05D1  00F3               	movwf	___ftge@ff2
  7011  05D2  3096               	movlw	150
  7012  05D3  00F4               	movwf	___ftge@ff2+1
  7013  05D4  3042               	movlw	66
  7014  05D5  00F5               	movwf	___ftge@ff2+2
  7015  05D6  160A  118A  23F6  120A  118A  	fcall	___ftge
  7016  05DB  1803               	btfsc	3,0
  7017  05DC  2DE5               	goto	i1l2854
  7018                           
  7019                           ;main.c: 265: {
  7020                           ;main.c: 266: tip = reduz;
  7021  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  7022  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  7023  05DF  0869               	movf	Fuzzy@reduz,w
  7024  05E0  00E3               	movwf	Fuzzy@tip
  7025  05E1  086A               	movf	Fuzzy@reduz+1,w
  7026  05E2  00E4               	movwf	Fuzzy@tip+1
  7027  05E3  086B               	movf	Fuzzy@reduz+2,w
  7028  05E4  2DEC               	goto	L7
  7029  05E5                     i1l2854:	
  7030                           ;main.c: 267: }else
  7031                           
  7032                           
  7033                           ;main.c: 268: {
  7034                           ;main.c: 269: tip = aumenta;
  7035  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  7036  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  7037  05E7  086C               	movf	Fuzzy@aumenta,w
  7038  05E8  00E3               	movwf	Fuzzy@tip
  7039  05E9  086D               	movf	Fuzzy@aumenta+1,w
  7040  05EA  00E4               	movwf	Fuzzy@tip+1
  7041  05EB  086E               	movf	Fuzzy@aumenta+2,w
  7042  05EC                     L7:	
  7043  05EC  00E5               	movwf	Fuzzy@tip+2
  7044  05ED  3001               	movlw	1
  7045  05EE  07DF               	addwf	Fuzzy@a_235,f
  7046  05EF  1803               	skipnc
  7047  05F0  0AE0               	incf	Fuzzy@a_235+1,f
  7048  05F1  3000               	movlw	0
  7049  05F2  07E0               	addwf	Fuzzy@a_235+1,f
  7050  05F3  0860               	movf	Fuzzy@a_235+1,w
  7051  05F4  3A80               	xorlw	128
  7052  05F5  00FF               	movwf	127
  7053  05F6  3080               	movlw	128
  7054  05F7  027F               	subwf	127,w
  7055  05F8  1D03               	skipz
  7056  05F9  2DFC               	goto	u358_25
  7057  05FA  3001               	movlw	1
  7058  05FB  025F               	subwf	Fuzzy@a_235,w
  7059  05FC                     u358_25:	
  7060  05FC  1C03               	skipc
  7061  05FD  2D96               	goto	i1l2844
  7062  05FE                     i1l2858:	
  7063                           
  7064                           ;main.c: 270: }
  7065                           ;main.c: 271: }
  7066                           ;main.c: 275: x = 0;
  7067  05FE  3000               	movlw	0
  7068  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  7069  0600  1303               	bcf	3,6	;RP1=0, select bank1
  7070  0601  00B5               	movwf	_x^(0+128)
  7071  0602  3000               	movlw	0
  7072  0603  00B6               	movwf	(_x+1)^(0+128)
  7073  0604  3000               	movlw	0
  7074  0605  00B7               	movwf	(_x+2)^(0+128)
  7075                           
  7076                           ;main.c: 276: total_area = 0;
  7077  0606  3000               	movlw	0
  7078  0607  00B2               	movwf	_total_area^(0+128)
  7079  0608  3000               	movlw	0
  7080  0609  00B3               	movwf	(_total_area+1)^(0+128)
  7081  060A  3000               	movlw	0
  7082  060B  00B4               	movwf	(_total_area+2)^(0+128)
  7083                           
  7084                           ;main.c: 277: sum = 0;
  7085  060C  3000               	movlw	0
  7086  060D  00AC               	movwf	_sum^(0+128)
  7087  060E  3000               	movlw	0
  7088  060F  00AD               	movwf	(_sum+1)^(0+128)
  7089  0610  3000               	movlw	0
  7090  0611  00AE               	movwf	(_sum+2)^(0+128)
  7091                           
  7092                           ;main.c: 278: for (int a=0; a<1; a++)
  7093  0612  1283               	bcf	3,5	;RP0=0, select bank0
  7094  0613  1303               	bcf	3,6	;RP1=0, select bank0
  7095  0614  01E1               	clrf	Fuzzy@a_236
  7096  0615  01E2               	clrf	Fuzzy@a_236+1
  7097  0616  0862               	movf	Fuzzy@a_236+1,w
  7098  0617  3A80               	xorlw	128
  7099  0618  00FF               	movwf	127
  7100  0619  3080               	movlw	128
  7101  061A  027F               	subwf	127,w
  7102  061B  1D03               	skipz
  7103  061C  2E1F               	goto	u359_25
  7104  061D  3001               	movlw	1
  7105  061E  0261               	subwf	Fuzzy@a_236,w
  7106  061F                     u359_25:	
  7107  061F  1803               	btfsc	3,0
  7108  0620  2EE2               	goto	i1l2872
  7109  0621                     i1l2866:	
  7110                           
  7111                           ;main.c: 279: {
  7112                           ;main.c: 280: total_area = total_area + tip;
  7113  0621  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0622  1303               	bcf	3,6	;RP1=0, select bank0
  7115  0623  0863               	movf	Fuzzy@tip,w
  7116  0624  00BA               	movwf	___ftadd@f1
  7117  0625  0864               	movf	Fuzzy@tip+1,w
  7118  0626  00BB               	movwf	___ftadd@f1+1
  7119  0627  0865               	movf	Fuzzy@tip+2,w
  7120  0628  00BC               	movwf	___ftadd@f1+2
  7121  0629  1683               	bsf	3,5	;RP0=1, select bank1
  7122  062A  1303               	bcf	3,6	;RP1=0, select bank1
  7123  062B  0832               	movf	_total_area^(0+128),w
  7124  062C  1283               	bcf	3,5	;RP0=0, select bank0
  7125  062D  1303               	bcf	3,6	;RP1=0, select bank0
  7126  062E  00BD               	movwf	___ftadd@f2
  7127  062F  1683               	bsf	3,5	;RP0=1, select bank1
  7128  0630  1303               	bcf	3,6	;RP1=0, select bank1
  7129  0631  0833               	movf	(_total_area+1)^(0+128),w
  7130  0632  1283               	bcf	3,5	;RP0=0, select bank0
  7131  0633  1303               	bcf	3,6	;RP1=0, select bank0
  7132  0634  00BE               	movwf	___ftadd@f2+1
  7133  0635  1683               	bsf	3,5	;RP0=1, select bank1
  7134  0636  1303               	bcf	3,6	;RP1=0, select bank1
  7135  0637  0834               	movf	(_total_area+2)^(0+128),w
  7136  0638  1283               	bcf	3,5	;RP0=0, select bank0
  7137  0639  1303               	bcf	3,6	;RP1=0, select bank0
  7138  063A  00BF               	movwf	___ftadd@f2+2
  7139  063B  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7140  0640  1283               	bcf	3,5	;RP0=0, select bank0
  7141  0641  1303               	bcf	3,6	;RP1=0, select bank0
  7142  0642  083A               	movf	?___ftadd,w
  7143  0643  1683               	bsf	3,5	;RP0=1, select bank1
  7144  0644  1303               	bcf	3,6	;RP1=0, select bank1
  7145  0645  00B2               	movwf	_total_area^(0+128)
  7146  0646  1283               	bcf	3,5	;RP0=0, select bank0
  7147  0647  1303               	bcf	3,6	;RP1=0, select bank0
  7148  0648  083B               	movf	?___ftadd+1,w
  7149  0649  1683               	bsf	3,5	;RP0=1, select bank1
  7150  064A  1303               	bcf	3,6	;RP1=0, select bank1
  7151  064B  00B3               	movwf	(_total_area+1)^(0+128)
  7152  064C  1283               	bcf	3,5	;RP0=0, select bank0
  7153  064D  1303               	bcf	3,6	;RP1=0, select bank0
  7154  064E  083C               	movf	?___ftadd+2,w
  7155  064F  1683               	bsf	3,5	;RP0=1, select bank1
  7156  0650  1303               	bcf	3,6	;RP1=0, select bank1
  7157  0651  00B4               	movwf	(_total_area+2)^(0+128)
  7158                           
  7159                           ;main.c: 281: sum = sum + (x * tip);
  7160  0652  082C               	movf	_sum^(0+128),w
  7161  0653  1283               	bcf	3,5	;RP0=0, select bank0
  7162  0654  1303               	bcf	3,6	;RP1=0, select bank0
  7163  0655  00BA               	movwf	___ftadd@f1
  7164  0656  1683               	bsf	3,5	;RP0=1, select bank1
  7165  0657  1303               	bcf	3,6	;RP1=0, select bank1
  7166  0658  082D               	movf	(_sum+1)^(0+128),w
  7167  0659  1283               	bcf	3,5	;RP0=0, select bank0
  7168  065A  1303               	bcf	3,6	;RP1=0, select bank0
  7169  065B  00BB               	movwf	___ftadd@f1+1
  7170  065C  1683               	bsf	3,5	;RP0=1, select bank1
  7171  065D  1303               	bcf	3,6	;RP1=0, select bank1
  7172  065E  082E               	movf	(_sum+2)^(0+128),w
  7173  065F  1283               	bcf	3,5	;RP0=0, select bank0
  7174  0660  1303               	bcf	3,6	;RP1=0, select bank0
  7175  0661  00BC               	movwf	___ftadd@f1+2
  7176  0662  0863               	movf	Fuzzy@tip,w
  7177  0663  00AA               	movwf	___ftmul@f1
  7178  0664  0864               	movf	Fuzzy@tip+1,w
  7179  0665  00AB               	movwf	___ftmul@f1+1
  7180  0666  0865               	movf	Fuzzy@tip+2,w
  7181  0667  00AC               	movwf	___ftmul@f1+2
  7182  0668  1683               	bsf	3,5	;RP0=1, select bank1
  7183  0669  1303               	bcf	3,6	;RP1=0, select bank1
  7184  066A  0835               	movf	_x^(0+128),w
  7185  066B  1283               	bcf	3,5	;RP0=0, select bank0
  7186  066C  1303               	bcf	3,6	;RP1=0, select bank0
  7187  066D  00AD               	movwf	___ftmul@f2
  7188  066E  1683               	bsf	3,5	;RP0=1, select bank1
  7189  066F  1303               	bcf	3,6	;RP1=0, select bank1
  7190  0670  0836               	movf	(_x+1)^(0+128),w
  7191  0671  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0672  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0673  00AE               	movwf	___ftmul@f2+1
  7194  0674  1683               	bsf	3,5	;RP0=1, select bank1
  7195  0675  1303               	bcf	3,6	;RP1=0, select bank1
  7196  0676  0837               	movf	(_x+2)^(0+128),w
  7197  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0679  00AF               	movwf	___ftmul@f2+2
  7200  067A  120A  118A  272B  120A  118A  	fcall	___ftmul
  7201  067F  1283               	bcf	3,5	;RP0=0, select bank0
  7202  0680  1303               	bcf	3,6	;RP1=0, select bank0
  7203  0681  082A               	movf	?___ftmul,w
  7204  0682  00BD               	movwf	___ftadd@f2
  7205  0683  082B               	movf	?___ftmul+1,w
  7206  0684  00BE               	movwf	___ftadd@f2+1
  7207  0685  082C               	movf	?___ftmul+2,w
  7208  0686  00BF               	movwf	___ftadd@f2+2
  7209  0687  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7210  068C  1283               	bcf	3,5	;RP0=0, select bank0
  7211  068D  1303               	bcf	3,6	;RP1=0, select bank0
  7212  068E  083A               	movf	?___ftadd,w
  7213  068F  1683               	bsf	3,5	;RP0=1, select bank1
  7214  0690  1303               	bcf	3,6	;RP1=0, select bank1
  7215  0691  00AC               	movwf	_sum^(0+128)
  7216  0692  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0693  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0694  083B               	movf	?___ftadd+1,w
  7219  0695  1683               	bsf	3,5	;RP0=1, select bank1
  7220  0696  1303               	bcf	3,6	;RP1=0, select bank1
  7221  0697  00AD               	movwf	(_sum+1)^(0+128)
  7222  0698  1283               	bcf	3,5	;RP0=0, select bank0
  7223  0699  1303               	bcf	3,6	;RP1=0, select bank0
  7224  069A  083C               	movf	?___ftadd+2,w
  7225  069B  1683               	bsf	3,5	;RP0=1, select bank1
  7226  069C  1303               	bcf	3,6	;RP1=0, select bank1
  7227  069D  00AE               	movwf	(_sum+2)^(0+128)
  7228                           
  7229                           ;main.c: 283: x=x+1;
  7230  069E  3000               	movlw	0
  7231  069F  1283               	bcf	3,5	;RP0=0, select bank0
  7232  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  7233  06A1  00BA               	movwf	___ftadd@f1
  7234  06A2  3080               	movlw	128
  7235  06A3  00BB               	movwf	___ftadd@f1+1
  7236  06A4  303F               	movlw	63
  7237  06A5  00BC               	movwf	___ftadd@f1+2
  7238  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  7239  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  7240  06A8  0835               	movf	_x^(0+128),w
  7241  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  7242  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  7243  06AB  00BD               	movwf	___ftadd@f2
  7244  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  7245  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  7246  06AE  0836               	movf	(_x+1)^(0+128),w
  7247  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  7248  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  7249  06B1  00BE               	movwf	___ftadd@f2+1
  7250  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  7251  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  7252  06B4  0837               	movf	(_x+2)^(0+128),w
  7253  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  7254  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  7255  06B7  00BF               	movwf	___ftadd@f2+2
  7256  06B8  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7257  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  7258  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  7259  06BF  083A               	movf	?___ftadd,w
  7260  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  7261  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  7262  06C2  00B5               	movwf	_x^(0+128)
  7263  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  7264  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  7265  06C5  083B               	movf	?___ftadd+1,w
  7266  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  7267  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  7268  06C8  00B6               	movwf	(_x+1)^(0+128)
  7269  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  7270  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  7271  06CB  083C               	movf	?___ftadd+2,w
  7272  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  7273  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  7274  06CE  00B7               	movwf	(_x+2)^(0+128)
  7275  06CF  3001               	movlw	1
  7276  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  7277  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  7278  06D2  07E1               	addwf	Fuzzy@a_236,f
  7279  06D3  1803               	skipnc
  7280  06D4  0AE2               	incf	Fuzzy@a_236+1,f
  7281  06D5  3000               	movlw	0
  7282  06D6  07E2               	addwf	Fuzzy@a_236+1,f
  7283  06D7  0862               	movf	Fuzzy@a_236+1,w
  7284  06D8  3A80               	xorlw	128
  7285  06D9  00FF               	movwf	127
  7286  06DA  3080               	movlw	128
  7287  06DB  027F               	subwf	127,w
  7288  06DC  1D03               	skipz
  7289  06DD  2EE0               	goto	u360_25
  7290  06DE  3001               	movlw	1
  7291  06DF  0261               	subwf	Fuzzy@a_236,w
  7292  06E0                     u360_25:	
  7293  06E0  1C03               	skipc
  7294  06E1  2E21               	goto	i1l2866
  7295  06E2                     i1l2872:	
  7296                           
  7297                           ;main.c: 284: }
  7298                           ;main.c: 287: ativa_fan = sum/total_area;
  7299  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  7300  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  7301  06E4  0832               	movf	_total_area^(0+128),w
  7302  06E5  00F8               	movwf	___ftdiv@f2
  7303  06E6  0833               	movf	(_total_area+1)^(0+128),w
  7304  06E7  00F9               	movwf	___ftdiv@f2+1
  7305  06E8  0834               	movf	(_total_area+2)^(0+128),w
  7306  06E9  00FA               	movwf	___ftdiv@f2+2
  7307  06EA  082C               	movf	_sum^(0+128),w
  7308  06EB  00FB               	movwf	___ftdiv@f1
  7309  06EC  082D               	movf	(_sum+1)^(0+128),w
  7310  06ED  00FC               	movwf	___ftdiv@f1+1
  7311  06EE  082E               	movf	(_sum+2)^(0+128),w
  7312  06EF  00FD               	movwf	___ftdiv@f1+2
  7313  06F0  160A  118A  2641  120A  118A  	fcall	___ftdiv
  7314  06F5  0878               	movf	?___ftdiv,w
  7315  06F6  1683               	bsf	3,5	;RP0=1, select bank3
  7316  06F7  1703               	bsf	3,6	;RP1=1, select bank3
  7317  06F8  0090               	movwf	_ativa_fan^(0+384)
  7318  06F9  0879               	movf	?___ftdiv+1,w
  7319  06FA  0091               	movwf	(_ativa_fan+1)^(0+384)
  7320  06FB  087A               	movf	?___ftdiv+2,w
  7321  06FC  0092               	movwf	(_ativa_fan+2)^(0+384)
  7322                           
  7323                           ;main.c: 291: deltaV = deltaV*10;
  7324  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  7325  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  7326  06FF  083E               	movf	(_deltaV+1)^(0+128),w
  7327  0700  01F9               	clrf	i1___wmul@multiplier+1
  7328  0701  07F9               	addwf	i1___wmul@multiplier+1,f
  7329  0702  083D               	movf	_deltaV^(0+128),w
  7330  0703  01F8               	clrf	i1___wmul@multiplier
  7331  0704  07F8               	addwf	i1___wmul@multiplier,f
  7332  0705  300A               	movlw	10
  7333  0706  00FA               	movwf	i1___wmul@multiplicand
  7334  0707  3000               	movlw	0
  7335  0708  00FB               	movwf	i1___wmul@multiplicand+1
  7336  0709  160A  118A  21DF  120A  118A  	fcall	i1___wmul
  7337  070E  0879               	movf	?i1___wmul+1,w
  7338  070F  1683               	bsf	3,5	;RP0=1, select bank1
  7339  0710  1303               	bcf	3,6	;RP1=0, select bank1
  7340  0711  01BE               	clrf	(_deltaV+1)^(0+128)
  7341  0712  07BE               	addwf	(_deltaV+1)^(0+128),f
  7342  0713  0878               	movf	?i1___wmul,w
  7343  0714  01BD               	clrf	_deltaV^(0+128)
  7344  0715  07BD               	addwf	_deltaV^(0+128),f
  7345                           
  7346                           ;main.c: 292: if (deltaV >0 && deltaV < 1020)
  7347  0716  083E               	movf	(_deltaV+1)^(0+128),w
  7348  0717  043D               	iorwf	_deltaV^(0+128),w
  7349  0718  1903               	skipnz
  7350  0719  0008               	return
  7351  071A  3003               	movlw	3
  7352  071B  023E               	subwf	(_deltaV+1)^(0+128),w
  7353  071C  30FC               	movlw	252
  7354  071D  1903               	skipnz
  7355  071E  023D               	subwf	_deltaV^(0+128),w
  7356  071F  1803               	skipnc
  7357  0720  0008               	return
  7358                           
  7359                           ;main.c: 293: {
  7360                           ;main.c: 294: PWM_DutyCycle2(deltaV);
  7361  0721  083E               	movf	(_deltaV+1)^(0+128),w
  7362  0722  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7363  0723  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7364  0724  083D               	movf	_deltaV^(0+128),w
  7365  0725  01F0               	clrf	i1PWM_DutyCycle2@valor
  7366  0726  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7367  0727  160A  118A  2129   	fcall	i1_PWM_DutyCycle2
  7368  072A  0008               	return
  7369  072B                     __end_of_Fuzzy:	
  7370                           
  7371                           	psect	text29
  7372  11DF                     __ptext29:	
  7373 ;; *************** function i1___wmul *****************
  7374 ;; Defined at:
  7375 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  multiplier      2    8[COMMON] unsigned int 
  7378 ;;  multiplicand    2   10[COMMON] unsigned int 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  __wmul          2   12[COMMON] unsigned int 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2    8[COMMON] unsigned int 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         4       0       0       0       0
  7391 ;;      Locals:         2       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0
  7393 ;;      Totals:         6       0       0       0       0
  7394 ;;Total ram usage:        6 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_Fuzzy
  7400 ;;		_ISR
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function i1___wmul
  7406  11DF                     i1___wmul:	
  7407                           
  7408                           ;incstack = 0
  7409                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7410  11DF  01FC               	clrf	i1___wmul@product
  7411  11E0  01FD               	clrf	i1___wmul@product+1
  7412  11E1                     i1l2738:	
  7413  11E1  1C78               	btfss	i1___wmul@multiplier,0
  7414  11E2  29E9               	goto	i1l600
  7415  11E3  087A               	movf	i1___wmul@multiplicand,w
  7416  11E4  07FC               	addwf	i1___wmul@product,f
  7417  11E5  1803               	skipnc
  7418  11E6  0AFD               	incf	i1___wmul@product+1,f
  7419  11E7  087B               	movf	i1___wmul@multiplicand+1,w
  7420  11E8  07FD               	addwf	i1___wmul@product+1,f
  7421  11E9                     i1l600:	
  7422  11E9  3001               	movlw	1
  7423  11EA                     u336_25:	
  7424  11EA  1003               	clrc
  7425  11EB  0DFA               	rlf	i1___wmul@multiplicand,f
  7426  11EC  0DFB               	rlf	i1___wmul@multiplicand+1,f
  7427  11ED  3EFF               	addlw	-1
  7428  11EE  1D03               	skipz
  7429  11EF  29EA               	goto	u336_25
  7430  11F0  3001               	movlw	1
  7431  11F1                     u337_25:	
  7432  11F1  1003               	clrc
  7433  11F2  0CF9               	rrf	i1___wmul@multiplier+1,f
  7434  11F3  0CF8               	rrf	i1___wmul@multiplier,f
  7435  11F4  3EFF               	addlw	-1
  7436  11F5  1D03               	skipz
  7437  11F6  29F1               	goto	u337_25
  7438  11F7  0879               	movf	i1___wmul@multiplier+1,w
  7439  11F8  0478               	iorwf	i1___wmul@multiplier,w
  7440  11F9  1D03               	skipz
  7441  11FA  29E1               	goto	i1l2738
  7442  11FB  087D               	movf	i1___wmul@product+1,w
  7443  11FC  01F9               	clrf	?i1___wmul+1
  7444  11FD  07F9               	addwf	?i1___wmul+1,f
  7445  11FE  087C               	movf	i1___wmul@product,w
  7446  11FF  01F8               	clrf	?i1___wmul
  7447  1200  07F8               	addwf	?i1___wmul,f
  7448  1201  0008               	return
  7449  1202                     __end_ofi1___wmul:	
  7450                           
  7451                           	psect	text30
  7452  1129                     __ptext30:	
  7453 ;; *************** function i1_PWM_DutyCycle2 *****************
  7454 ;; Defined at:
  7455 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  valor           2    0[COMMON] int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;		None               void
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7469 ;;      Params:         2       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0
  7471 ;;      Temps:          2       0       0       0       0
  7472 ;;      Totals:         4       0       0       0       0
  7473 ;;Total ram usage:        4 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_Fuzzy
  7479 ;;		_ISR
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function i1_PWM_DutyCycle2
  7485  1129                     i1_PWM_DutyCycle2:	
  7486                           
  7487                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7491  1129  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7492  112A  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7493  112B  0870               	movf	i1PWM_DutyCycle2@valor,w
  7494  112C  00F2               	movwf	??i1_PWM_DutyCycle2
  7495  112D  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7496  112E  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7497  112F  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7498  1130  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7499  1131  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7500  1132  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7501  1133  0872               	movf	??i1_PWM_DutyCycle2,w
  7502  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7503  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7504  1136  009B               	movwf	27	;volatile
  7505                           
  7506                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7507  1137  0870               	movf	i1PWM_DutyCycle2@valor,w
  7508  1138  00F2               	movwf	??i1_PWM_DutyCycle2
  7509  1139  3003               	movlw	3
  7510  113A                     u334_25:	
  7511  113A  1003               	clrc
  7512  113B  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7513  113C  3EFF               	addlw	-1
  7514  113D  1D03               	skipz
  7515  113E  293A               	goto	u334_25
  7516  113F  1003               	clrc
  7517  1140  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7518  1141  380C               	iorlw	12
  7519  1142  009D               	movwf	29	;volatile
  7520  1143  0008               	return
  7521  1144                     __end_ofi1_PWM_DutyCycle2:	
  7522                           
  7523                           	psect	text31
  7524  08E1                     __ptext31:	
  7525 ;; *************** function _trimf *****************
  7526 ;; Defined at:
  7527 ;;		line 69 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  x               3   39[BANK0 ] float 
  7530 ;;  a               3   42[BANK0 ] float 
  7531 ;;  b               3   45[BANK0 ] float 
  7532 ;;  c               3   48[BANK0 ] float 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  ua              3   51[BANK0 ] float 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  3   39[BANK0 ] float 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0, pclath, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7544 ;;      Params:         0      12       0       0       0
  7545 ;;      Locals:         0       3       0       0       0
  7546 ;;      Temps:          0       0       0       0       0
  7547 ;;      Totals:         0      15       0       0       0
  7548 ;;Total ram usage:       15 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    2
  7551 ;; This function calls:
  7552 ;;		___ftadd
  7553 ;;		___ftdiv
  7554 ;;		___ftge
  7555 ;;		___ftneg
  7556 ;; This function is called by:
  7557 ;;		_Fuzzy
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _trimf
  7563  08E1                     _trimf:	
  7564                           
  7565                           ;main.c: 71: float ua = 0;
  7566                           
  7567                           ;incstack = 0
  7568                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7569  08E1  3000               	movlw	0
  7570  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  7571  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  7572  08E4  00D3               	movwf	trimf@ua
  7573  08E5  3000               	movlw	0
  7574  08E6  00D4               	movwf	trimf@ua+1
  7575  08E7  3000               	movlw	0
  7576  08E8  00D5               	movwf	trimf@ua+2
  7577                           
  7578                           ;main.c: 73: if (x <= a)
  7579  08E9  084A               	movf	trimf@a,w
  7580  08EA  00F0               	movwf	___ftge@ff1
  7581  08EB  084B               	movf	trimf@a+1,w
  7582  08EC  00F1               	movwf	___ftge@ff1+1
  7583  08ED  084C               	movf	trimf@a+2,w
  7584  08EE  00F2               	movwf	___ftge@ff1+2
  7585  08EF  0847               	movf	trimf@x,w
  7586  08F0  00F3               	movwf	___ftge@ff2
  7587  08F1  0848               	movf	trimf@x+1,w
  7588  08F2  00F4               	movwf	___ftge@ff2+1
  7589  08F3  0849               	movf	trimf@x+2,w
  7590  08F4  00F5               	movwf	___ftge@ff2+2
  7591  08F5  160A  118A  23F6  120A  158A  	fcall	___ftge
  7592  08FA  1803               	btfsc	3,0
  7593  08FB  29F4               	goto	L12
  7594                           
  7595                           ;main.c: 75: else if ((a < x) && (x <= b))
  7596                           
  7597                           ;main.c: 74: ua = 0;
  7598  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  7599  08FD  1303               	bcf	3,6	;RP1=0, select bank0
  7600  08FE  084A               	movf	trimf@a,w
  7601  08FF  00F0               	movwf	___ftge@ff1
  7602  0900  084B               	movf	trimf@a+1,w
  7603  0901  00F1               	movwf	___ftge@ff1+1
  7604  0902  084C               	movf	trimf@a+2,w
  7605  0903  00F2               	movwf	___ftge@ff1+2
  7606  0904  0847               	movf	trimf@x,w
  7607  0905  00F3               	movwf	___ftge@ff2
  7608  0906  0848               	movf	trimf@x+1,w
  7609  0907  00F4               	movwf	___ftge@ff2+1
  7610  0908  0849               	movf	trimf@x+2,w
  7611  0909  00F5               	movwf	___ftge@ff2+2
  7612  090A  160A  118A  23F6  120A  158A  	fcall	___ftge
  7613  090F  1803               	btfsc	3,0
  7614  0910  295A               	goto	i1l2442
  7615  0911  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0912  1303               	bcf	3,6	;RP1=0, select bank0
  7617  0913  084D               	movf	trimf@b,w
  7618  0914  00F0               	movwf	___ftge@ff1
  7619  0915  084E               	movf	trimf@b+1,w
  7620  0916  00F1               	movwf	___ftge@ff1+1
  7621  0917  084F               	movf	trimf@b+2,w
  7622  0918  00F2               	movwf	___ftge@ff1+2
  7623  0919  0847               	movf	trimf@x,w
  7624  091A  00F3               	movwf	___ftge@ff2
  7625  091B  0848               	movf	trimf@x+1,w
  7626  091C  00F4               	movwf	___ftge@ff2+1
  7627  091D  0849               	movf	trimf@x+2,w
  7628  091E  00F5               	movwf	___ftge@ff2+2
  7629  091F  160A  118A  23F6  120A  158A  	fcall	___ftge
  7630  0924  1C03               	btfss	3,0
  7631  0925  295A               	goto	i1l2442
  7632                           
  7633                           ;main.c: 76: ua = ((x - a) / (b - a));
  7634  0926  1283               	bcf	3,5	;RP0=0, select bank0
  7635  0927  1303               	bcf	3,6	;RP1=0, select bank0
  7636  0928  084D               	movf	trimf@b,w
  7637  0929  00BA               	movwf	___ftadd@f1
  7638  092A  084E               	movf	trimf@b+1,w
  7639  092B  00BB               	movwf	___ftadd@f1+1
  7640  092C  084F               	movf	trimf@b+2,w
  7641  092D  00BC               	movwf	___ftadd@f1+2
  7642  092E  084A               	movf	trimf@a,w
  7643  092F  00F0               	movwf	___ftneg@f1
  7644  0930  084B               	movf	trimf@a+1,w
  7645  0931  00F1               	movwf	___ftneg@f1+1
  7646  0932  084C               	movf	trimf@a+2,w
  7647  0933  00F2               	movwf	___ftneg@f1+2
  7648  0934  160A  118A  208D  120A  158A  	fcall	___ftneg
  7649  0939  0870               	movf	?___ftneg,w
  7650  093A  1283               	bcf	3,5	;RP0=0, select bank0
  7651  093B  1303               	bcf	3,6	;RP1=0, select bank0
  7652  093C  00BD               	movwf	___ftadd@f2
  7653  093D  0871               	movf	?___ftneg+1,w
  7654  093E  00BE               	movwf	___ftadd@f2+1
  7655  093F  0872               	movf	?___ftneg+2,w
  7656  0940  00BF               	movwf	___ftadd@f2+2
  7657  0941  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7658  0946  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0947  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0948  083A               	movf	?___ftadd,w
  7661  0949  00F8               	movwf	___ftdiv@f2
  7662  094A  083B               	movf	?___ftadd+1,w
  7663  094B  00F9               	movwf	___ftdiv@f2+1
  7664  094C  083C               	movf	?___ftadd+2,w
  7665  094D  00FA               	movwf	___ftdiv@f2+2
  7666  094E  0847               	movf	trimf@x,w
  7667  094F  00BA               	movwf	___ftadd@f1
  7668  0950  0848               	movf	trimf@x+1,w
  7669  0951  00BB               	movwf	___ftadd@f1+1
  7670  0952  0849               	movf	trimf@x+2,w
  7671  0953  00BC               	movwf	___ftadd@f1+2
  7672  0954  084A               	movf	trimf@a,w
  7673  0955  00F0               	movwf	___ftneg@f1
  7674  0956  084B               	movf	trimf@a+1,w
  7675  0957  00F1               	movwf	___ftneg@f1+1
  7676  0958  084C               	movf	trimf@a+2,w
  7677  0959  29B7               	goto	L13
  7678  095A                     i1l2442:	
  7679                           
  7680                           ;main.c: 77: else if ((b < x) && (x <= c))
  7681  095A  1283               	bcf	3,5	;RP0=0, select bank0
  7682  095B  1303               	bcf	3,6	;RP1=0, select bank0
  7683  095C  084D               	movf	trimf@b,w
  7684  095D  00F0               	movwf	___ftge@ff1
  7685  095E  084E               	movf	trimf@b+1,w
  7686  095F  00F1               	movwf	___ftge@ff1+1
  7687  0960  084F               	movf	trimf@b+2,w
  7688  0961  00F2               	movwf	___ftge@ff1+2
  7689  0962  0847               	movf	trimf@x,w
  7690  0963  00F3               	movwf	___ftge@ff2
  7691  0964  0848               	movf	trimf@x+1,w
  7692  0965  00F4               	movwf	___ftge@ff2+1
  7693  0966  0849               	movf	trimf@x+2,w
  7694  0967  00F5               	movwf	___ftge@ff2+2
  7695  0968  160A  118A  23F6  120A  158A  	fcall	___ftge
  7696  096D  1803               	btfsc	3,0
  7697  096E  29DF               	goto	i1l2448
  7698  096F  1283               	bcf	3,5	;RP0=0, select bank0
  7699  0970  1303               	bcf	3,6	;RP1=0, select bank0
  7700  0971  0850               	movf	trimf@c,w
  7701  0972  00F0               	movwf	___ftge@ff1
  7702  0973  0851               	movf	trimf@c+1,w
  7703  0974  00F1               	movwf	___ftge@ff1+1
  7704  0975  0852               	movf	trimf@c+2,w
  7705  0976  00F2               	movwf	___ftge@ff1+2
  7706  0977  0847               	movf	trimf@x,w
  7707  0978  00F3               	movwf	___ftge@ff2
  7708  0979  0848               	movf	trimf@x+1,w
  7709  097A  00F4               	movwf	___ftge@ff2+1
  7710  097B  0849               	movf	trimf@x+2,w
  7711  097C  00F5               	movwf	___ftge@ff2+2
  7712  097D  160A  118A  23F6  120A  158A  	fcall	___ftge
  7713  0982  1C03               	btfss	3,0
  7714  0983  29DF               	goto	i1l2448
  7715                           
  7716                           ;main.c: 78: ua = ((x - c) / (b - c));
  7717  0984  1283               	bcf	3,5	;RP0=0, select bank0
  7718  0985  1303               	bcf	3,6	;RP1=0, select bank0
  7719  0986  084D               	movf	trimf@b,w
  7720  0987  00BA               	movwf	___ftadd@f1
  7721  0988  084E               	movf	trimf@b+1,w
  7722  0989  00BB               	movwf	___ftadd@f1+1
  7723  098A  084F               	movf	trimf@b+2,w
  7724  098B  00BC               	movwf	___ftadd@f1+2
  7725  098C  0850               	movf	trimf@c,w
  7726  098D  00F0               	movwf	___ftneg@f1
  7727  098E  0851               	movf	trimf@c+1,w
  7728  098F  00F1               	movwf	___ftneg@f1+1
  7729  0990  0852               	movf	trimf@c+2,w
  7730  0991  00F2               	movwf	___ftneg@f1+2
  7731  0992  160A  118A  208D  120A  158A  	fcall	___ftneg
  7732  0997  0870               	movf	?___ftneg,w
  7733  0998  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0999  1303               	bcf	3,6	;RP1=0, select bank0
  7735  099A  00BD               	movwf	___ftadd@f2
  7736  099B  0871               	movf	?___ftneg+1,w
  7737  099C  00BE               	movwf	___ftadd@f2+1
  7738  099D  0872               	movf	?___ftneg+2,w
  7739  099E  00BF               	movwf	___ftadd@f2+2
  7740  099F  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7741  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  7742  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  7743  09A6  083A               	movf	?___ftadd,w
  7744  09A7  00F8               	movwf	___ftdiv@f2
  7745  09A8  083B               	movf	?___ftadd+1,w
  7746  09A9  00F9               	movwf	___ftdiv@f2+1
  7747  09AA  083C               	movf	?___ftadd+2,w
  7748  09AB  00FA               	movwf	___ftdiv@f2+2
  7749  09AC  0847               	movf	trimf@x,w
  7750  09AD  00BA               	movwf	___ftadd@f1
  7751  09AE  0848               	movf	trimf@x+1,w
  7752  09AF  00BB               	movwf	___ftadd@f1+1
  7753  09B0  0849               	movf	trimf@x+2,w
  7754  09B1  00BC               	movwf	___ftadd@f1+2
  7755  09B2  0850               	movf	trimf@c,w
  7756  09B3  00F0               	movwf	___ftneg@f1
  7757  09B4  0851               	movf	trimf@c+1,w
  7758  09B5  00F1               	movwf	___ftneg@f1+1
  7759  09B6  0852               	movf	trimf@c+2,w
  7760  09B7                     L13:	
  7761  09B7  00F2               	movwf	___ftneg@f1+2
  7762  09B8  160A  118A  208D  120A  158A  	fcall	___ftneg
  7763  09BD  0870               	movf	?___ftneg,w
  7764  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  7765  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  7766  09C0  00BD               	movwf	___ftadd@f2
  7767  09C1  0871               	movf	?___ftneg+1,w
  7768  09C2  00BE               	movwf	___ftadd@f2+1
  7769  09C3  0872               	movf	?___ftneg+2,w
  7770  09C4  00BF               	movwf	___ftadd@f2+2
  7771  09C5  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7772  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7773  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  7774  09CC  083A               	movf	?___ftadd,w
  7775  09CD  00FB               	movwf	___ftdiv@f1
  7776  09CE  083B               	movf	?___ftadd+1,w
  7777  09CF  00FC               	movwf	___ftdiv@f1+1
  7778  09D0  083C               	movf	?___ftadd+2,w
  7779  09D1  00FD               	movwf	___ftdiv@f1+2
  7780  09D2  160A  118A  2641  120A  158A  	fcall	___ftdiv
  7781  09D7  0878               	movf	?___ftdiv,w
  7782  09D8  1283               	bcf	3,5	;RP0=0, select bank0
  7783  09D9  1303               	bcf	3,6	;RP1=0, select bank0
  7784  09DA  00D3               	movwf	trimf@ua
  7785  09DB  0879               	movf	?___ftdiv+1,w
  7786  09DC  00D4               	movwf	trimf@ua+1
  7787  09DD  087A               	movf	?___ftdiv+2,w
  7788  09DE  29FB               	goto	L10
  7789  09DF                     i1l2448:	
  7790                           
  7791                           ;main.c: 79: else if (x > c)
  7792  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  7793  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  7794  09E1  0850               	movf	trimf@c,w
  7795  09E2  00F0               	movwf	___ftge@ff1
  7796  09E3  0851               	movf	trimf@c+1,w
  7797  09E4  00F1               	movwf	___ftge@ff1+1
  7798  09E5  0852               	movf	trimf@c+2,w
  7799  09E6  00F2               	movwf	___ftge@ff1+2
  7800  09E7  0847               	movf	trimf@x,w
  7801  09E8  00F3               	movwf	___ftge@ff2
  7802  09E9  0848               	movf	trimf@x+1,w
  7803  09EA  00F4               	movwf	___ftge@ff2+1
  7804  09EB  0849               	movf	trimf@x+2,w
  7805  09EC  00F5               	movwf	___ftge@ff2+2
  7806  09ED  160A  118A  23F6  120A  158A  	fcall	___ftge
  7807  09F2  1803               	btfsc	3,0
  7808  09F3  29FC               	goto	i1l120
  7809  09F4                     L12:	
  7810                           
  7811                           ;main.c: 80: ua = 0;
  7812  09F4  3000               	movlw	0
  7813  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  7814  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  7815  09F7  00D3               	movwf	trimf@ua
  7816  09F8  3000               	movlw	0
  7817  09F9  00D4               	movwf	trimf@ua+1
  7818  09FA  3000               	movlw	0
  7819  09FB                     L10:	
  7820  09FB  00D5               	movwf	trimf@ua+2
  7821  09FC                     i1l120:	
  7822                           
  7823                           ;main.c: 82: return(ua);
  7824  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  7825  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  7826  09FE  0853               	movf	trimf@ua,w
  7827  09FF  00C7               	movwf	?_trimf
  7828  0A00  0854               	movf	trimf@ua+1,w
  7829  0A01  00C8               	movwf	?_trimf+1
  7830  0A02  0855               	movf	trimf@ua+2,w
  7831  0A03  00C9               	movwf	?_trimf+2
  7832  0A04  0008               	return
  7833  0A05                     __end_of_trimf:	
  7834                           
  7835                           	psect	text32
  7836  0B56                     __ptext32:	
  7837 ;; *************** function _trapmf *****************
  7838 ;; Defined at:
  7839 ;;		line 88 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  x               3   39[BANK0 ] float 
  7842 ;;  a               3   42[BANK0 ] float 
  7843 ;;  b               3   45[BANK0 ] float 
  7844 ;;  c               3   48[BANK0 ] float 
  7845 ;;  d               3   51[BANK0 ] float 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  ua              3   54[BANK0 ] float 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  3   39[BANK0 ] float 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0, pclath, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7857 ;;      Params:         0      15       0       0       0
  7858 ;;      Locals:         0       3       0       0       0
  7859 ;;      Temps:          0       0       0       0       0
  7860 ;;      Totals:         0      18       0       0       0
  7861 ;;Total ram usage:       18 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    2
  7864 ;; This function calls:
  7865 ;;		___ftadd
  7866 ;;		___ftdiv
  7867 ;;		___ftge
  7868 ;;		___ftneg
  7869 ;; This function is called by:
  7870 ;;		_Fuzzy
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _trapmf
  7876  0B56                     _trapmf:	
  7877                           
  7878                           ;main.c: 90: float ua = 0;
  7879                           
  7880                           ;incstack = 0
  7881                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7882  0B56  3000               	movlw	0
  7883  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  7884  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  7885  0B59  00D6               	movwf	trapmf@ua
  7886  0B5A  3000               	movlw	0
  7887  0B5B  00D7               	movwf	trapmf@ua+1
  7888  0B5C  3000               	movlw	0
  7889  0B5D  00D8               	movwf	trapmf@ua+2
  7890                           
  7891                           ;main.c: 92: if (x <= a)
  7892  0B5E  084A               	movf	trapmf@a,w
  7893  0B5F  00F0               	movwf	___ftge@ff1
  7894  0B60  084B               	movf	trapmf@a+1,w
  7895  0B61  00F1               	movwf	___ftge@ff1+1
  7896  0B62  084C               	movf	trapmf@a+2,w
  7897  0B63  00F2               	movwf	___ftge@ff1+2
  7898  0B64  0847               	movf	trapmf@x,w
  7899  0B65  00F3               	movwf	___ftge@ff2
  7900  0B66  0848               	movf	trapmf@x+1,w
  7901  0B67  00F4               	movwf	___ftge@ff2+1
  7902  0B68  0849               	movf	trapmf@x+2,w
  7903  0B69  00F5               	movwf	___ftge@ff2+2
  7904  0B6A  160A  118A  23F6  120A  158A  	fcall	___ftge
  7905  0B6F  1803               	btfsc	3,0
  7906  0B70  2C9B               	goto	L18
  7907                           
  7908                           ;main.c: 94: else if ((a < x) && (x <= b))
  7909                           
  7910                           ;main.c: 93: ua = 0;
  7911  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  7912  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  7913  0B73  084A               	movf	trapmf@a,w
  7914  0B74  00F0               	movwf	___ftge@ff1
  7915  0B75  084B               	movf	trapmf@a+1,w
  7916  0B76  00F1               	movwf	___ftge@ff1+1
  7917  0B77  084C               	movf	trapmf@a+2,w
  7918  0B78  00F2               	movwf	___ftge@ff1+2
  7919  0B79  0847               	movf	trapmf@x,w
  7920  0B7A  00F3               	movwf	___ftge@ff2
  7921  0B7B  0848               	movf	trapmf@x+1,w
  7922  0B7C  00F4               	movwf	___ftge@ff2+1
  7923  0B7D  0849               	movf	trapmf@x+2,w
  7924  0B7E  00F5               	movwf	___ftge@ff2+2
  7925  0B7F  160A  118A  23F6  120A  158A  	fcall	___ftge
  7926  0B84  1803               	btfsc	3,0
  7927  0B85  2BCF               	goto	i1l2466
  7928  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  7929  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  7930  0B88  084D               	movf	trapmf@b,w
  7931  0B89  00F0               	movwf	___ftge@ff1
  7932  0B8A  084E               	movf	trapmf@b+1,w
  7933  0B8B  00F1               	movwf	___ftge@ff1+1
  7934  0B8C  084F               	movf	trapmf@b+2,w
  7935  0B8D  00F2               	movwf	___ftge@ff1+2
  7936  0B8E  0847               	movf	trapmf@x,w
  7937  0B8F  00F3               	movwf	___ftge@ff2
  7938  0B90  0848               	movf	trapmf@x+1,w
  7939  0B91  00F4               	movwf	___ftge@ff2+1
  7940  0B92  0849               	movf	trapmf@x+2,w
  7941  0B93  00F5               	movwf	___ftge@ff2+2
  7942  0B94  160A  118A  23F6  120A  158A  	fcall	___ftge
  7943  0B99  1C03               	btfss	3,0
  7944  0B9A  2BCF               	goto	i1l2466
  7945                           
  7946                           ;main.c: 95: ua = ((x - a) / (b - a));
  7947  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7949  0B9D  084D               	movf	trapmf@b,w
  7950  0B9E  00BA               	movwf	___ftadd@f1
  7951  0B9F  084E               	movf	trapmf@b+1,w
  7952  0BA0  00BB               	movwf	___ftadd@f1+1
  7953  0BA1  084F               	movf	trapmf@b+2,w
  7954  0BA2  00BC               	movwf	___ftadd@f1+2
  7955  0BA3  084A               	movf	trapmf@a,w
  7956  0BA4  00F0               	movwf	___ftneg@f1
  7957  0BA5  084B               	movf	trapmf@a+1,w
  7958  0BA6  00F1               	movwf	___ftneg@f1+1
  7959  0BA7  084C               	movf	trapmf@a+2,w
  7960  0BA8  00F2               	movwf	___ftneg@f1+2
  7961  0BA9  160A  118A  208D  120A  158A  	fcall	___ftneg
  7962  0BAE  0870               	movf	?___ftneg,w
  7963  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  7964  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  7965  0BB1  00BD               	movwf	___ftadd@f2
  7966  0BB2  0871               	movf	?___ftneg+1,w
  7967  0BB3  00BE               	movwf	___ftadd@f2+1
  7968  0BB4  0872               	movf	?___ftneg+2,w
  7969  0BB5  00BF               	movwf	___ftadd@f2+2
  7970  0BB6  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7971  0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  7972  0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  7973  0BBD  083A               	movf	?___ftadd,w
  7974  0BBE  00F8               	movwf	___ftdiv@f2
  7975  0BBF  083B               	movf	?___ftadd+1,w
  7976  0BC0  00F9               	movwf	___ftdiv@f2+1
  7977  0BC1  083C               	movf	?___ftadd+2,w
  7978  0BC2  00FA               	movwf	___ftdiv@f2+2
  7979  0BC3  0847               	movf	trapmf@x,w
  7980  0BC4  00BA               	movwf	___ftadd@f1
  7981  0BC5  0848               	movf	trapmf@x+1,w
  7982  0BC6  00BB               	movwf	___ftadd@f1+1
  7983  0BC7  0849               	movf	trapmf@x+2,w
  7984  0BC8  00BC               	movwf	___ftadd@f1+2
  7985  0BC9  084A               	movf	trapmf@a,w
  7986  0BCA  00F0               	movwf	___ftneg@f1
  7987  0BCB  084B               	movf	trapmf@a+1,w
  7988  0BCC  00F1               	movwf	___ftneg@f1+1
  7989  0BCD  084C               	movf	trapmf@a+2,w
  7990  0BCE  2C5E               	goto	L20
  7991  0BCF                     i1l2466:	
  7992                           
  7993                           ;main.c: 96: else if ((b <= x) && (x <= c))
  7994  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  7995  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  7996  0BD1  0847               	movf	trapmf@x,w
  7997  0BD2  00F0               	movwf	___ftge@ff1
  7998  0BD3  0848               	movf	trapmf@x+1,w
  7999  0BD4  00F1               	movwf	___ftge@ff1+1
  8000  0BD5  0849               	movf	trapmf@x+2,w
  8001  0BD6  00F2               	movwf	___ftge@ff1+2
  8002  0BD7  084D               	movf	trapmf@b,w
  8003  0BD8  00F3               	movwf	___ftge@ff2
  8004  0BD9  084E               	movf	trapmf@b+1,w
  8005  0BDA  00F4               	movwf	___ftge@ff2+1
  8006  0BDB  084F               	movf	trapmf@b+2,w
  8007  0BDC  00F5               	movwf	___ftge@ff2+2
  8008  0BDD  160A  118A  23F6  120A  158A  	fcall	___ftge
  8009  0BE2  1C03               	btfss	3,0
  8010  0BE3  2C01               	goto	i1l2472
  8011  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  8012  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  8013  0BE6  0850               	movf	trapmf@c,w
  8014  0BE7  00F0               	movwf	___ftge@ff1
  8015  0BE8  0851               	movf	trapmf@c+1,w
  8016  0BE9  00F1               	movwf	___ftge@ff1+1
  8017  0BEA  0852               	movf	trapmf@c+2,w
  8018  0BEB  00F2               	movwf	___ftge@ff1+2
  8019  0BEC  0847               	movf	trapmf@x,w
  8020  0BED  00F3               	movwf	___ftge@ff2
  8021  0BEE  0848               	movf	trapmf@x+1,w
  8022  0BEF  00F4               	movwf	___ftge@ff2+1
  8023  0BF0  0849               	movf	trapmf@x+2,w
  8024  0BF1  00F5               	movwf	___ftge@ff2+2
  8025  0BF2  160A  118A  23F6  120A  158A  	fcall	___ftge
  8026  0BF7  1C03               	btfss	3,0
  8027  0BF8  2C01               	goto	i1l2472
  8028                           
  8029                           ;main.c: 97: ua = 1;
  8030  0BF9  3000               	movlw	0
  8031  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  8032  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  8033  0BFC  00D6               	movwf	trapmf@ua
  8034  0BFD  3080               	movlw	128
  8035  0BFE  00D7               	movwf	trapmf@ua+1
  8036  0BFF  303F               	movlw	63
  8037  0C00  2CA2               	goto	L17
  8038  0C01                     i1l2472:	
  8039                           
  8040                           ;main.c: 98: else if ((c < x) && (x <= d))
  8041  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  8042  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  8043  0C03  0850               	movf	trapmf@c,w
  8044  0C04  00F0               	movwf	___ftge@ff1
  8045  0C05  0851               	movf	trapmf@c+1,w
  8046  0C06  00F1               	movwf	___ftge@ff1+1
  8047  0C07  0852               	movf	trapmf@c+2,w
  8048  0C08  00F2               	movwf	___ftge@ff1+2
  8049  0C09  0847               	movf	trapmf@x,w
  8050  0C0A  00F3               	movwf	___ftge@ff2
  8051  0C0B  0848               	movf	trapmf@x+1,w
  8052  0C0C  00F4               	movwf	___ftge@ff2+1
  8053  0C0D  0849               	movf	trapmf@x+2,w
  8054  0C0E  00F5               	movwf	___ftge@ff2+2
  8055  0C0F  160A  118A  23F6  120A  158A  	fcall	___ftge
  8056  0C14  1803               	btfsc	3,0
  8057  0C15  2C86               	goto	i1l2478
  8058  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  8059  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  8060  0C18  0853               	movf	trapmf@d,w
  8061  0C19  00F0               	movwf	___ftge@ff1
  8062  0C1A  0854               	movf	trapmf@d+1,w
  8063  0C1B  00F1               	movwf	___ftge@ff1+1
  8064  0C1C  0855               	movf	trapmf@d+2,w
  8065  0C1D  00F2               	movwf	___ftge@ff1+2
  8066  0C1E  0847               	movf	trapmf@x,w
  8067  0C1F  00F3               	movwf	___ftge@ff2
  8068  0C20  0848               	movf	trapmf@x+1,w
  8069  0C21  00F4               	movwf	___ftge@ff2+1
  8070  0C22  0849               	movf	trapmf@x+2,w
  8071  0C23  00F5               	movwf	___ftge@ff2+2
  8072  0C24  160A  118A  23F6  120A  158A  	fcall	___ftge
  8073  0C29  1C03               	btfss	3,0
  8074  0C2A  2C86               	goto	i1l2478
  8075                           
  8076                           ;main.c: 99: ua = ((d - x) / (d - c));
  8077  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  8078  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  8079  0C2D  0853               	movf	trapmf@d,w
  8080  0C2E  00BA               	movwf	___ftadd@f1
  8081  0C2F  0854               	movf	trapmf@d+1,w
  8082  0C30  00BB               	movwf	___ftadd@f1+1
  8083  0C31  0855               	movf	trapmf@d+2,w
  8084  0C32  00BC               	movwf	___ftadd@f1+2
  8085  0C33  0850               	movf	trapmf@c,w
  8086  0C34  00F0               	movwf	___ftneg@f1
  8087  0C35  0851               	movf	trapmf@c+1,w
  8088  0C36  00F1               	movwf	___ftneg@f1+1
  8089  0C37  0852               	movf	trapmf@c+2,w
  8090  0C38  00F2               	movwf	___ftneg@f1+2
  8091  0C39  160A  118A  208D  120A  158A  	fcall	___ftneg
  8092  0C3E  0870               	movf	?___ftneg,w
  8093  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  8094  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  8095  0C41  00BD               	movwf	___ftadd@f2
  8096  0C42  0871               	movf	?___ftneg+1,w
  8097  0C43  00BE               	movwf	___ftadd@f2+1
  8098  0C44  0872               	movf	?___ftneg+2,w
  8099  0C45  00BF               	movwf	___ftadd@f2+2
  8100  0C46  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8101  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  8102  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  8103  0C4D  083A               	movf	?___ftadd,w
  8104  0C4E  00F8               	movwf	___ftdiv@f2
  8105  0C4F  083B               	movf	?___ftadd+1,w
  8106  0C50  00F9               	movwf	___ftdiv@f2+1
  8107  0C51  083C               	movf	?___ftadd+2,w
  8108  0C52  00FA               	movwf	___ftdiv@f2+2
  8109  0C53  0853               	movf	trapmf@d,w
  8110  0C54  00BA               	movwf	___ftadd@f1
  8111  0C55  0854               	movf	trapmf@d+1,w
  8112  0C56  00BB               	movwf	___ftadd@f1+1
  8113  0C57  0855               	movf	trapmf@d+2,w
  8114  0C58  00BC               	movwf	___ftadd@f1+2
  8115  0C59  0847               	movf	trapmf@x,w
  8116  0C5A  00F0               	movwf	___ftneg@f1
  8117  0C5B  0848               	movf	trapmf@x+1,w
  8118  0C5C  00F1               	movwf	___ftneg@f1+1
  8119  0C5D  0849               	movf	trapmf@x+2,w
  8120  0C5E                     L20:	
  8121  0C5E  00F2               	movwf	___ftneg@f1+2
  8122  0C5F  160A  118A  208D  120A  158A  	fcall	___ftneg
  8123  0C64  0870               	movf	?___ftneg,w
  8124  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0C67  00BD               	movwf	___ftadd@f2
  8127  0C68  0871               	movf	?___ftneg+1,w
  8128  0C69  00BE               	movwf	___ftadd@f2+1
  8129  0C6A  0872               	movf	?___ftneg+2,w
  8130  0C6B  00BF               	movwf	___ftadd@f2+2
  8131  0C6C  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8132  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  8133  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  8134  0C73  083A               	movf	?___ftadd,w
  8135  0C74  00FB               	movwf	___ftdiv@f1
  8136  0C75  083B               	movf	?___ftadd+1,w
  8137  0C76  00FC               	movwf	___ftdiv@f1+1
  8138  0C77  083C               	movf	?___ftadd+2,w
  8139  0C78  00FD               	movwf	___ftdiv@f1+2
  8140  0C79  160A  118A  2641  120A  158A  	fcall	___ftdiv
  8141  0C7E  0878               	movf	?___ftdiv,w
  8142  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  8143  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  8144  0C81  00D6               	movwf	trapmf@ua
  8145  0C82  0879               	movf	?___ftdiv+1,w
  8146  0C83  00D7               	movwf	trapmf@ua+1
  8147  0C84  087A               	movf	?___ftdiv+2,w
  8148  0C85  2CA2               	goto	L17
  8149  0C86                     i1l2478:	
  8150                           
  8151                           ;main.c: 100: else if (x > d)
  8152  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  8153  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  8154  0C88  0853               	movf	trapmf@d,w
  8155  0C89  00F0               	movwf	___ftge@ff1
  8156  0C8A  0854               	movf	trapmf@d+1,w
  8157  0C8B  00F1               	movwf	___ftge@ff1+1
  8158  0C8C  0855               	movf	trapmf@d+2,w
  8159  0C8D  00F2               	movwf	___ftge@ff1+2
  8160  0C8E  0847               	movf	trapmf@x,w
  8161  0C8F  00F3               	movwf	___ftge@ff2
  8162  0C90  0848               	movf	trapmf@x+1,w
  8163  0C91  00F4               	movwf	___ftge@ff2+1
  8164  0C92  0849               	movf	trapmf@x+2,w
  8165  0C93  00F5               	movwf	___ftge@ff2+2
  8166  0C94  160A  118A  23F6  120A  158A  	fcall	___ftge
  8167  0C99  1803               	btfsc	3,0
  8168  0C9A  2CA3               	goto	i1l130
  8169  0C9B                     L18:	
  8170                           
  8171                           ;main.c: 101: ua = 0;
  8172  0C9B  3000               	movlw	0
  8173  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  8174  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0C9E  00D6               	movwf	trapmf@ua
  8176  0C9F  3000               	movlw	0
  8177  0CA0  00D7               	movwf	trapmf@ua+1
  8178  0CA1  3000               	movlw	0
  8179  0CA2                     L17:	
  8180  0CA2  00D8               	movwf	trapmf@ua+2
  8181  0CA3                     i1l130:	
  8182                           
  8183                           ;main.c: 103: return(ua);
  8184  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  8185  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  8186  0CA5  0856               	movf	trapmf@ua,w
  8187  0CA6  00C7               	movwf	?_trapmf
  8188  0CA7  0857               	movf	trapmf@ua+1,w
  8189  0CA8  00C8               	movwf	?_trapmf+1
  8190  0CA9  0858               	movf	trapmf@ua+2,w
  8191  0CAA  00C9               	movwf	?_trapmf+2
  8192  0CAB  0008               	return
  8193  0CAC                     __end_of_trapmf:	
  8194                           
  8195                           	psect	text33
  8196  108D                     __ptext33:	
  8197 ;; *************** function ___ftneg *****************
  8198 ;; Defined at:
  8199 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  f1              3    0[COMMON] float 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;		None
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  3    0[COMMON] float 
  8206 ;; Registers used:
  8207 ;;		wreg
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8213 ;;      Params:         3       0       0       0       0
  8214 ;;      Locals:         0       0       0       0       0
  8215 ;;      Temps:          0       0       0       0       0
  8216 ;;      Totals:         3       0       0       0       0
  8217 ;;Total ram usage:        3 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_trimf
  8223 ;;		_trapmf
  8224 ;;		_Fuzzy
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function ___ftneg
  8230  108D                     ___ftneg:	
  8231                           
  8232                           ;incstack = 0
  8233                           ; Regs used in ___ftneg: [wreg]
  8234  108D  0872               	movf	___ftneg@f1+2,w
  8235  108E  0471               	iorwf	___ftneg@f1+1,w
  8236  108F  0470               	iorwf	___ftneg@f1,w
  8237  1090  1903               	skipnz
  8238  1091  0008               	return
  8239  1092  3080               	movlw	128
  8240  1093  06F2               	xorwf	___ftneg@f1+2,f
  8241  1094  0008               	return
  8242  1095                     __end_of___ftneg:	
  8243                           
  8244                           	psect	text34
  8245  1641                     __ptext34:	
  8246 ;; *************** function ___ftdiv *****************
  8247 ;; Defined at:
  8248 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  f2              3    8[COMMON] float 
  8251 ;;  f1              3   11[COMMON] float 
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  f3              3    5[BANK0 ] float 
  8254 ;;  sign            1    9[BANK0 ] unsigned char 
  8255 ;;  exp             1    8[BANK0 ] unsigned char 
  8256 ;;  cntr            1    4[BANK0 ] unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  3    8[COMMON] float 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, pclath, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8266 ;;      Params:         6       0       0       0       0
  8267 ;;      Locals:         0       6       0       0       0
  8268 ;;      Temps:          0       4       0       0       0
  8269 ;;      Totals:         6      10       0       0       0
  8270 ;;Total ram usage:       16 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    1
  8273 ;; This function calls:
  8274 ;;		___ftpack
  8275 ;; This function is called by:
  8276 ;;		_trimf
  8277 ;;		_trapmf
  8278 ;;		_Fuzzy
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           
  8283                           ;psect for function ___ftdiv
  8284  1641                     ___ftdiv:	
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8288  1641  087B               	movf	___ftdiv@f1,w
  8289  1642  1283               	bcf	3,5	;RP0=0, select bank0
  8290  1643  1303               	bcf	3,6	;RP1=0, select bank0
  8291  1644  00A0               	movwf	??___ftdiv
  8292  1645  087C               	movf	___ftdiv@f1+1,w
  8293  1646  00A1               	movwf	??___ftdiv+1
  8294  1647  087D               	movf	___ftdiv@f1+2,w
  8295  1648  00A2               	movwf	??___ftdiv+2
  8296  1649  1003               	clrc
  8297  164A  0D21               	rlf	??___ftdiv+1,w
  8298  164B  0D22               	rlf	??___ftdiv+2,w
  8299  164C  00A3               	movwf	??___ftdiv+3
  8300  164D  0823               	movf	??___ftdiv+3,w
  8301  164E  00A8               	movwf	___ftdiv@exp
  8302  164F  08A8               	movf	___ftdiv@exp,f
  8303  1650  1D03               	skipz
  8304  1651  2E59               	goto	i1l2362
  8305  1652  3000               	movlw	0
  8306  1653  00F8               	movwf	?___ftdiv
  8307  1654  3000               	movlw	0
  8308  1655  00F9               	movwf	?___ftdiv+1
  8309  1656  3000               	movlw	0
  8310  1657  00FA               	movwf	?___ftdiv+2
  8311  1658  0008               	return
  8312  1659                     i1l2362:	
  8313  1659  0878               	movf	___ftdiv@f2,w
  8314  165A  00A0               	movwf	??___ftdiv
  8315  165B  0879               	movf	___ftdiv@f2+1,w
  8316  165C  00A1               	movwf	??___ftdiv+1
  8317  165D  087A               	movf	___ftdiv@f2+2,w
  8318  165E  00A2               	movwf	??___ftdiv+2
  8319  165F  1003               	clrc
  8320  1660  0D21               	rlf	??___ftdiv+1,w
  8321  1661  0D22               	rlf	??___ftdiv+2,w
  8322  1662  00A3               	movwf	??___ftdiv+3
  8323  1663  0823               	movf	??___ftdiv+3,w
  8324  1664  00A9               	movwf	___ftdiv@sign
  8325  1665  08A9               	movf	___ftdiv@sign,f
  8326  1666  1D03               	skipz
  8327  1667  2E6F               	goto	i1l2368
  8328  1668  3000               	movlw	0
  8329  1669  00F8               	movwf	?___ftdiv
  8330  166A  3000               	movlw	0
  8331  166B  00F9               	movwf	?___ftdiv+1
  8332  166C  3000               	movlw	0
  8333  166D  00FA               	movwf	?___ftdiv+2
  8334  166E  0008               	return
  8335  166F                     i1l2368:	
  8336  166F  3000               	movlw	0
  8337  1670  00A5               	movwf	___ftdiv@f3
  8338  1671  3000               	movlw	0
  8339  1672  00A6               	movwf	___ftdiv@f3+1
  8340  1673  3000               	movlw	0
  8341  1674  00A7               	movwf	___ftdiv@f3+2
  8342  1675  3089               	movlw	137
  8343  1676  0729               	addwf	___ftdiv@sign,w
  8344  1677  00A0               	movwf	??___ftdiv
  8345  1678  0820               	movf	??___ftdiv,w
  8346  1679  02A8               	subwf	___ftdiv@exp,f
  8347  167A  087B               	movf	___ftdiv@f1,w
  8348  167B  00A0               	movwf	??___ftdiv
  8349  167C  087C               	movf	___ftdiv@f1+1,w
  8350  167D  00A1               	movwf	??___ftdiv+1
  8351  167E  087D               	movf	___ftdiv@f1+2,w
  8352  167F  00A2               	movwf	??___ftdiv+2
  8353  1680  3010               	movlw	16
  8354  1681                     u251_25:	
  8355  1681  1003               	clrc
  8356  1682  0CA2               	rrf	??___ftdiv+2,f
  8357  1683  0CA1               	rrf	??___ftdiv+1,f
  8358  1684  0CA0               	rrf	??___ftdiv,f
  8359  1685  3EFF               	addlw	-1
  8360  1686  1D03               	skipz
  8361  1687  2E81               	goto	u251_25
  8362  1688  0820               	movf	??___ftdiv,w
  8363  1689  00A3               	movwf	??___ftdiv+3
  8364  168A  0823               	movf	??___ftdiv+3,w
  8365  168B  00A9               	movwf	___ftdiv@sign
  8366  168C  0878               	movf	___ftdiv@f2,w
  8367  168D  00A0               	movwf	??___ftdiv
  8368  168E  0879               	movf	___ftdiv@f2+1,w
  8369  168F  00A1               	movwf	??___ftdiv+1
  8370  1690  087A               	movf	___ftdiv@f2+2,w
  8371  1691  00A2               	movwf	??___ftdiv+2
  8372  1692  3010               	movlw	16
  8373  1693                     u252_25:	
  8374  1693  1003               	clrc
  8375  1694  0CA2               	rrf	??___ftdiv+2,f
  8376  1695  0CA1               	rrf	??___ftdiv+1,f
  8377  1696  0CA0               	rrf	??___ftdiv,f
  8378  1697  3EFF               	addlw	-1
  8379  1698  1D03               	skipz
  8380  1699  2E93               	goto	u252_25
  8381  169A  0820               	movf	??___ftdiv,w
  8382  169B  00A3               	movwf	??___ftdiv+3
  8383  169C  0823               	movf	??___ftdiv+3,w
  8384  169D  06A9               	xorwf	___ftdiv@sign,f
  8385  169E  3080               	movlw	128
  8386  169F  00A0               	movwf	??___ftdiv
  8387  16A0  0820               	movf	??___ftdiv,w
  8388  16A1  05A9               	andwf	___ftdiv@sign,f
  8389  16A2  17FC               	bsf	___ftdiv@f1+1,7
  8390  16A3  30FF               	movlw	255
  8391  16A4  05FB               	andwf	___ftdiv@f1,f
  8392  16A5  30FF               	movlw	255
  8393  16A6  05FC               	andwf	___ftdiv@f1+1,f
  8394  16A7  3000               	movlw	0
  8395  16A8  05FD               	andwf	___ftdiv@f1+2,f
  8396  16A9  17F9               	bsf	___ftdiv@f2+1,7
  8397  16AA  30FF               	movlw	255
  8398  16AB  05F8               	andwf	___ftdiv@f2,f
  8399  16AC  30FF               	movlw	255
  8400  16AD  05F9               	andwf	___ftdiv@f2+1,f
  8401  16AE  3000               	movlw	0
  8402  16AF  05FA               	andwf	___ftdiv@f2+2,f
  8403  16B0  3018               	movlw	24
  8404  16B1  00A0               	movwf	??___ftdiv
  8405  16B2  0820               	movf	??___ftdiv,w
  8406  16B3  00A4               	movwf	___ftdiv@cntr
  8407  16B4                     i1l2382:	
  8408  16B4  3001               	movlw	1
  8409  16B5                     u253_25:	
  8410  16B5  1003               	clrc
  8411  16B6  0DA5               	rlf	___ftdiv@f3,f
  8412  16B7  0DA6               	rlf	___ftdiv@f3+1,f
  8413  16B8  0DA7               	rlf	___ftdiv@f3+2,f
  8414  16B9  3EFF               	addlw	-1
  8415  16BA  1D03               	skipz
  8416  16BB  2EB5               	goto	u253_25
  8417  16BC  087A               	movf	___ftdiv@f2+2,w
  8418  16BD  027D               	subwf	___ftdiv@f1+2,w
  8419  16BE  1D03               	skipz
  8420  16BF  2EC6               	goto	u254_25
  8421  16C0  0879               	movf	___ftdiv@f2+1,w
  8422  16C1  027C               	subwf	___ftdiv@f1+1,w
  8423  16C2  1D03               	skipz
  8424  16C3  2EC6               	goto	u254_25
  8425  16C4  0878               	movf	___ftdiv@f2,w
  8426  16C5  027B               	subwf	___ftdiv@f1,w
  8427  16C6                     u254_25:	
  8428  16C6  1C03               	skipc
  8429  16C7  2ED3               	goto	i1l2390
  8430  16C8  0878               	movf	___ftdiv@f2,w
  8431  16C9  02FB               	subwf	___ftdiv@f1,f
  8432  16CA  0879               	movf	___ftdiv@f2+1,w
  8433  16CB  1C03               	skipc
  8434  16CC  0F79               	incfsz	___ftdiv@f2+1,w
  8435  16CD  02FC               	subwf	___ftdiv@f1+1,f
  8436  16CE  087A               	movf	___ftdiv@f2+2,w
  8437  16CF  1C03               	skipc
  8438  16D0  0A7A               	incf	___ftdiv@f2+2,w
  8439  16D1  02FD               	subwf	___ftdiv@f1+2,f
  8440  16D2  1425               	bsf	___ftdiv@f3,0
  8441  16D3                     i1l2390:	
  8442  16D3  3001               	movlw	1
  8443  16D4                     u255_25:	
  8444  16D4  1003               	clrc
  8445  16D5  0DFB               	rlf	___ftdiv@f1,f
  8446  16D6  0DFC               	rlf	___ftdiv@f1+1,f
  8447  16D7  0DFD               	rlf	___ftdiv@f1+2,f
  8448  16D8  3EFF               	addlw	-1
  8449  16D9  1D03               	skipz
  8450  16DA  2ED4               	goto	u255_25
  8451  16DB  3001               	movlw	1
  8452  16DC  02A4               	subwf	___ftdiv@cntr,f
  8453  16DD  1D03               	btfss	3,2
  8454  16DE  2EB4               	goto	i1l2382
  8455  16DF  0825               	movf	___ftdiv@f3,w
  8456  16E0  00F0               	movwf	___ftpack@arg
  8457  16E1  0826               	movf	___ftdiv@f3+1,w
  8458  16E2  00F1               	movwf	___ftpack@arg+1
  8459  16E3  0827               	movf	___ftdiv@f3+2,w
  8460  16E4  00F2               	movwf	___ftpack@arg+2
  8461  16E5  0828               	movf	___ftdiv@exp,w
  8462  16E6  00A0               	movwf	??___ftdiv
  8463  16E7  0820               	movf	??___ftdiv,w
  8464  16E8  00F3               	movwf	___ftpack@exp
  8465  16E9  0829               	movf	___ftdiv@sign,w
  8466  16EA  00A1               	movwf	??___ftdiv+1
  8467  16EB  0821               	movf	??___ftdiv+1,w
  8468  16EC  00F4               	movwf	___ftpack@sign
  8469  16ED  160A  118A  2453   	fcall	___ftpack
  8470  16F0  0870               	movf	?___ftpack,w
  8471  16F1  00F8               	movwf	?___ftdiv
  8472  16F2  0871               	movf	?___ftpack+1,w
  8473  16F3  00F9               	movwf	?___ftdiv+1
  8474  16F4  0872               	movf	?___ftpack+2,w
  8475  16F5  00FA               	movwf	?___ftdiv+2
  8476  16F6  0008               	return
  8477  16F7                     __end_of___ftdiv:	
  8478                           
  8479                           	psect	text35
  8480  16F7                     __ptext35:	
  8481 ;; *************** function ___ftadd *****************
  8482 ;; Defined at:
  8483 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  f1              3   26[BANK0 ] float 
  8486 ;;  f2              3   29[BANK0 ] float 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  exp1            1   38[BANK0 ] unsigned char 
  8489 ;;  exp2            1   37[BANK0 ] unsigned char 
  8490 ;;  sign            1   36[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  3   26[BANK0 ] float 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         0       6       0       0       0
  8501 ;;      Locals:         0       3       0       0       0
  8502 ;;      Temps:          0       4       0       0       0
  8503 ;;      Totals:         0      13       0       0       0
  8504 ;;Total ram usage:       13 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    1
  8507 ;; This function calls:
  8508 ;;		___ftpack
  8509 ;; This function is called by:
  8510 ;;		_trimf
  8511 ;;		_trapmf
  8512 ;;		_Fuzzy
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           
  8517                           ;psect for function ___ftadd
  8518  16F7                     ___ftadd:	
  8519                           
  8520                           ;incstack = 0
  8521                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8522  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8523  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8524  16F9  083A               	movf	___ftadd@f1,w
  8525  16FA  00C0               	movwf	??___ftadd
  8526  16FB  083B               	movf	___ftadd@f1+1,w
  8527  16FC  00C1               	movwf	??___ftadd+1
  8528  16FD  083C               	movf	___ftadd@f1+2,w
  8529  16FE  00C2               	movwf	??___ftadd+2
  8530  16FF  1003               	clrc
  8531  1700  0D41               	rlf	??___ftadd+1,w
  8532  1701  0D42               	rlf	??___ftadd+2,w
  8533  1702  00C3               	movwf	??___ftadd+3
  8534  1703  0843               	movf	??___ftadd+3,w
  8535  1704  00C6               	movwf	___ftadd@exp1
  8536  1705  083D               	movf	___ftadd@f2,w
  8537  1706  00C0               	movwf	??___ftadd
  8538  1707  083E               	movf	___ftadd@f2+1,w
  8539  1708  00C1               	movwf	??___ftadd+1
  8540  1709  083F               	movf	___ftadd@f2+2,w
  8541  170A  00C2               	movwf	??___ftadd+2
  8542  170B  1003               	clrc
  8543  170C  0D41               	rlf	??___ftadd+1,w
  8544  170D  0D42               	rlf	??___ftadd+2,w
  8545  170E  00C3               	movwf	??___ftadd+3
  8546  170F  0843               	movf	??___ftadd+3,w
  8547  1710  00C5               	movwf	___ftadd@exp2
  8548  1711  0846               	movf	___ftadd@exp1,w
  8549  1712  1903               	btfsc	3,2
  8550  1713  2F20               	goto	i1l2292
  8551  1714  0845               	movf	___ftadd@exp2,w
  8552  1715  0246               	subwf	___ftadd@exp1,w
  8553  1716  1803               	skipnc
  8554  1717  2F27               	goto	i1l2296
  8555  1718  0346               	decf	___ftadd@exp1,w
  8556  1719  3AFF               	xorlw	255
  8557  171A  0745               	addwf	___ftadd@exp2,w
  8558  171B  00C0               	movwf	??___ftadd
  8559  171C  3019               	movlw	25
  8560  171D  0240               	subwf	??___ftadd,w
  8561  171E  1C03               	skipc
  8562  171F  2F27               	goto	i1l2296
  8563  1720                     i1l2292:	
  8564  1720  083D               	movf	___ftadd@f2,w
  8565  1721  00BA               	movwf	?___ftadd
  8566  1722  083E               	movf	___ftadd@f2+1,w
  8567  1723  00BB               	movwf	?___ftadd+1
  8568  1724  083F               	movf	___ftadd@f2+2,w
  8569  1725  00BC               	movwf	?___ftadd+2
  8570  1726  0008               	return
  8571  1727                     i1l2296:	
  8572  1727  0845               	movf	___ftadd@exp2,w
  8573  1728  1903               	btfsc	3,2
  8574  1729  0008               	return
  8575  172A  0846               	movf	___ftadd@exp1,w
  8576  172B  0245               	subwf	___ftadd@exp2,w
  8577  172C  1803               	skipnc
  8578  172D  2F36               	goto	i1l2302
  8579  172E  0345               	decf	___ftadd@exp2,w
  8580  172F  3AFF               	xorlw	255
  8581  1730  0746               	addwf	___ftadd@exp1,w
  8582  1731  00C0               	movwf	??___ftadd
  8583  1732  3019               	movlw	25
  8584  1733  0240               	subwf	??___ftadd,w
  8585  1734  1803               	btfsc	3,0
  8586  1735  0008               	return
  8587  1736                     i1l2302:	
  8588  1736  3006               	movlw	6
  8589  1737  00C0               	movwf	??___ftadd
  8590  1738  0840               	movf	??___ftadd,w
  8591  1739  00C4               	movwf	___ftadd@sign
  8592  173A  1BBC               	btfsc	___ftadd@f1+2,7
  8593  173B  17C4               	bsf	___ftadd@sign,7
  8594  173C  1BBF               	btfsc	___ftadd@f2+2,7
  8595  173D  1744               	bsf	___ftadd@sign,6
  8596  173E  17BB               	bsf	___ftadd@f1+1,7
  8597  173F  30FF               	movlw	255
  8598  1740  05BA               	andwf	___ftadd@f1,f
  8599  1741  30FF               	movlw	255
  8600  1742  05BB               	andwf	___ftadd@f1+1,f
  8601  1743  3000               	movlw	0
  8602  1744  05BC               	andwf	___ftadd@f1+2,f
  8603  1745  17BE               	bsf	___ftadd@f2+1,7
  8604  1746  30FF               	movlw	255
  8605  1747  05BD               	andwf	___ftadd@f2,f
  8606  1748  30FF               	movlw	255
  8607  1749  05BE               	andwf	___ftadd@f2+1,f
  8608  174A  3000               	movlw	0
  8609  174B  05BF               	andwf	___ftadd@f2+2,f
  8610  174C  0845               	movf	___ftadd@exp2,w
  8611  174D  0246               	subwf	___ftadd@exp1,w
  8612  174E  1803               	skipnc
  8613  174F  2F76               	goto	i1l2324
  8614  1750                     i1l2314:	
  8615  1750  3001               	movlw	1
  8616  1751                     u234_25:	
  8617  1751  1003               	clrc
  8618  1752  0DBD               	rlf	___ftadd@f2,f
  8619  1753  0DBE               	rlf	___ftadd@f2+1,f
  8620  1754  0DBF               	rlf	___ftadd@f2+2,f
  8621  1755  3EFF               	addlw	-1
  8622  1756  1D03               	skipz
  8623  1757  2F51               	goto	u234_25
  8624  1758  3001               	movlw	1
  8625  1759  02C5               	subwf	___ftadd@exp2,f
  8626  175A  0845               	movf	___ftadd@exp2,w
  8627  175B  0646               	xorwf	___ftadd@exp1,w
  8628  175C  1903               	skipnz
  8629  175D  2F71               	goto	i1l2322
  8630  175E  3001               	movlw	1
  8631  175F  02C4               	subwf	___ftadd@sign,f
  8632  1760  0844               	movf	___ftadd@sign,w
  8633  1761  3907               	andlw	7
  8634  1762  1903               	btfsc	3,2
  8635  1763  2F71               	goto	i1l2322
  8636  1764  2F50               	goto	i1l2314
  8637  1765                     i1l2320:	
  8638  1765  3001               	movlw	1
  8639  1766                     u237_25:	
  8640  1766  1003               	clrc
  8641  1767  0CBC               	rrf	___ftadd@f1+2,f
  8642  1768  0CBB               	rrf	___ftadd@f1+1,f
  8643  1769  0CBA               	rrf	___ftadd@f1,f
  8644  176A  3EFF               	addlw	-1
  8645  176B  1D03               	skipz
  8646  176C  2F66               	goto	u237_25
  8647  176D  3001               	movlw	1
  8648  176E  00C0               	movwf	??___ftadd
  8649  176F  0840               	movf	??___ftadd,w
  8650  1770  07C6               	addwf	___ftadd@exp1,f
  8651  1771                     i1l2322:	
  8652  1771  0846               	movf	___ftadd@exp1,w
  8653  1772  0645               	xorwf	___ftadd@exp2,w
  8654  1773  1903               	btfsc	3,2
  8655  1774  2F9F               	goto	i1l790
  8656  1775  2F65               	goto	i1l2320
  8657  1776                     i1l2324:	
  8658  1776  0846               	movf	___ftadd@exp1,w
  8659  1777  0245               	subwf	___ftadd@exp2,w
  8660  1778  1803               	skipnc
  8661  1779  2F9F               	goto	i1l790
  8662  177A                     i1l2326:	
  8663  177A  3001               	movlw	1
  8664  177B                     u240_25:	
  8665  177B  1003               	clrc
  8666  177C  0DBA               	rlf	___ftadd@f1,f
  8667  177D  0DBB               	rlf	___ftadd@f1+1,f
  8668  177E  0DBC               	rlf	___ftadd@f1+2,f
  8669  177F  3EFF               	addlw	-1
  8670  1780  1D03               	skipz
  8671  1781  2F7B               	goto	u240_25
  8672  1782  3001               	movlw	1
  8673  1783  02C6               	subwf	___ftadd@exp1,f
  8674  1784  0845               	movf	___ftadd@exp2,w
  8675  1785  0646               	xorwf	___ftadd@exp1,w
  8676  1786  1903               	skipnz
  8677  1787  2F9B               	goto	i1l2334
  8678  1788  3001               	movlw	1
  8679  1789  02C4               	subwf	___ftadd@sign,f
  8680  178A  0844               	movf	___ftadd@sign,w
  8681  178B  3907               	andlw	7
  8682  178C  1903               	btfsc	3,2
  8683  178D  2F9B               	goto	i1l2334
  8684  178E  2F7A               	goto	i1l2326
  8685  178F                     i1l2332:	
  8686  178F  3001               	movlw	1
  8687  1790                     u243_25:	
  8688  1790  1003               	clrc
  8689  1791  0CBF               	rrf	___ftadd@f2+2,f
  8690  1792  0CBE               	rrf	___ftadd@f2+1,f
  8691  1793  0CBD               	rrf	___ftadd@f2,f
  8692  1794  3EFF               	addlw	-1
  8693  1795  1D03               	skipz
  8694  1796  2F90               	goto	u243_25
  8695  1797  3001               	movlw	1
  8696  1798  00C0               	movwf	??___ftadd
  8697  1799  0840               	movf	??___ftadd,w
  8698  179A  07C5               	addwf	___ftadd@exp2,f
  8699  179B                     i1l2334:	
  8700  179B  0846               	movf	___ftadd@exp1,w
  8701  179C  0645               	xorwf	___ftadd@exp2,w
  8702  179D  1D03               	skipz
  8703  179E  2F8F               	goto	i1l2332
  8704  179F                     i1l790:	
  8705  179F  1FC4               	btfss	___ftadd@sign,7
  8706  17A0  2FB1               	goto	i1l2338
  8707  17A1  30FF               	movlw	255
  8708  17A2  06BA               	xorwf	___ftadd@f1,f
  8709  17A3  30FF               	movlw	255
  8710  17A4  06BB               	xorwf	___ftadd@f1+1,f
  8711  17A5  30FF               	movlw	255
  8712  17A6  06BC               	xorwf	___ftadd@f1+2,f
  8713  17A7  3001               	movlw	1
  8714  17A8  07BA               	addwf	___ftadd@f1,f
  8715  17A9  3000               	movlw	0
  8716  17AA  1803               	skipnc
  8717  17AB  3001               	movlw	1
  8718  17AC  07BB               	addwf	___ftadd@f1+1,f
  8719  17AD  3000               	movlw	0
  8720  17AE  1803               	skipnc
  8721  17AF  3001               	movlw	1
  8722  17B0  07BC               	addwf	___ftadd@f1+2,f
  8723  17B1                     i1l2338:	
  8724  17B1  1F44               	btfss	___ftadd@sign,6
  8725  17B2  2FC3               	goto	i1l2342
  8726  17B3  30FF               	movlw	255
  8727  17B4  06BD               	xorwf	___ftadd@f2,f
  8728  17B5  30FF               	movlw	255
  8729  17B6  06BE               	xorwf	___ftadd@f2+1,f
  8730  17B7  30FF               	movlw	255
  8731  17B8  06BF               	xorwf	___ftadd@f2+2,f
  8732  17B9  3001               	movlw	1
  8733  17BA  07BD               	addwf	___ftadd@f2,f
  8734  17BB  3000               	movlw	0
  8735  17BC  1803               	skipnc
  8736  17BD  3001               	movlw	1
  8737  17BE  07BE               	addwf	___ftadd@f2+1,f
  8738  17BF  3000               	movlw	0
  8739  17C0  1803               	skipnc
  8740  17C1  3001               	movlw	1
  8741  17C2  07BF               	addwf	___ftadd@f2+2,f
  8742  17C3                     i1l2342:	
  8743  17C3  01C4               	clrf	___ftadd@sign
  8744  17C4  083A               	movf	___ftadd@f1,w
  8745  17C5  07BD               	addwf	___ftadd@f2,f
  8746  17C6  083B               	movf	___ftadd@f1+1,w
  8747  17C7  1103               	clrz
  8748  17C8  1803               	skipnc
  8749  17C9  0A3B               	incf	___ftadd@f1+1,w
  8750  17CA  1D03               	btfss	3,2
  8751  17CB  07BE               	addwf	___ftadd@f2+1,f
  8752  17CC  083C               	movf	___ftadd@f1+2,w
  8753  17CD  1103               	clrz
  8754  17CE  1803               	skipnc
  8755  17CF  0A3C               	incf	___ftadd@f1+2,w
  8756  17D0  1D03               	btfss	3,2
  8757  17D1  07BF               	addwf	___ftadd@f2+2,f
  8758  17D2  1FBF               	btfss	___ftadd@f2+2,7
  8759  17D3  2FE6               	goto	i1l2352
  8760  17D4  30FF               	movlw	255
  8761  17D5  06BD               	xorwf	___ftadd@f2,f
  8762  17D6  30FF               	movlw	255
  8763  17D7  06BE               	xorwf	___ftadd@f2+1,f
  8764  17D8  30FF               	movlw	255
  8765  17D9  06BF               	xorwf	___ftadd@f2+2,f
  8766  17DA  3001               	movlw	1
  8767  17DB  07BD               	addwf	___ftadd@f2,f
  8768  17DC  3000               	movlw	0
  8769  17DD  1803               	skipnc
  8770  17DE  3001               	movlw	1
  8771  17DF  07BE               	addwf	___ftadd@f2+1,f
  8772  17E0  3000               	movlw	0
  8773  17E1  1803               	skipnc
  8774  17E2  3001               	movlw	1
  8775  17E3  07BF               	addwf	___ftadd@f2+2,f
  8776  17E4  01C4               	clrf	___ftadd@sign
  8777  17E5  0AC4               	incf	___ftadd@sign,f
  8778  17E6                     i1l2352:	
  8779  17E6  083D               	movf	___ftadd@f2,w
  8780  17E7  00F0               	movwf	___ftpack@arg
  8781  17E8  083E               	movf	___ftadd@f2+1,w
  8782  17E9  00F1               	movwf	___ftpack@arg+1
  8783  17EA  083F               	movf	___ftadd@f2+2,w
  8784  17EB  00F2               	movwf	___ftpack@arg+2
  8785  17EC  0846               	movf	___ftadd@exp1,w
  8786  17ED  00C0               	movwf	??___ftadd
  8787  17EE  0840               	movf	??___ftadd,w
  8788  17EF  00F3               	movwf	___ftpack@exp
  8789  17F0  0844               	movf	___ftadd@sign,w
  8790  17F1  00C1               	movwf	??___ftadd+1
  8791  17F2  0841               	movf	??___ftadd+1,w
  8792  17F3  00F4               	movwf	___ftpack@sign
  8793  17F4  160A  118A  2453   	fcall	___ftpack
  8794  17F7  0870               	movf	?___ftpack,w
  8795  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8796  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8797  17FA  00BA               	movwf	?___ftadd
  8798  17FB  0871               	movf	?___ftpack+1,w
  8799  17FC  00BB               	movwf	?___ftadd+1
  8800  17FD  0872               	movf	?___ftpack+2,w
  8801  17FE  00BC               	movwf	?___ftadd+2
  8802  17FF  0008               	return
  8803  1800                     __end_of___ftadd:	
  8804                           
  8805                           	psect	text36
  8806  115F                     __ptext36:	
  8807 ;; *************** function _max_val *****************
  8808 ;; Defined at:
  8809 ;;		line 118 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  a               3    0[BANK0 ] float 
  8812 ;;  b               3    3[BANK0 ] float 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  3    0[BANK0 ] float 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0, pclath, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8824 ;;      Params:         0       6       0       0       0
  8825 ;;      Locals:         0       0       0       0       0
  8826 ;;      Temps:          0       0       0       0       0
  8827 ;;      Totals:         0       6       0       0       0
  8828 ;;Total ram usage:        6 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:    1
  8831 ;; This function calls:
  8832 ;;		___ftge
  8833 ;; This function is called by:
  8834 ;;		_Fuzzy
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           
  8839                           ;psect for function _max_val
  8840  115F                     _max_val:	
  8841                           
  8842                           ;main.c: 120: if (a > b)
  8843                           
  8844                           ;incstack = 0
  8845                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8846  115F  1283               	bcf	3,5	;RP0=0, select bank0
  8847  1160  1303               	bcf	3,6	;RP1=0, select bank0
  8848  1161  0823               	movf	max_val@b,w
  8849  1162  00F0               	movwf	___ftge@ff1
  8850  1163  0824               	movf	max_val@b+1,w
  8851  1164  00F1               	movwf	___ftge@ff1+1
  8852  1165  0825               	movf	max_val@b+2,w
  8853  1166  00F2               	movwf	___ftge@ff1+2
  8854  1167  0820               	movf	max_val@a,w
  8855  1168  00F3               	movwf	___ftge@ff2
  8856  1169  0821               	movf	max_val@a+1,w
  8857  116A  00F4               	movwf	___ftge@ff2+1
  8858  116B  0822               	movf	max_val@a+2,w
  8859  116C  00F5               	movwf	___ftge@ff2+2
  8860  116D  160A  118A  23F6  160A  118A  	fcall	___ftge
  8861  1172  1C03               	btfss	3,0
  8862  1173  0008               	return
  8863                           
  8864                           ;main.c: 122: else
  8865                           ;main.c: 123: return b;
  8866                           
  8867                           ;main.c: 121: return a;
  8868  1174  1283               	bcf	3,5	;RP0=0, select bank0
  8869  1175  1303               	bcf	3,6	;RP1=0, select bank0
  8870  1176  0823               	movf	max_val@b,w
  8871  1177  00A0               	movwf	?_max_val
  8872  1178  0824               	movf	max_val@b+1,w
  8873  1179  00A1               	movwf	?_max_val+1
  8874  117A  0825               	movf	max_val@b+2,w
  8875  117B  00A2               	movwf	?_max_val+2
  8876  117C  0008               	return
  8877  117D                     __end_of_max_val:	
  8878                           
  8879                           	psect	text37
  8880  13F6                     __ptext37:	
  8881 ;; *************** function ___ftge *****************
  8882 ;; Defined at:
  8883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  ff1             3    0[COMMON] float 
  8886 ;;  ff2             3    3[COMMON] float 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;		None
  8889 ;; Return value:  Size  Location     Type
  8890 ;;		None               void
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8898 ;;      Params:         6       0       0       0       0
  8899 ;;      Locals:         0       0       0       0       0
  8900 ;;      Temps:          6       0       0       0       0
  8901 ;;      Totals:        12       0       0       0       0
  8902 ;;Total ram usage:       12 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_trimf
  8908 ;;		_trapmf
  8909 ;;		_max_val
  8910 ;;		_Fuzzy
  8911 ;;		_min_val
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function ___ftge
  8917  13F6                     ___ftge:	
  8918                           
  8919                           ;incstack = 0
  8920                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8921  13F6  1FF2               	btfss	___ftge@ff1+2,7
  8922  13F7  2C1D               	goto	i1l2402
  8923  13F8  3000               	movlw	0
  8924  13F9  00F6               	movwf	??___ftge
  8925  13FA  3000               	movlw	0
  8926  13FB  00F7               	movwf	??___ftge+1
  8927  13FC  3080               	movlw	128
  8928  13FD  00F8               	movwf	??___ftge+2
  8929  13FE  0970               	comf	___ftge@ff1,w
  8930  13FF  00F9               	movwf	??___ftge+3
  8931  1400  0971               	comf	___ftge@ff1+1,w
  8932  1401  00FA               	movwf	??___ftge+4
  8933  1402  0972               	comf	___ftge@ff1+2,w
  8934  1403  00FB               	movwf	??___ftge+5
  8935  1404  0AF9               	incf	??___ftge+3,f
  8936  1405  1903               	skipnz
  8937  1406  0AFA               	incf	??___ftge+4,f
  8938  1407  1903               	skipnz
  8939  1408  0AFB               	incf	??___ftge+5,f
  8940  1409  0879               	movf	??___ftge+3,w
  8941  140A  07F6               	addwf	??___ftge,f
  8942  140B  087A               	movf	??___ftge+4,w
  8943  140C  1803               	skipnc
  8944  140D  0F7A               	incfsz	??___ftge+4,w
  8945  140E  2C10               	goto	u258_21
  8946  140F  2C11               	goto	u258_22
  8947  1410                     u258_21:	
  8948  1410  07F7               	addwf	??___ftge+1,f
  8949  1411                     u258_22:	
  8950  1411  087B               	movf	??___ftge+5,w
  8951  1412  1803               	skipnc
  8952  1413  0F7B               	incfsz	??___ftge+5,w
  8953  1414  2C16               	goto	u258_23
  8954  1415  2C17               	goto	u258_24
  8955  1416                     u258_23:	
  8956  1416  07F8               	addwf	??___ftge+2,f
  8957  1417                     u258_24:	
  8958  1417  0876               	movf	??___ftge,w
  8959  1418  00F0               	movwf	___ftge@ff1
  8960  1419  0877               	movf	??___ftge+1,w
  8961  141A  00F1               	movwf	___ftge@ff1+1
  8962  141B  0878               	movf	??___ftge+2,w
  8963  141C  00F2               	movwf	___ftge@ff1+2
  8964  141D                     i1l2402:	
  8965  141D  1FF5               	btfss	___ftge@ff2+2,7
  8966  141E  2C44               	goto	i1l2406
  8967  141F  3000               	movlw	0
  8968  1420  00F6               	movwf	??___ftge
  8969  1421  3000               	movlw	0
  8970  1422  00F7               	movwf	??___ftge+1
  8971  1423  3080               	movlw	128
  8972  1424  00F8               	movwf	??___ftge+2
  8973  1425  0973               	comf	___ftge@ff2,w
  8974  1426  00F9               	movwf	??___ftge+3
  8975  1427  0974               	comf	___ftge@ff2+1,w
  8976  1428  00FA               	movwf	??___ftge+4
  8977  1429  0975               	comf	___ftge@ff2+2,w
  8978  142A  00FB               	movwf	??___ftge+5
  8979  142B  0AF9               	incf	??___ftge+3,f
  8980  142C  1903               	skipnz
  8981  142D  0AFA               	incf	??___ftge+4,f
  8982  142E  1903               	skipnz
  8983  142F  0AFB               	incf	??___ftge+5,f
  8984  1430  0879               	movf	??___ftge+3,w
  8985  1431  07F6               	addwf	??___ftge,f
  8986  1432  087A               	movf	??___ftge+4,w
  8987  1433  1803               	skipnc
  8988  1434  0F7A               	incfsz	??___ftge+4,w
  8989  1435  2C37               	goto	u260_21
  8990  1436  2C38               	goto	u260_22
  8991  1437                     u260_21:	
  8992  1437  07F7               	addwf	??___ftge+1,f
  8993  1438                     u260_22:	
  8994  1438  087B               	movf	??___ftge+5,w
  8995  1439  1803               	skipnc
  8996  143A  0F7B               	incfsz	??___ftge+5,w
  8997  143B  2C3D               	goto	u260_23
  8998  143C  2C3E               	goto	u260_24
  8999  143D                     u260_23:	
  9000  143D  07F8               	addwf	??___ftge+2,f
  9001  143E                     u260_24:	
  9002  143E  0876               	movf	??___ftge,w
  9003  143F  00F3               	movwf	___ftge@ff2
  9004  1440  0877               	movf	??___ftge+1,w
  9005  1441  00F4               	movwf	___ftge@ff2+1
  9006  1442  0878               	movf	??___ftge+2,w
  9007  1443  00F5               	movwf	___ftge@ff2+2
  9008  1444                     i1l2406:	
  9009  1444  3080               	movlw	128
  9010  1445  06F2               	xorwf	___ftge@ff1+2,f
  9011  1446  3080               	movlw	128
  9012  1447  06F5               	xorwf	___ftge@ff2+2,f
  9013  1448  0875               	movf	___ftge@ff2+2,w
  9014  1449  0272               	subwf	___ftge@ff1+2,w
  9015  144A  1D03               	skipz
  9016  144B  0008               	return
  9017  144C  0874               	movf	___ftge@ff2+1,w
  9018  144D  0271               	subwf	___ftge@ff1+1,w
  9019  144E  1D03               	skipz
  9020  144F  0008               	return
  9021  1450  0873               	movf	___ftge@ff2,w
  9022  1451  0270               	subwf	___ftge@ff1,w
  9023  1452  0008               	return
  9024  1453                     __end_of___ftge:	
  9025                           
  9026                           	psect	text38
  9027  10E7                     __ptext38:	
  9028 ;; *************** function ___lwtoft *****************
  9029 ;; Defined at:
  9030 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  c               2    8[COMMON] unsigned int 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  3    8[COMMON] float 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0, pclath, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9044 ;;      Params:         3       0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0
  9046 ;;      Temps:          1       0       0       0       0
  9047 ;;      Totals:         4       0       0       0       0
  9048 ;;Total ram usage:        4 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:    1
  9051 ;; This function calls:
  9052 ;;		___ftpack
  9053 ;; This function is called by:
  9054 ;;		_Fuzzy
  9055 ;;		_ISR
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function ___lwtoft
  9061  10E7                     ___lwtoft:	
  9062                           
  9063                           ;incstack = 0
  9064                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9065  10E7  0878               	movf	___lwtoft@c,w
  9066  10E8  00F0               	movwf	___ftpack@arg
  9067  10E9  0879               	movf	___lwtoft@c+1,w
  9068  10EA  00F1               	movwf	___ftpack@arg+1
  9069  10EB  01F2               	clrf	___ftpack@arg+2
  9070  10EC  308E               	movlw	142
  9071  10ED  00FB               	movwf	??___lwtoft
  9072  10EE  087B               	movf	??___lwtoft,w
  9073  10EF  00F3               	movwf	___ftpack@exp
  9074  10F0  01F4               	clrf	___ftpack@sign
  9075  10F1  160A  118A  2453   	fcall	___ftpack
  9076  10F4  0870               	movf	?___ftpack,w
  9077  10F5  00F8               	movwf	?___lwtoft
  9078  10F6  0871               	movf	?___ftpack+1,w
  9079  10F7  00F9               	movwf	?___lwtoft+1
  9080  10F8  0872               	movf	?___ftpack+2,w
  9081  10F9  00FA               	movwf	?___lwtoft+2
  9082  10FA  0008               	return
  9083  10FB                     __end_of___lwtoft:	
  9084                           
  9085                           	psect	text39
  9086  1526                     __ptext39:	
  9087 ;; *************** function ___fttol *****************
  9088 ;; Defined at:
  9089 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  f1              3    0[COMMON] float 
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;  lval            4    9[COMMON] unsigned long 
  9094 ;;  exp1            1   13[COMMON] unsigned char 
  9095 ;;  sign1           1    8[COMMON] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  4    0[COMMON] long 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9105 ;;      Params:         4       0       0       0       0
  9106 ;;      Locals:         6       0       0       0       0
  9107 ;;      Temps:          4       0       0       0       0
  9108 ;;      Totals:        14       0       0       0       0
  9109 ;;Total ram usage:       14 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_Fuzzy
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           
  9119                           ;psect for function ___fttol
  9120  1526                     ___fttol:	
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9124  1526  0870               	movf	___fttol@f1,w
  9125  1527  00F4               	movwf	??___fttol
  9126  1528  0871               	movf	___fttol@f1+1,w
  9127  1529  00F5               	movwf	??___fttol+1
  9128  152A  0872               	movf	___fttol@f1+2,w
  9129  152B  00F6               	movwf	??___fttol+2
  9130  152C  1003               	clrc
  9131  152D  0D75               	rlf	??___fttol+1,w
  9132  152E  0D76               	rlf	??___fttol+2,w
  9133  152F  00F7               	movwf	??___fttol+3
  9134  1530  0877               	movf	??___fttol+3,w
  9135  1531  00FD               	movwf	___fttol@exp1
  9136  1532  08FD               	movf	___fttol@exp1,f
  9137  1533  1D03               	skipz
  9138  1534  2D3E               	goto	i1l2634
  9139  1535  3000               	movlw	0
  9140  1536  00F3               	movwf	?___fttol+3
  9141  1537  3000               	movlw	0
  9142  1538  00F2               	movwf	?___fttol+2
  9143  1539  3000               	movlw	0
  9144  153A  00F1               	movwf	?___fttol+1
  9145  153B  3000               	movlw	0
  9146  153C  00F0               	movwf	?___fttol
  9147  153D  0008               	return
  9148  153E                     i1l2634:	
  9149  153E  0870               	movf	___fttol@f1,w
  9150  153F  00F4               	movwf	??___fttol
  9151  1540  0871               	movf	___fttol@f1+1,w
  9152  1541  00F5               	movwf	??___fttol+1
  9153  1542  0872               	movf	___fttol@f1+2,w
  9154  1543  00F6               	movwf	??___fttol+2
  9155  1544  3017               	movlw	23
  9156  1545                     u311_25:	
  9157  1545  1003               	clrc
  9158  1546  0CF6               	rrf	??___fttol+2,f
  9159  1547  0CF5               	rrf	??___fttol+1,f
  9160  1548  0CF4               	rrf	??___fttol,f
  9161  1549  3EFF               	addlw	-1
  9162  154A  1D03               	skipz
  9163  154B  2D45               	goto	u311_25
  9164  154C  0874               	movf	??___fttol,w
  9165  154D  00F7               	movwf	??___fttol+3
  9166  154E  0877               	movf	??___fttol+3,w
  9167  154F  00F8               	movwf	___fttol@sign1
  9168  1550  17F1               	bsf	___fttol@f1+1,7
  9169  1551  30FF               	movlw	255
  9170  1552  05F0               	andwf	___fttol@f1,f
  9171  1553  30FF               	movlw	255
  9172  1554  05F1               	andwf	___fttol@f1+1,f
  9173  1555  3000               	movlw	0
  9174  1556  05F2               	andwf	___fttol@f1+2,f
  9175  1557  0870               	movf	___fttol@f1,w
  9176  1558  00F9               	movwf	___fttol@lval
  9177  1559  0871               	movf	___fttol@f1+1,w
  9178  155A  00FA               	movwf	___fttol@lval+1
  9179  155B  0872               	movf	___fttol@f1+2,w
  9180  155C  00FB               	movwf	___fttol@lval+2
  9181  155D  01FC               	clrf	___fttol@lval+3
  9182  155E  308E               	movlw	142
  9183  155F  02FD               	subwf	___fttol@exp1,f
  9184  1560  1FFD               	btfss	___fttol@exp1,7
  9185  1561  2D80               	goto	i1l2654
  9186  1562  087D               	movf	___fttol@exp1,w
  9187  1563  3A80               	xorlw	128
  9188  1564  3E8F               	addlw	143
  9189  1565  1803               	skipnc
  9190  1566  2D70               	goto	i1l2652
  9191  1567  3000               	movlw	0
  9192  1568  00F3               	movwf	?___fttol+3
  9193  1569  3000               	movlw	0
  9194  156A  00F2               	movwf	?___fttol+2
  9195  156B  3000               	movlw	0
  9196  156C  00F1               	movwf	?___fttol+1
  9197  156D  3000               	movlw	0
  9198  156E  00F0               	movwf	?___fttol
  9199  156F  0008               	return
  9200  1570                     i1l2652:	
  9201  1570  3001               	movlw	1
  9202  1571                     u314_25:	
  9203  1571  1003               	clrc
  9204  1572  0CFC               	rrf	___fttol@lval+3,f
  9205  1573  0CFB               	rrf	___fttol@lval+2,f
  9206  1574  0CFA               	rrf	___fttol@lval+1,f
  9207  1575  0CF9               	rrf	___fttol@lval,f
  9208  1576  3EFF               	addlw	-1
  9209  1577  1D03               	skipz
  9210  1578  2D71               	goto	u314_25
  9211  1579  3001               	movlw	1
  9212  157A  00F4               	movwf	??___fttol
  9213  157B  0874               	movf	??___fttol,w
  9214  157C  07FD               	addwf	___fttol@exp1,f
  9215  157D  1903               	btfsc	3,2
  9216  157E  2D9B               	goto	i1l2664
  9217  157F  2D70               	goto	i1l2652
  9218  1580                     i1l2654:	
  9219  1580  3018               	movlw	24
  9220  1581  027D               	subwf	___fttol@exp1,w
  9221  1582  1C03               	skipc
  9222  1583  2D98               	goto	i1l2662
  9223  1584  3000               	movlw	0
  9224  1585  00F3               	movwf	?___fttol+3
  9225  1586  3000               	movlw	0
  9226  1587  00F2               	movwf	?___fttol+2
  9227  1588  3000               	movlw	0
  9228  1589  00F1               	movwf	?___fttol+1
  9229  158A  3000               	movlw	0
  9230  158B  00F0               	movwf	?___fttol
  9231  158C  0008               	return
  9232  158D                     i1l2660:	
  9233  158D  3001               	movlw	1
  9234  158E  00F4               	movwf	??___fttol
  9235  158F                     u317_25:	
  9236  158F  1003               	clrc
  9237  1590  0DF9               	rlf	___fttol@lval,f
  9238  1591  0DFA               	rlf	___fttol@lval+1,f
  9239  1592  0DFB               	rlf	___fttol@lval+2,f
  9240  1593  0DFC               	rlf	___fttol@lval+3,f
  9241  1594  0BF4               	decfsz	??___fttol,f
  9242  1595  2D8F               	goto	u317_25
  9243  1596  3001               	movlw	1
  9244  1597  02FD               	subwf	___fttol@exp1,f
  9245  1598                     i1l2662:	
  9246  1598  08FD               	movf	___fttol@exp1,f
  9247  1599  1D03               	skipz
  9248  159A  2D8D               	goto	i1l2660
  9249  159B                     i1l2664:	
  9250  159B  0878               	movf	___fttol@sign1,w
  9251  159C  1903               	btfsc	3,2
  9252  159D  2DA9               	goto	i1l2668
  9253  159E  09F9               	comf	___fttol@lval,f
  9254  159F  09FA               	comf	___fttol@lval+1,f
  9255  15A0  09FB               	comf	___fttol@lval+2,f
  9256  15A1  09FC               	comf	___fttol@lval+3,f
  9257  15A2  0AF9               	incf	___fttol@lval,f
  9258  15A3  1903               	skipnz
  9259  15A4  0AFA               	incf	___fttol@lval+1,f
  9260  15A5  1903               	skipnz
  9261  15A6  0AFB               	incf	___fttol@lval+2,f
  9262  15A7  1903               	skipnz
  9263  15A8  0AFC               	incf	___fttol@lval+3,f
  9264  15A9                     i1l2668:	
  9265  15A9  087C               	movf	___fttol@lval+3,w
  9266  15AA  00F3               	movwf	?___fttol+3
  9267  15AB  087B               	movf	___fttol@lval+2,w
  9268  15AC  00F2               	movwf	?___fttol+2
  9269  15AD  087A               	movf	___fttol@lval+1,w
  9270  15AE  00F1               	movwf	?___fttol+1
  9271  15AF  0879               	movf	___fttol@lval,w
  9272  15B0  00F0               	movwf	?___fttol
  9273  15B1  0008               	return
  9274  15B2                     __end_of___fttol:	
  9275                           
  9276                           	psect	text40
  9277  072B                     __ptext40:	
  9278 ;; *************** function ___ftmul *****************
  9279 ;; Defined at:
  9280 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  f1              3   10[BANK0 ] float 
  9283 ;;  f2              3   13[BANK0 ] float 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  9286 ;;  sign            1   25[BANK0 ] unsigned char 
  9287 ;;  cntr            1   24[BANK0 ] unsigned char 
  9288 ;;  exp             1   20[BANK0 ] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  3   10[BANK0 ] float 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0, pclath, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9298 ;;      Params:         0       6       0       0       0
  9299 ;;      Locals:         0       6       0       0       0
  9300 ;;      Temps:          0       4       0       0       0
  9301 ;;      Totals:         0      16       0       0       0
  9302 ;;Total ram usage:       16 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    1
  9305 ;; This function calls:
  9306 ;;		___ftpack
  9307 ;; This function is called by:
  9308 ;;		_Fuzzy
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           
  9313                           ;psect for function ___ftmul
  9314  072B                     ___ftmul:	
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9318  072B  1283               	bcf	3,5	;RP0=0, select bank0
  9319  072C  1303               	bcf	3,6	;RP1=0, select bank0
  9320  072D  082A               	movf	___ftmul@f1,w
  9321  072E  00B0               	movwf	??___ftmul
  9322  072F  082B               	movf	___ftmul@f1+1,w
  9323  0730  00B1               	movwf	??___ftmul+1
  9324  0731  082C               	movf	___ftmul@f1+2,w
  9325  0732  00B2               	movwf	??___ftmul+2
  9326  0733  1003               	clrc
  9327  0734  0D31               	rlf	??___ftmul+1,w
  9328  0735  0D32               	rlf	??___ftmul+2,w
  9329  0736  00B3               	movwf	??___ftmul+3
  9330  0737  0833               	movf	??___ftmul+3,w
  9331  0738  00B4               	movwf	___ftmul@exp
  9332  0739  08B4               	movf	___ftmul@exp,f
  9333  073A  1D03               	skipz
  9334  073B  2F43               	goto	i1l2584
  9335  073C  3000               	movlw	0
  9336  073D  00AA               	movwf	?___ftmul
  9337  073E  3000               	movlw	0
  9338  073F  00AB               	movwf	?___ftmul+1
  9339  0740  3000               	movlw	0
  9340  0741  00AC               	movwf	?___ftmul+2
  9341  0742  0008               	return
  9342  0743                     i1l2584:	
  9343  0743  082D               	movf	___ftmul@f2,w
  9344  0744  00B0               	movwf	??___ftmul
  9345  0745  082E               	movf	___ftmul@f2+1,w
  9346  0746  00B1               	movwf	??___ftmul+1
  9347  0747  082F               	movf	___ftmul@f2+2,w
  9348  0748  00B2               	movwf	??___ftmul+2
  9349  0749  1003               	clrc
  9350  074A  0D31               	rlf	??___ftmul+1,w
  9351  074B  0D32               	rlf	??___ftmul+2,w
  9352  074C  00B3               	movwf	??___ftmul+3
  9353  074D  0833               	movf	??___ftmul+3,w
  9354  074E  00B9               	movwf	___ftmul@sign
  9355  074F  08B9               	movf	___ftmul@sign,f
  9356  0750  1D03               	skipz
  9357  0751  2F59               	goto	i1l2590
  9358  0752  3000               	movlw	0
  9359  0753  00AA               	movwf	?___ftmul
  9360  0754  3000               	movlw	0
  9361  0755  00AB               	movwf	?___ftmul+1
  9362  0756  3000               	movlw	0
  9363  0757  00AC               	movwf	?___ftmul+2
  9364  0758  0008               	return
  9365  0759                     i1l2590:	
  9366  0759  0839               	movf	___ftmul@sign,w
  9367  075A  3E7B               	addlw	123
  9368  075B  00B0               	movwf	??___ftmul
  9369  075C  0830               	movf	??___ftmul,w
  9370  075D  07B4               	addwf	___ftmul@exp,f
  9371  075E  082A               	movf	___ftmul@f1,w
  9372  075F  00B0               	movwf	??___ftmul
  9373  0760  082B               	movf	___ftmul@f1+1,w
  9374  0761  00B1               	movwf	??___ftmul+1
  9375  0762  082C               	movf	___ftmul@f1+2,w
  9376  0763  00B2               	movwf	??___ftmul+2
  9377  0764  3010               	movlw	16
  9378  0765                     u298_25:	
  9379  0765  1003               	clrc
  9380  0766  0CB2               	rrf	??___ftmul+2,f
  9381  0767  0CB1               	rrf	??___ftmul+1,f
  9382  0768  0CB0               	rrf	??___ftmul,f
  9383  0769  3EFF               	addlw	-1
  9384  076A  1D03               	skipz
  9385  076B  2F65               	goto	u298_25
  9386  076C  0830               	movf	??___ftmul,w
  9387  076D  00B3               	movwf	??___ftmul+3
  9388  076E  0833               	movf	??___ftmul+3,w
  9389  076F  00B9               	movwf	___ftmul@sign
  9390  0770  082D               	movf	___ftmul@f2,w
  9391  0771  00B0               	movwf	??___ftmul
  9392  0772  082E               	movf	___ftmul@f2+1,w
  9393  0773  00B1               	movwf	??___ftmul+1
  9394  0774  082F               	movf	___ftmul@f2+2,w
  9395  0775  00B2               	movwf	??___ftmul+2
  9396  0776  3010               	movlw	16
  9397  0777                     u299_25:	
  9398  0777  1003               	clrc
  9399  0778  0CB2               	rrf	??___ftmul+2,f
  9400  0779  0CB1               	rrf	??___ftmul+1,f
  9401  077A  0CB0               	rrf	??___ftmul,f
  9402  077B  3EFF               	addlw	-1
  9403  077C  1D03               	skipz
  9404  077D  2F77               	goto	u299_25
  9405  077E  0830               	movf	??___ftmul,w
  9406  077F  00B3               	movwf	??___ftmul+3
  9407  0780  0833               	movf	??___ftmul+3,w
  9408  0781  06B9               	xorwf	___ftmul@sign,f
  9409  0782  3080               	movlw	128
  9410  0783  00B0               	movwf	??___ftmul
  9411  0784  0830               	movf	??___ftmul,w
  9412  0785  05B9               	andwf	___ftmul@sign,f
  9413  0786  17AB               	bsf	___ftmul@f1+1,7
  9414  0787  17AE               	bsf	___ftmul@f2+1,7
  9415  0788  30FF               	movlw	255
  9416  0789  05AD               	andwf	___ftmul@f2,f
  9417  078A  30FF               	movlw	255
  9418  078B  05AE               	andwf	___ftmul@f2+1,f
  9419  078C  3000               	movlw	0
  9420  078D  05AF               	andwf	___ftmul@f2+2,f
  9421  078E  3000               	movlw	0
  9422  078F  00B5               	movwf	___ftmul@f3_as_product
  9423  0790  3000               	movlw	0
  9424  0791  00B6               	movwf	___ftmul@f3_as_product+1
  9425  0792  3000               	movlw	0
  9426  0793  00B7               	movwf	___ftmul@f3_as_product+2
  9427  0794  3007               	movlw	7
  9428  0795  00B0               	movwf	??___ftmul
  9429  0796  0830               	movf	??___ftmul,w
  9430  0797  00B8               	movwf	___ftmul@cntr
  9431  0798                     i1l2602:	
  9432  0798  1C2A               	btfss	___ftmul@f1,0
  9433  0799  2FA8               	goto	i1l2606
  9434  079A  082D               	movf	___ftmul@f2,w
  9435  079B  07B5               	addwf	___ftmul@f3_as_product,f
  9436  079C  082E               	movf	___ftmul@f2+1,w
  9437  079D  1103               	clrz
  9438  079E  1803               	skipnc
  9439  079F  0A2E               	incf	___ftmul@f2+1,w
  9440  07A0  1D03               	btfss	3,2
  9441  07A1  07B6               	addwf	___ftmul@f3_as_product+1,f
  9442  07A2  082F               	movf	___ftmul@f2+2,w
  9443  07A3  1103               	clrz
  9444  07A4  1803               	skipnc
  9445  07A5  0A2F               	incf	___ftmul@f2+2,w
  9446  07A6  1D03               	btfss	3,2
  9447  07A7  07B7               	addwf	___ftmul@f3_as_product+2,f
  9448  07A8                     i1l2606:	
  9449  07A8  3001               	movlw	1
  9450  07A9                     u302_25:	
  9451  07A9  1003               	clrc
  9452  07AA  0CAC               	rrf	___ftmul@f1+2,f
  9453  07AB  0CAB               	rrf	___ftmul@f1+1,f
  9454  07AC  0CAA               	rrf	___ftmul@f1,f
  9455  07AD  3EFF               	addlw	-1
  9456  07AE  1D03               	skipz
  9457  07AF  2FA9               	goto	u302_25
  9458  07B0  3001               	movlw	1
  9459  07B1                     u303_25:	
  9460  07B1  1003               	clrc
  9461  07B2  0DAD               	rlf	___ftmul@f2,f
  9462  07B3  0DAE               	rlf	___ftmul@f2+1,f
  9463  07B4  0DAF               	rlf	___ftmul@f2+2,f
  9464  07B5  3EFF               	addlw	-1
  9465  07B6  1D03               	skipz
  9466  07B7  2FB1               	goto	u303_25
  9467  07B8  3001               	movlw	1
  9468  07B9  02B8               	subwf	___ftmul@cntr,f
  9469  07BA  1D03               	btfss	3,2
  9470  07BB  2F98               	goto	i1l2602
  9471  07BC  3009               	movlw	9
  9472  07BD  00B0               	movwf	??___ftmul
  9473  07BE  0830               	movf	??___ftmul,w
  9474  07BF  00B8               	movwf	___ftmul@cntr
  9475  07C0                     i1l2614:	
  9476  07C0  1C2A               	btfss	___ftmul@f1,0
  9477  07C1  2FD0               	goto	i1l2618
  9478  07C2  082D               	movf	___ftmul@f2,w
  9479  07C3  07B5               	addwf	___ftmul@f3_as_product,f
  9480  07C4  082E               	movf	___ftmul@f2+1,w
  9481  07C5  1103               	clrz
  9482  07C6  1803               	skipnc
  9483  07C7  0A2E               	incf	___ftmul@f2+1,w
  9484  07C8  1D03               	btfss	3,2
  9485  07C9  07B6               	addwf	___ftmul@f3_as_product+1,f
  9486  07CA  082F               	movf	___ftmul@f2+2,w
  9487  07CB  1103               	clrz
  9488  07CC  1803               	skipnc
  9489  07CD  0A2F               	incf	___ftmul@f2+2,w
  9490  07CE  1D03               	btfss	3,2
  9491  07CF  07B7               	addwf	___ftmul@f3_as_product+2,f
  9492  07D0                     i1l2618:	
  9493  07D0  3001               	movlw	1
  9494  07D1                     u307_25:	
  9495  07D1  1003               	clrc
  9496  07D2  0CAC               	rrf	___ftmul@f1+2,f
  9497  07D3  0CAB               	rrf	___ftmul@f1+1,f
  9498  07D4  0CAA               	rrf	___ftmul@f1,f
  9499  07D5  3EFF               	addlw	-1
  9500  07D6  1D03               	skipz
  9501  07D7  2FD1               	goto	u307_25
  9502  07D8  3001               	movlw	1
  9503  07D9                     u308_25:	
  9504  07D9  1003               	clrc
  9505  07DA  0CB7               	rrf	___ftmul@f3_as_product+2,f
  9506  07DB  0CB6               	rrf	___ftmul@f3_as_product+1,f
  9507  07DC  0CB5               	rrf	___ftmul@f3_as_product,f
  9508  07DD  3EFF               	addlw	-1
  9509  07DE  1D03               	skipz
  9510  07DF  2FD9               	goto	u308_25
  9511  07E0  3001               	movlw	1
  9512  07E1  02B8               	subwf	___ftmul@cntr,f
  9513  07E2  1D03               	btfss	3,2
  9514  07E3  2FC0               	goto	i1l2614
  9515  07E4  0835               	movf	___ftmul@f3_as_product,w
  9516  07E5  00F0               	movwf	___ftpack@arg
  9517  07E6  0836               	movf	___ftmul@f3_as_product+1,w
  9518  07E7  00F1               	movwf	___ftpack@arg+1
  9519  07E8  0837               	movf	___ftmul@f3_as_product+2,w
  9520  07E9  00F2               	movwf	___ftpack@arg+2
  9521  07EA  0834               	movf	___ftmul@exp,w
  9522  07EB  00B0               	movwf	??___ftmul
  9523  07EC  0830               	movf	??___ftmul,w
  9524  07ED  00F3               	movwf	___ftpack@exp
  9525  07EE  0839               	movf	___ftmul@sign,w
  9526  07EF  00B1               	movwf	??___ftmul+1
  9527  07F0  0831               	movf	??___ftmul+1,w
  9528  07F1  00F4               	movwf	___ftpack@sign
  9529  07F2  160A  118A  2453   	fcall	___ftpack
  9530  07F5  0870               	movf	?___ftpack,w
  9531  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  9532  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  9533  07F8  00AA               	movwf	?___ftmul
  9534  07F9  0871               	movf	?___ftpack+1,w
  9535  07FA  00AB               	movwf	?___ftmul+1
  9536  07FB  0872               	movf	?___ftpack+2,w
  9537  07FC  00AC               	movwf	?___ftmul+2
  9538  07FD  0008               	return
  9539  07FE                     __end_of___ftmul:	
  9540                           
  9541                           	psect	text41
  9542  1453                     __ptext41:	
  9543 ;; *************** function ___ftpack *****************
  9544 ;; Defined at:
  9545 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  arg             3    0[COMMON] unsigned um
  9548 ;;  exp             1    3[COMMON] unsigned char 
  9549 ;;  sign            1    4[COMMON] unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;		None
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  3    0[COMMON] float 
  9554 ;; Registers used:
  9555 ;;		wreg, status,2, status,0
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9561 ;;      Params:         5       0       0       0       0
  9562 ;;      Locals:         0       0       0       0       0
  9563 ;;      Temps:          3       0       0       0       0
  9564 ;;      Totals:         8       0       0       0       0
  9565 ;;Total ram usage:        8 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		___ftadd
  9571 ;;		___ftdiv
  9572 ;;		___ftmul
  9573 ;;		___lwtoft
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function ___ftpack
  9579  1453                     ___ftpack:	
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9583  1453  0873               	movf	___ftpack@exp,w
  9584  1454  1903               	btfsc	3,2
  9585  1455  2C5B               	goto	i1l2258
  9586  1456  0872               	movf	___ftpack@arg+2,w
  9587  1457  0471               	iorwf	___ftpack@arg+1,w
  9588  1458  0470               	iorwf	___ftpack@arg,w
  9589  1459  1D03               	skipz
  9590  145A  2C6E               	goto	i1l2264
  9591  145B                     i1l2258:	
  9592  145B  3000               	movlw	0
  9593  145C  00F0               	movwf	?___ftpack
  9594  145D  3000               	movlw	0
  9595  145E  00F1               	movwf	?___ftpack+1
  9596  145F  3000               	movlw	0
  9597  1460  00F2               	movwf	?___ftpack+2
  9598  1461  0008               	return
  9599  1462                     i1l2262:	
  9600  1462  3001               	movlw	1
  9601  1463  00F5               	movwf	??___ftpack
  9602  1464  0875               	movf	??___ftpack,w
  9603  1465  07F3               	addwf	___ftpack@exp,f
  9604  1466  3001               	movlw	1
  9605  1467                     u216_25:	
  9606  1467  1003               	clrc
  9607  1468  0CF2               	rrf	___ftpack@arg+2,f
  9608  1469  0CF1               	rrf	___ftpack@arg+1,f
  9609  146A  0CF0               	rrf	___ftpack@arg,f
  9610  146B  3EFF               	addlw	-1
  9611  146C  1D03               	skipz
  9612  146D  2C67               	goto	u216_25
  9613  146E                     i1l2264:	
  9614  146E  30FE               	movlw	254
  9615  146F  0572               	andwf	___ftpack@arg+2,w
  9616  1470  1903               	btfsc	3,2
  9617  1471  2C89               	goto	i1l761
  9618  1472  2C62               	goto	i1l2262
  9619  1473                     i1l2266:	
  9620  1473  3001               	movlw	1
  9621  1474  00F5               	movwf	??___ftpack
  9622  1475  0875               	movf	??___ftpack,w
  9623  1476  07F3               	addwf	___ftpack@exp,f
  9624  1477  3001               	movlw	1
  9625  1478  07F0               	addwf	___ftpack@arg,f
  9626  1479  3000               	movlw	0
  9627  147A  1803               	skipnc
  9628  147B  3001               	movlw	1
  9629  147C  07F1               	addwf	___ftpack@arg+1,f
  9630  147D  3000               	movlw	0
  9631  147E  1803               	skipnc
  9632  147F  3001               	movlw	1
  9633  1480  07F2               	addwf	___ftpack@arg+2,f
  9634  1481  3001               	movlw	1
  9635  1482                     u218_25:	
  9636  1482  1003               	clrc
  9637  1483  0CF2               	rrf	___ftpack@arg+2,f
  9638  1484  0CF1               	rrf	___ftpack@arg+1,f
  9639  1485  0CF0               	rrf	___ftpack@arg,f
  9640  1486  3EFF               	addlw	-1
  9641  1487  1D03               	skipz
  9642  1488  2C82               	goto	u218_25
  9643  1489                     i1l761:	
  9644  1489  30FF               	movlw	255
  9645  148A  0572               	andwf	___ftpack@arg+2,w
  9646  148B  1903               	btfsc	3,2
  9647  148C  2C98               	goto	i1l2274
  9648  148D  2C73               	goto	i1l2266
  9649  148E                     i1l2272:	
  9650  148E  3001               	movlw	1
  9651  148F  02F3               	subwf	___ftpack@exp,f
  9652  1490  3001               	movlw	1
  9653  1491                     u220_25:	
  9654  1491  1003               	clrc
  9655  1492  0DF0               	rlf	___ftpack@arg,f
  9656  1493  0DF1               	rlf	___ftpack@arg+1,f
  9657  1494  0DF2               	rlf	___ftpack@arg+2,f
  9658  1495  3EFF               	addlw	-1
  9659  1496  1D03               	skipz
  9660  1497  2C91               	goto	u220_25
  9661  1498                     i1l2274:	
  9662  1498  1FF1               	btfss	___ftpack@arg+1,7
  9663  1499  2C8E               	goto	i1l2272
  9664  149A  1873               	btfsc	___ftpack@exp,0
  9665  149B  2CA2               	goto	i1l767
  9666  149C  30FF               	movlw	255
  9667  149D  05F0               	andwf	___ftpack@arg,f
  9668  149E  307F               	movlw	127
  9669  149F  05F1               	andwf	___ftpack@arg+1,f
  9670  14A0  30FF               	movlw	255
  9671  14A1  05F2               	andwf	___ftpack@arg+2,f
  9672  14A2                     i1l767:	
  9673  14A2  1003               	clrc
  9674  14A3  0CF3               	rrf	___ftpack@exp,f
  9675  14A4  0873               	movf	___ftpack@exp,w
  9676  14A5  00F5               	movwf	??___ftpack
  9677  14A6  01F6               	clrf	??___ftpack+1
  9678  14A7  01F7               	clrf	??___ftpack+2
  9679  14A8  3010               	movlw	16
  9680  14A9                     u223_25:	
  9681  14A9  1003               	clrc
  9682  14AA  0DF5               	rlf	??___ftpack,f
  9683  14AB  0DF6               	rlf	??___ftpack+1,f
  9684  14AC  0DF7               	rlf	??___ftpack+2,f
  9685  14AD  3EFF               	addlw	-1
  9686  14AE  1D03               	skipz
  9687  14AF  2CA9               	goto	u223_25
  9688  14B0  0875               	movf	??___ftpack,w
  9689  14B1  04F0               	iorwf	___ftpack@arg,f
  9690  14B2  0876               	movf	??___ftpack+1,w
  9691  14B3  04F1               	iorwf	___ftpack@arg+1,f
  9692  14B4  0877               	movf	??___ftpack+2,w
  9693  14B5  04F2               	iorwf	___ftpack@arg+2,f
  9694  14B6  0874               	movf	___ftpack@sign,w
  9695  14B7  1903               	btfsc	3,2
  9696  14B8  0008               	return
  9697  14B9  17F2               	bsf	___ftpack@arg+2,7
  9698  14BA  0008               	return
  9699  14BB                     __end_of___ftpack:	
  9700  007E                     btemp	set	126	;btemp
  9701  007E                     wtemp	set	126
  9702  007E                     wtemp0	set	126
  9703  0080                     wtemp1	set	128
  9704  0082                     wtemp2	set	130
  9705  0084                     wtemp3	set	132
  9706  0086                     wtemp4	set	134
  9707  0088                     wtemp5	set	136
  9708  007F                     wtemp6	set	127
  9709  007E                     ttemp	set	126
  9710  007E                     ttemp0	set	126
  9711  0081                     ttemp1	set	129
  9712  0084                     ttemp2	set	132
  9713  0087                     ttemp3	set	135
  9714  007F                     ttemp4	set	127
  9715  007E                     ltemp	set	126
  9716  007E                     ltemp0	set	126
  9717  0082                     ltemp1	set	130
  9718  0086                     ltemp2	set	134
  9719  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        5
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     35      76
    BANK3            96      3      45
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1254$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftdiv
    _Fuzzy->___fttol
    _Fuzzy->i1___wmul
    i1___wmul->i1___lwdiv
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftpack
    ___ftadd->___ftdiv
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftadd
    _trapmf->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4629
                                              0 BANK3      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2205
                                             18 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     372
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55780
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   52298
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     196
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   14094
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14951
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             26 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                             10 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftdiv (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftdiv (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
     i1___wmul
       i1___lwdiv (ARG)
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3      2D       9       46.9%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     23      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D6      12        0.0%
ABS                  0      0      D6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 14:22:41 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00CB       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 0196                            fsr 0004           ___wmul@multiplicand 00CD  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0046  
                ___ftadd@exp2 0045                 _contagens_tm0 00BB                  ___ftadd@sign 0044  
                         l204 0AAA                           l229 10BB                           l600 1255  
                         l481 0E76                           l655 15C4                           l499 0F3B  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0CAC  
                         _rpm 00C3                           fsr0 0004                           _pwm 00C1  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CF                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0024                  ___ftdiv@sign 0029  
                        l3100 0F5E            LCD_WriteString@Str 00CD                          l3030 1297  
                        l3016 118B                          l3130 0FAD                          l3050 0E7B  
                        l3124 0F9E                          l3108 0F6F                          l3116 0F85  
                        l3052 0E86                          l3044 0E72                          l3140 0E50  
                        l3118 0F89                          l3142 0FF9                          l3056 0E98  
                        l2522 10D3                          l3138 0FB1                          l3090 0F2D  
                        l3082 0F0C                          l3066 0ED6                          l3068 0EED  
                        l3078 0F06                          l2712 131D                          l2528 124D  
                        l2570 162A                          l2706 1301                          l3098 0F5A  
                        l2556 15E5                          l2548 15D5                          l2708 130F  
                        l2716 1328                          l2574 1638                          l2566 161D  
                        l2558 15F5                          l2910 12C8                          l2690 139B  
                        l2682 1377                          l2684 1385                          l2694 13A6  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3215 137A                          u3305 1315                          u3235 1386  
                        u3315 131E                          u3245 1392                          u4207 14EF  
                        u3255 139C                          u4217 14FB                          u4227 1509  
                        u4147 0AA3                          u4237 1517                          u3285 1304  
                        u4157 0B4F                          u4247 1523                          u4167 1123  
                        u4257 1197                          u4177 14C5                          u4267 127A  
                        u4187 14D5                          u3635 11D3                          u2915 15F7  
                        u2835 1256                          u4277 1288                          u4197 14E3  
                        u2925 160C                          u2845 125D                          u4287 1294  
                        u2935 161E                          u4297 110C                          u3665 13B8  
                        u3755 0F23                          u3695 11B2                          u2895 15E9  
                        u3795 0F4A                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0A05                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 10E7                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 1112                  ___ftmul@cntr 0038  
                ___ftmul@sign 0039       __end_of_USART_WriteChar 10C5                         ??_ISR 00C7  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1526               __end_of___aldiv 1641                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 1800                         STR_10 0884  
                       STR_11 0842                         STR_12 085F                         STR_13 0873  
                       STR_14 08D6                         STR_15 08D6                         STR_16 08C5  
                       STR_17 08D0                 __CFG_WDTE$OFF 0000                         STR_18 08C8  
                       STR_19 081A               __end_of___ftdiv 16F7               __end_of___ftneg 1095  
             __end_of___ftmul 07FE                         _T1CON 0010               __end_of___fttol 15B2  
             __end_of___lwdiv 13AD                         i1l120 09FC                         i1l130 0CA3  
                       i1l229 1096                         i1l182 0E38                         i1l600 11E9  
             __end_of___lwmod 132F                         i1l186 0D1C                         i1l189 0D45  
                       i1l761 1489                         i1l790 179F                         i1l767 14A2  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 004F                         _derro 0193  
             __end_of_dpowers 081A               __end_of_max_val 117D               __end_of_isdigit 10D5  
               ___ftpack@sign 0074                         _trimf 08E1                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 1249  
            __end_ofi1___wmul 1202                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 1000            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00CB                ?_LCD_WriteData 0070                   ?_USART_Init 00DA  
       i1TIMER0_Set@contagens 0070               __initialization 0019                  __end_of_main 0B56  
                      ??_main 01BA                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 1297                    Fuzzy@a_233 005B                    Fuzzy@a_234 005D  
                  Fuzzy@a_235 005F                    Fuzzy@a_236 0061                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0069                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 14BB                        ?_trimf 0047  
                      i1l2302 1736                        i1l2320 1765                        i1l2402 141D  
                      i1l2322 1771                        i1l2314 1750                        i1l3202 0CD1  
                      i1l2332 178F                        i1l2324 1776                        i1l2262 1462  
                      i1l2406 1444                        i1l2342 17C3                        i1l2334 179B  
                      i1l2326 177A                        i1l3214 0CFF                        i1l2272 148E  
                      i1l2264 146E                        i1l2352 17E6                        i1l3224 0D1D  
                      i1l3208 0CE8                        i1l2274 1498                        i1l2266 1473  
                      i1l2258 145B                        i1l2602 0798                        i1l2338 17B1  
                      i1l2362 1659                        i1l2442 095A                        i1l3170 1345  
                      i1l3242 0D5E                        i1l2292 1720                        i1l3180 1366  
                      i1l3260 0DA3                        i1l3236 0D47                        i1l2614 07C0  
                      i1l2606 07A8                        i1l2390 16D3                        i1l2382 16B4  
                      i1l3254 0D8C                        i1l2296 1727                        i1l2368 166F  
                      i1l2472 0C01                        i1l2448 09DF                        i1l3176 135B  
                      i1l3168 1337                        i1l3248 0D75                        i1l3272 0DD7  
                      i1l2618 07D0                        i1l2634 153E                        i1l2466 0BCF  
                      i1l2730 1202                        i1l3266 0DBA                        i1l2660 158D  
                      i1l2652 1570                        i1l2804 0359                        i1l3284 0DF4  
                      i1l2590 0759                        i1l2662 1598                        i1l2654 1580  
                      i1l2478 0C86                        i1l2814 041E                        i1l2584 0743  
                      i1l2664 159B                        i1l2832 0520                        i1l2808 03B7  
                      i1l2760 0126                        i1l3296 0E33                        i1l2738 11E1  
                      i1l3298 0E34                        i1l2668 15A9                        i1l2844 0596  
                      i1l2828 04BC                        i1l2764 0143                        i1l2854 05E5  
                      i1l2838 0587                        i1l2782 0245                        i1l2872 06E2  
                      i1l2848 05B3                        i1l2866 0621                        i1l2858 05FE  
                      i1l2778 01E1                        i1l2890 114D                        i1l2788 02AC  
                      u220_25 1491                        i1l2898 115C                        u302_25 07A9  
                      u223_25 14A9                        u303_25 07B1                        u311_25 1545  
                      u216_25 1467                        u240_25 177B                        u218_25 1482  
                      u314_25 1571                        u234_25 1751                        u307_25 07D1  
                      u243_25 1790                        u251_25 1681                        u260_21 1437  
                      u260_22 1438                        u260_23 143D                        u260_24 143E  
                      u308_25 07D9                        u252_25 1693                        u317_25 158F  
                      u237_25 1766                        u253_25 16B5                        u254_25 16C6  
                      u334_25 113A                        u342_25 01DF                        u255_25 16D4  
                      u351_25 04BA                        u336_25 11EA                        u360_25 06E0  
                      u344_25 02AA                        u337_25 11F1                        u353_25 0585  
                      u258_21 1410              __end_of___lwtoft 10FB                        u258_22 1411  
                      u258_23 1416                        u258_24 1417                        u354_25 0594  
                      u347_25 0357                        u349_25 041C           __size_of_TIMER0_Set 0008  
                      u358_25 05FC                        u390_25 133A                        u359_25 061F  
                      u392_25 1346                        u393_25 1352                        u298_25 0765  
                      u394_25 135C                        u299_25 0777                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 0059              LCD_WriteCmd@Byte 00CC  
         i1_USART_WriteString 1202                        ___ftge 13F6                     ??___aldiv 00D3  
                      ___wmul 1249                     ??___ftadd 0040                _PWM_DutyCycle1 119D  
              _PWM_DutyCycle2 11BE              ?_USART_WriteChar 0070                     ??___ftdiv 0020  
                   ??___ftneg 0073                        _deltaV 00BD                     ??___ftmul 0030  
                   ??___fttol 0074                     ??___lwdiv 00CF                     ??___lwmod 00D7  
                      _fitemp 00A0         USART_ReceiveChar@byte 0074                        _trapmf 0B56  
                      _pulsos 00BF                        _status 019D         ___ftmul@f3_as_product 0035  
                   ??_max_val 007C             __end_ofi1___lwdiv 136D                     ??_isdigit 00CB  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 004A                        trimf@b 004D  
                      trimf@c 0050                        trimf@x 0047                     ??_sprintf 00DC  
               ?i1_TIMER0_Set 0070       __end_of__initialization 004B                     ?_LCD_Init 0070  
                  ___ftadd@f1 003A                    ___ftadd@f2 003D               ??_LCD_WriteData 00CB  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 007B  
                  ___ftdiv@f2 0078                    ___ftdiv@f3 0025                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 11BE        __end_of_PWM_DutyCycle2 11DF                    ___ftmul@f1 002A  
                  ___ftmul@f2 002D                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 072B                  __pidataBANK1 07FE                  __pidataBANK3 108A  
               LCD_Cursor@Col 00CB                 LCD_Cursor@Row 00CD                  ??_LCD_Cursor 00CC  
             _LCD_WriteString 1297                 __end_of_trimf 0A05                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00CB          __end_of_LCD_WriteCmd 1112         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 00E6                       ??_trimf 007E                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 119D                    ??_LCD_Init 00CD  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CB               ?_PWM_DutyCycle2 00CB  
                  __pmaintext 0A05                   Fuzzy@mantem 0066                       ?___ftge 0070  
                     ?___wmul 00CB                    __pintentry 0004                  ??_TIMER0_Set 00CB  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0047                    ??_PWM_Init 00CB                    ??i1___wmul 007C  
                   ?___lwtoft 0078          __size_of_TIMER0_Init 000B                       _SSPCON2 0091  
                  __stringtab 0800            __end_of_TIMER0_Set 10A5       __end_of_LCD_WriteString 12C8  
                   _ADCResult 0199                  ??_USART_Init 00DE             LCD_WriteData@Byte 00CC  
                     ___aldiv 15B2               __size_of___ftge 005D                       ___ftadd 16F7  
                     ___ftdiv 1641                       ___ftneg 108D               __size_of___wmul 0025  
                     ___ftmul 072B                       ___fttol 1526                       ___lwdiv 136D  
                     ___lwmod 12F9                    ??___ftpack 0075                       __ptext1 0E49  
                     __ptext2 10C5                       __ptext3 1249                       __ptext4 12F9  
                     __ptext5 136D                       __ptext6 12C8                       __ptext7 10B8  
                     __ptext8 13AD                       __ptext9 15B2                    _pas_cooler 00EA  
                  ??___lwtoft 007B               __size_of_trapmf 0156                  __size_of_ISR 019D  
                   _T1CONbits 0010                       _dpowers 0810             i1___lwdiv@divisor 0070  
                   _T2CONbits 0012                       _max_val 115F                       _isdigit 10C5  
           i1___lwdiv@counter 0077              ___aldiv@dividend 00CF                     _LCD_Clear 126E  
          __end_of_USART_Init 13F6                       _sprintf 0E49                       clrloop0 10A6  
        end_of_initialization 004B                     _RCSTAbits 0018              ___aldiv@quotient 00D6  
                     trapmf@a 004A                       trapmf@b 004D                       trapmf@c 0050  
                     trapmf@d 0053                       trapmf@x 0047                       trimf@ua 0053  
        __end_ofi1_TIMER0_Set 08E1         i1___wmul@multiplicand 007A         __size_of_LCD_WriteCmd 0017  
                   _PORTBbits 0006                     _PORTEbits 0009                    _setpointUI 00C5  
                  ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1129             __size_of_ADC_Init 0012  
                   i1___lwdiv 132F                  _contador_rb6 019B           PWM_DutyCycle1@valor 00CB  
                  _total_area 00B2           PWM_DutyCycle2@valor 00CB                   _CCP1CONbits 0017  
                 ___ftdiv@exp 0028                   _CCP2CONbits 001D                     _TXSTAbits 0098  
            ?_LCD_WriteString 00CD             __size_of_LCD_Init 006B                  _LCD_WriteCmd 10FB  
                 ___ftmul@exp 0034                __end_of___ftge 1453                __end_of___wmul 126E  
           i1_USART_WriteChar 1095            ?i1_USART_WriteChar 0070                __end_of_trapmf 0CAC  
    __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024           start_initialization 0019  
           __size_ofi1___wmul 0023                   __end_of_ISR 0E49           ??i1_USART_WriteChar 0070  
                  ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CD              ??_PWM_DutyCycle2 00CD  
       __end_of_LCD_WriteData 1129             _USART_ReceiveChar 1144                      ??___ftge 0076  
          ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 109D                      ??___wmul 00CF  
                 __pdataBANK1 00EA                   __pdataBANK3 01B7   __end_ofi1_USART_WriteString 1225  
                    ??_trapmf 007E           ??_USART_ReceiveChar 0073             __size_of___ftpack 0068  
                   ___latbits 0002             __size_of___lwtoft 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00C7                 __pcstackBANK3 01BA                   ??_LCD_Clear 00CD  
         __end_of__stringdata 08DB                  _isdigit$1450 00CB                   sprintf@_val 00E1  
                 sprintf@flag 00E5                   sprintf@prec 00E0     __end_of_USART_ReceiveChar 115F  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CD           TIMER0_Set@contagens 00CB  
                Fuzzy@aumenta 006C                      ?___aldiv 00CB                      ?___ftadd 003A  
                    ?___ftdiv 0078                      ?___ftneg 0070                      ?___ftmul 002A  
                    ?___fttol 0070                      ?___lwdiv 00CB                      ?___lwmod 00D3  
                   __pstrings 0800                     _ativa_fan 0190                 ??_TIMER0_Init 00CB  
          USART_Init@BaudRate 00DA                      ?_max_val 0020                      ?_isdigit 0070  
                    _ADC_Init 10D5                     _fop_rule1 00A3                     _fop_rule2 00A6  
                   _fop_rule3 00A9                __size_of_Fuzzy 06DC              ___lwdiv@quotient 00D0  
                 ??i1___lwdiv 0074                      ?_sprintf 00D9                __size_of_trimf 0124  
           ??_USART_WriteChar 00CB                  i1_TIMER0_Set 08DB               ___aldiv@divisor 00CB  
           interrupt_function 0004               ___aldiv@counter 00D4                      _LCD_Init 14BB  
              ___wmul@product 00CF                     clear_ram0 10A5                      _PIE1bits 008C  
                    _PIE2bits 008D                      _PIR1bits 000C                      _PIR2bits 000D  
                   _temp_lida 019F      __end_ofi1_PWM_DutyCycle2 1144                     _tempo_rb6 01A1  
  __size_ofi1_USART_WriteChar 0008                   _display_rpm 01AD                   _display_pwm 01A3  
                  _ADCON0bits 001F                   __stringbase 080F                    _ADCON1bits 009F  
                 __stringdata 081A                      _PWM_Init 1225             ___wmul@multiplier 00CB  
                    i1___wmul 11DF           __end_of_TIMER0_Init 10B8    __size_of_USART_ReceiveChar 001B  
                  _EECON1bits 018C                      Fuzzy@tip 0063              __size_of___aldiv 008F  
            __size_of___ftadd 0109              __size_of___ftdiv 00B6              __size_of___ftneg 0008  
            __size_of___ftmul 00D3              __size_of___fttol 008C              __size_of___lwdiv 0040  
            __size_of___lwmod 0036                      ___ftpack 1453            __end_of__stringtab 0810  
                    ___lwtoft 10E7              __size_of_max_val 001E              __size_of_isdigit 0010  
             ___lwdiv@divisor 00CB               ___lwdiv@counter 00D2             _USART_WriteString 12C8  
                    __ptext10 109D                      __ptext11 10AD                      __ptext20 10FB  
                    __ptext12 1225                      __ptext21 10D5                      __ptext13 11BE  
                    __ptext30 1129                      __ptext22 0CAC                      __ptext14 119D  
                    __ptext31 08E1                      __ptext23 132F                      __ptext15 1297  
                    __ptext40 072B                      __ptext32 0B56                      __ptext24 08DB  
                    __ptext16 1112                      __ptext41 1453                      __ptext33 108D  
                    __ptext25 1144                      __ptext17 14BB                      __ptext34 1641  
                    __ptext26 1202                      __ptext18 117D                      __ptext35 16F7  
                    __ptext27 1095                      __ptext19 126E                      __ptext36 115F  
                    __ptext28 004F                      __ptext37 13F6                      __ptext29 11DF  
                    __ptext38 10E7                      __ptext39 1526            ?_USART_WriteString 00CC  
            __size_of_sprintf 01B7            i1___lwdiv@dividend 0072                 __size_of_main 0151  
         USART_WriteChar@byte 00CB           ??_USART_WriteString 00CE        i1USART_WriteString@str 0071  
                    _setpoint 01B7                    _LCD_Cursor 117D      __size_of_LCD_WriteString 0031  
          i1___lwdiv@quotient 0075                   _TIMER0_Init 10AD                    _INTCONbits 000B  
   __end_of_USART_WriteString 12F9                      max_val@a 0020                      max_val@b 0023  
                    isdigit@c 00CC                      intlevel1 0000                     sprintf@ap 00DF  
                   sprintf@sp 00E8              ___lwmod@dividend 00D5                     stringcode 080A  
        USART_WriteString@str 00CC                    _TIMER0_Set 109D                      trapmf@ua 0056  
             _USART_WriteChar 10B8                      sprintf@c 00E9                      sprintf@f 00D9  
             ___lwmod@divisor 00D3               ___lwmod@counter 00D8                      stringdir 080A  
                    stringtab 0800                  ___aldiv@sign 00D5        __size_of_LCD_WriteData 0017  
__size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 0070  
                  _SSPCONbits 0014                    _USART_Init 13AD  
