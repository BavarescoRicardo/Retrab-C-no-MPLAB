

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 03 13:40:11 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  000E                     	;# 
   377  000F                     	;# 
   378  0010                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0014                     	;# 
   383  0015                     	;# 
   384  0015                     	;# 
   385  0016                     	;# 
   386  0017                     	;# 
   387  0018                     	;# 
   388  0019                     	;# 
   389  001A                     	;# 
   390  001B                     	;# 
   391  001B                     	;# 
   392  001C                     	;# 
   393  001D                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  0081                     	;# 
   397  0085                     	;# 
   398  0086                     	;# 
   399  0087                     	;# 
   400  0088                     	;# 
   401  0089                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0093                     	;# 
   408  0094                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0088                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  001D                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  0081                     	;# 
   517  0085                     	;# 
   518  0086                     	;# 
   519  0087                     	;# 
   520  0088                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601                           
   602                           	psect	idataBANK1
   603  07FC                     __pidataBANK1:	
   604                           
   605                           ;initializer for _pas_cooler
   606  07FC  3407               	retlw	7
   607  07FD  3400               	retlw	0
   608                           
   609                           	psect	idataBANK3
   610  10AA                     __pidataBANK3:	
   611                           
   612                           ;initializer for _setpoint
   613  10AA  3400               	retlw	0
   614  10AB  34A0               	retlw	160
   615  10AC  3441               	retlw	65
   616                           
   617                           ;initializer for _tf
   618  10AD  3400               	retlw	0
   619  10AE  34A0               	retlw	160
   620  10AF  3441               	retlw	65
   621                           
   622                           	psect	stringtext
   623  1800                     __pstringtext:	
   624  1800                     stringtab:	
   625  1800                     __stringtab:	
   626                           
   627                           ;	String table - string pointers are 2 bytes each
   628  1800  1BFF               	btfsc	btemp+1,7
   629  1801  280A               	ljmp	stringcode
   630  1802  1383               	bcf	3,7
   631  1803  187F               	btfsc	btemp+1,0
   632  1804  1783               	bsf	3,7
   633  1805  0800               	movf	0,w
   634  1806  0A84               	incf	4,f
   635  1807  1903               	skipnz
   636  1808  0AFF               	incf	btemp+1,f
   637  1809  0008               	return
   638  180A                     stringcode:	
   639  180A  087F               	movf	btemp+1,w
   640  180B  397F               	andlw	127
   641  180C  008A               	movwf	10
   642  180D  0804               	movf	4,w
   643  180E  0A84               	incf	4,f
   644  180F  1903               	skipnz
   645  1810  0AFF               	incf	btemp+1,f
   646  1811  0082               	movwf	2
   647  1812                     __stringbase:	
   648  1812                     __end_of__stringtab:	
   649  1812                     _dpowers:	
   650  1812  3401               	retlw	1
   651  1813  3400               	retlw	0
   652  1814  340A               	retlw	10
   653  1815  3400               	retlw	0
   654  1816  3464               	retlw	100
   655  1817  3400               	retlw	0
   656  1818  34E8               	retlw	232
   657  1819  3403               	retlw	3
   658  181A  3410               	retlw	16
   659  181B  3427               	retlw	39
   660  181C                     __end_of_dpowers:	
   661  000E                     _TMR1	set	14
   662  001F                     _ADCON0bits	set	31
   663  001E                     _ADRESH	set	30
   664  0017                     _CCP1CON	set	23
   665  0017                     _CCP1CONbits	set	23
   666  001D                     _CCP2CON	set	29
   667  001D                     _CCP2CONbits	set	29
   668  0015                     _CCPR1L	set	21
   669  001B                     _CCPR2L	set	27
   670  000B                     _INTCONbits	set	11
   671  000C                     _PIR1bits	set	12
   672  000D                     _PIR2bits	set	13
   673  0005                     _PORTA	set	5
   674  0006                     _PORTB	set	6
   675  0006                     _PORTBbits	set	6
   676  0007                     _PORTC	set	7
   677  0008                     _PORTD	set	8
   678  0009                     _PORTE	set	9
   679  0009                     _PORTEbits	set	9
   680  001A                     _RCREG	set	26
   681  0018                     _RCSTAbits	set	24
   682  0013                     _SSPBUF	set	19
   683  0014                     _SSPCONbits	set	20
   684  0010                     _T1CON	set	16
   685  0010                     _T1CONbits	set	16
   686  0012                     _T2CONbits	set	18
   687  0001                     _TMR0	set	1
   688  000F                     _TMR1H	set	15
   689  000E                     _TMR1L	set	14
   690  0019                     _TXREG	set	25
   691  00C1                     _OERR	set	193
   692  009F                     _ADCON1bits	set	159
   693  009E                     _ADRESL	set	158
   694  0081                     _OPTION_REGbits	set	129
   695  008C                     _PIE1bits	set	140
   696  008D                     _PIE2bits	set	141
   697  0092                     _PR2	set	146
   698  0099                     _SPBRG	set	153
   699  0093                     _SSPADD	set	147
   700  0091                     _SSPCON2	set	145
   701  0091                     _SSPCON2bits	set	145
   702  0094                     _SSPSTATbits	set	148
   703  0085                     _TRISA	set	133
   704  0086                     _TRISB	set	134
   705  0087                     _TRISC	set	135
   706  0088                     _TRISD	set	136
   707  0089                     _TRISE	set	137
   708  0098                     _TXSTAbits	set	152
   709  010D                     _EEADR	set	269
   710  010C                     _EEDATA	set	268
   711  018C                     _EECON1bits	set	396
   712  018D                     _EECON2	set	397
   713  181C                     __stringdata:	
   714  181C                     STR_19:	
   715  181C  340A               	retlw	10
   716  181D  340D               	retlw	13
   717  181E  3420               	retlw	32	;' '
   718  181F  342D               	retlw	45	;'-'
   719  1820  342D               	retlw	45	;'-'
   720  1821  342D               	retlw	45	;'-'
   721  1822  342D               	retlw	45	;'-'
   722  1823  342D               	retlw	45	;'-'
   723  1824  342D               	retlw	45	;'-'
   724  1825  342D               	retlw	45	;'-'
   725  1826  3420               	retlw	32	;' '
   726  1827  3445               	retlw	69	;'E'
   727  1828  3453               	retlw	83	;'S'
   728  1829  3454               	retlw	84	;'T'
   729  182A  344F               	retlw	79	;'O'
   730  182B  3455               	retlw	85	;'U'
   731  182C  3452               	retlw	82	;'R'
   732  182D  344F               	retlw	79	;'O'
   733  182E  3420               	retlw	32	;' '
   734  182F  3444               	retlw	68	;'D'
   735  1830  3445               	retlw	69	;'E'
   736  1831  3420               	retlw	32	;' '
   737  1832  3450               	retlw	80	;'P'
   738  1833  3449               	retlw	73	;'I'
   739  1834  344C               	retlw	76	;'L'
   740  1835  3448               	retlw	72	;'H'
   741  1836  3441               	retlw	65	;'A'
   742  1837  3420               	retlw	32	;' '
   743  1838  342D               	retlw	45	;'-'
   744  1839  342D               	retlw	45	;'-'
   745  183A  342D               	retlw	45	;'-'
   746  183B  342D               	retlw	45	;'-'
   747  183C  342D               	retlw	45	;'-'
   748  183D  342D               	retlw	45	;'-'
   749  183E  342D               	retlw	45	;'-'
   750  183F  3420               	retlw	32	;' '
   751  1840  340A               	retlw	10
   752  1841  340D               	retlw	13
   753  1842  3420               	retlw	32	;' '
   754  1843  3400               	retlw	0
   755  1844                     STR_11:	
   756  1844  3449               	retlw	73	;'I'
   757  1845  346E               	retlw	110	;'n'
   758  1846  3469               	retlw	105	;'i'
   759  1847  3463               	retlw	99	;'c'
   760  1848  3469               	retlw	105	;'i'
   761  1849  3461               	retlw	97	;'a'
   762  184A  346C               	retlw	108	;'l'
   763  184B  3469               	retlw	105	;'i'
   764  184C  347A               	retlw	122	;'z'
   765  184D  3461               	retlw	97	;'a'
   766  184E  346E               	retlw	110	;'n'
   767  184F  3464               	retlw	100	;'d'
   768  1850  346F               	retlw	111	;'o'
   769  1851  3420               	retlw	32	;' '
   770  1852  346F               	retlw	111	;'o'
   771  1853  3420               	retlw	32	;' '
   772  1854  3450               	retlw	80	;'P'
   773  1855  3449               	retlw	73	;'I'
   774  1856  3443               	retlw	67	;'C'
   775  1857  3431               	retlw	49	;'1'
   776  1858  3436               	retlw	54	;'6'
   777  1859  3446               	retlw	70	;'F'
   778  185A  3438               	retlw	56	;'8'
   779  185B  3437               	retlw	55	;'7'
   780  185C  3437               	retlw	55	;'7'
   781  185D  3441               	retlw	65	;'A'
   782  185E  340A               	retlw	10
   783  185F  340D               	retlw	13
   784  1860  3400               	retlw	0
   785  1861                     STR_12:	
   786  1861  3455               	retlw	85	;'U'
   787  1862  3453               	retlw	83	;'S'
   788  1863  3441               	retlw	65	;'A'
   789  1864  3452               	retlw	82	;'R'
   790  1865  3454               	retlw	84	;'T'
   791  1866  343A               	retlw	58	;':'
   792  1867  3420               	retlw	32	;' '
   793  1868  3431               	retlw	49	;'1'
   794  1869  3431               	retlw	49	;'1'
   795  186A  3435               	retlw	53	;'5'
   796  186B  342E               	retlw	46	;'.'
   797  186C  3432               	retlw	50	;'2'
   798  186D  3430               	retlw	48	;'0'
   799  186E  3430               	retlw	48	;'0'
   800  186F  3462               	retlw	98	;'b'
   801  1870  3470               	retlw	112	;'p'
   802  1871  3473               	retlw	115	;'s'
   803  1872  340A               	retlw	10
   804  1873  340D               	retlw	13
   805  1874  3400               	retlw	0
   806  1875                     STR_13:	
   807  1875  3449               	retlw	73	;'I'
   808  1876  346E               	retlw	110	;'n'
   809  1877  3469               	retlw	105	;'i'
   810  1878  3463               	retlw	99	;'c'
   811  1879  3469               	retlw	105	;'i'
   812  187A  3461               	retlw	97	;'a'
   813  187B  346C               	retlw	108	;'l'
   814  187C  3469               	retlw	105	;'i'
   815  187D  347A               	retlw	122	;'z'
   816  187E  3461               	retlw	97	;'a'
   817  187F  346E               	retlw	110	;'n'
   818  1880  3464               	retlw	100	;'d'
   819  1881  346F               	retlw	111	;'o'
   820  1882  342E               	retlw	46	;'.'
   821  1883  342E               	retlw	46	;'.'
   822  1884  342E               	retlw	46	;'.'
   823  1885  3400               	retlw	0
   824  1886                     STR_9:	
   825  1886  340A               	retlw	10
   826  1887  340D               	retlw	13
   827  1888  3470               	retlw	112	;'p'
   828  1889  3477               	retlw	119	;'w'
   829  188A  346D               	retlw	109	;'m'
   830  188B  3420               	retlw	32	;' '
   831  188C  343D               	retlw	61	;'='
   832  188D  3420               	retlw	32	;' '
   833  188E  3431               	retlw	49	;'1'
   834  188F  3430               	retlw	48	;'0'
   835  1890  3430               	retlw	48	;'0'
   836  1891  3430               	retlw	48	;'0'
   837  1892  340A               	retlw	10
   838  1893  340D               	retlw	13
   839  1894  3400               	retlw	0
   840  1895                     STR_10:	
   841  1895  340A               	retlw	10
   842  1896  340D               	retlw	13
   843  1897  3470               	retlw	112	;'p'
   844  1898  3477               	retlw	119	;'w'
   845  1899  346D               	retlw	109	;'m'
   846  189A  3420               	retlw	32	;' '
   847  189B  343D               	retlw	61	;'='
   848  189C  3420               	retlw	32	;' '
   849  189D  3431               	retlw	49	;'1'
   850  189E  3430               	retlw	48	;'0'
   851  189F  3432               	retlw	50	;'2'
   852  18A0  3433               	retlw	51	;'3'
   853  18A1  340A               	retlw	10
   854  18A2  340D               	retlw	13
   855  18A3  3400               	retlw	0
   856  18A4                     STR_6:	
   857  18A4  340A               	retlw	10
   858  18A5  340D               	retlw	13
   859  18A6  3470               	retlw	112	;'p'
   860  18A7  3477               	retlw	119	;'w'
   861  18A8  346D               	retlw	109	;'m'
   862  18A9  3420               	retlw	32	;' '
   863  18AA  343D               	retlw	61	;'='
   864  18AB  3420               	retlw	32	;' '
   865  18AC  3435               	retlw	53	;'5'
   866  18AD  3431               	retlw	49	;'1'
   867  18AE  3432               	retlw	50	;'2'
   868  18AF  340A               	retlw	10
   869  18B0  340D               	retlw	13
   870  18B1  3400               	retlw	0
   871  18B2                     STR_5:	
   872  18B2  340A               	retlw	10
   873  18B3  340D               	retlw	13
   874  18B4  3470               	retlw	112	;'p'
   875  18B5  3477               	retlw	119	;'w'
   876  18B6  346D               	retlw	109	;'m'
   877  18B7  3420               	retlw	32	;' '
   878  18B8  343D               	retlw	61	;'='
   879  18B9  3420               	retlw	32	;' '
   880  18BA  3432               	retlw	50	;'2'
   881  18BB  3435               	retlw	53	;'5'
   882  18BC  3436               	retlw	54	;'6'
   883  18BD  340A               	retlw	10
   884  18BE  340D               	retlw	13
   885  18BF  3400               	retlw	0
   886  18C0                     STR_8:	
   887  18C0  340A               	retlw	10
   888  18C1  340D               	retlw	13
   889  18C2  3470               	retlw	112	;'p'
   890  18C3  3477               	retlw	119	;'w'
   891  18C4  346D               	retlw	109	;'m'
   892  18C5  3420               	retlw	32	;' '
   893  18C6  343D               	retlw	61	;'='
   894  18C7  3420               	retlw	32	;' '
   895  18C8  3438               	retlw	56	;'8'
   896  18C9  3439               	retlw	57	;'9'
   897  18CA  3436               	retlw	54	;'6'
   898  18CB  340A               	retlw	10
   899  18CC  340D               	retlw	13
   900  18CD  3400               	retlw	0
   901  18CE                     STR_4:	
   902  18CE  340A               	retlw	10
   903  18CF  340D               	retlw	13
   904  18D0  3470               	retlw	112	;'p'
   905  18D1  3477               	retlw	119	;'w'
   906  18D2  346D               	retlw	109	;'m'
   907  18D3  3420               	retlw	32	;' '
   908  18D4  343D               	retlw	61	;'='
   909  18D5  3420               	retlw	32	;' '
   910  18D6  3431               	retlw	49	;'1'
   911  18D7  3432               	retlw	50	;'2'
   912  18D8  3438               	retlw	56	;'8'
   913  18D9  340A               	retlw	10
   914  18DA  340D               	retlw	13
   915  18DB  3400               	retlw	0
   916  18DC                     STR_7:	
   917  18DC  340A               	retlw	10
   918  18DD  340D               	retlw	13
   919  18DE  3470               	retlw	112	;'p'
   920  18DF  3477               	retlw	119	;'w'
   921  18E0  346D               	retlw	109	;'m'
   922  18E1  3420               	retlw	32	;' '
   923  18E2  343D               	retlw	61	;'='
   924  18E3  3420               	retlw	32	;' '
   925  18E4  3437               	retlw	55	;'7'
   926  18E5  3436               	retlw	54	;'6'
   927  18E6  3438               	retlw	56	;'8'
   928  18E7  340A               	retlw	10
   929  18E8  340D               	retlw	13
   930  18E9  3400               	retlw	0
   931  18EA                     STR_1:	
   932  18EA  340A               	retlw	10
   933  18EB  340D               	retlw	13
   934  18EC  3464               	retlw	100	;'d'
   935  18ED  3465               	retlw	101	;'e'
   936  18EE  3473               	retlw	115	;'s'
   937  18EF  346C               	retlw	108	;'l'
   938  18F0  3469               	retlw	105	;'i'
   939  18F1  3467               	retlw	103	;'g'
   940  18F2  3461               	retlw	97	;'a'
   941  18F3  3464               	retlw	100	;'d'
   942  18F4  346F               	retlw	111	;'o'
   943  18F5  340A               	retlw	10
   944  18F6  340D               	retlw	13
   945  18F7  3400               	retlw	0
   946  18F8                     STR_2:	
   947  18F8  340A               	retlw	10
   948  18F9  340D               	retlw	13
   949  18FA  3470               	retlw	112	;'p'
   950  18FB  3477               	retlw	119	;'w'
   951  18FC  346D               	retlw	109	;'m'
   952  18FD  3420               	retlw	32	;' '
   953  18FE  343D               	retlw	61	;'='
   954  18FF  3420               	retlw	32	;' '
   955  1900  3433               	retlw	51	;'3'
   956  1901  3432               	retlw	50	;'2'
   957  1902  340A               	retlw	10
   958  1903  340D               	retlw	13
   959  1904  3400               	retlw	0
   960  1905                     STR_3:	
   961  1905  340A               	retlw	10
   962  1906  340D               	retlw	13
   963  1907  3470               	retlw	112	;'p'
   964  1908  3477               	retlw	119	;'w'
   965  1909  346D               	retlw	109	;'m'
   966  190A  3420               	retlw	32	;' '
   967  190B  343D               	retlw	61	;'='
   968  190C  3420               	retlw	32	;' '
   969  190D  3436               	retlw	54	;'6'
   970  190E  3434               	retlw	52	;'4'
   971  190F  340A               	retlw	10
   972  1910  340D               	retlw	13
   973  1911  3400               	retlw	0
   974  1912                     STR_17:	
   975  1912  3452               	retlw	82	;'R'
   976  1913  3450               	retlw	80	;'P'
   977  1914  344D               	retlw	77	;'M'
   978  1915  343A               	retlw	58	;':'
   979  1916  3420               	retlw	32	;' '
   980  1917  3400               	retlw	0
   981  1918                     STR_18:	
   982  1918  3450               	retlw	80	;'P'
   983  1919  3457               	retlw	87	;'W'
   984  191A  344D               	retlw	77	;'M'
   985  191B  343A               	retlw	58	;':'
   986  191C  3420               	retlw	32	;' '
   987  191D  3400               	retlw	0
   988  191E                     STR_14:	
   989  191E  3425               	retlw	37	;'%'
   990  191F  3430               	retlw	48	;'0'
   991  1920  3434               	retlw	52	;'4'
   992  1921  3464               	retlw	100	;'d'
   993  1922  3400               	retlw	0
   994  1923                     __end_of__stringdata:	
   995                           
   996                           ; #config settings
   997  0000                     
   998                           	psect	cinit
   999  0019                     start_initialization:	
  1000  0019                     __initialization:	
  1001                           
  1002                           ; Clear objects allocated to BANK1
  1003  0019  1383               	bcf	3,7	;select IRP bank0
  1004  001A  30A0               	movlw	low __pbssBANK1
  1005  001B  0084               	movwf	4
  1006  001C  30C7               	movlw	low (__pbssBANK1+39)
  1007  001D  160A  118A  20C8  120A  118A  	fcall	clear_ram0
  1008                           
  1009                           ; Clear objects allocated to BANK3
  1010  0022  1783               	bsf	3,7	;select IRP bank2
  1011  0023  3090               	movlw	low __pbssBANK3
  1012  0024  0084               	movwf	4
  1013  0025  30B2               	movlw	low (__pbssBANK3+34)
  1014  0026  160A  118A  20C8  120A  118A  	fcall	clear_ram0
  1015                           
  1016                           ; Initialize objects allocated to BANK3
  1017  002B  1683               	bsf	3,5	;RP0=1, select bank3
  1018  002C  1703               	bsf	3,6	;RP1=1, select bank3
  1019  002D  160A  118A  20AA  120A  118A  	fcall	__pidataBANK3	;fetch initializer
  1020  0032  00BD               	movwf	__pdataBANK3& (0+127)
  1021  0033  160A  118A  20AB  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
  1022  0038  00BE               	movwf	(__pdataBANK3+1)& (0+127)
  1023  0039  160A  118A  20AC  120A  118A  	fcall	__pidataBANK3+2	;fetch initializer
  1024  003E  00BF               	movwf	(__pdataBANK3+2)& (0+127)
  1025  003F  160A  118A  20AD  120A  118A  	fcall	__pidataBANK3+3	;fetch initializer
  1026  0044  00C0               	movwf	(__pdataBANK3+3)& (0+127)
  1027  0045  160A  118A  20AE  120A  118A  	fcall	__pidataBANK3+4	;fetch initializer
  1028  004A  00C1               	movwf	(__pdataBANK3+4)& (0+127)
  1029  004B  160A  118A  20AF  120A  118A  	fcall	__pidataBANK3+5	;fetch initializer
  1030  0050  00C2               	movwf	(__pdataBANK3+5)& (0+127)
  1031                           
  1032                           ; Initialize objects allocated to BANK1
  1033  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0053  120A  118A  27FC  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1036  0058  00E5               	movwf	__pdataBANK1& (0+127)
  1037  0059  120A  118A  27FD   	fcall	__pidataBANK1+1	;fetch initializer
  1038  005C  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1039  005D                     end_of_initialization:	
  1040                           ;End of C runtime variable initialization code
  1041                           
  1042  005D                     __end_of__initialization:	
  1043  005D  0183               	clrf	3
  1044  005E  120A  158A  2923   	ljmp	_main	;jump to C main() function
  1045                           
  1046                           	psect	bssBANK1
  1047  00A0                     __pbssBANK1:	
  1048  00A0                     _fitemp:	
  1049  00A0                     	ds	3
  1050  00A3                     _fop_rule1:	
  1051  00A3                     	ds	3
  1052  00A6                     _fop_rule2:	
  1053  00A6                     	ds	3
  1054  00A9                     _fop_rule3:	
  1055  00A9                     	ds	3
  1056  00AC                     _sum:	
  1057  00AC                     	ds	3
  1058  00AF                     _temp:	
  1059  00AF                     	ds	3
  1060  00B2                     _total_area:	
  1061  00B2                     	ds	3
  1062  00B5                     _x:	
  1063  00B5                     	ds	3
  1064  00B8                     _y:	
  1065  00B8                     	ds	3
  1066  00BB                     _ADCResult:	
  1067  00BB                     	ds	2
  1068  00BD                     _contagens_tm0:	
  1069  00BD                     	ds	2
  1070  00BF                     _deltaV:	
  1071  00BF                     	ds	2
  1072  00C1                     _pulsos:	
  1073  00C1                     	ds	2
  1074  00C3                     _pwm:	
  1075  00C3                     	ds	2
  1076  00C5                     _rpm:	
  1077  00C5                     	ds	2
  1078                           
  1079                           	psect	dataBANK1
  1080  00E5                     __pdataBANK1:	
  1081  00E5                     _pas_cooler:	
  1082  00E5                     	ds	2
  1083                           
  1084                           	psect	bssBANK3
  1085  0190                     __pbssBANK3:	
  1086  0190                     _ativa_fan:	
  1087  0190                     	ds	3
  1088  0193                     _derro:	
  1089  0193                     	ds	3
  1090  0196                     _contador_rb6:	
  1091  0196                     	ds	2
  1092  0198                     _status:	
  1093  0198                     	ds	2
  1094  019A                     _temp_lida:	
  1095  019A                     	ds	2
  1096  019C                     _tempo_rb6:	
  1097  019C                     	ds	2
  1098  019E                     _display_pwm:	
  1099  019E                     	ds	10
  1100  01A8                     _display_rpm:	
  1101  01A8                     	ds	10
  1102                           
  1103                           	psect	dataBANK3
  1104  01BD                     __pdataBANK3:	
  1105  01BD                     _setpoint:	
  1106  01BD                     	ds	3
  1107  01C0                     _tf:	
  1108  01C0                     	ds	3
  1109                           
  1110                           	psect	clrtext
  1111  10C8                     clear_ram0:	
  1112                           ;	Called with FSR containing the base address, and
  1113                           ;	W with the last address+1
  1114                           
  1115  10C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1116  10C9                     clrloop0:	
  1117  10C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1118  10CA  0A84               	incf	4,f	;increment pointer
  1119  10CB  0604               	xorwf	4,w	;XOR with final address
  1120  10CC  1903               	btfsc	3,2	;have we reached the end yet?
  1121  10CD  3400               	retlw	0	;all done for this memory range, return
  1122  10CE  0604               	xorwf	4,w	;XOR again to restore value
  1123  10CF  28C9               	goto	clrloop0	;do the next byte
  1124                           
  1125                           	psect	cstackBANK3
  1126  01B2                     __pcstackBANK3:	
  1127  01B2                     sprintf@ap:	
  1128                           
  1129                           ; 1 bytes @ 0x0
  1130  01B2                     	ds	1
  1131  01B3                     sprintf@prec:	
  1132                           
  1133                           ; 1 bytes @ 0x1
  1134  01B3                     	ds	1
  1135  01B4                     sprintf@_val:	
  1136                           
  1137                           ; 4 bytes @ 0x2
  1138  01B4                     	ds	4
  1139  01B8                     sprintf@flag:	
  1140                           
  1141                           ; 1 bytes @ 0x6
  1142  01B8                     	ds	1
  1143  01B9                     sprintf@width:	
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  01B9                     	ds	2
  1147  01BB                     sprintf@sp:	
  1148                           
  1149                           ; 1 bytes @ 0x9
  1150  01BB                     	ds	1
  1151  01BC                     sprintf@c:	
  1152                           
  1153                           ; 1 bytes @ 0xA
  1154  01BC                     	ds	1
  1155                           
  1156                           	psect	cstackBANK1
  1157  00C7                     __pcstackBANK1:	
  1158  00C7                     ??_ISR:	
  1159                           
  1160                           ; 0 bytes @ 0x0
  1161  00C7                     	ds	4
  1162  00CB                     ?_PWM_DutyCycle2:	
  1163  00CB                     ??_TIMER0_Set:	
  1164                           ; 0 bytes @ 0x4
  1165                           
  1166  00CB                     ??_TIMER0_Init:	
  1167                           ; 0 bytes @ 0x4
  1168                           
  1169  00CB                     ??_ADC_Init:	
  1170                           ; 0 bytes @ 0x4
  1171                           
  1172  00CB                     ??_PWM_Init:	
  1173                           ; 0 bytes @ 0x4
  1174                           
  1175  00CB                     ?_LCD_Cursor:	
  1176                           ; 0 bytes @ 0x4
  1177                           
  1178  00CB                     ?_PWM_DutyCycle1:	
  1179                           ; 0 bytes @ 0x4
  1180                           
  1181  00CB                     ??_isdigit:	
  1182                           ; 0 bytes @ 0x4
  1183                           
  1184  00CB                     ??_USART_WriteChar:	
  1185                           ; 0 bytes @ 0x4
  1186                           
  1187  00CB                     ??_LCD_WriteCmd:	
  1188                           ; 0 bytes @ 0x4
  1189                           
  1190  00CB                     ??_LCD_WriteData:	
  1191                           ; 0 bytes @ 0x4
  1192                           
  1193  00CB                     ?___wmul:	
  1194                           ; 0 bytes @ 0x4
  1195                           
  1196  00CB                     ?___lwdiv:	
  1197                           ; 2 bytes @ 0x4
  1198                           
  1199  00CB                     ?___aldiv:	
  1200                           ; 2 bytes @ 0x4
  1201                           
  1202  00CB                     USART_WriteChar@byte:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205  00CB                     TIMER0_Set@contagens:	
  1206                           ; 1 bytes @ 0x4
  1207                           
  1208  00CB                     LCD_Cursor@Col:	
  1209                           ; 1 bytes @ 0x4
  1210                           
  1211  00CB                     _isdigit$1449:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214  00CB                     PWM_DutyCycle1@valor:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217  00CB                     PWM_DutyCycle2@valor:	
  1218                           ; 2 bytes @ 0x4
  1219                           
  1220  00CB                     ___wmul@multiplier:	
  1221                           ; 2 bytes @ 0x4
  1222                           
  1223  00CB                     ___lwdiv@divisor:	
  1224                           ; 2 bytes @ 0x4
  1225                           
  1226  00CB                     ___aldiv@divisor:	
  1227                           ; 2 bytes @ 0x4
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x4
  1231  00CB                     	ds	1
  1232  00CC                     ?_USART_WriteString:	
  1233  00CC                     ??_LCD_Cursor:	
  1234                           ; 0 bytes @ 0x5
  1235                           
  1236  00CC                     LCD_WriteCmd@Byte:	
  1237                           ; 0 bytes @ 0x5
  1238                           
  1239  00CC                     LCD_WriteData@Byte:	
  1240                           ; 1 bytes @ 0x5
  1241                           
  1242  00CC                     isdigit@c:	
  1243                           ; 1 bytes @ 0x5
  1244                           
  1245  00CC                     USART_WriteString@str:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x5
  1250  00CC                     	ds	1
  1251  00CD                     ??_PWM_DutyCycle2:	
  1252  00CD                     ??_LCD_Init:	
  1253                           ; 0 bytes @ 0x6
  1254                           
  1255  00CD                     ?_LCD_WriteString:	
  1256                           ; 0 bytes @ 0x6
  1257                           
  1258  00CD                     ??_PWM_DutyCycle1:	
  1259                           ; 0 bytes @ 0x6
  1260                           
  1261  00CD                     ??_LCD_Clear:	
  1262                           ; 0 bytes @ 0x6
  1263                           
  1264  00CD                     LCD_Cursor@Row:	
  1265                           ; 0 bytes @ 0x6
  1266                           
  1267  00CD                     LCD_WriteString@Str:	
  1268                           ; 1 bytes @ 0x6
  1269                           
  1270  00CD                     ___wmul@multiplicand:	
  1271                           ; 2 bytes @ 0x6
  1272                           
  1273  00CD                     ___lwdiv@dividend:	
  1274                           ; 2 bytes @ 0x6
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x6
  1278  00CD                     	ds	1
  1279  00CE                     ??_USART_WriteString:	
  1280                           
  1281                           ; 0 bytes @ 0x7
  1282  00CE                     	ds	1
  1283  00CF                     ??_LCD_WriteString:	
  1284  00CF                     ??___wmul:	
  1285                           ; 0 bytes @ 0x8
  1286                           
  1287  00CF                     ??___lwdiv:	
  1288                           ; 0 bytes @ 0x8
  1289                           
  1290  00CF                     ___wmul@product:	
  1291                           ; 0 bytes @ 0x8
  1292                           
  1293  00CF                     ___aldiv@dividend:	
  1294                           ; 2 bytes @ 0x8
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x8
  1298  00CF                     	ds	1
  1299  00D0                     ___lwdiv@counter:	
  1300                           
  1301                           ; 1 bytes @ 0x9
  1302  00D0                     	ds	1
  1303  00D1                     ___lwdiv@quotient:	
  1304                           
  1305                           ; 2 bytes @ 0xA
  1306  00D1                     	ds	2
  1307  00D3                     ??___aldiv:	
  1308  00D3                     ?___lwmod:	
  1309                           ; 0 bytes @ 0xC
  1310                           
  1311  00D3                     ___lwmod@divisor:	
  1312                           ; 2 bytes @ 0xC
  1313                           
  1314                           
  1315                           ; 2 bytes @ 0xC
  1316  00D3                     	ds	1
  1317  00D4                     ___aldiv@counter:	
  1318                           
  1319                           ; 1 bytes @ 0xD
  1320  00D4                     	ds	1
  1321  00D5                     ___aldiv@sign:	
  1322  00D5                     ___lwmod@dividend:	
  1323                           ; 1 bytes @ 0xE
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0xE
  1327  00D5                     	ds	1
  1328  00D6                     ___aldiv@quotient:	
  1329                           
  1330                           ; 4 bytes @ 0xF
  1331  00D6                     	ds	1
  1332  00D7                     ??___lwmod:	
  1333                           
  1334                           ; 0 bytes @ 0x10
  1335  00D7                     	ds	1
  1336  00D8                     ___lwmod@counter:	
  1337                           
  1338                           ; 1 bytes @ 0x11
  1339  00D8                     	ds	1
  1340  00D9                     ?_sprintf:	
  1341  00D9                     sprintf@f:	
  1342                           ; 2 bytes @ 0x12
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x12
  1346  00D9                     	ds	1
  1347  00DA                     ?_USART_Init:	
  1348  00DA                     USART_Init@BaudRate:	
  1349                           ; 0 bytes @ 0x13
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x13
  1353  00DA                     	ds	3
  1354  00DD                     ??_sprintf:	
  1355                           
  1356                           ; 0 bytes @ 0x16
  1357  00DD                     	ds	1
  1358  00DE                     ??_USART_Init:	
  1359                           
  1360                           ; 0 bytes @ 0x17
  1361  00DE                     	ds	4
  1362  00E2                     ??_main:	
  1363                           
  1364                           ; 0 bytes @ 0x1B
  1365  00E2                     	ds	3
  1366                           
  1367                           	psect	cstackCOMMON
  1368  0070                     __pcstackCOMMON:	
  1369  0070                     ?_TIMER0_Set:	
  1370  0070                     ?_TIMER0_Init:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ?_ADC_Init:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0070                     ?_PWM_Init:	
  1377                           ; 0 bytes @ 0x0
  1378                           
  1379  0070                     ?_LCD_Init:	
  1380                           ; 0 bytes @ 0x0
  1381                           
  1382  0070                     ?_LCD_Clear:	
  1383                           ; 0 bytes @ 0x0
  1384                           
  1385  0070                     ?_isdigit:	
  1386                           ; 0 bytes @ 0x0
  1387                           
  1388  0070                     ?_Fuzzy:	
  1389                           ; 1 bit 
  1390                           
  1391  0070                     ?_ISR:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0070                     ?_main:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0070                     ?_USART_WriteChar:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0070                     ?_LCD_WriteCmd:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0070                     ?_LCD_WriteData:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0070                     ?___ftge:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0070                     ?i1_USART_WriteChar:	
  1410                           ; 1 bit 
  1411                           
  1412  0070                     ??i1_USART_WriteChar:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0070                     ?i1_TIMER0_Set:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0070                     ??i1_TIMER0_Set:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0070                     ?i1_PWM_DutyCycle2:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0070                     ?_USART_ReceiveChar:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0070                     ?i1___lwdiv:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?___ftpack:	
  1431                           ; 2 bytes @ 0x0
  1432                           
  1433  0070                     ?___ftneg:	
  1434                           ; 3 bytes @ 0x0
  1435                           
  1436  0070                     ?___fttol:	
  1437                           ; 3 bytes @ 0x0
  1438                           
  1439  0070                     i1USART_WriteChar@byte:	
  1440                           ; 4 bytes @ 0x0
  1441                           
  1442  0070                     i1TIMER0_Set@contagens:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     i1PWM_DutyCycle2@valor:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     i1___lwdiv@divisor:	
  1449                           ; 2 bytes @ 0x0
  1450                           
  1451  0070                     ___ftpack@arg:	
  1452                           ; 2 bytes @ 0x0
  1453                           
  1454  0070                     ___ftge@ff1:	
  1455                           ; 3 bytes @ 0x0
  1456                           
  1457  0070                     ___ftneg@f1:	
  1458                           ; 3 bytes @ 0x0
  1459                           
  1460  0070                     ___fttol@f1:	
  1461                           ; 3 bytes @ 0x0
  1462                           
  1463                           
  1464                           ; 3 bytes @ 0x0
  1465  0070                     	ds	1
  1466  0071                     ?i1_USART_WriteString:	
  1467  0071                     i1USART_WriteString@str:	
  1468                           ; 0 bytes @ 0x1
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x1
  1472  0071                     	ds	1
  1473  0072                     ??i1_PWM_DutyCycle2:	
  1474  0072                     i1___lwdiv@dividend:	
  1475                           ; 0 bytes @ 0x2
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0x2
  1479  0072                     	ds	1
  1480  0073                     ??_USART_ReceiveChar:	
  1481  0073                     ??___ftneg:	
  1482                           ; 0 bytes @ 0x3
  1483                           
  1484  0073                     ??i1_USART_WriteString:	
  1485                           ; 0 bytes @ 0x3
  1486                           
  1487  0073                     ___ftpack@exp:	
  1488                           ; 0 bytes @ 0x3
  1489                           
  1490  0073                     ___ftge@ff2:	
  1491                           ; 1 bytes @ 0x3
  1492                           
  1493                           
  1494                           ; 3 bytes @ 0x3
  1495  0073                     	ds	1
  1496  0074                     ??___fttol:	
  1497  0074                     ??i1___lwdiv:	
  1498                           ; 0 bytes @ 0x4
  1499                           
  1500  0074                     USART_ReceiveChar@byte:	
  1501                           ; 0 bytes @ 0x4
  1502                           
  1503  0074                     ___ftpack@sign:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x4
  1508  0074                     	ds	1
  1509  0075                     ??___ftpack:	
  1510  0075                     i1___lwdiv@quotient:	
  1511                           ; 0 bytes @ 0x5
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x5
  1515  0075                     	ds	1
  1516  0076                     ??___ftge:	
  1517                           
  1518                           ; 0 bytes @ 0x6
  1519  0076                     	ds	1
  1520  0077                     i1___lwdiv@counter:	
  1521                           
  1522                           ; 1 bytes @ 0x7
  1523  0077                     	ds	1
  1524  0078                     ?i1___wmul:	
  1525  0078                     ?___ftmul:	
  1526                           ; 2 bytes @ 0x8
  1527                           
  1528  0078                     ?___lwtoft:	
  1529                           ; 3 bytes @ 0x8
  1530                           
  1531  0078                     ___fttol@sign1:	
  1532                           ; 3 bytes @ 0x8
  1533                           
  1534  0078                     ___lwtoft@c:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537  0078                     i1___wmul@multiplier:	
  1538                           ; 2 bytes @ 0x8
  1539                           
  1540  0078                     ___ftmul@f1:	
  1541                           ; 2 bytes @ 0x8
  1542                           
  1543                           
  1544                           ; 3 bytes @ 0x8
  1545  0078                     	ds	1
  1546  0079                     ___fttol@lval:	
  1547                           
  1548                           ; 4 bytes @ 0x9
  1549  0079                     	ds	1
  1550  007A                     i1___wmul@multiplicand:	
  1551                           
  1552                           ; 2 bytes @ 0xA
  1553  007A                     	ds	1
  1554  007B                     ??___lwtoft:	
  1555  007B                     ___ftmul@f2:	
  1556                           ; 0 bytes @ 0xB
  1557                           
  1558                           
  1559                           ; 3 bytes @ 0xB
  1560  007B                     	ds	1
  1561  007C                     ??_max_val:	
  1562  007C                     ??i1___wmul:	
  1563                           ; 0 bytes @ 0xC
  1564                           
  1565  007C                     i1___wmul@product:	
  1566                           ; 0 bytes @ 0xC
  1567                           
  1568                           
  1569                           ; 2 bytes @ 0xC
  1570  007C                     	ds	1
  1571  007D                     ___fttol@exp1:	
  1572                           
  1573                           ; 1 bytes @ 0xD
  1574  007D                     	ds	1
  1575  007E                     ??_trimf:	
  1576  007E                     ??_trapmf:	
  1577                           ; 0 bytes @ 0xE
  1578                           
  1579  007E                     ??_Fuzzy:	
  1580                           ; 0 bytes @ 0xE
  1581                           
  1582                           
  1583                           	psect	cstackBANK0
  1584  0020                     __pcstackBANK0:	
  1585                           ; 0 bytes @ 0xE
  1586                           
  1587  0020                     ??___ftmul:	
  1588  0020                     ?_max_val:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0020                     max_val@a:	
  1592                           ; 3 bytes @ 0x0
  1593                           
  1594                           
  1595                           ; 3 bytes @ 0x0
  1596  0020                     	ds	3
  1597  0023                     max_val@b:	
  1598                           
  1599                           ; 3 bytes @ 0x3
  1600  0023                     	ds	1
  1601  0024                     ___ftmul@exp:	
  1602                           
  1603                           ; 1 bytes @ 0x4
  1604  0024                     	ds	1
  1605  0025                     ___ftmul@f3_as_product:	
  1606                           
  1607                           ; 3 bytes @ 0x5
  1608  0025                     	ds	3
  1609  0028                     ___ftmul@cntr:	
  1610                           
  1611                           ; 1 bytes @ 0x8
  1612  0028                     	ds	1
  1613  0029                     ___ftmul@sign:	
  1614                           
  1615                           ; 1 bytes @ 0x9
  1616  0029                     	ds	1
  1617  002A                     ?___ftadd:	
  1618  002A                     ___ftadd@f1:	
  1619                           ; 3 bytes @ 0xA
  1620                           
  1621                           
  1622                           ; 3 bytes @ 0xA
  1623  002A                     	ds	3
  1624  002D                     ___ftadd@f2:	
  1625                           
  1626                           ; 3 bytes @ 0xD
  1627  002D                     	ds	3
  1628  0030                     ??___ftadd:	
  1629                           
  1630                           ; 0 bytes @ 0x10
  1631  0030                     	ds	4
  1632  0034                     ___ftadd@sign:	
  1633                           
  1634                           ; 1 bytes @ 0x14
  1635  0034                     	ds	1
  1636  0035                     ___ftadd@exp2:	
  1637                           
  1638                           ; 1 bytes @ 0x15
  1639  0035                     	ds	1
  1640  0036                     ___ftadd@exp1:	
  1641                           
  1642                           ; 1 bytes @ 0x16
  1643  0036                     	ds	1
  1644  0037                     ?___ftdiv:	
  1645  0037                     ___ftdiv@f2:	
  1646                           ; 3 bytes @ 0x17
  1647                           
  1648                           
  1649                           ; 3 bytes @ 0x17
  1650  0037                     	ds	3
  1651  003A                     ___ftdiv@f1:	
  1652                           
  1653                           ; 3 bytes @ 0x1A
  1654  003A                     	ds	3
  1655  003D                     ??___ftdiv:	
  1656                           
  1657                           ; 0 bytes @ 0x1D
  1658  003D                     	ds	4
  1659  0041                     ___ftdiv@cntr:	
  1660                           
  1661                           ; 1 bytes @ 0x21
  1662  0041                     	ds	1
  1663  0042                     ___ftdiv@f3:	
  1664                           
  1665                           ; 3 bytes @ 0x22
  1666  0042                     	ds	3
  1667  0045                     ___ftdiv@exp:	
  1668                           
  1669                           ; 1 bytes @ 0x25
  1670  0045                     	ds	1
  1671  0046                     ___ftdiv@sign:	
  1672                           
  1673                           ; 1 bytes @ 0x26
  1674  0046                     	ds	1
  1675  0047                     ?_trimf:	
  1676  0047                     ?_trapmf:	
  1677                           ; 3 bytes @ 0x27
  1678                           
  1679  0047                     trimf@x:	
  1680                           ; 3 bytes @ 0x27
  1681                           
  1682  0047                     trapmf@x:	
  1683                           ; 3 bytes @ 0x27
  1684                           
  1685                           
  1686                           ; 3 bytes @ 0x27
  1687  0047                     	ds	3
  1688  004A                     trimf@a:	
  1689  004A                     trapmf@a:	
  1690                           ; 3 bytes @ 0x2A
  1691                           
  1692                           
  1693                           ; 3 bytes @ 0x2A
  1694  004A                     	ds	3
  1695  004D                     trimf@b:	
  1696  004D                     trapmf@b:	
  1697                           ; 3 bytes @ 0x2D
  1698                           
  1699                           
  1700                           ; 3 bytes @ 0x2D
  1701  004D                     	ds	3
  1702  0050                     trimf@c:	
  1703  0050                     trapmf@c:	
  1704                           ; 3 bytes @ 0x30
  1705                           
  1706                           
  1707                           ; 3 bytes @ 0x30
  1708  0050                     	ds	3
  1709  0053                     trimf@ua:	
  1710  0053                     trapmf@d:	
  1711                           ; 3 bytes @ 0x33
  1712                           
  1713                           
  1714                           ; 3 bytes @ 0x33
  1715  0053                     	ds	3
  1716  0056                     trapmf@ua:	
  1717                           
  1718                           ; 3 bytes @ 0x36
  1719  0056                     	ds	3
  1720  0059                     Fuzzy@a:	
  1721                           
  1722                           ; 2 bytes @ 0x39
  1723  0059                     	ds	2
  1724  005B                     Fuzzy@a_232:	
  1725                           
  1726                           ; 2 bytes @ 0x3B
  1727  005B                     	ds	2
  1728  005D                     Fuzzy@a_233:	
  1729                           
  1730                           ; 2 bytes @ 0x3D
  1731  005D                     	ds	2
  1732  005F                     Fuzzy@a_234:	
  1733                           
  1734                           ; 2 bytes @ 0x3F
  1735  005F                     	ds	2
  1736  0061                     Fuzzy@a_235:	
  1737                           
  1738                           ; 2 bytes @ 0x41
  1739  0061                     	ds	2
  1740  0063                     Fuzzy@tip:	
  1741                           
  1742                           ; 3 bytes @ 0x43
  1743  0063                     	ds	3
  1744  0066                     Fuzzy@mantem:	
  1745                           
  1746                           ; 3 bytes @ 0x46
  1747  0066                     	ds	3
  1748  0069                     Fuzzy@reduz:	
  1749                           
  1750                           ; 3 bytes @ 0x49
  1751  0069                     	ds	3
  1752  006C                     Fuzzy@aumenta:	
  1753                           
  1754                           ; 3 bytes @ 0x4C
  1755  006C                     	ds	3
  1756                           
  1757                           	psect	maintext
  1758  0923                     __pmaintext:	
  1759 ;;
  1760 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1761 ;;
  1762 ;; *************** function _main *****************
  1763 ;; Defined at:
  1764 ;;		line 468 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 17F/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       3       0       0
  1781 ;;      Totals:         0       0       3       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels required when called:    7
  1784 ;; This function calls:
  1785 ;;		_ADC_Init
  1786 ;;		_LCD_Clear
  1787 ;;		_LCD_Cursor
  1788 ;;		_LCD_Init
  1789 ;;		_LCD_WriteString
  1790 ;;		_PWM_DutyCycle1
  1791 ;;		_PWM_DutyCycle2
  1792 ;;		_PWM_Init
  1793 ;;		_TIMER0_Init
  1794 ;;		_TIMER0_Set
  1795 ;;		_USART_Init
  1796 ;;		_USART_WriteString
  1797 ;;		_sprintf
  1798 ;; This function is called by:
  1799 ;;		Startup code after reset
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _main
  1805  0923                     _main:	
  1806                           
  1807                           ;main.c: 470: TRISA = 0b00000001;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811  0923  3001               	movlw	1
  1812  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1814  0926  0085               	movwf	5	;volatile
  1815                           
  1816                           ;main.c: 471: PORTA = 0b00000001;
  1817  0927  3001               	movlw	1
  1818  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1820  092A  0085               	movwf	5	;volatile
  1821                           
  1822                           ;main.c: 472: TRISB = 0b00000000;
  1823  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1824  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1825  092D  0186               	clrf	6	;volatile
  1826                           
  1827                           ;main.c: 473: PORTB = 0b00000000;
  1828  092E  1283               	bcf	3,5	;RP0=0, select bank0
  1829  092F  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0930  0186               	clrf	6	;volatile
  1831                           
  1832                           ;main.c: 474: TRISC = 0b10000001;
  1833  0931  3081               	movlw	129
  1834  0932  1683               	bsf	3,5	;RP0=1, select bank1
  1835  0933  1303               	bcf	3,6	;RP1=0, select bank1
  1836  0934  0087               	movwf	7	;volatile
  1837                           
  1838                           ;main.c: 475: PORTC = 0b11000000;
  1839  0935  30C0               	movlw	192
  1840  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0938  0087               	movwf	7	;volatile
  1843                           
  1844                           ;main.c: 476: TRISD = 0b00000000;
  1845  0939  1683               	bsf	3,5	;RP0=1, select bank1
  1846  093A  1303               	bcf	3,6	;RP1=0, select bank1
  1847  093B  0188               	clrf	8	;volatile
  1848                           
  1849                           ;main.c: 477: PORTD = 0b00000000;
  1850  093C  1283               	bcf	3,5	;RP0=0, select bank0
  1851  093D  1303               	bcf	3,6	;RP1=0, select bank0
  1852  093E  0188               	clrf	8	;volatile
  1853                           
  1854                           ;main.c: 478: TRISE = 0b00000000;
  1855  093F  1683               	bsf	3,5	;RP0=1, select bank1
  1856  0940  1303               	bcf	3,6	;RP1=0, select bank1
  1857  0941  0189               	clrf	9	;volatile
  1858                           
  1859                           ;main.c: 479: PORTE = 0b00000000;
  1860  0942  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0943  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0944  0189               	clrf	9	;volatile
  1863                           
  1864                           ;main.c: 482: T1CON = 0x03;
  1865  0945  3003               	movlw	3
  1866  0946  0090               	movwf	16	;volatile
  1867                           
  1868                           ;main.c: 483: TMR1L = 0x00;
  1869  0947  018E               	clrf	14	;volatile
  1870                           
  1871                           ;main.c: 484: TMR1H = 0x00;
  1872  0948  018F               	clrf	15	;volatile
  1873                           
  1874                           ;main.c: 487: USART_Init(115200);
  1875  0949  3000               	movlw	0
  1876  094A  1683               	bsf	3,5	;RP0=1, select bank1
  1877  094B  1303               	bcf	3,6	;RP1=0, select bank1
  1878  094C  00DD               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1879  094D  3001               	movlw	1
  1880  094E  00DC               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1881  094F  30C2               	movlw	194
  1882  0950  00DB               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1883  0951  3000               	movlw	0
  1884  0952  00DA               	movwf	USART_Init@BaudRate^(0+128)
  1885  0953  160A  118A  2390  120A  158A  	fcall	_USART_Init
  1886                           
  1887                           ;main.c: 488: TIMER0_Init();
  1888  0958  160A  118A  20D0  120A  158A  	fcall	_TIMER0_Init
  1889                           
  1890                           ;main.c: 489: ADC_Init();
  1891  095D  160A  118A  20F8  120A  158A  	fcall	_ADC_Init
  1892                           
  1893                           ;main.c: 490: PWM_Init();
  1894  0962  160A  118A  2231  120A  158A  	fcall	_PWM_Init
  1895                           
  1896                           ;main.c: 491: LCD_Init();
  1897  0967  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1898                           
  1899                           ;main.c: 494: INTCONbits.PEIE = 1;
  1900  096C  170B               	bsf	11,6	;volatile
  1901                           
  1902                           ;main.c: 495: INTCONbits.GIE = 1;
  1903  096D  178B               	bsf	11,7	;volatile
  1904                           
  1905                           ;main.c: 498: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1906  096E  3044               	movlw	low (STR_11| (0+32768))
  1907  096F  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0970  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0971  00CC               	movwf	USART_WriteString@str^(0+128)
  1910  0972  3098               	movlw	high (STR_11| (0+32768))
  1911  0973  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1912  0974  160A  118A  22AB  120A  158A  	fcall	_USART_WriteString
  1913                           
  1914                           ;main.c: 499: USART_WriteString("USART: 115.200bps\n\r");
  1915  0979  3061               	movlw	low (STR_12| (0+32768))
  1916  097A  1683               	bsf	3,5	;RP0=1, select bank1
  1917  097B  1303               	bcf	3,6	;RP1=0, select bank1
  1918  097C  00CC               	movwf	USART_WriteString@str^(0+128)
  1919  097D  3098               	movlw	high (STR_12| (0+32768))
  1920  097E  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  1921  097F  160A  118A  22AB  120A  158A  	fcall	_USART_WriteString
  1922                           
  1923                           ;main.c: 502: LCD_Init();
  1924  0984  160A  118A  249E  120A  158A  	fcall	_LCD_Init
  1925                           
  1926                           ;main.c: 503: LCD_Cursor(0,0);
  1927  0989  1683               	bsf	3,5	;RP0=1, select bank1
  1928  098A  1303               	bcf	3,6	;RP1=0, select bank1
  1929  098B  01CB               	clrf	LCD_Cursor@Col^(0+128)
  1930  098C  3000               	movlw	0
  1931  098D  160A  118A  2189  120A  158A  	fcall	_LCD_Cursor
  1932                           
  1933                           ;main.c: 504: LCD_WriteString("Inicializando...");
  1934  0992  3075               	movlw	low (STR_13| (0+32768))
  1935  0993  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0994  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0995  00CD               	movwf	LCD_WriteString@Str^(0+128)
  1938  0996  3098               	movlw	high (STR_13| (0+32768))
  1939  0997  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  1940  0998  160A  118A  227A  120A  158A  	fcall	_LCD_WriteString
  1941                           
  1942                           ;main.c: 507: PWM_DutyCycle1(0);
  1943  099D  3000               	movlw	0
  1944  099E  1683               	bsf	3,5	;RP0=1, select bank1
  1945  099F  1303               	bcf	3,6	;RP1=0, select bank1
  1946  09A0  00CB               	movwf	PWM_DutyCycle1@valor^(0+128)
  1947  09A1  3000               	movlw	0
  1948  09A2  00CC               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1949  09A3  160A  118A  21A9  120A  158A  	fcall	_PWM_DutyCycle1
  1950                           
  1951                           ;main.c: 508: PWM_DutyCycle2(0);
  1952  09A8  3000               	movlw	0
  1953  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  1954  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  1955  09AB  00CB               	movwf	PWM_DutyCycle2@valor^(0+128)
  1956  09AC  3000               	movlw	0
  1957  09AD  00CC               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1958  09AE  160A  118A  21CA  120A  158A  	fcall	_PWM_DutyCycle2
  1959                           
  1960                           ;main.c: 511: TIMER0_Set(238);
  1961  09B3  30EE               	movlw	238
  1962  09B4  160A  118A  20C0  120A  158A  	fcall	_TIMER0_Set
  1963                           
  1964                           ;main.c: 514: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1965  09B9  3018               	movlw	24
  1966  09BA  1683               	bsf	3,5	;RP0=1, select bank1
  1967  09BB  1303               	bcf	3,6	;RP1=0, select bank1
  1968  09BC  00E4               	movwf	(??_main^(0+128)+2)
  1969  09BD  3061               	movlw	97
  1970  09BE  00E3               	movwf	(??_main^(0+128)+1)
  1971  09BF  306E               	movlw	110
  1972  09C0  00E2               	movwf	??_main^(0+128)
  1973  09C1                     u4527:	
  1974  09C1  0BE2               	decfsz	??_main^(0+128),f
  1975  09C2  29C1               	goto	u4527
  1976  09C3  0BE3               	decfsz	(??_main^(0+128)+1),f
  1977  09C4  29C1               	goto	u4527
  1978  09C5  0BE4               	decfsz	(??_main^(0+128)+2),f
  1979  09C6  29C1               	goto	u4527
  1980  09C7  0000               	nop
  1981  09C8                     l202:	
  1982                           ;main.c: 517: while(1)
  1983                           
  1984                           
  1985                           ;main.c: 518: {
  1986                           ;main.c: 522: sprintf(display_rpm,"%04d", rpm);
  1987  09C8  301E               	movlw	low (STR_14| (0+32768))
  1988  09C9  1683               	bsf	3,5	;RP0=1, select bank1
  1989  09CA  1303               	bcf	3,6	;RP1=0, select bank1
  1990  09CB  00D9               	movwf	sprintf@f^(0+128)
  1991  09CC  3099               	movlw	high (STR_14| (0+32768))
  1992  09CD  00DA               	movwf	(sprintf@f^(0+128)+1)
  1993  09CE  0846               	movf	(_rpm+1)^(0+128),w
  1994  09CF  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  1995  09D0  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  1996  09D1  0845               	movf	_rpm^(0+128),w
  1997  09D2  01DB               	clrf	(?_sprintf^(0+128)+2)
  1998  09D3  07DB               	addwf	(?_sprintf^(0+128)+2),f
  1999  09D4  30A8               	movlw	_display_rpm& (0+255)
  2000  09D5  120A  158A  255F  120A  158A  	fcall	_sprintf
  2001                           
  2002                           ;main.c: 523: sprintf(display_pwm,"%04d", pwm);
  2003  09DA  301E               	movlw	low (STR_14| (0+32768))
  2004  09DB  1683               	bsf	3,5	;RP0=1, select bank1
  2005  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  2006  09DD  00D9               	movwf	sprintf@f^(0+128)
  2007  09DE  3099               	movlw	high (STR_14| (0+32768))
  2008  09DF  00DA               	movwf	(sprintf@f^(0+128)+1)
  2009  09E0  0844               	movf	(_pwm+1)^(0+128),w
  2010  09E1  01DC               	clrf	((?_sprintf+1)^(0+128)+2)
  2011  09E2  07DC               	addwf	((?_sprintf+1)^(0+128)+2),f
  2012  09E3  0843               	movf	_pwm^(0+128),w
  2013  09E4  01DB               	clrf	(?_sprintf^(0+128)+2)
  2014  09E5  07DB               	addwf	(?_sprintf^(0+128)+2),f
  2015  09E6  309E               	movlw	_display_pwm& (0+255)
  2016  09E7  120A  158A  255F  120A  158A  	fcall	_sprintf
  2017                           
  2018                           ;main.c: 527: USART_WriteString(display_rpm);
  2019  09EC  30A8               	movlw	_display_rpm& (0+255)
  2020  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  2021  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  2022  09EF  00CC               	movwf	USART_WriteString@str^(0+128)
  2023  09F0  3001               	movlw	1
  2024  09F1  00CD               	movwf	(USART_WriteString@str+1)^(0+128)
  2025  09F2  160A  118A  22AB  120A  158A  	fcall	_USART_WriteString
  2026                           
  2027                           ;main.c: 528: USART_WriteString("\n\r");
  2028  09F7  3092               	movlw	low ((STR_9+12)| (0+32768))
  2029  09F8  1683               	bsf	3,5	;RP0=1, select bank1
  2030  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  2031  09FA  00CC               	movwf	USART_WriteString@str^(0+128)
  2032  09FB  3098               	movlw	high ((STR_9+12)| (0+32768))
  2033  09FC  00CD               	movwf	(USART_WriteString@str^(0+128)+1)
  2034  09FD  160A  118A  22AB  120A  158A  	fcall	_USART_WriteString
  2035                           
  2036                           ;main.c: 531: LCD_Clear();
  2037  0A02  120A  118A  27D3  120A  158A  	fcall	_LCD_Clear
  2038                           
  2039                           ;main.c: 532: LCD_Cursor(0,0);
  2040  0A07  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0A08  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0A09  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2043  0A0A  3000               	movlw	0
  2044  0A0B  160A  118A  2189  120A  158A  	fcall	_LCD_Cursor
  2045                           
  2046                           ;main.c: 533: LCD_WriteString("RPM: ");
  2047  0A10  3012               	movlw	low (STR_17| (0+32768))
  2048  0A11  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0A12  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0A13  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2051  0A14  3099               	movlw	high (STR_17| (0+32768))
  2052  0A15  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2053  0A16  160A  118A  227A  120A  158A  	fcall	_LCD_WriteString
  2054                           
  2055                           ;main.c: 534: LCD_Cursor(0,6);
  2056  0A1B  3006               	movlw	6
  2057  0A1C  1683               	bsf	3,5	;RP0=1, select bank1
  2058  0A1D  1303               	bcf	3,6	;RP1=0, select bank1
  2059  0A1E  00E2               	movwf	??_main^(0+128)
  2060  0A1F  0862               	movf	??_main^(0+128),w
  2061  0A20  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2062  0A21  3000               	movlw	0
  2063  0A22  160A  118A  2189  120A  158A  	fcall	_LCD_Cursor
  2064                           
  2065                           ;main.c: 535: LCD_WriteString(display_rpm);
  2066  0A27  30A8               	movlw	_display_rpm& (0+255)
  2067  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0A2A  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2070  0A2B  3001               	movlw	1
  2071  0A2C  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2072  0A2D  160A  118A  227A  120A  158A  	fcall	_LCD_WriteString
  2073                           
  2074                           ;main.c: 536: LCD_Cursor(1,0);
  2075  0A32  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0A33  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0A34  01CB               	clrf	LCD_Cursor@Col^(0+128)
  2078  0A35  3001               	movlw	1
  2079  0A36  160A  118A  2189  120A  158A  	fcall	_LCD_Cursor
  2080                           
  2081                           ;main.c: 537: LCD_WriteString("PWM: ");
  2082  0A3B  3018               	movlw	low (STR_18| (0+32768))
  2083  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  2084  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  2085  0A3E  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2086  0A3F  3099               	movlw	high (STR_18| (0+32768))
  2087  0A40  00CE               	movwf	(LCD_WriteString@Str^(0+128)+1)
  2088  0A41  160A  118A  227A  120A  158A  	fcall	_LCD_WriteString
  2089                           
  2090                           ;main.c: 538: LCD_Cursor(1,6);
  2091  0A46  3006               	movlw	6
  2092  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0A49  00E2               	movwf	??_main^(0+128)
  2095  0A4A  0862               	movf	??_main^(0+128),w
  2096  0A4B  00CB               	movwf	LCD_Cursor@Col^(0+128)
  2097  0A4C  3001               	movlw	1
  2098  0A4D  160A  118A  2189  120A  158A  	fcall	_LCD_Cursor
  2099                           
  2100                           ;main.c: 539: LCD_WriteString(display_pwm);
  2101  0A52  309E               	movlw	_display_pwm& (0+255)
  2102  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0A55  00CD               	movwf	LCD_WriteString@Str^(0+128)
  2105  0A56  3001               	movlw	1
  2106  0A57  00CE               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2107  0A58  160A  118A  227A  120A  158A  	fcall	_LCD_WriteString
  2108                           
  2109                           ;main.c: 541: _delay((unsigned long)((200)*(18432000/4000.0)));
  2110  0A5D  3005               	movlw	5
  2111  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0A60  00E4               	movwf	(??_main^(0+128)+2)
  2114  0A61  30AD               	movlw	173
  2115  0A62  00E3               	movwf	(??_main^(0+128)+1)
  2116  0A63  30E0               	movlw	224
  2117  0A64  00E2               	movwf	??_main^(0+128)
  2118  0A65                     u4537:	
  2119  0A65  0BE2               	decfsz	??_main^(0+128),f
  2120  0A66  2A65               	goto	u4537
  2121  0A67  0BE3               	decfsz	(??_main^(0+128)+1),f
  2122  0A68  2A65               	goto	u4537
  2123  0A69  0BE4               	decfsz	(??_main^(0+128)+2),f
  2124  0A6A  2A65               	goto	u4537
  2125  0A6B  29C8               	goto	l202
  2126  0A6C                     __end_of_main:	
  2127                           
  2128                           	psect	text1
  2129  0D5F                     __ptext1:	
  2130 ;; *************** function _sprintf *****************
  2131 ;; Defined at:
  2132 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  sp              1    wreg     PTR unsigned char 
  2135 ;;		 -> display_pwm(10), display_rpm(10), 
  2136 ;;  f               2   18[BANK1 ] PTR const unsigned char 
  2137 ;;		 -> STR_15(5), STR_14(5), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  sp              1    9[BANK3 ] PTR unsigned char 
  2140 ;;		 -> display_pwm(10), display_rpm(10), 
  2141 ;;  _val            4    2[BANK3 ] struct .
  2142 ;;  width           2    7[BANK3 ] int 
  2143 ;;  c               1   10[BANK3 ] char 
  2144 ;;  flag            1    6[BANK3 ] unsigned char 
  2145 ;;  prec            1    1[BANK3 ] char 
  2146 ;;  ap              1    0[BANK3 ] PTR void [1]
  2147 ;;		 -> ?_sprintf(2), 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2   18[BANK1 ] int 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       4       0       0
  2158 ;;      Locals:         0       0       0      11       0
  2159 ;;      Temps:          0       0       3       0       0
  2160 ;;      Totals:         0       0       7      11       0
  2161 ;;Total ram usage:       18 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    6
  2164 ;; This function calls:
  2165 ;;		___lwdiv
  2166 ;;		___lwmod
  2167 ;;		___wmul
  2168 ;;		_isdigit
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _sprintf
  2176  0D5F                     _sprintf:	
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2180                           ;sprintf@sp stored from wreg
  2181  0D5F  1683               	bsf	3,5	;RP0=1, select bank3
  2182  0D60  1703               	bsf	3,6	;RP1=1, select bank3
  2183  0D61  00BB               	movwf	sprintf@sp^(0+384)
  2184                           
  2185                           ;doprnt.c: 494: va_list ap;
  2186                           ;doprnt.c: 499: signed char c;
  2187                           ;doprnt.c: 501: int width;
  2188                           ;doprnt.c: 506: signed char prec;
  2189                           ;doprnt.c: 508: unsigned char flag;
  2190                           ;doprnt.c: 527: union {
  2191                           ;doprnt.c: 528: unsigned int _val;
  2192                           ;doprnt.c: 529: struct {
  2193                           ;doprnt.c: 530: const char * _cp;
  2194                           ;doprnt.c: 531: unsigned _len;
  2195                           ;doprnt.c: 532: } _str;
  2196                           ;doprnt.c: 533: } _val;
  2197                           ;doprnt.c: 542: *ap = __va_start();
  2198  0D62  30DB               	movlw	(?_sprintf+2)& (0+255)
  2199  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0D65  00DD               	movwf	??_sprintf^(0+128)
  2202  0D66  085D               	movf	??_sprintf^(0+128),w
  2203  0D67  1683               	bsf	3,5	;RP0=1, select bank3
  2204  0D68  1703               	bsf	3,6	;RP1=1, select bank3
  2205  0D69  00B2               	movwf	sprintf@ap^(0+384)
  2206  0D6A                     l3532:	
  2207                           ;doprnt.c: 545: while(c = *f++) {
  2208                           
  2209  0D6A  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0D6B  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0D6C  085A               	movf	(sprintf@f+1)^(0+128),w
  2212  0D6D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2213  0D6E  0859               	movf	sprintf@f^(0+128),w
  2214  0D6F  00DD               	movwf	??_sprintf^(0+128)
  2215  0D70  0AD9               	incf	sprintf@f^(0+128),f
  2216  0D71  1903               	skipnz
  2217  0D72  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2218  0D73  085E               	movf	(??_sprintf+1)^(0+128),w
  2219  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0D76  00FF               	movwf	127
  2222  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0D79  085D               	movf	??_sprintf^(0+128),w
  2225  0D7A  0084               	movwf	4
  2226  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0D7D  160A  158A  2000  120A  158A  	fcall	stringtab
  2229  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0D84  00DF               	movwf	(??_sprintf+2)^(0+128)
  2232  0D85  085F               	movf	(??_sprintf+2)^(0+128),w
  2233  0D86  1683               	bsf	3,5	;RP0=1, select bank3
  2234  0D87  1703               	bsf	3,6	;RP1=1, select bank3
  2235  0D88  00BC               	movwf	sprintf@c^(0+384)
  2236  0D89  08BC               	movf	sprintf@c^(0+384),f
  2237  0D8A  1903               	btfsc	3,2
  2238  0D8B  2FF9               	goto	l3534
  2239                           
  2240                           ;doprnt.c: 547: if(c != '%')
  2241  0D8C  083C               	movf	sprintf@c^(0+384),w
  2242  0D8D  3A25               	xorlw	37
  2243  0D8E  1903               	skipnz
  2244  0D8F  2DA4               	goto	l3438
  2245                           
  2246                           ;doprnt.c: 549: {
  2247                           ;doprnt.c: 550: ((*sp++ = (c)));
  2248  0D90  083C               	movf	sprintf@c^(0+384),w
  2249  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0D93  00DD               	movwf	??_sprintf^(0+128)
  2252  0D94  1683               	bsf	3,5	;RP0=1, select bank3
  2253  0D95  1703               	bsf	3,6	;RP1=1, select bank3
  2254  0D96  083B               	movf	sprintf@sp^(0+384),w
  2255  0D97  0084               	movwf	4
  2256  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  2257  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  2258  0D9A  085D               	movf	??_sprintf^(0+128),w
  2259  0D9B  1783               	bsf	3,7	;select IRP bank2
  2260  0D9C  0080               	movwf	0
  2261  0D9D  3001               	movlw	1
  2262  0D9E  00DD               	movwf	??_sprintf^(0+128)
  2263  0D9F  085D               	movf	??_sprintf^(0+128),w
  2264  0DA0  1683               	bsf	3,5	;RP0=1, select bank3
  2265  0DA1  1703               	bsf	3,6	;RP1=1, select bank3
  2266  0DA2  07BB               	addwf	sprintf@sp^(0+384),f
  2267                           
  2268                           ;doprnt.c: 551: continue;
  2269  0DA3  2D6A               	goto	l3532
  2270  0DA4                     l3438:	
  2271                           
  2272                           ;doprnt.c: 552: }
  2273                           ;doprnt.c: 555: width = 0;
  2274  0DA4  01B9               	clrf	sprintf@width^(0+384)
  2275  0DA5  01BA               	clrf	(sprintf@width+1)^(0+384)
  2276                           
  2277                           ;doprnt.c: 557: flag = 0;
  2278  0DA6  01B8               	clrf	sprintf@flag^(0+384)
  2279                           
  2280                           ;doprnt.c: 560: switch(*f) {
  2281                           
  2282                           ;doprnt.c: 559: for(;;) {
  2283  0DA7  2DB1               	goto	l3442
  2284  0DA8                     l479:	
  2285                           ;doprnt.c: 588: case '0':
  2286                           
  2287                           
  2288                           ;doprnt.c: 589: flag |= 0x04;
  2289  0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  2290  0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  2291  0DAA  1538               	bsf	sprintf@flag^(0+384),2
  2292                           
  2293                           ;doprnt.c: 590: f++;
  2294  0DAB  3001               	movlw	1
  2295  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  2297  0DAE  07D9               	addwf	sprintf@f^(0+128),f
  2298  0DAF  1803               	skipnc
  2299  0DB0  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2300  0DB1                     l3442:	
  2301                           ;doprnt.c: 593: }
  2302                           
  2303                           ;doprnt.c: 591: continue;
  2304                           
  2305  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  2307  0DB3  085A               	movf	(sprintf@f+1)^(0+128),w
  2308  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0DB6  00FF               	movwf	127
  2311  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  2312  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  2313  0DB9  0859               	movf	sprintf@f^(0+128),w
  2314  0DBA  0084               	movwf	4
  2315  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0DBD  160A  158A  2000  120A  158A  	fcall	stringtab
  2318                           
  2319                           ; Switch size 1, requested type "space"
  2320                           ; Number of cases is 1, Range of values is 48 to 48
  2321                           ; switch strategies available:
  2322                           ; Name         Instructions Cycles
  2323                           ; simple_byte            4     3 (average)
  2324                           ; direct_byte           14    11 (fixed)
  2325                           ; jumptable            263     9 (fixed)
  2326                           ;	Chosen strategy is simple_byte
  2327  0DC2  3A30               	xorlw	48	; case 48
  2328  0DC3  1903               	skipnz
  2329  0DC4  2DA8               	goto	l479
  2330  0DC5  2DC6               	goto	l3444
  2331  0DC6                     l3444:	
  2332                           ;doprnt.c: 595: }
  2333                           
  2334                           ;doprnt.c: 594: break;
  2335                           
  2336                           
  2337                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2338  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0DC8  085A               	movf	(sprintf@f+1)^(0+128),w
  2341  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0DCB  00FF               	movwf	127
  2344  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2345  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2346  0DCE  0859               	movf	sprintf@f^(0+128),w
  2347  0DCF  0084               	movwf	4
  2348  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0DD2  160A  158A  2000  120A  158A  	fcall	stringtab
  2351  0DD7  160A  118A  20E8  120A  158A  	fcall	_isdigit
  2352  0DDC  1C03               	btfss	3,0
  2353  0DDD  2E4A               	goto	l3458
  2354                           
  2355                           ;doprnt.c: 607: width = 0;
  2356  0DDE  1683               	bsf	3,5	;RP0=1, select bank3
  2357  0DDF  1703               	bsf	3,6	;RP1=1, select bank3
  2358  0DE0  01B9               	clrf	sprintf@width^(0+384)
  2359  0DE1  01BA               	clrf	(sprintf@width+1)^(0+384)
  2360  0DE2                     l3448:	
  2361                           ;doprnt.c: 608: do {
  2362                           
  2363                           
  2364                           ;doprnt.c: 609: width *= 10;
  2365  0DE2  300A               	movlw	10
  2366  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  2368  0DE5  00CB               	movwf	___wmul@multiplier^(0+128)
  2369  0DE6  3000               	movlw	0
  2370  0DE7  00CC               	movwf	(___wmul@multiplier^(0+128)+1)
  2371  0DE8  1683               	bsf	3,5	;RP0=1, select bank3
  2372  0DE9  1703               	bsf	3,6	;RP1=1, select bank3
  2373  0DEA  083A               	movf	(sprintf@width+1)^(0+384),w
  2374  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0DED  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
  2377  0DEE  07CE               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2378  0DEF  1683               	bsf	3,5	;RP0=1, select bank3
  2379  0DF0  1703               	bsf	3,6	;RP1=1, select bank3
  2380  0DF1  0839               	movf	sprintf@width^(0+384),w
  2381  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  2383  0DF4  01CD               	clrf	___wmul@multiplicand^(0+128)
  2384  0DF5  07CD               	addwf	___wmul@multiplicand^(0+128),f
  2385  0DF6  160A  118A  2255  120A  158A  	fcall	___wmul
  2386  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0DFD  084C               	movf	(?___wmul+1)^(0+128),w
  2389  0DFE  1683               	bsf	3,5	;RP0=1, select bank3
  2390  0DFF  1703               	bsf	3,6	;RP1=1, select bank3
  2391  0E00  01BA               	clrf	(sprintf@width+1)^(0+384)
  2392  0E01  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2393  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0E04  084B               	movf	?___wmul^(0+128),w
  2396  0E05  1683               	bsf	3,5	;RP0=1, select bank3
  2397  0E06  1703               	bsf	3,6	;RP1=1, select bank3
  2398  0E07  01B9               	clrf	sprintf@width^(0+384)
  2399  0E08  07B9               	addwf	sprintf@width^(0+384),f
  2400                           
  2401                           ;doprnt.c: 610: width += *f++ - '0';
  2402  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0E0B  085A               	movf	(sprintf@f+1)^(0+128),w
  2405  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0E0E  00FF               	movwf	127
  2408  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0E11  0859               	movf	sprintf@f^(0+128),w
  2411  0E12  0084               	movwf	4
  2412  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0E15  160A  158A  2000  120A  158A  	fcall	stringtab
  2415  0E1A  3ED0               	addlw	208
  2416  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0E1D  00DD               	movwf	??_sprintf^(0+128)
  2419  0E1E  30FF               	movlw	255
  2420  0E1F  1803               	skipnc
  2421  0E20  3000               	movlw	0
  2422  0E21  00DE               	movwf	(??_sprintf^(0+128)+1)
  2423  0E22  085D               	movf	??_sprintf^(0+128),w
  2424  0E23  1683               	bsf	3,5	;RP0=1, select bank3
  2425  0E24  1703               	bsf	3,6	;RP1=1, select bank3
  2426  0E25  07B9               	addwf	sprintf@width^(0+384),f
  2427  0E26  1803               	skipnc
  2428  0E27  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2429  0E28  1683               	bsf	3,5	;RP0=1, select bank1
  2430  0E29  1303               	bcf	3,6	;RP1=0, select bank1
  2431  0E2A  085E               	movf	(??_sprintf+1)^(0+128),w
  2432  0E2B  1683               	bsf	3,5	;RP0=1, select bank3
  2433  0E2C  1703               	bsf	3,6	;RP1=1, select bank3
  2434  0E2D  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2435  0E2E  3001               	movlw	1
  2436  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0E31  07D9               	addwf	sprintf@f^(0+128),f
  2439  0E32  1803               	skipnc
  2440  0E33  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2441                           
  2442                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2443  0E34  085A               	movf	(sprintf@f+1)^(0+128),w
  2444  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0E37  00FF               	movwf	127
  2447  0E38  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0E39  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0E3A  0859               	movf	sprintf@f^(0+128),w
  2450  0E3B  0084               	movwf	4
  2451  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0E3E  160A  158A  2000  120A  158A  	fcall	stringtab
  2454  0E43  160A  118A  20E8  120A  158A  	fcall	_isdigit
  2455  0E48  1803               	btfsc	3,0
  2456  0E49  2DE2               	goto	l3448
  2457  0E4A                     l3458:	
  2458                           ;doprnt.c: 831: }
  2459                           
  2460                           ;doprnt.c: 822: continue;
  2461                           
  2462                           ;doprnt.c: 811: default:
  2463                           
  2464                           ;doprnt.c: 707: case 'i':
  2465                           ;doprnt.c: 708: break;
  2466                           
  2467                           ;doprnt.c: 706: case 'd':
  2468                           
  2469                           ;doprnt.c: 647: goto alldone;
  2470                           
  2471                           ;doprnt.c: 646: case 0:
  2472                           
  2473                           ;doprnt.c: 617: }
  2474                           ;doprnt.c: 644: switch(c = *f++) {
  2475                           
  2476  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0E4C  085A               	movf	(sprintf@f+1)^(0+128),w
  2479  0E4D  00DE               	movwf	(??_sprintf^(0+128)+1)
  2480  0E4E  0859               	movf	sprintf@f^(0+128),w
  2481  0E4F  00DD               	movwf	??_sprintf^(0+128)
  2482  0E50  0AD9               	incf	sprintf@f^(0+128),f
  2483  0E51  1903               	skipnz
  2484  0E52  0ADA               	incf	(sprintf@f+1)^(0+128),f
  2485  0E53  085E               	movf	(??_sprintf+1)^(0+128),w
  2486  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0E56  00FF               	movwf	127
  2489  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0E59  085D               	movf	??_sprintf^(0+128),w
  2492  0E5A  0084               	movwf	4
  2493  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0E5D  160A  158A  2000  120A  158A  	fcall	stringtab
  2496  0E62  1683               	bsf	3,5	;RP0=1, select bank3
  2497  0E63  1703               	bsf	3,6	;RP1=1, select bank3
  2498  0E64  00BC               	movwf	sprintf@c^(0+384)
  2499                           
  2500                           ; Switch size 1, requested type "space"
  2501                           ; Number of cases is 3, Range of values is 0 to 105
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte           10     6 (average)
  2505                           ; jumptable            260     6 (fixed)
  2506                           ;	Chosen strategy is simple_byte
  2507  0E65  3A00               	xorlw	0	; case 0
  2508  0E66  1903               	skipnz
  2509  0E67  2FF9               	goto	l3534
  2510  0E68  3A64               	xorlw	100	; case 100
  2511  0E69  1903               	skipnz
  2512  0E6A  2E6F               	goto	l3460
  2513  0E6B  3A0D               	xorlw	13	; case 105
  2514  0E6C  1903               	skipnz
  2515  0E6D  2E6F               	goto	l3460
  2516  0E6E  2D6A               	goto	l3532
  2517  0E6F                     l3460:	
  2518                           
  2519                           ;doprnt.c: 1262: {
  2520                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2521  0E6F  1683               	bsf	3,5	;RP0=1, select bank3
  2522  0E70  1703               	bsf	3,6	;RP1=1, select bank3
  2523  0E71  0832               	movf	sprintf@ap^(0+384),w
  2524  0E72  0084               	movwf	4
  2525  0E73  1383               	bcf	3,7	;select IRP bank0
  2526  0E74  0800               	movf	0,w
  2527  0E75  00B4               	movwf	sprintf@_val^(0+384)
  2528  0E76  0A84               	incf	4,f
  2529  0E77  0800               	movf	0,w
  2530  0E78  00B5               	movwf	(sprintf@_val+1)^(0+384)
  2531  0E79  3002               	movlw	2
  2532  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0E7C  00DD               	movwf	??_sprintf^(0+128)
  2535  0E7D  085D               	movf	??_sprintf^(0+128),w
  2536  0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  2537  0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  2538  0E80  07B2               	addwf	sprintf@ap^(0+384),f
  2539                           
  2540                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2541  0E81  1FB5               	btfss	(sprintf@_val+1)^(0+384),7
  2542  0E82  2E90               	goto	l3470
  2543                           
  2544                           ;doprnt.c: 1271: flag |= 0x03;
  2545  0E83  3003               	movlw	3
  2546  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0E85  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0E86  00DD               	movwf	??_sprintf^(0+128)
  2549  0E87  085D               	movf	??_sprintf^(0+128),w
  2550  0E88  1683               	bsf	3,5	;RP0=1, select bank3
  2551  0E89  1703               	bsf	3,6	;RP1=1, select bank3
  2552  0E8A  04B8               	iorwf	sprintf@flag^(0+384),f
  2553                           
  2554                           ;doprnt.c: 1272: _val._val = -_val._val;
  2555  0E8B  09B4               	comf	sprintf@_val^(0+384),f
  2556  0E8C  09B5               	comf	(sprintf@_val+1)^(0+384),f
  2557  0E8D  0AB4               	incf	sprintf@_val^(0+384),f
  2558  0E8E  1903               	skipnz
  2559  0E8F  0AB5               	incf	(sprintf@_val+1)^(0+384),f
  2560  0E90                     l3470:	
  2561                           
  2562                           ;doprnt.c: 1273: }
  2563                           ;doprnt.c: 1275: }
  2564                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2565  0E90  01BC               	clrf	sprintf@c^(0+384)
  2566  0E91  0ABC               	incf	sprintf@c^(0+384),f
  2567  0E92  083C               	movf	sprintf@c^(0+384),w
  2568  0E93  3A05               	xorlw	5
  2569  0E94  1903               	btfsc	3,2
  2570  0E95  2ECF               	goto	l3482
  2571  0E96                     l3474:	
  2572                           
  2573                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2574  0E96  083C               	movf	sprintf@c^(0+384),w
  2575  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  2576  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  2577  0E99  00DD               	movwf	??_sprintf^(0+128)
  2578  0E9A  075D               	addwf	??_sprintf^(0+128),w
  2579  0E9B  3E12               	addlw	low (_dpowers| (0+32768))
  2580  0E9C  0084               	movwf	4
  2581  0E9D  3098               	movlw	high (_dpowers| (0+32768))
  2582  0E9E  1803               	skipnc
  2583  0E9F  3E01               	addlw	1
  2584  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0EA2  00FF               	movwf	127
  2587  0EA3  160A  158A  2000  120A  158A  	fcall	stringtab
  2588  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  2590  0EAA  00DE               	movwf	(??_sprintf+1)^(0+128)
  2591  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0EAD  160A  158A  2000  120A  158A  	fcall	stringtab
  2594  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  2596  0EB4  00DF               	movwf	((??_sprintf+1)^(0+128)+1)
  2597  0EB5  085F               	movf	(??_sprintf+2)^(0+128),w
  2598  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  2599  0EB7  1703               	bsf	3,6	;RP1=1, select bank3
  2600  0EB8  0235               	subwf	(sprintf@_val+1)^(0+384),w
  2601  0EB9  1D03               	skipz
  2602  0EBA  2EC1               	goto	u4385
  2603  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0EBD  085E               	movf	(??_sprintf+1)^(0+128),w
  2606  0EBE  1683               	bsf	3,5	;RP0=1, select bank3
  2607  0EBF  1703               	bsf	3,6	;RP1=1, select bank3
  2608  0EC0  0234               	subwf	sprintf@_val^(0+384),w
  2609  0EC1                     u4385:	
  2610  0EC1  1C03               	btfss	3,0
  2611  0EC2  2ECF               	goto	l3482
  2612                           
  2613                           ;doprnt.c: 1316: break;
  2614  0EC3  3001               	movlw	1
  2615  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  2617  0EC6  00DD               	movwf	??_sprintf^(0+128)
  2618  0EC7  085D               	movf	??_sprintf^(0+128),w
  2619  0EC8  1683               	bsf	3,5	;RP0=1, select bank3
  2620  0EC9  1703               	bsf	3,6	;RP1=1, select bank3
  2621  0ECA  07BC               	addwf	sprintf@c^(0+384),f
  2622  0ECB  083C               	movf	sprintf@c^(0+384),w
  2623  0ECC  3A05               	xorlw	5
  2624  0ECD  1D03               	skipz
  2625  0ECE  2E96               	goto	l3474
  2626  0ECF                     l3482:	
  2627                           
  2628                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2629  0ECF  083A               	movf	(sprintf@width+1)^(0+384),w
  2630  0ED0  0439               	iorwf	sprintf@width^(0+384),w
  2631  0ED1  1903               	skipnz
  2632  0ED2  2EDD               	goto	l497
  2633  0ED3  0838               	movf	sprintf@flag^(0+384),w
  2634  0ED4  3903               	andlw	3
  2635  0ED5  1903               	btfsc	3,2
  2636  0ED6  2EDD               	goto	l497
  2637                           
  2638                           ;doprnt.c: 1355: width--;
  2639  0ED7  30FF               	movlw	255
  2640  0ED8  07B9               	addwf	sprintf@width^(0+384),f
  2641  0ED9  1803               	skipnc
  2642  0EDA  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2643  0EDB  30FF               	movlw	255
  2644  0EDC  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2645  0EDD                     l497:	
  2646                           
  2647                           ;doprnt.c: 1390: if(width > c)
  2648  0EDD  083C               	movf	sprintf@c^(0+384),w
  2649  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0EE0  00DD               	movwf	??_sprintf^(0+128)
  2652  0EE1  01DE               	clrf	(??_sprintf^(0+128)+1)
  2653  0EE2  1BDD               	btfsc	??_sprintf^(0+128),7
  2654  0EE3  03DE               	decf	(??_sprintf^(0+128)+1),f
  2655  0EE4  085E               	movf	(??_sprintf+1)^(0+128),w
  2656  0EE5  3A80               	xorlw	128
  2657  0EE6  00DF               	movwf	(??_sprintf+2)^(0+128)
  2658  0EE7  1683               	bsf	3,5	;RP0=1, select bank3
  2659  0EE8  1703               	bsf	3,6	;RP1=1, select bank3
  2660  0EE9  083A               	movf	(sprintf@width+1)^(0+384),w
  2661  0EEA  3A80               	xorlw	128
  2662  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0EED  025F               	subwf	(??_sprintf+2)^(0+128),w
  2665  0EEE  1D03               	skipz
  2666  0EEF  2EF6               	goto	u4425
  2667  0EF0  1683               	bsf	3,5	;RP0=1, select bank3
  2668  0EF1  1703               	bsf	3,6	;RP1=1, select bank3
  2669  0EF2  0839               	movf	sprintf@width^(0+384),w
  2670  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0EF5  025D               	subwf	??_sprintf^(0+128),w
  2673  0EF6                     u4425:	
  2674  0EF6  1803               	skipnc
  2675  0EF7  2F0E               	goto	l3490
  2676                           
  2677                           ;doprnt.c: 1391: width -= c;
  2678  0EF8  1683               	bsf	3,5	;RP0=1, select bank3
  2679  0EF9  1703               	bsf	3,6	;RP1=1, select bank3
  2680  0EFA  083C               	movf	sprintf@c^(0+384),w
  2681  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0EFD  00DD               	movwf	??_sprintf^(0+128)
  2684  0EFE  01DE               	clrf	(??_sprintf^(0+128)+1)
  2685  0EFF  1BDD               	btfsc	??_sprintf^(0+128),7
  2686  0F00  03DE               	decf	(??_sprintf^(0+128)+1),f
  2687  0F01  085D               	movf	??_sprintf^(0+128),w
  2688  0F02  1683               	bsf	3,5	;RP0=1, select bank3
  2689  0F03  1703               	bsf	3,6	;RP1=1, select bank3
  2690  0F04  02B9               	subwf	sprintf@width^(0+384),f
  2691  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0F06  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0F07  085E               	movf	(??_sprintf+1)^(0+128),w
  2694  0F08  1683               	bsf	3,5	;RP0=1, select bank3
  2695  0F09  1703               	bsf	3,6	;RP1=1, select bank3
  2696  0F0A  1C03               	skipc
  2697  0F0B  03BA               	decf	(sprintf@width+1)^(0+384),f
  2698  0F0C  02BA               	subwf	(sprintf@width+1)^(0+384),f
  2699  0F0D  2F12               	goto	l3492
  2700  0F0E                     l3490:	
  2701                           
  2702                           ;doprnt.c: 1392: else
  2703                           ;doprnt.c: 1393: width = 0;
  2704  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2705  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2706  0F10  01B9               	clrf	sprintf@width^(0+384)
  2707  0F11  01BA               	clrf	(sprintf@width+1)^(0+384)
  2708  0F12                     l3492:	
  2709                           
  2710                           ;doprnt.c: 1396: if(flag & 0x04) {
  2711  0F12  1D38               	btfss	sprintf@flag^(0+384),2
  2712  0F13  2F49               	goto	l3508
  2713                           
  2714                           ;doprnt.c: 1401: if(flag & 0x03)
  2715  0F14  0838               	movf	sprintf@flag^(0+384),w
  2716  0F15  3903               	andlw	3
  2717  0F16  1903               	btfsc	3,2
  2718  0F17  2F2B               	goto	l3500
  2719                           
  2720                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2721  0F18  302D               	movlw	45
  2722  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0F1B  00DD               	movwf	??_sprintf^(0+128)
  2725  0F1C  1683               	bsf	3,5	;RP0=1, select bank3
  2726  0F1D  1703               	bsf	3,6	;RP1=1, select bank3
  2727  0F1E  083B               	movf	sprintf@sp^(0+384),w
  2728  0F1F  0084               	movwf	4
  2729  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0F22  085D               	movf	??_sprintf^(0+128),w
  2732  0F23  1783               	bsf	3,7	;select IRP bank2
  2733  0F24  0080               	movwf	0
  2734  0F25  3001               	movlw	1
  2735  0F26  00DD               	movwf	??_sprintf^(0+128)
  2736  0F27  085D               	movf	??_sprintf^(0+128),w
  2737  0F28  1683               	bsf	3,5	;RP0=1, select bank3
  2738  0F29  1703               	bsf	3,6	;RP1=1, select bank3
  2739  0F2A  07BB               	addwf	sprintf@sp^(0+384),f
  2740  0F2B                     l3500:	
  2741                           
  2742                           ;doprnt.c: 1424: if(width)
  2743  0F2B  083A               	movf	(sprintf@width+1)^(0+384),w
  2744  0F2C  0439               	iorwf	sprintf@width^(0+384),w
  2745  0F2D  1903               	skipnz
  2746  0F2E  2F81               	goto	l3522
  2747                           
  2748                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2749                           
  2750                           ;doprnt.c: 1425: do
  2751  0F2F  3030               	movlw	48
  2752  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  2753  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  2754  0F32  00DD               	movwf	??_sprintf^(0+128)
  2755  0F33  1683               	bsf	3,5	;RP0=1, select bank3
  2756  0F34  1703               	bsf	3,6	;RP1=1, select bank3
  2757  0F35  083B               	movf	sprintf@sp^(0+384),w
  2758  0F36  0084               	movwf	4
  2759  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  2761  0F39  085D               	movf	??_sprintf^(0+128),w
  2762  0F3A  1783               	bsf	3,7	;select IRP bank2
  2763  0F3B  0080               	movwf	0
  2764  0F3C  3001               	movlw	1
  2765  0F3D  00DD               	movwf	??_sprintf^(0+128)
  2766  0F3E  085D               	movf	??_sprintf^(0+128),w
  2767  0F3F  1683               	bsf	3,5	;RP0=1, select bank3
  2768  0F40  1703               	bsf	3,6	;RP1=1, select bank3
  2769  0F41  07BB               	addwf	sprintf@sp^(0+384),f
  2770                           
  2771                           ;doprnt.c: 1427: while(--width);
  2772  0F42  30FF               	movlw	255
  2773  0F43  07B9               	addwf	sprintf@width^(0+384),f
  2774  0F44  1803               	skipnc
  2775  0F45  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2776  0F46  30FF               	movlw	255
  2777  0F47  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2778  0F48  2F2B               	goto	l3500
  2779  0F49                     l3508:	
  2780                           ;doprnt.c: 1429: } else
  2781                           
  2782                           
  2783                           ;doprnt.c: 1431: {
  2784                           ;doprnt.c: 1433: if(width
  2785                           ;doprnt.c: 1437: )
  2786  0F49  083A               	movf	(sprintf@width+1)^(0+384),w
  2787  0F4A  0439               	iorwf	sprintf@width^(0+384),w
  2788  0F4B  1903               	skipnz
  2789  0F4C  2F6A               	goto	l3516
  2790  0F4D                     l3510:	
  2791                           ;doprnt.c: 1438: do
  2792                           
  2793                           
  2794                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2795  0F4D  3020               	movlw	32
  2796  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0F50  00DD               	movwf	??_sprintf^(0+128)
  2799  0F51  1683               	bsf	3,5	;RP0=1, select bank3
  2800  0F52  1703               	bsf	3,6	;RP1=1, select bank3
  2801  0F53  083B               	movf	sprintf@sp^(0+384),w
  2802  0F54  0084               	movwf	4
  2803  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0F57  085D               	movf	??_sprintf^(0+128),w
  2806  0F58  1783               	bsf	3,7	;select IRP bank2
  2807  0F59  0080               	movwf	0
  2808  0F5A  3001               	movlw	1
  2809  0F5B  00DD               	movwf	??_sprintf^(0+128)
  2810  0F5C  085D               	movf	??_sprintf^(0+128),w
  2811  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  2812  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  2813  0F5F  07BB               	addwf	sprintf@sp^(0+384),f
  2814                           
  2815                           ;doprnt.c: 1440: while(--width);
  2816  0F60  30FF               	movlw	255
  2817  0F61  07B9               	addwf	sprintf@width^(0+384),f
  2818  0F62  1803               	skipnc
  2819  0F63  0ABA               	incf	(sprintf@width+1)^(0+384),f
  2820  0F64  30FF               	movlw	255
  2821  0F65  07BA               	addwf	(sprintf@width+1)^(0+384),f
  2822  0F66  083A               	movf	(sprintf@width+1)^(0+384),w
  2823  0F67  0439               	iorwf	sprintf@width^(0+384),w
  2824  0F68  1D03               	skipz
  2825  0F69  2F4D               	goto	l3510
  2826  0F6A                     l3516:	
  2827                           
  2828                           ;doprnt.c: 1447: if(flag & 0x03)
  2829  0F6A  0838               	movf	sprintf@flag^(0+384),w
  2830  0F6B  3903               	andlw	3
  2831  0F6C  1903               	btfsc	3,2
  2832  0F6D  2F81               	goto	l3522
  2833                           
  2834                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2835  0F6E  302D               	movlw	45
  2836  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0F71  00DD               	movwf	??_sprintf^(0+128)
  2839  0F72  1683               	bsf	3,5	;RP0=1, select bank3
  2840  0F73  1703               	bsf	3,6	;RP1=1, select bank3
  2841  0F74  083B               	movf	sprintf@sp^(0+384),w
  2842  0F75  0084               	movwf	4
  2843  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  2845  0F78  085D               	movf	??_sprintf^(0+128),w
  2846  0F79  1783               	bsf	3,7	;select IRP bank2
  2847  0F7A  0080               	movwf	0
  2848  0F7B  3001               	movlw	1
  2849  0F7C  00DD               	movwf	??_sprintf^(0+128)
  2850  0F7D  085D               	movf	??_sprintf^(0+128),w
  2851  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2852  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2853  0F80  07BB               	addwf	sprintf@sp^(0+384),f
  2854  0F81                     l3522:	
  2855                           
  2856                           ;doprnt.c: 1478: }
  2857                           ;doprnt.c: 1481: prec = c;
  2858  0F81  083C               	movf	sprintf@c^(0+384),w
  2859  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2860  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2861  0F84  00DD               	movwf	??_sprintf^(0+128)
  2862  0F85  085D               	movf	??_sprintf^(0+128),w
  2863  0F86  1683               	bsf	3,5	;RP0=1, select bank3
  2864  0F87  1703               	bsf	3,6	;RP1=1, select bank3
  2865  0F88  00B3               	movwf	sprintf@prec^(0+384)
  2866  0F89                     l3530:	
  2867                           ;doprnt.c: 1483: while(prec--) {
  2868                           
  2869  0F89  30FF               	movlw	-1
  2870  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0F8C  00DD               	movwf	??_sprintf^(0+128)
  2873  0F8D  085D               	movf	??_sprintf^(0+128),w
  2874  0F8E  1683               	bsf	3,5	;RP0=1, select bank3
  2875  0F8F  1703               	bsf	3,6	;RP1=1, select bank3
  2876  0F90  07B3               	addwf	sprintf@prec^(0+384),f
  2877  0F91  0833               	movf	sprintf@prec^(0+384),w
  2878  0F92  3AFF               	xorlw	-1
  2879  0F93  1903               	btfsc	3,2
  2880  0F94  2D6A               	goto	l3532
  2881                           
  2882                           ;doprnt.c: 1487: {
  2883                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2884  0F95  300A               	movlw	10
  2885  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2887  0F98  00D3               	movwf	___lwmod@divisor^(0+128)
  2888  0F99  3000               	movlw	0
  2889  0F9A  00D4               	movwf	(___lwmod@divisor^(0+128)+1)
  2890  0F9B  1683               	bsf	3,5	;RP0=1, select bank3
  2891  0F9C  1703               	bsf	3,6	;RP1=1, select bank3
  2892  0F9D  0833               	movf	sprintf@prec^(0+384),w
  2893  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2895  0FA0  00DD               	movwf	??_sprintf^(0+128)
  2896  0FA1  075D               	addwf	??_sprintf^(0+128),w
  2897  0FA2  3E12               	addlw	low (_dpowers| (0+32768))
  2898  0FA3  0084               	movwf	4
  2899  0FA4  3098               	movlw	high (_dpowers| (0+32768))
  2900  0FA5  1803               	skipnc
  2901  0FA6  3E01               	addlw	1
  2902  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0FA9  00FF               	movwf	127
  2905  0FAA  160A  158A  2000  120A  158A  	fcall	stringtab
  2906  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0FB1  00CB               	movwf	___lwdiv@divisor^(0+128)
  2909  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0FB4  160A  158A  2000  120A  158A  	fcall	stringtab
  2912  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  2913  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  2914  0FBB  00CC               	movwf	(___lwdiv@divisor+1)^(0+128)
  2915  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  2916  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  2917  0FBE  0835               	movf	(sprintf@_val+1)^(0+384),w
  2918  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0FC1  01CE               	clrf	(___lwdiv@dividend+1)^(0+128)
  2921  0FC2  07CE               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2922  0FC3  1683               	bsf	3,5	;RP0=1, select bank3
  2923  0FC4  1703               	bsf	3,6	;RP1=1, select bank3
  2924  0FC5  0834               	movf	sprintf@_val^(0+384),w
  2925  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0FC8  01CD               	clrf	___lwdiv@dividend^(0+128)
  2928  0FC9  07CD               	addwf	___lwdiv@dividend^(0+128),f
  2929  0FCA  160A  118A  2350  120A  158A  	fcall	___lwdiv
  2930  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2932  0FD1  084C               	movf	(?___lwdiv+1)^(0+128),w
  2933  0FD2  01D6               	clrf	(___lwmod@dividend+1)^(0+128)
  2934  0FD3  07D6               	addwf	(___lwmod@dividend+1)^(0+128),f
  2935  0FD4  084B               	movf	?___lwdiv^(0+128),w
  2936  0FD5  01D5               	clrf	___lwmod@dividend^(0+128)
  2937  0FD6  07D5               	addwf	___lwmod@dividend^(0+128),f
  2938  0FD7  160A  118A  22DC  120A  158A  	fcall	___lwmod
  2939  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0FDE  0853               	movf	?___lwmod^(0+128),w
  2942  0FDF  3E30               	addlw	48
  2943  0FE0  00DE               	movwf	(??_sprintf+1)^(0+128)
  2944  0FE1  085E               	movf	(??_sprintf+1)^(0+128),w
  2945  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  2946  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  2947  0FE4  00BC               	movwf	sprintf@c^(0+384)
  2948                           
  2949                           ;doprnt.c: 1532: }
  2950                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2951  0FE5  083C               	movf	sprintf@c^(0+384),w
  2952  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2953  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2954  0FE8  00DD               	movwf	??_sprintf^(0+128)
  2955  0FE9  1683               	bsf	3,5	;RP0=1, select bank3
  2956  0FEA  1703               	bsf	3,6	;RP1=1, select bank3
  2957  0FEB  083B               	movf	sprintf@sp^(0+384),w
  2958  0FEC  0084               	movwf	4
  2959  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  2960  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  2961  0FEF  085D               	movf	??_sprintf^(0+128),w
  2962  0FF0  1783               	bsf	3,7	;select IRP bank2
  2963  0FF1  0080               	movwf	0
  2964  0FF2  3001               	movlw	1
  2965  0FF3  00DD               	movwf	??_sprintf^(0+128)
  2966  0FF4  085D               	movf	??_sprintf^(0+128),w
  2967  0FF5  1683               	bsf	3,5	;RP0=1, select bank3
  2968  0FF6  1703               	bsf	3,6	;RP1=1, select bank3
  2969  0FF7  07BB               	addwf	sprintf@sp^(0+384),f
  2970  0FF8  2F89               	goto	l3530
  2971  0FF9                     l3534:	
  2972                           ;doprnt.c: 1534: }
  2973                           ;doprnt.c: 1542: }
  2974                           ;doprnt.c: 1544: alldone:
  2975                           
  2976                           
  2977                           ;doprnt.c: 1547: *sp = 0;
  2978  0FF9  1683               	bsf	3,5	;RP0=1, select bank3
  2979  0FFA  1703               	bsf	3,6	;RP1=1, select bank3
  2980  0FFB  083B               	movf	sprintf@sp^(0+384),w
  2981  0FFC  0084               	movwf	4
  2982  0FFD  1783               	bsf	3,7	;select IRP bank2
  2983  0FFE  0180               	clrf	0
  2984  0FFF  0008               	return
  2985  1000                     __end_of_sprintf:	
  2986                           ;doprnt.c: 1549: return 0;
  2987                           ;	Return value of _sprintf is never used
  2988                           
  2989                           
  2990                           	psect	text2
  2991  10E8                     __ptext2:	
  2992 ;; *************** function _isdigit *****************
  2993 ;; Defined at:
  2994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  c               1    5[BANK1 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         0       0       2       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       0       2       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    5
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_sprintf
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _isdigit
  3024  10E8                     _isdigit:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3028                           ;isdigit@c stored from wreg
  3029  10E8  1683               	bsf	3,5	;RP0=1, select bank1
  3030  10E9  1303               	bcf	3,6	;RP1=0, select bank1
  3031  10EA  00CC               	movwf	isdigit@c^(0+128)
  3032  10EB  01CB               	clrf	_isdigit$1449^(0+128)
  3033  10EC  303A               	movlw	58
  3034  10ED  024C               	subwf	isdigit@c^(0+128),w
  3035  10EE  1803               	skipnc
  3036  10EF  28F6               	goto	l3366
  3037  10F0  3030               	movlw	48
  3038  10F1  024C               	subwf	isdigit@c^(0+128),w
  3039  10F2  1C03               	skipc
  3040  10F3  28F6               	goto	l3366
  3041  10F4  01CB               	clrf	_isdigit$1449^(0+128)
  3042  10F5  0ACB               	incf	_isdigit$1449^(0+128),f
  3043  10F6                     l3366:	
  3044  10F6  0C4B               	rrf	_isdigit$1449^(0+128),w
  3045  10F7  0008               	return
  3046  10F8                     __end_of_isdigit:	
  3047                           
  3048                           	psect	text3
  3049  1255                     __ptext3:	
  3050 ;; *************** function ___wmul *****************
  3051 ;; Defined at:
  3052 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  multiplier      2    4[BANK1 ] unsigned int 
  3055 ;;  multiplicand    2    6[BANK1 ] unsigned int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  product         2    8[BANK1 ] unsigned int 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2    4[BANK1 ] unsigned int 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       4       0       0
  3068 ;;      Locals:         0       0       2       0       0
  3069 ;;      Temps:          0       0       0       0       0
  3070 ;;      Totals:         0       0       6       0       0
  3071 ;;Total ram usage:        6 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    5
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_sprintf
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function ___wmul
  3083  1255                     ___wmul:	
  3084                           
  3085                           ;incstack = 0
  3086                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3087  1255  1683               	bsf	3,5	;RP0=1, select bank1
  3088  1256  1303               	bcf	3,6	;RP1=0, select bank1
  3089  1257  01CF               	clrf	___wmul@product^(0+128)
  3090  1258  01D0               	clrf	(___wmul@product+1)^(0+128)
  3091  1259                     l3372:	
  3092  1259  1C4B               	btfss	___wmul@multiplier^(0+128),0
  3093  125A  2A61               	goto	l598
  3094  125B  084D               	movf	___wmul@multiplicand^(0+128),w
  3095  125C  07CF               	addwf	___wmul@product^(0+128),f
  3096  125D  1803               	skipnc
  3097  125E  0AD0               	incf	(___wmul@product+1)^(0+128),f
  3098  125F  084E               	movf	(___wmul@multiplicand+1)^(0+128),w
  3099  1260  07D0               	addwf	(___wmul@product+1)^(0+128),f
  3100  1261                     l598:	
  3101  1261  3001               	movlw	1
  3102  1262                     u4175:	
  3103  1262  1003               	clrc
  3104  1263  0DCD               	rlf	___wmul@multiplicand^(0+128),f
  3105  1264  0DCE               	rlf	(___wmul@multiplicand+1)^(0+128),f
  3106  1265  3EFF               	addlw	-1
  3107  1266  1D03               	skipz
  3108  1267  2A62               	goto	u4175
  3109  1268  3001               	movlw	1
  3110  1269                     u4185:	
  3111  1269  1003               	clrc
  3112  126A  0CCC               	rrf	(___wmul@multiplier+1)^(0+128),f
  3113  126B  0CCB               	rrf	___wmul@multiplier^(0+128),f
  3114  126C  3EFF               	addlw	-1
  3115  126D  1D03               	skipz
  3116  126E  2A69               	goto	u4185
  3117  126F  084C               	movf	(___wmul@multiplier+1)^(0+128),w
  3118  1270  044B               	iorwf	___wmul@multiplier^(0+128),w
  3119  1271  1D03               	skipz
  3120  1272  2A59               	goto	l3372
  3121  1273  0850               	movf	(___wmul@product+1)^(0+128),w
  3122  1274  01CC               	clrf	(?___wmul+1)^(0+128)
  3123  1275  07CC               	addwf	(?___wmul+1)^(0+128),f
  3124  1276  084F               	movf	___wmul@product^(0+128),w
  3125  1277  01CB               	clrf	?___wmul^(0+128)
  3126  1278  07CB               	addwf	?___wmul^(0+128),f
  3127  1279  0008               	return
  3128  127A                     __end_of___wmul:	
  3129                           
  3130                           	psect	text4
  3131  12DC                     __ptext4:	
  3132 ;; *************** function ___lwmod *****************
  3133 ;; Defined at:
  3134 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  divisor         2   12[BANK1 ] unsigned int 
  3137 ;;  dividend        2   14[BANK1 ] unsigned int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  counter         1   17[BANK1 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2   12[BANK1 ] unsigned int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       4       0       0
  3150 ;;      Locals:         0       0       1       0       0
  3151 ;;      Temps:          0       0       1       0       0
  3152 ;;      Totals:         0       0       6       0       0
  3153 ;;Total ram usage:        6 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    5
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_sprintf
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function ___lwmod
  3165  12DC                     ___lwmod:	
  3166                           
  3167                           ;incstack = 0
  3168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3169  12DC  1683               	bsf	3,5	;RP0=1, select bank1
  3170  12DD  1303               	bcf	3,6	;RP1=0, select bank1
  3171  12DE  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3172  12DF  0453               	iorwf	___lwmod@divisor^(0+128),w
  3173  12E0  1903               	skipnz
  3174  12E1  2B0B               	goto	l3426
  3175  12E2  01D8               	clrf	___lwmod@counter^(0+128)
  3176  12E3  0AD8               	incf	___lwmod@counter^(0+128),f
  3177  12E4                     l3416:	
  3178  12E4  1BD4               	btfsc	(___lwmod@divisor+1)^(0+128),7
  3179  12E5  2AF2               	goto	l3418
  3180  12E6  3001               	movlw	1
  3181  12E7                     u4285:	
  3182  12E7  1003               	clrc
  3183  12E8  0DD3               	rlf	___lwmod@divisor^(0+128),f
  3184  12E9  0DD4               	rlf	(___lwmod@divisor+1)^(0+128),f
  3185  12EA  3EFF               	addlw	-1
  3186  12EB  1D03               	skipz
  3187  12EC  2AE7               	goto	u4285
  3188  12ED  3001               	movlw	1
  3189  12EE  00D7               	movwf	??___lwmod^(0+128)
  3190  12EF  0857               	movf	??___lwmod^(0+128),w
  3191  12F0  07D8               	addwf	___lwmod@counter^(0+128),f
  3192  12F1  2AE4               	goto	l3416
  3193  12F2                     l3418:	
  3194  12F2  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3195  12F3  0256               	subwf	(___lwmod@dividend+1)^(0+128),w
  3196  12F4  1D03               	skipz
  3197  12F5  2AF8               	goto	u4305
  3198  12F6  0853               	movf	___lwmod@divisor^(0+128),w
  3199  12F7  0255               	subwf	___lwmod@dividend^(0+128),w
  3200  12F8                     u4305:	
  3201  12F8  1C03               	skipc
  3202  12F9  2B00               	goto	l3422
  3203  12FA  0853               	movf	___lwmod@divisor^(0+128),w
  3204  12FB  02D5               	subwf	___lwmod@dividend^(0+128),f
  3205  12FC  0854               	movf	(___lwmod@divisor+1)^(0+128),w
  3206  12FD  1C03               	skipc
  3207  12FE  03D6               	decf	(___lwmod@dividend+1)^(0+128),f
  3208  12FF  02D6               	subwf	(___lwmod@dividend+1)^(0+128),f
  3209  1300                     l3422:	
  3210  1300  3001               	movlw	1
  3211  1301                     u4315:	
  3212  1301  1003               	clrc
  3213  1302  0CD4               	rrf	(___lwmod@divisor+1)^(0+128),f
  3214  1303  0CD3               	rrf	___lwmod@divisor^(0+128),f
  3215  1304  3EFF               	addlw	-1
  3216  1305  1D03               	skipz
  3217  1306  2B01               	goto	u4315
  3218  1307  3001               	movlw	1
  3219  1308  02D8               	subwf	___lwmod@counter^(0+128),f
  3220  1309  1D03               	btfss	3,2
  3221  130A  2AF2               	goto	l3418
  3222  130B                     l3426:	
  3223  130B  0856               	movf	(___lwmod@dividend+1)^(0+128),w
  3224  130C  01D4               	clrf	(?___lwmod+1)^(0+128)
  3225  130D  07D4               	addwf	(?___lwmod+1)^(0+128),f
  3226  130E  0855               	movf	___lwmod@dividend^(0+128),w
  3227  130F  01D3               	clrf	?___lwmod^(0+128)
  3228  1310  07D3               	addwf	?___lwmod^(0+128),f
  3229  1311  0008               	return
  3230  1312                     __end_of___lwmod:	
  3231                           
  3232                           	psect	text5
  3233  1350                     __ptext5:	
  3234 ;; *************** function ___lwdiv *****************
  3235 ;; Defined at:
  3236 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  divisor         2    4[BANK1 ] unsigned int 
  3239 ;;  dividend        2    6[BANK1 ] unsigned int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  quotient        2   10[BANK1 ] unsigned int 
  3242 ;;  counter         1    9[BANK1 ] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    4[BANK1 ] unsigned int 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       4       0       0
  3253 ;;      Locals:         0       0       3       0       0
  3254 ;;      Temps:          0       0       1       0       0
  3255 ;;      Totals:         0       0       8       0       0
  3256 ;;Total ram usage:        8 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    5
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_sprintf
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function ___lwdiv
  3268  1350                     ___lwdiv:	
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3272  1350  1683               	bsf	3,5	;RP0=1, select bank1
  3273  1351  1303               	bcf	3,6	;RP1=0, select bank1
  3274  1352  01D1               	clrf	___lwdiv@quotient^(0+128)
  3275  1353  01D2               	clrf	(___lwdiv@quotient+1)^(0+128)
  3276  1354  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3277  1355  044B               	iorwf	___lwdiv@divisor^(0+128),w
  3278  1356  1903               	skipnz
  3279  1357  2B89               	goto	l3404
  3280  1358  01D0               	clrf	___lwdiv@counter^(0+128)
  3281  1359  0AD0               	incf	___lwdiv@counter^(0+128),f
  3282  135A                     l3392:	
  3283  135A  1BCC               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3284  135B  2B68               	goto	l3394
  3285  135C  3001               	movlw	1
  3286  135D                     u4215:	
  3287  135D  1003               	clrc
  3288  135E  0DCB               	rlf	___lwdiv@divisor^(0+128),f
  3289  135F  0DCC               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3290  1360  3EFF               	addlw	-1
  3291  1361  1D03               	skipz
  3292  1362  2B5D               	goto	u4215
  3293  1363  3001               	movlw	1
  3294  1364  00CF               	movwf	??___lwdiv^(0+128)
  3295  1365  084F               	movf	??___lwdiv^(0+128),w
  3296  1366  07D0               	addwf	___lwdiv@counter^(0+128),f
  3297  1367  2B5A               	goto	l3392
  3298  1368                     l3394:	
  3299  1368  3001               	movlw	1
  3300  1369                     u4235:	
  3301  1369  1003               	clrc
  3302  136A  0DD1               	rlf	___lwdiv@quotient^(0+128),f
  3303  136B  0DD2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3304  136C  3EFF               	addlw	-1
  3305  136D  1D03               	skipz
  3306  136E  2B69               	goto	u4235
  3307  136F  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3308  1370  024E               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3309  1371  1D03               	skipz
  3310  1372  2B75               	goto	u4245
  3311  1373  084B               	movf	___lwdiv@divisor^(0+128),w
  3312  1374  024D               	subwf	___lwdiv@dividend^(0+128),w
  3313  1375                     u4245:	
  3314  1375  1C03               	skipc
  3315  1376  2B7E               	goto	l3400
  3316  1377  084B               	movf	___lwdiv@divisor^(0+128),w
  3317  1378  02CD               	subwf	___lwdiv@dividend^(0+128),f
  3318  1379  084C               	movf	(___lwdiv@divisor+1)^(0+128),w
  3319  137A  1C03               	skipc
  3320  137B  03CE               	decf	(___lwdiv@dividend+1)^(0+128),f
  3321  137C  02CE               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3322  137D  1451               	bsf	___lwdiv@quotient^(0+128),0
  3323  137E                     l3400:	
  3324  137E  3001               	movlw	1
  3325  137F                     u4255:	
  3326  137F  1003               	clrc
  3327  1380  0CCC               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3328  1381  0CCB               	rrf	___lwdiv@divisor^(0+128),f
  3329  1382  3EFF               	addlw	-1
  3330  1383  1D03               	skipz
  3331  1384  2B7F               	goto	u4255
  3332  1385  3001               	movlw	1
  3333  1386  02D0               	subwf	___lwdiv@counter^(0+128),f
  3334  1387  1D03               	btfss	3,2
  3335  1388  2B68               	goto	l3394
  3336  1389                     l3404:	
  3337  1389  0852               	movf	(___lwdiv@quotient+1)^(0+128),w
  3338  138A  01CC               	clrf	(?___lwdiv+1)^(0+128)
  3339  138B  07CC               	addwf	(?___lwdiv+1)^(0+128),f
  3340  138C  0851               	movf	___lwdiv@quotient^(0+128),w
  3341  138D  01CB               	clrf	?___lwdiv^(0+128)
  3342  138E  07CB               	addwf	?___lwdiv^(0+128),f
  3343  138F  0008               	return
  3344  1390                     __end_of___lwdiv:	
  3345                           
  3346                           	psect	text6
  3347  12AB                     __ptext6:	
  3348 ;; *************** function _USART_WriteString *****************
  3349 ;; Defined at:
  3350 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  str             2    5[BANK1 ] PTR const unsigned char 
  3353 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3354 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  3355 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  3356 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       0       2       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       2       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    6
  3375 ;; This function calls:
  3376 ;;		_USART_WriteChar
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _USART_WriteString
  3384  12AB                     _USART_WriteString:	
  3385  12AB                     l2894:	
  3386                           ;usart.c: 54: while(*str != '\0')
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3390                           
  3391  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  3392  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  3393  12AD  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3394  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  3395  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  3396  12B0  00FF               	movwf	127
  3397  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  3398  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  3399  12B3  084C               	movf	USART_WriteString@str^(0+128),w
  3400  12B4  0084               	movwf	4
  3401  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  3402  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  3403  12B7  160A  158A  2000  160A  118A  	fcall	stringtab
  3404  12BC  3800               	iorlw	0
  3405  12BD  1903               	btfsc	3,2
  3406  12BE  0008               	return
  3407                           
  3408                           ;usart.c: 55: {
  3409                           ;usart.c: 56: USART_WriteChar(*str);
  3410  12BF  1683               	bsf	3,5	;RP0=1, select bank1
  3411  12C0  1303               	bcf	3,6	;RP1=0, select bank1
  3412  12C1  084D               	movf	(USART_WriteString@str+1)^(0+128),w
  3413  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  3414  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  3415  12C4  00FF               	movwf	127
  3416  12C5  1683               	bsf	3,5	;RP0=1, select bank1
  3417  12C6  1303               	bcf	3,6	;RP1=0, select bank1
  3418  12C7  084C               	movf	USART_WriteString@str^(0+128),w
  3419  12C8  0084               	movwf	4
  3420  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  3421  12CA  1303               	bcf	3,6	;RP1=0, select bank0
  3422  12CB  160A  158A  2000  160A  118A  	fcall	stringtab
  3423  12D0  160A  118A  20DB  160A  118A  	fcall	_USART_WriteChar
  3424                           
  3425                           ;usart.c: 57: str++;
  3426  12D5  3001               	movlw	1
  3427  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  3428  12D7  1303               	bcf	3,6	;RP1=0, select bank1
  3429  12D8  07CC               	addwf	USART_WriteString@str^(0+128),f
  3430  12D9  1803               	skipnc
  3431  12DA  0ACD               	incf	(USART_WriteString@str+1)^(0+128),f
  3432  12DB  2AAB               	goto	l2894
  3433  12DC                     __end_of_USART_WriteString:	
  3434                           
  3435                           	psect	text7
  3436  10DB                     __ptext7:	
  3437 ;; *************** function _USART_WriteChar *****************
  3438 ;; Defined at:
  3439 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  byte            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  byte            1    4[BANK1 ] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;		None               void
  3446 ;; Registers used:
  3447 ;;		wreg
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         0       0       1       0       0
  3455 ;;      Temps:          0       0       0       0       0
  3456 ;;      Totals:         0       0       1       0       0
  3457 ;;Total ram usage:        1 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    5
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_USART_WriteString
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _USART_WriteChar
  3469  10DB                     _USART_WriteChar:	
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _USART_WriteChar: [wreg]
  3473                           ;USART_WriteChar@byte stored from wreg
  3474  10DB  1683               	bsf	3,5	;RP0=1, select bank1
  3475  10DC  1303               	bcf	3,6	;RP1=0, select bank1
  3476  10DD  00CB               	movwf	USART_WriteChar@byte^(0+128)
  3477  10DE                     l227:	
  3478                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3479                           
  3480  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  3481  10DF  1E0C               	btfss	12,4	;volatile
  3482  10E0  28DE               	goto	l227
  3483                           
  3484                           ;usart.c: 47: TXREG = byte;
  3485  10E1  1683               	bsf	3,5	;RP0=1, select bank1
  3486  10E2  1303               	bcf	3,6	;RP1=0, select bank1
  3487  10E3  084B               	movf	USART_WriteChar@byte^(0+128),w
  3488  10E4  1283               	bcf	3,5	;RP0=0, select bank0
  3489  10E5  1303               	bcf	3,6	;RP1=0, select bank0
  3490  10E6  0099               	movwf	25	;volatile
  3491  10E7  0008               	return
  3492  10E8                     __end_of_USART_WriteChar:	
  3493                           
  3494                           	psect	text8
  3495  1390                     __ptext8:	
  3496 ;; *************** function _USART_Init *****************
  3497 ;; Defined at:
  3498 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  BaudRate        4   19[BANK1 ] long 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       4       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          0       0       4       0       0
  3515 ;;      Totals:         0       0       8       0       0
  3516 ;;Total ram usage:        8 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    6
  3519 ;; This function calls:
  3520 ;;		___aldiv
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _USART_Init
  3528  1390                     _USART_Init:	
  3529                           
  3530                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3534  1390  1683               	bsf	3,5	;RP0=1, select bank1
  3535  1391  1303               	bcf	3,6	;RP1=0, select bank1
  3536  1392  085A               	movf	USART_Init@BaudRate^(0+128),w
  3537  1393  00DE               	movwf	??_USART_Init^(0+128)
  3538  1394  085B               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3539  1395  00DF               	movwf	(??_USART_Init^(0+128)+1)
  3540  1396  085C               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3541  1397  00E0               	movwf	(??_USART_Init^(0+128)+2)
  3542  1398  085D               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3543  1399  00E1               	movwf	(??_USART_Init^(0+128)+3)
  3544  139A  3004               	movlw	4
  3545  139B                     u3625:	
  3546  139B  1003               	clrc
  3547  139C  0DDE               	rlf	??_USART_Init^(0+128),f
  3548  139D  0DDF               	rlf	(??_USART_Init^(0+128)+1),f
  3549  139E  0DE0               	rlf	(??_USART_Init^(0+128)+2),f
  3550  139F  0DE1               	rlf	(??_USART_Init^(0+128)+3),f
  3551  13A0  3EFF               	addlw	-1
  3552  13A1  1D03               	skipz
  3553  13A2  2B9B               	goto	u3625
  3554  13A3  0861               	movf	(??_USART_Init+3)^(0+128),w
  3555  13A4  00CE               	movwf	(___aldiv@divisor+3)^(0+128)
  3556  13A5  0860               	movf	(??_USART_Init+2)^(0+128),w
  3557  13A6  00CD               	movwf	(___aldiv@divisor+2)^(0+128)
  3558  13A7  085F               	movf	(??_USART_Init+1)^(0+128),w
  3559  13A8  00CC               	movwf	(___aldiv@divisor+1)^(0+128)
  3560  13A9  085E               	movf	??_USART_Init^(0+128),w
  3561  13AA  00CB               	movwf	___aldiv@divisor^(0+128)
  3562  13AB  3001               	movlw	1
  3563  13AC  00D2               	movwf	(___aldiv@dividend+3)^(0+128)
  3564  13AD  3019               	movlw	25
  3565  13AE  00D1               	movwf	(___aldiv@dividend+2)^(0+128)
  3566  13AF  3040               	movlw	64
  3567  13B0  00D0               	movwf	(___aldiv@dividend+1)^(0+128)
  3568  13B1  3000               	movlw	0
  3569  13B2  00CF               	movwf	___aldiv@dividend^(0+128)
  3570  13B3  160A  118A  2595   	fcall	___aldiv
  3571  13B6  1683               	bsf	3,5	;RP0=1, select bank1
  3572  13B7  1303               	bcf	3,6	;RP1=0, select bank1
  3573  13B8  084B               	movf	?___aldiv^(0+128),w
  3574  13B9  3EFF               	addlw	255
  3575  13BA  0099               	movwf	25	;volatile
  3576                           
  3577                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3578  13BB  1398               	bcf	24,7	;volatile
  3579                           
  3580                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3581  13BC  1318               	bcf	24,6	;volatile
  3582                           
  3583                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3584  13BD  1698               	bsf	24,5	;volatile
  3585                           
  3586                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3587  13BE  1218               	bcf	24,4	;volatile
  3588                           
  3589                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3590  13BF  1518               	bsf	24,2	;volatile
  3591                           
  3592                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3593  13C0  1498               	bsf	24,1	;volatile
  3594                           
  3595                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3596  13C1  1018               	bcf	24,0	;volatile
  3597                           
  3598                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3599  13C2  1283               	bcf	3,5	;RP0=0, select bank0
  3600  13C3  1303               	bcf	3,6	;RP1=0, select bank0
  3601  13C4  1798               	bsf	24,7	;volatile
  3602                           
  3603                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3604  13C5  1318               	bcf	24,6	;volatile
  3605                           
  3606                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3607  13C6  1298               	bcf	24,5	;volatile
  3608                           
  3609                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3610  13C7  1618               	bsf	24,4	;volatile
  3611                           
  3612                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3613  13C8  1198               	bcf	24,3	;volatile
  3614                           
  3615                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3616  13C9  1118               	bcf	24,2	;volatile
  3617                           
  3618                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3619  13CA  1098               	bcf	24,1	;volatile
  3620                           
  3621                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3622  13CB  1018               	bcf	24,0	;volatile
  3623                           
  3624                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3625  13CC  1683               	bsf	3,5	;RP0=1, select bank1
  3626  13CD  1303               	bcf	3,6	;RP1=0, select bank1
  3627  13CE  120C               	bcf	12,4	;volatile
  3628                           
  3629                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3630  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  3631  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  3632  13D1  120C               	bcf	12,4	;volatile
  3633                           
  3634                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3635  13D2  1683               	bsf	3,5	;RP0=1, select bank1
  3636  13D3  1303               	bcf	3,6	;RP1=0, select bank1
  3637  13D4  168C               	bsf	12,5	;volatile
  3638                           
  3639                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3640  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  3641  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  3642  13D7  128C               	bcf	12,5	;volatile
  3643  13D8  0008               	return
  3644  13D9                     __end_of_USART_Init:	
  3645                           
  3646                           	psect	text9
  3647  1595                     __ptext9:	
  3648 ;; *************** function ___aldiv *****************
  3649 ;; Defined at:
  3650 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  divisor         4    4[BANK1 ] long 
  3653 ;;  dividend        4    8[BANK1 ] long 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  quotient        4   15[BANK1 ] long 
  3656 ;;  sign            1   14[BANK1 ] unsigned char 
  3657 ;;  counter         1   13[BANK1 ] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  4    4[BANK1 ] long 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       8       0       0
  3668 ;;      Locals:         0       0       6       0       0
  3669 ;;      Temps:          0       0       1       0       0
  3670 ;;      Totals:         0       0      15       0       0
  3671 ;;Total ram usage:       15 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    5
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_USART_Init
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function ___aldiv
  3683  1595                     ___aldiv:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3687  1595  1683               	bsf	3,5	;RP0=1, select bank1
  3688  1596  1303               	bcf	3,6	;RP1=0, select bank1
  3689  1597  01D5               	clrf	___aldiv@sign^(0+128)
  3690  1598  1FCE               	btfss	(___aldiv@divisor+3)^(0+128),7
  3691  1599  2DA7               	goto	l653
  3692  159A  09CB               	comf	___aldiv@divisor^(0+128),f
  3693  159B  09CC               	comf	(___aldiv@divisor+1)^(0+128),f
  3694  159C  09CD               	comf	(___aldiv@divisor+2)^(0+128),f
  3695  159D  09CE               	comf	(___aldiv@divisor+3)^(0+128),f
  3696  159E  0ACB               	incf	___aldiv@divisor^(0+128),f
  3697  159F  1903               	skipnz
  3698  15A0  0ACC               	incf	(___aldiv@divisor+1)^(0+128),f
  3699  15A1  1903               	skipnz
  3700  15A2  0ACD               	incf	(___aldiv@divisor+2)^(0+128),f
  3701  15A3  1903               	skipnz
  3702  15A4  0ACE               	incf	(___aldiv@divisor+3)^(0+128),f
  3703  15A5  01D5               	clrf	___aldiv@sign^(0+128)
  3704  15A6  0AD5               	incf	___aldiv@sign^(0+128),f
  3705  15A7                     l653:	
  3706  15A7  1FD2               	btfss	(___aldiv@dividend+3)^(0+128),7
  3707  15A8  2DB8               	goto	l2544
  3708  15A9  09CF               	comf	___aldiv@dividend^(0+128),f
  3709  15AA  09D0               	comf	(___aldiv@dividend+1)^(0+128),f
  3710  15AB  09D1               	comf	(___aldiv@dividend+2)^(0+128),f
  3711  15AC  09D2               	comf	(___aldiv@dividend+3)^(0+128),f
  3712  15AD  0ACF               	incf	___aldiv@dividend^(0+128),f
  3713  15AE  1903               	skipnz
  3714  15AF  0AD0               	incf	(___aldiv@dividend+1)^(0+128),f
  3715  15B0  1903               	skipnz
  3716  15B1  0AD1               	incf	(___aldiv@dividend+2)^(0+128),f
  3717  15B2  1903               	skipnz
  3718  15B3  0AD2               	incf	(___aldiv@dividend+3)^(0+128),f
  3719  15B4  3001               	movlw	1
  3720  15B5  00D3               	movwf	??___aldiv^(0+128)
  3721  15B6  0853               	movf	??___aldiv^(0+128),w
  3722  15B7  06D5               	xorwf	___aldiv@sign^(0+128),f
  3723  15B8                     l2544:	
  3724  15B8  3000               	movlw	0
  3725  15B9  00D9               	movwf	(___aldiv@quotient+3)^(0+128)
  3726  15BA  3000               	movlw	0
  3727  15BB  00D8               	movwf	(___aldiv@quotient+2)^(0+128)
  3728  15BC  3000               	movlw	0
  3729  15BD  00D7               	movwf	(___aldiv@quotient+1)^(0+128)
  3730  15BE  3000               	movlw	0
  3731  15BF  00D6               	movwf	___aldiv@quotient^(0+128)
  3732  15C0  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3733  15C1  044D               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3734  15C2  044C               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3735  15C3  044B               	iorwf	___aldiv@divisor^(0+128),w
  3736  15C4  1903               	skipnz
  3737  15C5  2E0D               	goto	l2566
  3738  15C6  01D4               	clrf	___aldiv@counter^(0+128)
  3739  15C7  0AD4               	incf	___aldiv@counter^(0+128),f
  3740  15C8                     l2552:	
  3741  15C8  1BCE               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3742  15C9  2DD8               	goto	l2554
  3743  15CA  3001               	movlw	1
  3744  15CB  00D3               	movwf	??___aldiv^(0+128)
  3745  15CC                     u2895:	
  3746  15CC  1003               	clrc
  3747  15CD  0DCB               	rlf	___aldiv@divisor^(0+128),f
  3748  15CE  0DCC               	rlf	(___aldiv@divisor+1)^(0+128),f
  3749  15CF  0DCD               	rlf	(___aldiv@divisor+2)^(0+128),f
  3750  15D0  0DCE               	rlf	(___aldiv@divisor+3)^(0+128),f
  3751  15D1  0BD3               	decfsz	??___aldiv^(0+128),f
  3752  15D2  2DCC               	goto	u2895
  3753  15D3  3001               	movlw	1
  3754  15D4  00D3               	movwf	??___aldiv^(0+128)
  3755  15D5  0853               	movf	??___aldiv^(0+128),w
  3756  15D6  07D4               	addwf	___aldiv@counter^(0+128),f
  3757  15D7  2DC8               	goto	l2552
  3758  15D8                     l2554:	
  3759  15D8  3001               	movlw	1
  3760  15D9  00D3               	movwf	??___aldiv^(0+128)
  3761  15DA                     u2915:	
  3762  15DA  1003               	clrc
  3763  15DB  0DD6               	rlf	___aldiv@quotient^(0+128),f
  3764  15DC  0DD7               	rlf	(___aldiv@quotient+1)^(0+128),f
  3765  15DD  0DD8               	rlf	(___aldiv@quotient+2)^(0+128),f
  3766  15DE  0DD9               	rlf	(___aldiv@quotient+3)^(0+128),f
  3767  15DF  0BD3               	decfsz	??___aldiv^(0+128),f
  3768  15E0  2DDA               	goto	u2915
  3769  15E1  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3770  15E2  0252               	subwf	(___aldiv@dividend+3)^(0+128),w
  3771  15E3  1D03               	skipz
  3772  15E4  2DEF               	goto	u2925
  3773  15E5  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3774  15E6  0251               	subwf	(___aldiv@dividend+2)^(0+128),w
  3775  15E7  1D03               	skipz
  3776  15E8  2DEF               	goto	u2925
  3777  15E9  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3778  15EA  0250               	subwf	(___aldiv@dividend+1)^(0+128),w
  3779  15EB  1D03               	skipz
  3780  15EC  2DEF               	goto	u2925
  3781  15ED  084B               	movf	___aldiv@divisor^(0+128),w
  3782  15EE  024F               	subwf	___aldiv@dividend^(0+128),w
  3783  15EF                     u2925:	
  3784  15EF  1C03               	skipc
  3785  15F0  2E00               	goto	l2562
  3786  15F1  084B               	movf	___aldiv@divisor^(0+128),w
  3787  15F2  02CF               	subwf	___aldiv@dividend^(0+128),f
  3788  15F3  084C               	movf	(___aldiv@divisor+1)^(0+128),w
  3789  15F4  1C03               	skipc
  3790  15F5  0F4C               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3791  15F6  02D0               	subwf	(___aldiv@dividend+1)^(0+128),f
  3792  15F7  084D               	movf	(___aldiv@divisor+2)^(0+128),w
  3793  15F8  1C03               	skipc
  3794  15F9  0F4D               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3795  15FA  02D1               	subwf	(___aldiv@dividend+2)^(0+128),f
  3796  15FB  084E               	movf	(___aldiv@divisor+3)^(0+128),w
  3797  15FC  1C03               	skipc
  3798  15FD  0F4E               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3799  15FE  02D2               	subwf	(___aldiv@dividend+3)^(0+128),f
  3800  15FF  1456               	bsf	___aldiv@quotient^(0+128),0
  3801  1600                     l2562:	
  3802  1600  3001               	movlw	1
  3803  1601                     u2935:	
  3804  1601  1003               	clrc
  3805  1602  0CCE               	rrf	(___aldiv@divisor+3)^(0+128),f
  3806  1603  0CCD               	rrf	(___aldiv@divisor+2)^(0+128),f
  3807  1604  0CCC               	rrf	(___aldiv@divisor+1)^(0+128),f
  3808  1605  0CCB               	rrf	___aldiv@divisor^(0+128),f
  3809  1606  3EFF               	addlw	-1
  3810  1607  1D03               	skipz
  3811  1608  2E01               	goto	u2935
  3812  1609  3001               	movlw	1
  3813  160A  02D4               	subwf	___aldiv@counter^(0+128),f
  3814  160B  1D03               	btfss	3,2
  3815  160C  2DD8               	goto	l2554
  3816  160D                     l2566:	
  3817  160D  0855               	movf	___aldiv@sign^(0+128),w
  3818  160E  1903               	btfsc	3,2
  3819  160F  2E1B               	goto	l2570
  3820  1610  09D6               	comf	___aldiv@quotient^(0+128),f
  3821  1611  09D7               	comf	(___aldiv@quotient+1)^(0+128),f
  3822  1612  09D8               	comf	(___aldiv@quotient+2)^(0+128),f
  3823  1613  09D9               	comf	(___aldiv@quotient+3)^(0+128),f
  3824  1614  0AD6               	incf	___aldiv@quotient^(0+128),f
  3825  1615  1903               	skipnz
  3826  1616  0AD7               	incf	(___aldiv@quotient+1)^(0+128),f
  3827  1617  1903               	skipnz
  3828  1618  0AD8               	incf	(___aldiv@quotient+2)^(0+128),f
  3829  1619  1903               	skipnz
  3830  161A  0AD9               	incf	(___aldiv@quotient+3)^(0+128),f
  3831  161B                     l2570:	
  3832  161B  0859               	movf	(___aldiv@quotient+3)^(0+128),w
  3833  161C  00CE               	movwf	(?___aldiv+3)^(0+128)
  3834  161D  0858               	movf	(___aldiv@quotient+2)^(0+128),w
  3835  161E  00CD               	movwf	(?___aldiv+2)^(0+128)
  3836  161F  0857               	movf	(___aldiv@quotient+1)^(0+128),w
  3837  1620  00CC               	movwf	(?___aldiv+1)^(0+128)
  3838  1621  0856               	movf	___aldiv@quotient^(0+128),w
  3839  1622  00CB               	movwf	?___aldiv^(0+128)
  3840  1623  0008               	return
  3841  1624                     __end_of___aldiv:	
  3842                           
  3843                           	psect	text10
  3844  10C0                     __ptext10:	
  3845 ;; *************** function _TIMER0_Set *****************
  3846 ;; Defined at:
  3847 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  contagens       1    wreg     unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  contagens       1    4[BANK1 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;		None               void
  3854 ;; Registers used:
  3855 ;;		wreg
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       1       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       1       0       0
  3865 ;;Total ram usage:        1 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _TIMER0_Set
  3877  10C0                     _TIMER0_Set:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _TIMER0_Set: [wreg]
  3881                           ;TIMER0_Set@contagens stored from wreg
  3882  10C0  1683               	bsf	3,5	;RP0=1, select bank1
  3883  10C1  1303               	bcf	3,6	;RP1=0, select bank1
  3884  10C2  00CB               	movwf	TIMER0_Set@contagens^(0+128)
  3885                           
  3886                           ;timers.c: 22: TMR0 = contagens;
  3887  10C3  084B               	movf	TIMER0_Set@contagens^(0+128),w
  3888  10C4  1283               	bcf	3,5	;RP0=0, select bank0
  3889  10C5  1303               	bcf	3,6	;RP1=0, select bank0
  3890  10C6  0081               	movwf	1	;volatile
  3891  10C7  0008               	return
  3892  10C8                     __end_of_TIMER0_Set:	
  3893                           
  3894                           	psect	text11
  3895  10D0                     __ptext11:	
  3896 ;; *************** function _TIMER0_Init *****************
  3897 ;; Defined at:
  3898 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		None
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    5
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _TIMER0_Init
  3928  10D0                     _TIMER0_Init:	
  3929                           
  3930                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _TIMER0_Init: []
  3934  10D0  1683               	bsf	3,5	;RP0=1, select bank1
  3935  10D1  1303               	bcf	3,6	;RP1=0, select bank1
  3936  10D2  1281               	bcf	1,5	;volatile
  3937                           
  3938                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3939  10D3  1201               	bcf	1,4	;volatile
  3940                           
  3941                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3942  10D4  1181               	bcf	1,3	;volatile
  3943                           
  3944                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3945  10D5  1501               	bsf	1,2	;volatile
  3946                           
  3947                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3948  10D6  1481               	bsf	1,1	;volatile
  3949                           
  3950                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3951  10D7  1401               	bsf	1,0	;volatile
  3952                           
  3953                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3954  10D8  110B               	bcf	11,2	;volatile
  3955                           
  3956                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3957  10D9  168B               	bsf	11,5	;volatile
  3958  10DA  0008               	return
  3959  10DB                     __end_of_TIMER0_Init:	
  3960                           
  3961                           	psect	text12
  3962  1231                     __ptext12:	
  3963 ;; *************** function _PWM_Init *****************
  3964 ;; Defined at:
  3965 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;		None               void
  3972 ;; Registers used:
  3973 ;;		wreg
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3979 ;;      Params:         0       0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0
  3982 ;;      Totals:         0       0       0       0       0
  3983 ;;Total ram usage:        0 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    5
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           
  3994                           ;psect for function _PWM_Init
  3995  1231                     _PWM_Init:	
  3996                           
  3997                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3998                           
  3999                           ;incstack = 0
  4000                           ; Regs used in _PWM_Init: [wreg]
  4001  1231  1283               	bcf	3,5	;RP0=0, select bank0
  4002  1232  1303               	bcf	3,6	;RP1=0, select bank0
  4003  1233  1492               	bsf	18,1	;volatile
  4004                           
  4005                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  4006  1234  1012               	bcf	18,0	;volatile
  4007                           
  4008                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  4009  1235  1312               	bcf	18,6	;volatile
  4010                           
  4011                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  4012  1236  1292               	bcf	18,5	;volatile
  4013                           
  4014                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  4015  1237  1212               	bcf	18,4	;volatile
  4016                           
  4017                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  4018  1238  1192               	bcf	18,3	;volatile
  4019                           
  4020                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  4021  1239  1512               	bsf	18,2	;volatile
  4022                           
  4023                           ;pwm.c: 27: PR2 = 255;
  4024  123A  30FF               	movlw	255
  4025  123B  1683               	bsf	3,5	;RP0=1, select bank1
  4026  123C  1303               	bcf	3,6	;RP1=0, select bank1
  4027  123D  0092               	movwf	18	;volatile
  4028                           
  4029                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  4030  123E  1283               	bcf	3,5	;RP0=0, select bank0
  4031  123F  1303               	bcf	3,6	;RP1=0, select bank0
  4032  1240  1597               	bsf	23,3	;volatile
  4033                           
  4034                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  4035  1241  1517               	bsf	23,2	;volatile
  4036                           
  4037                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  4038  1242  1497               	bsf	23,1	;volatile
  4039                           
  4040                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  4041  1243  1417               	bsf	23,0	;volatile
  4042                           
  4043                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  4044  1244  1683               	bsf	3,5	;RP0=1, select bank1
  4045  1245  1303               	bcf	3,6	;RP1=0, select bank1
  4046  1246  150C               	bsf	12,2	;volatile
  4047                           
  4048                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  4049  1247  1283               	bcf	3,5	;RP0=0, select bank0
  4050  1248  1303               	bcf	3,6	;RP1=0, select bank0
  4051  1249  110C               	bcf	12,2	;volatile
  4052                           
  4053                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  4054  124A  159D               	bsf	29,3	;volatile
  4055                           
  4056                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  4057  124B  151D               	bsf	29,2	;volatile
  4058                           
  4059                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  4060  124C  149D               	bsf	29,1	;volatile
  4061                           
  4062                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  4063  124D  141D               	bsf	29,0	;volatile
  4064                           
  4065                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  4066  124E  1683               	bsf	3,5	;RP0=1, select bank1
  4067  124F  1303               	bcf	3,6	;RP1=0, select bank1
  4068  1250  140D               	bsf	13,0	;volatile
  4069                           
  4070                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  4071  1251  1283               	bcf	3,5	;RP0=0, select bank0
  4072  1252  1303               	bcf	3,6	;RP1=0, select bank0
  4073  1253  100D               	bcf	13,0	;volatile
  4074  1254  0008               	return
  4075  1255                     __end_of_PWM_Init:	
  4076                           
  4077                           	psect	text13
  4078  11CA                     __ptext13:	
  4079 ;; *************** function _PWM_DutyCycle2 *****************
  4080 ;; Defined at:
  4081 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  valor           2    4[BANK1 ] int 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       2       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       2       0       0
  4098 ;;      Totals:         0       0       4       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    5
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _PWM_DutyCycle2
  4111  11CA                     _PWM_DutyCycle2:	
  4112                           
  4113                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  4117  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  4118  11CB  1303               	bcf	3,6	;RP1=0, select bank1
  4119  11CC  084C               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  4120  11CD  00CE               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  4121  11CE  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4122  11CF  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4123  11D0  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4124  11D1  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4125  11D2  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4126  11D3  0D4E               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  4127  11D4  0CCE               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  4128  11D5  0CCD               	rrf	??_PWM_DutyCycle2^(0+128),f
  4129  11D6  084D               	movf	??_PWM_DutyCycle2^(0+128),w
  4130  11D7  1283               	bcf	3,5	;RP0=0, select bank0
  4131  11D8  1303               	bcf	3,6	;RP1=0, select bank0
  4132  11D9  009B               	movwf	27	;volatile
  4133                           
  4134                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4135  11DA  1683               	bsf	3,5	;RP0=1, select bank1
  4136  11DB  1303               	bcf	3,6	;RP1=0, select bank1
  4137  11DC  084B               	movf	PWM_DutyCycle2@valor^(0+128),w
  4138  11DD  00CD               	movwf	??_PWM_DutyCycle2^(0+128)
  4139  11DE  3003               	movlw	3
  4140  11DF                     u3595:	
  4141  11DF  1003               	clrc
  4142  11E0  0DCD               	rlf	??_PWM_DutyCycle2^(0+128),f
  4143  11E1  3EFF               	addlw	-1
  4144  11E2  1D03               	skipz
  4145  11E3  29DF               	goto	u3595
  4146  11E4  1003               	clrc
  4147  11E5  0D4D               	rlf	??_PWM_DutyCycle2^(0+128),w
  4148  11E6  380C               	iorlw	12
  4149  11E7  1283               	bcf	3,5	;RP0=0, select bank0
  4150  11E8  1303               	bcf	3,6	;RP1=0, select bank0
  4151  11E9  009D               	movwf	29	;volatile
  4152  11EA  0008               	return
  4153  11EB                     __end_of_PWM_DutyCycle2:	
  4154                           
  4155                           	psect	text14
  4156  11A9                     __ptext14:	
  4157 ;; *************** function _PWM_DutyCycle1 *****************
  4158 ;; Defined at:
  4159 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  valor           2    4[BANK1 ] int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       2       0       0
  4174 ;;      Locals:         0       0       0       0       0
  4175 ;;      Temps:          0       0       2       0       0
  4176 ;;      Totals:         0       0       4       0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    5
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _PWM_DutyCycle1
  4189  11A9                     _PWM_DutyCycle1:	
  4190                           
  4191                           ;pwm.c: 91: CCPR1L = valor >> 2;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  4195  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  4196  11AA  1303               	bcf	3,6	;RP1=0, select bank1
  4197  11AB  084C               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  4198  11AC  00CE               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  4199  11AD  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4200  11AE  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4201  11AF  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4202  11B0  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4203  11B1  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4204  11B2  0D4E               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  4205  11B3  0CCE               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  4206  11B4  0CCD               	rrf	??_PWM_DutyCycle1^(0+128),f
  4207  11B5  084D               	movf	??_PWM_DutyCycle1^(0+128),w
  4208  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4209  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4210  11B8  0095               	movwf	21	;volatile
  4211                           
  4212                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  4213  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  4214  11BA  1303               	bcf	3,6	;RP1=0, select bank1
  4215  11BB  084B               	movf	PWM_DutyCycle1@valor^(0+128),w
  4216  11BC  00CD               	movwf	??_PWM_DutyCycle1^(0+128)
  4217  11BD  3003               	movlw	3
  4218  11BE                     u3655:	
  4219  11BE  1003               	clrc
  4220  11BF  0DCD               	rlf	??_PWM_DutyCycle1^(0+128),f
  4221  11C0  3EFF               	addlw	-1
  4222  11C1  1D03               	skipz
  4223  11C2  29BE               	goto	u3655
  4224  11C3  1003               	clrc
  4225  11C4  0D4D               	rlf	??_PWM_DutyCycle1^(0+128),w
  4226  11C5  380C               	iorlw	12
  4227  11C6  1283               	bcf	3,5	;RP0=0, select bank0
  4228  11C7  1303               	bcf	3,6	;RP1=0, select bank0
  4229  11C8  0097               	movwf	23	;volatile
  4230  11C9  0008               	return
  4231  11CA                     __end_of_PWM_DutyCycle1:	
  4232                           
  4233                           	psect	text15
  4234  127A                     __ptext15:	
  4235 ;; *************** function _LCD_WriteString *****************
  4236 ;; Defined at:
  4237 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  Str             2    6[BANK1 ] PTR const unsigned char 
  4240 ;;		 -> STR_18(6), STR_17(6), display_pwm(10), display_rpm(10), 
  4241 ;;		 -> STR_13(17), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         0       0       2       0       0
  4254 ;;      Locals:         0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0
  4256 ;;      Totals:         0       0       2       0       0
  4257 ;;Total ram usage:        2 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    6
  4260 ;; This function calls:
  4261 ;;		_LCD_WriteData
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _LCD_WriteString
  4269  127A                     _LCD_WriteString:	
  4270  127A                     l3014:	
  4271                           ;lcd.c: 63: while(*Str != '\0')
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4275                           
  4276  127A  1683               	bsf	3,5	;RP0=1, select bank1
  4277  127B  1303               	bcf	3,6	;RP1=0, select bank1
  4278  127C  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4279  127D  1283               	bcf	3,5	;RP0=0, select bank0
  4280  127E  1303               	bcf	3,6	;RP1=0, select bank0
  4281  127F  00FF               	movwf	127
  4282  1280  1683               	bsf	3,5	;RP0=1, select bank1
  4283  1281  1303               	bcf	3,6	;RP1=0, select bank1
  4284  1282  084D               	movf	LCD_WriteString@Str^(0+128),w
  4285  1283  0084               	movwf	4
  4286  1284  1283               	bcf	3,5	;RP0=0, select bank0
  4287  1285  1303               	bcf	3,6	;RP1=0, select bank0
  4288  1286  160A  158A  2000  160A  118A  	fcall	stringtab
  4289  128B  3800               	iorlw	0
  4290  128C  1903               	btfsc	3,2
  4291  128D  0008               	return
  4292                           
  4293                           ;lcd.c: 64: {
  4294                           ;lcd.c: 65: LCD_WriteData(*Str);
  4295  128E  1683               	bsf	3,5	;RP0=1, select bank1
  4296  128F  1303               	bcf	3,6	;RP1=0, select bank1
  4297  1290  084E               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4298  1291  1283               	bcf	3,5	;RP0=0, select bank0
  4299  1292  1303               	bcf	3,6	;RP1=0, select bank0
  4300  1293  00FF               	movwf	127
  4301  1294  1683               	bsf	3,5	;RP0=1, select bank1
  4302  1295  1303               	bcf	3,6	;RP1=0, select bank1
  4303  1296  084D               	movf	LCD_WriteString@Str^(0+128),w
  4304  1297  0084               	movwf	4
  4305  1298  1283               	bcf	3,5	;RP0=0, select bank0
  4306  1299  1303               	bcf	3,6	;RP1=0, select bank0
  4307  129A  160A  158A  2000  160A  118A  	fcall	stringtab
  4308  129F  120A  158A  2003  160A  118A  	fcall	_LCD_WriteData
  4309                           
  4310                           ;lcd.c: 66: Str++;
  4311  12A4  3001               	movlw	1
  4312  12A5  1683               	bsf	3,5	;RP0=1, select bank1
  4313  12A6  1303               	bcf	3,6	;RP1=0, select bank1
  4314  12A7  07CD               	addwf	LCD_WriteString@Str^(0+128),f
  4315  12A8  1803               	skipnc
  4316  12A9  0ACE               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4317  12AA  2A7A               	goto	l3014
  4318  12AB                     __end_of_LCD_WriteString:	
  4319                           
  4320                           	psect	text16
  4321  0803                     __ptext16:	
  4322 ;; *************** function _LCD_WriteData *****************
  4323 ;; Defined at:
  4324 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  Byte            1    wreg     unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  Byte            1    5[BANK1 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;		None               void
  4331 ;; Registers used:
  4332 ;;		wreg
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       0       1       0       0
  4340 ;;      Temps:          0       0       1       0       0
  4341 ;;      Totals:         0       0       2       0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    5
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_LCD_WriteString
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _LCD_WriteData
  4354  0803                     _LCD_WriteData:	
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _LCD_WriteData: [wreg]
  4358                           ;LCD_WriteData@Byte stored from wreg
  4359  0803  1683               	bsf	3,5	;RP0=1, select bank1
  4360  0804  1303               	bcf	3,6	;RP1=0, select bank1
  4361  0805  00CC               	movwf	LCD_WriteData@Byte^(0+128)
  4362                           
  4363                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4364  0806  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0807  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0808  1409               	bsf	9,0	;volatile
  4367                           
  4368                           ;lcd.c: 51: PORTD = Byte;
  4369  0809  1683               	bsf	3,5	;RP0=1, select bank1
  4370  080A  1303               	bcf	3,6	;RP1=0, select bank1
  4371  080B  084C               	movf	LCD_WriteData@Byte^(0+128),w
  4372  080C  1283               	bcf	3,5	;RP0=0, select bank0
  4373  080D  1303               	bcf	3,6	;RP1=0, select bank0
  4374  080E  0088               	movwf	8	;volatile
  4375                           
  4376                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4377  080F  1489               	bsf	9,1	;volatile
  4378                           
  4379                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4380  0810  303D               	movlw	61
  4381  0811  1683               	bsf	3,5	;RP0=1, select bank1
  4382  0812  1303               	bcf	3,6	;RP1=0, select bank1
  4383  0813  00CB               	movwf	??_LCD_WriteData^(0+128)
  4384  0814                     u4547:	
  4385  0814  0BCB               	decfsz	??_LCD_WriteData^(0+128),f
  4386  0815  2814               	goto	u4547
  4387                           
  4388                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4389  0816  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0817  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0818  1089               	bcf	9,1	;volatile
  4392  0819  0008               	return
  4393  081A                     __end_of_LCD_WriteData:	
  4394                           
  4395                           	psect	text17
  4396  149E                     __ptext17:	
  4397 ;; *************** function _LCD_Init *****************
  4398 ;; Defined at:
  4399 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       2       0       0
  4416 ;;      Totals:         0       0       2       0       0
  4417 ;;Total ram usage:        2 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    6
  4420 ;; This function calls:
  4421 ;;		_LCD_WriteCmd
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _LCD_Init
  4429  149E                     _LCD_Init:	
  4430                           
  4431                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4435  149E  1683               	bsf	3,5	;RP0=1, select bank1
  4436  149F  1303               	bcf	3,6	;RP1=0, select bank1
  4437  14A0  119F               	bcf	31,3	;volatile
  4438                           
  4439                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4440  14A1  151F               	bsf	31,2	;volatile
  4441                           
  4442                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4443  14A2  109F               	bcf	31,1	;volatile
  4444                           
  4445                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4446  14A3  101F               	bcf	31,0	;volatile
  4447                           
  4448                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4449  14A4  305A               	movlw	90
  4450  14A5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4451  14A6  30C3               	movlw	195
  4452  14A7  00CD               	movwf	??_LCD_Init^(0+128)
  4453  14A8                     u4557:	
  4454  14A8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4455  14A9  2CA8               	goto	u4557
  4456  14AA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4457  14AB  2CA8               	goto	u4557
  4458                           
  4459                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4460  14AC  3030               	movlw	48
  4461  14AD  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4462                           
  4463                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4464  14B2  3018               	movlw	24
  4465  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  4466  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  4467  14B5  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4468  14B6  30EF               	movlw	239
  4469  14B7  00CD               	movwf	??_LCD_Init^(0+128)
  4470  14B8                     u4567:	
  4471  14B8  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4472  14B9  2CB8               	goto	u4567
  4473  14BA  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4474  14BB  2CB8               	goto	u4567
  4475                           
  4476                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4477  14BC  3030               	movlw	48
  4478  14BD  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4479                           
  4480                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4481  14C2  3099               	movlw	153
  4482  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  4483  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  4484  14C5  00CD               	movwf	??_LCD_Init^(0+128)
  4485  14C6                     u4577:	
  4486  14C6  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4487  14C7  2CC6               	goto	u4577
  4488                           
  4489                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4490  14C8  3030               	movlw	48
  4491  14C9  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4492                           
  4493                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4494  14CE  303D               	movlw	61
  4495  14CF  1683               	bsf	3,5	;RP0=1, select bank1
  4496  14D0  1303               	bcf	3,6	;RP1=0, select bank1
  4497  14D1  00CD               	movwf	??_LCD_Init^(0+128)
  4498  14D2                     u4587:	
  4499  14D2  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4500  14D3  2CD2               	goto	u4587
  4501                           
  4502                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4503  14D4  3038               	movlw	56
  4504  14D5  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4505                           
  4506                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4507  14DA  303D               	movlw	61
  4508  14DB  1683               	bsf	3,5	;RP0=1, select bank1
  4509  14DC  1303               	bcf	3,6	;RP1=0, select bank1
  4510  14DD  00CD               	movwf	??_LCD_Init^(0+128)
  4511  14DE                     u4597:	
  4512  14DE  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4513  14DF  2CDE               	goto	u4597
  4514                           
  4515                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4516  14E0  3001               	movlw	1
  4517  14E1  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4518                           
  4519                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4520  14E6  300C               	movlw	12
  4521  14E7  1683               	bsf	3,5	;RP0=1, select bank1
  4522  14E8  1303               	bcf	3,6	;RP1=0, select bank1
  4523  14E9  00CE               	movwf	(??_LCD_Init^(0+128)+1)
  4524  14EA  30F7               	movlw	247
  4525  14EB  00CD               	movwf	??_LCD_Init^(0+128)
  4526  14EC                     u4607:	
  4527  14EC  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4528  14ED  2CEC               	goto	u4607
  4529  14EE  0BCE               	decfsz	(??_LCD_Init^(0+128)+1),f
  4530  14EF  2CEC               	goto	u4607
  4531                           
  4532                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4533  14F0  300C               	movlw	12
  4534  14F1  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4535                           
  4536                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4537  14F6  303D               	movlw	61
  4538  14F7  1683               	bsf	3,5	;RP0=1, select bank1
  4539  14F8  1303               	bcf	3,6	;RP1=0, select bank1
  4540  14F9  00CD               	movwf	??_LCD_Init^(0+128)
  4541  14FA                     u4617:	
  4542  14FA  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4543  14FB  2CFA               	goto	u4617
  4544                           
  4545                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4546  14FC  3006               	movlw	6
  4547  14FD  160A  118A  211E  160A  118A  	fcall	_LCD_WriteCmd
  4548                           
  4549                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4550  1502  303D               	movlw	61
  4551  1503  1683               	bsf	3,5	;RP0=1, select bank1
  4552  1504  1303               	bcf	3,6	;RP1=0, select bank1
  4553  1505  00CD               	movwf	??_LCD_Init^(0+128)
  4554  1506                     u4627:	
  4555  1506  0BCD               	decfsz	??_LCD_Init^(0+128),f
  4556  1507  2D06               	goto	u4627
  4557  1508  0008               	return
  4558  1509                     __end_of_LCD_Init:	
  4559                           
  4560                           	psect	text18
  4561  1189                     __ptext18:	
  4562 ;; *************** function _LCD_Cursor *****************
  4563 ;; Defined at:
  4564 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  Row             1    wreg     unsigned char 
  4567 ;;  Col             1    4[BANK1 ] unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  Row             1    6[BANK1 ] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;		None               void
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       1       0       0
  4580 ;;      Locals:         0       0       1       0       0
  4581 ;;      Temps:          0       0       1       0       0
  4582 ;;      Totals:         0       0       3       0       0
  4583 ;;Total ram usage:        3 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    5
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _LCD_Cursor
  4595  1189                     _LCD_Cursor:	
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4599                           ;LCD_Cursor@Row stored from wreg
  4600  1189  1683               	bsf	3,5	;RP0=1, select bank1
  4601  118A  1303               	bcf	3,6	;RP1=0, select bank1
  4602  118B  00CD               	movwf	LCD_Cursor@Row^(0+128)
  4603                           
  4604                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4605  118C  1283               	bcf	3,5	;RP0=0, select bank0
  4606  118D  1303               	bcf	3,6	;RP1=0, select bank0
  4607  118E  1009               	bcf	9,0	;volatile
  4608                           
  4609                           ;lcd.c: 14: if (Row == 0)
  4610  118F  1683               	bsf	3,5	;RP0=1, select bank1
  4611  1190  1303               	bcf	3,6	;RP1=0, select bank1
  4612  1191  08CD               	movf	LCD_Cursor@Row^(0+128),f
  4613  1192  1D03               	skipz
  4614  1193  2997               	goto	l3000
  4615                           
  4616                           ;lcd.c: 15: {
  4617                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4618  1194  084B               	movf	LCD_Cursor@Col^(0+128),w
  4619  1195  3E80               	addlw	128
  4620  1196  299B               	goto	L2
  4621  1197                     l3000:	
  4622                           ;lcd.c: 17: }
  4623                           
  4624                           
  4625                           ;lcd.c: 18: else
  4626                           ;lcd.c: 19: {
  4627                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4628  1197  1683               	bsf	3,5	;RP0=1, select bank1
  4629  1198  1303               	bcf	3,6	;RP1=0, select bank1
  4630  1199  084B               	movf	LCD_Cursor@Col^(0+128),w
  4631  119A  3EC0               	addlw	192
  4632  119B                     L2:	
  4633  119B  1283               	bcf	3,5	;RP0=0, select bank0
  4634  119C  1303               	bcf	3,6	;RP1=0, select bank0
  4635  119D  0088               	movwf	8	;volatile
  4636                           
  4637                           ;lcd.c: 21: }
  4638                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4639  119E  1489               	bsf	9,1	;volatile
  4640                           
  4641                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4642  119F  303D               	movlw	61
  4643  11A0  1683               	bsf	3,5	;RP0=1, select bank1
  4644  11A1  1303               	bcf	3,6	;RP1=0, select bank1
  4645  11A2  00CC               	movwf	??_LCD_Cursor^(0+128)
  4646  11A3                     u4637:	
  4647  11A3  0BCC               	decfsz	??_LCD_Cursor^(0+128),f
  4648  11A4  29A3               	goto	u4637
  4649                           
  4650                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4651  11A5  1283               	bcf	3,5	;RP0=0, select bank0
  4652  11A6  1303               	bcf	3,6	;RP1=0, select bank0
  4653  11A7  1089               	bcf	9,1	;volatile
  4654  11A8  0008               	return
  4655  11A9                     __end_of_LCD_Cursor:	
  4656                           
  4657                           	psect	text19
  4658  07D3                     __ptext19:	
  4659 ;; *************** function _LCD_Clear *****************
  4660 ;; Defined at:
  4661 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;		None               void
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0
  4677 ;;      Temps:          0       0       2       0       0
  4678 ;;      Totals:         0       0       2       0       0
  4679 ;;Total ram usage:        2 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    6
  4682 ;; This function calls:
  4683 ;;		_LCD_WriteCmd
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _LCD_Clear
  4691  07D3                     _LCD_Clear:	
  4692                           
  4693                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4697  07D3  3001               	movlw	1
  4698  07D4  160A  118A  211E  120A  118A  	fcall	_LCD_WriteCmd
  4699                           
  4700                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4701  07D9  300C               	movlw	12
  4702  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  4703  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  4704  07DC  00CE               	movwf	(??_LCD_Clear^(0+128)+1)
  4705  07DD  30F7               	movlw	247
  4706  07DE  00CD               	movwf	??_LCD_Clear^(0+128)
  4707  07DF                     u4647:	
  4708  07DF  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4709  07E0  2FDF               	goto	u4647
  4710  07E1  0BCE               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4711  07E2  2FDF               	goto	u4647
  4712                           
  4713                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4714  07E3  300C               	movlw	12
  4715  07E4  160A  118A  211E  120A  118A  	fcall	_LCD_WriteCmd
  4716                           
  4717                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4718  07E9  303D               	movlw	61
  4719  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  4720  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  4721  07EC  00CD               	movwf	??_LCD_Clear^(0+128)
  4722  07ED                     u4657:	
  4723  07ED  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4724  07EE  2FED               	goto	u4657
  4725                           
  4726                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4727  07EF  3006               	movlw	6
  4728  07F0  160A  118A  211E  120A  118A  	fcall	_LCD_WriteCmd
  4729                           
  4730                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4731  07F5  303D               	movlw	61
  4732  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  4733  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  4734  07F8  00CD               	movwf	??_LCD_Clear^(0+128)
  4735  07F9                     u4667:	
  4736  07F9  0BCD               	decfsz	??_LCD_Clear^(0+128),f
  4737  07FA  2FF9               	goto	u4667
  4738  07FB  0008               	return
  4739  07FC                     __end_of_LCD_Clear:	
  4740                           
  4741                           	psect	text20
  4742  111E                     __ptext20:	
  4743 ;; *************** function _LCD_WriteCmd *****************
  4744 ;; Defined at:
  4745 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  Byte            1    wreg     unsigned char 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  Byte            1    5[BANK1 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;		None               void
  4752 ;; Registers used:
  4753 ;;		wreg
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         0       0       0       0       0
  4760 ;;      Locals:         0       0       1       0       0
  4761 ;;      Temps:          0       0       1       0       0
  4762 ;;      Totals:         0       0       2       0       0
  4763 ;;Total ram usage:        2 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    5
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_LCD_Clear
  4770 ;;		_LCD_Init
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _LCD_WriteCmd
  4776  111E                     _LCD_WriteCmd:	
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _LCD_WriteCmd: [wreg]
  4780                           ;LCD_WriteCmd@Byte stored from wreg
  4781  111E  1683               	bsf	3,5	;RP0=1, select bank1
  4782  111F  1303               	bcf	3,6	;RP1=0, select bank1
  4783  1120  00CC               	movwf	LCD_WriteCmd@Byte^(0+128)
  4784                           
  4785                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4786  1121  1283               	bcf	3,5	;RP0=0, select bank0
  4787  1122  1303               	bcf	3,6	;RP1=0, select bank0
  4788  1123  1009               	bcf	9,0	;volatile
  4789                           
  4790                           ;lcd.c: 36: PORTD = Byte;
  4791  1124  1683               	bsf	3,5	;RP0=1, select bank1
  4792  1125  1303               	bcf	3,6	;RP1=0, select bank1
  4793  1126  084C               	movf	LCD_WriteCmd@Byte^(0+128),w
  4794  1127  1283               	bcf	3,5	;RP0=0, select bank0
  4795  1128  1303               	bcf	3,6	;RP1=0, select bank0
  4796  1129  0088               	movwf	8	;volatile
  4797                           
  4798                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4799  112A  1489               	bsf	9,1	;volatile
  4800                           
  4801                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4802  112B  303D               	movlw	61
  4803  112C  1683               	bsf	3,5	;RP0=1, select bank1
  4804  112D  1303               	bcf	3,6	;RP1=0, select bank1
  4805  112E  00CB               	movwf	??_LCD_WriteCmd^(0+128)
  4806  112F                     u4677:	
  4807  112F  0BCB               	decfsz	??_LCD_WriteCmd^(0+128),f
  4808  1130  292F               	goto	u4677
  4809                           
  4810                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4811  1131  1283               	bcf	3,5	;RP0=0, select bank0
  4812  1132  1303               	bcf	3,6	;RP1=0, select bank0
  4813  1133  1089               	bcf	9,1	;volatile
  4814  1134  0008               	return
  4815  1135                     __end_of_LCD_WriteCmd:	
  4816                           
  4817                           	psect	text21
  4818  10F8                     __ptext21:	
  4819 ;; *************** function _ADC_Init *****************
  4820 ;; Defined at:
  4821 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		None
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4835 ;;      Params:         0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    5
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _ADC_Init
  4851  10F8                     _ADC_Init:	
  4852                           
  4853                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _ADC_Init: []
  4857  10F8  1683               	bsf	3,5	;RP0=1, select bank1
  4858  10F9  1303               	bcf	3,6	;RP1=0, select bank1
  4859  10FA  179F               	bsf	31,7	;volatile
  4860                           
  4861                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4862  10FB  159F               	bsf	31,3	;volatile
  4863                           
  4864                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4865  10FC  151F               	bsf	31,2	;volatile
  4866                           
  4867                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4868  10FD  149F               	bsf	31,1	;volatile
  4869                           
  4870                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4871  10FE  101F               	bcf	31,0	;volatile
  4872                           
  4873                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4874  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  4875  1100  1303               	bcf	3,6	;RP1=0, select bank0
  4876  1101  179F               	bsf	31,7	;volatile
  4877                           
  4878                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4879  1102  131F               	bcf	31,6	;volatile
  4880                           
  4881                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4882  1103  1683               	bsf	3,5	;RP0=1, select bank1
  4883  1104  1303               	bcf	3,6	;RP1=0, select bank1
  4884  1105  130C               	bcf	12,6	;volatile
  4885                           
  4886                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4887  1106  1283               	bcf	3,5	;RP0=0, select bank0
  4888  1107  1303               	bcf	3,6	;RP1=0, select bank0
  4889  1108  130C               	bcf	12,6	;volatile
  4890  1109  0008               	return
  4891  110A                     __end_of_ADC_Init:	
  4892                           
  4893                           	psect	text22
  4894  0BC2                     __ptext22:	
  4895 ;; *************** function _ISR *****************
  4896 ;; Defined at:
  4897 ;;		line 305 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0
  4913 ;;      Temps:          0       0       4       0       0
  4914 ;;      Totals:         0       0       4       0       0
  4915 ;;Total ram usage:        4 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		_Fuzzy
  4920 ;;		_USART_ReceiveChar
  4921 ;;		___lwtoft
  4922 ;;		i1_PWM_DutyCycle2
  4923 ;;		i1_TIMER0_Set
  4924 ;;		i1_USART_WriteString
  4925 ;;		i1___lwdiv
  4926 ;;		i1___wmul
  4927 ;; This function is called by:
  4928 ;;		Interrupt level 1
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _ISR
  4934  0BC2                     _ISR:	
  4935                           
  4936                           ;main.c: 308: if (PIR1bits.RCIF)
  4937  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0BC4  1E8C               	btfss	12,5	;volatile
  4940  0BC5  2CED               	goto	i1l3266
  4941                           
  4942                           ;main.c: 309: {
  4943                           ;main.c: 310: if (USART_ReceiveChar() == '0')
  4944  0BC6  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  4945  0BCB  3A30               	xorlw	48
  4946  0BCC  1D03               	skipz
  4947  0BCD  2BE7               	goto	i1l3196
  4948                           
  4949                           ;main.c: 311: {
  4950                           ;main.c: 312: USART_WriteString("\n\rdesligado\n\r");
  4951  0BCE  30EA               	movlw	low (STR_1| (0+32768))
  4952  0BCF  00F1               	movwf	i1USART_WriteString@str
  4953  0BD0  3098               	movlw	high (STR_1| (0+32768))
  4954  0BD1  00F2               	movwf	i1USART_WriteString@str+1
  4955  0BD2  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  4956                           
  4957                           ;main.c: 313: pwm = 0;
  4958  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  4960  0BD9  01C3               	clrf	_pwm^(0+128)
  4961  0BDA  01C4               	clrf	(_pwm+1)^(0+128)
  4962                           
  4963                           ;main.c: 314: PWM_DutyCycle2(pwm);
  4964  0BDB  0844               	movf	(_pwm+1)^(0+128),w
  4965  0BDC  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  4966  0BDD  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  4967  0BDE  0843               	movf	_pwm^(0+128),w
  4968  0BDF  01F0               	clrf	i1PWM_DutyCycle2@valor
  4969  0BE0  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  4970  0BE1  160A  118A  2135  120A  158A  	fcall	i1_PWM_DutyCycle2
  4971                           
  4972                           ;main.c: 315: return;
  4973  0BE6  2D4E               	goto	i1l180
  4974  0BE7                     i1l3196:	
  4975                           
  4976                           ;main.c: 316: }
  4977                           ;main.c: 318: if (USART_ReceiveChar() == '1')
  4978  0BE7  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  4979  0BEC  3A31               	xorlw	49
  4980  0BED  1D03               	skipz
  4981  0BEE  2BFE               	goto	i1l3202
  4982                           
  4983                           ;main.c: 319: {
  4984                           ;main.c: 320: USART_WriteString("\n\rpwm = 32\n\r");
  4985  0BEF  30F8               	movlw	low (STR_2| (0+32768))
  4986  0BF0  00F1               	movwf	i1USART_WriteString@str
  4987  0BF1  3098               	movlw	high (STR_2| (0+32768))
  4988  0BF2  00F2               	movwf	i1USART_WriteString@str+1
  4989  0BF3  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  4990                           
  4991                           ;main.c: 321: pwm = 32;
  4992  0BF8  3020               	movlw	32
  4993  0BF9  1683               	bsf	3,5	;RP0=1, select bank1
  4994  0BFA  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0BFB  00C3               	movwf	_pwm^(0+128)
  4996  0BFC  3000               	movlw	0
  4997  0BFD  00C4               	movwf	(_pwm^(0+128)+1)
  4998  0BFE                     i1l3202:	
  4999                           
  5000                           ;main.c: 323: }
  5001                           ;main.c: 325: if (USART_ReceiveChar() == '2')
  5002  0BFE  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5003  0C03  3A32               	xorlw	50
  5004  0C04  1D03               	skipz
  5005  0C05  2C15               	goto	i1l3208
  5006                           
  5007                           ;main.c: 326: {
  5008                           ;main.c: 327: USART_WriteString("\n\rpwm = 64\n\r");
  5009  0C06  3005               	movlw	low (STR_3| (0+32768))
  5010  0C07  00F1               	movwf	i1USART_WriteString@str
  5011  0C08  3099               	movlw	high (STR_3| (0+32768))
  5012  0C09  00F2               	movwf	i1USART_WriteString@str+1
  5013  0C0A  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5014                           
  5015                           ;main.c: 328: pwm = 64;
  5016  0C0F  3040               	movlw	64
  5017  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0C12  00C3               	movwf	_pwm^(0+128)
  5020  0C13  3000               	movlw	0
  5021  0C14  00C4               	movwf	(_pwm^(0+128)+1)
  5022  0C15                     i1l3208:	
  5023                           
  5024                           ;main.c: 330: }
  5025                           ;main.c: 332: if (USART_ReceiveChar() == '3')
  5026  0C15  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5027  0C1A  3A33               	xorlw	51
  5028  0C1B  1D03               	skipz
  5029  0C1C  2C33               	goto	i1l3218
  5030                           
  5031                           ;main.c: 333: {
  5032                           ;main.c: 334: USART_WriteString("\n\rpwm = 128\n\r");
  5033  0C1D  30CE               	movlw	low (STR_4| (0+32768))
  5034  0C1E  00F1               	movwf	i1USART_WriteString@str
  5035  0C1F  3098               	movlw	high (STR_4| (0+32768))
  5036  0C20  00F2               	movwf	i1USART_WriteString@str+1
  5037  0C21  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5038                           
  5039                           ;main.c: 335: pwm = 128;
  5040  0C26  3080               	movlw	128
  5041  0C27  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0C28  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0C29  00C3               	movwf	_pwm^(0+128)
  5044  0C2A  3000               	movlw	0
  5045  0C2B  00C4               	movwf	(_pwm^(0+128)+1)
  5046                           
  5047                           ;main.c: 337: if(PORTBbits.RB0 == 0)
  5048  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0C2E  1806               	btfsc	6,0	;volatile
  5051  0C2F  2C32               	goto	i1l184
  5052                           
  5053                           ;main.c: 338: {
  5054                           ;main.c: 339: PORTBbits.RB0 = 1;
  5055  0C30  1406               	bsf	6,0	;volatile
  5056                           
  5057                           ;main.c: 340: }else{
  5058  0C31  2C33               	goto	i1l3218
  5059  0C32                     i1l184:	
  5060                           
  5061                           ;main.c: 341: PORTBbits.RB0 = 0;
  5062  0C32  1006               	bcf	6,0	;volatile
  5063  0C33                     i1l3218:	
  5064                           
  5065                           ;main.c: 342: }
  5066                           ;main.c: 343: }
  5067                           ;main.c: 345: if (USART_ReceiveChar() == '4')
  5068  0C33  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5069  0C38  3A34               	xorlw	52
  5070  0C39  1D03               	skipz
  5071  0C3A  2C5D               	goto	i1l3230
  5072                           
  5073                           ;main.c: 346: {
  5074                           ;main.c: 347: USART_WriteString("\n\rpwm = 256\n\r");
  5075  0C3B  30B2               	movlw	low (STR_5| (0+32768))
  5076  0C3C  00F1               	movwf	i1USART_WriteString@str
  5077  0C3D  3098               	movlw	high (STR_5| (0+32768))
  5078  0C3E  00F2               	movwf	i1USART_WriteString@str+1
  5079  0C3F  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5080                           
  5081                           ;main.c: 348: pwm = 256;
  5082  0C44  3000               	movlw	0
  5083  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  5084  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  5085  0C47  00C3               	movwf	_pwm^(0+128)
  5086  0C48  3001               	movlw	1
  5087  0C49  00C4               	movwf	(_pwm^(0+128)+1)
  5088                           
  5089                           ;main.c: 349: PWM_DutyCycle2(pwm);
  5090  0C4A  0844               	movf	(_pwm+1)^(0+128),w
  5091  0C4B  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  5092  0C4C  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  5093  0C4D  0843               	movf	_pwm^(0+128),w
  5094  0C4E  01F0               	clrf	i1PWM_DutyCycle2@valor
  5095  0C4F  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  5096  0C50  160A  118A  2135  120A  158A  	fcall	i1_PWM_DutyCycle2
  5097                           
  5098                           ;main.c: 350: if(PORTBbits.RB1 == 0)
  5099  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0C57  1886               	btfsc	6,1	;volatile
  5102  0C58  2C5B               	goto	i1l187
  5103                           
  5104                           ;main.c: 351: {
  5105                           ;main.c: 352: PORTBbits.RB1 = 1;
  5106  0C59  1486               	bsf	6,1	;volatile
  5107                           
  5108                           ;main.c: 353: }else{
  5109  0C5A  2D4E               	goto	i1l180
  5110  0C5B                     i1l187:	
  5111                           
  5112                           ;main.c: 354: PORTBbits.RB1 = 0;
  5113  0C5B  1086               	bcf	6,1	;volatile
  5114                           
  5115                           ;main.c: 355: }
  5116                           ;main.c: 356: return;
  5117  0C5C  2D4E               	goto	i1l180
  5118  0C5D                     i1l3230:	
  5119                           
  5120                           ;main.c: 357: }
  5121                           ;main.c: 359: if (USART_ReceiveChar() == '5')
  5122  0C5D  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5123  0C62  3A35               	xorlw	53
  5124  0C63  1D03               	skipz
  5125  0C64  2C74               	goto	i1l3236
  5126                           
  5127                           ;main.c: 360: {
  5128                           ;main.c: 361: USART_WriteString("\n\rpwm = 512\n\r");
  5129  0C65  30A4               	movlw	low (STR_6| (0+32768))
  5130  0C66  00F1               	movwf	i1USART_WriteString@str
  5131  0C67  3098               	movlw	high (STR_6| (0+32768))
  5132  0C68  00F2               	movwf	i1USART_WriteString@str+1
  5133  0C69  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5134                           
  5135                           ;main.c: 362: pwm = 512;
  5136  0C6E  3000               	movlw	0
  5137  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  5139  0C71  00C3               	movwf	_pwm^(0+128)
  5140  0C72  3002               	movlw	2
  5141  0C73  00C4               	movwf	(_pwm^(0+128)+1)
  5142  0C74                     i1l3236:	
  5143                           
  5144                           ;main.c: 364: }
  5145                           ;main.c: 366: if (USART_ReceiveChar() == '6')
  5146  0C74  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5147  0C79  3A36               	xorlw	54
  5148  0C7A  1D03               	skipz
  5149  0C7B  2C8B               	goto	i1l3242
  5150                           
  5151                           ;main.c: 367: {
  5152                           ;main.c: 368: USART_WriteString("\n\rpwm = 768\n\r");
  5153  0C7C  30DC               	movlw	low (STR_7| (0+32768))
  5154  0C7D  00F1               	movwf	i1USART_WriteString@str
  5155  0C7E  3098               	movlw	high (STR_7| (0+32768))
  5156  0C7F  00F2               	movwf	i1USART_WriteString@str+1
  5157  0C80  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5158                           
  5159                           ;main.c: 369: pwm = 768;
  5160  0C85  3000               	movlw	0
  5161  0C86  1683               	bsf	3,5	;RP0=1, select bank1
  5162  0C87  1303               	bcf	3,6	;RP1=0, select bank1
  5163  0C88  00C3               	movwf	_pwm^(0+128)
  5164  0C89  3003               	movlw	3
  5165  0C8A  00C4               	movwf	(_pwm^(0+128)+1)
  5166  0C8B                     i1l3242:	
  5167                           
  5168                           ;main.c: 371: }
  5169                           ;main.c: 373: if (USART_ReceiveChar() == '7')
  5170  0C8B  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5171  0C90  3A37               	xorlw	55
  5172  0C91  1D03               	skipz
  5173  0C92  2CA2               	goto	i1l3248
  5174                           
  5175                           ;main.c: 374: {
  5176                           ;main.c: 375: USART_WriteString("\n\rpwm = 896\n\r");
  5177  0C93  30C0               	movlw	low (STR_8| (0+32768))
  5178  0C94  00F1               	movwf	i1USART_WriteString@str
  5179  0C95  3098               	movlw	high (STR_8| (0+32768))
  5180  0C96  00F2               	movwf	i1USART_WriteString@str+1
  5181  0C97  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5182                           
  5183                           ;main.c: 376: pwm = 896;
  5184  0C9C  3080               	movlw	128
  5185  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  5186  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  5187  0C9F  00C3               	movwf	_pwm^(0+128)
  5188  0CA0  3003               	movlw	3
  5189  0CA1  00C4               	movwf	(_pwm^(0+128)+1)
  5190  0CA2                     i1l3248:	
  5191                           
  5192                           ;main.c: 378: }
  5193                           ;main.c: 380: if (USART_ReceiveChar() == '8')
  5194  0CA2  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5195  0CA7  3A38               	xorlw	56
  5196  0CA8  1D03               	skipz
  5197  0CA9  2CB9               	goto	i1l3254
  5198                           
  5199                           ;main.c: 381: {
  5200                           ;main.c: 382: USART_WriteString("\n\rpwm = 1000\n\r");
  5201  0CAA  3086               	movlw	low (STR_9| (0+32768))
  5202  0CAB  00F1               	movwf	i1USART_WriteString@str
  5203  0CAC  3098               	movlw	high (STR_9| (0+32768))
  5204  0CAD  00F2               	movwf	i1USART_WriteString@str+1
  5205  0CAE  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5206                           
  5207                           ;main.c: 383: pwm = 1000;
  5208  0CB3  30E8               	movlw	232
  5209  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  5210  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  5211  0CB6  00C3               	movwf	_pwm^(0+128)
  5212  0CB7  3003               	movlw	3
  5213  0CB8  00C4               	movwf	(_pwm^(0+128)+1)
  5214  0CB9                     i1l3254:	
  5215                           
  5216                           ;main.c: 385: }
  5217                           ;main.c: 387: if (USART_ReceiveChar() == '9')
  5218  0CB9  160A  118A  2150  120A  158A  	fcall	_USART_ReceiveChar
  5219  0CBE  3A39               	xorlw	57
  5220  0CBF  1D03               	skipz
  5221  0CC0  2CD0               	goto	i1l3260
  5222                           
  5223                           ;main.c: 388: {
  5224                           ;main.c: 389: USART_WriteString("\n\rpwm = 1023\n\r");
  5225  0CC1  3095               	movlw	low (STR_10| (0+32768))
  5226  0CC2  00F1               	movwf	i1USART_WriteString@str
  5227  0CC3  3098               	movlw	high (STR_10| (0+32768))
  5228  0CC4  00F2               	movwf	i1USART_WriteString@str+1
  5229  0CC5  160A  118A  21EB  120A  158A  	fcall	i1_USART_WriteString
  5230                           
  5231                           ;main.c: 390: pwm = 1023;
  5232  0CCA  30FF               	movlw	255
  5233  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  5234  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  5235  0CCD  00C3               	movwf	_pwm^(0+128)
  5236  0CCE  3003               	movlw	3
  5237  0CCF  00C4               	movwf	(_pwm^(0+128)+1)
  5238  0CD0                     i1l3260:	
  5239                           
  5240                           ;main.c: 392: }
  5241                           ;main.c: 396: Fuzzy();
  5242  0CD0  120A  118A  2061  120A  158A  	fcall	_Fuzzy
  5243                           
  5244                           ;main.c: 397: tf = pwm;
  5245  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  5246  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  5247  0CD7  0844               	movf	(_pwm+1)^(0+128),w
  5248  0CD8  01F9               	clrf	___lwtoft@c+1
  5249  0CD9  07F9               	addwf	___lwtoft@c+1,f
  5250  0CDA  0843               	movf	_pwm^(0+128),w
  5251  0CDB  01F8               	clrf	___lwtoft@c
  5252  0CDC  07F8               	addwf	___lwtoft@c,f
  5253  0CDD  160A  118A  210A  120A  158A  	fcall	___lwtoft
  5254  0CE2  0878               	movf	?___lwtoft,w
  5255  0CE3  1683               	bsf	3,5	;RP0=1, select bank3
  5256  0CE4  1703               	bsf	3,6	;RP1=1, select bank3
  5257  0CE5  00C0               	movwf	_tf^(0+384)
  5258  0CE6  0879               	movf	?___lwtoft+1,w
  5259  0CE7  00C1               	movwf	(_tf+1)^(0+384)
  5260  0CE8  087A               	movf	?___lwtoft+2,w
  5261  0CE9  00C2               	movwf	(_tf+2)^(0+384)
  5262                           
  5263                           ;main.c: 399: PIR1bits.RCIF = 0;
  5264  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0CEC  128C               	bcf	12,5	;volatile
  5267  0CED                     i1l3266:	
  5268                           
  5269                           ;main.c: 400: }
  5270                           ;main.c: 403: if (PIR1bits.ADIF)
  5271  0CED  1B0C               	btfsc	12,6	;volatile
  5272                           
  5273                           ;main.c: 404: {
  5274                           ;main.c: 408: PIR1bits.ADIF = 0;
  5275  0CEE  130C               	bcf	12,6	;volatile
  5276                           
  5277                           ;main.c: 409: }
  5278                           ;main.c: 413: if (INTCONbits.T0IF)
  5279  0CEF  1D0B               	btfss	11,2	;volatile
  5280  0CF0  2D4A               	goto	i1l3292
  5281                           
  5282                           ;main.c: 414: {
  5283                           ;main.c: 416: TIMER0_Set(238);
  5284  0CF1  30EE               	movlw	238
  5285  0CF2  160A  118A  20A4  120A  158A  	fcall	i1_TIMER0_Set
  5286                           
  5287                           ;main.c: 419: if (contagens_tm0 < 499)
  5288  0CF7  3001               	movlw	1
  5289  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0CFA  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  5292  0CFB  30F3               	movlw	243
  5293  0CFC  1903               	skipnz
  5294  0CFD  023D               	subwf	_contagens_tm0^(0+128),w
  5295  0CFE  1803               	skipnc
  5296  0CFF  2D0A               	goto	i1l3278
  5297                           
  5298                           ;main.c: 420: {
  5299                           ;main.c: 422: contagens_tm0++;
  5300  0D00  3001               	movlw	1
  5301  0D01  07BD               	addwf	_contagens_tm0^(0+128),f
  5302  0D02  1803               	skipnc
  5303  0D03  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  5304  0D04  3000               	movlw	0
  5305  0D05  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  5306                           
  5307                           ;main.c: 425: PORTBbits.RB6 = 1;
  5308  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  5309  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  5310  0D08  1706               	bsf	6,6	;volatile
  5311                           
  5312                           ;main.c: 426: }
  5313  0D09  2D49               	goto	i1l3290
  5314  0D0A                     i1l3278:	
  5315                           
  5316                           ;main.c: 427: else
  5317                           ;main.c: 428: {
  5318                           ;main.c: 430: contagens_tm0 = 0;
  5319  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  5320  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  5321  0D0C  01BD               	clrf	_contagens_tm0^(0+128)
  5322  0D0D  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  5323                           
  5324                           ;main.c: 433: pulsos = (TMR1H << 8) + TMR1L;
  5325  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0D10  080F               	movf	15,w	;volatile
  5328  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  5330  0D13  01C2               	clrf	(_pulsos+1)^(0+128)
  5331  0D14  07C2               	addwf	(_pulsos+1)^(0+128),f
  5332  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0D17  080E               	movf	14,w	;volatile
  5335  0D18  1683               	bsf	3,5	;RP0=1, select bank1
  5336  0D19  1303               	bcf	3,6	;RP1=0, select bank1
  5337  0D1A  01C1               	clrf	_pulsos^(0+128)
  5338  0D1B  07C1               	addwf	_pulsos^(0+128),f
  5339                           
  5340                           ;main.c: 434: rpm = ((pulsos / pas_cooler) * 120);
  5341  0D1C  0866               	movf	(_pas_cooler+1)^(0+128),w
  5342  0D1D  01F1               	clrf	i1___lwdiv@divisor+1
  5343  0D1E  07F1               	addwf	i1___lwdiv@divisor+1,f
  5344  0D1F  0865               	movf	_pas_cooler^(0+128),w
  5345  0D20  01F0               	clrf	i1___lwdiv@divisor
  5346  0D21  07F0               	addwf	i1___lwdiv@divisor,f
  5347  0D22  0842               	movf	(_pulsos+1)^(0+128),w
  5348  0D23  01F3               	clrf	i1___lwdiv@dividend+1
  5349  0D24  07F3               	addwf	i1___lwdiv@dividend+1,f
  5350  0D25  0841               	movf	_pulsos^(0+128),w
  5351  0D26  01F2               	clrf	i1___lwdiv@dividend
  5352  0D27  07F2               	addwf	i1___lwdiv@dividend,f
  5353  0D28  160A  118A  2312  120A  158A  	fcall	i1___lwdiv
  5354  0D2D  0871               	movf	?i1___lwdiv+1,w
  5355  0D2E  01F9               	clrf	i1___wmul@multiplier+1
  5356  0D2F  07F9               	addwf	i1___wmul@multiplier+1,f
  5357  0D30  0870               	movf	?i1___lwdiv,w
  5358  0D31  01F8               	clrf	i1___wmul@multiplier
  5359  0D32  07F8               	addwf	i1___wmul@multiplier,f
  5360  0D33  3078               	movlw	120
  5361  0D34  00FA               	movwf	i1___wmul@multiplicand
  5362  0D35  3000               	movlw	0
  5363  0D36  00FB               	movwf	i1___wmul@multiplicand+1
  5364  0D37  160A  118A  220E  120A  158A  	fcall	i1___wmul
  5365  0D3C  0879               	movf	?i1___wmul+1,w
  5366  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  5367  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  5368  0D3F  01C6               	clrf	(_rpm+1)^(0+128)
  5369  0D40  07C6               	addwf	(_rpm+1)^(0+128),f
  5370  0D41  0878               	movf	?i1___wmul,w
  5371  0D42  01C5               	clrf	_rpm^(0+128)
  5372  0D43  07C5               	addwf	_rpm^(0+128),f
  5373                           
  5374                           ;main.c: 437: TMR1L = 0x00;
  5375  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0D46  018E               	clrf	14	;volatile
  5378                           
  5379                           ;main.c: 438: TMR1H = 0x00;
  5380  0D47  018F               	clrf	15	;volatile
  5381                           
  5382                           ;main.c: 441: PORTBbits.RB6 = 0;
  5383  0D48  1306               	bcf	6,6	;volatile
  5384  0D49                     i1l3290:	
  5385                           
  5386                           ;main.c: 442: }
  5387                           ;main.c: 445: INTCONbits.T0IF = 0;
  5388  0D49  110B               	bcf	11,2	;volatile
  5389  0D4A                     i1l3292:	
  5390                           
  5391                           ;main.c: 446: }
  5392                           ;main.c: 449: if (PIR1bits.TMR1IF)
  5393  0D4A  180C               	btfsc	12,0	;volatile
  5394                           
  5395                           ;main.c: 450: {
  5396                           ;main.c: 454: PIR1bits.TMR1IF = 0;
  5397  0D4B  100C               	bcf	12,0	;volatile
  5398                           
  5399                           ;main.c: 455: }
  5400                           ;main.c: 458: if (PIR1bits.SSPIF)
  5401  0D4C  198C               	btfsc	12,3	;volatile
  5402                           
  5403                           ;main.c: 459: {
  5404                           ;main.c: 463: PIR1bits.SSPIF = 0;
  5405  0D4D  118C               	bcf	12,3	;volatile
  5406  0D4E                     i1l180:	
  5407  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  5408  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  5409  0D50  084A               	movf	(??_ISR+3)^(0+128),w
  5410  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0D53  00FF               	movwf	127
  5413  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  5414  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  5415  0D56  0849               	movf	(??_ISR+2)^(0+128),w
  5416  0D57  008A               	movwf	10
  5417  0D58  0848               	movf	(??_ISR+1)^(0+128),w
  5418  0D59  0084               	movwf	4
  5419  0D5A  0E47               	swapf	??_ISR^(0+128),w
  5420  0D5B  0083               	movwf	3
  5421  0D5C  0EFE               	swapf	126,f
  5422  0D5D  0E7E               	swapf	126,w
  5423  0D5E  0009               	retfie
  5424  0D5F                     __end_of_ISR:	
  5425                           
  5426                           	psect	intentry
  5427  0004                     __pintentry:	
  5428                           ;incstack = 0
  5429                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5430                           
  5431  0004                     interrupt_function:	
  5432  007E                     saved_w	set	btemp
  5433  0004  00FE               	movwf	btemp
  5434  0005  0E03               	swapf	3,w
  5435  0006  1683               	bsf	3,5	;RP0=1, select bank1
  5436  0007  1303               	bcf	3,6	;RP1=0, select bank1
  5437  0008  00C7               	movwf	??_ISR^(0+128)
  5438  0009  0804               	movf	4,w
  5439  000A  00C8               	movwf	(??_ISR+1)^(0+128)
  5440  000B  080A               	movf	10,w
  5441  000C  00C9               	movwf	(??_ISR+2)^(0+128)
  5442  000D  1283               	bcf	3,5	;RP0=0, select bank0
  5443  000E  1303               	bcf	3,6	;RP1=0, select bank0
  5444  000F  087F               	movf	btemp+1,w
  5445  0010  1683               	bsf	3,5	;RP0=1, select bank1
  5446  0011  1303               	bcf	3,6	;RP1=0, select bank1
  5447  0012  00CA               	movwf	(??_ISR+3)^(0+128)
  5448  0013  120A  158A  2BC2   	ljmp	_ISR
  5449                           
  5450                           	psect	text23
  5451  120E                     __ptext23:	
  5452 ;; *************** function i1___wmul *****************
  5453 ;; Defined at:
  5454 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  multiplier      2    8[COMMON] unsigned int 
  5457 ;;  multiplicand    2   10[COMMON] unsigned int 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  __wmul          2   12[COMMON] unsigned int 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2    8[COMMON] unsigned int 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5469 ;;      Params:         4       0       0       0       0
  5470 ;;      Locals:         2       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0
  5472 ;;      Totals:         6       0       0       0       0
  5473 ;;Total ram usage:        6 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_ISR
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function i1___wmul
  5484  120E                     i1___wmul:	
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5488  120E  01FC               	clrf	i1___wmul@product
  5489  120F  01FD               	clrf	i1___wmul@product+1
  5490  1210                     i1l3142:	
  5491  1210  1C78               	btfss	i1___wmul@multiplier,0
  5492  1211  2A18               	goto	i1l598
  5493  1212  087A               	movf	i1___wmul@multiplicand,w
  5494  1213  07FC               	addwf	i1___wmul@product,f
  5495  1214  1803               	skipnc
  5496  1215  0AFD               	incf	i1___wmul@product+1,f
  5497  1216  087B               	movf	i1___wmul@multiplicand+1,w
  5498  1217  07FD               	addwf	i1___wmul@product+1,f
  5499  1218                     i1l598:	
  5500  1218  3001               	movlw	1
  5501  1219                     u386_25:	
  5502  1219  1003               	clrc
  5503  121A  0DFA               	rlf	i1___wmul@multiplicand,f
  5504  121B  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5505  121C  3EFF               	addlw	-1
  5506  121D  1D03               	skipz
  5507  121E  2A19               	goto	u386_25
  5508  121F  3001               	movlw	1
  5509  1220                     u387_25:	
  5510  1220  1003               	clrc
  5511  1221  0CF9               	rrf	i1___wmul@multiplier+1,f
  5512  1222  0CF8               	rrf	i1___wmul@multiplier,f
  5513  1223  3EFF               	addlw	-1
  5514  1224  1D03               	skipz
  5515  1225  2A20               	goto	u387_25
  5516  1226  0879               	movf	i1___wmul@multiplier+1,w
  5517  1227  0478               	iorwf	i1___wmul@multiplier,w
  5518  1228  1D03               	skipz
  5519  1229  2A10               	goto	i1l3142
  5520  122A  087D               	movf	i1___wmul@product+1,w
  5521  122B  01F9               	clrf	?i1___wmul+1
  5522  122C  07F9               	addwf	?i1___wmul+1,f
  5523  122D  087C               	movf	i1___wmul@product,w
  5524  122E  01F8               	clrf	?i1___wmul
  5525  122F  07F8               	addwf	?i1___wmul,f
  5526  1230  0008               	return
  5527  1231                     __end_ofi1___wmul:	
  5528                           
  5529                           	psect	text24
  5530  1312                     __ptext24:	
  5531 ;; *************** function i1___lwdiv *****************
  5532 ;; Defined at:
  5533 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  divisor         2    0[COMMON] unsigned int 
  5536 ;;  dividend        2    2[COMMON] unsigned int 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5539 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  2    0[COMMON] unsigned int 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5549 ;;      Params:         4       0       0       0       0
  5550 ;;      Locals:         3       0       0       0       0
  5551 ;;      Temps:          1       0       0       0       0
  5552 ;;      Totals:         8       0       0       0       0
  5553 ;;Total ram usage:        8 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_ISR
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function i1___lwdiv
  5564  1312                     i1___lwdiv:	
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5568  1312  01F5               	clrf	i1___lwdiv@quotient
  5569  1313  01F6               	clrf	i1___lwdiv@quotient+1
  5570  1314  0871               	movf	i1___lwdiv@divisor+1,w
  5571  1315  0470               	iorwf	i1___lwdiv@divisor,w
  5572  1316  1903               	skipnz
  5573  1317  2B49               	goto	i1l3174
  5574  1318  01F7               	clrf	i1___lwdiv@counter
  5575  1319  0AF7               	incf	i1___lwdiv@counter,f
  5576  131A                     i1l3162:	
  5577  131A  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5578  131B  2B28               	goto	i1l3164
  5579  131C  3001               	movlw	1
  5580  131D                     u390_25:	
  5581  131D  1003               	clrc
  5582  131E  0DF0               	rlf	i1___lwdiv@divisor,f
  5583  131F  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5584  1320  3EFF               	addlw	-1
  5585  1321  1D03               	skipz
  5586  1322  2B1D               	goto	u390_25
  5587  1323  3001               	movlw	1
  5588  1324  00F4               	movwf	??i1___lwdiv
  5589  1325  0874               	movf	??i1___lwdiv,w
  5590  1326  07F7               	addwf	i1___lwdiv@counter,f
  5591  1327  2B1A               	goto	i1l3162
  5592  1328                     i1l3164:	
  5593  1328  3001               	movlw	1
  5594  1329                     u392_25:	
  5595  1329  1003               	clrc
  5596  132A  0DF5               	rlf	i1___lwdiv@quotient,f
  5597  132B  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5598  132C  3EFF               	addlw	-1
  5599  132D  1D03               	skipz
  5600  132E  2B29               	goto	u392_25
  5601  132F  0871               	movf	i1___lwdiv@divisor+1,w
  5602  1330  0273               	subwf	i1___lwdiv@dividend+1,w
  5603  1331  1D03               	skipz
  5604  1332  2B35               	goto	u393_25
  5605  1333  0870               	movf	i1___lwdiv@divisor,w
  5606  1334  0272               	subwf	i1___lwdiv@dividend,w
  5607  1335                     u393_25:	
  5608  1335  1C03               	skipc
  5609  1336  2B3E               	goto	i1l3170
  5610  1337  0870               	movf	i1___lwdiv@divisor,w
  5611  1338  02F2               	subwf	i1___lwdiv@dividend,f
  5612  1339  0871               	movf	i1___lwdiv@divisor+1,w
  5613  133A  1C03               	skipc
  5614  133B  03F3               	decf	i1___lwdiv@dividend+1,f
  5615  133C  02F3               	subwf	i1___lwdiv@dividend+1,f
  5616  133D  1475               	bsf	i1___lwdiv@quotient,0
  5617  133E                     i1l3170:	
  5618  133E  3001               	movlw	1
  5619  133F                     u394_25:	
  5620  133F  1003               	clrc
  5621  1340  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5622  1341  0CF0               	rrf	i1___lwdiv@divisor,f
  5623  1342  3EFF               	addlw	-1
  5624  1343  1D03               	skipz
  5625  1344  2B3F               	goto	u394_25
  5626  1345  3001               	movlw	1
  5627  1346  02F7               	subwf	i1___lwdiv@counter,f
  5628  1347  1D03               	btfss	3,2
  5629  1348  2B28               	goto	i1l3164
  5630  1349                     i1l3174:	
  5631  1349  0876               	movf	i1___lwdiv@quotient+1,w
  5632  134A  01F1               	clrf	?i1___lwdiv+1
  5633  134B  07F1               	addwf	?i1___lwdiv+1,f
  5634  134C  0875               	movf	i1___lwdiv@quotient,w
  5635  134D  01F0               	clrf	?i1___lwdiv
  5636  134E  07F0               	addwf	?i1___lwdiv,f
  5637  134F  0008               	return
  5638  1350                     __end_ofi1___lwdiv:	
  5639                           
  5640                           	psect	text25
  5641  10A4                     __ptext25:	
  5642 ;; *************** function i1_TIMER0_Set *****************
  5643 ;; Defined at:
  5644 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  contagens       1    wreg     unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  contagens       1    0[COMMON] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;		None               void
  5651 ;; Registers used:
  5652 ;;		wreg
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5658 ;;      Params:         0       0       0       0       0
  5659 ;;      Locals:         1       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0
  5661 ;;      Totals:         1       0       0       0       0
  5662 ;;Total ram usage:        1 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_ISR
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function i1_TIMER0_Set
  5673  10A4                     i1_TIMER0_Set:	
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in i1_TIMER0_Set: [wreg]
  5677                           ;i1TIMER0_Set@contagens stored from wreg
  5678  10A4  00F0               	movwf	i1TIMER0_Set@contagens
  5679                           
  5680                           ;timers.c: 22: TMR0 = contagens;
  5681  10A5  0870               	movf	i1TIMER0_Set@contagens,w
  5682  10A6  1283               	bcf	3,5	;RP0=0, select bank0
  5683  10A7  1303               	bcf	3,6	;RP1=0, select bank0
  5684  10A8  0081               	movwf	1	;volatile
  5685  10A9  0008               	return
  5686  10AA                     __end_ofi1_TIMER0_Set:	
  5687                           
  5688                           	psect	text26
  5689  1150                     __ptext26:	
  5690 ;; *************** function _USART_ReceiveChar *****************
  5691 ;; Defined at:
  5692 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  byte            1    4[COMMON] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       0       0       0       0
  5707 ;;      Locals:         1       0       0       0       0
  5708 ;;      Temps:          1       0       0       0       0
  5709 ;;      Totals:         2       0       0       0       0
  5710 ;;Total ram usage:        2 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    2
  5713 ;; This function calls:
  5714 ;;		i1_USART_WriteString
  5715 ;; This function is called by:
  5716 ;;		_ISR
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function _USART_ReceiveChar
  5722  1150                     _USART_ReceiveChar:	
  5723                           
  5724                           ;usart.c: 65: unsigned char byte;
  5725                           ;usart.c: 67: if (!OERR)
  5726                           
  5727                           ;incstack = 0
  5728                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5729  1150  1283               	bcf	3,5	;RP0=0, select bank0
  5730  1151  1303               	bcf	3,6	;RP1=0, select bank0
  5731  1152  1898               	btfsc	24,1	;volatile
  5732  1153  2959               	goto	i1l2874
  5733                           
  5734                           ;usart.c: 68: {
  5735                           ;usart.c: 69: byte = RCREG;
  5736  1154  081A               	movf	26,w	;volatile
  5737  1155  00F3               	movwf	??_USART_ReceiveChar
  5738  1156  0873               	movf	??_USART_ReceiveChar,w
  5739  1157  00F4               	movwf	USART_ReceiveChar@byte
  5740  1158  2968               	goto	i1l2882
  5741  1159                     i1l2874:	
  5742                           ;usart.c: 71: }
  5743                           
  5744                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5745                           
  5746                           
  5747                           ;usart.c: 72: else
  5748                           ;usart.c: 73: {
  5749                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5750  1159  301C               	movlw	low (STR_19| (0+32768))
  5751  115A  00F1               	movwf	i1USART_WriteString@str
  5752  115B  3098               	movlw	high (STR_19| (0+32768))
  5753  115C  00F2               	movwf	i1USART_WriteString@str+1
  5754  115D  160A  118A  21EB   	fcall	i1_USART_WriteString
  5755                           
  5756                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5757  1160  1283               	bcf	3,5	;RP0=0, select bank0
  5758  1161  1303               	bcf	3,6	;RP1=0, select bank0
  5759  1162  1218               	bcf	24,4	;volatile
  5760                           
  5761                           ;usart.c: 77: byte = RCREG;
  5762  1163  081A               	movf	26,w	;volatile
  5763  1164  00F3               	movwf	??_USART_ReceiveChar
  5764  1165  0873               	movf	??_USART_ReceiveChar,w
  5765  1166  00F4               	movwf	USART_ReceiveChar@byte
  5766                           
  5767                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5768  1167  1618               	bsf	24,4	;volatile
  5769  1168                     i1l2882:	
  5770                           
  5771                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5772  1168  128C               	bcf	12,5	;volatile
  5773                           
  5774                           ;usart.c: 80: }
  5775                           ;usart.c: 82: return(byte);
  5776  1169  0874               	movf	USART_ReceiveChar@byte,w
  5777  116A  0008               	return
  5778  116B                     __end_of_USART_ReceiveChar:	
  5779                           
  5780                           	psect	text27
  5781  11EB                     __ptext27:	
  5782 ;; *************** function i1_USART_WriteString *****************
  5783 ;; Defined at:
  5784 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  str             2    1[COMMON] PTR const unsigned char 
  5787 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5788 ;;		 -> STR_11(29), STR_10(15), STR_9(15), STR_8(14), 
  5789 ;;		 -> STR_7(14), STR_6(14), STR_5(14), STR_4(14), 
  5790 ;;		 -> STR_3(13), STR_2(13), STR_1(14), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         2       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0
  5805 ;;      Totals:         2       0       0       0       0
  5806 ;;Total ram usage:        2 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		i1_USART_WriteChar
  5811 ;; This function is called by:
  5812 ;;		_ISR
  5813 ;;		_USART_ReceiveChar
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function i1_USART_WriteString
  5819  11EB                     i1_USART_WriteString:	
  5820  11EB                     i1l2726:	
  5821                           ;usart.c: 54: while(*str != '\0')
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5825                           
  5826  11EB  0872               	movf	i1USART_WriteString@str+1,w
  5827  11EC  1283               	bcf	3,5	;RP0=0, select bank0
  5828  11ED  1303               	bcf	3,6	;RP1=0, select bank0
  5829  11EE  00FF               	movwf	127
  5830  11EF  0871               	movf	i1USART_WriteString@str,w
  5831  11F0  0084               	movwf	4
  5832  11F1  160A  158A  2000  160A  118A  	fcall	stringtab
  5833  11F6  3800               	iorlw	0
  5834  11F7  1903               	btfsc	3,2
  5835  11F8  0008               	return
  5836                           
  5837                           ;usart.c: 55: {
  5838                           ;usart.c: 56: USART_WriteChar(*str);
  5839  11F9  0872               	movf	i1USART_WriteString@str+1,w
  5840  11FA  1283               	bcf	3,5	;RP0=0, select bank0
  5841  11FB  1303               	bcf	3,6	;RP1=0, select bank0
  5842  11FC  00FF               	movwf	127
  5843  11FD  0871               	movf	i1USART_WriteString@str,w
  5844  11FE  0084               	movwf	4
  5845  11FF  160A  158A  2000  160A  118A  	fcall	stringtab
  5846  1204  160A  118A  20B8  160A  118A  	fcall	i1_USART_WriteChar
  5847                           
  5848                           ;usart.c: 57: str++;
  5849  1209  3001               	movlw	1
  5850  120A  07F1               	addwf	i1USART_WriteString@str,f
  5851  120B  1803               	skipnc
  5852  120C  0AF2               	incf	i1USART_WriteString@str+1,f
  5853  120D  29EB               	goto	i1l2726
  5854  120E                     __end_ofi1_USART_WriteString:	
  5855                           
  5856                           	psect	text28
  5857  10B8                     __ptext28:	
  5858 ;; *************** function i1_USART_WriteChar *****************
  5859 ;; Defined at:
  5860 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  byte            1    wreg     unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  byte            1    0[COMMON] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       0       0       0       0
  5875 ;;      Locals:         1       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         1       0       0       0       0
  5878 ;;Total ram usage:        1 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		i1_USART_WriteString
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function i1_USART_WriteChar
  5889  10B8                     i1_USART_WriteChar:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in i1_USART_WriteChar: [wreg]
  5893                           ;i1USART_WriteChar@byte stored from wreg
  5894  10B8  00F0               	movwf	i1USART_WriteChar@byte
  5895  10B9                     i1l227:	
  5896                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5897                           
  5898  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  5899  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  5900  10BB  1E0C               	btfss	12,4	;volatile
  5901  10BC  28B9               	goto	i1l227
  5902                           
  5903                           ;usart.c: 47: TXREG = byte;
  5904  10BD  0870               	movf	i1USART_WriteChar@byte,w
  5905  10BE  0099               	movwf	25	;volatile
  5906  10BF  0008               	return
  5907  10C0                     __end_ofi1_USART_WriteChar:	
  5908                           
  5909                           	psect	text29
  5910  0061                     __ptext29:	
  5911 ;; *************** function _Fuzzy *****************
  5912 ;; Defined at:
  5913 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  a               2   61[BANK0 ] int 
  5918 ;;  a               2   59[BANK0 ] int 
  5919 ;;  a               2   57[BANK0 ] int 
  5920 ;;  a               2   65[BANK0 ] int 
  5921 ;;  a               2   63[BANK0 ] int 
  5922 ;;  aumenta         3   76[BANK0 ] float 
  5923 ;;  reduz           3   73[BANK0 ] float 
  5924 ;;  mantem          3   70[BANK0 ] float 
  5925 ;;  tip             3   67[BANK0 ] float 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0      22       0       0       0
  5937 ;;      Temps:          0       0       0       0       0
  5938 ;;      Totals:         0      22       0       0       0
  5939 ;;Total ram usage:       22 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    3
  5942 ;; This function calls:
  5943 ;;		___ftadd
  5944 ;;		___ftdiv
  5945 ;;		___ftge
  5946 ;;		___ftmul
  5947 ;;		___ftneg
  5948 ;;		___fttol
  5949 ;;		___lwtoft
  5950 ;;		_max_val
  5951 ;;		_trapmf
  5952 ;;		_trimf
  5953 ;;		i1_PWM_DutyCycle2
  5954 ;; This function is called by:
  5955 ;;		_ISR
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _Fuzzy
  5961  0061                     _Fuzzy:	
  5962                           
  5963                           ;main.c: 140: setpoint = (float)pwm;
  5964                           
  5965                           ;incstack = 0
  5966                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5967  0061  1683               	bsf	3,5	;RP0=1, select bank1
  5968  0062  1303               	bcf	3,6	;RP1=0, select bank1
  5969  0063  0844               	movf	(_pwm+1)^(0+128),w
  5970  0064  01F9               	clrf	___lwtoft@c+1
  5971  0065  07F9               	addwf	___lwtoft@c+1,f
  5972  0066  0843               	movf	_pwm^(0+128),w
  5973  0067  01F8               	clrf	___lwtoft@c
  5974  0068  07F8               	addwf	___lwtoft@c,f
  5975  0069  160A  118A  210A  120A  118A  	fcall	___lwtoft
  5976  006E  0878               	movf	?___lwtoft,w
  5977  006F  1683               	bsf	3,5	;RP0=1, select bank3
  5978  0070  1703               	bsf	3,6	;RP1=1, select bank3
  5979  0071  00BD               	movwf	_setpoint^(0+384)
  5980  0072  0879               	movf	?___lwtoft+1,w
  5981  0073  00BE               	movwf	(_setpoint+1)^(0+384)
  5982  0074  087A               	movf	?___lwtoft+2,w
  5983  0075  00BF               	movwf	(_setpoint+2)^(0+384)
  5984                           
  5985                           ;main.c: 142: float mantem = 1100;
  5986  0076  3080               	movlw	128
  5987  0077  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0078  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0079  00E6               	movwf	Fuzzy@mantem
  5990  007A  3089               	movlw	137
  5991  007B  00E7               	movwf	Fuzzy@mantem+1
  5992  007C  3044               	movlw	68
  5993  007D  00E8               	movwf	Fuzzy@mantem+2
  5994                           
  5995                           ;main.c: 143: float reduz = 2200;
  5996  007E  3080               	movlw	128
  5997  007F  00E9               	movwf	Fuzzy@reduz
  5998  0080  3009               	movlw	9
  5999  0081  00EA               	movwf	Fuzzy@reduz+1
  6000  0082  3045               	movlw	69
  6001  0083  00EB               	movwf	Fuzzy@reduz+2
  6002                           
  6003                           ;main.c: 144: float aumenta = 3300;
  6004  0084  3040               	movlw	64
  6005  0085  00EC               	movwf	Fuzzy@aumenta
  6006  0086  304E               	movlw	78
  6007  0087  00ED               	movwf	Fuzzy@aumenta+1
  6008  0088  3045               	movlw	69
  6009  0089  00EE               	movwf	Fuzzy@aumenta+2
  6010                           
  6011                           ;main.c: 145: float tip;
  6012                           ;main.c: 147: fitemp =0;
  6013  008A  3000               	movlw	0
  6014  008B  1683               	bsf	3,5	;RP0=1, select bank1
  6015  008C  1303               	bcf	3,6	;RP1=0, select bank1
  6016  008D  00A0               	movwf	_fitemp^(0+128)
  6017  008E  3000               	movlw	0
  6018  008F  00A1               	movwf	(_fitemp+1)^(0+128)
  6019  0090  3000               	movlw	0
  6020  0091  00A2               	movwf	(_fitemp+2)^(0+128)
  6021                           
  6022                           ;main.c: 150: temp = (setpoint - tf);
  6023  0092  1683               	bsf	3,5	;RP0=1, select bank3
  6024  0093  1703               	bsf	3,6	;RP1=1, select bank3
  6025  0094  083D               	movf	_setpoint^(0+384),w
  6026  0095  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0096  1303               	bcf	3,6	;RP1=0, select bank0
  6028  0097  00AA               	movwf	___ftadd@f1
  6029  0098  1683               	bsf	3,5	;RP0=1, select bank3
  6030  0099  1703               	bsf	3,6	;RP1=1, select bank3
  6031  009A  083E               	movf	(_setpoint+1)^(0+384),w
  6032  009B  1283               	bcf	3,5	;RP0=0, select bank0
  6033  009C  1303               	bcf	3,6	;RP1=0, select bank0
  6034  009D  00AB               	movwf	___ftadd@f1+1
  6035  009E  1683               	bsf	3,5	;RP0=1, select bank3
  6036  009F  1703               	bsf	3,6	;RP1=1, select bank3
  6037  00A0  083F               	movf	(_setpoint+2)^(0+384),w
  6038  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  6039  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  6040  00A3  00AC               	movwf	___ftadd@f1+2
  6041  00A4  1683               	bsf	3,5	;RP0=1, select bank3
  6042  00A5  1703               	bsf	3,6	;RP1=1, select bank3
  6043  00A6  0840               	movf	_tf^(0+384),w
  6044  00A7  00F0               	movwf	___ftneg@f1
  6045  00A8  0841               	movf	(_tf+1)^(0+384),w
  6046  00A9  00F1               	movwf	___ftneg@f1+1
  6047  00AA  0842               	movf	(_tf+2)^(0+384),w
  6048  00AB  00F2               	movwf	___ftneg@f1+2
  6049  00AC  160A  118A  20B0  120A  118A  	fcall	___ftneg
  6050  00B1  0870               	movf	?___ftneg,w
  6051  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  6052  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  6053  00B4  00AD               	movwf	___ftadd@f2
  6054  00B5  0871               	movf	?___ftneg+1,w
  6055  00B6  00AE               	movwf	___ftadd@f2+1
  6056  00B7  0872               	movf	?___ftneg+2,w
  6057  00B8  00AF               	movwf	___ftadd@f2+2
  6058  00B9  120A  158A  201A  120A  118A  	fcall	___ftadd
  6059  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  6060  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  6061  00C0  082A               	movf	?___ftadd,w
  6062  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  6063  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  6064  00C3  00AF               	movwf	_temp^(0+128)
  6065  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6066  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  6067  00C6  082B               	movf	?___ftadd+1,w
  6068  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  6069  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  6070  00C9  00B0               	movwf	(_temp+1)^(0+128)
  6071  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  6072  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  6073  00CC  082C               	movf	?___ftadd+2,w
  6074  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  6075  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  6076  00CF  00B1               	movwf	(_temp+2)^(0+128)
  6077                           
  6078                           ;main.c: 151: deltaV = temp;
  6079  00D0  082F               	movf	_temp^(0+128),w
  6080  00D1  00F0               	movwf	___fttol@f1
  6081  00D2  0830               	movf	(_temp+1)^(0+128),w
  6082  00D3  00F1               	movwf	___fttol@f1+1
  6083  00D4  0831               	movf	(_temp+2)^(0+128),w
  6084  00D5  00F2               	movwf	___fttol@f1+2
  6085  00D6  160A  118A  2509  120A  118A  	fcall	___fttol
  6086  00DB  0871               	movf	?___fttol+1,w
  6087  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  6088  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  6089  00DE  01C0               	clrf	(_deltaV+1)^(0+128)
  6090  00DF  07C0               	addwf	(_deltaV+1)^(0+128),f
  6091  00E0  0870               	movf	?___fttol,w
  6092  00E1  01BF               	clrf	_deltaV^(0+128)
  6093  00E2  07BF               	addwf	_deltaV^(0+128),f
  6094                           
  6095                           ;main.c: 153: if (temp >100) temp = 100;
  6096  00E3  3000               	movlw	0
  6097  00E4  00F0               	movwf	___ftge@ff1
  6098  00E5  30C8               	movlw	200
  6099  00E6  00F1               	movwf	___ftge@ff1+1
  6100  00E7  3042               	movlw	66
  6101  00E8  00F2               	movwf	___ftge@ff1+2
  6102  00E9  082F               	movf	_temp^(0+128),w
  6103  00EA  00F3               	movwf	___ftge@ff2
  6104  00EB  0830               	movf	(_temp+1)^(0+128),w
  6105  00EC  00F4               	movwf	___ftge@ff2+1
  6106  00ED  0831               	movf	(_temp+2)^(0+128),w
  6107  00EE  00F5               	movwf	___ftge@ff2+2
  6108  00EF  160A  118A  23D9  120A  118A  	fcall	___ftge
  6109  00F4  1803               	btfsc	3,0
  6110  00F5  28FE               	goto	i1l2744
  6111  00F6  3000               	movlw	0
  6112  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  6113  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  6114  00F9  00AF               	movwf	_temp^(0+128)
  6115  00FA  30C8               	movlw	200
  6116  00FB  00B0               	movwf	(_temp+1)^(0+128)
  6117  00FC  3042               	movlw	66
  6118  00FD  00B1               	movwf	(_temp+2)^(0+128)
  6119  00FE                     i1l2744:	
  6120                           
  6121                           ;main.c: 154: if (temp <0) temp = 0;
  6122  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  6123  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  6124  0100  082F               	movf	_temp^(0+128),w
  6125  0101  00F0               	movwf	___ftge@ff1
  6126  0102  0830               	movf	(_temp+1)^(0+128),w
  6127  0103  00F1               	movwf	___ftge@ff1+1
  6128  0104  0831               	movf	(_temp+2)^(0+128),w
  6129  0105  00F2               	movwf	___ftge@ff1+2
  6130  0106  3000               	movlw	0
  6131  0107  00F3               	movwf	___ftge@ff2
  6132  0108  3000               	movlw	0
  6133  0109  00F4               	movwf	___ftge@ff2+1
  6134  010A  3000               	movlw	0
  6135  010B  00F5               	movwf	___ftge@ff2+2
  6136  010C  160A  118A  23D9  120A  118A  	fcall	___ftge
  6137  0111  1803               	btfsc	3,0
  6138  0112  291B               	goto	i1l2748
  6139  0113  3000               	movlw	0
  6140  0114  1683               	bsf	3,5	;RP0=1, select bank1
  6141  0115  1303               	bcf	3,6	;RP1=0, select bank1
  6142  0116  00AF               	movwf	_temp^(0+128)
  6143  0117  3000               	movlw	0
  6144  0118  00B0               	movwf	(_temp+1)^(0+128)
  6145  0119  3000               	movlw	0
  6146  011A  00B1               	movwf	(_temp+2)^(0+128)
  6147  011B                     i1l2748:	
  6148                           
  6149                           ;main.c: 157: if (temp < 25)
  6150  011B  1683               	bsf	3,5	;RP0=1, select bank1
  6151  011C  1303               	bcf	3,6	;RP1=0, select bank1
  6152  011D  082F               	movf	_temp^(0+128),w
  6153  011E  00F0               	movwf	___ftge@ff1
  6154  011F  0830               	movf	(_temp+1)^(0+128),w
  6155  0120  00F1               	movwf	___ftge@ff1+1
  6156  0121  0831               	movf	(_temp+2)^(0+128),w
  6157  0122  00F2               	movwf	___ftge@ff1+2
  6158  0123  3000               	movlw	0
  6159  0124  00F3               	movwf	___ftge@ff2
  6160  0125  30C8               	movlw	200
  6161  0126  00F4               	movwf	___ftge@ff2+1
  6162  0127  3041               	movlw	65
  6163  0128  00F5               	movwf	___ftge@ff2+2
  6164  0129  160A  118A  23D9  120A  118A  	fcall	___ftge
  6165  012E  1803               	btfsc	3,0
  6166  012F  2A84               	goto	i1l2772
  6167                           
  6168                           ;main.c: 158: {
  6169                           ;main.c: 161: fitemp = trapmf(temp, 0,0,13,32);
  6170  0130  1683               	bsf	3,5	;RP0=1, select bank1
  6171  0131  1303               	bcf	3,6	;RP1=0, select bank1
  6172  0132  082F               	movf	_temp^(0+128),w
  6173  0133  1283               	bcf	3,5	;RP0=0, select bank0
  6174  0134  1303               	bcf	3,6	;RP1=0, select bank0
  6175  0135  00C7               	movwf	trapmf@x
  6176  0136  1683               	bsf	3,5	;RP0=1, select bank1
  6177  0137  1303               	bcf	3,6	;RP1=0, select bank1
  6178  0138  0830               	movf	(_temp+1)^(0+128),w
  6179  0139  1283               	bcf	3,5	;RP0=0, select bank0
  6180  013A  1303               	bcf	3,6	;RP1=0, select bank0
  6181  013B  00C8               	movwf	trapmf@x+1
  6182  013C  1683               	bsf	3,5	;RP0=1, select bank1
  6183  013D  1303               	bcf	3,6	;RP1=0, select bank1
  6184  013E  0831               	movf	(_temp+2)^(0+128),w
  6185  013F  1283               	bcf	3,5	;RP0=0, select bank0
  6186  0140  1303               	bcf	3,6	;RP1=0, select bank0
  6187  0141  00C9               	movwf	trapmf@x+2
  6188  0142  3000               	movlw	0
  6189  0143  00CA               	movwf	trapmf@a
  6190  0144  3000               	movlw	0
  6191  0145  00CB               	movwf	trapmf@a+1
  6192  0146  3000               	movlw	0
  6193  0147  00CC               	movwf	trapmf@a+2
  6194  0148  3000               	movlw	0
  6195  0149  00CD               	movwf	trapmf@b
  6196  014A  3000               	movlw	0
  6197  014B  00CE               	movwf	trapmf@b+1
  6198  014C  3000               	movlw	0
  6199  014D  00CF               	movwf	trapmf@b+2
  6200  014E  3000               	movlw	0
  6201  014F  00D0               	movwf	trapmf@c
  6202  0150  3050               	movlw	80
  6203  0151  00D1               	movwf	trapmf@c+1
  6204  0152  3041               	movlw	65
  6205  0153  00D2               	movwf	trapmf@c+2
  6206  0154  3000               	movlw	0
  6207  0155  00D3               	movwf	trapmf@d
  6208  0156  3000               	movlw	0
  6209  0157  00D4               	movwf	trapmf@d+1
  6210  0158  3042               	movlw	66
  6211  0159  00D5               	movwf	trapmf@d+2
  6212  015A  120A  158A  226C  120A  118A  	fcall	_trapmf
  6213  015F  1283               	bcf	3,5	;RP0=0, select bank0
  6214  0160  1303               	bcf	3,6	;RP1=0, select bank0
  6215  0161  0847               	movf	?_trapmf,w
  6216  0162  1683               	bsf	3,5	;RP0=1, select bank1
  6217  0163  1303               	bcf	3,6	;RP1=0, select bank1
  6218  0164  00A0               	movwf	_fitemp^(0+128)
  6219  0165  1283               	bcf	3,5	;RP0=0, select bank0
  6220  0166  1303               	bcf	3,6	;RP1=0, select bank0
  6221  0167  0848               	movf	?_trapmf+1,w
  6222  0168  1683               	bsf	3,5	;RP0=1, select bank1
  6223  0169  1303               	bcf	3,6	;RP1=0, select bank1
  6224  016A  00A1               	movwf	(_fitemp+1)^(0+128)
  6225  016B  1283               	bcf	3,5	;RP0=0, select bank0
  6226  016C  1303               	bcf	3,6	;RP1=0, select bank0
  6227  016D  0849               	movf	?_trapmf+2,w
  6228  016E  1683               	bsf	3,5	;RP0=1, select bank1
  6229  016F  1303               	bcf	3,6	;RP1=0, select bank1
  6230  0170  00A2               	movwf	(_fitemp+2)^(0+128)
  6231                           
  6232                           ;main.c: 164: fop_rule1 = max_val(fitemp,0.1);
  6233  0171  0820               	movf	_fitemp^(0+128),w
  6234  0172  1283               	bcf	3,5	;RP0=0, select bank0
  6235  0173  1303               	bcf	3,6	;RP1=0, select bank0
  6236  0174  00A0               	movwf	max_val@a
  6237  0175  1683               	bsf	3,5	;RP0=1, select bank1
  6238  0176  1303               	bcf	3,6	;RP1=0, select bank1
  6239  0177  0821               	movf	(_fitemp+1)^(0+128),w
  6240  0178  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0179  1303               	bcf	3,6	;RP1=0, select bank0
  6242  017A  00A1               	movwf	max_val@a+1
  6243  017B  1683               	bsf	3,5	;RP0=1, select bank1
  6244  017C  1303               	bcf	3,6	;RP1=0, select bank1
  6245  017D  0822               	movf	(_fitemp+2)^(0+128),w
  6246  017E  1283               	bcf	3,5	;RP0=0, select bank0
  6247  017F  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0180  00A2               	movwf	max_val@a+2
  6249  0181  30CD               	movlw	205
  6250  0182  00A3               	movwf	max_val@b
  6251  0183  30CC               	movlw	204
  6252  0184  00A4               	movwf	max_val@b+1
  6253  0185  303D               	movlw	61
  6254  0186  00A5               	movwf	max_val@b+2
  6255  0187  160A  118A  216B  120A  118A  	fcall	_max_val
  6256  018C  1283               	bcf	3,5	;RP0=0, select bank0
  6257  018D  1303               	bcf	3,6	;RP1=0, select bank0
  6258  018E  0820               	movf	?_max_val,w
  6259  018F  1683               	bsf	3,5	;RP0=1, select bank1
  6260  0190  1303               	bcf	3,6	;RP1=0, select bank1
  6261  0191  00A3               	movwf	_fop_rule1^(0+128)
  6262  0192  1283               	bcf	3,5	;RP0=0, select bank0
  6263  0193  1303               	bcf	3,6	;RP1=0, select bank0
  6264  0194  0821               	movf	?_max_val+1,w
  6265  0195  1683               	bsf	3,5	;RP0=1, select bank1
  6266  0196  1303               	bcf	3,6	;RP1=0, select bank1
  6267  0197  00A4               	movwf	(_fop_rule1+1)^(0+128)
  6268  0198  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0199  1303               	bcf	3,6	;RP1=0, select bank0
  6270  019A  0822               	movf	?_max_val+2,w
  6271  019B  1683               	bsf	3,5	;RP0=1, select bank1
  6272  019C  1303               	bcf	3,6	;RP1=0, select bank1
  6273  019D  00A5               	movwf	(_fop_rule1+2)^(0+128)
  6274                           
  6275                           ;main.c: 167: x=0;
  6276  019E  3000               	movlw	0
  6277  019F  00B5               	movwf	_x^(0+128)
  6278  01A0  3000               	movlw	0
  6279  01A1  00B6               	movwf	(_x+1)^(0+128)
  6280  01A2  3000               	movlw	0
  6281  01A3  00B7               	movwf	(_x+2)^(0+128)
  6282                           
  6283                           ;main.c: 168: y=0;
  6284  01A4  3000               	movlw	0
  6285  01A5  00B8               	movwf	_y^(0+128)
  6286  01A6  3000               	movlw	0
  6287  01A7  00B9               	movwf	(_y+1)^(0+128)
  6288  01A8  3000               	movlw	0
  6289  01A9  00BA               	movwf	(_y+2)^(0+128)
  6290                           
  6291                           ;main.c: 169: for (int a=0; a<=90; a++)
  6292  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  6293  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  6294  01AC  01D9               	clrf	Fuzzy@a
  6295  01AD  01DA               	clrf	Fuzzy@a+1
  6296  01AE  085A               	movf	Fuzzy@a+1,w
  6297  01AF  3A80               	xorlw	128
  6298  01B0  00FF               	movwf	127
  6299  01B1  3080               	movlw	128
  6300  01B2  027F               	subwf	127,w
  6301  01B3  1D03               	skipz
  6302  01B4  29B7               	goto	u338_25
  6303  01B5  305B               	movlw	91
  6304  01B6  0259               	subwf	Fuzzy@a,w
  6305  01B7                     u338_25:	
  6306  01B7  1803               	btfsc	3,0
  6307  01B8  2A84               	goto	i1l2772
  6308  01B9                     i1l2762:	
  6309                           
  6310                           ;main.c: 170: {
  6311                           ;main.c: 171: y = trapmf(x,0,0,13,32);
  6312  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  6313  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  6314  01BB  0835               	movf	_x^(0+128),w
  6315  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  6316  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  6317  01BE  00C7               	movwf	trapmf@x
  6318  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  6319  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  6320  01C1  0836               	movf	(_x+1)^(0+128),w
  6321  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  6322  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  6323  01C4  00C8               	movwf	trapmf@x+1
  6324  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  6325  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  6326  01C7  0837               	movf	(_x+2)^(0+128),w
  6327  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6328  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  6329  01CA  00C9               	movwf	trapmf@x+2
  6330  01CB  3000               	movlw	0
  6331  01CC  00CA               	movwf	trapmf@a
  6332  01CD  3000               	movlw	0
  6333  01CE  00CB               	movwf	trapmf@a+1
  6334  01CF  3000               	movlw	0
  6335  01D0  00CC               	movwf	trapmf@a+2
  6336  01D1  3000               	movlw	0
  6337  01D2  00CD               	movwf	trapmf@b
  6338  01D3  3000               	movlw	0
  6339  01D4  00CE               	movwf	trapmf@b+1
  6340  01D5  3000               	movlw	0
  6341  01D6  00CF               	movwf	trapmf@b+2
  6342  01D7  3000               	movlw	0
  6343  01D8  00D0               	movwf	trapmf@c
  6344  01D9  3050               	movlw	80
  6345  01DA  00D1               	movwf	trapmf@c+1
  6346  01DB  3041               	movlw	65
  6347  01DC  00D2               	movwf	trapmf@c+2
  6348  01DD  3000               	movlw	0
  6349  01DE  00D3               	movwf	trapmf@d
  6350  01DF  3000               	movlw	0
  6351  01E0  00D4               	movwf	trapmf@d+1
  6352  01E1  3042               	movlw	66
  6353  01E2  00D5               	movwf	trapmf@d+2
  6354  01E3  120A  158A  226C  120A  118A  	fcall	_trapmf
  6355  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  6356  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  6357  01EA  0847               	movf	?_trapmf,w
  6358  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6359  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  6360  01ED  00B8               	movwf	_y^(0+128)
  6361  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  6362  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  6363  01F0  0848               	movf	?_trapmf+1,w
  6364  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  6365  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  6366  01F3  00B9               	movwf	(_y+1)^(0+128)
  6367  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6368  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6369  01F6  0849               	movf	?_trapmf+2,w
  6370  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  6371  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  6372  01F9  00BA               	movwf	(_y+2)^(0+128)
  6373                           
  6374                           ;main.c: 173: if (y > fop_rule1)
  6375  01FA  0823               	movf	_fop_rule1^(0+128),w
  6376  01FB  00F0               	movwf	___ftge@ff1
  6377  01FC  0824               	movf	(_fop_rule1+1)^(0+128),w
  6378  01FD  00F1               	movwf	___ftge@ff1+1
  6379  01FE  0825               	movf	(_fop_rule1+2)^(0+128),w
  6380  01FF  00F2               	movwf	___ftge@ff1+2
  6381  0200  0838               	movf	_y^(0+128),w
  6382  0201  00F3               	movwf	___ftge@ff2
  6383  0202  0839               	movf	(_y+1)^(0+128),w
  6384  0203  00F4               	movwf	___ftge@ff2+1
  6385  0204  083A               	movf	(_y+2)^(0+128),w
  6386  0205  00F5               	movwf	___ftge@ff2+2
  6387  0206  160A  118A  23D9  120A  118A  	fcall	___ftge
  6388  020B  1803               	btfsc	3,0
  6389  020C  2A1D               	goto	i1l2766
  6390                           
  6391                           ;main.c: 174: {
  6392                           ;main.c: 175: mantem += fop_rule1;
  6393  020D  1683               	bsf	3,5	;RP0=1, select bank1
  6394  020E  1303               	bcf	3,6	;RP1=0, select bank1
  6395  020F  0823               	movf	_fop_rule1^(0+128),w
  6396  0210  1283               	bcf	3,5	;RP0=0, select bank0
  6397  0211  1303               	bcf	3,6	;RP1=0, select bank0
  6398  0212  00AA               	movwf	___ftadd@f1
  6399  0213  1683               	bsf	3,5	;RP0=1, select bank1
  6400  0214  1303               	bcf	3,6	;RP1=0, select bank1
  6401  0215  0824               	movf	(_fop_rule1+1)^(0+128),w
  6402  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6403  0217  1303               	bcf	3,6	;RP1=0, select bank0
  6404  0218  00AB               	movwf	___ftadd@f1+1
  6405  0219  1683               	bsf	3,5	;RP0=1, select bank1
  6406  021A  1303               	bcf	3,6	;RP1=0, select bank1
  6407  021B  0825               	movf	(_fop_rule1+2)^(0+128),w
  6408  021C  2A2C               	goto	L3
  6409  021D                     i1l2766:	
  6410                           ;main.c: 176: }
  6411                           
  6412                           
  6413                           ;main.c: 177: else
  6414                           ;main.c: 178: {
  6415                           ;main.c: 179: mantem += y;
  6416  021D  1683               	bsf	3,5	;RP0=1, select bank1
  6417  021E  1303               	bcf	3,6	;RP1=0, select bank1
  6418  021F  0838               	movf	_y^(0+128),w
  6419  0220  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0221  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0222  00AA               	movwf	___ftadd@f1
  6422  0223  1683               	bsf	3,5	;RP0=1, select bank1
  6423  0224  1303               	bcf	3,6	;RP1=0, select bank1
  6424  0225  0839               	movf	(_y+1)^(0+128),w
  6425  0226  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0227  1303               	bcf	3,6	;RP1=0, select bank0
  6427  0228  00AB               	movwf	___ftadd@f1+1
  6428  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6429  022A  1303               	bcf	3,6	;RP1=0, select bank1
  6430  022B  083A               	movf	(_y+2)^(0+128),w
  6431  022C                     L3:	
  6432  022C  1283               	bcf	3,5	;RP0=0, select bank0
  6433  022D  1303               	bcf	3,6	;RP1=0, select bank0
  6434  022E  00AC               	movwf	___ftadd@f1+2
  6435  022F  0866               	movf	Fuzzy@mantem,w
  6436  0230  00AD               	movwf	___ftadd@f2
  6437  0231  0867               	movf	Fuzzy@mantem+1,w
  6438  0232  00AE               	movwf	___ftadd@f2+1
  6439  0233  0868               	movf	Fuzzy@mantem+2,w
  6440  0234  00AF               	movwf	___ftadd@f2+2
  6441  0235  120A  158A  201A  120A  118A  	fcall	___ftadd
  6442  023A  1283               	bcf	3,5	;RP0=0, select bank0
  6443  023B  1303               	bcf	3,6	;RP1=0, select bank0
  6444  023C  082A               	movf	?___ftadd,w
  6445  023D  00E6               	movwf	Fuzzy@mantem
  6446  023E  082B               	movf	?___ftadd+1,w
  6447  023F  00E7               	movwf	Fuzzy@mantem+1
  6448  0240  082C               	movf	?___ftadd+2,w
  6449  0241  00E8               	movwf	Fuzzy@mantem+2
  6450                           
  6451                           ;main.c: 180: }
  6452                           ;main.c: 182: x=x+1;
  6453  0242  3000               	movlw	0
  6454  0243  00AA               	movwf	___ftadd@f1
  6455  0244  3080               	movlw	128
  6456  0245  00AB               	movwf	___ftadd@f1+1
  6457  0246  303F               	movlw	63
  6458  0247  00AC               	movwf	___ftadd@f1+2
  6459  0248  1683               	bsf	3,5	;RP0=1, select bank1
  6460  0249  1303               	bcf	3,6	;RP1=0, select bank1
  6461  024A  0835               	movf	_x^(0+128),w
  6462  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6463  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6464  024D  00AD               	movwf	___ftadd@f2
  6465  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6466  024F  1303               	bcf	3,6	;RP1=0, select bank1
  6467  0250  0836               	movf	(_x+1)^(0+128),w
  6468  0251  1283               	bcf	3,5	;RP0=0, select bank0
  6469  0252  1303               	bcf	3,6	;RP1=0, select bank0
  6470  0253  00AE               	movwf	___ftadd@f2+1
  6471  0254  1683               	bsf	3,5	;RP0=1, select bank1
  6472  0255  1303               	bcf	3,6	;RP1=0, select bank1
  6473  0256  0837               	movf	(_x+2)^(0+128),w
  6474  0257  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0258  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0259  00AF               	movwf	___ftadd@f2+2
  6477  025A  120A  158A  201A  120A  118A  	fcall	___ftadd
  6478  025F  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0260  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0261  082A               	movf	?___ftadd,w
  6481  0262  1683               	bsf	3,5	;RP0=1, select bank1
  6482  0263  1303               	bcf	3,6	;RP1=0, select bank1
  6483  0264  00B5               	movwf	_x^(0+128)
  6484  0265  1283               	bcf	3,5	;RP0=0, select bank0
  6485  0266  1303               	bcf	3,6	;RP1=0, select bank0
  6486  0267  082B               	movf	?___ftadd+1,w
  6487  0268  1683               	bsf	3,5	;RP0=1, select bank1
  6488  0269  1303               	bcf	3,6	;RP1=0, select bank1
  6489  026A  00B6               	movwf	(_x+1)^(0+128)
  6490  026B  1283               	bcf	3,5	;RP0=0, select bank0
  6491  026C  1303               	bcf	3,6	;RP1=0, select bank0
  6492  026D  082C               	movf	?___ftadd+2,w
  6493  026E  1683               	bsf	3,5	;RP0=1, select bank1
  6494  026F  1303               	bcf	3,6	;RP1=0, select bank1
  6495  0270  00B7               	movwf	(_x+2)^(0+128)
  6496  0271  3001               	movlw	1
  6497  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0274  07D9               	addwf	Fuzzy@a,f
  6500  0275  1803               	skipnc
  6501  0276  0ADA               	incf	Fuzzy@a+1,f
  6502  0277  3000               	movlw	0
  6503  0278  07DA               	addwf	Fuzzy@a+1,f
  6504  0279  085A               	movf	Fuzzy@a+1,w
  6505  027A  3A80               	xorlw	128
  6506  027B  00FF               	movwf	127
  6507  027C  3080               	movlw	128
  6508  027D  027F               	subwf	127,w
  6509  027E  1D03               	skipz
  6510  027F  2A82               	goto	u340_25
  6511  0280  305B               	movlw	91
  6512  0281  0259               	subwf	Fuzzy@a,w
  6513  0282                     u340_25:	
  6514  0282  1C03               	skipc
  6515  0283  29B9               	goto	i1l2762
  6516  0284                     i1l2772:	
  6517                           
  6518                           ;main.c: 183: }
  6519                           ;main.c: 185: }
  6520                           ;main.c: 191: if ((temp > 20) && (temp < 70))
  6521  0284  3000               	movlw	0
  6522  0285  00F0               	movwf	___ftge@ff1
  6523  0286  30A0               	movlw	160
  6524  0287  00F1               	movwf	___ftge@ff1+1
  6525  0288  3041               	movlw	65
  6526  0289  00F2               	movwf	___ftge@ff1+2
  6527  028A  1683               	bsf	3,5	;RP0=1, select bank1
  6528  028B  1303               	bcf	3,6	;RP1=0, select bank1
  6529  028C  082F               	movf	_temp^(0+128),w
  6530  028D  00F3               	movwf	___ftge@ff2
  6531  028E  0830               	movf	(_temp+1)^(0+128),w
  6532  028F  00F4               	movwf	___ftge@ff2+1
  6533  0290  0831               	movf	(_temp+2)^(0+128),w
  6534  0291  00F5               	movwf	___ftge@ff2+2
  6535  0292  160A  118A  23D9  120A  118A  	fcall	___ftge
  6536  0297  1803               	btfsc	3,0
  6537  0298  2BF6               	goto	i1l2798
  6538  0299  1683               	bsf	3,5	;RP0=1, select bank1
  6539  029A  1303               	bcf	3,6	;RP1=0, select bank1
  6540  029B  082F               	movf	_temp^(0+128),w
  6541  029C  00F0               	movwf	___ftge@ff1
  6542  029D  0830               	movf	(_temp+1)^(0+128),w
  6543  029E  00F1               	movwf	___ftge@ff1+1
  6544  029F  0831               	movf	(_temp+2)^(0+128),w
  6545  02A0  00F2               	movwf	___ftge@ff1+2
  6546  02A1  3000               	movlw	0
  6547  02A2  00F3               	movwf	___ftge@ff2
  6548  02A3  308C               	movlw	140
  6549  02A4  00F4               	movwf	___ftge@ff2+1
  6550  02A5  3042               	movlw	66
  6551  02A6  00F5               	movwf	___ftge@ff2+2
  6552  02A7  160A  118A  23D9  120A  118A  	fcall	___ftge
  6553  02AC  1803               	btfsc	3,0
  6554  02AD  2BF6               	goto	i1l2798
  6555                           
  6556                           ;main.c: 192: {
  6557                           ;main.c: 194: fitemp = trimf(temp, 9, 45, 81);
  6558  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  6559  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  6560  02B0  082F               	movf	_temp^(0+128),w
  6561  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  6562  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  6563  02B3  00C7               	movwf	trimf@x
  6564  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6565  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  6566  02B6  0830               	movf	(_temp+1)^(0+128),w
  6567  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  6568  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  6569  02B9  00C8               	movwf	trimf@x+1
  6570  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  6571  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  6572  02BC  0831               	movf	(_temp+2)^(0+128),w
  6573  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  6574  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  6575  02BF  00C9               	movwf	trimf@x+2
  6576  02C0  3000               	movlw	0
  6577  02C1  00CA               	movwf	trimf@a
  6578  02C2  3010               	movlw	16
  6579  02C3  00CB               	movwf	trimf@a+1
  6580  02C4  3041               	movlw	65
  6581  02C5  00CC               	movwf	trimf@a+2
  6582  02C6  3000               	movlw	0
  6583  02C7  00CD               	movwf	trimf@b
  6584  02C8  3034               	movlw	52
  6585  02C9  00CE               	movwf	trimf@b+1
  6586  02CA  3042               	movlw	66
  6587  02CB  00CF               	movwf	trimf@b+2
  6588  02CC  3000               	movlw	0
  6589  02CD  00D0               	movwf	trimf@c
  6590  02CE  30A2               	movlw	162
  6591  02CF  00D1               	movwf	trimf@c+1
  6592  02D0  3042               	movlw	66
  6593  02D1  00D2               	movwf	trimf@c+2
  6594  02D2  160A  118A  26DC  120A  118A  	fcall	_trimf
  6595  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6596  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  6597  02D9  0847               	movf	?_trimf,w
  6598  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  6599  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  6600  02DC  00A0               	movwf	_fitemp^(0+128)
  6601  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  6602  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  6603  02DF  0848               	movf	?_trimf+1,w
  6604  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  6605  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  6606  02E2  00A1               	movwf	(_fitemp+1)^(0+128)
  6607  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  6608  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  6609  02E5  0849               	movf	?_trimf+2,w
  6610  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  6611  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  6612  02E8  00A2               	movwf	(_fitemp+2)^(0+128)
  6613                           
  6614                           ;main.c: 197: fop_rule2 = max_val(fitemp,0.1);
  6615  02E9  0820               	movf	_fitemp^(0+128),w
  6616  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  6617  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  6618  02EC  00A0               	movwf	max_val@a
  6619  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  6620  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  6621  02EF  0821               	movf	(_fitemp+1)^(0+128),w
  6622  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  6623  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  6624  02F2  00A1               	movwf	max_val@a+1
  6625  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  6626  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  6627  02F5  0822               	movf	(_fitemp+2)^(0+128),w
  6628  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6629  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6630  02F8  00A2               	movwf	max_val@a+2
  6631  02F9  30CD               	movlw	205
  6632  02FA  00A3               	movwf	max_val@b
  6633  02FB  30CC               	movlw	204
  6634  02FC  00A4               	movwf	max_val@b+1
  6635  02FD  303D               	movlw	61
  6636  02FE  00A5               	movwf	max_val@b+2
  6637  02FF  160A  118A  216B  120A  118A  	fcall	_max_val
  6638  0304  1283               	bcf	3,5	;RP0=0, select bank0
  6639  0305  1303               	bcf	3,6	;RP1=0, select bank0
  6640  0306  0820               	movf	?_max_val,w
  6641  0307  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0308  1303               	bcf	3,6	;RP1=0, select bank1
  6643  0309  00A6               	movwf	_fop_rule2^(0+128)
  6644  030A  1283               	bcf	3,5	;RP0=0, select bank0
  6645  030B  1303               	bcf	3,6	;RP1=0, select bank0
  6646  030C  0821               	movf	?_max_val+1,w
  6647  030D  1683               	bsf	3,5	;RP0=1, select bank1
  6648  030E  1303               	bcf	3,6	;RP1=0, select bank1
  6649  030F  00A7               	movwf	(_fop_rule2+1)^(0+128)
  6650  0310  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0311  1303               	bcf	3,6	;RP1=0, select bank0
  6652  0312  0822               	movf	?_max_val+2,w
  6653  0313  1683               	bsf	3,5	;RP0=1, select bank1
  6654  0314  1303               	bcf	3,6	;RP1=0, select bank1
  6655  0315  00A8               	movwf	(_fop_rule2+2)^(0+128)
  6656                           
  6657                           ;main.c: 200: x=0;
  6658  0316  3000               	movlw	0
  6659  0317  00B5               	movwf	_x^(0+128)
  6660  0318  3000               	movlw	0
  6661  0319  00B6               	movwf	(_x+1)^(0+128)
  6662  031A  3000               	movlw	0
  6663  031B  00B7               	movwf	(_x+2)^(0+128)
  6664                           
  6665                           ;main.c: 201: y=0;
  6666  031C  3000               	movlw	0
  6667  031D  00B8               	movwf	_y^(0+128)
  6668  031E  3000               	movlw	0
  6669  031F  00B9               	movwf	(_y+1)^(0+128)
  6670  0320  3000               	movlw	0
  6671  0321  00BA               	movwf	(_y+2)^(0+128)
  6672                           
  6673                           ;main.c: 202: for (int a=0; a<=90; a++)
  6674  0322  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0323  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0324  01DB               	clrf	Fuzzy@a_232
  6677  0325  01DC               	clrf	Fuzzy@a_232+1
  6678  0326  085C               	movf	Fuzzy@a_232+1,w
  6679  0327  3A80               	xorlw	128
  6680  0328  00FF               	movwf	127
  6681  0329  3080               	movlw	128
  6682  032A  027F               	subwf	127,w
  6683  032B  1D03               	skipz
  6684  032C  2B2F               	goto	u343_25
  6685  032D  305B               	movlw	91
  6686  032E  025B               	subwf	Fuzzy@a_232,w
  6687  032F                     u343_25:	
  6688  032F  1803               	btfsc	3,0
  6689  0330  2BF6               	goto	i1l2798
  6690  0331                     i1l2788:	
  6691                           
  6692                           ;main.c: 203: {
  6693                           ;main.c: 204: y = trimf(x, 9, 45, 81);
  6694  0331  1683               	bsf	3,5	;RP0=1, select bank1
  6695  0332  1303               	bcf	3,6	;RP1=0, select bank1
  6696  0333  0835               	movf	_x^(0+128),w
  6697  0334  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0335  1303               	bcf	3,6	;RP1=0, select bank0
  6699  0336  00C7               	movwf	trimf@x
  6700  0337  1683               	bsf	3,5	;RP0=1, select bank1
  6701  0338  1303               	bcf	3,6	;RP1=0, select bank1
  6702  0339  0836               	movf	(_x+1)^(0+128),w
  6703  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6704  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6705  033C  00C8               	movwf	trimf@x+1
  6706  033D  1683               	bsf	3,5	;RP0=1, select bank1
  6707  033E  1303               	bcf	3,6	;RP1=0, select bank1
  6708  033F  0837               	movf	(_x+2)^(0+128),w
  6709  0340  1283               	bcf	3,5	;RP0=0, select bank0
  6710  0341  1303               	bcf	3,6	;RP1=0, select bank0
  6711  0342  00C9               	movwf	trimf@x+2
  6712  0343  3000               	movlw	0
  6713  0344  00CA               	movwf	trimf@a
  6714  0345  3010               	movlw	16
  6715  0346  00CB               	movwf	trimf@a+1
  6716  0347  3041               	movlw	65
  6717  0348  00CC               	movwf	trimf@a+2
  6718  0349  3000               	movlw	0
  6719  034A  00CD               	movwf	trimf@b
  6720  034B  3034               	movlw	52
  6721  034C  00CE               	movwf	trimf@b+1
  6722  034D  3042               	movlw	66
  6723  034E  00CF               	movwf	trimf@b+2
  6724  034F  3000               	movlw	0
  6725  0350  00D0               	movwf	trimf@c
  6726  0351  30A2               	movlw	162
  6727  0352  00D1               	movwf	trimf@c+1
  6728  0353  3042               	movlw	66
  6729  0354  00D2               	movwf	trimf@c+2
  6730  0355  160A  118A  26DC  120A  118A  	fcall	_trimf
  6731  035A  1283               	bcf	3,5	;RP0=0, select bank0
  6732  035B  1303               	bcf	3,6	;RP1=0, select bank0
  6733  035C  0847               	movf	?_trimf,w
  6734  035D  1683               	bsf	3,5	;RP0=1, select bank1
  6735  035E  1303               	bcf	3,6	;RP1=0, select bank1
  6736  035F  00B8               	movwf	_y^(0+128)
  6737  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0361  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0362  0848               	movf	?_trimf+1,w
  6740  0363  1683               	bsf	3,5	;RP0=1, select bank1
  6741  0364  1303               	bcf	3,6	;RP1=0, select bank1
  6742  0365  00B9               	movwf	(_y+1)^(0+128)
  6743  0366  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0367  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0368  0849               	movf	?_trimf+2,w
  6746  0369  1683               	bsf	3,5	;RP0=1, select bank1
  6747  036A  1303               	bcf	3,6	;RP1=0, select bank1
  6748  036B  00BA               	movwf	(_y+2)^(0+128)
  6749                           
  6750                           ;main.c: 206: if (y >= fop_rule2)
  6751  036C  0838               	movf	_y^(0+128),w
  6752  036D  00F0               	movwf	___ftge@ff1
  6753  036E  0839               	movf	(_y+1)^(0+128),w
  6754  036F  00F1               	movwf	___ftge@ff1+1
  6755  0370  083A               	movf	(_y+2)^(0+128),w
  6756  0371  00F2               	movwf	___ftge@ff1+2
  6757  0372  0826               	movf	_fop_rule2^(0+128),w
  6758  0373  00F3               	movwf	___ftge@ff2
  6759  0374  0827               	movf	(_fop_rule2+1)^(0+128),w
  6760  0375  00F4               	movwf	___ftge@ff2+1
  6761  0376  0828               	movf	(_fop_rule2+2)^(0+128),w
  6762  0377  00F5               	movwf	___ftge@ff2+2
  6763  0378  160A  118A  23D9  120A  118A  	fcall	___ftge
  6764  037D  1C03               	btfss	3,0
  6765  037E  2B8F               	goto	i1l2792
  6766                           
  6767                           ;main.c: 207: {
  6768                           ;main.c: 208: reduz += fop_rule2;
  6769  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6770  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6771  0381  0826               	movf	_fop_rule2^(0+128),w
  6772  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6773  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6774  0384  00AA               	movwf	___ftadd@f1
  6775  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6776  0386  1303               	bcf	3,6	;RP1=0, select bank1
  6777  0387  0827               	movf	(_fop_rule2+1)^(0+128),w
  6778  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6780  038A  00AB               	movwf	___ftadd@f1+1
  6781  038B  1683               	bsf	3,5	;RP0=1, select bank1
  6782  038C  1303               	bcf	3,6	;RP1=0, select bank1
  6783  038D  0828               	movf	(_fop_rule2+2)^(0+128),w
  6784  038E  2B9E               	goto	L4
  6785  038F                     i1l2792:	
  6786                           ;main.c: 209: }
  6787                           
  6788                           
  6789                           ;main.c: 210: else
  6790                           ;main.c: 211: {
  6791                           ;main.c: 212: reduz += y;
  6792  038F  1683               	bsf	3,5	;RP0=1, select bank1
  6793  0390  1303               	bcf	3,6	;RP1=0, select bank1
  6794  0391  0838               	movf	_y^(0+128),w
  6795  0392  1283               	bcf	3,5	;RP0=0, select bank0
  6796  0393  1303               	bcf	3,6	;RP1=0, select bank0
  6797  0394  00AA               	movwf	___ftadd@f1
  6798  0395  1683               	bsf	3,5	;RP0=1, select bank1
  6799  0396  1303               	bcf	3,6	;RP1=0, select bank1
  6800  0397  0839               	movf	(_y+1)^(0+128),w
  6801  0398  1283               	bcf	3,5	;RP0=0, select bank0
  6802  0399  1303               	bcf	3,6	;RP1=0, select bank0
  6803  039A  00AB               	movwf	___ftadd@f1+1
  6804  039B  1683               	bsf	3,5	;RP0=1, select bank1
  6805  039C  1303               	bcf	3,6	;RP1=0, select bank1
  6806  039D  083A               	movf	(_y+2)^(0+128),w
  6807  039E                     L4:	
  6808  039E  1283               	bcf	3,5	;RP0=0, select bank0
  6809  039F  1303               	bcf	3,6	;RP1=0, select bank0
  6810  03A0  00AC               	movwf	___ftadd@f1+2
  6811  03A1  0869               	movf	Fuzzy@reduz,w
  6812  03A2  00AD               	movwf	___ftadd@f2
  6813  03A3  086A               	movf	Fuzzy@reduz+1,w
  6814  03A4  00AE               	movwf	___ftadd@f2+1
  6815  03A5  086B               	movf	Fuzzy@reduz+2,w
  6816  03A6  00AF               	movwf	___ftadd@f2+2
  6817  03A7  120A  158A  201A  120A  118A  	fcall	___ftadd
  6818  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  6819  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  6820  03AE  082A               	movf	?___ftadd,w
  6821  03AF  00E9               	movwf	Fuzzy@reduz
  6822  03B0  082B               	movf	?___ftadd+1,w
  6823  03B1  00EA               	movwf	Fuzzy@reduz+1
  6824  03B2  082C               	movf	?___ftadd+2,w
  6825  03B3  00EB               	movwf	Fuzzy@reduz+2
  6826                           
  6827                           ;main.c: 213: }
  6828                           ;main.c: 215: x=x+1;
  6829  03B4  3000               	movlw	0
  6830  03B5  00AA               	movwf	___ftadd@f1
  6831  03B6  3080               	movlw	128
  6832  03B7  00AB               	movwf	___ftadd@f1+1
  6833  03B8  303F               	movlw	63
  6834  03B9  00AC               	movwf	___ftadd@f1+2
  6835  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  6836  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  6837  03BC  0835               	movf	_x^(0+128),w
  6838  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  6839  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  6840  03BF  00AD               	movwf	___ftadd@f2
  6841  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  6842  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  6843  03C2  0836               	movf	(_x+1)^(0+128),w
  6844  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6845  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6846  03C5  00AE               	movwf	___ftadd@f2+1
  6847  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  6848  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  6849  03C8  0837               	movf	(_x+2)^(0+128),w
  6850  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  6851  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  6852  03CB  00AF               	movwf	___ftadd@f2+2
  6853  03CC  120A  158A  201A  120A  118A  	fcall	___ftadd
  6854  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  6855  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  6856  03D3  082A               	movf	?___ftadd,w
  6857  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6858  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  6859  03D6  00B5               	movwf	_x^(0+128)
  6860  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6861  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  6862  03D9  082B               	movf	?___ftadd+1,w
  6863  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  6864  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  6865  03DC  00B6               	movwf	(_x+1)^(0+128)
  6866  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  6867  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  6868  03DF  082C               	movf	?___ftadd+2,w
  6869  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  6870  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  6871  03E2  00B7               	movwf	(_x+2)^(0+128)
  6872  03E3  3001               	movlw	1
  6873  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  6874  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  6875  03E6  07DB               	addwf	Fuzzy@a_232,f
  6876  03E7  1803               	skipnc
  6877  03E8  0ADC               	incf	Fuzzy@a_232+1,f
  6878  03E9  3000               	movlw	0
  6879  03EA  07DC               	addwf	Fuzzy@a_232+1,f
  6880  03EB  085C               	movf	Fuzzy@a_232+1,w
  6881  03EC  3A80               	xorlw	128
  6882  03ED  00FF               	movwf	127
  6883  03EE  3080               	movlw	128
  6884  03EF  027F               	subwf	127,w
  6885  03F0  1D03               	skipz
  6886  03F1  2BF4               	goto	u345_25
  6887  03F2  305B               	movlw	91
  6888  03F3  025B               	subwf	Fuzzy@a_232,w
  6889  03F4                     u345_25:	
  6890  03F4  1C03               	skipc
  6891  03F5  2B31               	goto	i1l2788
  6892  03F6                     i1l2798:	
  6893                           
  6894                           ;main.c: 216: }
  6895                           ;main.c: 218: }
  6896                           ;main.c: 224: if (temp > 70 )
  6897  03F6  3000               	movlw	0
  6898  03F7  00F0               	movwf	___ftge@ff1
  6899  03F8  308C               	movlw	140
  6900  03F9  00F1               	movwf	___ftge@ff1+1
  6901  03FA  3042               	movlw	66
  6902  03FB  00F2               	movwf	___ftge@ff1+2
  6903  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  6904  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  6905  03FE  082F               	movf	_temp^(0+128),w
  6906  03FF  00F3               	movwf	___ftge@ff2
  6907  0400  0830               	movf	(_temp+1)^(0+128),w
  6908  0401  00F4               	movwf	___ftge@ff2+1
  6909  0402  0831               	movf	(_temp+2)^(0+128),w
  6910  0403  00F5               	movwf	___ftge@ff2+2
  6911  0404  160A  118A  23D9  120A  118A  	fcall	___ftge
  6912  0409  1803               	btfsc	3,0
  6913  040A  2D5F               	goto	i1l2822
  6914                           
  6915                           ;main.c: 225: {
  6916                           ;main.c: 227: fitemp = trapmf(temp, 62, 79, 90, 90);
  6917  040B  1683               	bsf	3,5	;RP0=1, select bank1
  6918  040C  1303               	bcf	3,6	;RP1=0, select bank1
  6919  040D  082F               	movf	_temp^(0+128),w
  6920  040E  1283               	bcf	3,5	;RP0=0, select bank0
  6921  040F  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0410  00C7               	movwf	trapmf@x
  6923  0411  1683               	bsf	3,5	;RP0=1, select bank1
  6924  0412  1303               	bcf	3,6	;RP1=0, select bank1
  6925  0413  0830               	movf	(_temp+1)^(0+128),w
  6926  0414  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0415  1303               	bcf	3,6	;RP1=0, select bank0
  6928  0416  00C8               	movwf	trapmf@x+1
  6929  0417  1683               	bsf	3,5	;RP0=1, select bank1
  6930  0418  1303               	bcf	3,6	;RP1=0, select bank1
  6931  0419  0831               	movf	(_temp+2)^(0+128),w
  6932  041A  1283               	bcf	3,5	;RP0=0, select bank0
  6933  041B  1303               	bcf	3,6	;RP1=0, select bank0
  6934  041C  00C9               	movwf	trapmf@x+2
  6935  041D  3000               	movlw	0
  6936  041E  00CA               	movwf	trapmf@a
  6937  041F  3078               	movlw	120
  6938  0420  00CB               	movwf	trapmf@a+1
  6939  0421  3042               	movlw	66
  6940  0422  00CC               	movwf	trapmf@a+2
  6941  0423  3000               	movlw	0
  6942  0424  00CD               	movwf	trapmf@b
  6943  0425  309E               	movlw	158
  6944  0426  00CE               	movwf	trapmf@b+1
  6945  0427  3042               	movlw	66
  6946  0428  00CF               	movwf	trapmf@b+2
  6947  0429  3000               	movlw	0
  6948  042A  00D0               	movwf	trapmf@c
  6949  042B  30B4               	movlw	180
  6950  042C  00D1               	movwf	trapmf@c+1
  6951  042D  3042               	movlw	66
  6952  042E  00D2               	movwf	trapmf@c+2
  6953  042F  3000               	movlw	0
  6954  0430  00D3               	movwf	trapmf@d
  6955  0431  30B4               	movlw	180
  6956  0432  00D4               	movwf	trapmf@d+1
  6957  0433  3042               	movlw	66
  6958  0434  00D5               	movwf	trapmf@d+2
  6959  0435  120A  158A  226C  120A  118A  	fcall	_trapmf
  6960  043A  1283               	bcf	3,5	;RP0=0, select bank0
  6961  043B  1303               	bcf	3,6	;RP1=0, select bank0
  6962  043C  0847               	movf	?_trapmf,w
  6963  043D  1683               	bsf	3,5	;RP0=1, select bank1
  6964  043E  1303               	bcf	3,6	;RP1=0, select bank1
  6965  043F  00A0               	movwf	_fitemp^(0+128)
  6966  0440  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0441  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0442  0848               	movf	?_trapmf+1,w
  6969  0443  1683               	bsf	3,5	;RP0=1, select bank1
  6970  0444  1303               	bcf	3,6	;RP1=0, select bank1
  6971  0445  00A1               	movwf	(_fitemp+1)^(0+128)
  6972  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6973  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6974  0448  0849               	movf	?_trapmf+2,w
  6975  0449  1683               	bsf	3,5	;RP0=1, select bank1
  6976  044A  1303               	bcf	3,6	;RP1=0, select bank1
  6977  044B  00A2               	movwf	(_fitemp+2)^(0+128)
  6978                           
  6979                           ;main.c: 231: fop_rule3 = max_val(fitemp,0.1);
  6980  044C  0820               	movf	_fitemp^(0+128),w
  6981  044D  1283               	bcf	3,5	;RP0=0, select bank0
  6982  044E  1303               	bcf	3,6	;RP1=0, select bank0
  6983  044F  00A0               	movwf	max_val@a
  6984  0450  1683               	bsf	3,5	;RP0=1, select bank1
  6985  0451  1303               	bcf	3,6	;RP1=0, select bank1
  6986  0452  0821               	movf	(_fitemp+1)^(0+128),w
  6987  0453  1283               	bcf	3,5	;RP0=0, select bank0
  6988  0454  1303               	bcf	3,6	;RP1=0, select bank0
  6989  0455  00A1               	movwf	max_val@a+1
  6990  0456  1683               	bsf	3,5	;RP0=1, select bank1
  6991  0457  1303               	bcf	3,6	;RP1=0, select bank1
  6992  0458  0822               	movf	(_fitemp+2)^(0+128),w
  6993  0459  1283               	bcf	3,5	;RP0=0, select bank0
  6994  045A  1303               	bcf	3,6	;RP1=0, select bank0
  6995  045B  00A2               	movwf	max_val@a+2
  6996  045C  30CD               	movlw	205
  6997  045D  00A3               	movwf	max_val@b
  6998  045E  30CC               	movlw	204
  6999  045F  00A4               	movwf	max_val@b+1
  7000  0460  303D               	movlw	61
  7001  0461  00A5               	movwf	max_val@b+2
  7002  0462  160A  118A  216B  120A  118A  	fcall	_max_val
  7003  0467  1283               	bcf	3,5	;RP0=0, select bank0
  7004  0468  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0469  0820               	movf	?_max_val,w
  7006  046A  1683               	bsf	3,5	;RP0=1, select bank1
  7007  046B  1303               	bcf	3,6	;RP1=0, select bank1
  7008  046C  00A9               	movwf	_fop_rule3^(0+128)
  7009  046D  1283               	bcf	3,5	;RP0=0, select bank0
  7010  046E  1303               	bcf	3,6	;RP1=0, select bank0
  7011  046F  0821               	movf	?_max_val+1,w
  7012  0470  1683               	bsf	3,5	;RP0=1, select bank1
  7013  0471  1303               	bcf	3,6	;RP1=0, select bank1
  7014  0472  00AA               	movwf	(_fop_rule3+1)^(0+128)
  7015  0473  1283               	bcf	3,5	;RP0=0, select bank0
  7016  0474  1303               	bcf	3,6	;RP1=0, select bank0
  7017  0475  0822               	movf	?_max_val+2,w
  7018  0476  1683               	bsf	3,5	;RP0=1, select bank1
  7019  0477  1303               	bcf	3,6	;RP1=0, select bank1
  7020  0478  00AB               	movwf	(_fop_rule3+2)^(0+128)
  7021                           
  7022                           ;main.c: 234: x=0;
  7023  0479  3000               	movlw	0
  7024  047A  00B5               	movwf	_x^(0+128)
  7025  047B  3000               	movlw	0
  7026  047C  00B6               	movwf	(_x+1)^(0+128)
  7027  047D  3000               	movlw	0
  7028  047E  00B7               	movwf	(_x+2)^(0+128)
  7029                           
  7030                           ;main.c: 235: y=0;
  7031  047F  3000               	movlw	0
  7032  0480  00B8               	movwf	_y^(0+128)
  7033  0481  3000               	movlw	0
  7034  0482  00B9               	movwf	(_y+1)^(0+128)
  7035  0483  3000               	movlw	0
  7036  0484  00BA               	movwf	(_y+2)^(0+128)
  7037                           
  7038                           ;main.c: 236: for (int a=0; a<=90; a++)
  7039  0485  1283               	bcf	3,5	;RP0=0, select bank0
  7040  0486  1303               	bcf	3,6	;RP1=0, select bank0
  7041  0487  01DD               	clrf	Fuzzy@a_233
  7042  0488  01DE               	clrf	Fuzzy@a_233+1
  7043  0489  085E               	movf	Fuzzy@a_233+1,w
  7044  048A  3A80               	xorlw	128
  7045  048B  00FF               	movwf	127
  7046  048C  3080               	movlw	128
  7047  048D  027F               	subwf	127,w
  7048  048E  1D03               	skipz
  7049  048F  2C92               	goto	u347_25
  7050  0490  305B               	movlw	91
  7051  0491  025D               	subwf	Fuzzy@a_233,w
  7052  0492                     u347_25:	
  7053  0492  1803               	btfsc	3,0
  7054  0493  2D5F               	goto	i1l2822
  7055  0494                     i1l2812:	
  7056                           
  7057                           ;main.c: 237: {
  7058                           ;main.c: 238: y = trapmf(x, 62, 79, 90, 90);
  7059  0494  1683               	bsf	3,5	;RP0=1, select bank1
  7060  0495  1303               	bcf	3,6	;RP1=0, select bank1
  7061  0496  0835               	movf	_x^(0+128),w
  7062  0497  1283               	bcf	3,5	;RP0=0, select bank0
  7063  0498  1303               	bcf	3,6	;RP1=0, select bank0
  7064  0499  00C7               	movwf	trapmf@x
  7065  049A  1683               	bsf	3,5	;RP0=1, select bank1
  7066  049B  1303               	bcf	3,6	;RP1=0, select bank1
  7067  049C  0836               	movf	(_x+1)^(0+128),w
  7068  049D  1283               	bcf	3,5	;RP0=0, select bank0
  7069  049E  1303               	bcf	3,6	;RP1=0, select bank0
  7070  049F  00C8               	movwf	trapmf@x+1
  7071  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  7072  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  7073  04A2  0837               	movf	(_x+2)^(0+128),w
  7074  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  7075  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  7076  04A5  00C9               	movwf	trapmf@x+2
  7077  04A6  3000               	movlw	0
  7078  04A7  00CA               	movwf	trapmf@a
  7079  04A8  3078               	movlw	120
  7080  04A9  00CB               	movwf	trapmf@a+1
  7081  04AA  3042               	movlw	66
  7082  04AB  00CC               	movwf	trapmf@a+2
  7083  04AC  3000               	movlw	0
  7084  04AD  00CD               	movwf	trapmf@b
  7085  04AE  309E               	movlw	158
  7086  04AF  00CE               	movwf	trapmf@b+1
  7087  04B0  3042               	movlw	66
  7088  04B1  00CF               	movwf	trapmf@b+2
  7089  04B2  3000               	movlw	0
  7090  04B3  00D0               	movwf	trapmf@c
  7091  04B4  30B4               	movlw	180
  7092  04B5  00D1               	movwf	trapmf@c+1
  7093  04B6  3042               	movlw	66
  7094  04B7  00D2               	movwf	trapmf@c+2
  7095  04B8  3000               	movlw	0
  7096  04B9  00D3               	movwf	trapmf@d
  7097  04BA  30B4               	movlw	180
  7098  04BB  00D4               	movwf	trapmf@d+1
  7099  04BC  3042               	movlw	66
  7100  04BD  00D5               	movwf	trapmf@d+2
  7101  04BE  120A  158A  226C  120A  118A  	fcall	_trapmf
  7102  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  7103  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  7104  04C5  0847               	movf	?_trapmf,w
  7105  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  7106  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  7107  04C8  00B8               	movwf	_y^(0+128)
  7108  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  7109  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  7110  04CB  0848               	movf	?_trapmf+1,w
  7111  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  7112  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  7113  04CE  00B9               	movwf	(_y+1)^(0+128)
  7114  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  7115  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  7116  04D1  0849               	movf	?_trapmf+2,w
  7117  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  7118  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  7119  04D4  00BA               	movwf	(_y+2)^(0+128)
  7120                           
  7121                           ;main.c: 240: if (y >= fop_rule3)
  7122  04D5  0838               	movf	_y^(0+128),w
  7123  04D6  00F0               	movwf	___ftge@ff1
  7124  04D7  0839               	movf	(_y+1)^(0+128),w
  7125  04D8  00F1               	movwf	___ftge@ff1+1
  7126  04D9  083A               	movf	(_y+2)^(0+128),w
  7127  04DA  00F2               	movwf	___ftge@ff1+2
  7128  04DB  0829               	movf	_fop_rule3^(0+128),w
  7129  04DC  00F3               	movwf	___ftge@ff2
  7130  04DD  082A               	movf	(_fop_rule3+1)^(0+128),w
  7131  04DE  00F4               	movwf	___ftge@ff2+1
  7132  04DF  082B               	movf	(_fop_rule3+2)^(0+128),w
  7133  04E0  00F5               	movwf	___ftge@ff2+2
  7134  04E1  160A  118A  23D9  120A  118A  	fcall	___ftge
  7135  04E6  1C03               	btfss	3,0
  7136  04E7  2CF8               	goto	i1l2816
  7137                           
  7138                           ;main.c: 241: {
  7139                           ;main.c: 242: aumenta += fop_rule3;
  7140  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  7141  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  7142  04EA  0829               	movf	_fop_rule3^(0+128),w
  7143  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  7144  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  7145  04ED  00AA               	movwf	___ftadd@f1
  7146  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  7147  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  7148  04F0  082A               	movf	(_fop_rule3+1)^(0+128),w
  7149  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  7150  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  7151  04F3  00AB               	movwf	___ftadd@f1+1
  7152  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  7153  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  7154  04F6  082B               	movf	(_fop_rule3+2)^(0+128),w
  7155  04F7  2D07               	goto	L5
  7156  04F8                     i1l2816:	
  7157                           ;main.c: 243: }
  7158                           
  7159                           
  7160                           ;main.c: 244: else
  7161                           ;main.c: 245: {
  7162                           ;main.c: 246: aumenta += y;
  7163  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  7164  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  7165  04FA  0838               	movf	_y^(0+128),w
  7166  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  7167  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  7168  04FD  00AA               	movwf	___ftadd@f1
  7169  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  7170  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  7171  0500  0839               	movf	(_y+1)^(0+128),w
  7172  0501  1283               	bcf	3,5	;RP0=0, select bank0
  7173  0502  1303               	bcf	3,6	;RP1=0, select bank0
  7174  0503  00AB               	movwf	___ftadd@f1+1
  7175  0504  1683               	bsf	3,5	;RP0=1, select bank1
  7176  0505  1303               	bcf	3,6	;RP1=0, select bank1
  7177  0506  083A               	movf	(_y+2)^(0+128),w
  7178  0507                     L5:	
  7179  0507  1283               	bcf	3,5	;RP0=0, select bank0
  7180  0508  1303               	bcf	3,6	;RP1=0, select bank0
  7181  0509  00AC               	movwf	___ftadd@f1+2
  7182  050A  086C               	movf	Fuzzy@aumenta,w
  7183  050B  00AD               	movwf	___ftadd@f2
  7184  050C  086D               	movf	Fuzzy@aumenta+1,w
  7185  050D  00AE               	movwf	___ftadd@f2+1
  7186  050E  086E               	movf	Fuzzy@aumenta+2,w
  7187  050F  00AF               	movwf	___ftadd@f2+2
  7188  0510  120A  158A  201A  120A  118A  	fcall	___ftadd
  7189  0515  1283               	bcf	3,5	;RP0=0, select bank0
  7190  0516  1303               	bcf	3,6	;RP1=0, select bank0
  7191  0517  082A               	movf	?___ftadd,w
  7192  0518  00EC               	movwf	Fuzzy@aumenta
  7193  0519  082B               	movf	?___ftadd+1,w
  7194  051A  00ED               	movwf	Fuzzy@aumenta+1
  7195  051B  082C               	movf	?___ftadd+2,w
  7196  051C  00EE               	movwf	Fuzzy@aumenta+2
  7197                           
  7198                           ;main.c: 247: }
  7199                           ;main.c: 249: x=x+1;
  7200  051D  3000               	movlw	0
  7201  051E  00AA               	movwf	___ftadd@f1
  7202  051F  3080               	movlw	128
  7203  0520  00AB               	movwf	___ftadd@f1+1
  7204  0521  303F               	movlw	63
  7205  0522  00AC               	movwf	___ftadd@f1+2
  7206  0523  1683               	bsf	3,5	;RP0=1, select bank1
  7207  0524  1303               	bcf	3,6	;RP1=0, select bank1
  7208  0525  0835               	movf	_x^(0+128),w
  7209  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7210  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7211  0528  00AD               	movwf	___ftadd@f2
  7212  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7213  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7214  052B  0836               	movf	(_x+1)^(0+128),w
  7215  052C  1283               	bcf	3,5	;RP0=0, select bank0
  7216  052D  1303               	bcf	3,6	;RP1=0, select bank0
  7217  052E  00AE               	movwf	___ftadd@f2+1
  7218  052F  1683               	bsf	3,5	;RP0=1, select bank1
  7219  0530  1303               	bcf	3,6	;RP1=0, select bank1
  7220  0531  0837               	movf	(_x+2)^(0+128),w
  7221  0532  1283               	bcf	3,5	;RP0=0, select bank0
  7222  0533  1303               	bcf	3,6	;RP1=0, select bank0
  7223  0534  00AF               	movwf	___ftadd@f2+2
  7224  0535  120A  158A  201A  120A  118A  	fcall	___ftadd
  7225  053A  1283               	bcf	3,5	;RP0=0, select bank0
  7226  053B  1303               	bcf	3,6	;RP1=0, select bank0
  7227  053C  082A               	movf	?___ftadd,w
  7228  053D  1683               	bsf	3,5	;RP0=1, select bank1
  7229  053E  1303               	bcf	3,6	;RP1=0, select bank1
  7230  053F  00B5               	movwf	_x^(0+128)
  7231  0540  1283               	bcf	3,5	;RP0=0, select bank0
  7232  0541  1303               	bcf	3,6	;RP1=0, select bank0
  7233  0542  082B               	movf	?___ftadd+1,w
  7234  0543  1683               	bsf	3,5	;RP0=1, select bank1
  7235  0544  1303               	bcf	3,6	;RP1=0, select bank1
  7236  0545  00B6               	movwf	(_x+1)^(0+128)
  7237  0546  1283               	bcf	3,5	;RP0=0, select bank0
  7238  0547  1303               	bcf	3,6	;RP1=0, select bank0
  7239  0548  082C               	movf	?___ftadd+2,w
  7240  0549  1683               	bsf	3,5	;RP0=1, select bank1
  7241  054A  1303               	bcf	3,6	;RP1=0, select bank1
  7242  054B  00B7               	movwf	(_x+2)^(0+128)
  7243  054C  3001               	movlw	1
  7244  054D  1283               	bcf	3,5	;RP0=0, select bank0
  7245  054E  1303               	bcf	3,6	;RP1=0, select bank0
  7246  054F  07DD               	addwf	Fuzzy@a_233,f
  7247  0550  1803               	skipnc
  7248  0551  0ADE               	incf	Fuzzy@a_233+1,f
  7249  0552  3000               	movlw	0
  7250  0553  07DE               	addwf	Fuzzy@a_233+1,f
  7251  0554  085E               	movf	Fuzzy@a_233+1,w
  7252  0555  3A80               	xorlw	128
  7253  0556  00FF               	movwf	127
  7254  0557  3080               	movlw	128
  7255  0558  027F               	subwf	127,w
  7256  0559  1D03               	skipz
  7257  055A  2D5D               	goto	u349_25
  7258  055B  305B               	movlw	91
  7259  055C  025D               	subwf	Fuzzy@a_233,w
  7260  055D                     u349_25:	
  7261  055D  1C03               	skipc
  7262  055E  2C94               	goto	i1l2812
  7263  055F                     i1l2822:	
  7264                           
  7265                           ;main.c: 250: }
  7266                           ;main.c: 252: }
  7267                           ;main.c: 255: for (int a=0; a<1; a++)
  7268  055F  1283               	bcf	3,5	;RP0=0, select bank0
  7269  0560  1303               	bcf	3,6	;RP1=0, select bank0
  7270  0561  01DF               	clrf	Fuzzy@a_234
  7271  0562  01E0               	clrf	Fuzzy@a_234+1
  7272  0563  0860               	movf	Fuzzy@a_234+1,w
  7273  0564  3A80               	xorlw	128
  7274  0565  00FF               	movwf	127
  7275  0566  3080               	movlw	128
  7276  0567  027F               	subwf	127,w
  7277  0568  1D03               	skipz
  7278  0569  2D6C               	goto	u350_25
  7279  056A  3001               	movlw	1
  7280  056B  025F               	subwf	Fuzzy@a_234,w
  7281  056C                     u350_25:	
  7282  056C  1803               	btfsc	3,0
  7283  056D  2DD6               	goto	i1l2842
  7284  056E                     i1l2828:	
  7285                           
  7286                           ;main.c: 256: {
  7287                           ;main.c: 257: if (temp < 25)
  7288  056E  1683               	bsf	3,5	;RP0=1, select bank1
  7289  056F  1303               	bcf	3,6	;RP1=0, select bank1
  7290  0570  082F               	movf	_temp^(0+128),w
  7291  0571  00F0               	movwf	___ftge@ff1
  7292  0572  0830               	movf	(_temp+1)^(0+128),w
  7293  0573  00F1               	movwf	___ftge@ff1+1
  7294  0574  0831               	movf	(_temp+2)^(0+128),w
  7295  0575  00F2               	movwf	___ftge@ff1+2
  7296  0576  3000               	movlw	0
  7297  0577  00F3               	movwf	___ftge@ff2
  7298  0578  30C8               	movlw	200
  7299  0579  00F4               	movwf	___ftge@ff2+1
  7300  057A  3041               	movlw	65
  7301  057B  00F5               	movwf	___ftge@ff2+2
  7302  057C  160A  118A  23D9  120A  118A  	fcall	___ftge
  7303  0581  1803               	btfsc	3,0
  7304  0582  2D8B               	goto	i1l2832
  7305                           
  7306                           ;main.c: 258: {
  7307                           ;main.c: 259: tip = mantem;
  7308  0583  1283               	bcf	3,5	;RP0=0, select bank0
  7309  0584  1303               	bcf	3,6	;RP1=0, select bank0
  7310  0585  0866               	movf	Fuzzy@mantem,w
  7311  0586  00E3               	movwf	Fuzzy@tip
  7312  0587  0867               	movf	Fuzzy@mantem+1,w
  7313  0588  00E4               	movwf	Fuzzy@tip+1
  7314  0589  0868               	movf	Fuzzy@mantem+2,w
  7315  058A  2DC4               	goto	L7
  7316  058B                     i1l2832:	
  7317                           ;main.c: 260: }else
  7318                           
  7319                           
  7320                           ;main.c: 261: if (temp >= 25 && temp < 75)
  7321  058B  1683               	bsf	3,5	;RP0=1, select bank1
  7322  058C  1303               	bcf	3,6	;RP1=0, select bank1
  7323  058D  082F               	movf	_temp^(0+128),w
  7324  058E  00F0               	movwf	___ftge@ff1
  7325  058F  0830               	movf	(_temp+1)^(0+128),w
  7326  0590  00F1               	movwf	___ftge@ff1+1
  7327  0591  0831               	movf	(_temp+2)^(0+128),w
  7328  0592  00F2               	movwf	___ftge@ff1+2
  7329  0593  3000               	movlw	0
  7330  0594  00F3               	movwf	___ftge@ff2
  7331  0595  30C8               	movlw	200
  7332  0596  00F4               	movwf	___ftge@ff2+1
  7333  0597  3041               	movlw	65
  7334  0598  00F5               	movwf	___ftge@ff2+2
  7335  0599  160A  118A  23D9  120A  118A  	fcall	___ftge
  7336  059E  1C03               	btfss	3,0
  7337  059F  2DBD               	goto	i1l2838
  7338  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  7339  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  7340  05A2  082F               	movf	_temp^(0+128),w
  7341  05A3  00F0               	movwf	___ftge@ff1
  7342  05A4  0830               	movf	(_temp+1)^(0+128),w
  7343  05A5  00F1               	movwf	___ftge@ff1+1
  7344  05A6  0831               	movf	(_temp+2)^(0+128),w
  7345  05A7  00F2               	movwf	___ftge@ff1+2
  7346  05A8  3000               	movlw	0
  7347  05A9  00F3               	movwf	___ftge@ff2
  7348  05AA  3096               	movlw	150
  7349  05AB  00F4               	movwf	___ftge@ff2+1
  7350  05AC  3042               	movlw	66
  7351  05AD  00F5               	movwf	___ftge@ff2+2
  7352  05AE  160A  118A  23D9  120A  118A  	fcall	___ftge
  7353  05B3  1803               	btfsc	3,0
  7354  05B4  2DBD               	goto	i1l2838
  7355                           
  7356                           ;main.c: 262: {
  7357                           ;main.c: 263: tip = reduz;
  7358  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  7359  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  7360  05B7  0869               	movf	Fuzzy@reduz,w
  7361  05B8  00E3               	movwf	Fuzzy@tip
  7362  05B9  086A               	movf	Fuzzy@reduz+1,w
  7363  05BA  00E4               	movwf	Fuzzy@tip+1
  7364  05BB  086B               	movf	Fuzzy@reduz+2,w
  7365  05BC  2DC4               	goto	L7
  7366  05BD                     i1l2838:	
  7367                           ;main.c: 264: }else
  7368                           
  7369                           
  7370                           ;main.c: 265: {
  7371                           ;main.c: 266: tip = aumenta;
  7372  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  7373  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  7374  05BF  086C               	movf	Fuzzy@aumenta,w
  7375  05C0  00E3               	movwf	Fuzzy@tip
  7376  05C1  086D               	movf	Fuzzy@aumenta+1,w
  7377  05C2  00E4               	movwf	Fuzzy@tip+1
  7378  05C3  086E               	movf	Fuzzy@aumenta+2,w
  7379  05C4                     L7:	
  7380  05C4  00E5               	movwf	Fuzzy@tip+2
  7381  05C5  3001               	movlw	1
  7382  05C6  07DF               	addwf	Fuzzy@a_234,f
  7383  05C7  1803               	skipnc
  7384  05C8  0AE0               	incf	Fuzzy@a_234+1,f
  7385  05C9  3000               	movlw	0
  7386  05CA  07E0               	addwf	Fuzzy@a_234+1,f
  7387  05CB  0860               	movf	Fuzzy@a_234+1,w
  7388  05CC  3A80               	xorlw	128
  7389  05CD  00FF               	movwf	127
  7390  05CE  3080               	movlw	128
  7391  05CF  027F               	subwf	127,w
  7392  05D0  1D03               	skipz
  7393  05D1  2DD4               	goto	u354_25
  7394  05D2  3001               	movlw	1
  7395  05D3  025F               	subwf	Fuzzy@a_234,w
  7396  05D4                     u354_25:	
  7397  05D4  1C03               	skipc
  7398  05D5  2D6E               	goto	i1l2828
  7399  05D6                     i1l2842:	
  7400                           
  7401                           ;main.c: 267: }
  7402                           ;main.c: 268: }
  7403                           ;main.c: 272: x = 0;
  7404  05D6  3000               	movlw	0
  7405  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  7406  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  7407  05D9  00B5               	movwf	_x^(0+128)
  7408  05DA  3000               	movlw	0
  7409  05DB  00B6               	movwf	(_x+1)^(0+128)
  7410  05DC  3000               	movlw	0
  7411  05DD  00B7               	movwf	(_x+2)^(0+128)
  7412                           
  7413                           ;main.c: 273: total_area = 0;
  7414  05DE  3000               	movlw	0
  7415  05DF  00B2               	movwf	_total_area^(0+128)
  7416  05E0  3000               	movlw	0
  7417  05E1  00B3               	movwf	(_total_area+1)^(0+128)
  7418  05E2  3000               	movlw	0
  7419  05E3  00B4               	movwf	(_total_area+2)^(0+128)
  7420                           
  7421                           ;main.c: 274: sum = 0;
  7422  05E4  3000               	movlw	0
  7423  05E5  00AC               	movwf	_sum^(0+128)
  7424  05E6  3000               	movlw	0
  7425  05E7  00AD               	movwf	(_sum+1)^(0+128)
  7426  05E8  3000               	movlw	0
  7427  05E9  00AE               	movwf	(_sum+2)^(0+128)
  7428                           
  7429                           ;main.c: 275: for (int a=0; a<1; a++)
  7430  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  7431  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  7432  05EC  01E1               	clrf	Fuzzy@a_235
  7433  05ED  01E2               	clrf	Fuzzy@a_235+1
  7434  05EE  0862               	movf	Fuzzy@a_235+1,w
  7435  05EF  3A80               	xorlw	128
  7436  05F0  00FF               	movwf	127
  7437  05F1  3080               	movlw	128
  7438  05F2  027F               	subwf	127,w
  7439  05F3  1D03               	skipz
  7440  05F4  2DF7               	goto	u355_25
  7441  05F5  3001               	movlw	1
  7442  05F6  0261               	subwf	Fuzzy@a_235,w
  7443  05F7                     u355_25:	
  7444  05F7  1803               	btfsc	3,0
  7445  05F8  2EB0               	goto	i1l2856
  7446  05F9                     i1l2850:	
  7447                           
  7448                           ;main.c: 276: {
  7449                           ;main.c: 277: total_area = total_area + tip;
  7450  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  7451  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  7452  05FB  0863               	movf	Fuzzy@tip,w
  7453  05FC  00AA               	movwf	___ftadd@f1
  7454  05FD  0864               	movf	Fuzzy@tip+1,w
  7455  05FE  00AB               	movwf	___ftadd@f1+1
  7456  05FF  0865               	movf	Fuzzy@tip+2,w
  7457  0600  00AC               	movwf	___ftadd@f1+2
  7458  0601  1683               	bsf	3,5	;RP0=1, select bank1
  7459  0602  1303               	bcf	3,6	;RP1=0, select bank1
  7460  0603  0832               	movf	_total_area^(0+128),w
  7461  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7462  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7463  0606  00AD               	movwf	___ftadd@f2
  7464  0607  1683               	bsf	3,5	;RP0=1, select bank1
  7465  0608  1303               	bcf	3,6	;RP1=0, select bank1
  7466  0609  0833               	movf	(_total_area+1)^(0+128),w
  7467  060A  1283               	bcf	3,5	;RP0=0, select bank0
  7468  060B  1303               	bcf	3,6	;RP1=0, select bank0
  7469  060C  00AE               	movwf	___ftadd@f2+1
  7470  060D  1683               	bsf	3,5	;RP0=1, select bank1
  7471  060E  1303               	bcf	3,6	;RP1=0, select bank1
  7472  060F  0834               	movf	(_total_area+2)^(0+128),w
  7473  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7474  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7475  0612  00AF               	movwf	___ftadd@f2+2
  7476  0613  120A  158A  201A  120A  118A  	fcall	___ftadd
  7477  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7478  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7479  061A  082A               	movf	?___ftadd,w
  7480  061B  1683               	bsf	3,5	;RP0=1, select bank1
  7481  061C  1303               	bcf	3,6	;RP1=0, select bank1
  7482  061D  00B2               	movwf	_total_area^(0+128)
  7483  061E  1283               	bcf	3,5	;RP0=0, select bank0
  7484  061F  1303               	bcf	3,6	;RP1=0, select bank0
  7485  0620  082B               	movf	?___ftadd+1,w
  7486  0621  1683               	bsf	3,5	;RP0=1, select bank1
  7487  0622  1303               	bcf	3,6	;RP1=0, select bank1
  7488  0623  00B3               	movwf	(_total_area+1)^(0+128)
  7489  0624  1283               	bcf	3,5	;RP0=0, select bank0
  7490  0625  1303               	bcf	3,6	;RP1=0, select bank0
  7491  0626  082C               	movf	?___ftadd+2,w
  7492  0627  1683               	bsf	3,5	;RP0=1, select bank1
  7493  0628  1303               	bcf	3,6	;RP1=0, select bank1
  7494  0629  00B4               	movwf	(_total_area+2)^(0+128)
  7495                           
  7496                           ;main.c: 278: sum = sum + (x * tip);
  7497  062A  082C               	movf	_sum^(0+128),w
  7498  062B  1283               	bcf	3,5	;RP0=0, select bank0
  7499  062C  1303               	bcf	3,6	;RP1=0, select bank0
  7500  062D  00AA               	movwf	___ftadd@f1
  7501  062E  1683               	bsf	3,5	;RP0=1, select bank1
  7502  062F  1303               	bcf	3,6	;RP1=0, select bank1
  7503  0630  082D               	movf	(_sum+1)^(0+128),w
  7504  0631  1283               	bcf	3,5	;RP0=0, select bank0
  7505  0632  1303               	bcf	3,6	;RP1=0, select bank0
  7506  0633  00AB               	movwf	___ftadd@f1+1
  7507  0634  1683               	bsf	3,5	;RP0=1, select bank1
  7508  0635  1303               	bcf	3,6	;RP1=0, select bank1
  7509  0636  082E               	movf	(_sum+2)^(0+128),w
  7510  0637  1283               	bcf	3,5	;RP0=0, select bank0
  7511  0638  1303               	bcf	3,6	;RP1=0, select bank0
  7512  0639  00AC               	movwf	___ftadd@f1+2
  7513  063A  0863               	movf	Fuzzy@tip,w
  7514  063B  00F8               	movwf	___ftmul@f1
  7515  063C  0864               	movf	Fuzzy@tip+1,w
  7516  063D  00F9               	movwf	___ftmul@f1+1
  7517  063E  0865               	movf	Fuzzy@tip+2,w
  7518  063F  00FA               	movwf	___ftmul@f1+2
  7519  0640  1683               	bsf	3,5	;RP0=1, select bank1
  7520  0641  1303               	bcf	3,6	;RP1=0, select bank1
  7521  0642  0835               	movf	_x^(0+128),w
  7522  0643  00FB               	movwf	___ftmul@f2
  7523  0644  0836               	movf	(_x+1)^(0+128),w
  7524  0645  00FC               	movwf	___ftmul@f2+1
  7525  0646  0837               	movf	(_x+2)^(0+128),w
  7526  0647  00FD               	movwf	___ftmul@f2+2
  7527  0648  120A  118A  2702  120A  118A  	fcall	___ftmul
  7528  064D  0878               	movf	?___ftmul,w
  7529  064E  1283               	bcf	3,5	;RP0=0, select bank0
  7530  064F  1303               	bcf	3,6	;RP1=0, select bank0
  7531  0650  00AD               	movwf	___ftadd@f2
  7532  0651  0879               	movf	?___ftmul+1,w
  7533  0652  00AE               	movwf	___ftadd@f2+1
  7534  0653  087A               	movf	?___ftmul+2,w
  7535  0654  00AF               	movwf	___ftadd@f2+2
  7536  0655  120A  158A  201A  120A  118A  	fcall	___ftadd
  7537  065A  1283               	bcf	3,5	;RP0=0, select bank0
  7538  065B  1303               	bcf	3,6	;RP1=0, select bank0
  7539  065C  082A               	movf	?___ftadd,w
  7540  065D  1683               	bsf	3,5	;RP0=1, select bank1
  7541  065E  1303               	bcf	3,6	;RP1=0, select bank1
  7542  065F  00AC               	movwf	_sum^(0+128)
  7543  0660  1283               	bcf	3,5	;RP0=0, select bank0
  7544  0661  1303               	bcf	3,6	;RP1=0, select bank0
  7545  0662  082B               	movf	?___ftadd+1,w
  7546  0663  1683               	bsf	3,5	;RP0=1, select bank1
  7547  0664  1303               	bcf	3,6	;RP1=0, select bank1
  7548  0665  00AD               	movwf	(_sum+1)^(0+128)
  7549  0666  1283               	bcf	3,5	;RP0=0, select bank0
  7550  0667  1303               	bcf	3,6	;RP1=0, select bank0
  7551  0668  082C               	movf	?___ftadd+2,w
  7552  0669  1683               	bsf	3,5	;RP0=1, select bank1
  7553  066A  1303               	bcf	3,6	;RP1=0, select bank1
  7554  066B  00AE               	movwf	(_sum+2)^(0+128)
  7555                           
  7556                           ;main.c: 280: x=x+1;
  7557  066C  3000               	movlw	0
  7558  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7559  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7560  066F  00AA               	movwf	___ftadd@f1
  7561  0670  3080               	movlw	128
  7562  0671  00AB               	movwf	___ftadd@f1+1
  7563  0672  303F               	movlw	63
  7564  0673  00AC               	movwf	___ftadd@f1+2
  7565  0674  1683               	bsf	3,5	;RP0=1, select bank1
  7566  0675  1303               	bcf	3,6	;RP1=0, select bank1
  7567  0676  0835               	movf	_x^(0+128),w
  7568  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0679  00AD               	movwf	___ftadd@f2
  7571  067A  1683               	bsf	3,5	;RP0=1, select bank1
  7572  067B  1303               	bcf	3,6	;RP1=0, select bank1
  7573  067C  0836               	movf	(_x+1)^(0+128),w
  7574  067D  1283               	bcf	3,5	;RP0=0, select bank0
  7575  067E  1303               	bcf	3,6	;RP1=0, select bank0
  7576  067F  00AE               	movwf	___ftadd@f2+1
  7577  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7578  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7579  0682  0837               	movf	(_x+2)^(0+128),w
  7580  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7581  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7582  0685  00AF               	movwf	___ftadd@f2+2
  7583  0686  120A  158A  201A  120A  118A  	fcall	___ftadd
  7584  068B  1283               	bcf	3,5	;RP0=0, select bank0
  7585  068C  1303               	bcf	3,6	;RP1=0, select bank0
  7586  068D  082A               	movf	?___ftadd,w
  7587  068E  1683               	bsf	3,5	;RP0=1, select bank1
  7588  068F  1303               	bcf	3,6	;RP1=0, select bank1
  7589  0690  00B5               	movwf	_x^(0+128)
  7590  0691  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0692  1303               	bcf	3,6	;RP1=0, select bank0
  7592  0693  082B               	movf	?___ftadd+1,w
  7593  0694  1683               	bsf	3,5	;RP0=1, select bank1
  7594  0695  1303               	bcf	3,6	;RP1=0, select bank1
  7595  0696  00B6               	movwf	(_x+1)^(0+128)
  7596  0697  1283               	bcf	3,5	;RP0=0, select bank0
  7597  0698  1303               	bcf	3,6	;RP1=0, select bank0
  7598  0699  082C               	movf	?___ftadd+2,w
  7599  069A  1683               	bsf	3,5	;RP0=1, select bank1
  7600  069B  1303               	bcf	3,6	;RP1=0, select bank1
  7601  069C  00B7               	movwf	(_x+2)^(0+128)
  7602  069D  3001               	movlw	1
  7603  069E  1283               	bcf	3,5	;RP0=0, select bank0
  7604  069F  1303               	bcf	3,6	;RP1=0, select bank0
  7605  06A0  07E1               	addwf	Fuzzy@a_235,f
  7606  06A1  1803               	skipnc
  7607  06A2  0AE2               	incf	Fuzzy@a_235+1,f
  7608  06A3  3000               	movlw	0
  7609  06A4  07E2               	addwf	Fuzzy@a_235+1,f
  7610  06A5  0862               	movf	Fuzzy@a_235+1,w
  7611  06A6  3A80               	xorlw	128
  7612  06A7  00FF               	movwf	127
  7613  06A8  3080               	movlw	128
  7614  06A9  027F               	subwf	127,w
  7615  06AA  1D03               	skipz
  7616  06AB  2EAE               	goto	u356_25
  7617  06AC  3001               	movlw	1
  7618  06AD  0261               	subwf	Fuzzy@a_235,w
  7619  06AE                     u356_25:	
  7620  06AE  1C03               	skipc
  7621  06AF  2DF9               	goto	i1l2850
  7622  06B0                     i1l2856:	
  7623                           
  7624                           ;main.c: 281: }
  7625                           ;main.c: 284: ativa_fan = sum/total_area;
  7626  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  7627  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  7628  06B2  0832               	movf	_total_area^(0+128),w
  7629  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  7630  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  7631  06B5  00B7               	movwf	___ftdiv@f2
  7632  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  7633  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  7634  06B8  0833               	movf	(_total_area+1)^(0+128),w
  7635  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  7636  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  7637  06BB  00B8               	movwf	___ftdiv@f2+1
  7638  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  7639  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  7640  06BE  0834               	movf	(_total_area+2)^(0+128),w
  7641  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  7642  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  7643  06C1  00B9               	movwf	___ftdiv@f2+2
  7644  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  7645  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  7646  06C4  082C               	movf	_sum^(0+128),w
  7647  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  7648  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  7649  06C7  00BA               	movwf	___ftdiv@f1
  7650  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  7651  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  7652  06CA  082D               	movf	(_sum+1)^(0+128),w
  7653  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  7654  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  7655  06CD  00BB               	movwf	___ftdiv@f1+1
  7656  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  7657  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  7658  06D0  082E               	movf	(_sum+2)^(0+128),w
  7659  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  7660  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  7661  06D3  00BC               	movwf	___ftdiv@f1+2
  7662  06D4  160A  118A  2624  120A  118A  	fcall	___ftdiv
  7663  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7664  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7665  06DB  0837               	movf	?___ftdiv,w
  7666  06DC  1683               	bsf	3,5	;RP0=1, select bank3
  7667  06DD  1703               	bsf	3,6	;RP1=1, select bank3
  7668  06DE  0090               	movwf	_ativa_fan^(0+384)
  7669  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  7670  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  7671  06E1  0838               	movf	?___ftdiv+1,w
  7672  06E2  1683               	bsf	3,5	;RP0=1, select bank3
  7673  06E3  1703               	bsf	3,6	;RP1=1, select bank3
  7674  06E4  0091               	movwf	(_ativa_fan+1)^(0+384)
  7675  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  7676  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  7677  06E7  0839               	movf	?___ftdiv+2,w
  7678  06E8  1683               	bsf	3,5	;RP0=1, select bank3
  7679  06E9  1703               	bsf	3,6	;RP1=1, select bank3
  7680  06EA  0092               	movwf	(_ativa_fan+2)^(0+384)
  7681                           
  7682                           ;main.c: 288: if (deltaV >0 && deltaV < 1020)
  7683  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  7684  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  7685  06ED  0840               	movf	(_deltaV+1)^(0+128),w
  7686  06EE  043F               	iorwf	_deltaV^(0+128),w
  7687  06EF  1903               	skipnz
  7688  06F0  0008               	return
  7689  06F1  3003               	movlw	3
  7690  06F2  0240               	subwf	(_deltaV+1)^(0+128),w
  7691  06F3  30FC               	movlw	252
  7692  06F4  1903               	skipnz
  7693  06F5  023F               	subwf	_deltaV^(0+128),w
  7694  06F6  1803               	skipnc
  7695  06F7  0008               	return
  7696                           
  7697                           ;main.c: 289: {
  7698                           ;main.c: 290: PWM_DutyCycle2(deltaV);
  7699  06F8  0840               	movf	(_deltaV+1)^(0+128),w
  7700  06F9  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7701  06FA  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7702  06FB  083F               	movf	_deltaV^(0+128),w
  7703  06FC  01F0               	clrf	i1PWM_DutyCycle2@valor
  7704  06FD  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7705  06FE  160A  118A  2135   	fcall	i1_PWM_DutyCycle2
  7706  0701  0008               	return
  7707  0702                     __end_of_Fuzzy:	
  7708                           
  7709                           	psect	text30
  7710  1135                     __ptext30:	
  7711 ;; *************** function i1_PWM_DutyCycle2 *****************
  7712 ;; Defined at:
  7713 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  valor           2    0[COMMON] int 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;		None               void
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7727 ;;      Params:         2       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0
  7729 ;;      Temps:          2       0       0       0       0
  7730 ;;      Totals:         4       0       0       0       0
  7731 ;;Total ram usage:        4 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; This function calls:
  7734 ;;		Nothing
  7735 ;; This function is called by:
  7736 ;;		_Fuzzy
  7737 ;;		_ISR
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           
  7742                           ;psect for function i1_PWM_DutyCycle2
  7743  1135                     i1_PWM_DutyCycle2:	
  7744                           
  7745                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7746                           
  7747                           ;incstack = 0
  7748                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7749  1135  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  7750  1136  00F3               	movwf	??i1_PWM_DutyCycle2+1
  7751  1137  0870               	movf	i1PWM_DutyCycle2@valor,w
  7752  1138  00F2               	movwf	??i1_PWM_DutyCycle2
  7753  1139  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7754  113A  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7755  113B  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7756  113C  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  7757  113D  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  7758  113E  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  7759  113F  0872               	movf	??i1_PWM_DutyCycle2,w
  7760  1140  1283               	bcf	3,5	;RP0=0, select bank0
  7761  1141  1303               	bcf	3,6	;RP1=0, select bank0
  7762  1142  009B               	movwf	27	;volatile
  7763                           
  7764                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7765  1143  0870               	movf	i1PWM_DutyCycle2@valor,w
  7766  1144  00F2               	movwf	??i1_PWM_DutyCycle2
  7767  1145  3003               	movlw	3
  7768  1146                     u334_25:	
  7769  1146  1003               	clrc
  7770  1147  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  7771  1148  3EFF               	addlw	-1
  7772  1149  1D03               	skipz
  7773  114A  2946               	goto	u334_25
  7774  114B  1003               	clrc
  7775  114C  0D72               	rlf	??i1_PWM_DutyCycle2,w
  7776  114D  380C               	iorlw	12
  7777  114E  009D               	movwf	29	;volatile
  7778  114F  0008               	return
  7779  1150                     __end_ofi1_PWM_DutyCycle2:	
  7780                           
  7781                           	psect	text31
  7782  16DC                     __ptext31:	
  7783 ;; *************** function _trimf *****************
  7784 ;; Defined at:
  7785 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  x               3   39[BANK0 ] float 
  7788 ;;  a               3   42[BANK0 ] float 
  7789 ;;  b               3   45[BANK0 ] float 
  7790 ;;  c               3   48[BANK0 ] float 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  ua              3   51[BANK0 ] float 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  3   39[BANK0 ] float 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, pclath, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7802 ;;      Params:         0      12       0       0       0
  7803 ;;      Locals:         0       3       0       0       0
  7804 ;;      Temps:          0       0       0       0       0
  7805 ;;      Totals:         0      15       0       0       0
  7806 ;;Total ram usage:       15 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    2
  7809 ;; This function calls:
  7810 ;;		___ftadd
  7811 ;;		___ftdiv
  7812 ;;		___ftge
  7813 ;;		___ftneg
  7814 ;; This function is called by:
  7815 ;;		_Fuzzy
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function _trimf
  7821  16DC                     _trimf:	
  7822                           
  7823                           ;main.c: 70: float ua = 0;
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7827  16DC  3000               	movlw	0
  7828  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  7829  16DE  1303               	bcf	3,6	;RP1=0, select bank0
  7830  16DF  00D3               	movwf	trimf@ua
  7831  16E0  3000               	movlw	0
  7832  16E1  00D4               	movwf	trimf@ua+1
  7833  16E2  3000               	movlw	0
  7834  16E3  00D5               	movwf	trimf@ua+2
  7835                           
  7836                           ;main.c: 72: if (x <= a)
  7837  16E4  084A               	movf	trimf@a,w
  7838  16E5  00F0               	movwf	___ftge@ff1
  7839  16E6  084B               	movf	trimf@a+1,w
  7840  16E7  00F1               	movwf	___ftge@ff1+1
  7841  16E8  084C               	movf	trimf@a+2,w
  7842  16E9  00F2               	movwf	___ftge@ff1+2
  7843  16EA  0847               	movf	trimf@x,w
  7844  16EB  00F3               	movwf	___ftge@ff2
  7845  16EC  0848               	movf	trimf@x+1,w
  7846  16ED  00F4               	movwf	___ftge@ff2+1
  7847  16EE  0849               	movf	trimf@x+2,w
  7848  16EF  00F5               	movwf	___ftge@ff2+2
  7849  16F0  160A  118A  23D9  160A  118A  	fcall	___ftge
  7850  16F5  1803               	btfsc	3,0
  7851  16F6  2FEF               	goto	L12
  7852                           
  7853                           ;main.c: 74: else if ((a < x) && (x <= b))
  7854                           
  7855                           ;main.c: 73: ua = 0;
  7856  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7857  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  7858  16F9  084A               	movf	trimf@a,w
  7859  16FA  00F0               	movwf	___ftge@ff1
  7860  16FB  084B               	movf	trimf@a+1,w
  7861  16FC  00F1               	movwf	___ftge@ff1+1
  7862  16FD  084C               	movf	trimf@a+2,w
  7863  16FE  00F2               	movwf	___ftge@ff1+2
  7864  16FF  0847               	movf	trimf@x,w
  7865  1700  00F3               	movwf	___ftge@ff2
  7866  1701  0848               	movf	trimf@x+1,w
  7867  1702  00F4               	movwf	___ftge@ff2+1
  7868  1703  0849               	movf	trimf@x+2,w
  7869  1704  00F5               	movwf	___ftge@ff2+2
  7870  1705  160A  118A  23D9  160A  118A  	fcall	___ftge
  7871  170A  1803               	btfsc	3,0
  7872  170B  2F55               	goto	i1l2438
  7873  170C  1283               	bcf	3,5	;RP0=0, select bank0
  7874  170D  1303               	bcf	3,6	;RP1=0, select bank0
  7875  170E  084D               	movf	trimf@b,w
  7876  170F  00F0               	movwf	___ftge@ff1
  7877  1710  084E               	movf	trimf@b+1,w
  7878  1711  00F1               	movwf	___ftge@ff1+1
  7879  1712  084F               	movf	trimf@b+2,w
  7880  1713  00F2               	movwf	___ftge@ff1+2
  7881  1714  0847               	movf	trimf@x,w
  7882  1715  00F3               	movwf	___ftge@ff2
  7883  1716  0848               	movf	trimf@x+1,w
  7884  1717  00F4               	movwf	___ftge@ff2+1
  7885  1718  0849               	movf	trimf@x+2,w
  7886  1719  00F5               	movwf	___ftge@ff2+2
  7887  171A  160A  118A  23D9  160A  118A  	fcall	___ftge
  7888  171F  1C03               	btfss	3,0
  7889  1720  2F55               	goto	i1l2438
  7890                           
  7891                           ;main.c: 75: ua = ((x - a) / (b - a));
  7892  1721  1283               	bcf	3,5	;RP0=0, select bank0
  7893  1722  1303               	bcf	3,6	;RP1=0, select bank0
  7894  1723  084D               	movf	trimf@b,w
  7895  1724  00AA               	movwf	___ftadd@f1
  7896  1725  084E               	movf	trimf@b+1,w
  7897  1726  00AB               	movwf	___ftadd@f1+1
  7898  1727  084F               	movf	trimf@b+2,w
  7899  1728  00AC               	movwf	___ftadd@f1+2
  7900  1729  084A               	movf	trimf@a,w
  7901  172A  00F0               	movwf	___ftneg@f1
  7902  172B  084B               	movf	trimf@a+1,w
  7903  172C  00F1               	movwf	___ftneg@f1+1
  7904  172D  084C               	movf	trimf@a+2,w
  7905  172E  00F2               	movwf	___ftneg@f1+2
  7906  172F  160A  118A  20B0  160A  118A  	fcall	___ftneg
  7907  1734  0870               	movf	?___ftneg,w
  7908  1735  1283               	bcf	3,5	;RP0=0, select bank0
  7909  1736  1303               	bcf	3,6	;RP1=0, select bank0
  7910  1737  00AD               	movwf	___ftadd@f2
  7911  1738  0871               	movf	?___ftneg+1,w
  7912  1739  00AE               	movwf	___ftadd@f2+1
  7913  173A  0872               	movf	?___ftneg+2,w
  7914  173B  00AF               	movwf	___ftadd@f2+2
  7915  173C  120A  158A  201A  160A  118A  	fcall	___ftadd
  7916  1741  1283               	bcf	3,5	;RP0=0, select bank0
  7917  1742  1303               	bcf	3,6	;RP1=0, select bank0
  7918  1743  082A               	movf	?___ftadd,w
  7919  1744  00B7               	movwf	___ftdiv@f2
  7920  1745  082B               	movf	?___ftadd+1,w
  7921  1746  00B8               	movwf	___ftdiv@f2+1
  7922  1747  082C               	movf	?___ftadd+2,w
  7923  1748  00B9               	movwf	___ftdiv@f2+2
  7924  1749  0847               	movf	trimf@x,w
  7925  174A  00AA               	movwf	___ftadd@f1
  7926  174B  0848               	movf	trimf@x+1,w
  7927  174C  00AB               	movwf	___ftadd@f1+1
  7928  174D  0849               	movf	trimf@x+2,w
  7929  174E  00AC               	movwf	___ftadd@f1+2
  7930  174F  084A               	movf	trimf@a,w
  7931  1750  00F0               	movwf	___ftneg@f1
  7932  1751  084B               	movf	trimf@a+1,w
  7933  1752  00F1               	movwf	___ftneg@f1+1
  7934  1753  084C               	movf	trimf@a+2,w
  7935  1754  2FB2               	goto	L13
  7936  1755                     i1l2438:	
  7937                           
  7938                           ;main.c: 76: else if ((b < x) && (x <= c))
  7939  1755  1283               	bcf	3,5	;RP0=0, select bank0
  7940  1756  1303               	bcf	3,6	;RP1=0, select bank0
  7941  1757  084D               	movf	trimf@b,w
  7942  1758  00F0               	movwf	___ftge@ff1
  7943  1759  084E               	movf	trimf@b+1,w
  7944  175A  00F1               	movwf	___ftge@ff1+1
  7945  175B  084F               	movf	trimf@b+2,w
  7946  175C  00F2               	movwf	___ftge@ff1+2
  7947  175D  0847               	movf	trimf@x,w
  7948  175E  00F3               	movwf	___ftge@ff2
  7949  175F  0848               	movf	trimf@x+1,w
  7950  1760  00F4               	movwf	___ftge@ff2+1
  7951  1761  0849               	movf	trimf@x+2,w
  7952  1762  00F5               	movwf	___ftge@ff2+2
  7953  1763  160A  118A  23D9  160A  118A  	fcall	___ftge
  7954  1768  1803               	btfsc	3,0
  7955  1769  2FDA               	goto	i1l2444
  7956  176A  1283               	bcf	3,5	;RP0=0, select bank0
  7957  176B  1303               	bcf	3,6	;RP1=0, select bank0
  7958  176C  0850               	movf	trimf@c,w
  7959  176D  00F0               	movwf	___ftge@ff1
  7960  176E  0851               	movf	trimf@c+1,w
  7961  176F  00F1               	movwf	___ftge@ff1+1
  7962  1770  0852               	movf	trimf@c+2,w
  7963  1771  00F2               	movwf	___ftge@ff1+2
  7964  1772  0847               	movf	trimf@x,w
  7965  1773  00F3               	movwf	___ftge@ff2
  7966  1774  0848               	movf	trimf@x+1,w
  7967  1775  00F4               	movwf	___ftge@ff2+1
  7968  1776  0849               	movf	trimf@x+2,w
  7969  1777  00F5               	movwf	___ftge@ff2+2
  7970  1778  160A  118A  23D9  160A  118A  	fcall	___ftge
  7971  177D  1C03               	btfss	3,0
  7972  177E  2FDA               	goto	i1l2444
  7973                           
  7974                           ;main.c: 77: ua = ((x - c) / (b - c));
  7975  177F  1283               	bcf	3,5	;RP0=0, select bank0
  7976  1780  1303               	bcf	3,6	;RP1=0, select bank0
  7977  1781  084D               	movf	trimf@b,w
  7978  1782  00AA               	movwf	___ftadd@f1
  7979  1783  084E               	movf	trimf@b+1,w
  7980  1784  00AB               	movwf	___ftadd@f1+1
  7981  1785  084F               	movf	trimf@b+2,w
  7982  1786  00AC               	movwf	___ftadd@f1+2
  7983  1787  0850               	movf	trimf@c,w
  7984  1788  00F0               	movwf	___ftneg@f1
  7985  1789  0851               	movf	trimf@c+1,w
  7986  178A  00F1               	movwf	___ftneg@f1+1
  7987  178B  0852               	movf	trimf@c+2,w
  7988  178C  00F2               	movwf	___ftneg@f1+2
  7989  178D  160A  118A  20B0  160A  118A  	fcall	___ftneg
  7990  1792  0870               	movf	?___ftneg,w
  7991  1793  1283               	bcf	3,5	;RP0=0, select bank0
  7992  1794  1303               	bcf	3,6	;RP1=0, select bank0
  7993  1795  00AD               	movwf	___ftadd@f2
  7994  1796  0871               	movf	?___ftneg+1,w
  7995  1797  00AE               	movwf	___ftadd@f2+1
  7996  1798  0872               	movf	?___ftneg+2,w
  7997  1799  00AF               	movwf	___ftadd@f2+2
  7998  179A  120A  158A  201A  160A  118A  	fcall	___ftadd
  7999  179F  1283               	bcf	3,5	;RP0=0, select bank0
  8000  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  8001  17A1  082A               	movf	?___ftadd,w
  8002  17A2  00B7               	movwf	___ftdiv@f2
  8003  17A3  082B               	movf	?___ftadd+1,w
  8004  17A4  00B8               	movwf	___ftdiv@f2+1
  8005  17A5  082C               	movf	?___ftadd+2,w
  8006  17A6  00B9               	movwf	___ftdiv@f2+2
  8007  17A7  0847               	movf	trimf@x,w
  8008  17A8  00AA               	movwf	___ftadd@f1
  8009  17A9  0848               	movf	trimf@x+1,w
  8010  17AA  00AB               	movwf	___ftadd@f1+1
  8011  17AB  0849               	movf	trimf@x+2,w
  8012  17AC  00AC               	movwf	___ftadd@f1+2
  8013  17AD  0850               	movf	trimf@c,w
  8014  17AE  00F0               	movwf	___ftneg@f1
  8015  17AF  0851               	movf	trimf@c+1,w
  8016  17B0  00F1               	movwf	___ftneg@f1+1
  8017  17B1  0852               	movf	trimf@c+2,w
  8018  17B2                     L13:	
  8019  17B2  00F2               	movwf	___ftneg@f1+2
  8020  17B3  160A  118A  20B0  160A  118A  	fcall	___ftneg
  8021  17B8  0870               	movf	?___ftneg,w
  8022  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  8023  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  8024  17BB  00AD               	movwf	___ftadd@f2
  8025  17BC  0871               	movf	?___ftneg+1,w
  8026  17BD  00AE               	movwf	___ftadd@f2+1
  8027  17BE  0872               	movf	?___ftneg+2,w
  8028  17BF  00AF               	movwf	___ftadd@f2+2
  8029  17C0  120A  158A  201A  160A  118A  	fcall	___ftadd
  8030  17C5  1283               	bcf	3,5	;RP0=0, select bank0
  8031  17C6  1303               	bcf	3,6	;RP1=0, select bank0
  8032  17C7  082A               	movf	?___ftadd,w
  8033  17C8  00BA               	movwf	___ftdiv@f1
  8034  17C9  082B               	movf	?___ftadd+1,w
  8035  17CA  00BB               	movwf	___ftdiv@f1+1
  8036  17CB  082C               	movf	?___ftadd+2,w
  8037  17CC  00BC               	movwf	___ftdiv@f1+2
  8038  17CD  160A  118A  2624  160A  118A  	fcall	___ftdiv
  8039  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  8040  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  8041  17D4  0837               	movf	?___ftdiv,w
  8042  17D5  00D3               	movwf	trimf@ua
  8043  17D6  0838               	movf	?___ftdiv+1,w
  8044  17D7  00D4               	movwf	trimf@ua+1
  8045  17D8  0839               	movf	?___ftdiv+2,w
  8046  17D9  2FF6               	goto	L10
  8047  17DA                     i1l2444:	
  8048                           
  8049                           ;main.c: 78: else if (x > c)
  8050  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  8051  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  8052  17DC  0850               	movf	trimf@c,w
  8053  17DD  00F0               	movwf	___ftge@ff1
  8054  17DE  0851               	movf	trimf@c+1,w
  8055  17DF  00F1               	movwf	___ftge@ff1+1
  8056  17E0  0852               	movf	trimf@c+2,w
  8057  17E1  00F2               	movwf	___ftge@ff1+2
  8058  17E2  0847               	movf	trimf@x,w
  8059  17E3  00F3               	movwf	___ftge@ff2
  8060  17E4  0848               	movf	trimf@x+1,w
  8061  17E5  00F4               	movwf	___ftge@ff2+1
  8062  17E6  0849               	movf	trimf@x+2,w
  8063  17E7  00F5               	movwf	___ftge@ff2+2
  8064  17E8  160A  118A  23D9  160A  118A  	fcall	___ftge
  8065  17ED  1803               	btfsc	3,0
  8066  17EE  2FF7               	goto	i1l118
  8067  17EF                     L12:	
  8068                           
  8069                           ;main.c: 79: ua = 0;
  8070  17EF  3000               	movlw	0
  8071  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  8072  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  8073  17F2  00D3               	movwf	trimf@ua
  8074  17F3  3000               	movlw	0
  8075  17F4  00D4               	movwf	trimf@ua+1
  8076  17F5  3000               	movlw	0
  8077  17F6                     L10:	
  8078  17F6  00D5               	movwf	trimf@ua+2
  8079  17F7                     i1l118:	
  8080                           
  8081                           ;main.c: 81: return(ua);
  8082  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  8083  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  8084  17F9  0853               	movf	trimf@ua,w
  8085  17FA  00C7               	movwf	?_trimf
  8086  17FB  0854               	movf	trimf@ua+1,w
  8087  17FC  00C8               	movwf	?_trimf+1
  8088  17FD  0855               	movf	trimf@ua+2,w
  8089  17FE  00C9               	movwf	?_trimf+2
  8090  17FF  0008               	return
  8091  1800                     __end_of_trimf:	
  8092                           
  8093                           	psect	text32
  8094  0A6C                     __ptext32:	
  8095 ;; *************** function _trapmf *****************
  8096 ;; Defined at:
  8097 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  x               3   39[BANK0 ] float 
  8100 ;;  a               3   42[BANK0 ] float 
  8101 ;;  b               3   45[BANK0 ] float 
  8102 ;;  c               3   48[BANK0 ] float 
  8103 ;;  d               3   51[BANK0 ] float 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  ua              3   54[BANK0 ] float 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  3   39[BANK0 ] float 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0, pclath, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8115 ;;      Params:         0      15       0       0       0
  8116 ;;      Locals:         0       3       0       0       0
  8117 ;;      Temps:          0       0       0       0       0
  8118 ;;      Totals:         0      18       0       0       0
  8119 ;;Total ram usage:       18 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    2
  8122 ;; This function calls:
  8123 ;;		___ftadd
  8124 ;;		___ftdiv
  8125 ;;		___ftge
  8126 ;;		___ftneg
  8127 ;; This function is called by:
  8128 ;;		_Fuzzy
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           
  8133                           ;psect for function _trapmf
  8134  0A6C                     _trapmf:	
  8135                           
  8136                           ;main.c: 89: float ua = 0;
  8137                           
  8138                           ;incstack = 0
  8139                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  8140  0A6C  3000               	movlw	0
  8141  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  8142  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0A6F  00D6               	movwf	trapmf@ua
  8144  0A70  3000               	movlw	0
  8145  0A71  00D7               	movwf	trapmf@ua+1
  8146  0A72  3000               	movlw	0
  8147  0A73  00D8               	movwf	trapmf@ua+2
  8148                           
  8149                           ;main.c: 91: if (x <= a)
  8150  0A74  084A               	movf	trapmf@a,w
  8151  0A75  00F0               	movwf	___ftge@ff1
  8152  0A76  084B               	movf	trapmf@a+1,w
  8153  0A77  00F1               	movwf	___ftge@ff1+1
  8154  0A78  084C               	movf	trapmf@a+2,w
  8155  0A79  00F2               	movwf	___ftge@ff1+2
  8156  0A7A  0847               	movf	trapmf@x,w
  8157  0A7B  00F3               	movwf	___ftge@ff2
  8158  0A7C  0848               	movf	trapmf@x+1,w
  8159  0A7D  00F4               	movwf	___ftge@ff2+1
  8160  0A7E  0849               	movf	trapmf@x+2,w
  8161  0A7F  00F5               	movwf	___ftge@ff2+2
  8162  0A80  160A  118A  23D9  120A  158A  	fcall	___ftge
  8163  0A85  1803               	btfsc	3,0
  8164  0A86  2BB1               	goto	L18
  8165                           
  8166                           ;main.c: 93: else if ((a < x) && (x <= b))
  8167                           
  8168                           ;main.c: 92: ua = 0;
  8169  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  8170  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  8171  0A89  084A               	movf	trapmf@a,w
  8172  0A8A  00F0               	movwf	___ftge@ff1
  8173  0A8B  084B               	movf	trapmf@a+1,w
  8174  0A8C  00F1               	movwf	___ftge@ff1+1
  8175  0A8D  084C               	movf	trapmf@a+2,w
  8176  0A8E  00F2               	movwf	___ftge@ff1+2
  8177  0A8F  0847               	movf	trapmf@x,w
  8178  0A90  00F3               	movwf	___ftge@ff2
  8179  0A91  0848               	movf	trapmf@x+1,w
  8180  0A92  00F4               	movwf	___ftge@ff2+1
  8181  0A93  0849               	movf	trapmf@x+2,w
  8182  0A94  00F5               	movwf	___ftge@ff2+2
  8183  0A95  160A  118A  23D9  120A  158A  	fcall	___ftge
  8184  0A9A  1803               	btfsc	3,0
  8185  0A9B  2AE5               	goto	i1l2462
  8186  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  8187  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  8188  0A9E  084D               	movf	trapmf@b,w
  8189  0A9F  00F0               	movwf	___ftge@ff1
  8190  0AA0  084E               	movf	trapmf@b+1,w
  8191  0AA1  00F1               	movwf	___ftge@ff1+1
  8192  0AA2  084F               	movf	trapmf@b+2,w
  8193  0AA3  00F2               	movwf	___ftge@ff1+2
  8194  0AA4  0847               	movf	trapmf@x,w
  8195  0AA5  00F3               	movwf	___ftge@ff2
  8196  0AA6  0848               	movf	trapmf@x+1,w
  8197  0AA7  00F4               	movwf	___ftge@ff2+1
  8198  0AA8  0849               	movf	trapmf@x+2,w
  8199  0AA9  00F5               	movwf	___ftge@ff2+2
  8200  0AAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8201  0AAF  1C03               	btfss	3,0
  8202  0AB0  2AE5               	goto	i1l2462
  8203                           
  8204                           ;main.c: 94: ua = ((x - a) / (b - a));
  8205  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  8206  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  8207  0AB3  084D               	movf	trapmf@b,w
  8208  0AB4  00AA               	movwf	___ftadd@f1
  8209  0AB5  084E               	movf	trapmf@b+1,w
  8210  0AB6  00AB               	movwf	___ftadd@f1+1
  8211  0AB7  084F               	movf	trapmf@b+2,w
  8212  0AB8  00AC               	movwf	___ftadd@f1+2
  8213  0AB9  084A               	movf	trapmf@a,w
  8214  0ABA  00F0               	movwf	___ftneg@f1
  8215  0ABB  084B               	movf	trapmf@a+1,w
  8216  0ABC  00F1               	movwf	___ftneg@f1+1
  8217  0ABD  084C               	movf	trapmf@a+2,w
  8218  0ABE  00F2               	movwf	___ftneg@f1+2
  8219  0ABF  160A  118A  20B0  120A  158A  	fcall	___ftneg
  8220  0AC4  0870               	movf	?___ftneg,w
  8221  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  8222  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  8223  0AC7  00AD               	movwf	___ftadd@f2
  8224  0AC8  0871               	movf	?___ftneg+1,w
  8225  0AC9  00AE               	movwf	___ftadd@f2+1
  8226  0ACA  0872               	movf	?___ftneg+2,w
  8227  0ACB  00AF               	movwf	___ftadd@f2+2
  8228  0ACC  120A  158A  201A  120A  158A  	fcall	___ftadd
  8229  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0AD3  082A               	movf	?___ftadd,w
  8232  0AD4  00B7               	movwf	___ftdiv@f2
  8233  0AD5  082B               	movf	?___ftadd+1,w
  8234  0AD6  00B8               	movwf	___ftdiv@f2+1
  8235  0AD7  082C               	movf	?___ftadd+2,w
  8236  0AD8  00B9               	movwf	___ftdiv@f2+2
  8237  0AD9  0847               	movf	trapmf@x,w
  8238  0ADA  00AA               	movwf	___ftadd@f1
  8239  0ADB  0848               	movf	trapmf@x+1,w
  8240  0ADC  00AB               	movwf	___ftadd@f1+1
  8241  0ADD  0849               	movf	trapmf@x+2,w
  8242  0ADE  00AC               	movwf	___ftadd@f1+2
  8243  0ADF  084A               	movf	trapmf@a,w
  8244  0AE0  00F0               	movwf	___ftneg@f1
  8245  0AE1  084B               	movf	trapmf@a+1,w
  8246  0AE2  00F1               	movwf	___ftneg@f1+1
  8247  0AE3  084C               	movf	trapmf@a+2,w
  8248  0AE4  2B74               	goto	L20
  8249  0AE5                     i1l2462:	
  8250                           
  8251                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8252  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  8253  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  8254  0AE7  0847               	movf	trapmf@x,w
  8255  0AE8  00F0               	movwf	___ftge@ff1
  8256  0AE9  0848               	movf	trapmf@x+1,w
  8257  0AEA  00F1               	movwf	___ftge@ff1+1
  8258  0AEB  0849               	movf	trapmf@x+2,w
  8259  0AEC  00F2               	movwf	___ftge@ff1+2
  8260  0AED  084D               	movf	trapmf@b,w
  8261  0AEE  00F3               	movwf	___ftge@ff2
  8262  0AEF  084E               	movf	trapmf@b+1,w
  8263  0AF0  00F4               	movwf	___ftge@ff2+1
  8264  0AF1  084F               	movf	trapmf@b+2,w
  8265  0AF2  00F5               	movwf	___ftge@ff2+2
  8266  0AF3  160A  118A  23D9  120A  158A  	fcall	___ftge
  8267  0AF8  1C03               	btfss	3,0
  8268  0AF9  2B17               	goto	i1l2468
  8269  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8270  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8271  0AFC  0850               	movf	trapmf@c,w
  8272  0AFD  00F0               	movwf	___ftge@ff1
  8273  0AFE  0851               	movf	trapmf@c+1,w
  8274  0AFF  00F1               	movwf	___ftge@ff1+1
  8275  0B00  0852               	movf	trapmf@c+2,w
  8276  0B01  00F2               	movwf	___ftge@ff1+2
  8277  0B02  0847               	movf	trapmf@x,w
  8278  0B03  00F3               	movwf	___ftge@ff2
  8279  0B04  0848               	movf	trapmf@x+1,w
  8280  0B05  00F4               	movwf	___ftge@ff2+1
  8281  0B06  0849               	movf	trapmf@x+2,w
  8282  0B07  00F5               	movwf	___ftge@ff2+2
  8283  0B08  160A  118A  23D9  120A  158A  	fcall	___ftge
  8284  0B0D  1C03               	btfss	3,0
  8285  0B0E  2B17               	goto	i1l2468
  8286                           
  8287                           ;main.c: 96: ua = 1;
  8288  0B0F  3000               	movlw	0
  8289  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  8290  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  8291  0B12  00D6               	movwf	trapmf@ua
  8292  0B13  3080               	movlw	128
  8293  0B14  00D7               	movwf	trapmf@ua+1
  8294  0B15  303F               	movlw	63
  8295  0B16  2BB8               	goto	L17
  8296  0B17                     i1l2468:	
  8297                           
  8298                           ;main.c: 97: else if ((c < x) && (x <= d))
  8299  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  8300  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  8301  0B19  0850               	movf	trapmf@c,w
  8302  0B1A  00F0               	movwf	___ftge@ff1
  8303  0B1B  0851               	movf	trapmf@c+1,w
  8304  0B1C  00F1               	movwf	___ftge@ff1+1
  8305  0B1D  0852               	movf	trapmf@c+2,w
  8306  0B1E  00F2               	movwf	___ftge@ff1+2
  8307  0B1F  0847               	movf	trapmf@x,w
  8308  0B20  00F3               	movwf	___ftge@ff2
  8309  0B21  0848               	movf	trapmf@x+1,w
  8310  0B22  00F4               	movwf	___ftge@ff2+1
  8311  0B23  0849               	movf	trapmf@x+2,w
  8312  0B24  00F5               	movwf	___ftge@ff2+2
  8313  0B25  160A  118A  23D9  120A  158A  	fcall	___ftge
  8314  0B2A  1803               	btfsc	3,0
  8315  0B2B  2B9C               	goto	i1l2474
  8316  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  8317  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  8318  0B2E  0853               	movf	trapmf@d,w
  8319  0B2F  00F0               	movwf	___ftge@ff1
  8320  0B30  0854               	movf	trapmf@d+1,w
  8321  0B31  00F1               	movwf	___ftge@ff1+1
  8322  0B32  0855               	movf	trapmf@d+2,w
  8323  0B33  00F2               	movwf	___ftge@ff1+2
  8324  0B34  0847               	movf	trapmf@x,w
  8325  0B35  00F3               	movwf	___ftge@ff2
  8326  0B36  0848               	movf	trapmf@x+1,w
  8327  0B37  00F4               	movwf	___ftge@ff2+1
  8328  0B38  0849               	movf	trapmf@x+2,w
  8329  0B39  00F5               	movwf	___ftge@ff2+2
  8330  0B3A  160A  118A  23D9  120A  158A  	fcall	___ftge
  8331  0B3F  1C03               	btfss	3,0
  8332  0B40  2B9C               	goto	i1l2474
  8333                           
  8334                           ;main.c: 98: ua = ((d - x) / (d - c));
  8335  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  8336  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  8337  0B43  0853               	movf	trapmf@d,w
  8338  0B44  00AA               	movwf	___ftadd@f1
  8339  0B45  0854               	movf	trapmf@d+1,w
  8340  0B46  00AB               	movwf	___ftadd@f1+1
  8341  0B47  0855               	movf	trapmf@d+2,w
  8342  0B48  00AC               	movwf	___ftadd@f1+2
  8343  0B49  0850               	movf	trapmf@c,w
  8344  0B4A  00F0               	movwf	___ftneg@f1
  8345  0B4B  0851               	movf	trapmf@c+1,w
  8346  0B4C  00F1               	movwf	___ftneg@f1+1
  8347  0B4D  0852               	movf	trapmf@c+2,w
  8348  0B4E  00F2               	movwf	___ftneg@f1+2
  8349  0B4F  160A  118A  20B0  120A  158A  	fcall	___ftneg
  8350  0B54  0870               	movf	?___ftneg,w
  8351  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  8352  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  8353  0B57  00AD               	movwf	___ftadd@f2
  8354  0B58  0871               	movf	?___ftneg+1,w
  8355  0B59  00AE               	movwf	___ftadd@f2+1
  8356  0B5A  0872               	movf	?___ftneg+2,w
  8357  0B5B  00AF               	movwf	___ftadd@f2+2
  8358  0B5C  120A  158A  201A  120A  158A  	fcall	___ftadd
  8359  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8360  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8361  0B63  082A               	movf	?___ftadd,w
  8362  0B64  00B7               	movwf	___ftdiv@f2
  8363  0B65  082B               	movf	?___ftadd+1,w
  8364  0B66  00B8               	movwf	___ftdiv@f2+1
  8365  0B67  082C               	movf	?___ftadd+2,w
  8366  0B68  00B9               	movwf	___ftdiv@f2+2
  8367  0B69  0853               	movf	trapmf@d,w
  8368  0B6A  00AA               	movwf	___ftadd@f1
  8369  0B6B  0854               	movf	trapmf@d+1,w
  8370  0B6C  00AB               	movwf	___ftadd@f1+1
  8371  0B6D  0855               	movf	trapmf@d+2,w
  8372  0B6E  00AC               	movwf	___ftadd@f1+2
  8373  0B6F  0847               	movf	trapmf@x,w
  8374  0B70  00F0               	movwf	___ftneg@f1
  8375  0B71  0848               	movf	trapmf@x+1,w
  8376  0B72  00F1               	movwf	___ftneg@f1+1
  8377  0B73  0849               	movf	trapmf@x+2,w
  8378  0B74                     L20:	
  8379  0B74  00F2               	movwf	___ftneg@f1+2
  8380  0B75  160A  118A  20B0  120A  158A  	fcall	___ftneg
  8381  0B7A  0870               	movf	?___ftneg,w
  8382  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  8383  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  8384  0B7D  00AD               	movwf	___ftadd@f2
  8385  0B7E  0871               	movf	?___ftneg+1,w
  8386  0B7F  00AE               	movwf	___ftadd@f2+1
  8387  0B80  0872               	movf	?___ftneg+2,w
  8388  0B81  00AF               	movwf	___ftadd@f2+2
  8389  0B82  120A  158A  201A  120A  158A  	fcall	___ftadd
  8390  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8391  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  8392  0B89  082A               	movf	?___ftadd,w
  8393  0B8A  00BA               	movwf	___ftdiv@f1
  8394  0B8B  082B               	movf	?___ftadd+1,w
  8395  0B8C  00BB               	movwf	___ftdiv@f1+1
  8396  0B8D  082C               	movf	?___ftadd+2,w
  8397  0B8E  00BC               	movwf	___ftdiv@f1+2
  8398  0B8F  160A  118A  2624  120A  158A  	fcall	___ftdiv
  8399  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  8400  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  8401  0B96  0837               	movf	?___ftdiv,w
  8402  0B97  00D6               	movwf	trapmf@ua
  8403  0B98  0838               	movf	?___ftdiv+1,w
  8404  0B99  00D7               	movwf	trapmf@ua+1
  8405  0B9A  0839               	movf	?___ftdiv+2,w
  8406  0B9B  2BB8               	goto	L17
  8407  0B9C                     i1l2474:	
  8408                           
  8409                           ;main.c: 99: else if (x > d)
  8410  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8411  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8412  0B9E  0853               	movf	trapmf@d,w
  8413  0B9F  00F0               	movwf	___ftge@ff1
  8414  0BA0  0854               	movf	trapmf@d+1,w
  8415  0BA1  00F1               	movwf	___ftge@ff1+1
  8416  0BA2  0855               	movf	trapmf@d+2,w
  8417  0BA3  00F2               	movwf	___ftge@ff1+2
  8418  0BA4  0847               	movf	trapmf@x,w
  8419  0BA5  00F3               	movwf	___ftge@ff2
  8420  0BA6  0848               	movf	trapmf@x+1,w
  8421  0BA7  00F4               	movwf	___ftge@ff2+1
  8422  0BA8  0849               	movf	trapmf@x+2,w
  8423  0BA9  00F5               	movwf	___ftge@ff2+2
  8424  0BAA  160A  118A  23D9  120A  158A  	fcall	___ftge
  8425  0BAF  1803               	btfsc	3,0
  8426  0BB0  2BB9               	goto	i1l128
  8427  0BB1                     L18:	
  8428                           
  8429                           ;main.c: 100: ua = 0;
  8430  0BB1  3000               	movlw	0
  8431  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  8432  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  8433  0BB4  00D6               	movwf	trapmf@ua
  8434  0BB5  3000               	movlw	0
  8435  0BB6  00D7               	movwf	trapmf@ua+1
  8436  0BB7  3000               	movlw	0
  8437  0BB8                     L17:	
  8438  0BB8  00D8               	movwf	trapmf@ua+2
  8439  0BB9                     i1l128:	
  8440                           
  8441                           ;main.c: 102: return(ua);
  8442  0BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8443  0BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8444  0BBB  0856               	movf	trapmf@ua,w
  8445  0BBC  00C7               	movwf	?_trapmf
  8446  0BBD  0857               	movf	trapmf@ua+1,w
  8447  0BBE  00C8               	movwf	?_trapmf+1
  8448  0BBF  0858               	movf	trapmf@ua+2,w
  8449  0BC0  00C9               	movwf	?_trapmf+2
  8450  0BC1  0008               	return
  8451  0BC2                     __end_of_trapmf:	
  8452                           
  8453                           	psect	text33
  8454  10B0                     __ptext33:	
  8455 ;; *************** function ___ftneg *****************
  8456 ;; Defined at:
  8457 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  f1              3    0[COMMON] float 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  3    0[COMMON] float 
  8464 ;; Registers used:
  8465 ;;		wreg
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8471 ;;      Params:         3       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0
  8474 ;;      Totals:         3       0       0       0       0
  8475 ;;Total ram usage:        3 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_trimf
  8481 ;;		_trapmf
  8482 ;;		_Fuzzy
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           
  8487                           ;psect for function ___ftneg
  8488  10B0                     ___ftneg:	
  8489                           
  8490                           ;incstack = 0
  8491                           ; Regs used in ___ftneg: [wreg]
  8492  10B0  0872               	movf	___ftneg@f1+2,w
  8493  10B1  0471               	iorwf	___ftneg@f1+1,w
  8494  10B2  0470               	iorwf	___ftneg@f1,w
  8495  10B3  1903               	skipnz
  8496  10B4  0008               	return
  8497  10B5  3080               	movlw	128
  8498  10B6  06F2               	xorwf	___ftneg@f1+2,f
  8499  10B7  0008               	return
  8500  10B8                     __end_of___ftneg:	
  8501                           
  8502                           	psect	text34
  8503  1624                     __ptext34:	
  8504 ;; *************** function ___ftdiv *****************
  8505 ;; Defined at:
  8506 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  f2              3   23[BANK0 ] float 
  8509 ;;  f1              3   26[BANK0 ] float 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  f3              3   34[BANK0 ] float 
  8512 ;;  sign            1   38[BANK0 ] unsigned char 
  8513 ;;  exp             1   37[BANK0 ] unsigned char 
  8514 ;;  cntr            1   33[BANK0 ] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  3   23[BANK0 ] float 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, pclath, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8524 ;;      Params:         0       6       0       0       0
  8525 ;;      Locals:         0       6       0       0       0
  8526 ;;      Temps:          0       4       0       0       0
  8527 ;;      Totals:         0      16       0       0       0
  8528 ;;Total ram usage:       16 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    1
  8531 ;; This function calls:
  8532 ;;		___ftpack
  8533 ;; This function is called by:
  8534 ;;		_trimf
  8535 ;;		_trapmf
  8536 ;;		_Fuzzy
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function ___ftdiv
  8542  1624                     ___ftdiv:	
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8546  1624  1283               	bcf	3,5	;RP0=0, select bank0
  8547  1625  1303               	bcf	3,6	;RP1=0, select bank0
  8548  1626  083A               	movf	___ftdiv@f1,w
  8549  1627  00BD               	movwf	??___ftdiv
  8550  1628  083B               	movf	___ftdiv@f1+1,w
  8551  1629  00BE               	movwf	??___ftdiv+1
  8552  162A  083C               	movf	___ftdiv@f1+2,w
  8553  162B  00BF               	movwf	??___ftdiv+2
  8554  162C  1003               	clrc
  8555  162D  0D3E               	rlf	??___ftdiv+1,w
  8556  162E  0D3F               	rlf	??___ftdiv+2,w
  8557  162F  00C0               	movwf	??___ftdiv+3
  8558  1630  0840               	movf	??___ftdiv+3,w
  8559  1631  00C5               	movwf	___ftdiv@exp
  8560  1632  08C5               	movf	___ftdiv@exp,f
  8561  1633  1D03               	skipz
  8562  1634  2E3C               	goto	i1l2358
  8563  1635  3000               	movlw	0
  8564  1636  00B7               	movwf	?___ftdiv
  8565  1637  3000               	movlw	0
  8566  1638  00B8               	movwf	?___ftdiv+1
  8567  1639  3000               	movlw	0
  8568  163A  00B9               	movwf	?___ftdiv+2
  8569  163B  0008               	return
  8570  163C                     i1l2358:	
  8571  163C  0837               	movf	___ftdiv@f2,w
  8572  163D  00BD               	movwf	??___ftdiv
  8573  163E  0838               	movf	___ftdiv@f2+1,w
  8574  163F  00BE               	movwf	??___ftdiv+1
  8575  1640  0839               	movf	___ftdiv@f2+2,w
  8576  1641  00BF               	movwf	??___ftdiv+2
  8577  1642  1003               	clrc
  8578  1643  0D3E               	rlf	??___ftdiv+1,w
  8579  1644  0D3F               	rlf	??___ftdiv+2,w
  8580  1645  00C0               	movwf	??___ftdiv+3
  8581  1646  0840               	movf	??___ftdiv+3,w
  8582  1647  00C6               	movwf	___ftdiv@sign
  8583  1648  08C6               	movf	___ftdiv@sign,f
  8584  1649  1D03               	skipz
  8585  164A  2E52               	goto	i1l2364
  8586  164B  3000               	movlw	0
  8587  164C  00B7               	movwf	?___ftdiv
  8588  164D  3000               	movlw	0
  8589  164E  00B8               	movwf	?___ftdiv+1
  8590  164F  3000               	movlw	0
  8591  1650  00B9               	movwf	?___ftdiv+2
  8592  1651  0008               	return
  8593  1652                     i1l2364:	
  8594  1652  3000               	movlw	0
  8595  1653  00C2               	movwf	___ftdiv@f3
  8596  1654  3000               	movlw	0
  8597  1655  00C3               	movwf	___ftdiv@f3+1
  8598  1656  3000               	movlw	0
  8599  1657  00C4               	movwf	___ftdiv@f3+2
  8600  1658  3089               	movlw	137
  8601  1659  0746               	addwf	___ftdiv@sign,w
  8602  165A  00BD               	movwf	??___ftdiv
  8603  165B  083D               	movf	??___ftdiv,w
  8604  165C  02C5               	subwf	___ftdiv@exp,f
  8605  165D  083A               	movf	___ftdiv@f1,w
  8606  165E  00BD               	movwf	??___ftdiv
  8607  165F  083B               	movf	___ftdiv@f1+1,w
  8608  1660  00BE               	movwf	??___ftdiv+1
  8609  1661  083C               	movf	___ftdiv@f1+2,w
  8610  1662  00BF               	movwf	??___ftdiv+2
  8611  1663  3010               	movlw	16
  8612  1664                     u251_25:	
  8613  1664  1003               	clrc
  8614  1665  0CBF               	rrf	??___ftdiv+2,f
  8615  1666  0CBE               	rrf	??___ftdiv+1,f
  8616  1667  0CBD               	rrf	??___ftdiv,f
  8617  1668  3EFF               	addlw	-1
  8618  1669  1D03               	skipz
  8619  166A  2E64               	goto	u251_25
  8620  166B  083D               	movf	??___ftdiv,w
  8621  166C  00C0               	movwf	??___ftdiv+3
  8622  166D  0840               	movf	??___ftdiv+3,w
  8623  166E  00C6               	movwf	___ftdiv@sign
  8624  166F  0837               	movf	___ftdiv@f2,w
  8625  1670  00BD               	movwf	??___ftdiv
  8626  1671  0838               	movf	___ftdiv@f2+1,w
  8627  1672  00BE               	movwf	??___ftdiv+1
  8628  1673  0839               	movf	___ftdiv@f2+2,w
  8629  1674  00BF               	movwf	??___ftdiv+2
  8630  1675  3010               	movlw	16
  8631  1676                     u252_25:	
  8632  1676  1003               	clrc
  8633  1677  0CBF               	rrf	??___ftdiv+2,f
  8634  1678  0CBE               	rrf	??___ftdiv+1,f
  8635  1679  0CBD               	rrf	??___ftdiv,f
  8636  167A  3EFF               	addlw	-1
  8637  167B  1D03               	skipz
  8638  167C  2E76               	goto	u252_25
  8639  167D  083D               	movf	??___ftdiv,w
  8640  167E  00C0               	movwf	??___ftdiv+3
  8641  167F  0840               	movf	??___ftdiv+3,w
  8642  1680  06C6               	xorwf	___ftdiv@sign,f
  8643  1681  3080               	movlw	128
  8644  1682  00BD               	movwf	??___ftdiv
  8645  1683  083D               	movf	??___ftdiv,w
  8646  1684  05C6               	andwf	___ftdiv@sign,f
  8647  1685  17BB               	bsf	___ftdiv@f1+1,7
  8648  1686  30FF               	movlw	255
  8649  1687  05BA               	andwf	___ftdiv@f1,f
  8650  1688  30FF               	movlw	255
  8651  1689  05BB               	andwf	___ftdiv@f1+1,f
  8652  168A  3000               	movlw	0
  8653  168B  05BC               	andwf	___ftdiv@f1+2,f
  8654  168C  17B8               	bsf	___ftdiv@f2+1,7
  8655  168D  30FF               	movlw	255
  8656  168E  05B7               	andwf	___ftdiv@f2,f
  8657  168F  30FF               	movlw	255
  8658  1690  05B8               	andwf	___ftdiv@f2+1,f
  8659  1691  3000               	movlw	0
  8660  1692  05B9               	andwf	___ftdiv@f2+2,f
  8661  1693  3018               	movlw	24
  8662  1694  00BD               	movwf	??___ftdiv
  8663  1695  083D               	movf	??___ftdiv,w
  8664  1696  00C1               	movwf	___ftdiv@cntr
  8665  1697                     i1l2378:	
  8666  1697  3001               	movlw	1
  8667  1698                     u253_25:	
  8668  1698  1003               	clrc
  8669  1699  0DC2               	rlf	___ftdiv@f3,f
  8670  169A  0DC3               	rlf	___ftdiv@f3+1,f
  8671  169B  0DC4               	rlf	___ftdiv@f3+2,f
  8672  169C  3EFF               	addlw	-1
  8673  169D  1D03               	skipz
  8674  169E  2E98               	goto	u253_25
  8675  169F  0839               	movf	___ftdiv@f2+2,w
  8676  16A0  023C               	subwf	___ftdiv@f1+2,w
  8677  16A1  1D03               	skipz
  8678  16A2  2EA9               	goto	u254_25
  8679  16A3  0838               	movf	___ftdiv@f2+1,w
  8680  16A4  023B               	subwf	___ftdiv@f1+1,w
  8681  16A5  1D03               	skipz
  8682  16A6  2EA9               	goto	u254_25
  8683  16A7  0837               	movf	___ftdiv@f2,w
  8684  16A8  023A               	subwf	___ftdiv@f1,w
  8685  16A9                     u254_25:	
  8686  16A9  1C03               	skipc
  8687  16AA  2EB6               	goto	i1l2386
  8688  16AB  0837               	movf	___ftdiv@f2,w
  8689  16AC  02BA               	subwf	___ftdiv@f1,f
  8690  16AD  0838               	movf	___ftdiv@f2+1,w
  8691  16AE  1C03               	skipc
  8692  16AF  0F38               	incfsz	___ftdiv@f2+1,w
  8693  16B0  02BB               	subwf	___ftdiv@f1+1,f
  8694  16B1  0839               	movf	___ftdiv@f2+2,w
  8695  16B2  1C03               	skipc
  8696  16B3  0A39               	incf	___ftdiv@f2+2,w
  8697  16B4  02BC               	subwf	___ftdiv@f1+2,f
  8698  16B5  1442               	bsf	___ftdiv@f3,0
  8699  16B6                     i1l2386:	
  8700  16B6  3001               	movlw	1
  8701  16B7                     u255_25:	
  8702  16B7  1003               	clrc
  8703  16B8  0DBA               	rlf	___ftdiv@f1,f
  8704  16B9  0DBB               	rlf	___ftdiv@f1+1,f
  8705  16BA  0DBC               	rlf	___ftdiv@f1+2,f
  8706  16BB  3EFF               	addlw	-1
  8707  16BC  1D03               	skipz
  8708  16BD  2EB7               	goto	u255_25
  8709  16BE  3001               	movlw	1
  8710  16BF  02C1               	subwf	___ftdiv@cntr,f
  8711  16C0  1D03               	btfss	3,2
  8712  16C1  2E97               	goto	i1l2378
  8713  16C2  0842               	movf	___ftdiv@f3,w
  8714  16C3  00F0               	movwf	___ftpack@arg
  8715  16C4  0843               	movf	___ftdiv@f3+1,w
  8716  16C5  00F1               	movwf	___ftpack@arg+1
  8717  16C6  0844               	movf	___ftdiv@f3+2,w
  8718  16C7  00F2               	movwf	___ftpack@arg+2
  8719  16C8  0845               	movf	___ftdiv@exp,w
  8720  16C9  00BD               	movwf	??___ftdiv
  8721  16CA  083D               	movf	??___ftdiv,w
  8722  16CB  00F3               	movwf	___ftpack@exp
  8723  16CC  0846               	movf	___ftdiv@sign,w
  8724  16CD  00BE               	movwf	??___ftdiv+1
  8725  16CE  083E               	movf	??___ftdiv+1,w
  8726  16CF  00F4               	movwf	___ftpack@sign
  8727  16D0  160A  118A  2436   	fcall	___ftpack
  8728  16D3  0870               	movf	?___ftpack,w
  8729  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  8730  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  8731  16D6  00B7               	movwf	?___ftdiv
  8732  16D7  0871               	movf	?___ftpack+1,w
  8733  16D8  00B8               	movwf	?___ftdiv+1
  8734  16D9  0872               	movf	?___ftpack+2,w
  8735  16DA  00B9               	movwf	?___ftdiv+2
  8736  16DB  0008               	return
  8737  16DC                     __end_of___ftdiv:	
  8738                           
  8739                           	psect	text35
  8740  081A                     __ptext35:	
  8741 ;; *************** function ___ftadd *****************
  8742 ;; Defined at:
  8743 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  f1              3   10[BANK0 ] float 
  8746 ;;  f2              3   13[BANK0 ] float 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  exp1            1   22[BANK0 ] unsigned char 
  8749 ;;  exp2            1   21[BANK0 ] unsigned char 
  8750 ;;  sign            1   20[BANK0 ] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  3   10[BANK0 ] float 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8760 ;;      Params:         0       6       0       0       0
  8761 ;;      Locals:         0       3       0       0       0
  8762 ;;      Temps:          0       4       0       0       0
  8763 ;;      Totals:         0      13       0       0       0
  8764 ;;Total ram usage:       13 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    1
  8767 ;; This function calls:
  8768 ;;		___ftpack
  8769 ;; This function is called by:
  8770 ;;		_trimf
  8771 ;;		_trapmf
  8772 ;;		_Fuzzy
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           
  8777                           ;psect for function ___ftadd
  8778  081A                     ___ftadd:	
  8779                           
  8780                           ;incstack = 0
  8781                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8782  081A  1283               	bcf	3,5	;RP0=0, select bank0
  8783  081B  1303               	bcf	3,6	;RP1=0, select bank0
  8784  081C  082A               	movf	___ftadd@f1,w
  8785  081D  00B0               	movwf	??___ftadd
  8786  081E  082B               	movf	___ftadd@f1+1,w
  8787  081F  00B1               	movwf	??___ftadd+1
  8788  0820  082C               	movf	___ftadd@f1+2,w
  8789  0821  00B2               	movwf	??___ftadd+2
  8790  0822  1003               	clrc
  8791  0823  0D31               	rlf	??___ftadd+1,w
  8792  0824  0D32               	rlf	??___ftadd+2,w
  8793  0825  00B3               	movwf	??___ftadd+3
  8794  0826  0833               	movf	??___ftadd+3,w
  8795  0827  00B6               	movwf	___ftadd@exp1
  8796  0828  082D               	movf	___ftadd@f2,w
  8797  0829  00B0               	movwf	??___ftadd
  8798  082A  082E               	movf	___ftadd@f2+1,w
  8799  082B  00B1               	movwf	??___ftadd+1
  8800  082C  082F               	movf	___ftadd@f2+2,w
  8801  082D  00B2               	movwf	??___ftadd+2
  8802  082E  1003               	clrc
  8803  082F  0D31               	rlf	??___ftadd+1,w
  8804  0830  0D32               	rlf	??___ftadd+2,w
  8805  0831  00B3               	movwf	??___ftadd+3
  8806  0832  0833               	movf	??___ftadd+3,w
  8807  0833  00B5               	movwf	___ftadd@exp2
  8808  0834  0836               	movf	___ftadd@exp1,w
  8809  0835  1903               	btfsc	3,2
  8810  0836  2843               	goto	i1l2288
  8811  0837  0835               	movf	___ftadd@exp2,w
  8812  0838  0236               	subwf	___ftadd@exp1,w
  8813  0839  1803               	skipnc
  8814  083A  284A               	goto	i1l2292
  8815  083B  0336               	decf	___ftadd@exp1,w
  8816  083C  3AFF               	xorlw	255
  8817  083D  0735               	addwf	___ftadd@exp2,w
  8818  083E  00B0               	movwf	??___ftadd
  8819  083F  3019               	movlw	25
  8820  0840  0230               	subwf	??___ftadd,w
  8821  0841  1C03               	skipc
  8822  0842  284A               	goto	i1l2292
  8823  0843                     i1l2288:	
  8824  0843  082D               	movf	___ftadd@f2,w
  8825  0844  00AA               	movwf	?___ftadd
  8826  0845  082E               	movf	___ftadd@f2+1,w
  8827  0846  00AB               	movwf	?___ftadd+1
  8828  0847  082F               	movf	___ftadd@f2+2,w
  8829  0848  00AC               	movwf	?___ftadd+2
  8830  0849  0008               	return
  8831  084A                     i1l2292:	
  8832  084A  0835               	movf	___ftadd@exp2,w
  8833  084B  1903               	btfsc	3,2
  8834  084C  0008               	return
  8835  084D  0836               	movf	___ftadd@exp1,w
  8836  084E  0235               	subwf	___ftadd@exp2,w
  8837  084F  1803               	skipnc
  8838  0850  2859               	goto	i1l2298
  8839  0851  0335               	decf	___ftadd@exp2,w
  8840  0852  3AFF               	xorlw	255
  8841  0853  0736               	addwf	___ftadd@exp1,w
  8842  0854  00B0               	movwf	??___ftadd
  8843  0855  3019               	movlw	25
  8844  0856  0230               	subwf	??___ftadd,w
  8845  0857  1803               	btfsc	3,0
  8846  0858  0008               	return
  8847  0859                     i1l2298:	
  8848  0859  3006               	movlw	6
  8849  085A  00B0               	movwf	??___ftadd
  8850  085B  0830               	movf	??___ftadd,w
  8851  085C  00B4               	movwf	___ftadd@sign
  8852  085D  1BAC               	btfsc	___ftadd@f1+2,7
  8853  085E  17B4               	bsf	___ftadd@sign,7
  8854  085F  1BAF               	btfsc	___ftadd@f2+2,7
  8855  0860  1734               	bsf	___ftadd@sign,6
  8856  0861  17AB               	bsf	___ftadd@f1+1,7
  8857  0862  30FF               	movlw	255
  8858  0863  05AA               	andwf	___ftadd@f1,f
  8859  0864  30FF               	movlw	255
  8860  0865  05AB               	andwf	___ftadd@f1+1,f
  8861  0866  3000               	movlw	0
  8862  0867  05AC               	andwf	___ftadd@f1+2,f
  8863  0868  17AE               	bsf	___ftadd@f2+1,7
  8864  0869  30FF               	movlw	255
  8865  086A  05AD               	andwf	___ftadd@f2,f
  8866  086B  30FF               	movlw	255
  8867  086C  05AE               	andwf	___ftadd@f2+1,f
  8868  086D  3000               	movlw	0
  8869  086E  05AF               	andwf	___ftadd@f2+2,f
  8870  086F  0835               	movf	___ftadd@exp2,w
  8871  0870  0236               	subwf	___ftadd@exp1,w
  8872  0871  1803               	skipnc
  8873  0872  2899               	goto	i1l2320
  8874  0873                     i1l2310:	
  8875  0873  3001               	movlw	1
  8876  0874                     u234_25:	
  8877  0874  1003               	clrc
  8878  0875  0DAD               	rlf	___ftadd@f2,f
  8879  0876  0DAE               	rlf	___ftadd@f2+1,f
  8880  0877  0DAF               	rlf	___ftadd@f2+2,f
  8881  0878  3EFF               	addlw	-1
  8882  0879  1D03               	skipz
  8883  087A  2874               	goto	u234_25
  8884  087B  3001               	movlw	1
  8885  087C  02B5               	subwf	___ftadd@exp2,f
  8886  087D  0835               	movf	___ftadd@exp2,w
  8887  087E  0636               	xorwf	___ftadd@exp1,w
  8888  087F  1903               	skipnz
  8889  0880  2894               	goto	i1l2318
  8890  0881  3001               	movlw	1
  8891  0882  02B4               	subwf	___ftadd@sign,f
  8892  0883  0834               	movf	___ftadd@sign,w
  8893  0884  3907               	andlw	7
  8894  0885  1903               	btfsc	3,2
  8895  0886  2894               	goto	i1l2318
  8896  0887  2873               	goto	i1l2310
  8897  0888                     i1l2316:	
  8898  0888  3001               	movlw	1
  8899  0889                     u237_25:	
  8900  0889  1003               	clrc
  8901  088A  0CAC               	rrf	___ftadd@f1+2,f
  8902  088B  0CAB               	rrf	___ftadd@f1+1,f
  8903  088C  0CAA               	rrf	___ftadd@f1,f
  8904  088D  3EFF               	addlw	-1
  8905  088E  1D03               	skipz
  8906  088F  2889               	goto	u237_25
  8907  0890  3001               	movlw	1
  8908  0891  00B0               	movwf	??___ftadd
  8909  0892  0830               	movf	??___ftadd,w
  8910  0893  07B6               	addwf	___ftadd@exp1,f
  8911  0894                     i1l2318:	
  8912  0894  0836               	movf	___ftadd@exp1,w
  8913  0895  0635               	xorwf	___ftadd@exp2,w
  8914  0896  1903               	btfsc	3,2
  8915  0897  28C2               	goto	i1l788
  8916  0898  2888               	goto	i1l2316
  8917  0899                     i1l2320:	
  8918  0899  0836               	movf	___ftadd@exp1,w
  8919  089A  0235               	subwf	___ftadd@exp2,w
  8920  089B  1803               	skipnc
  8921  089C  28C2               	goto	i1l788
  8922  089D                     i1l2322:	
  8923  089D  3001               	movlw	1
  8924  089E                     u240_25:	
  8925  089E  1003               	clrc
  8926  089F  0DAA               	rlf	___ftadd@f1,f
  8927  08A0  0DAB               	rlf	___ftadd@f1+1,f
  8928  08A1  0DAC               	rlf	___ftadd@f1+2,f
  8929  08A2  3EFF               	addlw	-1
  8930  08A3  1D03               	skipz
  8931  08A4  289E               	goto	u240_25
  8932  08A5  3001               	movlw	1
  8933  08A6  02B6               	subwf	___ftadd@exp1,f
  8934  08A7  0835               	movf	___ftadd@exp2,w
  8935  08A8  0636               	xorwf	___ftadd@exp1,w
  8936  08A9  1903               	skipnz
  8937  08AA  28BE               	goto	i1l2330
  8938  08AB  3001               	movlw	1
  8939  08AC  02B4               	subwf	___ftadd@sign,f
  8940  08AD  0834               	movf	___ftadd@sign,w
  8941  08AE  3907               	andlw	7
  8942  08AF  1903               	btfsc	3,2
  8943  08B0  28BE               	goto	i1l2330
  8944  08B1  289D               	goto	i1l2322
  8945  08B2                     i1l2328:	
  8946  08B2  3001               	movlw	1
  8947  08B3                     u243_25:	
  8948  08B3  1003               	clrc
  8949  08B4  0CAF               	rrf	___ftadd@f2+2,f
  8950  08B5  0CAE               	rrf	___ftadd@f2+1,f
  8951  08B6  0CAD               	rrf	___ftadd@f2,f
  8952  08B7  3EFF               	addlw	-1
  8953  08B8  1D03               	skipz
  8954  08B9  28B3               	goto	u243_25
  8955  08BA  3001               	movlw	1
  8956  08BB  00B0               	movwf	??___ftadd
  8957  08BC  0830               	movf	??___ftadd,w
  8958  08BD  07B5               	addwf	___ftadd@exp2,f
  8959  08BE                     i1l2330:	
  8960  08BE  0836               	movf	___ftadd@exp1,w
  8961  08BF  0635               	xorwf	___ftadd@exp2,w
  8962  08C0  1D03               	skipz
  8963  08C1  28B2               	goto	i1l2328
  8964  08C2                     i1l788:	
  8965  08C2  1FB4               	btfss	___ftadd@sign,7
  8966  08C3  28D4               	goto	i1l2334
  8967  08C4  30FF               	movlw	255
  8968  08C5  06AA               	xorwf	___ftadd@f1,f
  8969  08C6  30FF               	movlw	255
  8970  08C7  06AB               	xorwf	___ftadd@f1+1,f
  8971  08C8  30FF               	movlw	255
  8972  08C9  06AC               	xorwf	___ftadd@f1+2,f
  8973  08CA  3001               	movlw	1
  8974  08CB  07AA               	addwf	___ftadd@f1,f
  8975  08CC  3000               	movlw	0
  8976  08CD  1803               	skipnc
  8977  08CE  3001               	movlw	1
  8978  08CF  07AB               	addwf	___ftadd@f1+1,f
  8979  08D0  3000               	movlw	0
  8980  08D1  1803               	skipnc
  8981  08D2  3001               	movlw	1
  8982  08D3  07AC               	addwf	___ftadd@f1+2,f
  8983  08D4                     i1l2334:	
  8984  08D4  1F34               	btfss	___ftadd@sign,6
  8985  08D5  28E6               	goto	i1l2338
  8986  08D6  30FF               	movlw	255
  8987  08D7  06AD               	xorwf	___ftadd@f2,f
  8988  08D8  30FF               	movlw	255
  8989  08D9  06AE               	xorwf	___ftadd@f2+1,f
  8990  08DA  30FF               	movlw	255
  8991  08DB  06AF               	xorwf	___ftadd@f2+2,f
  8992  08DC  3001               	movlw	1
  8993  08DD  07AD               	addwf	___ftadd@f2,f
  8994  08DE  3000               	movlw	0
  8995  08DF  1803               	skipnc
  8996  08E0  3001               	movlw	1
  8997  08E1  07AE               	addwf	___ftadd@f2+1,f
  8998  08E2  3000               	movlw	0
  8999  08E3  1803               	skipnc
  9000  08E4  3001               	movlw	1
  9001  08E5  07AF               	addwf	___ftadd@f2+2,f
  9002  08E6                     i1l2338:	
  9003  08E6  01B4               	clrf	___ftadd@sign
  9004  08E7  082A               	movf	___ftadd@f1,w
  9005  08E8  07AD               	addwf	___ftadd@f2,f
  9006  08E9  082B               	movf	___ftadd@f1+1,w
  9007  08EA  1103               	clrz
  9008  08EB  1803               	skipnc
  9009  08EC  0A2B               	incf	___ftadd@f1+1,w
  9010  08ED  1D03               	btfss	3,2
  9011  08EE  07AE               	addwf	___ftadd@f2+1,f
  9012  08EF  082C               	movf	___ftadd@f1+2,w
  9013  08F0  1103               	clrz
  9014  08F1  1803               	skipnc
  9015  08F2  0A2C               	incf	___ftadd@f1+2,w
  9016  08F3  1D03               	btfss	3,2
  9017  08F4  07AF               	addwf	___ftadd@f2+2,f
  9018  08F5  1FAF               	btfss	___ftadd@f2+2,7
  9019  08F6  2909               	goto	i1l2348
  9020  08F7  30FF               	movlw	255
  9021  08F8  06AD               	xorwf	___ftadd@f2,f
  9022  08F9  30FF               	movlw	255
  9023  08FA  06AE               	xorwf	___ftadd@f2+1,f
  9024  08FB  30FF               	movlw	255
  9025  08FC  06AF               	xorwf	___ftadd@f2+2,f
  9026  08FD  3001               	movlw	1
  9027  08FE  07AD               	addwf	___ftadd@f2,f
  9028  08FF  3000               	movlw	0
  9029  0900  1803               	skipnc
  9030  0901  3001               	movlw	1
  9031  0902  07AE               	addwf	___ftadd@f2+1,f
  9032  0903  3000               	movlw	0
  9033  0904  1803               	skipnc
  9034  0905  3001               	movlw	1
  9035  0906  07AF               	addwf	___ftadd@f2+2,f
  9036  0907  01B4               	clrf	___ftadd@sign
  9037  0908  0AB4               	incf	___ftadd@sign,f
  9038  0909                     i1l2348:	
  9039  0909  082D               	movf	___ftadd@f2,w
  9040  090A  00F0               	movwf	___ftpack@arg
  9041  090B  082E               	movf	___ftadd@f2+1,w
  9042  090C  00F1               	movwf	___ftpack@arg+1
  9043  090D  082F               	movf	___ftadd@f2+2,w
  9044  090E  00F2               	movwf	___ftpack@arg+2
  9045  090F  0836               	movf	___ftadd@exp1,w
  9046  0910  00B0               	movwf	??___ftadd
  9047  0911  0830               	movf	??___ftadd,w
  9048  0912  00F3               	movwf	___ftpack@exp
  9049  0913  0834               	movf	___ftadd@sign,w
  9050  0914  00B1               	movwf	??___ftadd+1
  9051  0915  0831               	movf	??___ftadd+1,w
  9052  0916  00F4               	movwf	___ftpack@sign
  9053  0917  160A  118A  2436   	fcall	___ftpack
  9054  091A  0870               	movf	?___ftpack,w
  9055  091B  1283               	bcf	3,5	;RP0=0, select bank0
  9056  091C  1303               	bcf	3,6	;RP1=0, select bank0
  9057  091D  00AA               	movwf	?___ftadd
  9058  091E  0871               	movf	?___ftpack+1,w
  9059  091F  00AB               	movwf	?___ftadd+1
  9060  0920  0872               	movf	?___ftpack+2,w
  9061  0921  00AC               	movwf	?___ftadd+2
  9062  0922  0008               	return
  9063  0923                     __end_of___ftadd:	
  9064                           
  9065                           	psect	text36
  9066  116B                     __ptext36:	
  9067 ;; *************** function _max_val *****************
  9068 ;; Defined at:
  9069 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  a               3    0[BANK0 ] float 
  9072 ;;  b               3    3[BANK0 ] float 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;		None
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  3    0[BANK0 ] float 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0, pclath, cstack
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9084 ;;      Params:         0       6       0       0       0
  9085 ;;      Locals:         0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0
  9087 ;;      Totals:         0       6       0       0       0
  9088 ;;Total ram usage:        6 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    1
  9091 ;; This function calls:
  9092 ;;		___ftge
  9093 ;; This function is called by:
  9094 ;;		_Fuzzy
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           
  9099                           ;psect for function _max_val
  9100  116B                     _max_val:	
  9101                           
  9102                           ;main.c: 119: if (a > b)
  9103                           
  9104                           ;incstack = 0
  9105                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  9106  116B  1283               	bcf	3,5	;RP0=0, select bank0
  9107  116C  1303               	bcf	3,6	;RP1=0, select bank0
  9108  116D  0823               	movf	max_val@b,w
  9109  116E  00F0               	movwf	___ftge@ff1
  9110  116F  0824               	movf	max_val@b+1,w
  9111  1170  00F1               	movwf	___ftge@ff1+1
  9112  1171  0825               	movf	max_val@b+2,w
  9113  1172  00F2               	movwf	___ftge@ff1+2
  9114  1173  0820               	movf	max_val@a,w
  9115  1174  00F3               	movwf	___ftge@ff2
  9116  1175  0821               	movf	max_val@a+1,w
  9117  1176  00F4               	movwf	___ftge@ff2+1
  9118  1177  0822               	movf	max_val@a+2,w
  9119  1178  00F5               	movwf	___ftge@ff2+2
  9120  1179  160A  118A  23D9  160A  118A  	fcall	___ftge
  9121  117E  1C03               	btfss	3,0
  9122  117F  0008               	return
  9123                           
  9124                           ;main.c: 121: else
  9125                           ;main.c: 122: return b;
  9126                           
  9127                           ;main.c: 120: return a;
  9128  1180  1283               	bcf	3,5	;RP0=0, select bank0
  9129  1181  1303               	bcf	3,6	;RP1=0, select bank0
  9130  1182  0823               	movf	max_val@b,w
  9131  1183  00A0               	movwf	?_max_val
  9132  1184  0824               	movf	max_val@b+1,w
  9133  1185  00A1               	movwf	?_max_val+1
  9134  1186  0825               	movf	max_val@b+2,w
  9135  1187  00A2               	movwf	?_max_val+2
  9136  1188  0008               	return
  9137  1189                     __end_of_max_val:	
  9138                           
  9139                           	psect	text37
  9140  13D9                     __ptext37:	
  9141 ;; *************** function ___ftge *****************
  9142 ;; Defined at:
  9143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  ff1             3    0[COMMON] float 
  9146 ;;  ff2             3    3[COMMON] float 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;		None               void
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9158 ;;      Params:         6       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0
  9160 ;;      Temps:          6       0       0       0       0
  9161 ;;      Totals:        12       0       0       0       0
  9162 ;;Total ram usage:       12 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_trimf
  9168 ;;		_trapmf
  9169 ;;		_max_val
  9170 ;;		_Fuzzy
  9171 ;;		_min_val
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           
  9176                           ;psect for function ___ftge
  9177  13D9                     ___ftge:	
  9178                           
  9179                           ;incstack = 0
  9180                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9181  13D9  1FF2               	btfss	___ftge@ff1+2,7
  9182  13DA  2C00               	goto	i1l2398
  9183  13DB  3000               	movlw	0
  9184  13DC  00F6               	movwf	??___ftge
  9185  13DD  3000               	movlw	0
  9186  13DE  00F7               	movwf	??___ftge+1
  9187  13DF  3080               	movlw	128
  9188  13E0  00F8               	movwf	??___ftge+2
  9189  13E1  0970               	comf	___ftge@ff1,w
  9190  13E2  00F9               	movwf	??___ftge+3
  9191  13E3  0971               	comf	___ftge@ff1+1,w
  9192  13E4  00FA               	movwf	??___ftge+4
  9193  13E5  0972               	comf	___ftge@ff1+2,w
  9194  13E6  00FB               	movwf	??___ftge+5
  9195  13E7  0AF9               	incf	??___ftge+3,f
  9196  13E8  1903               	skipnz
  9197  13E9  0AFA               	incf	??___ftge+4,f
  9198  13EA  1903               	skipnz
  9199  13EB  0AFB               	incf	??___ftge+5,f
  9200  13EC  0879               	movf	??___ftge+3,w
  9201  13ED  07F6               	addwf	??___ftge,f
  9202  13EE  087A               	movf	??___ftge+4,w
  9203  13EF  1803               	skipnc
  9204  13F0  0F7A               	incfsz	??___ftge+4,w
  9205  13F1  2BF3               	goto	u258_21
  9206  13F2  2BF4               	goto	u258_22
  9207  13F3                     u258_21:	
  9208  13F3  07F7               	addwf	??___ftge+1,f
  9209  13F4                     u258_22:	
  9210  13F4  087B               	movf	??___ftge+5,w
  9211  13F5  1803               	skipnc
  9212  13F6  0F7B               	incfsz	??___ftge+5,w
  9213  13F7  2BF9               	goto	u258_23
  9214  13F8  2BFA               	goto	u258_24
  9215  13F9                     u258_23:	
  9216  13F9  07F8               	addwf	??___ftge+2,f
  9217  13FA                     u258_24:	
  9218  13FA  0876               	movf	??___ftge,w
  9219  13FB  00F0               	movwf	___ftge@ff1
  9220  13FC  0877               	movf	??___ftge+1,w
  9221  13FD  00F1               	movwf	___ftge@ff1+1
  9222  13FE  0878               	movf	??___ftge+2,w
  9223  13FF  00F2               	movwf	___ftge@ff1+2
  9224  1400                     i1l2398:	
  9225  1400  1FF5               	btfss	___ftge@ff2+2,7
  9226  1401  2C27               	goto	i1l2402
  9227  1402  3000               	movlw	0
  9228  1403  00F6               	movwf	??___ftge
  9229  1404  3000               	movlw	0
  9230  1405  00F7               	movwf	??___ftge+1
  9231  1406  3080               	movlw	128
  9232  1407  00F8               	movwf	??___ftge+2
  9233  1408  0973               	comf	___ftge@ff2,w
  9234  1409  00F9               	movwf	??___ftge+3
  9235  140A  0974               	comf	___ftge@ff2+1,w
  9236  140B  00FA               	movwf	??___ftge+4
  9237  140C  0975               	comf	___ftge@ff2+2,w
  9238  140D  00FB               	movwf	??___ftge+5
  9239  140E  0AF9               	incf	??___ftge+3,f
  9240  140F  1903               	skipnz
  9241  1410  0AFA               	incf	??___ftge+4,f
  9242  1411  1903               	skipnz
  9243  1412  0AFB               	incf	??___ftge+5,f
  9244  1413  0879               	movf	??___ftge+3,w
  9245  1414  07F6               	addwf	??___ftge,f
  9246  1415  087A               	movf	??___ftge+4,w
  9247  1416  1803               	skipnc
  9248  1417  0F7A               	incfsz	??___ftge+4,w
  9249  1418  2C1A               	goto	u260_21
  9250  1419  2C1B               	goto	u260_22
  9251  141A                     u260_21:	
  9252  141A  07F7               	addwf	??___ftge+1,f
  9253  141B                     u260_22:	
  9254  141B  087B               	movf	??___ftge+5,w
  9255  141C  1803               	skipnc
  9256  141D  0F7B               	incfsz	??___ftge+5,w
  9257  141E  2C20               	goto	u260_23
  9258  141F  2C21               	goto	u260_24
  9259  1420                     u260_23:	
  9260  1420  07F8               	addwf	??___ftge+2,f
  9261  1421                     u260_24:	
  9262  1421  0876               	movf	??___ftge,w
  9263  1422  00F3               	movwf	___ftge@ff2
  9264  1423  0877               	movf	??___ftge+1,w
  9265  1424  00F4               	movwf	___ftge@ff2+1
  9266  1425  0878               	movf	??___ftge+2,w
  9267  1426  00F5               	movwf	___ftge@ff2+2
  9268  1427                     i1l2402:	
  9269  1427  3080               	movlw	128
  9270  1428  06F2               	xorwf	___ftge@ff1+2,f
  9271  1429  3080               	movlw	128
  9272  142A  06F5               	xorwf	___ftge@ff2+2,f
  9273  142B  0875               	movf	___ftge@ff2+2,w
  9274  142C  0272               	subwf	___ftge@ff1+2,w
  9275  142D  1D03               	skipz
  9276  142E  0008               	return
  9277  142F  0874               	movf	___ftge@ff2+1,w
  9278  1430  0271               	subwf	___ftge@ff1+1,w
  9279  1431  1D03               	skipz
  9280  1432  0008               	return
  9281  1433  0873               	movf	___ftge@ff2,w
  9282  1434  0270               	subwf	___ftge@ff1,w
  9283  1435  0008               	return
  9284  1436                     __end_of___ftge:	
  9285                           
  9286                           	psect	text38
  9287  110A                     __ptext38:	
  9288 ;; *************** function ___lwtoft *****************
  9289 ;; Defined at:
  9290 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  c               2    8[COMMON] unsigned int 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  3    8[COMMON] float 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0, pclath, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9304 ;;      Params:         3       0       0       0       0
  9305 ;;      Locals:         0       0       0       0       0
  9306 ;;      Temps:          1       0       0       0       0
  9307 ;;      Totals:         4       0       0       0       0
  9308 ;;Total ram usage:        4 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    1
  9311 ;; This function calls:
  9312 ;;		___ftpack
  9313 ;; This function is called by:
  9314 ;;		_Fuzzy
  9315 ;;		_ISR
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function ___lwtoft
  9321  110A                     ___lwtoft:	
  9322                           
  9323                           ;incstack = 0
  9324                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9325  110A  0878               	movf	___lwtoft@c,w
  9326  110B  00F0               	movwf	___ftpack@arg
  9327  110C  0879               	movf	___lwtoft@c+1,w
  9328  110D  00F1               	movwf	___ftpack@arg+1
  9329  110E  01F2               	clrf	___ftpack@arg+2
  9330  110F  308E               	movlw	142
  9331  1110  00FB               	movwf	??___lwtoft
  9332  1111  087B               	movf	??___lwtoft,w
  9333  1112  00F3               	movwf	___ftpack@exp
  9334  1113  01F4               	clrf	___ftpack@sign
  9335  1114  160A  118A  2436   	fcall	___ftpack
  9336  1117  0870               	movf	?___ftpack,w
  9337  1118  00F8               	movwf	?___lwtoft
  9338  1119  0871               	movf	?___ftpack+1,w
  9339  111A  00F9               	movwf	?___lwtoft+1
  9340  111B  0872               	movf	?___ftpack+2,w
  9341  111C  00FA               	movwf	?___lwtoft+2
  9342  111D  0008               	return
  9343  111E                     __end_of___lwtoft:	
  9344                           
  9345                           	psect	text39
  9346  1509                     __ptext39:	
  9347 ;; *************** function ___fttol *****************
  9348 ;; Defined at:
  9349 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  f1              3    0[COMMON] float 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  lval            4    9[COMMON] unsigned long 
  9354 ;;  exp1            1   13[COMMON] unsigned char 
  9355 ;;  sign1           1    8[COMMON] unsigned char 
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  4    0[COMMON] long 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9365 ;;      Params:         4       0       0       0       0
  9366 ;;      Locals:         6       0       0       0       0
  9367 ;;      Temps:          4       0       0       0       0
  9368 ;;      Totals:        14       0       0       0       0
  9369 ;;Total ram usage:       14 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_Fuzzy
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           
  9379                           ;psect for function ___fttol
  9380  1509                     ___fttol:	
  9381                           
  9382                           ;incstack = 0
  9383                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9384  1509  0870               	movf	___fttol@f1,w
  9385  150A  00F4               	movwf	??___fttol
  9386  150B  0871               	movf	___fttol@f1+1,w
  9387  150C  00F5               	movwf	??___fttol+1
  9388  150D  0872               	movf	___fttol@f1+2,w
  9389  150E  00F6               	movwf	??___fttol+2
  9390  150F  1003               	clrc
  9391  1510  0D75               	rlf	??___fttol+1,w
  9392  1511  0D76               	rlf	??___fttol+2,w
  9393  1512  00F7               	movwf	??___fttol+3
  9394  1513  0877               	movf	??___fttol+3,w
  9395  1514  00FD               	movwf	___fttol@exp1
  9396  1515  08FD               	movf	___fttol@exp1,f
  9397  1516  1D03               	skipz
  9398  1517  2D21               	goto	i1l2630
  9399  1518  3000               	movlw	0
  9400  1519  00F3               	movwf	?___fttol+3
  9401  151A  3000               	movlw	0
  9402  151B  00F2               	movwf	?___fttol+2
  9403  151C  3000               	movlw	0
  9404  151D  00F1               	movwf	?___fttol+1
  9405  151E  3000               	movlw	0
  9406  151F  00F0               	movwf	?___fttol
  9407  1520  0008               	return
  9408  1521                     i1l2630:	
  9409  1521  0870               	movf	___fttol@f1,w
  9410  1522  00F4               	movwf	??___fttol
  9411  1523  0871               	movf	___fttol@f1+1,w
  9412  1524  00F5               	movwf	??___fttol+1
  9413  1525  0872               	movf	___fttol@f1+2,w
  9414  1526  00F6               	movwf	??___fttol+2
  9415  1527  3017               	movlw	23
  9416  1528                     u311_25:	
  9417  1528  1003               	clrc
  9418  1529  0CF6               	rrf	??___fttol+2,f
  9419  152A  0CF5               	rrf	??___fttol+1,f
  9420  152B  0CF4               	rrf	??___fttol,f
  9421  152C  3EFF               	addlw	-1
  9422  152D  1D03               	skipz
  9423  152E  2D28               	goto	u311_25
  9424  152F  0874               	movf	??___fttol,w
  9425  1530  00F7               	movwf	??___fttol+3
  9426  1531  0877               	movf	??___fttol+3,w
  9427  1532  00F8               	movwf	___fttol@sign1
  9428  1533  17F1               	bsf	___fttol@f1+1,7
  9429  1534  30FF               	movlw	255
  9430  1535  05F0               	andwf	___fttol@f1,f
  9431  1536  30FF               	movlw	255
  9432  1537  05F1               	andwf	___fttol@f1+1,f
  9433  1538  3000               	movlw	0
  9434  1539  05F2               	andwf	___fttol@f1+2,f
  9435  153A  0870               	movf	___fttol@f1,w
  9436  153B  00F9               	movwf	___fttol@lval
  9437  153C  0871               	movf	___fttol@f1+1,w
  9438  153D  00FA               	movwf	___fttol@lval+1
  9439  153E  0872               	movf	___fttol@f1+2,w
  9440  153F  00FB               	movwf	___fttol@lval+2
  9441  1540  01FC               	clrf	___fttol@lval+3
  9442  1541  308E               	movlw	142
  9443  1542  02FD               	subwf	___fttol@exp1,f
  9444  1543  1FFD               	btfss	___fttol@exp1,7
  9445  1544  2D63               	goto	i1l2650
  9446  1545  087D               	movf	___fttol@exp1,w
  9447  1546  3A80               	xorlw	128
  9448  1547  3E8F               	addlw	143
  9449  1548  1803               	skipnc
  9450  1549  2D53               	goto	i1l2648
  9451  154A  3000               	movlw	0
  9452  154B  00F3               	movwf	?___fttol+3
  9453  154C  3000               	movlw	0
  9454  154D  00F2               	movwf	?___fttol+2
  9455  154E  3000               	movlw	0
  9456  154F  00F1               	movwf	?___fttol+1
  9457  1550  3000               	movlw	0
  9458  1551  00F0               	movwf	?___fttol
  9459  1552  0008               	return
  9460  1553                     i1l2648:	
  9461  1553  3001               	movlw	1
  9462  1554                     u314_25:	
  9463  1554  1003               	clrc
  9464  1555  0CFC               	rrf	___fttol@lval+3,f
  9465  1556  0CFB               	rrf	___fttol@lval+2,f
  9466  1557  0CFA               	rrf	___fttol@lval+1,f
  9467  1558  0CF9               	rrf	___fttol@lval,f
  9468  1559  3EFF               	addlw	-1
  9469  155A  1D03               	skipz
  9470  155B  2D54               	goto	u314_25
  9471  155C  3001               	movlw	1
  9472  155D  00F4               	movwf	??___fttol
  9473  155E  0874               	movf	??___fttol,w
  9474  155F  07FD               	addwf	___fttol@exp1,f
  9475  1560  1903               	btfsc	3,2
  9476  1561  2D7E               	goto	i1l2660
  9477  1562  2D53               	goto	i1l2648
  9478  1563                     i1l2650:	
  9479  1563  3018               	movlw	24
  9480  1564  027D               	subwf	___fttol@exp1,w
  9481  1565  1C03               	skipc
  9482  1566  2D7B               	goto	i1l2658
  9483  1567  3000               	movlw	0
  9484  1568  00F3               	movwf	?___fttol+3
  9485  1569  3000               	movlw	0
  9486  156A  00F2               	movwf	?___fttol+2
  9487  156B  3000               	movlw	0
  9488  156C  00F1               	movwf	?___fttol+1
  9489  156D  3000               	movlw	0
  9490  156E  00F0               	movwf	?___fttol
  9491  156F  0008               	return
  9492  1570                     i1l2656:	
  9493  1570  3001               	movlw	1
  9494  1571  00F4               	movwf	??___fttol
  9495  1572                     u317_25:	
  9496  1572  1003               	clrc
  9497  1573  0DF9               	rlf	___fttol@lval,f
  9498  1574  0DFA               	rlf	___fttol@lval+1,f
  9499  1575  0DFB               	rlf	___fttol@lval+2,f
  9500  1576  0DFC               	rlf	___fttol@lval+3,f
  9501  1577  0BF4               	decfsz	??___fttol,f
  9502  1578  2D72               	goto	u317_25
  9503  1579  3001               	movlw	1
  9504  157A  02FD               	subwf	___fttol@exp1,f
  9505  157B                     i1l2658:	
  9506  157B  08FD               	movf	___fttol@exp1,f
  9507  157C  1D03               	skipz
  9508  157D  2D70               	goto	i1l2656
  9509  157E                     i1l2660:	
  9510  157E  0878               	movf	___fttol@sign1,w
  9511  157F  1903               	btfsc	3,2
  9512  1580  2D8C               	goto	i1l2664
  9513  1581  09F9               	comf	___fttol@lval,f
  9514  1582  09FA               	comf	___fttol@lval+1,f
  9515  1583  09FB               	comf	___fttol@lval+2,f
  9516  1584  09FC               	comf	___fttol@lval+3,f
  9517  1585  0AF9               	incf	___fttol@lval,f
  9518  1586  1903               	skipnz
  9519  1587  0AFA               	incf	___fttol@lval+1,f
  9520  1588  1903               	skipnz
  9521  1589  0AFB               	incf	___fttol@lval+2,f
  9522  158A  1903               	skipnz
  9523  158B  0AFC               	incf	___fttol@lval+3,f
  9524  158C                     i1l2664:	
  9525  158C  087C               	movf	___fttol@lval+3,w
  9526  158D  00F3               	movwf	?___fttol+3
  9527  158E  087B               	movf	___fttol@lval+2,w
  9528  158F  00F2               	movwf	?___fttol+2
  9529  1590  087A               	movf	___fttol@lval+1,w
  9530  1591  00F1               	movwf	?___fttol+1
  9531  1592  0879               	movf	___fttol@lval,w
  9532  1593  00F0               	movwf	?___fttol
  9533  1594  0008               	return
  9534  1595                     __end_of___fttol:	
  9535                           
  9536                           	psect	text40
  9537  0702                     __ptext40:	
  9538 ;; *************** function ___ftmul *****************
  9539 ;; Defined at:
  9540 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  f1              3    8[COMMON] float 
  9543 ;;  f2              3   11[COMMON] float 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9546 ;;  sign            1    9[BANK0 ] unsigned char 
  9547 ;;  cntr            1    8[BANK0 ] unsigned char 
  9548 ;;  exp             1    4[BANK0 ] unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  3    8[COMMON] float 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9558 ;;      Params:         6       0       0       0       0
  9559 ;;      Locals:         0       6       0       0       0
  9560 ;;      Temps:          0       4       0       0       0
  9561 ;;      Totals:         6      10       0       0       0
  9562 ;;Total ram usage:       16 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    1
  9565 ;; This function calls:
  9566 ;;		___ftpack
  9567 ;; This function is called by:
  9568 ;;		_Fuzzy
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           
  9573                           ;psect for function ___ftmul
  9574  0702                     ___ftmul:	
  9575                           
  9576                           ;incstack = 0
  9577                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9578  0702  0878               	movf	___ftmul@f1,w
  9579  0703  1283               	bcf	3,5	;RP0=0, select bank0
  9580  0704  1303               	bcf	3,6	;RP1=0, select bank0
  9581  0705  00A0               	movwf	??___ftmul
  9582  0706  0879               	movf	___ftmul@f1+1,w
  9583  0707  00A1               	movwf	??___ftmul+1
  9584  0708  087A               	movf	___ftmul@f1+2,w
  9585  0709  00A2               	movwf	??___ftmul+2
  9586  070A  1003               	clrc
  9587  070B  0D21               	rlf	??___ftmul+1,w
  9588  070C  0D22               	rlf	??___ftmul+2,w
  9589  070D  00A3               	movwf	??___ftmul+3
  9590  070E  0823               	movf	??___ftmul+3,w
  9591  070F  00A4               	movwf	___ftmul@exp
  9592  0710  08A4               	movf	___ftmul@exp,f
  9593  0711  1D03               	skipz
  9594  0712  2F1A               	goto	i1l2580
  9595  0713  3000               	movlw	0
  9596  0714  00F8               	movwf	?___ftmul
  9597  0715  3000               	movlw	0
  9598  0716  00F9               	movwf	?___ftmul+1
  9599  0717  3000               	movlw	0
  9600  0718  00FA               	movwf	?___ftmul+2
  9601  0719  0008               	return
  9602  071A                     i1l2580:	
  9603  071A  087B               	movf	___ftmul@f2,w
  9604  071B  00A0               	movwf	??___ftmul
  9605  071C  087C               	movf	___ftmul@f2+1,w
  9606  071D  00A1               	movwf	??___ftmul+1
  9607  071E  087D               	movf	___ftmul@f2+2,w
  9608  071F  00A2               	movwf	??___ftmul+2
  9609  0720  1003               	clrc
  9610  0721  0D21               	rlf	??___ftmul+1,w
  9611  0722  0D22               	rlf	??___ftmul+2,w
  9612  0723  00A3               	movwf	??___ftmul+3
  9613  0724  0823               	movf	??___ftmul+3,w
  9614  0725  00A9               	movwf	___ftmul@sign
  9615  0726  08A9               	movf	___ftmul@sign,f
  9616  0727  1D03               	skipz
  9617  0728  2F30               	goto	i1l2586
  9618  0729  3000               	movlw	0
  9619  072A  00F8               	movwf	?___ftmul
  9620  072B  3000               	movlw	0
  9621  072C  00F9               	movwf	?___ftmul+1
  9622  072D  3000               	movlw	0
  9623  072E  00FA               	movwf	?___ftmul+2
  9624  072F  0008               	return
  9625  0730                     i1l2586:	
  9626  0730  0829               	movf	___ftmul@sign,w
  9627  0731  3E7B               	addlw	123
  9628  0732  00A0               	movwf	??___ftmul
  9629  0733  0820               	movf	??___ftmul,w
  9630  0734  07A4               	addwf	___ftmul@exp,f
  9631  0735  0878               	movf	___ftmul@f1,w
  9632  0736  00A0               	movwf	??___ftmul
  9633  0737  0879               	movf	___ftmul@f1+1,w
  9634  0738  00A1               	movwf	??___ftmul+1
  9635  0739  087A               	movf	___ftmul@f1+2,w
  9636  073A  00A2               	movwf	??___ftmul+2
  9637  073B  3010               	movlw	16
  9638  073C                     u298_25:	
  9639  073C  1003               	clrc
  9640  073D  0CA2               	rrf	??___ftmul+2,f
  9641  073E  0CA1               	rrf	??___ftmul+1,f
  9642  073F  0CA0               	rrf	??___ftmul,f
  9643  0740  3EFF               	addlw	-1
  9644  0741  1D03               	skipz
  9645  0742  2F3C               	goto	u298_25
  9646  0743  0820               	movf	??___ftmul,w
  9647  0744  00A3               	movwf	??___ftmul+3
  9648  0745  0823               	movf	??___ftmul+3,w
  9649  0746  00A9               	movwf	___ftmul@sign
  9650  0747  087B               	movf	___ftmul@f2,w
  9651  0748  00A0               	movwf	??___ftmul
  9652  0749  087C               	movf	___ftmul@f2+1,w
  9653  074A  00A1               	movwf	??___ftmul+1
  9654  074B  087D               	movf	___ftmul@f2+2,w
  9655  074C  00A2               	movwf	??___ftmul+2
  9656  074D  3010               	movlw	16
  9657  074E                     u299_25:	
  9658  074E  1003               	clrc
  9659  074F  0CA2               	rrf	??___ftmul+2,f
  9660  0750  0CA1               	rrf	??___ftmul+1,f
  9661  0751  0CA0               	rrf	??___ftmul,f
  9662  0752  3EFF               	addlw	-1
  9663  0753  1D03               	skipz
  9664  0754  2F4E               	goto	u299_25
  9665  0755  0820               	movf	??___ftmul,w
  9666  0756  00A3               	movwf	??___ftmul+3
  9667  0757  0823               	movf	??___ftmul+3,w
  9668  0758  06A9               	xorwf	___ftmul@sign,f
  9669  0759  3080               	movlw	128
  9670  075A  00A0               	movwf	??___ftmul
  9671  075B  0820               	movf	??___ftmul,w
  9672  075C  05A9               	andwf	___ftmul@sign,f
  9673  075D  17F9               	bsf	___ftmul@f1+1,7
  9674  075E  17FC               	bsf	___ftmul@f2+1,7
  9675  075F  30FF               	movlw	255
  9676  0760  05FB               	andwf	___ftmul@f2,f
  9677  0761  30FF               	movlw	255
  9678  0762  05FC               	andwf	___ftmul@f2+1,f
  9679  0763  3000               	movlw	0
  9680  0764  05FD               	andwf	___ftmul@f2+2,f
  9681  0765  3000               	movlw	0
  9682  0766  00A5               	movwf	___ftmul@f3_as_product
  9683  0767  3000               	movlw	0
  9684  0768  00A6               	movwf	___ftmul@f3_as_product+1
  9685  0769  3000               	movlw	0
  9686  076A  00A7               	movwf	___ftmul@f3_as_product+2
  9687  076B  3007               	movlw	7
  9688  076C  00A0               	movwf	??___ftmul
  9689  076D  0820               	movf	??___ftmul,w
  9690  076E  00A8               	movwf	___ftmul@cntr
  9691  076F                     i1l2598:	
  9692  076F  1C78               	btfss	___ftmul@f1,0
  9693  0770  2F7F               	goto	i1l2602
  9694  0771  087B               	movf	___ftmul@f2,w
  9695  0772  07A5               	addwf	___ftmul@f3_as_product,f
  9696  0773  087C               	movf	___ftmul@f2+1,w
  9697  0774  1103               	clrz
  9698  0775  1803               	skipnc
  9699  0776  0A7C               	incf	___ftmul@f2+1,w
  9700  0777  1D03               	btfss	3,2
  9701  0778  07A6               	addwf	___ftmul@f3_as_product+1,f
  9702  0779  087D               	movf	___ftmul@f2+2,w
  9703  077A  1103               	clrz
  9704  077B  1803               	skipnc
  9705  077C  0A7D               	incf	___ftmul@f2+2,w
  9706  077D  1D03               	btfss	3,2
  9707  077E  07A7               	addwf	___ftmul@f3_as_product+2,f
  9708  077F                     i1l2602:	
  9709  077F  3001               	movlw	1
  9710  0780                     u302_25:	
  9711  0780  1003               	clrc
  9712  0781  0CFA               	rrf	___ftmul@f1+2,f
  9713  0782  0CF9               	rrf	___ftmul@f1+1,f
  9714  0783  0CF8               	rrf	___ftmul@f1,f
  9715  0784  3EFF               	addlw	-1
  9716  0785  1D03               	skipz
  9717  0786  2F80               	goto	u302_25
  9718  0787  3001               	movlw	1
  9719  0788                     u303_25:	
  9720  0788  1003               	clrc
  9721  0789  0DFB               	rlf	___ftmul@f2,f
  9722  078A  0DFC               	rlf	___ftmul@f2+1,f
  9723  078B  0DFD               	rlf	___ftmul@f2+2,f
  9724  078C  3EFF               	addlw	-1
  9725  078D  1D03               	skipz
  9726  078E  2F88               	goto	u303_25
  9727  078F  3001               	movlw	1
  9728  0790  02A8               	subwf	___ftmul@cntr,f
  9729  0791  1D03               	btfss	3,2
  9730  0792  2F6F               	goto	i1l2598
  9731  0793  3009               	movlw	9
  9732  0794  00A0               	movwf	??___ftmul
  9733  0795  0820               	movf	??___ftmul,w
  9734  0796  00A8               	movwf	___ftmul@cntr
  9735  0797                     i1l2610:	
  9736  0797  1C78               	btfss	___ftmul@f1,0
  9737  0798  2FA7               	goto	i1l2614
  9738  0799  087B               	movf	___ftmul@f2,w
  9739  079A  07A5               	addwf	___ftmul@f3_as_product,f
  9740  079B  087C               	movf	___ftmul@f2+1,w
  9741  079C  1103               	clrz
  9742  079D  1803               	skipnc
  9743  079E  0A7C               	incf	___ftmul@f2+1,w
  9744  079F  1D03               	btfss	3,2
  9745  07A0  07A6               	addwf	___ftmul@f3_as_product+1,f
  9746  07A1  087D               	movf	___ftmul@f2+2,w
  9747  07A2  1103               	clrz
  9748  07A3  1803               	skipnc
  9749  07A4  0A7D               	incf	___ftmul@f2+2,w
  9750  07A5  1D03               	btfss	3,2
  9751  07A6  07A7               	addwf	___ftmul@f3_as_product+2,f
  9752  07A7                     i1l2614:	
  9753  07A7  3001               	movlw	1
  9754  07A8                     u307_25:	
  9755  07A8  1003               	clrc
  9756  07A9  0CFA               	rrf	___ftmul@f1+2,f
  9757  07AA  0CF9               	rrf	___ftmul@f1+1,f
  9758  07AB  0CF8               	rrf	___ftmul@f1,f
  9759  07AC  3EFF               	addlw	-1
  9760  07AD  1D03               	skipz
  9761  07AE  2FA8               	goto	u307_25
  9762  07AF  3001               	movlw	1
  9763  07B0                     u308_25:	
  9764  07B0  1003               	clrc
  9765  07B1  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9766  07B2  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9767  07B3  0CA5               	rrf	___ftmul@f3_as_product,f
  9768  07B4  3EFF               	addlw	-1
  9769  07B5  1D03               	skipz
  9770  07B6  2FB0               	goto	u308_25
  9771  07B7  3001               	movlw	1
  9772  07B8  02A8               	subwf	___ftmul@cntr,f
  9773  07B9  1D03               	btfss	3,2
  9774  07BA  2F97               	goto	i1l2610
  9775  07BB  0825               	movf	___ftmul@f3_as_product,w
  9776  07BC  00F0               	movwf	___ftpack@arg
  9777  07BD  0826               	movf	___ftmul@f3_as_product+1,w
  9778  07BE  00F1               	movwf	___ftpack@arg+1
  9779  07BF  0827               	movf	___ftmul@f3_as_product+2,w
  9780  07C0  00F2               	movwf	___ftpack@arg+2
  9781  07C1  0824               	movf	___ftmul@exp,w
  9782  07C2  00A0               	movwf	??___ftmul
  9783  07C3  0820               	movf	??___ftmul,w
  9784  07C4  00F3               	movwf	___ftpack@exp
  9785  07C5  0829               	movf	___ftmul@sign,w
  9786  07C6  00A1               	movwf	??___ftmul+1
  9787  07C7  0821               	movf	??___ftmul+1,w
  9788  07C8  00F4               	movwf	___ftpack@sign
  9789  07C9  160A  118A  2436   	fcall	___ftpack
  9790  07CC  0870               	movf	?___ftpack,w
  9791  07CD  00F8               	movwf	?___ftmul
  9792  07CE  0871               	movf	?___ftpack+1,w
  9793  07CF  00F9               	movwf	?___ftmul+1
  9794  07D0  0872               	movf	?___ftpack+2,w
  9795  07D1  00FA               	movwf	?___ftmul+2
  9796  07D2  0008               	return
  9797  07D3                     __end_of___ftmul:	
  9798                           
  9799                           	psect	text41
  9800  1436                     __ptext41:	
  9801 ;; *************** function ___ftpack *****************
  9802 ;; Defined at:
  9803 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  arg             3    0[COMMON] unsigned um
  9806 ;;  exp             1    3[COMMON] unsigned char 
  9807 ;;  sign            1    4[COMMON] unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  3    0[COMMON] float 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9819 ;;      Params:         5       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0
  9821 ;;      Temps:          3       0       0       0       0
  9822 ;;      Totals:         8       0       0       0       0
  9823 ;;Total ram usage:        8 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		___ftadd
  9829 ;;		___ftdiv
  9830 ;;		___ftmul
  9831 ;;		___lwtoft
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           
  9836                           ;psect for function ___ftpack
  9837  1436                     ___ftpack:	
  9838                           
  9839                           ;incstack = 0
  9840                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9841  1436  0873               	movf	___ftpack@exp,w
  9842  1437  1903               	btfsc	3,2
  9843  1438  2C3E               	goto	i1l2254
  9844  1439  0872               	movf	___ftpack@arg+2,w
  9845  143A  0471               	iorwf	___ftpack@arg+1,w
  9846  143B  0470               	iorwf	___ftpack@arg,w
  9847  143C  1D03               	skipz
  9848  143D  2C51               	goto	i1l2260
  9849  143E                     i1l2254:	
  9850  143E  3000               	movlw	0
  9851  143F  00F0               	movwf	?___ftpack
  9852  1440  3000               	movlw	0
  9853  1441  00F1               	movwf	?___ftpack+1
  9854  1442  3000               	movlw	0
  9855  1443  00F2               	movwf	?___ftpack+2
  9856  1444  0008               	return
  9857  1445                     i1l2258:	
  9858  1445  3001               	movlw	1
  9859  1446  00F5               	movwf	??___ftpack
  9860  1447  0875               	movf	??___ftpack,w
  9861  1448  07F3               	addwf	___ftpack@exp,f
  9862  1449  3001               	movlw	1
  9863  144A                     u216_25:	
  9864  144A  1003               	clrc
  9865  144B  0CF2               	rrf	___ftpack@arg+2,f
  9866  144C  0CF1               	rrf	___ftpack@arg+1,f
  9867  144D  0CF0               	rrf	___ftpack@arg,f
  9868  144E  3EFF               	addlw	-1
  9869  144F  1D03               	skipz
  9870  1450  2C4A               	goto	u216_25
  9871  1451                     i1l2260:	
  9872  1451  30FE               	movlw	254
  9873  1452  0572               	andwf	___ftpack@arg+2,w
  9874  1453  1903               	btfsc	3,2
  9875  1454  2C6C               	goto	i1l759
  9876  1455  2C45               	goto	i1l2258
  9877  1456                     i1l2262:	
  9878  1456  3001               	movlw	1
  9879  1457  00F5               	movwf	??___ftpack
  9880  1458  0875               	movf	??___ftpack,w
  9881  1459  07F3               	addwf	___ftpack@exp,f
  9882  145A  3001               	movlw	1
  9883  145B  07F0               	addwf	___ftpack@arg,f
  9884  145C  3000               	movlw	0
  9885  145D  1803               	skipnc
  9886  145E  3001               	movlw	1
  9887  145F  07F1               	addwf	___ftpack@arg+1,f
  9888  1460  3000               	movlw	0
  9889  1461  1803               	skipnc
  9890  1462  3001               	movlw	1
  9891  1463  07F2               	addwf	___ftpack@arg+2,f
  9892  1464  3001               	movlw	1
  9893  1465                     u218_25:	
  9894  1465  1003               	clrc
  9895  1466  0CF2               	rrf	___ftpack@arg+2,f
  9896  1467  0CF1               	rrf	___ftpack@arg+1,f
  9897  1468  0CF0               	rrf	___ftpack@arg,f
  9898  1469  3EFF               	addlw	-1
  9899  146A  1D03               	skipz
  9900  146B  2C65               	goto	u218_25
  9901  146C                     i1l759:	
  9902  146C  30FF               	movlw	255
  9903  146D  0572               	andwf	___ftpack@arg+2,w
  9904  146E  1903               	btfsc	3,2
  9905  146F  2C7B               	goto	i1l2270
  9906  1470  2C56               	goto	i1l2262
  9907  1471                     i1l2268:	
  9908  1471  3001               	movlw	1
  9909  1472  02F3               	subwf	___ftpack@exp,f
  9910  1473  3001               	movlw	1
  9911  1474                     u220_25:	
  9912  1474  1003               	clrc
  9913  1475  0DF0               	rlf	___ftpack@arg,f
  9914  1476  0DF1               	rlf	___ftpack@arg+1,f
  9915  1477  0DF2               	rlf	___ftpack@arg+2,f
  9916  1478  3EFF               	addlw	-1
  9917  1479  1D03               	skipz
  9918  147A  2C74               	goto	u220_25
  9919  147B                     i1l2270:	
  9920  147B  1FF1               	btfss	___ftpack@arg+1,7
  9921  147C  2C71               	goto	i1l2268
  9922  147D  1873               	btfsc	___ftpack@exp,0
  9923  147E  2C85               	goto	i1l765
  9924  147F  30FF               	movlw	255
  9925  1480  05F0               	andwf	___ftpack@arg,f
  9926  1481  307F               	movlw	127
  9927  1482  05F1               	andwf	___ftpack@arg+1,f
  9928  1483  30FF               	movlw	255
  9929  1484  05F2               	andwf	___ftpack@arg+2,f
  9930  1485                     i1l765:	
  9931  1485  1003               	clrc
  9932  1486  0CF3               	rrf	___ftpack@exp,f
  9933  1487  0873               	movf	___ftpack@exp,w
  9934  1488  00F5               	movwf	??___ftpack
  9935  1489  01F6               	clrf	??___ftpack+1
  9936  148A  01F7               	clrf	??___ftpack+2
  9937  148B  3010               	movlw	16
  9938  148C                     u223_25:	
  9939  148C  1003               	clrc
  9940  148D  0DF5               	rlf	??___ftpack,f
  9941  148E  0DF6               	rlf	??___ftpack+1,f
  9942  148F  0DF7               	rlf	??___ftpack+2,f
  9943  1490  3EFF               	addlw	-1
  9944  1491  1D03               	skipz
  9945  1492  2C8C               	goto	u223_25
  9946  1493  0875               	movf	??___ftpack,w
  9947  1494  04F0               	iorwf	___ftpack@arg,f
  9948  1495  0876               	movf	??___ftpack+1,w
  9949  1496  04F1               	iorwf	___ftpack@arg+1,f
  9950  1497  0877               	movf	??___ftpack+2,w
  9951  1498  04F2               	iorwf	___ftpack@arg+2,f
  9952  1499  0874               	movf	___ftpack@sign,w
  9953  149A  1903               	btfsc	3,2
  9954  149B  0008               	return
  9955  149C  17F2               	bsf	___ftpack@arg+2,7
  9956  149D  0008               	return
  9957  149E                     __end_of___ftpack:	
  9958  007E                     btemp	set	126	;btemp
  9959  007E                     wtemp	set	126
  9960  007E                     wtemp0	set	126
  9961  0080                     wtemp1	set	128
  9962  0082                     wtemp2	set	130
  9963  0084                     wtemp3	set	132
  9964  0086                     wtemp4	set	134
  9965  0088                     wtemp5	set	136
  9966  007F                     wtemp6	set	127
  9967  007E                     ttemp	set	126
  9968  007E                     ttemp0	set	126
  9969  0081                     ttemp1	set	129
  9970  0084                     ttemp2	set	132
  9971  0087                     ttemp3	set	135
  9972  007F                     ttemp4	set	127
  9973  007E                     ltemp	set	126
  9974  007E                     ltemp0	set	126
  9975  0082                     ltemp1	set	130
  9976  0086                     ltemp2	set	134
  9977  0080                     ltemp3	set	128


Data Sizes:
    Strings     263
    Constant    10
    Data        8
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     30      71
    BANK3            96     11      51
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[6]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), STR_4(CODE[14]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->___fttol
    ___ftadd->___ftmul
    _max_val->___ftge
    ___lwtoft->___ftpack
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _main->_USART_Init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5324
                                             27 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2900
                                             18 BANK1      7     3      4
                                              0 BANK3     11    11      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     374
                                              4 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             12 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              4 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              5 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             19 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              4 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              4 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              4 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              6 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              4 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              6 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              4 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   55020
                                              0 BANK1      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               22    22      0   51590
                                             57 BANK0     22    22      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   13966
                                             39 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   14823
                                             39 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             23 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    5678
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4192
                                              0 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    3720
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2198
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2502
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___fttol
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
     _trapmf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     _trimf
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
     i1_PWM_DutyCycle2
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      B      33       9       53.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 03 13:40:11 2022

           ?i1_PWM_DutyCycle2 0070                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00CB       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 01C0                            fsr 0004           ___wmul@multiplicand 00CD  
          ??i1_PWM_DutyCycle2 0072              i1___wmul@product 007C                  ___ftadd@exp1 0036  
                ___ftadd@exp2 0035                 _contagens_tm0 00BD                  ___ftadd@sign 0034  
                         l202 09C8                           l227 10DE                           l653 15A7  
                         l479 0DA8                           l497 0EDD                           l598 1261  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0BC2  
                         _rpm 00C5                           fsr0 0004                           _pwm 00C3  
                         _sum 00AC    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00CF                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 0041                  ___ftdiv@sign 0046  
                        l3000 1197            LCD_WriteString@Str 00CD                          l3014 127A  
                        l3400 137E                          l3404 1389                          l3500 0F2B  
                        l3422 1300                          l3510 0F4D                          l2552 15C8  
                        l2544 15B8                          l3416 12E4                          l2570 161B  
                        l2562 1600                          l2554 15D8                          l3418 12F2  
                        l3426 130B                          l3530 0F89                          l3522 0F81  
                        l3442 0DB1                          l3372 1259                          l3516 0F6A  
                        l3508 0F49                          l3460 0E6F                          l3444 0DC6  
                        l3532 0D6A                          l2566 160D                          l3366 10F6  
                        l3470 0E90                          l3534 0FF9                          l3438 0DA4  
                        l3392 135A                          l3448 0DE2                          l3394 1368  
                        l3490 0F0E                          l3482 0ECF                          l3474 0E96  
                        l3458 0E4A                          l3492 0F12                          l2894 12AB  
                        STR_1 18EA                          STR_2 18F8                          STR_3 1905  
                        STR_4 18CE                          STR_5 18B2                          STR_6 18A4  
                        STR_7 18DC                          STR_8 18C0                          STR_9 1886  
                        u4215 135D                          u4305 12F8                          u4235 1369  
                        u4315 1301                          u4245 1375                          u4255 137F  
                        u4175 1262                          u3625 139B                          u4185 1269  
                        u4425 0EF6                          u2915 15DA                          u2925 15EF  
                        u4285 12E7                          u4607 14EC                          u3655 11BE  
                        u2935 1601                          u4527 09C1                          u4617 14FA  
                        u4385 0EC1                          u4537 0A65                          u4627 1506  
                        u4547 0814                          u3595 11DF                          u4637 11A3  
                        u4557 14A8                          u4647 07DF                          u4567 14B8  
                        u2895 15CC                          u4657 07ED                          u4577 14C6  
                        u4667 07F9                          u4587 14D2                          u4677 112F  
                        u4597 14DE                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0923                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          _temp 00AF  
                        btemp 007E              __end_of_ADC_Init 110A                          ltemp 007E  
                        start 0016                          ttemp 007E                          wtemp 007E  
               ?_LCD_WriteCmd 0070                 _LCD_WriteData 0803                  ___ftmul@cntr 0028  
                ___ftmul@sign 0029       __end_of_USART_WriteChar 10E8                         ??_ISR 00C7  
                ___fttol@exp1 007D                  ___fttol@lval 0079                   ?_TIMER0_Set 0070  
            __end_of_LCD_Init 1509               __end_of___aldiv 1624                         ?_main 0070  
                       _EEADR 010D               __end_of___ftadd 0923                         STR_10 1895  
                       STR_11 1844                         STR_12 1861                         STR_13 1875  
                       STR_14 191E                         STR_15 191E                         STR_16 1892  
                       STR_17 1912                 __CFG_WDTE$OFF 0000                         STR_18 1918  
                       STR_19 181C               __end_of___ftdiv 16DC               __end_of___ftneg 10B8  
             __end_of___ftmul 07D3                         _T1CON 0010               __end_of___fttol 1595  
             __end_of___lwdiv 1390                         i1l118 17F7                         i1l128 0BB9  
                       i1l227 10B9                         i1l180 0D4E                         i1l184 0C32  
             __end_of___lwmod 1312                         i1l187 0C5B                         i1l765 1485  
                       i1l598 1218                         i1l759 146C                         i1l788 08C2  
                       _RCREG 001A                         _TMR1H 000F                         _TMR1L 000E  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
               __CFG_PWRTE$ON 0000                         _Fuzzy 0061                         _derro 0193  
             __end_of_dpowers 181C               __end_of_max_val 1189               __end_of_isdigit 10F8  
               ___ftpack@sign 0074                         _trimf 16DC                __CFG_BOREN$OFF 0000  
         __size_of_LCD_Cursor 0020                         pclath 000A              __end_of_PWM_Init 1255  
            __end_ofi1___wmul 1231                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003           i1___wmul@multiplier 0078  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F               __end_of_sprintf 1000            __size_ofi1___lwdiv 003E  
              ??_LCD_WriteCmd 00CB                ?_LCD_WriteData 0070                   ?_USART_Init 00DA  
       i1TIMER0_Set@contagens 0070               __initialization 0019                  __end_of_main 0A6C  
                      ??_main 00E2                 ___fttol@sign1 0078                  ?_TIMER0_Init 0070  
           __end_of_LCD_Clear 07FC                    Fuzzy@a_232 005B                    Fuzzy@a_233 005D  
                  Fuzzy@a_234 005F                    Fuzzy@a_235 0061                        ?_Fuzzy 0070  
                  Fuzzy@reduz 0069                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 149E                        ?_trimf 0047  
                      i1l2310 0873                        i1l2320 0899                        i1l2402 1427  
                      i1l2330 08BE                        i1l2322 089D                        i1l3202 0BFE  
                      i1l2260 1451                        i1l2316 0888                        i1l2270 147B  
                      i1l2262 1456                        i1l2254 143E                        i1l2334 08D4  
                      i1l2318 0894                        i1l3142 1210                        i1l3230 0C5D  
                      i1l2328 08B2                        i1l3208 0C15                        i1l2258 1445  
                      i1l2610 0797                        i1l2602 077F                        i1l2338 08E6  
                      i1l3170 133E                        i1l3162 131A                        i1l3242 0C8B  
                      i1l3218 0C33                        i1l2268 1471                        i1l2348 0909  
                      i1l2292 084A                        i1l2364 1652                        i1l2444 17DA  
                      i1l3164 1328                        i1l3260 0CD0                        i1l3236 0C74  
                      i1l2614 07A7                        i1l2630 1521                        i1l2358 163C  
                      i1l2462 0AE5                        i1l2438 1755                        i1l3174 1349  
                      i1l3254 0CB9                        i1l2288 0843                        i1l3248 0CA2  
                      i1l2650 1563                        i1l2298 0859                        i1l2386 16B6  
                      i1l2378 1697                        i1l2474 0B9C                        i1l3290 0D49  
                      i1l3266 0CED                        i1l2580 071A                        i1l2660 157E  
                      i1l2468 0B17                        i1l2812 0494                        i1l3292 0D4A  
                      i1l3196 0BE7                        i1l2398 1400                        i1l2822 055F  
                      i1l2726 11EB                        i1l3278 0D0A                        i1l2664 158C  
                      i1l2656 1570                        i1l2648 1553                        i1l2832 058B  
                      i1l2816 04F8                        i1l2744 00FE                        i1l2586 0730  
                      i1l2658 157B                        i1l2850 05F9                        i1l2842 05D6  
                      i1l2762 01B9                        i1l2828 056E                        i1l2772 0284  
                      i1l2748 011B                        i1l2598 076F                        i1l2838 05BD  
                      i1l2766 021D                        i1l2856 06B0                        i1l2792 038F  
                      i1l2882 1168                        i1l2874 1159                        i1l2788 0331  
                      u220_25 1474                        i1l2798 03F6                        u302_25 0780  
                      u223_25 148C                        u303_25 0788                        u311_25 1528  
                      u216_25 144A                        u240_25 089E                        u218_25 1465  
                      u314_25 1554                        u234_25 0874                        u307_25 07A8  
                      u243_25 08B3                        u251_25 1664                        u260_21 141A  
                      u260_22 141B                        u260_23 1420                        u260_24 1421  
                      u308_25 07B0                        u252_25 1676                        u340_25 0282  
                      u317_25 1572                        u237_25 0889                        u253_25 1698  
                      u254_25 16A9                        u334_25 1146                        u350_25 056C  
                      u255_25 16B7                        u343_25 032F                        u345_25 03F4  
                      u258_21 13F3              __end_of___lwtoft 111E                        u258_22 13F4  
                      u258_23 13F9                        u258_24 13FA                        u354_25 05D4  
                      u338_25 01B7                        u355_25 05F7                        u347_25 0492  
                      u356_25 06AE                        u349_25 055D           __size_of_TIMER0_Set 0008  
                      u390_25 131D                        u392_25 1329                        u393_25 1335  
                      u298_25 073C                        u394_25 133F                        u386_25 1219  
                      u299_25 074E                        u387_25 1220                        _SSPADD 0093  
                      _SSPBUF 0013                        Fuzzy@a 0059              LCD_WriteCmd@Byte 00CC  
         i1_USART_WriteString 11EB                        ___ftge 13D9                     ??___aldiv 00D3  
                      ___wmul 1255                     ??___ftadd 0030                _PWM_DutyCycle1 11A9  
              _PWM_DutyCycle2 11CA              ?_USART_WriteChar 0070                     ??___ftdiv 003D  
                   ??___ftneg 0073                        _deltaV 00BF                     ??___ftmul 0020  
                   ??___fttol 0074                     ??___lwdiv 00CF                     ??___lwmod 00D7  
                      _fitemp 00A0         USART_ReceiveChar@byte 0074                        _trapmf 0A6C  
                      _pulsos 00C1                        _status 0198         ___ftmul@f3_as_product 0025  
                   ??_max_val 007C             __end_ofi1___lwdiv 1350                     ??_isdigit 00CB  
                   ?_ADC_Init 0070                        saved_w 007E          ?i1_USART_WriteString 0071  
         __size_of_USART_Init 0049                        trimf@a 004A                        trimf@b 004D  
                      trimf@c 0050                        trimf@x 0047                     ??_sprintf 00DD  
               ?i1_TIMER0_Set 0070       __end_of__initialization 005D                     ?_LCD_Init 0070  
                  ___ftadd@f1 002A                    ___ftadd@f2 002D               ??_LCD_WriteData 00CB  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 0037                    ___ftdiv@f3 0042                    ___ftneg@f1 0070  
      __end_of_PWM_DutyCycle1 11CA        __end_of_PWM_DutyCycle2 11EB                    ___ftmul@f1 0078  
                  ___ftmul@f2 007B                    ___fttol@f1 0070                __pcstackCOMMON 0070  
               __end_of_Fuzzy 0702                  __pidataBANK1 07FC                  __pidataBANK3 10AA  
               LCD_Cursor@Col 00CB                 LCD_Cursor@Row 00CD                  ??_LCD_Cursor 00CC  
             _LCD_WriteString 127A                 __end_of_trimf 1800                    ___lwtoft@c 0078  
                   ?_PWM_Init 0070                     ?i1___wmul 0078                _OPTION_REGbits 0081  
                  ??_ADC_Init 00CB          __end_of_LCD_WriteCmd 1135         ??i1_USART_WriteString 0073  
                     ??_Fuzzy 007E     __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070  
                sprintf@width 01B9                       ??_trimf 007E                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 11A9                    ??_LCD_Init 00CD  
       i1USART_WriteChar@byte 0070               ?_PWM_DutyCycle1 00CB               ?_PWM_DutyCycle2 00CB  
                  __pmaintext 0923                   Fuzzy@mantem 0066                       ?___ftge 0070  
                     ?___wmul 00CB                    __pintentry 0004                  ??_TIMER0_Set 00CB  
                     _CCP1CON 0017                       _CCP2CON 001D                     ?___ftpack 0070  
                     ?_trapmf 0047                    ??_PWM_Init 00CB                    ??i1___wmul 007C  
                   ?___lwtoft 0078          __size_of_TIMER0_Init 000B                       _SSPCON2 0091  
                  __stringtab 1800            __end_of_TIMER0_Set 10C8       __end_of_LCD_WriteString 12AB  
                   _ADCResult 00BB                  ??_USART_Init 00DE             LCD_WriteData@Byte 00CC  
                     ___aldiv 1595               __size_of___ftge 005D                       ___ftadd 081A  
                     ___ftdiv 1624                       ___ftneg 10B0               __size_of___wmul 0025  
                     ___ftmul 0702                       ___fttol 1509                       ___lwdiv 1350  
                     ___lwmod 12DC                    ??___ftpack 0075                       __ptext1 0D5F  
                     __ptext2 10E8                       __ptext3 1255                       __ptext4 12DC  
                     __ptext5 1350                       __ptext6 12AB                       __ptext7 10DB  
                     __ptext8 1390                       __ptext9 1595                    _pas_cooler 00E5  
                  ??___lwtoft 007B               __size_of_trapmf 0156                  __size_of_ISR 019D  
                   _T1CONbits 0010                       _dpowers 1812             i1___lwdiv@divisor 0070  
                   _T2CONbits 0012                       _max_val 116B                       _isdigit 10E8  
           i1___lwdiv@counter 0077              ___aldiv@dividend 00CF                     _LCD_Clear 07D3  
          __end_of_USART_Init 13D9                       _sprintf 0D5F                       clrloop0 10C9  
        end_of_initialization 005D                     _RCSTAbits 0018              ___aldiv@quotient 00D6  
                     trapmf@a 004A                       trapmf@b 004D                       trapmf@c 0050  
                     trapmf@d 0053                       trapmf@x 0047                       trimf@ua 0053  
                __pstringtext 1800          __end_ofi1_TIMER0_Set 10AA         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1135             __size_of_ADC_Init 0012  
                   i1___lwdiv 1312                  _contador_rb6 0196           PWM_DutyCycle1@valor 00CB  
                  _total_area 00B2           PWM_DutyCycle2@valor 00CB                   _CCP1CONbits 0017  
                 ___ftdiv@exp 0045                   _CCP2CONbits 001D                     _TXSTAbits 0098  
            ?_LCD_WriteString 00CD             __size_of_LCD_Init 006B                  _LCD_WriteCmd 111E  
                 ___ftmul@exp 0024                __end_of___ftge 1436                __end_of___wmul 127A  
           i1_USART_WriteChar 10B8            ?i1_USART_WriteChar 0070                __end_of_trapmf 0BC2  
    __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024           start_initialization 0019  
           __size_ofi1___wmul 0023                   __end_of_ISR 0D5F           ??i1_USART_WriteChar 0070  
                  ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00CD              ??_PWM_DutyCycle2 00CD  
       __end_of_LCD_WriteData 081A             _USART_ReceiveChar 1150                      ??___ftge 0076  
          ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 10C0                      ??___wmul 00CF  
                 __pdataBANK1 00E5                   __pdataBANK3 01BD   __end_ofi1_USART_WriteString 120E  
                    ??_trapmf 007E           ??_USART_ReceiveChar 0073             __size_of___ftpack 0068  
                   ___latbits 0002             __size_of___lwtoft 0014                 __pcstackBANK0 0020  
               __pcstackBANK1 00C7                 __pcstackBANK3 01B2                   ??_LCD_Clear 00CD  
         __end_of__stringdata 1923                  _isdigit$1449 00CB                   sprintf@_val 01B4  
                 sprintf@flag 01B8                   sprintf@prec 01B3     __end_of_USART_ReceiveChar 116B  
       __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00CD           TIMER0_Set@contagens 00CB  
                Fuzzy@aumenta 006C                      ?___aldiv 00CB                      ?___ftadd 002A  
                    ?___ftdiv 0037                      ?___ftneg 0070                      ?___ftmul 0078  
                    ?___fttol 0070                      ?___lwdiv 00CB                      ?___lwmod 00D3  
                   _ativa_fan 0190                 ??_TIMER0_Init 00CB            USART_Init@BaudRate 00DA  
                    ?_max_val 0020                      ?_isdigit 0070                      _ADC_Init 10F8  
                   _fop_rule1 00A3                     _fop_rule2 00A6                     _fop_rule3 00A9  
              __size_of_Fuzzy 06A1              ___lwdiv@quotient 00D1                   ??i1___lwdiv 0074  
                    ?_sprintf 00D9                __size_of_trimf 0124             ??_USART_WriteChar 00CB  
                i1_TIMER0_Set 10A4               ___aldiv@divisor 00CB             interrupt_function 0004  
             ___aldiv@counter 00D4                      _LCD_Init 149E                ___wmul@product 00CF  
                   clear_ram0 10C8                      _PIE1bits 008C                      _PIE2bits 008D  
                    _PIR1bits 000C                      _PIR2bits 000D                     _temp_lida 019A  
    __end_ofi1_PWM_DutyCycle2 1150                     _tempo_rb6 019C    __size_ofi1_USART_WriteChar 0008  
                 _display_rpm 01A8                   _display_pwm 019E                    _ADCON0bits 001F  
                 __stringbase 1812                    _ADCON1bits 009F                   __stringdata 181C  
                    _PWM_Init 1231             ___wmul@multiplier 00CB                      i1___wmul 120E  
         __end_of_TIMER0_Init 10DB    __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C  
                    Fuzzy@tip 0063              __size_of___aldiv 008F              __size_of___ftadd 0109  
            __size_of___ftdiv 00B8              __size_of___ftneg 0008              __size_of___ftmul 00D1  
            __size_of___fttol 008C              __size_of___lwdiv 0040              __size_of___lwmod 0036  
                    ___ftpack 1436            __end_of__stringtab 1812                      ___lwtoft 110A  
            __size_of_max_val 001E              __size_of_isdigit 0010               ___lwdiv@divisor 00CB  
             ___lwdiv@counter 00D0             _USART_WriteString 12AB                      __ptext10 10C0  
                    __ptext11 10D0                      __ptext20 111E                      __ptext12 1231  
                    __ptext21 10F8                      __ptext13 11CA                      __ptext30 1135  
                    __ptext22 0BC2                      __ptext14 11A9                      __ptext31 16DC  
                    __ptext23 120E                      __ptext15 127A                      __ptext40 0702  
                    __ptext32 0A6C                      __ptext24 1312                      __ptext16 0803  
                    __ptext41 1436                      __ptext33 10B0                      __ptext25 10A4  
                    __ptext17 149E                      __ptext34 1624                      __ptext26 1150  
                    __ptext18 1189                      __ptext35 081A                      __ptext27 11EB  
                    __ptext19 07D3                      __ptext36 116B                      __ptext28 10B8  
                    __ptext37 13D9                      __ptext29 0061                      __ptext38 110A  
                    __ptext39 1509            ?_USART_WriteString 00CC              __size_of_sprintf 02A1  
          i1___lwdiv@dividend 0072                 __size_of_main 0149           USART_WriteChar@byte 00CB  
         ??_USART_WriteString 00CE        i1USART_WriteString@str 0071                      _setpoint 01BD  
                  _LCD_Cursor 1189      __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075  
                 _TIMER0_Init 10D0                    _INTCONbits 000B     __end_of_USART_WriteString 12DC  
                    max_val@a 0020                      max_val@b 0023                      isdigit@c 00CC  
                    intlevel1 0000                     sprintf@ap 01B2                     sprintf@sp 01BB  
            ___lwmod@dividend 00D5                     stringcode 180A          USART_WriteString@str 00CC  
                  _TIMER0_Set 10C0                      trapmf@ua 0056               _USART_WriteChar 10DB  
                    sprintf@c 01BC                      sprintf@f 00D9               ___lwmod@divisor 00D3  
             ___lwmod@counter 00D8                      stringtab 1800                  ___aldiv@sign 00D5  
      __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023                   _SSPCON2bits 0091  
       i1PWM_DutyCycle2@valor 0070                    _SSPCONbits 0014                    _USART_Init 1390  
