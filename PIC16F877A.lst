

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Jun 06 23:53:18 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0088                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0094                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000D                     	;# 
   376  000E                     	;# 
   377  000E                     	;# 
   378  000F                     	;# 
   379  0010                     	;# 
   380  0011                     	;# 
   381  0012                     	;# 
   382  0013                     	;# 
   383  0014                     	;# 
   384  0015                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0017                     	;# 
   388  0018                     	;# 
   389  0019                     	;# 
   390  001A                     	;# 
   391  001B                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001D                     	;# 
   395  001E                     	;# 
   396  001F                     	;# 
   397  0081                     	;# 
   398  0085                     	;# 
   399  0086                     	;# 
   400  0087                     	;# 
   401  0088                     	;# 
   402  0089                     	;# 
   403  008C                     	;# 
   404  008D                     	;# 
   405  008E                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0094                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  009F                     	;# 
   416  010C                     	;# 
   417  010D                     	;# 
   418  010E                     	;# 
   419  010F                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  000E                     	;# 
   438  000F                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001D                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  0081                     	;# 
   458  0085                     	;# 
   459  0086                     	;# 
   460  0087                     	;# 
   461  0088                     	;# 
   462  0089                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0098                     	;# 
   471  0099                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  010F                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0088                     	;# 
   522  0089                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009E                     	;# 
   535  009F                     	;# 
   536  010C                     	;# 
   537  010D                     	;# 
   538  010E                     	;# 
   539  010F                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  000E                     	;# 
   558  000F                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001B                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  0081                     	;# 
   578  0085                     	;# 
   579  0086                     	;# 
   580  0087                     	;# 
   581  0088                     	;# 
   582  0089                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  018C                     	;# 
   601  018D                     	;# 
   602                           
   603                           	psect	idataBANK1
   604  108A                     __pidataBANK1:	
   605                           
   606                           ;initializer for _setpoint
   607  108A  3400               	retlw	0
   608  108B  34A0               	retlw	160
   609  108C  3441               	retlw	65
   610                           
   611                           ;initializer for _tf
   612  108D  3400               	retlw	0
   613  108E  3448               	retlw	72
   614  108F  3442               	retlw	66
   615                           
   616                           ;initializer for _pas_cooler
   617  1090  3407               	retlw	7
   618  1091  3400               	retlw	0
   619                           
   620                           ;initializer for _setpointUI
   621  1092  34C8               	retlw	200
   622  1093  3400               	retlw	0
   623                           
   624                           	psect	idataBANK3
   625  08DC                     __pidataBANK3:	
   626                           
   627                           ;initializer for _pwm
   628  08DC  3432               	retlw	50
   629  08DD  3400               	retlw	0
   630                           
   631                           	psect	strings
   632  0800                     __pstrings:	
   633  0800                     stringtab:	
   634  0800                     __stringtab:	
   635                           
   636                           ;	String table - string pointers are 1 byte each
   637  0800  1BFF               	btfsc	btemp+1,7
   638  0801  280A               	ljmp	stringcode
   639  0802  1383               	bcf	3,7
   640  0803  187F               	btfsc	btemp+1,0
   641  0804  1783               	bsf	3,7
   642  0805  0800               	movf	0,w
   643  0806  0A84               	incf	4,f
   644  0807  1903               	skipnz
   645  0808  0AFF               	incf	btemp+1,f
   646  0809  0008               	return
   647  080A                     stringcode:	
   648  080A                     stringdir:	
   649  080A  3008               	movlw	high stringdir
   650  080B  008A               	movwf	10
   651  080C  0804               	movf	4,w
   652  080D  0A84               	incf	4,f
   653  080E  0782               	addwf	2,f
   654  080F                     __stringbase:	
   655  080F  3400               	retlw	0
   656  0810                     __end_of__stringtab:	
   657  0810                     _dpowers:	
   658  0810  3401               	retlw	1
   659  0811  3400               	retlw	0
   660  0812  340A               	retlw	10
   661  0813  3400               	retlw	0
   662  0814  3464               	retlw	100
   663  0815  3400               	retlw	0
   664  0816  34E8               	retlw	232
   665  0817  3403               	retlw	3
   666  0818  3410               	retlw	16
   667  0819  3427               	retlw	39
   668  081A                     __end_of_dpowers:	
   669  000E                     _TMR1	set	14
   670  001F                     _ADCON0bits	set	31
   671  001E                     _ADRESH	set	30
   672  0017                     _CCP1CON	set	23
   673  0017                     _CCP1CONbits	set	23
   674  001D                     _CCP2CON	set	29
   675  001D                     _CCP2CONbits	set	29
   676  0015                     _CCPR1L	set	21
   677  001B                     _CCPR2L	set	27
   678  000B                     _INTCONbits	set	11
   679  000C                     _PIR1bits	set	12
   680  000D                     _PIR2bits	set	13
   681  0005                     _PORTA	set	5
   682  0006                     _PORTB	set	6
   683  0006                     _PORTBbits	set	6
   684  0007                     _PORTC	set	7
   685  0008                     _PORTD	set	8
   686  0009                     _PORTE	set	9
   687  0009                     _PORTEbits	set	9
   688  001A                     _RCREG	set	26
   689  0018                     _RCSTAbits	set	24
   690  0013                     _SSPBUF	set	19
   691  0014                     _SSPCONbits	set	20
   692  0010                     _T1CON	set	16
   693  0010                     _T1CONbits	set	16
   694  0012                     _T2CONbits	set	18
   695  0001                     _TMR0	set	1
   696  000F                     _TMR1H	set	15
   697  000E                     _TMR1L	set	14
   698  0019                     _TXREG	set	25
   699  00C1                     _OERR	set	193
   700  009F                     _ADCON1bits	set	159
   701  009E                     _ADRESL	set	158
   702  0081                     _OPTION_REGbits	set	129
   703  008C                     _PIE1bits	set	140
   704  008D                     _PIE2bits	set	141
   705  0092                     _PR2	set	146
   706  0099                     _SPBRG	set	153
   707  0093                     _SSPADD	set	147
   708  0091                     _SSPCON2	set	145
   709  0091                     _SSPCON2bits	set	145
   710  0094                     _SSPSTATbits	set	148
   711  0085                     _TRISA	set	133
   712  0086                     _TRISB	set	134
   713  0087                     _TRISC	set	135
   714  0088                     _TRISD	set	136
   715  0089                     _TRISE	set	137
   716  0098                     _TXSTAbits	set	152
   717  010D                     _EEADR	set	269
   718  010C                     _EEDATA	set	268
   719  018C                     _EECON1bits	set	396
   720  018D                     _EECON2	set	397
   721  081A                     __stringdata:	
   722  081A                     STR_19:	
   723  081A  340A               	retlw	10
   724  081B  340D               	retlw	13
   725  081C  3420               	retlw	32	;' '
   726  081D  342D               	retlw	45	;'-'
   727  081E  342D               	retlw	45	;'-'
   728  081F  342D               	retlw	45	;'-'
   729  0820  342D               	retlw	45	;'-'
   730  0821  342D               	retlw	45	;'-'
   731  0822  342D               	retlw	45	;'-'
   732  0823  342D               	retlw	45	;'-'
   733  0824  3420               	retlw	32	;' '
   734  0825  3445               	retlw	69	;'E'
   735  0826  3453               	retlw	83	;'S'
   736  0827  3454               	retlw	84	;'T'
   737  0828  344F               	retlw	79	;'O'
   738  0829  3455               	retlw	85	;'U'
   739  082A  3452               	retlw	82	;'R'
   740  082B  344F               	retlw	79	;'O'
   741  082C  3420               	retlw	32	;' '
   742  082D  3444               	retlw	68	;'D'
   743  082E  3445               	retlw	69	;'E'
   744  082F  3420               	retlw	32	;' '
   745  0830  3450               	retlw	80	;'P'
   746  0831  3449               	retlw	73	;'I'
   747  0832  344C               	retlw	76	;'L'
   748  0833  3448               	retlw	72	;'H'
   749  0834  3441               	retlw	65	;'A'
   750  0835  3420               	retlw	32	;' '
   751  0836  342D               	retlw	45	;'-'
   752  0837  342D               	retlw	45	;'-'
   753  0838  342D               	retlw	45	;'-'
   754  0839  342D               	retlw	45	;'-'
   755  083A  342D               	retlw	45	;'-'
   756  083B  342D               	retlw	45	;'-'
   757  083C  342D               	retlw	45	;'-'
   758  083D  3420               	retlw	32	;' '
   759  083E  340A               	retlw	10
   760  083F  340D               	retlw	13
   761  0840  3420               	retlw	32	;' '
   762  0841  3400               	retlw	0
   763  0842                     STR_11:	
   764  0842  3449               	retlw	73	;'I'
   765  0843  346E               	retlw	110	;'n'
   766  0844  3469               	retlw	105	;'i'
   767  0845  3463               	retlw	99	;'c'
   768  0846  3469               	retlw	105	;'i'
   769  0847  3461               	retlw	97	;'a'
   770  0848  346C               	retlw	108	;'l'
   771  0849  3469               	retlw	105	;'i'
   772  084A  347A               	retlw	122	;'z'
   773  084B  3461               	retlw	97	;'a'
   774  084C  346E               	retlw	110	;'n'
   775  084D  3464               	retlw	100	;'d'
   776  084E  346F               	retlw	111	;'o'
   777  084F  3420               	retlw	32	;' '
   778  0850  346F               	retlw	111	;'o'
   779  0851  3420               	retlw	32	;' '
   780  0852  3450               	retlw	80	;'P'
   781  0853  3449               	retlw	73	;'I'
   782  0854  3443               	retlw	67	;'C'
   783  0855  3431               	retlw	49	;'1'
   784  0856  3436               	retlw	54	;'6'
   785  0857  3446               	retlw	70	;'F'
   786  0858  3438               	retlw	56	;'8'
   787  0859  3437               	retlw	55	;'7'
   788  085A  3437               	retlw	55	;'7'
   789  085B  3441               	retlw	65	;'A'
   790  085C  340A               	retlw	10
   791  085D  340D               	retlw	13
   792  085E  3400               	retlw	0
   793  085F                     STR_12:	
   794  085F  3455               	retlw	85	;'U'
   795  0860  3453               	retlw	83	;'S'
   796  0861  3441               	retlw	65	;'A'
   797  0862  3452               	retlw	82	;'R'
   798  0863  3454               	retlw	84	;'T'
   799  0864  343A               	retlw	58	;':'
   800  0865  3420               	retlw	32	;' '
   801  0866  3431               	retlw	49	;'1'
   802  0867  3431               	retlw	49	;'1'
   803  0868  3435               	retlw	53	;'5'
   804  0869  342E               	retlw	46	;'.'
   805  086A  3432               	retlw	50	;'2'
   806  086B  3430               	retlw	48	;'0'
   807  086C  3430               	retlw	48	;'0'
   808  086D  3462               	retlw	98	;'b'
   809  086E  3470               	retlw	112	;'p'
   810  086F  3473               	retlw	115	;'s'
   811  0870  340A               	retlw	10
   812  0871  340D               	retlw	13
   813  0872  3400               	retlw	0
   814  0873                     STR_13:	
   815  0873  3449               	retlw	73	;'I'
   816  0874  346E               	retlw	110	;'n'
   817  0875  3469               	retlw	105	;'i'
   818  0876  3463               	retlw	99	;'c'
   819  0877  3469               	retlw	105	;'i'
   820  0878  3461               	retlw	97	;'a'
   821  0879  346C               	retlw	108	;'l'
   822  087A  3469               	retlw	105	;'i'
   823  087B  347A               	retlw	122	;'z'
   824  087C  3461               	retlw	97	;'a'
   825  087D  346E               	retlw	110	;'n'
   826  087E  3464               	retlw	100	;'d'
   827  087F  346F               	retlw	111	;'o'
   828  0880  342E               	retlw	46	;'.'
   829  0881  342E               	retlw	46	;'.'
   830  0882  342E               	retlw	46	;'.'
   831  0883  3400               	retlw	0
   832  0884                     STR_10:	
   833  0884  340A               	retlw	10
   834  0885  340D               	retlw	13
   835  0886  3470               	retlw	112	;'p'
   836  0887  3477               	retlw	119	;'w'
   837  0888  346D               	retlw	109	;'m'
   838  0889  3420               	retlw	32	;' '
   839  088A  343D               	retlw	61	;'='
   840  088B  3420               	retlw	32	;' '
   841  088C  3431               	retlw	49	;'1'
   842  088D  3430               	retlw	48	;'0'
   843  088E  3432               	retlw	50	;'2'
   844  088F  3433               	retlw	51	;'3'
   845  0890  340A               	retlw	10
   846  0891  340D               	retlw	13
   847  0892  3400               	retlw	0
   848  0893                     STR_8:	
   849  0893  340A               	retlw	10
   850  0894  340D               	retlw	13
   851  0895  3470               	retlw	112	;'p'
   852  0896  3477               	retlw	119	;'w'
   853  0897  346D               	retlw	109	;'m'
   854  0898  3420               	retlw	32	;' '
   855  0899  343D               	retlw	61	;'='
   856  089A  3420               	retlw	32	;' '
   857  089B  3438               	retlw	56	;'8'
   858  089C  3439               	retlw	57	;'9'
   859  089D  3436               	retlw	54	;'6'
   860  089E  340A               	retlw	10
   861  089F  340D               	retlw	13
   862  08A0  3400               	retlw	0
   863  08A1                     STR_7:	
   864  08A1  340A               	retlw	10
   865  08A2  340D               	retlw	13
   866  08A3  3470               	retlw	112	;'p'
   867  08A4  3477               	retlw	119	;'w'
   868  08A5  346D               	retlw	109	;'m'
   869  08A6  3420               	retlw	32	;' '
   870  08A7  343D               	retlw	61	;'='
   871  08A8  3420               	retlw	32	;' '
   872  08A9  3437               	retlw	55	;'7'
   873  08AA  3436               	retlw	54	;'6'
   874  08AB  3438               	retlw	56	;'8'
   875  08AC  340A               	retlw	10
   876  08AD  340D               	retlw	13
   877  08AE  3400               	retlw	0
   878  08AF                     STR_1:	
   879  08AF  340A               	retlw	10
   880  08B0  340D               	retlw	13
   881  08B1  3464               	retlw	100	;'d'
   882  08B2  3465               	retlw	101	;'e'
   883  08B3  3473               	retlw	115	;'s'
   884  08B4  346C               	retlw	108	;'l'
   885  08B5  3469               	retlw	105	;'i'
   886  08B6  3467               	retlw	103	;'g'
   887  08B7  3461               	retlw	97	;'a'
   888  08B8  3464               	retlw	100	;'d'
   889  08B9  346F               	retlw	111	;'o'
   890  08BA  340A               	retlw	10
   891  08BB  340D               	retlw	13
   892  08BC  3400               	retlw	0
   893  08BD                     STR_2:	
   894  08BD  340A               	retlw	10
   895  08BE  340D               	retlw	13
   896  08BF  3470               	retlw	112	;'p'
   897  08C0  3477               	retlw	119	;'w'
   898  08C1  346D               	retlw	109	;'m'
   899  08C2  3420               	retlw	32	;' '
   900  08C3  343D               	retlw	61	;'='
   901  08C4  3420               	retlw	32	;' '
   902  08C5  340A               	retlw	10
   903  08C6  340D               	retlw	13
   904  08C7  3400               	retlw	0
   905  08C8                     STR_18:	
   906  08C8  3444               	retlw	68	;'D'
   907  08C9  3465               	retlw	101	;'e'
   908  08CA  346C               	retlw	108	;'l'
   909  08CB  3474               	retlw	116	;'t'
   910  08CC  3461               	retlw	97	;'a'
   911  08CD  343A               	retlw	58	;':'
   912  08CE  3420               	retlw	32	;' '
   913  08CF  3400               	retlw	0
   914  08D0                     STR_17:	
   915  08D0  3452               	retlw	82	;'R'
   916  08D1  3450               	retlw	80	;'P'
   917  08D2  344D               	retlw	77	;'M'
   918  08D3  343A               	retlw	58	;':'
   919  08D4  3420               	retlw	32	;' '
   920  08D5  3400               	retlw	0
   921  08D6                     STR_14:	
   922  08D6  3425               	retlw	37	;'%'
   923  08D7  3430               	retlw	48	;'0'
   924  08D8  3434               	retlw	52	;'4'
   925  08D9  3464               	retlw	100	;'d'
   926  08DA  3400               	retlw	0
   927  08DB                     __end_of__stringdata:	
   928                           
   929                           ; #config settings
   930  0000                     
   931                           	psect	cinit
   932  0015                     start_initialization:	
   933  0015                     __initialization:	
   934                           
   935                           ; Clear objects allocated to BANK0
   936  0015  01ED               	clrf	__pbssBANK0& (0+127)
   937  0016  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   938                           
   939                           ; Clear objects allocated to BANK1
   940  0017  1383               	bcf	3,7	;select IRP bank0
   941  0018  30A0               	movlw	low __pbssBANK1
   942  0019  0084               	movwf	4
   943  001A  30C3               	movlw	low (__pbssBANK1+35)
   944  001B  160A  118A  2078  120A  118A  	fcall	clear_ram0
   945                           
   946                           ; Clear objects allocated to BANK3
   947  0020  1783               	bsf	3,7	;select IRP bank2
   948  0021  3090               	movlw	low __pbssBANK3
   949  0022  0084               	movwf	4
   950  0023  30AF               	movlw	low (__pbssBANK3+31)
   951  0024  160A  118A  2078  120A  118A  	fcall	clear_ram0
   952                           
   953                           ; Initialize objects allocated to BANK3
   954  0029  1683               	bsf	3,5	;RP0=1, select bank3
   955  002A  1703               	bsf	3,6	;RP1=1, select bank3
   956  002B  120A  158A  20DC  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   957  0030  00AF               	movwf	__pdataBANK3& (0+127)
   958  0031  120A  158A  20DD  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   959  0036  00B0               	movwf	(__pdataBANK3+1)& (0+127)
   960                           
   961                           ; Initialize objects allocated to BANK1
   962  0037  1383               	bcf	3,7	;select IRP bank0
   963  0038  30EF               	movlw	low (__pdataBANK1+10)
   964  0039  00FD               	movwf	btemp+-1
   965  003A  3010               	movlw	high __pidataBANK1
   966  003B  00FE               	movwf	btemp
   967  003C  308A               	movlw	low __pidataBANK1
   968  003D  00FF               	movwf	btemp+1
   969  003E  30E5               	movlw	low __pdataBANK1
   970  003F  0084               	movwf	4
   971  0040  160A  118A  20C0   	fcall	init_ram0
   972  0043                     end_of_initialization:	
   973                           ;End of C runtime variable initialization code
   974                           
   975  0043                     __end_of__initialization:	
   976  0043  0183               	clrf	3
   977  0044  120A  158A  2A27   	ljmp	_main	;jump to C main() function
   978                           
   979                           	psect	bssBANK0
   980  006D                     __pbssBANK0:	
   981  006D                     _deltaV:	
   982  006D                     	ds	2
   983                           
   984                           	psect	bssBANK1
   985  00A0                     __pbssBANK1:	
   986  00A0                     _ativa_fan:	
   987  00A0                     	ds	3
   988  00A3                     _fitemp:	
   989  00A3                     	ds	3
   990  00A6                     _fop_rule1:	
   991  00A6                     	ds	3
   992  00A9                     _fop_rule2:	
   993  00A9                     	ds	3
   994  00AC                     _fop_rule3:	
   995  00AC                     	ds	3
   996  00AF                     _sum:	
   997  00AF                     	ds	3
   998  00B2                     _total_area:	
   999  00B2                     	ds	3
  1000  00B5                     _x:	
  1001  00B5                     	ds	3
  1002  00B8                     _y:	
  1003  00B8                     	ds	3
  1004  00BB                     _ADCResult:	
  1005  00BB                     	ds	2
  1006  00BD                     _contagens_tm0:	
  1007  00BD                     	ds	2
  1008  00BF                     _pulsos:	
  1009  00BF                     	ds	2
  1010  00C1                     _rpm:	
  1011  00C1                     	ds	2
  1012                           
  1013                           	psect	dataBANK1
  1014  00E5                     __pdataBANK1:	
  1015  00E5                     _setpoint:	
  1016  00E5                     	ds	3
  1017  00E8                     _tf:	
  1018  00E8                     	ds	3
  1019  00EB                     _pas_cooler:	
  1020  00EB                     	ds	2
  1021  00ED                     _setpointUI:	
  1022  00ED                     	ds	2
  1023                           
  1024                           	psect	bssBANK3
  1025  0190                     __pbssBANK3:	
  1026  0190                     _derro:	
  1027  0190                     	ds	3
  1028  0193                     _contador_rb6:	
  1029  0193                     	ds	2
  1030  0195                     _status:	
  1031  0195                     	ds	2
  1032  0197                     _temp_lida:	
  1033  0197                     	ds	2
  1034  0199                     _tempo_rb6:	
  1035  0199                     	ds	2
  1036  019B                     _display_pwm:	
  1037  019B                     	ds	10
  1038  01A5                     _display_rpm:	
  1039  01A5                     	ds	10
  1040                           
  1041                           	psect	dataBANK3
  1042  01AF                     __pdataBANK3:	
  1043  01AF                     _pwm:	
  1044  01AF                     	ds	2
  1045                           
  1046                           	psect	clrtext
  1047  1078                     clear_ram0:	
  1048                           ;	Called with FSR containing the base address, and
  1049                           ;	W with the last address+1
  1050                           
  1051  1078  0064               	clrwdt	;clear the watchdog before getting into this loop
  1052  1079                     clrloop0:	
  1053  1079  0180               	clrf	0	;clear RAM location pointed to by FSR
  1054  107A  0A84               	incf	4,f	;increment pointer
  1055  107B  0604               	xorwf	4,w	;XOR with final address
  1056  107C  1903               	btfsc	3,2	;have we reached the end yet?
  1057  107D  3400               	retlw	0	;all done for this memory range, return
  1058  107E  0604               	xorwf	4,w	;XOR again to restore value
  1059  107F  2879               	goto	clrloop0	;do the next byte
  1060                           
  1061                           	psect	inittext
  1062  10BC                     init_fetch0:	
  1063                           ;	Called with low address in FSR and high address in W
  1064                           
  1065  10BC  087E               	movf	126,w
  1066  10BD  008A               	movwf	10
  1067  10BE  087F               	movf	127,w
  1068  10BF  0082               	movwf	2
  1069  10C0                     init_ram0:	
  1070                           ;Called with:
  1071                           ;	high address of idata address in btemp 
  1072                           ;	low address of idata address in btemp+1 
  1073                           ;	low address of data in FSR
  1074                           ;	high address + 1 of data in btemp-1
  1075                           
  1076  10C0  20BC  160A  118A   	fcall	init_fetch0
  1077  10C3  0080               	movwf	0
  1078  10C4  0A84               	incf	4,f
  1079  10C5  0804               	movf	4,w
  1080  10C6  067D               	xorwf	125,w
  1081  10C7  1903               	btfsc	3,2
  1082  10C8  3400               	retlw	0
  1083  10C9  0AFF               	incf	127,f
  1084  10CA  1903               	btfsc	3,2
  1085  10CB  0AFE               	incf	126,f
  1086  10CC  28C0               	goto	init_ram0
  1087                           
  1088                           	psect	cstackBANK1
  1089  00C3                     __pcstackBANK1:	
  1090  00C3                     ?_PWM_DutyCycle2:	
  1091  00C3                     ??_TIMER0_Set:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  00C3                     ??_TIMER0_Init:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  00C3                     ??_ADC_Init:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  00C3                     ??_PWM_Init:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  00C3                     ?_LCD_Cursor:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  00C3                     ?_PWM_DutyCycle1:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  00C3                     ??_isdigit:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  00C3                     ??_USART_WriteChar:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  00C3                     ??_LCD_WriteCmd:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  00C3                     ??_LCD_WriteData:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  00C3                     ?___wmul:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  00C3                     ?___lwdiv:	
  1125                           ; 2 bytes @ 0x0
  1126                           
  1127  00C3                     ?___aldiv:	
  1128                           ; 2 bytes @ 0x0
  1129                           
  1130  00C3                     USART_WriteChar@byte:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  00C3                     TIMER0_Set@contagens:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  00C3                     LCD_Cursor@Col:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  00C3                     _isdigit$1449:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  00C3                     PWM_DutyCycle1@valor:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  00C3                     PWM_DutyCycle2@valor:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  00C3                     ___wmul@multiplier:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  00C3                     ___lwdiv@divisor:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  00C3                     ___aldiv@divisor:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x0
  1159  00C3                     	ds	1
  1160  00C4                     ?_USART_WriteString:	
  1161  00C4                     ??_LCD_Cursor:	
  1162                           ; 0 bytes @ 0x1
  1163                           
  1164  00C4                     LCD_WriteCmd@Byte:	
  1165                           ; 0 bytes @ 0x1
  1166                           
  1167  00C4                     LCD_WriteData@Byte:	
  1168                           ; 1 bytes @ 0x1
  1169                           
  1170  00C4                     isdigit@c:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  00C4                     USART_WriteString@str:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x1
  1178  00C4                     	ds	1
  1179  00C5                     ??_PWM_DutyCycle2:	
  1180  00C5                     ??_LCD_Init:	
  1181                           ; 0 bytes @ 0x2
  1182                           
  1183  00C5                     ?_LCD_WriteString:	
  1184                           ; 0 bytes @ 0x2
  1185                           
  1186  00C5                     ??_PWM_DutyCycle1:	
  1187                           ; 0 bytes @ 0x2
  1188                           
  1189  00C5                     ??_LCD_Clear:	
  1190                           ; 0 bytes @ 0x2
  1191                           
  1192  00C5                     LCD_Cursor@Row:	
  1193                           ; 0 bytes @ 0x2
  1194                           
  1195  00C5                     LCD_WriteString@Str:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  00C5                     ___wmul@multiplicand:	
  1199                           ; 2 bytes @ 0x2
  1200                           
  1201  00C5                     ___lwdiv@dividend:	
  1202                           ; 2 bytes @ 0x2
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x2
  1206  00C5                     	ds	1
  1207  00C6                     ??_USART_WriteString:	
  1208                           
  1209                           ; 0 bytes @ 0x3
  1210  00C6                     	ds	1
  1211  00C7                     ??_LCD_WriteString:	
  1212  00C7                     ??___wmul:	
  1213                           ; 0 bytes @ 0x4
  1214                           
  1215  00C7                     ??___lwdiv:	
  1216                           ; 0 bytes @ 0x4
  1217                           
  1218  00C7                     ___wmul@product:	
  1219                           ; 0 bytes @ 0x4
  1220                           
  1221  00C7                     ___aldiv@dividend:	
  1222                           ; 2 bytes @ 0x4
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x4
  1226  00C7                     	ds	1
  1227  00C8                     ___lwdiv@quotient:	
  1228                           
  1229                           ; 2 bytes @ 0x5
  1230  00C8                     	ds	2
  1231  00CA                     ___lwdiv@counter:	
  1232                           
  1233                           ; 1 bytes @ 0x7
  1234  00CA                     	ds	1
  1235  00CB                     ??___aldiv:	
  1236  00CB                     ?___lwmod:	
  1237                           ; 0 bytes @ 0x8
  1238                           
  1239  00CB                     ___lwmod@divisor:	
  1240                           ; 2 bytes @ 0x8
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x8
  1244  00CB                     	ds	1
  1245  00CC                     ___aldiv@counter:	
  1246                           
  1247                           ; 1 bytes @ 0x9
  1248  00CC                     	ds	1
  1249  00CD                     ___aldiv@sign:	
  1250  00CD                     ___lwmod@dividend:	
  1251                           ; 1 bytes @ 0xA
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0xA
  1255  00CD                     	ds	1
  1256  00CE                     ___aldiv@quotient:	
  1257                           
  1258                           ; 4 bytes @ 0xB
  1259  00CE                     	ds	1
  1260  00CF                     ??___lwmod:	
  1261                           
  1262                           ; 0 bytes @ 0xC
  1263  00CF                     	ds	1
  1264  00D0                     ___lwmod@counter:	
  1265                           
  1266                           ; 1 bytes @ 0xD
  1267  00D0                     	ds	1
  1268  00D1                     ?_sprintf:	
  1269  00D1                     sprintf@f:	
  1270                           ; 2 bytes @ 0xE
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0xE
  1274  00D1                     	ds	1
  1275  00D2                     ?_USART_Init:	
  1276  00D2                     USART_Init@BaudRate:	
  1277                           ; 0 bytes @ 0xF
  1278                           
  1279                           
  1280                           ; 4 bytes @ 0xF
  1281  00D2                     	ds	2
  1282  00D4                     ??_sprintf:	
  1283                           
  1284                           ; 0 bytes @ 0x11
  1285  00D4                     	ds	2
  1286  00D6                     ??_USART_Init:	
  1287                           
  1288                           ; 0 bytes @ 0x13
  1289  00D6                     	ds	1
  1290  00D7                     sprintf@ap:	
  1291                           
  1292                           ; 1 bytes @ 0x14
  1293  00D7                     	ds	1
  1294  00D8                     sprintf@prec:	
  1295                           
  1296                           ; 1 bytes @ 0x15
  1297  00D8                     	ds	1
  1298  00D9                     sprintf@_val:	
  1299                           
  1300                           ; 4 bytes @ 0x16
  1301  00D9                     	ds	4
  1302  00DD                     sprintf@flag:	
  1303                           
  1304                           ; 1 bytes @ 0x1A
  1305  00DD                     	ds	1
  1306  00DE                     sprintf@width:	
  1307                           
  1308                           ; 2 bytes @ 0x1B
  1309  00DE                     	ds	2
  1310  00E0                     sprintf@sp:	
  1311                           
  1312                           ; 1 bytes @ 0x1D
  1313  00E0                     	ds	1
  1314  00E1                     sprintf@c:	
  1315                           
  1316                           ; 1 bytes @ 0x1E
  1317  00E1                     	ds	1
  1318  00E2                     ??_main:	
  1319                           
  1320                           ; 0 bytes @ 0x1F
  1321  00E2                     	ds	3
  1322                           
  1323                           	psect	cstackCOMMON
  1324  0070                     __pcstackCOMMON:	
  1325  0070                     ?_TIMER0_Set:	
  1326  0070                     ?_TIMER0_Init:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_ADC_Init:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?_PWM_Init:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ?_LCD_Init:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?_LCD_Clear:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_isdigit:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?_Fuzzy:	
  1345                           ; 1 bit 
  1346                           
  1347  0070                     ?_ISR:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0070                     ?_main:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0070                     ?_USART_WriteChar:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?_LCD_WriteCmd:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ?_LCD_WriteData:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?i1_USART_WriteChar:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0070                     ??i1_USART_WriteChar:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0070                     ?i1_TIMER0_Set:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0070                     ??i1_TIMER0_Set:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0070                     ?_USART_ReceiveChar:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0070                     ?i1___lwdiv:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?___ftpack:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383  0070                     i1USART_WriteChar@byte:	
  1384                           ; 3 bytes @ 0x0
  1385                           
  1386  0070                     i1TIMER0_Set@contagens:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     i1___lwdiv@divisor:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ___ftpack@arg:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395                           
  1396                           ; 3 bytes @ 0x0
  1397  0070                     	ds	1
  1398  0071                     ?i1_USART_WriteString:	
  1399  0071                     i1USART_WriteString@str:	
  1400                           ; 0 bytes @ 0x1
  1401                           
  1402                           
  1403                           ; 2 bytes @ 0x1
  1404  0071                     	ds	1
  1405  0072                     i1___lwdiv@dividend:	
  1406                           
  1407                           ; 2 bytes @ 0x2
  1408  0072                     	ds	1
  1409  0073                     ??_USART_ReceiveChar:	
  1410  0073                     ??i1_USART_WriteString:	
  1411                           ; 0 bytes @ 0x3
  1412                           
  1413  0073                     ___ftpack@exp:	
  1414                           ; 0 bytes @ 0x3
  1415                           
  1416                           
  1417                           ; 1 bytes @ 0x3
  1418  0073                     	ds	1
  1419  0074                     ??i1___lwdiv:	
  1420  0074                     USART_ReceiveChar@byte:	
  1421                           ; 0 bytes @ 0x4
  1422                           
  1423  0074                     ___ftpack@sign:	
  1424                           ; 1 bytes @ 0x4
  1425                           
  1426                           
  1427                           ; 1 bytes @ 0x4
  1428  0074                     	ds	1
  1429  0075                     ??___ftpack:	
  1430  0075                     i1___lwdiv@quotient:	
  1431                           ; 0 bytes @ 0x5
  1432                           
  1433                           
  1434                           ; 2 bytes @ 0x5
  1435  0075                     	ds	2
  1436  0077                     i1___lwdiv@counter:	
  1437                           
  1438                           ; 1 bytes @ 0x7
  1439  0077                     	ds	1
  1440  0078                     ?i1___wmul:	
  1441  0078                     ?___ftmul:	
  1442                           ; 2 bytes @ 0x8
  1443                           
  1444  0078                     ?___lwtoft:	
  1445                           ; 3 bytes @ 0x8
  1446                           
  1447  0078                     ___lwtoft@c:	
  1448                           ; 3 bytes @ 0x8
  1449                           
  1450  0078                     i1___wmul@multiplier:	
  1451                           ; 2 bytes @ 0x8
  1452                           
  1453  0078                     ___ftmul@f1:	
  1454                           ; 2 bytes @ 0x8
  1455                           
  1456                           
  1457                           ; 3 bytes @ 0x8
  1458  0078                     	ds	2
  1459  007A                     i1___wmul@multiplicand:	
  1460                           
  1461                           ; 2 bytes @ 0xA
  1462  007A                     	ds	1
  1463  007B                     ??___lwtoft:	
  1464  007B                     ___ftmul@f2:	
  1465                           ; 0 bytes @ 0xB
  1466                           
  1467                           
  1468                           ; 3 bytes @ 0xB
  1469  007B                     	ds	1
  1470  007C                     ??_trimf:	
  1471  007C                     ??_trapmf:	
  1472                           ; 0 bytes @ 0xC
  1473                           
  1474  007C                     ??_max_val:	
  1475                           ; 0 bytes @ 0xC
  1476                           
  1477  007C                     ??___ftneg:	
  1478                           ; 0 bytes @ 0xC
  1479                           
  1480  007C                     ??i1_PWM_DutyCycle2:	
  1481                           ; 0 bytes @ 0xC
  1482                           
  1483  007C                     ??i1___wmul:	
  1484                           ; 0 bytes @ 0xC
  1485                           
  1486  007C                     i1___wmul@product:	
  1487                           ; 0 bytes @ 0xC
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0xC
  1491  007C                     	ds	2
  1492  007E                     ??_Fuzzy:	
  1493                           
  1494                           	psect	cstackBANK0
  1495  0020                     __pcstackBANK0:	
  1496                           ; 0 bytes @ 0xE
  1497                           
  1498  0020                     ??___ftmul:	
  1499  0020                     ?___ftneg:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0020                     ___ftneg@f1:	
  1503                           ; 3 bytes @ 0x0
  1504                           
  1505                           
  1506                           ; 3 bytes @ 0x0
  1507  0020                     	ds	3
  1508  0023                     ?___ftadd:	
  1509  0023                     ___ftadd@f1:	
  1510                           ; 3 bytes @ 0x3
  1511                           
  1512                           
  1513                           ; 3 bytes @ 0x3
  1514  0023                     	ds	1
  1515  0024                     ___ftmul@exp:	
  1516                           
  1517                           ; 1 bytes @ 0x4
  1518  0024                     	ds	1
  1519  0025                     ___ftmul@f3_as_product:	
  1520                           
  1521                           ; 3 bytes @ 0x5
  1522  0025                     	ds	1
  1523  0026                     ___ftadd@f2:	
  1524                           
  1525                           ; 3 bytes @ 0x6
  1526  0026                     	ds	2
  1527  0028                     ___ftmul@cntr:	
  1528                           
  1529                           ; 1 bytes @ 0x8
  1530  0028                     	ds	1
  1531  0029                     ??___ftadd:	
  1532  0029                     ___ftmul@sign:	
  1533                           ; 0 bytes @ 0x9
  1534                           
  1535                           
  1536                           ; 1 bytes @ 0x9
  1537  0029                     	ds	4
  1538  002D                     ___ftadd@sign:	
  1539                           
  1540                           ; 1 bytes @ 0xD
  1541  002D                     	ds	1
  1542  002E                     ___ftadd@exp2:	
  1543                           
  1544                           ; 1 bytes @ 0xE
  1545  002E                     	ds	1
  1546  002F                     ___ftadd@exp1:	
  1547                           
  1548                           ; 1 bytes @ 0xF
  1549  002F                     	ds	1
  1550  0030                     ?___ftge:	
  1551  0030                     ?___ftdiv:	
  1552                           ; 1 bit 
  1553                           
  1554  0030                     ?___fttol:	
  1555                           ; 3 bytes @ 0x10
  1556                           
  1557  0030                     ___ftdiv@f2:	
  1558                           ; 4 bytes @ 0x10
  1559                           
  1560  0030                     ___ftge@ff1:	
  1561                           ; 3 bytes @ 0x10
  1562                           
  1563  0030                     ___fttol@f1:	
  1564                           ; 3 bytes @ 0x10
  1565                           
  1566                           
  1567                           ; 3 bytes @ 0x10
  1568  0030                     	ds	3
  1569  0033                     ___ftdiv@f1:	
  1570  0033                     ___ftge@ff2:	
  1571                           ; 3 bytes @ 0x13
  1572                           
  1573                           
  1574                           ; 3 bytes @ 0x13
  1575  0033                     	ds	1
  1576  0034                     ??___fttol:	
  1577                           
  1578                           ; 0 bytes @ 0x14
  1579  0034                     	ds	2
  1580  0036                     ??___ftdiv:	
  1581  0036                     ??___ftge:	
  1582                           ; 0 bytes @ 0x16
  1583                           
  1584                           
  1585                           ; 0 bytes @ 0x16
  1586  0036                     	ds	2
  1587  0038                     ___fttol@sign1:	
  1588                           
  1589                           ; 1 bytes @ 0x18
  1590  0038                     	ds	1
  1591  0039                     ___fttol@lval:	
  1592                           
  1593                           ; 4 bytes @ 0x19
  1594  0039                     	ds	1
  1595  003A                     ___ftdiv@cntr:	
  1596                           
  1597                           ; 1 bytes @ 0x1A
  1598  003A                     	ds	1
  1599  003B                     ___ftdiv@f3:	
  1600                           
  1601                           ; 3 bytes @ 0x1B
  1602  003B                     	ds	1
  1603  003C                     ?_max_val:	
  1604  003C                     max_val@a:	
  1605                           ; 3 bytes @ 0x1C
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0x1C
  1609  003C                     	ds	1
  1610  003D                     ___fttol@exp1:	
  1611                           
  1612                           ; 1 bytes @ 0x1D
  1613  003D                     	ds	1
  1614  003E                     ?i1_PWM_DutyCycle2:	
  1615  003E                     ___ftdiv@exp:	
  1616                           ; 0 bytes @ 0x1E
  1617                           
  1618  003E                     i1PWM_DutyCycle2@valor:	
  1619                           ; 1 bytes @ 0x1E
  1620                           
  1621                           
  1622                           ; 2 bytes @ 0x1E
  1623  003E                     	ds	1
  1624  003F                     ___ftdiv@sign:	
  1625  003F                     max_val@b:	
  1626                           ; 1 bytes @ 0x1F
  1627                           
  1628                           
  1629                           ; 3 bytes @ 0x1F
  1630  003F                     	ds	1
  1631  0040                     ?_trimf:	
  1632  0040                     ?_trapmf:	
  1633                           ; 3 bytes @ 0x20
  1634                           
  1635  0040                     trimf@x:	
  1636                           ; 3 bytes @ 0x20
  1637                           
  1638  0040                     trapmf@x:	
  1639                           ; 3 bytes @ 0x20
  1640                           
  1641                           
  1642                           ; 3 bytes @ 0x20
  1643  0040                     	ds	3
  1644  0043                     trimf@a:	
  1645  0043                     trapmf@a:	
  1646                           ; 3 bytes @ 0x23
  1647                           
  1648                           
  1649                           ; 3 bytes @ 0x23
  1650  0043                     	ds	3
  1651  0046                     trimf@b:	
  1652  0046                     trapmf@b:	
  1653                           ; 3 bytes @ 0x26
  1654                           
  1655                           
  1656                           ; 3 bytes @ 0x26
  1657  0046                     	ds	3
  1658  0049                     trimf@c:	
  1659  0049                     trapmf@c:	
  1660                           ; 3 bytes @ 0x29
  1661                           
  1662                           
  1663                           ; 3 bytes @ 0x29
  1664  0049                     	ds	3
  1665  004C                     trimf@ua:	
  1666  004C                     trapmf@d:	
  1667                           ; 3 bytes @ 0x2C
  1668                           
  1669                           
  1670                           ; 3 bytes @ 0x2C
  1671  004C                     	ds	3
  1672  004F                     trapmf@ua:	
  1673                           
  1674                           ; 3 bytes @ 0x2F
  1675  004F                     	ds	3
  1676  0052                     Fuzzy@freio:	
  1677                           
  1678                           ; 2 bytes @ 0x32
  1679  0052                     	ds	2
  1680  0054                     Fuzzy@tip:	
  1681                           
  1682                           ; 3 bytes @ 0x34
  1683  0054                     	ds	3
  1684  0057                     Fuzzy@a:	
  1685                           
  1686                           ; 2 bytes @ 0x37
  1687  0057                     	ds	2
  1688  0059                     Fuzzy@a_242:	
  1689                           
  1690                           ; 2 bytes @ 0x39
  1691  0059                     	ds	2
  1692  005B                     Fuzzy@a_243:	
  1693                           
  1694                           ; 2 bytes @ 0x3B
  1695  005B                     	ds	2
  1696  005D                     Fuzzy@mantem:	
  1697                           
  1698                           ; 3 bytes @ 0x3D
  1699  005D                     	ds	3
  1700  0060                     Fuzzy@reduz:	
  1701                           
  1702                           ; 3 bytes @ 0x40
  1703  0060                     	ds	3
  1704  0063                     Fuzzy@aumenta:	
  1705                           
  1706                           ; 3 bytes @ 0x43
  1707  0063                     	ds	3
  1708  0066                     Fuzzy@deltaRpm:	
  1709                           
  1710                           ; 3 bytes @ 0x46
  1711  0066                     	ds	3
  1712  0069                     ??_ISR:	
  1713                           
  1714                           ; 0 bytes @ 0x49
  1715  0069                     	ds	4
  1716                           
  1717                           	psect	maintext
  1718  0A27                     __pmaintext:	
  1719 ;;
  1720 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1721 ;;
  1722 ;; *************** function _main *****************
  1723 ;; Defined at:
  1724 ;;		line 480 in file "R:\Note\Ultimo C no MPLAB\main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;		None               void
  1731 ;; Registers used:
  1732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 17F/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0
  1740 ;;      Temps:          0       0       3       0       0
  1741 ;;      Totals:         0       0       3       0       0
  1742 ;;Total ram usage:        3 bytes
  1743 ;; Hardware stack levels required when called:    7
  1744 ;; This function calls:
  1745 ;;		_ADC_Init
  1746 ;;		_LCD_Clear
  1747 ;;		_LCD_Cursor
  1748 ;;		_LCD_Init
  1749 ;;		_LCD_WriteString
  1750 ;;		_PWM_DutyCycle1
  1751 ;;		_PWM_DutyCycle2
  1752 ;;		_PWM_Init
  1753 ;;		_TIMER0_Init
  1754 ;;		_TIMER0_Set
  1755 ;;		_USART_Init
  1756 ;;		_USART_WriteString
  1757 ;;		_sprintf
  1758 ;; This function is called by:
  1759 ;;		Startup code after reset
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _main
  1765  0A27                     _main:	
  1766                           
  1767                           ;main.c: 482: TRISA = 0b00000001;
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771  0A27  3001               	movlw	1
  1772  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0A29  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0A2A  0085               	movwf	5	;volatile
  1775                           
  1776                           ;main.c: 483: PORTA = 0b00000001;
  1777  0A2B  3001               	movlw	1
  1778  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0A2E  0085               	movwf	5	;volatile
  1781                           
  1782                           ;main.c: 484: TRISB = 0b00000000;
  1783  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0A30  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0A31  0186               	clrf	6	;volatile
  1786                           
  1787                           ;main.c: 485: PORTB = 0b00000000;
  1788  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0A34  0186               	clrf	6	;volatile
  1791                           
  1792                           ;main.c: 486: TRISC = 0b10000001;
  1793  0A35  3081               	movlw	129
  1794  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  1795  0A37  1303               	bcf	3,6	;RP1=0, select bank1
  1796  0A38  0087               	movwf	7	;volatile
  1797                           
  1798                           ;main.c: 487: PORTC = 0b11000000;
  1799  0A39  30C0               	movlw	192
  1800  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0A3C  0087               	movwf	7	;volatile
  1803                           
  1804                           ;main.c: 488: TRISD = 0b00000000;
  1805  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  1806  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  1807  0A3F  0188               	clrf	8	;volatile
  1808                           
  1809                           ;main.c: 489: PORTD = 0b00000000;
  1810  0A40  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0A41  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0A42  0188               	clrf	8	;volatile
  1813                           
  1814                           ;main.c: 490: TRISE = 0b00000000;
  1815  0A43  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0A44  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0A45  0189               	clrf	9	;volatile
  1818                           
  1819                           ;main.c: 491: PORTE = 0b00000000;
  1820  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0A48  0189               	clrf	9	;volatile
  1823                           
  1824                           ;main.c: 494: T1CON = 0x03;
  1825  0A49  3003               	movlw	3
  1826  0A4A  0090               	movwf	16	;volatile
  1827                           
  1828                           ;main.c: 495: TMR1L = 0x00;
  1829  0A4B  018E               	clrf	14	;volatile
  1830                           
  1831                           ;main.c: 496: TMR1H = 0x00;
  1832  0A4C  018F               	clrf	15	;volatile
  1833                           
  1834                           ;main.c: 499: USART_Init(115200);
  1835  0A4D  3000               	movlw	0
  1836  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0A4F  1303               	bcf	3,6	;RP1=0, select bank1
  1838  0A50  00D5               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1839  0A51  3001               	movlw	1
  1840  0A52  00D4               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1841  0A53  30C2               	movlw	194
  1842  0A54  00D3               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1843  0A55  3000               	movlw	0
  1844  0A56  00D2               	movwf	USART_Init@BaudRate^(0+128)
  1845  0A57  160A  118A  2365  120A  158A  	fcall	_USART_Init
  1846                           
  1847                           ;main.c: 500: TIMER0_Init();
  1848  0A5C  160A  118A  2094  120A  158A  	fcall	_TIMER0_Init
  1849                           
  1850                           ;main.c: 501: ADC_Init();
  1851  0A61  160A  118A  20CD  120A  158A  	fcall	_ADC_Init
  1852                           
  1853                           ;main.c: 502: PWM_Init();
  1854  0A66  160A  118A  2202  120A  158A  	fcall	_PWM_Init
  1855                           
  1856                           ;main.c: 503: LCD_Init();
  1857  0A6B  160A  118A  2475  120A  158A  	fcall	_LCD_Init
  1858                           
  1859                           ;main.c: 506: INTCONbits.PEIE = 1;
  1860  0A70  170B               	bsf	11,6	;volatile
  1861                           
  1862                           ;main.c: 507: INTCONbits.GIE = 1;
  1863  0A71  178B               	bsf	11,7	;volatile
  1864                           
  1865                           ;main.c: 510: USART_WriteString("Inicializando o PIC16F877A\n\r");
  1866  0A72  3033               	movlw	low (STR_11-__stringbase)
  1867  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  1868  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  1869  0A75  00C4               	movwf	USART_WriteString@str^(0+128)
  1870  0A76  3080               	movlw	128
  1871  0A77  00C5               	movwf	(USART_WriteString@str+1)^(0+128)
  1872  0A78  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1873                           
  1874                           ;main.c: 511: USART_WriteString("USART: 115.200bps\n\r");
  1875  0A7D  3050               	movlw	low (STR_12-__stringbase)
  1876  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0A7F  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0A80  00C4               	movwf	USART_WriteString@str^(0+128)
  1879  0A81  3080               	movlw	128
  1880  0A82  00C5               	movwf	(USART_WriteString@str+1)^(0+128)
  1881  0A83  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1882                           
  1883                           ;main.c: 514: LCD_Init();
  1884  0A88  160A  118A  2475  120A  158A  	fcall	_LCD_Init
  1885                           
  1886                           ;main.c: 515: LCD_Cursor(0,0);
  1887  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  1888  0A8E  1303               	bcf	3,6	;RP1=0, select bank1
  1889  0A8F  01C3               	clrf	LCD_Cursor@Col^(0+128)
  1890  0A90  3000               	movlw	0
  1891  0A91  160A  118A  215A  120A  158A  	fcall	_LCD_Cursor
  1892                           
  1893                           ;main.c: 516: LCD_WriteString("Inicializando...");
  1894  0A96  3064               	movlw	low (STR_13-__stringbase)
  1895  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0A98  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0A99  00C5               	movwf	LCD_WriteString@Str^(0+128)
  1898  0A9A  3080               	movlw	128
  1899  0A9B  00C6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1900  0A9C  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  1901                           
  1902                           ;main.c: 519: PWM_DutyCycle1(0);
  1903  0AA1  3000               	movlw	0
  1904  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0AA4  00C3               	movwf	PWM_DutyCycle1@valor^(0+128)
  1907  0AA5  3000               	movlw	0
  1908  0AA6  00C4               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1909  0AA7  160A  118A  217A  120A  158A  	fcall	_PWM_DutyCycle1
  1910                           
  1911                           ;main.c: 520: PWM_DutyCycle2(0);
  1912  0AAC  3000               	movlw	0
  1913  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0AAF  00C3               	movwf	PWM_DutyCycle2@valor^(0+128)
  1916  0AB0  3000               	movlw	0
  1917  0AB1  00C4               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1918  0AB2  160A  118A  219B  120A  158A  	fcall	_PWM_DutyCycle2
  1919                           
  1920                           ;main.c: 523: TIMER0_Set(238);
  1921  0AB7  30EE               	movlw	238
  1922  0AB8  160A  118A  2070  120A  158A  	fcall	_TIMER0_Set
  1923                           
  1924                           ;main.c: 526: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1925  0ABD  3018               	movlw	24
  1926  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0AC0  00E4               	movwf	(??_main^(0+128)+2)
  1929  0AC1  3061               	movlw	97
  1930  0AC2  00E3               	movwf	(??_main^(0+128)+1)
  1931  0AC3  306E               	movlw	110
  1932  0AC4  00E2               	movwf	??_main^(0+128)
  1933  0AC5                     u4087:	
  1934  0AC5  0BE2               	decfsz	??_main^(0+128),f
  1935  0AC6  2AC5               	goto	u4087
  1936  0AC7  0BE3               	decfsz	(??_main^(0+128)+1),f
  1937  0AC8  2AC5               	goto	u4087
  1938  0AC9  0BE4               	decfsz	(??_main^(0+128)+2),f
  1939  0ACA  2AC5               	goto	u4087
  1940  0ACB  0000               	nop
  1941  0ACC                     l199:	
  1942                           ;main.c: 529: while(1)
  1943                           
  1944                           
  1945                           ;main.c: 530: {
  1946                           ;main.c: 534: sprintf(display_rpm,"%04d", rpm);
  1947  0ACC  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1948  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  1950  0ACF  00E2               	movwf	??_main^(0+128)
  1951  0AD0  0862               	movf	??_main^(0+128),w
  1952  0AD1  00D1               	movwf	sprintf@f^(0+128)
  1953  0AD2  0842               	movf	(_rpm+1)^(0+128),w
  1954  0AD3  01D3               	clrf	((?_sprintf+1)^(0+128)+1)
  1955  0AD4  07D3               	addwf	((?_sprintf+1)^(0+128)+1),f
  1956  0AD5  0841               	movf	_rpm^(0+128),w
  1957  0AD6  01D2               	clrf	(?_sprintf^(0+128)+1)
  1958  0AD7  07D2               	addwf	(?_sprintf^(0+128)+1),f
  1959  0AD8  30A5               	movlw	_display_rpm& (0+255)
  1960  0AD9  120A  158A  2649  120A  158A  	fcall	_sprintf
  1961                           
  1962                           ;main.c: 535: sprintf(display_pwm,"%04d", deltaV);
  1963  0ADE  30C7               	movlw	(STR_14-__stringbase)& (0+255)
  1964  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  1965  0AE0  1303               	bcf	3,6	;RP1=0, select bank1
  1966  0AE1  00E2               	movwf	??_main^(0+128)
  1967  0AE2  0862               	movf	??_main^(0+128),w
  1968  0AE3  00D1               	movwf	sprintf@f^(0+128)
  1969  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0AE6  086E               	movf	_deltaV+1,w
  1972  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0AE9  01D3               	clrf	((?_sprintf+1)^(0+128)+1)
  1975  0AEA  07D3               	addwf	((?_sprintf+1)^(0+128)+1),f
  1976  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0AED  086D               	movf	_deltaV,w
  1979  0AEE  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0AEF  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0AF0  01D2               	clrf	(?_sprintf^(0+128)+1)
  1982  0AF1  07D2               	addwf	(?_sprintf^(0+128)+1),f
  1983  0AF2  309B               	movlw	_display_pwm& (0+255)
  1984  0AF3  120A  158A  2649  120A  158A  	fcall	_sprintf
  1985                           
  1986                           ;main.c: 539: USART_WriteString(display_rpm);
  1987  0AF8  30A5               	movlw	_display_rpm& (0+255)
  1988  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0AFB  00C4               	movwf	USART_WriteString@str^(0+128)
  1991  0AFC  3001               	movlw	1
  1992  0AFD  00C5               	movwf	(USART_WriteString@str+1)^(0+128)
  1993  0AFE  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  1994                           
  1995                           ;main.c: 540: USART_WriteString("\n\r");
  1996  0B03  30B6               	movlw	low ((STR_2+8)-__stringbase)
  1997  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0B06  00C4               	movwf	USART_WriteString@str^(0+128)
  2000  0B07  3080               	movlw	128
  2001  0B08  00C5               	movwf	(USART_WriteString@str+1)^(0+128)
  2002  0B09  160A  118A  2280  120A  158A  	fcall	_USART_WriteString
  2003                           
  2004                           ;main.c: 543: LCD_Clear();
  2005  0B0E  160A  118A  2226  120A  158A  	fcall	_LCD_Clear
  2006                           
  2007                           ;main.c: 544: LCD_Cursor(0,0);
  2008  0B13  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0B14  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0B15  01C3               	clrf	LCD_Cursor@Col^(0+128)
  2011  0B16  3000               	movlw	0
  2012  0B17  160A  118A  215A  120A  158A  	fcall	_LCD_Cursor
  2013                           
  2014                           ;main.c: 545: LCD_WriteString("RPM: ");
  2015  0B1C  30C1               	movlw	low (STR_17-__stringbase)
  2016  0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0B1E  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0B1F  00C5               	movwf	LCD_WriteString@Str^(0+128)
  2019  0B20  3080               	movlw	128
  2020  0B21  00C6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2021  0B22  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2022                           
  2023                           ;main.c: 546: LCD_Cursor(0,6);
  2024  0B27  3006               	movlw	6
  2025  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0B29  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0B2A  00E2               	movwf	??_main^(0+128)
  2028  0B2B  0862               	movf	??_main^(0+128),w
  2029  0B2C  00C3               	movwf	LCD_Cursor@Col^(0+128)
  2030  0B2D  3000               	movlw	0
  2031  0B2E  160A  118A  215A  120A  158A  	fcall	_LCD_Cursor
  2032                           
  2033                           ;main.c: 547: LCD_WriteString(display_rpm);
  2034  0B33  30A5               	movlw	_display_rpm& (0+255)
  2035  0B34  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0B35  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0B36  00C5               	movwf	LCD_WriteString@Str^(0+128)
  2038  0B37  3001               	movlw	1
  2039  0B38  00C6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2040  0B39  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2041                           
  2042                           ;main.c: 548: LCD_Cursor(1,0);
  2043  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0B40  01C3               	clrf	LCD_Cursor@Col^(0+128)
  2046  0B41  3001               	movlw	1
  2047  0B42  160A  118A  215A  120A  158A  	fcall	_LCD_Cursor
  2048                           
  2049                           ;main.c: 549: LCD_WriteString("Delta: ");
  2050  0B47  30B9               	movlw	low (STR_18-__stringbase)
  2051  0B48  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0B49  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0B4A  00C5               	movwf	LCD_WriteString@Str^(0+128)
  2054  0B4B  3080               	movlw	128
  2055  0B4C  00C6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2056  0B4D  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2057                           
  2058                           ;main.c: 550: LCD_Cursor(1,6);
  2059  0B52  3006               	movlw	6
  2060  0B53  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0B54  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0B55  00E2               	movwf	??_main^(0+128)
  2063  0B56  0862               	movf	??_main^(0+128),w
  2064  0B57  00C3               	movwf	LCD_Cursor@Col^(0+128)
  2065  0B58  3001               	movlw	1
  2066  0B59  160A  118A  215A  120A  158A  	fcall	_LCD_Cursor
  2067                           
  2068                           ;main.c: 551: LCD_WriteString(display_pwm);
  2069  0B5E  309B               	movlw	_display_pwm& (0+255)
  2070  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0B60  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0B61  00C5               	movwf	LCD_WriteString@Str^(0+128)
  2073  0B62  3001               	movlw	1
  2074  0B63  00C6               	movwf	(LCD_WriteString@Str+1)^(0+128)
  2075  0B64  160A  118A  224F  120A  158A  	fcall	_LCD_WriteString
  2076                           
  2077                           ;main.c: 553: _delay((unsigned long)((200)*(18432000/4000.0)));
  2078  0B69  3005               	movlw	5
  2079  0B6A  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0B6B  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0B6C  00E4               	movwf	(??_main^(0+128)+2)
  2082  0B6D  30AD               	movlw	173
  2083  0B6E  00E3               	movwf	(??_main^(0+128)+1)
  2084  0B6F  30E0               	movlw	224
  2085  0B70  00E2               	movwf	??_main^(0+128)
  2086  0B71                     u4097:	
  2087  0B71  0BE2               	decfsz	??_main^(0+128),f
  2088  0B72  2B71               	goto	u4097
  2089  0B73  0BE3               	decfsz	(??_main^(0+128)+1),f
  2090  0B74  2B71               	goto	u4097
  2091  0B75  0BE4               	decfsz	(??_main^(0+128)+2),f
  2092  0B76  2B71               	goto	u4097
  2093  0B77  2ACC               	goto	l199
  2094  0B78                     __end_of_main:	
  2095                           
  2096                           	psect	text1
  2097  0E49                     __ptext1:	
  2098 ;; *************** function _sprintf *****************
  2099 ;; Defined at:
  2100 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  sp              1    wreg     PTR unsigned char 
  2103 ;;		 -> display_pwm(10), display_rpm(10), 
  2104 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2105 ;;		 -> STR_15(5), STR_14(5), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2108 ;;		 -> display_pwm(10), display_rpm(10), 
  2109 ;;  _val            4   22[BANK1 ] struct .
  2110 ;;  width           2   27[BANK1 ] int 
  2111 ;;  c               1   30[BANK1 ] char 
  2112 ;;  flag            1   26[BANK1 ] unsigned char 
  2113 ;;  prec            1   21[BANK1 ] char 
  2114 ;;  ap              1   20[BANK1 ] PTR void [1]
  2115 ;;		 -> ?_sprintf(2), 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2   14[BANK1 ] int 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       0       3       0       0
  2126 ;;      Locals:         0       0      11       0       0
  2127 ;;      Temps:          0       0       3       0       0
  2128 ;;      Totals:         0       0      17       0       0
  2129 ;;Total ram usage:       17 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    6
  2132 ;; This function calls:
  2133 ;;		___lwdiv
  2134 ;;		___lwmod
  2135 ;;		___wmul
  2136 ;;		_isdigit
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _sprintf
  2144  0E49                     _sprintf:	
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2148                           ;sprintf@sp stored from wreg
  2149  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  2151  0E4B  00E0               	movwf	sprintf@sp^(0+128)
  2152                           
  2153                           ;doprnt.c: 494: va_list ap;
  2154                           ;doprnt.c: 499: signed char c;
  2155                           ;doprnt.c: 501: int width;
  2156                           ;doprnt.c: 506: signed char prec;
  2157                           ;doprnt.c: 508: unsigned char flag;
  2158                           ;doprnt.c: 527: union {
  2159                           ;doprnt.c: 528: unsigned int _val;
  2160                           ;doprnt.c: 529: struct {
  2161                           ;doprnt.c: 530: const char * _cp;
  2162                           ;doprnt.c: 531: unsigned _len;
  2163                           ;doprnt.c: 532: } _str;
  2164                           ;doprnt.c: 533: } _val;
  2165                           ;doprnt.c: 542: *ap = __va_start();
  2166  0E4C  30D2               	movlw	(?_sprintf+1)& (0+255)
  2167  0E4D  00D4               	movwf	??_sprintf^(0+128)
  2168  0E4E  0854               	movf	??_sprintf^(0+128),w
  2169  0E4F  00D7               	movwf	sprintf@ap^(0+128)
  2170  0E50                     l3123:	
  2171                           ;doprnt.c: 545: while(c = *f++) {
  2172                           
  2173  0E50  3001               	movlw	1
  2174  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  2175  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  2176  0E53  07D1               	addwf	sprintf@f^(0+128),f
  2177  0E54  30FF               	movlw	-1
  2178  0E55  0751               	addwf	sprintf@f^(0+128),w
  2179  0E56  0084               	movwf	4
  2180  0E57  120A  158A  200A  120A  158A  	fcall	stringdir
  2181  0E5C  00D4               	movwf	??_sprintf^(0+128)
  2182  0E5D  0854               	movf	??_sprintf^(0+128),w
  2183  0E5E  00E1               	movwf	sprintf@c^(0+128)
  2184  0E5F  08E1               	movf	sprintf@c^(0+128),f
  2185  0E60  1903               	btfsc	3,2
  2186  0E61  2FF9               	goto	l3125
  2187                           
  2188                           ;doprnt.c: 547: if(c != '%')
  2189  0E62  0861               	movf	sprintf@c^(0+128),w
  2190  0E63  3A25               	xorlw	37
  2191  0E64  1903               	skipnz
  2192  0E65  2E72               	goto	l3027
  2193                           
  2194                           ;doprnt.c: 549: {
  2195                           ;doprnt.c: 550: ((*sp++ = (c)));
  2196  0E66  0861               	movf	sprintf@c^(0+128),w
  2197  0E67  00D4               	movwf	??_sprintf^(0+128)
  2198  0E68  0860               	movf	sprintf@sp^(0+128),w
  2199  0E69  0084               	movwf	4
  2200  0E6A  0854               	movf	??_sprintf^(0+128),w
  2201  0E6B  1783               	bsf	3,7	;select IRP bank2
  2202  0E6C  0080               	movwf	0
  2203  0E6D  3001               	movlw	1
  2204  0E6E  00D4               	movwf	??_sprintf^(0+128)
  2205  0E6F  0854               	movf	??_sprintf^(0+128),w
  2206  0E70  07E0               	addwf	sprintf@sp^(0+128),f
  2207                           
  2208                           ;doprnt.c: 551: continue;
  2209  0E71  2E50               	goto	l3123
  2210  0E72                     l3027:	
  2211                           
  2212                           ;doprnt.c: 552: }
  2213                           ;doprnt.c: 555: width = 0;
  2214  0E72  01DE               	clrf	sprintf@width^(0+128)
  2215  0E73  01DF               	clrf	(sprintf@width+1)^(0+128)
  2216                           
  2217                           ;doprnt.c: 557: flag = 0;
  2218  0E74  01DD               	clrf	sprintf@flag^(0+128)
  2219                           
  2220                           ;doprnt.c: 560: switch(*f) {
  2221                           
  2222                           ;doprnt.c: 559: for(;;) {
  2223  0E75  2E7B               	goto	l3033
  2224  0E76                     l476:	
  2225                           ;doprnt.c: 588: case '0':
  2226                           
  2227                           
  2228                           ;doprnt.c: 589: flag |= 0x04;
  2229  0E76  155D               	bsf	sprintf@flag^(0+128),2
  2230                           
  2231                           ;doprnt.c: 590: f++;
  2232  0E77  3001               	movlw	1
  2233  0E78  00D4               	movwf	??_sprintf^(0+128)
  2234  0E79  0854               	movf	??_sprintf^(0+128),w
  2235  0E7A  07D1               	addwf	sprintf@f^(0+128),f
  2236  0E7B                     l3033:	
  2237                           ;doprnt.c: 593: }
  2238                           
  2239                           ;doprnt.c: 591: continue;
  2240                           
  2241  0E7B  0851               	movf	sprintf@f^(0+128),w
  2242  0E7C  0084               	movwf	4
  2243  0E7D  120A  158A  200A  120A  158A  	fcall	stringdir
  2244                           
  2245                           ; Switch size 1, requested type "space"
  2246                           ; Number of cases is 1, Range of values is 48 to 48
  2247                           ; switch strategies available:
  2248                           ; Name         Instructions Cycles
  2249                           ; simple_byte            4     3 (average)
  2250                           ; direct_byte           14    11 (fixed)
  2251                           ; jumptable            263     9 (fixed)
  2252                           ;	Chosen strategy is simple_byte
  2253  0E82  3A30               	xorlw	48	; case 48
  2254  0E83  1903               	skipnz
  2255  0E84  2E76               	goto	l476
  2256  0E85  2E86               	goto	l3035
  2257  0E86                     l3035:	
  2258                           ;doprnt.c: 595: }
  2259                           
  2260                           ;doprnt.c: 594: break;
  2261                           
  2262                           
  2263                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2264  0E86  0851               	movf	sprintf@f^(0+128),w
  2265  0E87  0084               	movwf	4
  2266  0E88  120A  158A  200A  120A  158A  	fcall	stringdir
  2267  0E8D  160A  118A  20AC  120A  158A  	fcall	_isdigit
  2268  0E92  1C03               	btfss	3,0
  2269  0E93  2ED6               	goto	l3049
  2270                           
  2271                           ;doprnt.c: 607: width = 0;
  2272  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0E96  01DE               	clrf	sprintf@width^(0+128)
  2275  0E97  01DF               	clrf	(sprintf@width+1)^(0+128)
  2276  0E98                     l3039:	
  2277                           ;doprnt.c: 608: do {
  2278                           
  2279                           
  2280                           ;doprnt.c: 609: width *= 10;
  2281  0E98  300A               	movlw	10
  2282  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0E9B  00C3               	movwf	___wmul@multiplier^(0+128)
  2285  0E9C  3000               	movlw	0
  2286  0E9D  00C4               	movwf	(___wmul@multiplier^(0+128)+1)
  2287  0E9E  085F               	movf	(sprintf@width+1)^(0+128),w
  2288  0E9F  01C6               	clrf	(___wmul@multiplicand+1)^(0+128)
  2289  0EA0  07C6               	addwf	(___wmul@multiplicand+1)^(0+128),f
  2290  0EA1  085E               	movf	sprintf@width^(0+128),w
  2291  0EA2  01C5               	clrf	___wmul@multiplicand^(0+128)
  2292  0EA3  07C5               	addwf	___wmul@multiplicand^(0+128),f
  2293  0EA4  120A  158A  20DE  120A  158A  	fcall	___wmul
  2294  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0EAB  0844               	movf	(?___wmul+1)^(0+128),w
  2297  0EAC  01DF               	clrf	(sprintf@width+1)^(0+128)
  2298  0EAD  07DF               	addwf	(sprintf@width+1)^(0+128),f
  2299  0EAE  0843               	movf	?___wmul^(0+128),w
  2300  0EAF  01DE               	clrf	sprintf@width^(0+128)
  2301  0EB0  07DE               	addwf	sprintf@width^(0+128),f
  2302                           
  2303                           ;doprnt.c: 610: width += *f++ - '0';
  2304  0EB1  0851               	movf	sprintf@f^(0+128),w
  2305  0EB2  0084               	movwf	4
  2306  0EB3  120A  158A  200A  120A  158A  	fcall	stringdir
  2307  0EB8  3ED0               	addlw	208
  2308  0EB9  00D4               	movwf	??_sprintf^(0+128)
  2309  0EBA  30FF               	movlw	255
  2310  0EBB  1803               	skipnc
  2311  0EBC  3000               	movlw	0
  2312  0EBD  00D5               	movwf	(??_sprintf^(0+128)+1)
  2313  0EBE  0854               	movf	??_sprintf^(0+128),w
  2314  0EBF  07DE               	addwf	sprintf@width^(0+128),f
  2315  0EC0  1803               	skipnc
  2316  0EC1  0ADF               	incf	(sprintf@width+1)^(0+128),f
  2317  0EC2  0855               	movf	(??_sprintf+1)^(0+128),w
  2318  0EC3  07DF               	addwf	(sprintf@width+1)^(0+128),f
  2319  0EC4  3001               	movlw	1
  2320  0EC5  00D4               	movwf	??_sprintf^(0+128)
  2321  0EC6  0854               	movf	??_sprintf^(0+128),w
  2322  0EC7  07D1               	addwf	sprintf@f^(0+128),f
  2323                           
  2324                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2325  0EC8  0851               	movf	sprintf@f^(0+128),w
  2326  0EC9  0084               	movwf	4
  2327  0ECA  120A  158A  200A  120A  158A  	fcall	stringdir
  2328  0ECF  160A  118A  20AC  120A  158A  	fcall	_isdigit
  2329  0ED4  1803               	btfsc	3,0
  2330  0ED5  2E98               	goto	l3039
  2331  0ED6                     l3049:	
  2332                           ;doprnt.c: 831: }
  2333                           
  2334                           ;doprnt.c: 822: continue;
  2335                           
  2336                           ;doprnt.c: 811: default:
  2337                           
  2338                           ;doprnt.c: 707: case 'i':
  2339                           ;doprnt.c: 708: break;
  2340                           
  2341                           ;doprnt.c: 706: case 'd':
  2342                           
  2343                           ;doprnt.c: 647: goto alldone;
  2344                           
  2345                           ;doprnt.c: 646: case 0:
  2346                           
  2347                           ;doprnt.c: 617: }
  2348                           ;doprnt.c: 644: switch(c = *f++) {
  2349                           
  2350  0ED6  3001               	movlw	1
  2351  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0ED9  07D1               	addwf	sprintf@f^(0+128),f
  2354  0EDA  30FF               	movlw	-1
  2355  0EDB  0751               	addwf	sprintf@f^(0+128),w
  2356  0EDC  0084               	movwf	4
  2357  0EDD  120A  158A  200A  120A  158A  	fcall	stringdir
  2358  0EE2  00E1               	movwf	sprintf@c^(0+128)
  2359                           
  2360                           ; Switch size 1, requested type "space"
  2361                           ; Number of cases is 3, Range of values is 0 to 105
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte           10     6 (average)
  2365                           ; jumptable            260     6 (fixed)
  2366                           ;	Chosen strategy is simple_byte
  2367  0EE3  3A00               	xorlw	0	; case 0
  2368  0EE4  1903               	skipnz
  2369  0EE5  2FF9               	goto	l3125
  2370  0EE6  3A64               	xorlw	100	; case 100
  2371  0EE7  1903               	skipnz
  2372  0EE8  2EED               	goto	l3051
  2373  0EE9  3A0D               	xorlw	13	; case 105
  2374  0EEA  1903               	skipnz
  2375  0EEB  2EED               	goto	l3051
  2376  0EEC  2E50               	goto	l3123
  2377  0EED                     l3051:	
  2378                           
  2379                           ;doprnt.c: 1262: {
  2380                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2381  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2383  0EEF  0857               	movf	sprintf@ap^(0+128),w
  2384  0EF0  0084               	movwf	4
  2385  0EF1  1383               	bcf	3,7	;select IRP bank0
  2386  0EF2  0800               	movf	0,w
  2387  0EF3  00D9               	movwf	sprintf@_val^(0+128)
  2388  0EF4  0A84               	incf	4,f
  2389  0EF5  0800               	movf	0,w
  2390  0EF6  00DA               	movwf	(sprintf@_val+1)^(0+128)
  2391  0EF7  3002               	movlw	2
  2392  0EF8  00D4               	movwf	??_sprintf^(0+128)
  2393  0EF9  0854               	movf	??_sprintf^(0+128),w
  2394  0EFA  07D7               	addwf	sprintf@ap^(0+128),f
  2395                           
  2396                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2397  0EFB  1FDA               	btfss	(sprintf@_val+1)^(0+128),7
  2398  0EFC  2F06               	goto	l3061
  2399                           
  2400                           ;doprnt.c: 1271: flag |= 0x03;
  2401  0EFD  3003               	movlw	3
  2402  0EFE  00D4               	movwf	??_sprintf^(0+128)
  2403  0EFF  0854               	movf	??_sprintf^(0+128),w
  2404  0F00  04DD               	iorwf	sprintf@flag^(0+128),f
  2405                           
  2406                           ;doprnt.c: 1272: _val._val = -_val._val;
  2407  0F01  09D9               	comf	sprintf@_val^(0+128),f
  2408  0F02  09DA               	comf	(sprintf@_val+1)^(0+128),f
  2409  0F03  0AD9               	incf	sprintf@_val^(0+128),f
  2410  0F04  1903               	skipnz
  2411  0F05  0ADA               	incf	(sprintf@_val+1)^(0+128),f
  2412  0F06                     l3061:	
  2413                           
  2414                           ;doprnt.c: 1273: }
  2415                           ;doprnt.c: 1275: }
  2416                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2417  0F06  01E1               	clrf	sprintf@c^(0+128)
  2418  0F07  0AE1               	incf	sprintf@c^(0+128),f
  2419  0F08  0861               	movf	sprintf@c^(0+128),w
  2420  0F09  3A05               	xorlw	5
  2421  0F0A  1903               	btfsc	3,2
  2422  0F0B  2F2D               	goto	l3073
  2423  0F0C                     l3065:	
  2424                           
  2425                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2426  0F0C  0861               	movf	sprintf@c^(0+128),w
  2427  0F0D  00D4               	movwf	??_sprintf^(0+128)
  2428  0F0E  0754               	addwf	??_sprintf^(0+128),w
  2429  0F0F  3E01               	addlw	low (_dpowers-__stringbase)
  2430  0F10  0084               	movwf	4
  2431  0F11  120A  158A  200A  120A  158A  	fcall	stringdir
  2432  0F16  00D5               	movwf	(??_sprintf+1)^(0+128)
  2433  0F17  120A  158A  200A  120A  158A  	fcall	stringdir
  2434  0F1C  00D6               	movwf	((??_sprintf+1)^(0+128)+1)
  2435  0F1D  0856               	movf	(??_sprintf+2)^(0+128),w
  2436  0F1E  025A               	subwf	(sprintf@_val+1)^(0+128),w
  2437  0F1F  1D03               	skipz
  2438  0F20  2F23               	goto	u3675
  2439  0F21  0855               	movf	(??_sprintf+1)^(0+128),w
  2440  0F22  0259               	subwf	sprintf@_val^(0+128),w
  2441  0F23                     u3675:	
  2442  0F23  1C03               	btfss	3,0
  2443  0F24  2F2D               	goto	l3073
  2444                           
  2445                           ;doprnt.c: 1316: break;
  2446  0F25  3001               	movlw	1
  2447  0F26  00D4               	movwf	??_sprintf^(0+128)
  2448  0F27  0854               	movf	??_sprintf^(0+128),w
  2449  0F28  07E1               	addwf	sprintf@c^(0+128),f
  2450  0F29  0861               	movf	sprintf@c^(0+128),w
  2451  0F2A  3A05               	xorlw	5
  2452  0F2B  1D03               	skipz
  2453  0F2C  2F0C               	goto	l3065
  2454  0F2D                     l3073:	
  2455                           
  2456                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2457  0F2D  085F               	movf	(sprintf@width+1)^(0+128),w
  2458  0F2E  045E               	iorwf	sprintf@width^(0+128),w
  2459  0F2F  1903               	skipnz
  2460  0F30  2F3B               	goto	l494
  2461  0F31  085D               	movf	sprintf@flag^(0+128),w
  2462  0F32  3903               	andlw	3
  2463  0F33  1903               	btfsc	3,2
  2464  0F34  2F3B               	goto	l494
  2465                           
  2466                           ;doprnt.c: 1355: width--;
  2467  0F35  30FF               	movlw	255
  2468  0F36  07DE               	addwf	sprintf@width^(0+128),f
  2469  0F37  1803               	skipnc
  2470  0F38  0ADF               	incf	(sprintf@width+1)^(0+128),f
  2471  0F39  30FF               	movlw	255
  2472  0F3A  07DF               	addwf	(sprintf@width+1)^(0+128),f
  2473  0F3B                     l494:	
  2474                           
  2475                           ;doprnt.c: 1390: if(width > c)
  2476  0F3B  0861               	movf	sprintf@c^(0+128),w
  2477  0F3C  00D4               	movwf	??_sprintf^(0+128)
  2478  0F3D  01D5               	clrf	(??_sprintf^(0+128)+1)
  2479  0F3E  1BD4               	btfsc	??_sprintf^(0+128),7
  2480  0F3F  03D5               	decf	(??_sprintf^(0+128)+1),f
  2481  0F40  0855               	movf	(??_sprintf+1)^(0+128),w
  2482  0F41  3A80               	xorlw	128
  2483  0F42  00D6               	movwf	(??_sprintf+2)^(0+128)
  2484  0F43  085F               	movf	(sprintf@width+1)^(0+128),w
  2485  0F44  3A80               	xorlw	128
  2486  0F45  0256               	subwf	(??_sprintf+2)^(0+128),w
  2487  0F46  1D03               	skipz
  2488  0F47  2F4A               	goto	u3715
  2489  0F48  085E               	movf	sprintf@width^(0+128),w
  2490  0F49  0254               	subwf	??_sprintf^(0+128),w
  2491  0F4A                     u3715:	
  2492  0F4A  1803               	skipnc
  2493  0F4B  2F5A               	goto	l3081
  2494                           
  2495                           ;doprnt.c: 1391: width -= c;
  2496  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2497  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2498  0F4E  0861               	movf	sprintf@c^(0+128),w
  2499  0F4F  00D4               	movwf	??_sprintf^(0+128)
  2500  0F50  01D5               	clrf	(??_sprintf^(0+128)+1)
  2501  0F51  1BD4               	btfsc	??_sprintf^(0+128),7
  2502  0F52  03D5               	decf	(??_sprintf^(0+128)+1),f
  2503  0F53  0854               	movf	??_sprintf^(0+128),w
  2504  0F54  02DE               	subwf	sprintf@width^(0+128),f
  2505  0F55  0855               	movf	(??_sprintf+1)^(0+128),w
  2506  0F56  1C03               	skipc
  2507  0F57  03DF               	decf	(sprintf@width+1)^(0+128),f
  2508  0F58  02DF               	subwf	(sprintf@width+1)^(0+128),f
  2509  0F59  2F5E               	goto	l3083
  2510  0F5A                     l3081:	
  2511                           
  2512                           ;doprnt.c: 1392: else
  2513                           ;doprnt.c: 1393: width = 0;
  2514  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0F5C  01DE               	clrf	sprintf@width^(0+128)
  2517  0F5D  01DF               	clrf	(sprintf@width+1)^(0+128)
  2518  0F5E                     l3083:	
  2519                           
  2520                           ;doprnt.c: 1396: if(flag & 0x04) {
  2521  0F5E  1D5D               	btfss	sprintf@flag^(0+128),2
  2522  0F5F  2F85               	goto	l3099
  2523                           
  2524                           ;doprnt.c: 1401: if(flag & 0x03)
  2525  0F60  085D               	movf	sprintf@flag^(0+128),w
  2526  0F61  3903               	andlw	3
  2527  0F62  1903               	btfsc	3,2
  2528  0F63  2F6F               	goto	l3091
  2529                           
  2530                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2531  0F64  302D               	movlw	45
  2532  0F65  00D4               	movwf	??_sprintf^(0+128)
  2533  0F66  0860               	movf	sprintf@sp^(0+128),w
  2534  0F67  0084               	movwf	4
  2535  0F68  0854               	movf	??_sprintf^(0+128),w
  2536  0F69  1783               	bsf	3,7	;select IRP bank2
  2537  0F6A  0080               	movwf	0
  2538  0F6B  3001               	movlw	1
  2539  0F6C  00D4               	movwf	??_sprintf^(0+128)
  2540  0F6D  0854               	movf	??_sprintf^(0+128),w
  2541  0F6E  07E0               	addwf	sprintf@sp^(0+128),f
  2542  0F6F                     l3091:	
  2543                           
  2544                           ;doprnt.c: 1424: if(width)
  2545  0F6F  085F               	movf	(sprintf@width+1)^(0+128),w
  2546  0F70  045E               	iorwf	sprintf@width^(0+128),w
  2547  0F71  1903               	skipnz
  2548  0F72  2FAD               	goto	l3113
  2549                           
  2550                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2551                           
  2552                           ;doprnt.c: 1425: do
  2553  0F73  3030               	movlw	48
  2554  0F74  00D4               	movwf	??_sprintf^(0+128)
  2555  0F75  0860               	movf	sprintf@sp^(0+128),w
  2556  0F76  0084               	movwf	4
  2557  0F77  0854               	movf	??_sprintf^(0+128),w
  2558  0F78  1783               	bsf	3,7	;select IRP bank2
  2559  0F79  0080               	movwf	0
  2560  0F7A  3001               	movlw	1
  2561  0F7B  00D4               	movwf	??_sprintf^(0+128)
  2562  0F7C  0854               	movf	??_sprintf^(0+128),w
  2563  0F7D  07E0               	addwf	sprintf@sp^(0+128),f
  2564                           
  2565                           ;doprnt.c: 1427: while(--width);
  2566  0F7E  30FF               	movlw	255
  2567  0F7F  07DE               	addwf	sprintf@width^(0+128),f
  2568  0F80  1803               	skipnc
  2569  0F81  0ADF               	incf	(sprintf@width+1)^(0+128),f
  2570  0F82  30FF               	movlw	255
  2571  0F83  07DF               	addwf	(sprintf@width+1)^(0+128),f
  2572  0F84  2F6F               	goto	l3091
  2573  0F85                     l3099:	
  2574                           ;doprnt.c: 1429: } else
  2575                           
  2576                           
  2577                           ;doprnt.c: 1431: {
  2578                           ;doprnt.c: 1433: if(width
  2579                           ;doprnt.c: 1437: )
  2580  0F85  085F               	movf	(sprintf@width+1)^(0+128),w
  2581  0F86  045E               	iorwf	sprintf@width^(0+128),w
  2582  0F87  1903               	skipnz
  2583  0F88  2F9E               	goto	l3107
  2584  0F89                     l3101:	
  2585                           ;doprnt.c: 1438: do
  2586                           
  2587                           
  2588                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2589  0F89  3020               	movlw	32
  2590  0F8A  00D4               	movwf	??_sprintf^(0+128)
  2591  0F8B  0860               	movf	sprintf@sp^(0+128),w
  2592  0F8C  0084               	movwf	4
  2593  0F8D  0854               	movf	??_sprintf^(0+128),w
  2594  0F8E  1783               	bsf	3,7	;select IRP bank2
  2595  0F8F  0080               	movwf	0
  2596  0F90  3001               	movlw	1
  2597  0F91  00D4               	movwf	??_sprintf^(0+128)
  2598  0F92  0854               	movf	??_sprintf^(0+128),w
  2599  0F93  07E0               	addwf	sprintf@sp^(0+128),f
  2600                           
  2601                           ;doprnt.c: 1440: while(--width);
  2602  0F94  30FF               	movlw	255
  2603  0F95  07DE               	addwf	sprintf@width^(0+128),f
  2604  0F96  1803               	skipnc
  2605  0F97  0ADF               	incf	(sprintf@width+1)^(0+128),f
  2606  0F98  30FF               	movlw	255
  2607  0F99  07DF               	addwf	(sprintf@width+1)^(0+128),f
  2608  0F9A  085F               	movf	(sprintf@width+1)^(0+128),w
  2609  0F9B  045E               	iorwf	sprintf@width^(0+128),w
  2610  0F9C  1D03               	skipz
  2611  0F9D  2F89               	goto	l3101
  2612  0F9E                     l3107:	
  2613                           
  2614                           ;doprnt.c: 1447: if(flag & 0x03)
  2615  0F9E  085D               	movf	sprintf@flag^(0+128),w
  2616  0F9F  3903               	andlw	3
  2617  0FA0  1903               	btfsc	3,2
  2618  0FA1  2FAD               	goto	l3113
  2619                           
  2620                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2621  0FA2  302D               	movlw	45
  2622  0FA3  00D4               	movwf	??_sprintf^(0+128)
  2623  0FA4  0860               	movf	sprintf@sp^(0+128),w
  2624  0FA5  0084               	movwf	4
  2625  0FA6  0854               	movf	??_sprintf^(0+128),w
  2626  0FA7  1783               	bsf	3,7	;select IRP bank2
  2627  0FA8  0080               	movwf	0
  2628  0FA9  3001               	movlw	1
  2629  0FAA  00D4               	movwf	??_sprintf^(0+128)
  2630  0FAB  0854               	movf	??_sprintf^(0+128),w
  2631  0FAC  07E0               	addwf	sprintf@sp^(0+128),f
  2632  0FAD                     l3113:	
  2633                           
  2634                           ;doprnt.c: 1478: }
  2635                           ;doprnt.c: 1481: prec = c;
  2636  0FAD  0861               	movf	sprintf@c^(0+128),w
  2637  0FAE  00D4               	movwf	??_sprintf^(0+128)
  2638  0FAF  0854               	movf	??_sprintf^(0+128),w
  2639  0FB0  00D8               	movwf	sprintf@prec^(0+128)
  2640  0FB1                     l3121:	
  2641                           ;doprnt.c: 1483: while(prec--) {
  2642                           
  2643  0FB1  30FF               	movlw	-1
  2644  0FB2  00D4               	movwf	??_sprintf^(0+128)
  2645  0FB3  0854               	movf	??_sprintf^(0+128),w
  2646  0FB4  07D8               	addwf	sprintf@prec^(0+128),f
  2647  0FB5  0858               	movf	sprintf@prec^(0+128),w
  2648  0FB6  3AFF               	xorlw	-1
  2649  0FB7  1903               	btfsc	3,2
  2650  0FB8  2E50               	goto	l3123
  2651                           
  2652                           ;doprnt.c: 1487: {
  2653                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2654  0FB9  300A               	movlw	10
  2655  0FBA  00CB               	movwf	___lwmod@divisor^(0+128)
  2656  0FBB  3000               	movlw	0
  2657  0FBC  00CC               	movwf	(___lwmod@divisor^(0+128)+1)
  2658  0FBD  0858               	movf	sprintf@prec^(0+128),w
  2659  0FBE  00D4               	movwf	??_sprintf^(0+128)
  2660  0FBF  0754               	addwf	??_sprintf^(0+128),w
  2661  0FC0  3E01               	addlw	low (_dpowers-__stringbase)
  2662  0FC1  0084               	movwf	4
  2663  0FC2  120A  158A  200A  120A  158A  	fcall	stringdir
  2664  0FC7  00C3               	movwf	___lwdiv@divisor^(0+128)
  2665  0FC8  120A  158A  200A  120A  158A  	fcall	stringdir
  2666  0FCD  00C4               	movwf	(___lwdiv@divisor+1)^(0+128)
  2667  0FCE  085A               	movf	(sprintf@_val+1)^(0+128),w
  2668  0FCF  01C6               	clrf	(___lwdiv@dividend+1)^(0+128)
  2669  0FD0  07C6               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2670  0FD1  0859               	movf	sprintf@_val^(0+128),w
  2671  0FD2  01C5               	clrf	___lwdiv@dividend^(0+128)
  2672  0FD3  07C5               	addwf	___lwdiv@dividend^(0+128),f
  2673  0FD4  160A  118A  2325  120A  158A  	fcall	___lwdiv
  2674  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2676  0FDB  0844               	movf	(?___lwdiv+1)^(0+128),w
  2677  0FDC  01CE               	clrf	(___lwmod@dividend+1)^(0+128)
  2678  0FDD  07CE               	addwf	(___lwmod@dividend+1)^(0+128),f
  2679  0FDE  0843               	movf	?___lwdiv^(0+128),w
  2680  0FDF  01CD               	clrf	___lwmod@dividend^(0+128)
  2681  0FE0  07CD               	addwf	___lwmod@dividend^(0+128),f
  2682  0FE1  160A  118A  22B1  120A  158A  	fcall	___lwmod
  2683  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0FE8  084B               	movf	?___lwmod^(0+128),w
  2686  0FE9  3E30               	addlw	48
  2687  0FEA  00D5               	movwf	(??_sprintf+1)^(0+128)
  2688  0FEB  0855               	movf	(??_sprintf+1)^(0+128),w
  2689  0FEC  00E1               	movwf	sprintf@c^(0+128)
  2690                           
  2691                           ;doprnt.c: 1532: }
  2692                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2693  0FED  0861               	movf	sprintf@c^(0+128),w
  2694  0FEE  00D4               	movwf	??_sprintf^(0+128)
  2695  0FEF  0860               	movf	sprintf@sp^(0+128),w
  2696  0FF0  0084               	movwf	4
  2697  0FF1  0854               	movf	??_sprintf^(0+128),w
  2698  0FF2  1783               	bsf	3,7	;select IRP bank2
  2699  0FF3  0080               	movwf	0
  2700  0FF4  3001               	movlw	1
  2701  0FF5  00D4               	movwf	??_sprintf^(0+128)
  2702  0FF6  0854               	movf	??_sprintf^(0+128),w
  2703  0FF7  07E0               	addwf	sprintf@sp^(0+128),f
  2704  0FF8  2FB1               	goto	l3121
  2705  0FF9                     l3125:	
  2706                           ;doprnt.c: 1534: }
  2707                           ;doprnt.c: 1542: }
  2708                           ;doprnt.c: 1544: alldone:
  2709                           
  2710                           
  2711                           ;doprnt.c: 1547: *sp = 0;
  2712  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0FFB  0860               	movf	sprintf@sp^(0+128),w
  2715  0FFC  0084               	movwf	4
  2716  0FFD  1783               	bsf	3,7	;select IRP bank2
  2717  0FFE  0180               	clrf	0
  2718  0FFF  0008               	return
  2719  1000                     __end_of_sprintf:	
  2720                           ;doprnt.c: 1549: return 0;
  2721                           ;	Return value of _sprintf is never used
  2722                           
  2723                           
  2724                           	psect	text2
  2725  10AC                     __ptext2:	
  2726 ;; *************** function _isdigit *****************
  2727 ;; Defined at:
  2728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  c               1    wreg     unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  c               1    1[BANK1 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       0       0       0       0
  2743 ;;      Locals:         0       0       2       0       0
  2744 ;;      Temps:          0       0       0       0       0
  2745 ;;      Totals:         0       0       2       0       0
  2746 ;;Total ram usage:        2 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    5
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_sprintf
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _isdigit
  2758  10AC                     _isdigit:	
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2762                           ;isdigit@c stored from wreg
  2763  10AC  1683               	bsf	3,5	;RP0=1, select bank1
  2764  10AD  1303               	bcf	3,6	;RP1=0, select bank1
  2765  10AE  00C4               	movwf	isdigit@c^(0+128)
  2766  10AF  01C3               	clrf	_isdigit$1449^(0+128)
  2767  10B0  303A               	movlw	58
  2768  10B1  0244               	subwf	isdigit@c^(0+128),w
  2769  10B2  1803               	skipnc
  2770  10B3  28BA               	goto	l2511
  2771  10B4  3030               	movlw	48
  2772  10B5  0244               	subwf	isdigit@c^(0+128),w
  2773  10B6  1C03               	skipc
  2774  10B7  28BA               	goto	l2511
  2775  10B8  01C3               	clrf	_isdigit$1449^(0+128)
  2776  10B9  0AC3               	incf	_isdigit$1449^(0+128),f
  2777  10BA                     l2511:	
  2778  10BA  0C43               	rrf	_isdigit$1449^(0+128),w
  2779  10BB  0008               	return
  2780  10BC                     __end_of_isdigit:	
  2781                           
  2782                           	psect	text3
  2783  08DE                     __ptext3:	
  2784 ;; *************** function ___wmul *****************
  2785 ;; Defined at:
  2786 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2789 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  product         2    4[BANK1 ] unsigned int 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2    0[BANK1 ] unsigned int 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       4       0       0
  2802 ;;      Locals:         0       0       2       0       0
  2803 ;;      Temps:          0       0       0       0       0
  2804 ;;      Totals:         0       0       6       0       0
  2805 ;;Total ram usage:        6 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_sprintf
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function ___wmul
  2817  08DE                     ___wmul:	
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2821  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  2822  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  2823  08E0  01C7               	clrf	___wmul@product^(0+128)
  2824  08E1  01C8               	clrf	(___wmul@product+1)^(0+128)
  2825  08E2                     l2517:	
  2826  08E2  1C43               	btfss	___wmul@multiplier^(0+128),0
  2827  08E3  28EA               	goto	l595
  2828  08E4  0845               	movf	___wmul@multiplicand^(0+128),w
  2829  08E5  07C7               	addwf	___wmul@product^(0+128),f
  2830  08E6  1803               	skipnc
  2831  08E7  0AC8               	incf	(___wmul@product+1)^(0+128),f
  2832  08E8  0846               	movf	(___wmul@multiplicand+1)^(0+128),w
  2833  08E9  07C8               	addwf	(___wmul@product+1)^(0+128),f
  2834  08EA                     l595:	
  2835  08EA  3001               	movlw	1
  2836  08EB                     u2805:	
  2837  08EB  1003               	clrc
  2838  08EC  0DC5               	rlf	___wmul@multiplicand^(0+128),f
  2839  08ED  0DC6               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2840  08EE  3EFF               	addlw	-1
  2841  08EF  1D03               	skipz
  2842  08F0  28EB               	goto	u2805
  2843  08F1  3001               	movlw	1
  2844  08F2                     u2815:	
  2845  08F2  1003               	clrc
  2846  08F3  0CC4               	rrf	(___wmul@multiplier+1)^(0+128),f
  2847  08F4  0CC3               	rrf	___wmul@multiplier^(0+128),f
  2848  08F5  3EFF               	addlw	-1
  2849  08F6  1D03               	skipz
  2850  08F7  28F2               	goto	u2815
  2851  08F8  0844               	movf	(___wmul@multiplier+1)^(0+128),w
  2852  08F9  0443               	iorwf	___wmul@multiplier^(0+128),w
  2853  08FA  1D03               	skipz
  2854  08FB  28E2               	goto	l2517
  2855  08FC  0848               	movf	(___wmul@product+1)^(0+128),w
  2856  08FD  01C4               	clrf	(?___wmul+1)^(0+128)
  2857  08FE  07C4               	addwf	(?___wmul+1)^(0+128),f
  2858  08FF  0847               	movf	___wmul@product^(0+128),w
  2859  0900  01C3               	clrf	?___wmul^(0+128)
  2860  0901  07C3               	addwf	?___wmul^(0+128),f
  2861  0902  0008               	return
  2862  0903                     __end_of___wmul:	
  2863                           
  2864                           	psect	text4
  2865  12B1                     __ptext4:	
  2866 ;; *************** function ___lwmod *****************
  2867 ;; Defined at:
  2868 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  divisor         2    8[BANK1 ] unsigned int 
  2871 ;;  dividend        2   10[BANK1 ] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  counter         1   13[BANK1 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    8[BANK1 ] unsigned int 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       0       4       0       0
  2884 ;;      Locals:         0       0       1       0       0
  2885 ;;      Temps:          0       0       1       0       0
  2886 ;;      Totals:         0       0       6       0       0
  2887 ;;Total ram usage:        6 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    5
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_sprintf
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function ___lwmod
  2899  12B1                     ___lwmod:	
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2903  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  2904  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  2905  12B3  084C               	movf	(___lwmod@divisor+1)^(0+128),w
  2906  12B4  044B               	iorwf	___lwmod@divisor^(0+128),w
  2907  12B5  1903               	skipnz
  2908  12B6  2AE0               	goto	l2705
  2909  12B7  01D0               	clrf	___lwmod@counter^(0+128)
  2910  12B8  0AD0               	incf	___lwmod@counter^(0+128),f
  2911  12B9                     l2695:	
  2912  12B9  1BCC               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2913  12BA  2AC7               	goto	l2697
  2914  12BB  3001               	movlw	1
  2915  12BC                     u3255:	
  2916  12BC  1003               	clrc
  2917  12BD  0DCB               	rlf	___lwmod@divisor^(0+128),f
  2918  12BE  0DCC               	rlf	(___lwmod@divisor+1)^(0+128),f
  2919  12BF  3EFF               	addlw	-1
  2920  12C0  1D03               	skipz
  2921  12C1  2ABC               	goto	u3255
  2922  12C2  3001               	movlw	1
  2923  12C3  00CF               	movwf	??___lwmod^(0+128)
  2924  12C4  084F               	movf	??___lwmod^(0+128),w
  2925  12C5  07D0               	addwf	___lwmod@counter^(0+128),f
  2926  12C6  2AB9               	goto	l2695
  2927  12C7                     l2697:	
  2928  12C7  084C               	movf	(___lwmod@divisor+1)^(0+128),w
  2929  12C8  024E               	subwf	(___lwmod@dividend+1)^(0+128),w
  2930  12C9  1D03               	skipz
  2931  12CA  2ACD               	goto	u3275
  2932  12CB  084B               	movf	___lwmod@divisor^(0+128),w
  2933  12CC  024D               	subwf	___lwmod@dividend^(0+128),w
  2934  12CD                     u3275:	
  2935  12CD  1C03               	skipc
  2936  12CE  2AD5               	goto	l2701
  2937  12CF  084B               	movf	___lwmod@divisor^(0+128),w
  2938  12D0  02CD               	subwf	___lwmod@dividend^(0+128),f
  2939  12D1  084C               	movf	(___lwmod@divisor+1)^(0+128),w
  2940  12D2  1C03               	skipc
  2941  12D3  03CE               	decf	(___lwmod@dividend+1)^(0+128),f
  2942  12D4  02CE               	subwf	(___lwmod@dividend+1)^(0+128),f
  2943  12D5                     l2701:	
  2944  12D5  3001               	movlw	1
  2945  12D6                     u3285:	
  2946  12D6  1003               	clrc
  2947  12D7  0CCC               	rrf	(___lwmod@divisor+1)^(0+128),f
  2948  12D8  0CCB               	rrf	___lwmod@divisor^(0+128),f
  2949  12D9  3EFF               	addlw	-1
  2950  12DA  1D03               	skipz
  2951  12DB  2AD6               	goto	u3285
  2952  12DC  3001               	movlw	1
  2953  12DD  02D0               	subwf	___lwmod@counter^(0+128),f
  2954  12DE  1D03               	btfss	3,2
  2955  12DF  2AC7               	goto	l2697
  2956  12E0                     l2705:	
  2957  12E0  084E               	movf	(___lwmod@dividend+1)^(0+128),w
  2958  12E1  01CC               	clrf	(?___lwmod+1)^(0+128)
  2959  12E2  07CC               	addwf	(?___lwmod+1)^(0+128),f
  2960  12E3  084D               	movf	___lwmod@dividend^(0+128),w
  2961  12E4  01CB               	clrf	?___lwmod^(0+128)
  2962  12E5  07CB               	addwf	?___lwmod^(0+128),f
  2963  12E6  0008               	return
  2964  12E7                     __end_of___lwmod:	
  2965                           
  2966                           	psect	text5
  2967  1325                     __ptext5:	
  2968 ;; *************** function ___lwdiv *****************
  2969 ;; Defined at:
  2970 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  divisor         2    0[BANK1 ] unsigned int 
  2973 ;;  dividend        2    2[BANK1 ] unsigned int 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  quotient        2    5[BANK1 ] unsigned int 
  2976 ;;  counter         1    7[BANK1 ] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    0[BANK1 ] unsigned int 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       0       4       0       0
  2987 ;;      Locals:         0       0       3       0       0
  2988 ;;      Temps:          0       0       1       0       0
  2989 ;;      Totals:         0       0       8       0       0
  2990 ;;Total ram usage:        8 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    5
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_sprintf
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function ___lwdiv
  3002  1325                     ___lwdiv:	
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3006  1325  1683               	bsf	3,5	;RP0=1, select bank1
  3007  1326  1303               	bcf	3,6	;RP1=0, select bank1
  3008  1327  01C8               	clrf	___lwdiv@quotient^(0+128)
  3009  1328  01C9               	clrf	(___lwdiv@quotient+1)^(0+128)
  3010  1329  0844               	movf	(___lwdiv@divisor+1)^(0+128),w
  3011  132A  0443               	iorwf	___lwdiv@divisor^(0+128),w
  3012  132B  1903               	skipnz
  3013  132C  2B5E               	goto	l2683
  3014  132D  01CA               	clrf	___lwdiv@counter^(0+128)
  3015  132E  0ACA               	incf	___lwdiv@counter^(0+128),f
  3016  132F                     l2671:	
  3017  132F  1BC4               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  3018  1330  2B3D               	goto	l2673
  3019  1331  3001               	movlw	1
  3020  1332                     u3185:	
  3021  1332  1003               	clrc
  3022  1333  0DC3               	rlf	___lwdiv@divisor^(0+128),f
  3023  1334  0DC4               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3024  1335  3EFF               	addlw	-1
  3025  1336  1D03               	skipz
  3026  1337  2B32               	goto	u3185
  3027  1338  3001               	movlw	1
  3028  1339  00C7               	movwf	??___lwdiv^(0+128)
  3029  133A  0847               	movf	??___lwdiv^(0+128),w
  3030  133B  07CA               	addwf	___lwdiv@counter^(0+128),f
  3031  133C  2B2F               	goto	l2671
  3032  133D                     l2673:	
  3033  133D  3001               	movlw	1
  3034  133E                     u3205:	
  3035  133E  1003               	clrc
  3036  133F  0DC8               	rlf	___lwdiv@quotient^(0+128),f
  3037  1340  0DC9               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3038  1341  3EFF               	addlw	-1
  3039  1342  1D03               	skipz
  3040  1343  2B3E               	goto	u3205
  3041  1344  0844               	movf	(___lwdiv@divisor+1)^(0+128),w
  3042  1345  0246               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3043  1346  1D03               	skipz
  3044  1347  2B4A               	goto	u3215
  3045  1348  0843               	movf	___lwdiv@divisor^(0+128),w
  3046  1349  0245               	subwf	___lwdiv@dividend^(0+128),w
  3047  134A                     u3215:	
  3048  134A  1C03               	skipc
  3049  134B  2B53               	goto	l2679
  3050  134C  0843               	movf	___lwdiv@divisor^(0+128),w
  3051  134D  02C5               	subwf	___lwdiv@dividend^(0+128),f
  3052  134E  0844               	movf	(___lwdiv@divisor+1)^(0+128),w
  3053  134F  1C03               	skipc
  3054  1350  03C6               	decf	(___lwdiv@dividend+1)^(0+128),f
  3055  1351  02C6               	subwf	(___lwdiv@dividend+1)^(0+128),f
  3056  1352  1448               	bsf	___lwdiv@quotient^(0+128),0
  3057  1353                     l2679:	
  3058  1353  3001               	movlw	1
  3059  1354                     u3225:	
  3060  1354  1003               	clrc
  3061  1355  0CC4               	rrf	(___lwdiv@divisor+1)^(0+128),f
  3062  1356  0CC3               	rrf	___lwdiv@divisor^(0+128),f
  3063  1357  3EFF               	addlw	-1
  3064  1358  1D03               	skipz
  3065  1359  2B54               	goto	u3225
  3066  135A  3001               	movlw	1
  3067  135B  02CA               	subwf	___lwdiv@counter^(0+128),f
  3068  135C  1D03               	btfss	3,2
  3069  135D  2B3D               	goto	l2673
  3070  135E                     l2683:	
  3071  135E  0849               	movf	(___lwdiv@quotient+1)^(0+128),w
  3072  135F  01C4               	clrf	(?___lwdiv+1)^(0+128)
  3073  1360  07C4               	addwf	(?___lwdiv+1)^(0+128),f
  3074  1361  0848               	movf	___lwdiv@quotient^(0+128),w
  3075  1362  01C3               	clrf	?___lwdiv^(0+128)
  3076  1363  07C3               	addwf	?___lwdiv^(0+128),f
  3077  1364  0008               	return
  3078  1365                     __end_of___lwdiv:	
  3079                           
  3080                           	psect	text6
  3081  1280                     __ptext6:	
  3082 ;; *************** function _USART_WriteString *****************
  3083 ;; Defined at:
  3084 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  3087 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  3088 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  3089 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  3090 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       2       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       0       2       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    6
  3109 ;; This function calls:
  3110 ;;		_USART_WriteChar
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _USART_WriteString
  3118  1280                     _USART_WriteString:	
  3119  1280                     l2893:	
  3120                           ;usart.c: 54: while(*str != '\0')
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3124                           
  3125  1280  1683               	bsf	3,5	;RP0=1, select bank1
  3126  1281  1303               	bcf	3,6	;RP1=0, select bank1
  3127  1282  0845               	movf	(USART_WriteString@str+1)^(0+128),w
  3128  1283  1283               	bcf	3,5	;RP0=0, select bank0
  3129  1284  1303               	bcf	3,6	;RP1=0, select bank0
  3130  1285  00FF               	movwf	127
  3131  1286  1683               	bsf	3,5	;RP0=1, select bank1
  3132  1287  1303               	bcf	3,6	;RP1=0, select bank1
  3133  1288  0844               	movf	USART_WriteString@str^(0+128),w
  3134  1289  0084               	movwf	4
  3135  128A  1283               	bcf	3,5	;RP0=0, select bank0
  3136  128B  1303               	bcf	3,6	;RP1=0, select bank0
  3137  128C  120A  158A  2000  160A  118A  	fcall	stringtab
  3138  1291  3800               	iorlw	0
  3139  1292  1903               	btfsc	3,2
  3140  1293  0008               	return
  3141                           
  3142                           ;usart.c: 55: {
  3143                           ;usart.c: 56: USART_WriteChar(*str);
  3144  1294  1683               	bsf	3,5	;RP0=1, select bank1
  3145  1295  1303               	bcf	3,6	;RP1=0, select bank1
  3146  1296  0845               	movf	(USART_WriteString@str+1)^(0+128),w
  3147  1297  1283               	bcf	3,5	;RP0=0, select bank0
  3148  1298  1303               	bcf	3,6	;RP1=0, select bank0
  3149  1299  00FF               	movwf	127
  3150  129A  1683               	bsf	3,5	;RP0=1, select bank1
  3151  129B  1303               	bcf	3,6	;RP1=0, select bank1
  3152  129C  0844               	movf	USART_WriteString@str^(0+128),w
  3153  129D  0084               	movwf	4
  3154  129E  1283               	bcf	3,5	;RP0=0, select bank0
  3155  129F  1303               	bcf	3,6	;RP1=0, select bank0
  3156  12A0  120A  158A  2000  160A  118A  	fcall	stringtab
  3157  12A5  160A  118A  209F  160A  118A  	fcall	_USART_WriteChar
  3158                           
  3159                           ;usart.c: 57: str++;
  3160  12AA  3001               	movlw	1
  3161  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  3162  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  3163  12AD  07C4               	addwf	USART_WriteString@str^(0+128),f
  3164  12AE  1803               	skipnc
  3165  12AF  0AC5               	incf	(USART_WriteString@str+1)^(0+128),f
  3166  12B0  2A80               	goto	l2893
  3167  12B1                     __end_of_USART_WriteString:	
  3168                           
  3169                           	psect	text7
  3170  109F                     __ptext7:	
  3171 ;; *************** function _USART_WriteChar *****************
  3172 ;; Defined at:
  3173 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  byte            1    wreg     unsigned char 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  byte            1    0[BANK1 ] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;		None               void
  3180 ;; Registers used:
  3181 ;;		wreg
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         0       0       1       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       0       1       0       0
  3191 ;;Total ram usage:        1 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    5
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_USART_WriteString
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _USART_WriteChar
  3203  109F                     _USART_WriteChar:	
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _USART_WriteChar: [wreg]
  3207                           ;USART_WriteChar@byte stored from wreg
  3208  109F  1683               	bsf	3,5	;RP0=1, select bank1
  3209  10A0  1303               	bcf	3,6	;RP1=0, select bank1
  3210  10A1  00C3               	movwf	USART_WriteChar@byte^(0+128)
  3211  10A2                     l224:	
  3212                           ;usart.c: 46: while(!PIR1bits.TXIF);
  3213                           
  3214  10A2  1283               	bcf	3,5	;RP0=0, select bank0
  3215  10A3  1E0C               	btfss	12,4	;volatile
  3216  10A4  28A2               	goto	l224
  3217                           
  3218                           ;usart.c: 47: TXREG = byte;
  3219  10A5  1683               	bsf	3,5	;RP0=1, select bank1
  3220  10A6  1303               	bcf	3,6	;RP1=0, select bank1
  3221  10A7  0843               	movf	USART_WriteChar@byte^(0+128),w
  3222  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  3223  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  3224  10AA  0099               	movwf	25	;volatile
  3225  10AB  0008               	return
  3226  10AC                     __end_of_USART_WriteChar:	
  3227                           
  3228                           	psect	text8
  3229  1365                     __ptext8:	
  3230 ;; *************** function _USART_Init *****************
  3231 ;; Defined at:
  3232 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  BaudRate        4   15[BANK1 ] long 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;		None               void
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       4       0       0
  3247 ;;      Locals:         0       0       0       0       0
  3248 ;;      Temps:          0       0       4       0       0
  3249 ;;      Totals:         0       0       8       0       0
  3250 ;;Total ram usage:        8 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    6
  3253 ;; This function calls:
  3254 ;;		___aldiv
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _USART_Init
  3262  1365                     _USART_Init:	
  3263                           
  3264                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  3268  1365  1683               	bsf	3,5	;RP0=1, select bank1
  3269  1366  1303               	bcf	3,6	;RP1=0, select bank1
  3270  1367  0852               	movf	USART_Init@BaudRate^(0+128),w
  3271  1368  00D6               	movwf	??_USART_Init^(0+128)
  3272  1369  0853               	movf	(USART_Init@BaudRate+1)^(0+128),w
  3273  136A  00D7               	movwf	(??_USART_Init^(0+128)+1)
  3274  136B  0854               	movf	(USART_Init@BaudRate+2)^(0+128),w
  3275  136C  00D8               	movwf	(??_USART_Init^(0+128)+2)
  3276  136D  0855               	movf	(USART_Init@BaudRate+3)^(0+128),w
  3277  136E  00D9               	movwf	(??_USART_Init^(0+128)+3)
  3278  136F  3004               	movlw	4
  3279  1370                     u3585:	
  3280  1370  1003               	clrc
  3281  1371  0DD6               	rlf	??_USART_Init^(0+128),f
  3282  1372  0DD7               	rlf	(??_USART_Init^(0+128)+1),f
  3283  1373  0DD8               	rlf	(??_USART_Init^(0+128)+2),f
  3284  1374  0DD9               	rlf	(??_USART_Init^(0+128)+3),f
  3285  1375  3EFF               	addlw	-1
  3286  1376  1D03               	skipz
  3287  1377  2B70               	goto	u3585
  3288  1378  0859               	movf	(??_USART_Init+3)^(0+128),w
  3289  1379  00C6               	movwf	(___aldiv@divisor+3)^(0+128)
  3290  137A  0858               	movf	(??_USART_Init+2)^(0+128),w
  3291  137B  00C5               	movwf	(___aldiv@divisor+2)^(0+128)
  3292  137C  0857               	movf	(??_USART_Init+1)^(0+128),w
  3293  137D  00C4               	movwf	(___aldiv@divisor+1)^(0+128)
  3294  137E  0856               	movf	??_USART_Init^(0+128),w
  3295  137F  00C3               	movwf	___aldiv@divisor^(0+128)
  3296  1380  3001               	movlw	1
  3297  1381  00CA               	movwf	(___aldiv@dividend+3)^(0+128)
  3298  1382  3019               	movlw	25
  3299  1383  00C9               	movwf	(___aldiv@dividend+2)^(0+128)
  3300  1384  3040               	movlw	64
  3301  1385  00C8               	movwf	(___aldiv@dividend+1)^(0+128)
  3302  1386  3000               	movlw	0
  3303  1387  00C7               	movwf	___aldiv@dividend^(0+128)
  3304  1388  120A  118A  2755   	fcall	___aldiv
  3305  138B  1683               	bsf	3,5	;RP0=1, select bank1
  3306  138C  1303               	bcf	3,6	;RP1=0, select bank1
  3307  138D  0843               	movf	?___aldiv^(0+128),w
  3308  138E  3EFF               	addlw	255
  3309  138F  0099               	movwf	25	;volatile
  3310                           
  3311                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3312  1390  1398               	bcf	24,7	;volatile
  3313                           
  3314                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3315  1391  1318               	bcf	24,6	;volatile
  3316                           
  3317                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3318  1392  1698               	bsf	24,5	;volatile
  3319                           
  3320                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3321  1393  1218               	bcf	24,4	;volatile
  3322                           
  3323                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3324  1394  1518               	bsf	24,2	;volatile
  3325                           
  3326                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3327  1395  1498               	bsf	24,1	;volatile
  3328                           
  3329                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3330  1396  1018               	bcf	24,0	;volatile
  3331                           
  3332                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3333  1397  1283               	bcf	3,5	;RP0=0, select bank0
  3334  1398  1303               	bcf	3,6	;RP1=0, select bank0
  3335  1399  1798               	bsf	24,7	;volatile
  3336                           
  3337                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3338  139A  1318               	bcf	24,6	;volatile
  3339                           
  3340                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3341  139B  1298               	bcf	24,5	;volatile
  3342                           
  3343                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3344  139C  1618               	bsf	24,4	;volatile
  3345                           
  3346                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3347  139D  1198               	bcf	24,3	;volatile
  3348                           
  3349                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3350  139E  1118               	bcf	24,2	;volatile
  3351                           
  3352                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3353  139F  1098               	bcf	24,1	;volatile
  3354                           
  3355                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3356  13A0  1018               	bcf	24,0	;volatile
  3357                           
  3358                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3359  13A1  1683               	bsf	3,5	;RP0=1, select bank1
  3360  13A2  1303               	bcf	3,6	;RP1=0, select bank1
  3361  13A3  120C               	bcf	12,4	;volatile
  3362                           
  3363                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3364  13A4  1283               	bcf	3,5	;RP0=0, select bank0
  3365  13A5  1303               	bcf	3,6	;RP1=0, select bank0
  3366  13A6  120C               	bcf	12,4	;volatile
  3367                           
  3368                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3369  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  3370  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  3371  13A9  168C               	bsf	12,5	;volatile
  3372                           
  3373                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3374  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  3375  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  3376  13AC  128C               	bcf	12,5	;volatile
  3377  13AD  0008               	return
  3378  13AE                     __end_of_USART_Init:	
  3379                           
  3380                           	psect	text9
  3381  0755                     __ptext9:	
  3382 ;; *************** function ___aldiv *****************
  3383 ;; Defined at:
  3384 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  divisor         4    0[BANK1 ] long 
  3387 ;;  dividend        4    4[BANK1 ] long 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  quotient        4   11[BANK1 ] long 
  3390 ;;  sign            1   10[BANK1 ] unsigned char 
  3391 ;;  counter         1    9[BANK1 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  4    0[BANK1 ] long 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       8       0       0
  3402 ;;      Locals:         0       0       6       0       0
  3403 ;;      Temps:          0       0       1       0       0
  3404 ;;      Totals:         0       0      15       0       0
  3405 ;;Total ram usage:       15 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    5
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_USART_Init
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function ___aldiv
  3417  0755                     ___aldiv:	
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3421  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3423  0757  01CD               	clrf	___aldiv@sign^(0+128)
  3424  0758  1FC6               	btfss	(___aldiv@divisor+3)^(0+128),7
  3425  0759  2F67               	goto	l650
  3426  075A  09C3               	comf	___aldiv@divisor^(0+128),f
  3427  075B  09C4               	comf	(___aldiv@divisor+1)^(0+128),f
  3428  075C  09C5               	comf	(___aldiv@divisor+2)^(0+128),f
  3429  075D  09C6               	comf	(___aldiv@divisor+3)^(0+128),f
  3430  075E  0AC3               	incf	___aldiv@divisor^(0+128),f
  3431  075F  1903               	skipnz
  3432  0760  0AC4               	incf	(___aldiv@divisor+1)^(0+128),f
  3433  0761  1903               	skipnz
  3434  0762  0AC5               	incf	(___aldiv@divisor+2)^(0+128),f
  3435  0763  1903               	skipnz
  3436  0764  0AC6               	incf	(___aldiv@divisor+3)^(0+128),f
  3437  0765  01CD               	clrf	___aldiv@sign^(0+128)
  3438  0766  0ACD               	incf	___aldiv@sign^(0+128),f
  3439  0767                     l650:	
  3440  0767  1FCA               	btfss	(___aldiv@dividend+3)^(0+128),7
  3441  0768  2F78               	goto	l2537
  3442  0769  09C7               	comf	___aldiv@dividend^(0+128),f
  3443  076A  09C8               	comf	(___aldiv@dividend+1)^(0+128),f
  3444  076B  09C9               	comf	(___aldiv@dividend+2)^(0+128),f
  3445  076C  09CA               	comf	(___aldiv@dividend+3)^(0+128),f
  3446  076D  0AC7               	incf	___aldiv@dividend^(0+128),f
  3447  076E  1903               	skipnz
  3448  076F  0AC8               	incf	(___aldiv@dividend+1)^(0+128),f
  3449  0770  1903               	skipnz
  3450  0771  0AC9               	incf	(___aldiv@dividend+2)^(0+128),f
  3451  0772  1903               	skipnz
  3452  0773  0ACA               	incf	(___aldiv@dividend+3)^(0+128),f
  3453  0774  3001               	movlw	1
  3454  0775  00CB               	movwf	??___aldiv^(0+128)
  3455  0776  084B               	movf	??___aldiv^(0+128),w
  3456  0777  06CD               	xorwf	___aldiv@sign^(0+128),f
  3457  0778                     l2537:	
  3458  0778  3000               	movlw	0
  3459  0779  00D1               	movwf	(___aldiv@quotient+3)^(0+128)
  3460  077A  3000               	movlw	0
  3461  077B  00D0               	movwf	(___aldiv@quotient+2)^(0+128)
  3462  077C  3000               	movlw	0
  3463  077D  00CF               	movwf	(___aldiv@quotient+1)^(0+128)
  3464  077E  3000               	movlw	0
  3465  077F  00CE               	movwf	___aldiv@quotient^(0+128)
  3466  0780  0846               	movf	(___aldiv@divisor+3)^(0+128),w
  3467  0781  0445               	iorwf	(___aldiv@divisor+2)^(0+128),w
  3468  0782  0444               	iorwf	(___aldiv@divisor+1)^(0+128),w
  3469  0783  0443               	iorwf	___aldiv@divisor^(0+128),w
  3470  0784  1903               	skipnz
  3471  0785  2FCD               	goto	l2559
  3472  0786  01CC               	clrf	___aldiv@counter^(0+128)
  3473  0787  0ACC               	incf	___aldiv@counter^(0+128),f
  3474  0788                     l2545:	
  3475  0788  1BC6               	btfsc	(___aldiv@divisor+3)^(0+128),7
  3476  0789  2F98               	goto	l2547
  3477  078A  3001               	movlw	1
  3478  078B  00CB               	movwf	??___aldiv^(0+128)
  3479  078C                     u2865:	
  3480  078C  1003               	clrc
  3481  078D  0DC3               	rlf	___aldiv@divisor^(0+128),f
  3482  078E  0DC4               	rlf	(___aldiv@divisor+1)^(0+128),f
  3483  078F  0DC5               	rlf	(___aldiv@divisor+2)^(0+128),f
  3484  0790  0DC6               	rlf	(___aldiv@divisor+3)^(0+128),f
  3485  0791  0BCB               	decfsz	??___aldiv^(0+128),f
  3486  0792  2F8C               	goto	u2865
  3487  0793  3001               	movlw	1
  3488  0794  00CB               	movwf	??___aldiv^(0+128)
  3489  0795  084B               	movf	??___aldiv^(0+128),w
  3490  0796  07CC               	addwf	___aldiv@counter^(0+128),f
  3491  0797  2F88               	goto	l2545
  3492  0798                     l2547:	
  3493  0798  3001               	movlw	1
  3494  0799  00CB               	movwf	??___aldiv^(0+128)
  3495  079A                     u2885:	
  3496  079A  1003               	clrc
  3497  079B  0DCE               	rlf	___aldiv@quotient^(0+128),f
  3498  079C  0DCF               	rlf	(___aldiv@quotient+1)^(0+128),f
  3499  079D  0DD0               	rlf	(___aldiv@quotient+2)^(0+128),f
  3500  079E  0DD1               	rlf	(___aldiv@quotient+3)^(0+128),f
  3501  079F  0BCB               	decfsz	??___aldiv^(0+128),f
  3502  07A0  2F9A               	goto	u2885
  3503  07A1  0846               	movf	(___aldiv@divisor+3)^(0+128),w
  3504  07A2  024A               	subwf	(___aldiv@dividend+3)^(0+128),w
  3505  07A3  1D03               	skipz
  3506  07A4  2FAF               	goto	u2895
  3507  07A5  0845               	movf	(___aldiv@divisor+2)^(0+128),w
  3508  07A6  0249               	subwf	(___aldiv@dividend+2)^(0+128),w
  3509  07A7  1D03               	skipz
  3510  07A8  2FAF               	goto	u2895
  3511  07A9  0844               	movf	(___aldiv@divisor+1)^(0+128),w
  3512  07AA  0248               	subwf	(___aldiv@dividend+1)^(0+128),w
  3513  07AB  1D03               	skipz
  3514  07AC  2FAF               	goto	u2895
  3515  07AD  0843               	movf	___aldiv@divisor^(0+128),w
  3516  07AE  0247               	subwf	___aldiv@dividend^(0+128),w
  3517  07AF                     u2895:	
  3518  07AF  1C03               	skipc
  3519  07B0  2FC0               	goto	l2555
  3520  07B1  0843               	movf	___aldiv@divisor^(0+128),w
  3521  07B2  02C7               	subwf	___aldiv@dividend^(0+128),f
  3522  07B3  0844               	movf	(___aldiv@divisor+1)^(0+128),w
  3523  07B4  1C03               	skipc
  3524  07B5  0F44               	incfsz	(___aldiv@divisor+1)^(0+128),w
  3525  07B6  02C8               	subwf	(___aldiv@dividend+1)^(0+128),f
  3526  07B7  0845               	movf	(___aldiv@divisor+2)^(0+128),w
  3527  07B8  1C03               	skipc
  3528  07B9  0F45               	incfsz	(___aldiv@divisor+2)^(0+128),w
  3529  07BA  02C9               	subwf	(___aldiv@dividend+2)^(0+128),f
  3530  07BB  0846               	movf	(___aldiv@divisor+3)^(0+128),w
  3531  07BC  1C03               	skipc
  3532  07BD  0F46               	incfsz	(___aldiv@divisor+3)^(0+128),w
  3533  07BE  02CA               	subwf	(___aldiv@dividend+3)^(0+128),f
  3534  07BF  144E               	bsf	___aldiv@quotient^(0+128),0
  3535  07C0                     l2555:	
  3536  07C0  3001               	movlw	1
  3537  07C1                     u2905:	
  3538  07C1  1003               	clrc
  3539  07C2  0CC6               	rrf	(___aldiv@divisor+3)^(0+128),f
  3540  07C3  0CC5               	rrf	(___aldiv@divisor+2)^(0+128),f
  3541  07C4  0CC4               	rrf	(___aldiv@divisor+1)^(0+128),f
  3542  07C5  0CC3               	rrf	___aldiv@divisor^(0+128),f
  3543  07C6  3EFF               	addlw	-1
  3544  07C7  1D03               	skipz
  3545  07C8  2FC1               	goto	u2905
  3546  07C9  3001               	movlw	1
  3547  07CA  02CC               	subwf	___aldiv@counter^(0+128),f
  3548  07CB  1D03               	btfss	3,2
  3549  07CC  2F98               	goto	l2547
  3550  07CD                     l2559:	
  3551  07CD  084D               	movf	___aldiv@sign^(0+128),w
  3552  07CE  1903               	btfsc	3,2
  3553  07CF  2FDB               	goto	l2563
  3554  07D0  09CE               	comf	___aldiv@quotient^(0+128),f
  3555  07D1  09CF               	comf	(___aldiv@quotient+1)^(0+128),f
  3556  07D2  09D0               	comf	(___aldiv@quotient+2)^(0+128),f
  3557  07D3  09D1               	comf	(___aldiv@quotient+3)^(0+128),f
  3558  07D4  0ACE               	incf	___aldiv@quotient^(0+128),f
  3559  07D5  1903               	skipnz
  3560  07D6  0ACF               	incf	(___aldiv@quotient+1)^(0+128),f
  3561  07D7  1903               	skipnz
  3562  07D8  0AD0               	incf	(___aldiv@quotient+2)^(0+128),f
  3563  07D9  1903               	skipnz
  3564  07DA  0AD1               	incf	(___aldiv@quotient+3)^(0+128),f
  3565  07DB                     l2563:	
  3566  07DB  0851               	movf	(___aldiv@quotient+3)^(0+128),w
  3567  07DC  00C6               	movwf	(?___aldiv+3)^(0+128)
  3568  07DD  0850               	movf	(___aldiv@quotient+2)^(0+128),w
  3569  07DE  00C5               	movwf	(?___aldiv+2)^(0+128)
  3570  07DF  084F               	movf	(___aldiv@quotient+1)^(0+128),w
  3571  07E0  00C4               	movwf	(?___aldiv+1)^(0+128)
  3572  07E1  084E               	movf	___aldiv@quotient^(0+128),w
  3573  07E2  00C3               	movwf	?___aldiv^(0+128)
  3574  07E3  0008               	return
  3575  07E4                     __end_of___aldiv:	
  3576                           
  3577                           	psect	text10
  3578  1070                     __ptext10:	
  3579 ;; *************** function _TIMER0_Set *****************
  3580 ;; Defined at:
  3581 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  contagens       1    wreg     unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  contagens       1    0[BANK1 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;		None               void
  3588 ;; Registers used:
  3589 ;;		wreg
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       0       0       0       0
  3596 ;;      Locals:         0       0       1       0       0
  3597 ;;      Temps:          0       0       0       0       0
  3598 ;;      Totals:         0       0       1       0       0
  3599 ;;Total ram usage:        1 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    5
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _TIMER0_Set
  3611  1070                     _TIMER0_Set:	
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _TIMER0_Set: [wreg]
  3615                           ;TIMER0_Set@contagens stored from wreg
  3616  1070  1683               	bsf	3,5	;RP0=1, select bank1
  3617  1071  1303               	bcf	3,6	;RP1=0, select bank1
  3618  1072  00C3               	movwf	TIMER0_Set@contagens^(0+128)
  3619                           
  3620                           ;timers.c: 22: TMR0 = contagens;
  3621  1073  0843               	movf	TIMER0_Set@contagens^(0+128),w
  3622  1074  1283               	bcf	3,5	;RP0=0, select bank0
  3623  1075  1303               	bcf	3,6	;RP1=0, select bank0
  3624  1076  0081               	movwf	1	;volatile
  3625  1077  0008               	return
  3626  1078                     __end_of_TIMER0_Set:	
  3627                           
  3628                           	psect	text11
  3629  1094                     __ptext11:	
  3630 ;; *************** function _TIMER0_Init *****************
  3631 ;; Defined at:
  3632 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;		None               void
  3639 ;; Registers used:
  3640 ;;		None
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    5
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _TIMER0_Init
  3662  1094                     _TIMER0_Init:	
  3663                           
  3664                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3665                           
  3666                           ;incstack = 0
  3667                           ; Regs used in _TIMER0_Init: []
  3668  1094  1683               	bsf	3,5	;RP0=1, select bank1
  3669  1095  1303               	bcf	3,6	;RP1=0, select bank1
  3670  1096  1281               	bcf	1,5	;volatile
  3671                           
  3672                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3673  1097  1201               	bcf	1,4	;volatile
  3674                           
  3675                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3676  1098  1181               	bcf	1,3	;volatile
  3677                           
  3678                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3679  1099  1501               	bsf	1,2	;volatile
  3680                           
  3681                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3682  109A  1481               	bsf	1,1	;volatile
  3683                           
  3684                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3685  109B  1401               	bsf	1,0	;volatile
  3686                           
  3687                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3688  109C  110B               	bcf	11,2	;volatile
  3689                           
  3690                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3691  109D  168B               	bsf	11,5	;volatile
  3692  109E  0008               	return
  3693  109F                     __end_of_TIMER0_Init:	
  3694                           
  3695                           	psect	text12
  3696  1202                     __ptext12:	
  3697 ;; *************** function _PWM_Init *****************
  3698 ;; Defined at:
  3699 ;;		line 5 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    5
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _PWM_Init
  3729  1202                     _PWM_Init:	
  3730                           
  3731                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _PWM_Init: [wreg]
  3735  1202  1283               	bcf	3,5	;RP0=0, select bank0
  3736  1203  1303               	bcf	3,6	;RP1=0, select bank0
  3737  1204  1492               	bsf	18,1	;volatile
  3738                           
  3739                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3740  1205  1012               	bcf	18,0	;volatile
  3741                           
  3742                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3743  1206  1312               	bcf	18,6	;volatile
  3744                           
  3745                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3746  1207  1292               	bcf	18,5	;volatile
  3747                           
  3748                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3749  1208  1212               	bcf	18,4	;volatile
  3750                           
  3751                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3752  1209  1192               	bcf	18,3	;volatile
  3753                           
  3754                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3755  120A  1512               	bsf	18,2	;volatile
  3756                           
  3757                           ;pwm.c: 27: PR2 = 255;
  3758  120B  30FF               	movlw	255
  3759  120C  1683               	bsf	3,5	;RP0=1, select bank1
  3760  120D  1303               	bcf	3,6	;RP1=0, select bank1
  3761  120E  0092               	movwf	18	;volatile
  3762                           
  3763                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3764  120F  1283               	bcf	3,5	;RP0=0, select bank0
  3765  1210  1303               	bcf	3,6	;RP1=0, select bank0
  3766  1211  1597               	bsf	23,3	;volatile
  3767                           
  3768                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3769  1212  1517               	bsf	23,2	;volatile
  3770                           
  3771                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3772  1213  1497               	bsf	23,1	;volatile
  3773                           
  3774                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3775  1214  1417               	bsf	23,0	;volatile
  3776                           
  3777                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3778  1215  1683               	bsf	3,5	;RP0=1, select bank1
  3779  1216  1303               	bcf	3,6	;RP1=0, select bank1
  3780  1217  150C               	bsf	12,2	;volatile
  3781                           
  3782                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3783  1218  1283               	bcf	3,5	;RP0=0, select bank0
  3784  1219  1303               	bcf	3,6	;RP1=0, select bank0
  3785  121A  110C               	bcf	12,2	;volatile
  3786                           
  3787                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3788  121B  159D               	bsf	29,3	;volatile
  3789                           
  3790                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3791  121C  151D               	bsf	29,2	;volatile
  3792                           
  3793                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3794  121D  149D               	bsf	29,1	;volatile
  3795                           
  3796                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3797  121E  141D               	bsf	29,0	;volatile
  3798                           
  3799                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3800  121F  1683               	bsf	3,5	;RP0=1, select bank1
  3801  1220  1303               	bcf	3,6	;RP1=0, select bank1
  3802  1221  140D               	bsf	13,0	;volatile
  3803                           
  3804                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3805  1222  1283               	bcf	3,5	;RP0=0, select bank0
  3806  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3807  1224  100D               	bcf	13,0	;volatile
  3808  1225  0008               	return
  3809  1226                     __end_of_PWM_Init:	
  3810                           
  3811                           	psect	text13
  3812  119B                     __ptext13:	
  3813 ;; *************** function _PWM_DutyCycle2 *****************
  3814 ;; Defined at:
  3815 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  valor           2    0[BANK1 ] int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       0       2       0       0
  3830 ;;      Locals:         0       0       0       0       0
  3831 ;;      Temps:          0       0       2       0       0
  3832 ;;      Totals:         0       0       4       0       0
  3833 ;;Total ram usage:        4 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    5
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function _PWM_DutyCycle2
  3845  119B                     _PWM_DutyCycle2:	
  3846                           
  3847                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3851  119B  1683               	bsf	3,5	;RP0=1, select bank1
  3852  119C  1303               	bcf	3,6	;RP1=0, select bank1
  3853  119D  0844               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  3854  119E  00C6               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  3855  119F  0843               	movf	PWM_DutyCycle2@valor^(0+128),w
  3856  11A0  00C5               	movwf	??_PWM_DutyCycle2^(0+128)
  3857  11A1  0D46               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3858  11A2  0CC6               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3859  11A3  0CC5               	rrf	??_PWM_DutyCycle2^(0+128),f
  3860  11A4  0D46               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  3861  11A5  0CC6               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  3862  11A6  0CC5               	rrf	??_PWM_DutyCycle2^(0+128),f
  3863  11A7  0845               	movf	??_PWM_DutyCycle2^(0+128),w
  3864  11A8  1283               	bcf	3,5	;RP0=0, select bank0
  3865  11A9  1303               	bcf	3,6	;RP1=0, select bank0
  3866  11AA  009B               	movwf	27	;volatile
  3867                           
  3868                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3869  11AB  1683               	bsf	3,5	;RP0=1, select bank1
  3870  11AC  1303               	bcf	3,6	;RP1=0, select bank1
  3871  11AD  0843               	movf	PWM_DutyCycle2@valor^(0+128),w
  3872  11AE  00C5               	movwf	??_PWM_DutyCycle2^(0+128)
  3873  11AF  3003               	movlw	3
  3874  11B0                     u3555:	
  3875  11B0  1003               	clrc
  3876  11B1  0DC5               	rlf	??_PWM_DutyCycle2^(0+128),f
  3877  11B2  3EFF               	addlw	-1
  3878  11B3  1D03               	skipz
  3879  11B4  29B0               	goto	u3555
  3880  11B5  1003               	clrc
  3881  11B6  0D45               	rlf	??_PWM_DutyCycle2^(0+128),w
  3882  11B7  380C               	iorlw	12
  3883  11B8  1283               	bcf	3,5	;RP0=0, select bank0
  3884  11B9  1303               	bcf	3,6	;RP1=0, select bank0
  3885  11BA  009D               	movwf	29	;volatile
  3886  11BB  0008               	return
  3887  11BC                     __end_of_PWM_DutyCycle2:	
  3888                           
  3889                           	psect	text14
  3890  117A                     __ptext14:	
  3891 ;; *************** function _PWM_DutyCycle1 *****************
  3892 ;; Defined at:
  3893 ;;		line 64 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  valor           2    0[BANK1 ] int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;		None               void
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3907 ;;      Params:         0       0       2       0       0
  3908 ;;      Locals:         0       0       0       0       0
  3909 ;;      Temps:          0       0       2       0       0
  3910 ;;      Totals:         0       0       4       0       0
  3911 ;;Total ram usage:        4 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    5
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           
  3922                           ;psect for function _PWM_DutyCycle1
  3923  117A                     _PWM_DutyCycle1:	
  3924                           
  3925                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3929  117A  1683               	bsf	3,5	;RP0=1, select bank1
  3930  117B  1303               	bcf	3,6	;RP1=0, select bank1
  3931  117C  0844               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  3932  117D  00C6               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  3933  117E  0843               	movf	PWM_DutyCycle1@valor^(0+128),w
  3934  117F  00C5               	movwf	??_PWM_DutyCycle1^(0+128)
  3935  1180  0D46               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3936  1181  0CC6               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3937  1182  0CC5               	rrf	??_PWM_DutyCycle1^(0+128),f
  3938  1183  0D46               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  3939  1184  0CC6               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  3940  1185  0CC5               	rrf	??_PWM_DutyCycle1^(0+128),f
  3941  1186  0845               	movf	??_PWM_DutyCycle1^(0+128),w
  3942  1187  1283               	bcf	3,5	;RP0=0, select bank0
  3943  1188  1303               	bcf	3,6	;RP1=0, select bank0
  3944  1189  0095               	movwf	21	;volatile
  3945                           
  3946                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3947  118A  1683               	bsf	3,5	;RP0=1, select bank1
  3948  118B  1303               	bcf	3,6	;RP1=0, select bank1
  3949  118C  0843               	movf	PWM_DutyCycle1@valor^(0+128),w
  3950  118D  00C5               	movwf	??_PWM_DutyCycle1^(0+128)
  3951  118E  3003               	movlw	3
  3952  118F                     u3615:	
  3953  118F  1003               	clrc
  3954  1190  0DC5               	rlf	??_PWM_DutyCycle1^(0+128),f
  3955  1191  3EFF               	addlw	-1
  3956  1192  1D03               	skipz
  3957  1193  298F               	goto	u3615
  3958  1194  1003               	clrc
  3959  1195  0D45               	rlf	??_PWM_DutyCycle1^(0+128),w
  3960  1196  380C               	iorlw	12
  3961  1197  1283               	bcf	3,5	;RP0=0, select bank0
  3962  1198  1303               	bcf	3,6	;RP1=0, select bank0
  3963  1199  0097               	movwf	23	;volatile
  3964  119A  0008               	return
  3965  119B                     __end_of_PWM_DutyCycle1:	
  3966                           
  3967                           	psect	text15
  3968  124F                     __ptext15:	
  3969 ;; *************** function _LCD_WriteString *****************
  3970 ;; Defined at:
  3971 ;;		line 61 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  3974 ;;		 -> STR_18(8), STR_17(6), display_pwm(10), display_rpm(10), 
  3975 ;;		 -> STR_13(17), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;		None               void
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       0       2       0       0
  3988 ;;      Locals:         0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         0       0       2       0       0
  3991 ;;Total ram usage:        2 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    6
  3994 ;; This function calls:
  3995 ;;		_LCD_WriteData
  3996 ;; This function is called by:
  3997 ;;		_main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function _LCD_WriteString
  4003  124F                     _LCD_WriteString:	
  4004  124F                     l3013:	
  4005                           ;lcd.c: 63: while(*Str != '\0')
  4006                           
  4007                           ;incstack = 0
  4008                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4009                           
  4010  124F  1683               	bsf	3,5	;RP0=1, select bank1
  4011  1250  1303               	bcf	3,6	;RP1=0, select bank1
  4012  1251  0846               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4013  1252  1283               	bcf	3,5	;RP0=0, select bank0
  4014  1253  1303               	bcf	3,6	;RP1=0, select bank0
  4015  1254  00FF               	movwf	127
  4016  1255  1683               	bsf	3,5	;RP0=1, select bank1
  4017  1256  1303               	bcf	3,6	;RP1=0, select bank1
  4018  1257  0845               	movf	LCD_WriteString@Str^(0+128),w
  4019  1258  0084               	movwf	4
  4020  1259  1283               	bcf	3,5	;RP0=0, select bank0
  4021  125A  1303               	bcf	3,6	;RP1=0, select bank0
  4022  125B  120A  158A  2000  160A  118A  	fcall	stringtab
  4023  1260  3800               	iorlw	0
  4024  1261  1903               	btfsc	3,2
  4025  1262  0008               	return
  4026                           
  4027                           ;lcd.c: 64: {
  4028                           ;lcd.c: 65: LCD_WriteData(*Str);
  4029  1263  1683               	bsf	3,5	;RP0=1, select bank1
  4030  1264  1303               	bcf	3,6	;RP1=0, select bank1
  4031  1265  0846               	movf	(LCD_WriteString@Str+1)^(0+128),w
  4032  1266  1283               	bcf	3,5	;RP0=0, select bank0
  4033  1267  1303               	bcf	3,6	;RP1=0, select bank0
  4034  1268  00FF               	movwf	127
  4035  1269  1683               	bsf	3,5	;RP0=1, select bank1
  4036  126A  1303               	bcf	3,6	;RP1=0, select bank1
  4037  126B  0845               	movf	LCD_WriteString@Str^(0+128),w
  4038  126C  0084               	movwf	4
  4039  126D  1283               	bcf	3,5	;RP0=0, select bank0
  4040  126E  1303               	bcf	3,6	;RP1=0, select bank0
  4041  126F  120A  158A  2000  160A  118A  	fcall	stringtab
  4042  1274  160A  118A  210A  160A  118A  	fcall	_LCD_WriteData
  4043                           
  4044                           ;lcd.c: 66: Str++;
  4045  1279  3001               	movlw	1
  4046  127A  1683               	bsf	3,5	;RP0=1, select bank1
  4047  127B  1303               	bcf	3,6	;RP1=0, select bank1
  4048  127C  07C5               	addwf	LCD_WriteString@Str^(0+128),f
  4049  127D  1803               	skipnc
  4050  127E  0AC6               	incf	(LCD_WriteString@Str+1)^(0+128),f
  4051  127F  2A4F               	goto	l3013
  4052  1280                     __end_of_LCD_WriteString:	
  4053                           
  4054                           	psect	text16
  4055  110A                     __ptext16:	
  4056 ;; *************** function _LCD_WriteData *****************
  4057 ;; Defined at:
  4058 ;;		line 47 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  Byte            1    wreg     unsigned char 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  Byte            1    1[BANK1 ] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       0       0       0       0
  4073 ;;      Locals:         0       0       1       0       0
  4074 ;;      Temps:          0       0       1       0       0
  4075 ;;      Totals:         0       0       2       0       0
  4076 ;;Total ram usage:        2 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    5
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_LCD_WriteString
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _LCD_WriteData
  4088  110A                     _LCD_WriteData:	
  4089                           
  4090                           ;incstack = 0
  4091                           ; Regs used in _LCD_WriteData: [wreg]
  4092                           ;LCD_WriteData@Byte stored from wreg
  4093  110A  1683               	bsf	3,5	;RP0=1, select bank1
  4094  110B  1303               	bcf	3,6	;RP1=0, select bank1
  4095  110C  00C4               	movwf	LCD_WriteData@Byte^(0+128)
  4096                           
  4097                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  4098  110D  1283               	bcf	3,5	;RP0=0, select bank0
  4099  110E  1303               	bcf	3,6	;RP1=0, select bank0
  4100  110F  1409               	bsf	9,0	;volatile
  4101                           
  4102                           ;lcd.c: 51: PORTD = Byte;
  4103  1110  1683               	bsf	3,5	;RP0=1, select bank1
  4104  1111  1303               	bcf	3,6	;RP1=0, select bank1
  4105  1112  0844               	movf	LCD_WriteData@Byte^(0+128),w
  4106  1113  1283               	bcf	3,5	;RP0=0, select bank0
  4107  1114  1303               	bcf	3,6	;RP1=0, select bank0
  4108  1115  0088               	movwf	8	;volatile
  4109                           
  4110                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  4111  1116  1489               	bsf	9,1	;volatile
  4112                           
  4113                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4114  1117  303D               	movlw	61
  4115  1118  1683               	bsf	3,5	;RP0=1, select bank1
  4116  1119  1303               	bcf	3,6	;RP1=0, select bank1
  4117  111A  00C3               	movwf	??_LCD_WriteData^(0+128)
  4118  111B                     u4107:	
  4119  111B  0BC3               	decfsz	??_LCD_WriteData^(0+128),f
  4120  111C  291B               	goto	u4107
  4121                           
  4122                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  4123  111D  1283               	bcf	3,5	;RP0=0, select bank0
  4124  111E  1303               	bcf	3,6	;RP1=0, select bank0
  4125  111F  1089               	bcf	9,1	;volatile
  4126  1120  0008               	return
  4127  1121                     __end_of_LCD_WriteData:	
  4128                           
  4129                           	psect	text17
  4130  1475                     __ptext17:	
  4131 ;; *************** function _LCD_Init *****************
  4132 ;; Defined at:
  4133 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;		None
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, pclath, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0
  4149 ;;      Temps:          0       0       2       0       0
  4150 ;;      Totals:         0       0       2       0       0
  4151 ;;Total ram usage:        2 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    6
  4154 ;; This function calls:
  4155 ;;		_LCD_WriteCmd
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _LCD_Init
  4163  1475                     _LCD_Init:	
  4164                           
  4165                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  4166                           
  4167                           ;incstack = 0
  4168                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4169  1475  1683               	bsf	3,5	;RP0=1, select bank1
  4170  1476  1303               	bcf	3,6	;RP1=0, select bank1
  4171  1477  119F               	bcf	31,3	;volatile
  4172                           
  4173                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  4174  1478  151F               	bsf	31,2	;volatile
  4175                           
  4176                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  4177  1479  109F               	bcf	31,1	;volatile
  4178                           
  4179                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  4180  147A  101F               	bcf	31,0	;volatile
  4181                           
  4182                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  4183  147B  305A               	movlw	90
  4184  147C  00C6               	movwf	(??_LCD_Init^(0+128)+1)
  4185  147D  30C3               	movlw	195
  4186  147E  00C5               	movwf	??_LCD_Init^(0+128)
  4187  147F                     u4117:	
  4188  147F  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4189  1480  2C7F               	goto	u4117
  4190  1481  0BC6               	decfsz	(??_LCD_Init^(0+128)+1),f
  4191  1482  2C7F               	goto	u4117
  4192                           
  4193                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  4194  1483  3030               	movlw	48
  4195  1484  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4196                           
  4197                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  4198  1489  3018               	movlw	24
  4199  148A  1683               	bsf	3,5	;RP0=1, select bank1
  4200  148B  1303               	bcf	3,6	;RP1=0, select bank1
  4201  148C  00C6               	movwf	(??_LCD_Init^(0+128)+1)
  4202  148D  30EF               	movlw	239
  4203  148E  00C5               	movwf	??_LCD_Init^(0+128)
  4204  148F                     u4127:	
  4205  148F  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4206  1490  2C8F               	goto	u4127
  4207  1491  0BC6               	decfsz	(??_LCD_Init^(0+128)+1),f
  4208  1492  2C8F               	goto	u4127
  4209                           
  4210                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  4211  1493  3030               	movlw	48
  4212  1494  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4213                           
  4214                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  4215  1499  3099               	movlw	153
  4216  149A  1683               	bsf	3,5	;RP0=1, select bank1
  4217  149B  1303               	bcf	3,6	;RP1=0, select bank1
  4218  149C  00C5               	movwf	??_LCD_Init^(0+128)
  4219  149D                     u4137:	
  4220  149D  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4221  149E  2C9D               	goto	u4137
  4222                           
  4223                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  4224  149F  3030               	movlw	48
  4225  14A0  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4226                           
  4227                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4228  14A5  303D               	movlw	61
  4229  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  4230  14A7  1303               	bcf	3,6	;RP1=0, select bank1
  4231  14A8  00C5               	movwf	??_LCD_Init^(0+128)
  4232  14A9                     u4147:	
  4233  14A9  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4234  14AA  2CA9               	goto	u4147
  4235                           
  4236                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  4237  14AB  3038               	movlw	56
  4238  14AC  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4239                           
  4240                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4241  14B1  303D               	movlw	61
  4242  14B2  1683               	bsf	3,5	;RP0=1, select bank1
  4243  14B3  1303               	bcf	3,6	;RP1=0, select bank1
  4244  14B4  00C5               	movwf	??_LCD_Init^(0+128)
  4245  14B5                     u4157:	
  4246  14B5  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4247  14B6  2CB5               	goto	u4157
  4248                           
  4249                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  4250  14B7  3001               	movlw	1
  4251  14B8  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4252                           
  4253                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  4254  14BD  300C               	movlw	12
  4255  14BE  1683               	bsf	3,5	;RP0=1, select bank1
  4256  14BF  1303               	bcf	3,6	;RP1=0, select bank1
  4257  14C0  00C6               	movwf	(??_LCD_Init^(0+128)+1)
  4258  14C1  30F7               	movlw	247
  4259  14C2  00C5               	movwf	??_LCD_Init^(0+128)
  4260  14C3                     u4167:	
  4261  14C3  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4262  14C4  2CC3               	goto	u4167
  4263  14C5  0BC6               	decfsz	(??_LCD_Init^(0+128)+1),f
  4264  14C6  2CC3               	goto	u4167
  4265                           
  4266                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  4267  14C7  300C               	movlw	12
  4268  14C8  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4269                           
  4270                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4271  14CD  303D               	movlw	61
  4272  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  4273  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  4274  14D0  00C5               	movwf	??_LCD_Init^(0+128)
  4275  14D1                     u4177:	
  4276  14D1  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4277  14D2  2CD1               	goto	u4177
  4278                           
  4279                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  4280  14D3  3006               	movlw	6
  4281  14D4  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4282                           
  4283                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4284  14D9  303D               	movlw	61
  4285  14DA  1683               	bsf	3,5	;RP0=1, select bank1
  4286  14DB  1303               	bcf	3,6	;RP1=0, select bank1
  4287  14DC  00C5               	movwf	??_LCD_Init^(0+128)
  4288  14DD                     u4187:	
  4289  14DD  0BC5               	decfsz	??_LCD_Init^(0+128),f
  4290  14DE  2CDD               	goto	u4187
  4291  14DF  0008               	return
  4292  14E0                     __end_of_LCD_Init:	
  4293                           
  4294                           	psect	text18
  4295  115A                     __ptext18:	
  4296 ;; *************** function _LCD_Cursor *****************
  4297 ;; Defined at:
  4298 ;;		line 10 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  Row             1    wreg     unsigned char 
  4301 ;;  Col             1    0[BANK1 ] unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  Row             1    2[BANK1 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;		None               void
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       1       0       0
  4314 ;;      Locals:         0       0       1       0       0
  4315 ;;      Temps:          0       0       1       0       0
  4316 ;;      Totals:         0       0       3       0       0
  4317 ;;Total ram usage:        3 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    5
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function _LCD_Cursor
  4329  115A                     _LCD_Cursor:	
  4330                           
  4331                           ;incstack = 0
  4332                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4333                           ;LCD_Cursor@Row stored from wreg
  4334  115A  1683               	bsf	3,5	;RP0=1, select bank1
  4335  115B  1303               	bcf	3,6	;RP1=0, select bank1
  4336  115C  00C5               	movwf	LCD_Cursor@Row^(0+128)
  4337                           
  4338                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4339  115D  1283               	bcf	3,5	;RP0=0, select bank0
  4340  115E  1303               	bcf	3,6	;RP1=0, select bank0
  4341  115F  1009               	bcf	9,0	;volatile
  4342                           
  4343                           ;lcd.c: 14: if (Row == 0)
  4344  1160  1683               	bsf	3,5	;RP0=1, select bank1
  4345  1161  1303               	bcf	3,6	;RP1=0, select bank1
  4346  1162  08C5               	movf	LCD_Cursor@Row^(0+128),f
  4347  1163  1D03               	skipz
  4348  1164  2968               	goto	l2999
  4349                           
  4350                           ;lcd.c: 15: {
  4351                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4352  1165  0843               	movf	LCD_Cursor@Col^(0+128),w
  4353  1166  3E80               	addlw	128
  4354  1167  296C               	goto	L2
  4355  1168                     l2999:	
  4356                           ;lcd.c: 17: }
  4357                           
  4358                           
  4359                           ;lcd.c: 18: else
  4360                           ;lcd.c: 19: {
  4361                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4362  1168  1683               	bsf	3,5	;RP0=1, select bank1
  4363  1169  1303               	bcf	3,6	;RP1=0, select bank1
  4364  116A  0843               	movf	LCD_Cursor@Col^(0+128),w
  4365  116B  3EC0               	addlw	192
  4366  116C                     L2:	
  4367  116C  1283               	bcf	3,5	;RP0=0, select bank0
  4368  116D  1303               	bcf	3,6	;RP1=0, select bank0
  4369  116E  0088               	movwf	8	;volatile
  4370                           
  4371                           ;lcd.c: 21: }
  4372                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4373  116F  1489               	bsf	9,1	;volatile
  4374                           
  4375                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4376  1170  303D               	movlw	61
  4377  1171  1683               	bsf	3,5	;RP0=1, select bank1
  4378  1172  1303               	bcf	3,6	;RP1=0, select bank1
  4379  1173  00C4               	movwf	??_LCD_Cursor^(0+128)
  4380  1174                     u4197:	
  4381  1174  0BC4               	decfsz	??_LCD_Cursor^(0+128),f
  4382  1175  2974               	goto	u4197
  4383                           
  4384                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4385  1176  1283               	bcf	3,5	;RP0=0, select bank0
  4386  1177  1303               	bcf	3,6	;RP1=0, select bank0
  4387  1178  1089               	bcf	9,1	;volatile
  4388  1179  0008               	return
  4389  117A                     __end_of_LCD_Cursor:	
  4390                           
  4391                           	psect	text19
  4392  1226                     __ptext19:	
  4393 ;; *************** function _LCD_Clear *****************
  4394 ;; Defined at:
  4395 ;;		line 71 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0, pclath, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0
  4411 ;;      Temps:          0       0       2       0       0
  4412 ;;      Totals:         0       0       2       0       0
  4413 ;;Total ram usage:        2 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    6
  4416 ;; This function calls:
  4417 ;;		_LCD_WriteCmd
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _LCD_Clear
  4425  1226                     _LCD_Clear:	
  4426                           
  4427                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4428                           
  4429                           ;incstack = 0
  4430                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4431  1226  3001               	movlw	1
  4432  1227  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4433                           
  4434                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4435  122C  300C               	movlw	12
  4436  122D  1683               	bsf	3,5	;RP0=1, select bank1
  4437  122E  1303               	bcf	3,6	;RP1=0, select bank1
  4438  122F  00C6               	movwf	(??_LCD_Clear^(0+128)+1)
  4439  1230  30F7               	movlw	247
  4440  1231  00C5               	movwf	??_LCD_Clear^(0+128)
  4441  1232                     u4207:	
  4442  1232  0BC5               	decfsz	??_LCD_Clear^(0+128),f
  4443  1233  2A32               	goto	u4207
  4444  1234  0BC6               	decfsz	(??_LCD_Clear^(0+128)+1),f
  4445  1235  2A32               	goto	u4207
  4446                           
  4447                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4448  1236  300C               	movlw	12
  4449  1237  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4450                           
  4451                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4452  123C  303D               	movlw	61
  4453  123D  1683               	bsf	3,5	;RP0=1, select bank1
  4454  123E  1303               	bcf	3,6	;RP1=0, select bank1
  4455  123F  00C5               	movwf	??_LCD_Clear^(0+128)
  4456  1240                     u4217:	
  4457  1240  0BC5               	decfsz	??_LCD_Clear^(0+128),f
  4458  1241  2A40               	goto	u4217
  4459                           
  4460                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4461  1242  3006               	movlw	6
  4462  1243  160A  118A  20F3  160A  118A  	fcall	_LCD_WriteCmd
  4463                           
  4464                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4465  1248  303D               	movlw	61
  4466  1249  1683               	bsf	3,5	;RP0=1, select bank1
  4467  124A  1303               	bcf	3,6	;RP1=0, select bank1
  4468  124B  00C5               	movwf	??_LCD_Clear^(0+128)
  4469  124C                     u4227:	
  4470  124C  0BC5               	decfsz	??_LCD_Clear^(0+128),f
  4471  124D  2A4C               	goto	u4227
  4472  124E  0008               	return
  4473  124F                     __end_of_LCD_Clear:	
  4474                           
  4475                           	psect	text20
  4476  10F3                     __ptext20:	
  4477 ;; *************** function _LCD_WriteCmd *****************
  4478 ;; Defined at:
  4479 ;;		line 32 in file "R:\Note\Ultimo C no MPLAB\lcd.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  Byte            1    wreg     unsigned char 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  Byte            1    1[BANK1 ] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       0       0       0       0
  4494 ;;      Locals:         0       0       1       0       0
  4495 ;;      Temps:          0       0       1       0       0
  4496 ;;      Totals:         0       0       2       0       0
  4497 ;;Total ram usage:        2 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    5
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_LCD_Clear
  4504 ;;		_LCD_Init
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _LCD_WriteCmd
  4510  10F3                     _LCD_WriteCmd:	
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _LCD_WriteCmd: [wreg]
  4514                           ;LCD_WriteCmd@Byte stored from wreg
  4515  10F3  1683               	bsf	3,5	;RP0=1, select bank1
  4516  10F4  1303               	bcf	3,6	;RP1=0, select bank1
  4517  10F5  00C4               	movwf	LCD_WriteCmd@Byte^(0+128)
  4518                           
  4519                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4520  10F6  1283               	bcf	3,5	;RP0=0, select bank0
  4521  10F7  1303               	bcf	3,6	;RP1=0, select bank0
  4522  10F8  1009               	bcf	9,0	;volatile
  4523                           
  4524                           ;lcd.c: 36: PORTD = Byte;
  4525  10F9  1683               	bsf	3,5	;RP0=1, select bank1
  4526  10FA  1303               	bcf	3,6	;RP1=0, select bank1
  4527  10FB  0844               	movf	LCD_WriteCmd@Byte^(0+128),w
  4528  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  4529  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  4530  10FE  0088               	movwf	8	;volatile
  4531                           
  4532                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4533  10FF  1489               	bsf	9,1	;volatile
  4534                           
  4535                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4536  1100  303D               	movlw	61
  4537  1101  1683               	bsf	3,5	;RP0=1, select bank1
  4538  1102  1303               	bcf	3,6	;RP1=0, select bank1
  4539  1103  00C3               	movwf	??_LCD_WriteCmd^(0+128)
  4540  1104                     u4237:	
  4541  1104  0BC3               	decfsz	??_LCD_WriteCmd^(0+128),f
  4542  1105  2904               	goto	u4237
  4543                           
  4544                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4545  1106  1283               	bcf	3,5	;RP0=0, select bank0
  4546  1107  1303               	bcf	3,6	;RP1=0, select bank0
  4547  1108  1089               	bcf	9,1	;volatile
  4548  1109  0008               	return
  4549  110A                     __end_of_LCD_WriteCmd:	
  4550                           
  4551                           	psect	text21
  4552  10CD                     __ptext21:	
  4553 ;; *************** function _ADC_Init *****************
  4554 ;; Defined at:
  4555 ;;		line 6 in file "R:\Note\Ultimo C no MPLAB\adc.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		None
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0
  4572 ;;      Totals:         0       0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    5
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _ADC_Init
  4585  10CD                     _ADC_Init:	
  4586                           
  4587                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _ADC_Init: []
  4591  10CD  1683               	bsf	3,5	;RP0=1, select bank1
  4592  10CE  1303               	bcf	3,6	;RP1=0, select bank1
  4593  10CF  179F               	bsf	31,7	;volatile
  4594                           
  4595                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4596  10D0  159F               	bsf	31,3	;volatile
  4597                           
  4598                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4599  10D1  151F               	bsf	31,2	;volatile
  4600                           
  4601                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4602  10D2  149F               	bsf	31,1	;volatile
  4603                           
  4604                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4605  10D3  101F               	bcf	31,0	;volatile
  4606                           
  4607                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4608  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4609  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4610  10D6  179F               	bsf	31,7	;volatile
  4611                           
  4612                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4613  10D7  131F               	bcf	31,6	;volatile
  4614                           
  4615                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4616  10D8  1683               	bsf	3,5	;RP0=1, select bank1
  4617  10D9  1303               	bcf	3,6	;RP1=0, select bank1
  4618  10DA  130C               	bcf	12,6	;volatile
  4619                           
  4620                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4621  10DB  1283               	bcf	3,5	;RP0=0, select bank0
  4622  10DC  1303               	bcf	3,6	;RP1=0, select bank0
  4623  10DD  130C               	bcf	12,6	;volatile
  4624  10DE  0008               	return
  4625  10DF                     __end_of_ADC_Init:	
  4626                           
  4627                           	psect	text22
  4628  0CCE                     __ptext22:	
  4629 ;; *************** function _ISR *****************
  4630 ;; Defined at:
  4631 ;;		line 330 in file "R:\Note\Ultimo C no MPLAB\main.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4645 ;;      Params:         0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0
  4647 ;;      Temps:          0       4       0       0       0
  4648 ;;      Totals:         0       4       0       0       0
  4649 ;;Total ram usage:        4 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    4
  4652 ;; This function calls:
  4653 ;;		_Fuzzy
  4654 ;;		_USART_ReceiveChar
  4655 ;;		___lwtoft
  4656 ;;		i1_PWM_DutyCycle2
  4657 ;;		i1_TIMER0_Set
  4658 ;;		i1_USART_WriteString
  4659 ;;		i1___lwdiv
  4660 ;;		i1___wmul
  4661 ;; This function is called by:
  4662 ;;		Interrupt level 1
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _ISR
  4668  0CCE                     _ISR:	
  4669                           
  4670                           ;main.c: 333: if (PIR1bits.RCIF)
  4671  0CCE  1E8C               	btfss	12,5	;volatile
  4672  0CCF  2DDB               	goto	i1l3255
  4673                           
  4674                           ;main.c: 334: {
  4675                           ;main.c: 335: if (USART_ReceiveChar() == '0')
  4676  0CD0  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4677  0CD5  3A30               	xorlw	48
  4678  0CD6  1D03               	skipz
  4679  0CD7  2CED               	goto	i1l3195
  4680                           
  4681                           ;main.c: 336: {
  4682                           ;main.c: 337: USART_WriteString("\n\rdesligado\n\r");
  4683  0CD8  30A0               	movlw	low (STR_1-__stringbase)
  4684  0CD9  00F1               	movwf	i1USART_WriteString@str
  4685  0CDA  3080               	movlw	128
  4686  0CDB  00F2               	movwf	i1USART_WriteString@str+1
  4687  0CDC  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4688                           
  4689                           ;main.c: 339: PWM_DutyCycle2(0);
  4690  0CE1  3000               	movlw	0
  4691  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  4693  0CE4  00BE               	movwf	i1PWM_DutyCycle2@valor
  4694  0CE5  3000               	movlw	0
  4695  0CE6  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  4696  0CE7  160A  118A  2121  120A  158A  	fcall	i1_PWM_DutyCycle2
  4697                           
  4698                           ;main.c: 340: return;
  4699  0CEC  2E3C               	goto	i1l181
  4700  0CED                     i1l3195:	
  4701                           
  4702                           ;main.c: 341: }
  4703                           ;main.c: 343: if (USART_ReceiveChar() == '1')
  4704  0CED  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4705  0CF2  3A31               	xorlw	49
  4706  0CF3  1D03               	skipz
  4707  0CF4  2D04               	goto	i1l3201
  4708                           
  4709                           ;main.c: 344: {
  4710                           ;main.c: 345: USART_WriteString("\n\rpwm = \n\r");
  4711  0CF5  30AE               	movlw	low (STR_2-__stringbase)
  4712  0CF6  00F1               	movwf	i1USART_WriteString@str
  4713  0CF7  3080               	movlw	128
  4714  0CF8  00F2               	movwf	i1USART_WriteString@str+1
  4715  0CF9  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4716                           
  4717                           ;main.c: 346: setpointUI = 720;
  4718  0CFE  30D0               	movlw	208
  4719  0CFF  1683               	bsf	3,5	;RP0=1, select bank1
  4720  0D00  1303               	bcf	3,6	;RP1=0, select bank1
  4721  0D01  00ED               	movwf	_setpointUI^(0+128)
  4722  0D02  3002               	movlw	2
  4723  0D03  00EE               	movwf	(_setpointUI^(0+128)+1)
  4724  0D04                     i1l3201:	
  4725                           
  4726                           ;main.c: 348: }
  4727                           ;main.c: 350: if (USART_ReceiveChar() == '2')
  4728  0D04  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4729  0D09  3A32               	xorlw	50
  4730  0D0A  1D03               	skipz
  4731  0D0B  2D1B               	goto	i1l3207
  4732                           
  4733                           ;main.c: 351: {
  4734                           ;main.c: 352: USART_WriteString("\n\rpwm = \n\r");
  4735  0D0C  30AE               	movlw	low (STR_2-__stringbase)
  4736  0D0D  00F1               	movwf	i1USART_WriteString@str
  4737  0D0E  3080               	movlw	128
  4738  0D0F  00F2               	movwf	i1USART_WriteString@str+1
  4739  0D10  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4740                           
  4741                           ;main.c: 353: setpointUI = 1450;
  4742  0D15  30AA               	movlw	170
  4743  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  4744  0D17  1303               	bcf	3,6	;RP1=0, select bank1
  4745  0D18  00ED               	movwf	_setpointUI^(0+128)
  4746  0D19  3005               	movlw	5
  4747  0D1A  00EE               	movwf	(_setpointUI^(0+128)+1)
  4748  0D1B                     i1l3207:	
  4749                           
  4750                           ;main.c: 355: }
  4751                           ;main.c: 357: if (USART_ReceiveChar() == '3')
  4752  0D1B  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4753  0D20  3A33               	xorlw	51
  4754  0D21  1D03               	skipz
  4755  0D22  2D32               	goto	i1l3213
  4756                           
  4757                           ;main.c: 358: {
  4758                           ;main.c: 359: USART_WriteString("\n\rpwm = \n\r");
  4759  0D23  30AE               	movlw	low (STR_2-__stringbase)
  4760  0D24  00F1               	movwf	i1USART_WriteString@str
  4761  0D25  3080               	movlw	128
  4762  0D26  00F2               	movwf	i1USART_WriteString@str+1
  4763  0D27  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4764                           
  4765                           ;main.c: 360: setpointUI = 2828;
  4766  0D2C  300C               	movlw	12
  4767  0D2D  1683               	bsf	3,5	;RP0=1, select bank1
  4768  0D2E  1303               	bcf	3,6	;RP1=0, select bank1
  4769  0D2F  00ED               	movwf	_setpointUI^(0+128)
  4770  0D30  300B               	movlw	11
  4771  0D31  00EE               	movwf	(_setpointUI^(0+128)+1)
  4772  0D32                     i1l3213:	
  4773                           
  4774                           ;main.c: 362: }
  4775                           ;main.c: 364: if (USART_ReceiveChar() == '4')
  4776  0D32  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4777  0D37  3A34               	xorlw	52
  4778  0D38  1D03               	skipz
  4779  0D39  2D49               	goto	i1l3219
  4780                           
  4781                           ;main.c: 365: {
  4782                           ;main.c: 366: USART_WriteString("\n\rpwm = \n\r");
  4783  0D3A  30AE               	movlw	low (STR_2-__stringbase)
  4784  0D3B  00F1               	movwf	i1USART_WriteString@str
  4785  0D3C  3080               	movlw	128
  4786  0D3D  00F2               	movwf	i1USART_WriteString@str+1
  4787  0D3E  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4788                           
  4789                           ;main.c: 367: setpointUI = 3256;
  4790  0D43  30B8               	movlw	184
  4791  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  4792  0D45  1303               	bcf	3,6	;RP1=0, select bank1
  4793  0D46  00ED               	movwf	_setpointUI^(0+128)
  4794  0D47  300C               	movlw	12
  4795  0D48  00EE               	movwf	(_setpointUI^(0+128)+1)
  4796  0D49                     i1l3219:	
  4797                           
  4798                           ;main.c: 369: }
  4799                           ;main.c: 371: if (USART_ReceiveChar() == '5')
  4800  0D49  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4801  0D4E  3A35               	xorlw	53
  4802  0D4F  1D03               	skipz
  4803  0D50  2D60               	goto	i1l3225
  4804                           
  4805                           ;main.c: 372: {
  4806                           ;main.c: 373: USART_WriteString("\n\rpwm = \n\r");
  4807  0D51  30AE               	movlw	low (STR_2-__stringbase)
  4808  0D52  00F1               	movwf	i1USART_WriteString@str
  4809  0D53  3080               	movlw	128
  4810  0D54  00F2               	movwf	i1USART_WriteString@str+1
  4811  0D55  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4812                           
  4813                           ;main.c: 374: setpointUI = 4510;
  4814  0D5A  309E               	movlw	158
  4815  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  4816  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  4817  0D5D  00ED               	movwf	_setpointUI^(0+128)
  4818  0D5E  3011               	movlw	17
  4819  0D5F  00EE               	movwf	(_setpointUI^(0+128)+1)
  4820  0D60                     i1l3225:	
  4821                           
  4822                           ;main.c: 376: }
  4823                           ;main.c: 378: if (USART_ReceiveChar() == '6')
  4824  0D60  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4825  0D65  3A36               	xorlw	54
  4826  0D66  1D03               	skipz
  4827  0D67  2D77               	goto	i1l3231
  4828                           
  4829                           ;main.c: 379: {
  4830                           ;main.c: 380: USART_WriteString("\n\rpwm = 768\n\r");
  4831  0D68  3092               	movlw	low (STR_7-__stringbase)
  4832  0D69  00F1               	movwf	i1USART_WriteString@str
  4833  0D6A  3080               	movlw	128
  4834  0D6B  00F2               	movwf	i1USART_WriteString@str+1
  4835  0D6C  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4836                           
  4837                           ;main.c: 381: setpointUI = 5760;
  4838  0D71  3080               	movlw	128
  4839  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  4840  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  4841  0D74  00ED               	movwf	_setpointUI^(0+128)
  4842  0D75  3016               	movlw	22
  4843  0D76  00EE               	movwf	(_setpointUI^(0+128)+1)
  4844  0D77                     i1l3231:	
  4845                           
  4846                           ;main.c: 383: }
  4847                           ;main.c: 385: if (USART_ReceiveChar() == '7')
  4848  0D77  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4849  0D7C  3A37               	xorlw	55
  4850  0D7D  1D03               	skipz
  4851  0D7E  2D8E               	goto	i1l3237
  4852                           
  4853                           ;main.c: 386: {
  4854                           ;main.c: 387: USART_WriteString("\n\rpwm = 896\n\r");
  4855  0D7F  3084               	movlw	low (STR_8-__stringbase)
  4856  0D80  00F1               	movwf	i1USART_WriteString@str
  4857  0D81  3080               	movlw	128
  4858  0D82  00F2               	movwf	i1USART_WriteString@str+1
  4859  0D83  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4860                           
  4861                           ;main.c: 388: setpointUI = 6890;
  4862  0D88  30EA               	movlw	234
  4863  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  4864  0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  4865  0D8B  00ED               	movwf	_setpointUI^(0+128)
  4866  0D8C  301A               	movlw	26
  4867  0D8D  00EE               	movwf	(_setpointUI^(0+128)+1)
  4868  0D8E                     i1l3237:	
  4869                           
  4870                           ;main.c: 390: }
  4871                           ;main.c: 392: if (USART_ReceiveChar() == '8')
  4872  0D8E  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4873  0D93  3A38               	xorlw	56
  4874  0D94  1D03               	skipz
  4875  0D95  2DA5               	goto	i1l3243
  4876                           
  4877                           ;main.c: 393: {
  4878                           ;main.c: 394: USART_WriteString("\n\rpwm = \n\r");
  4879  0D96  30AE               	movlw	low (STR_2-__stringbase)
  4880  0D97  00F1               	movwf	i1USART_WriteString@str
  4881  0D98  3080               	movlw	128
  4882  0D99  00F2               	movwf	i1USART_WriteString@str+1
  4883  0D9A  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4884                           
  4885                           ;main.c: 395: setpointUI = 8100;
  4886  0D9F  30A4               	movlw	164
  4887  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  4888  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  4889  0DA2  00ED               	movwf	_setpointUI^(0+128)
  4890  0DA3  301F               	movlw	31
  4891  0DA4  00EE               	movwf	(_setpointUI^(0+128)+1)
  4892  0DA5                     i1l3243:	
  4893                           
  4894                           ;main.c: 397: }
  4895                           ;main.c: 399: if (USART_ReceiveChar() == '9')
  4896  0DA5  120A  118A  27E4  120A  158A  	fcall	_USART_ReceiveChar
  4897  0DAA  3A39               	xorlw	57
  4898  0DAB  1D03               	skipz
  4899  0DAC  2DBC               	goto	i1l3249
  4900                           
  4901                           ;main.c: 400: {
  4902                           ;main.c: 401: USART_WriteString("\n\rpwm = 1023\n\r");
  4903  0DAD  3075               	movlw	low (STR_10-__stringbase)
  4904  0DAE  00F1               	movwf	i1USART_WriteString@str
  4905  0DAF  3080               	movlw	128
  4906  0DB0  00F2               	movwf	i1USART_WriteString@str+1
  4907  0DB1  160A  118A  21BC  120A  158A  	fcall	i1_USART_WriteString
  4908                           
  4909                           ;main.c: 402: setpointUI = 9000;
  4910  0DB6  3028               	movlw	40
  4911  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  4912  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  4913  0DB9  00ED               	movwf	_setpointUI^(0+128)
  4914  0DBA  3023               	movlw	35
  4915  0DBB  00EE               	movwf	(_setpointUI^(0+128)+1)
  4916  0DBC                     i1l3249:	
  4917                           
  4918                           ;main.c: 404: }
  4919                           ;main.c: 408: Fuzzy();
  4920  0DBC  120A  118A  2047  120A  158A  	fcall	_Fuzzy
  4921                           
  4922                           ;main.c: 409: tf = (setpointUI - 100);
  4923  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  4924  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  4925  0DC3  086D               	movf	_setpointUI^(0+128),w
  4926  0DC4  3E9C               	addlw	156
  4927  0DC5  00F8               	movwf	___lwtoft@c
  4928  0DC6  086E               	movf	(_setpointUI+1)^(0+128),w
  4929  0DC7  1803               	skipnc
  4930  0DC8  3E01               	addlw	1
  4931  0DC9  3EFF               	addlw	255
  4932  0DCA  00F9               	movwf	___lwtoft@c+1
  4933  0DCB  160A  118A  20DF  120A  158A  	fcall	___lwtoft
  4934  0DD0  0878               	movf	?___lwtoft,w
  4935  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  4936  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  4937  0DD3  00E8               	movwf	_tf^(0+128)
  4938  0DD4  0879               	movf	?___lwtoft+1,w
  4939  0DD5  00E9               	movwf	(_tf+1)^(0+128)
  4940  0DD6  087A               	movf	?___lwtoft+2,w
  4941  0DD7  00EA               	movwf	(_tf+2)^(0+128)
  4942                           
  4943                           ;main.c: 411: PIR1bits.RCIF = 0;
  4944  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0DDA  128C               	bcf	12,5	;volatile
  4947  0DDB                     i1l3255:	
  4948                           
  4949                           ;main.c: 412: }
  4950                           ;main.c: 415: if (PIR1bits.ADIF)
  4951  0DDB  1B0C               	btfsc	12,6	;volatile
  4952                           
  4953                           ;main.c: 416: {
  4954                           ;main.c: 420: PIR1bits.ADIF = 0;
  4955  0DDC  130C               	bcf	12,6	;volatile
  4956                           
  4957                           ;main.c: 421: }
  4958                           ;main.c: 425: if (INTCONbits.T0IF)
  4959  0DDD  1D0B               	btfss	11,2	;volatile
  4960  0DDE  2E38               	goto	i1l3281
  4961                           
  4962                           ;main.c: 426: {
  4963                           ;main.c: 428: TIMER0_Set(238);
  4964  0DDF  30EE               	movlw	238
  4965  0DE0  160A  118A  2062  120A  158A  	fcall	i1_TIMER0_Set
  4966                           
  4967                           ;main.c: 431: if (contagens_tm0 < 499)
  4968  0DE5  3001               	movlw	1
  4969  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  4970  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  4971  0DE8  023E               	subwf	(_contagens_tm0+1)^(0+128),w
  4972  0DE9  30F3               	movlw	243
  4973  0DEA  1903               	skipnz
  4974  0DEB  023D               	subwf	_contagens_tm0^(0+128),w
  4975  0DEC  1803               	skipnc
  4976  0DED  2DF8               	goto	i1l3267
  4977                           
  4978                           ;main.c: 432: {
  4979                           ;main.c: 434: contagens_tm0++;
  4980  0DEE  3001               	movlw	1
  4981  0DEF  07BD               	addwf	_contagens_tm0^(0+128),f
  4982  0DF0  1803               	skipnc
  4983  0DF1  0ABE               	incf	(_contagens_tm0+1)^(0+128),f
  4984  0DF2  3000               	movlw	0
  4985  0DF3  07BE               	addwf	(_contagens_tm0+1)^(0+128),f
  4986                           
  4987                           ;main.c: 437: PORTBbits.RB6 = 1;
  4988  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0DF6  1706               	bsf	6,6	;volatile
  4991                           
  4992                           ;main.c: 438: }
  4993  0DF7  2E37               	goto	i1l3279
  4994  0DF8                     i1l3267:	
  4995                           
  4996                           ;main.c: 439: else
  4997                           ;main.c: 440: {
  4998                           ;main.c: 442: contagens_tm0 = 0;
  4999  0DF8  1683               	bsf	3,5	;RP0=1, select bank1
  5000  0DF9  1303               	bcf	3,6	;RP1=0, select bank1
  5001  0DFA  01BD               	clrf	_contagens_tm0^(0+128)
  5002  0DFB  01BE               	clrf	(_contagens_tm0+1)^(0+128)
  5003                           
  5004                           ;main.c: 445: pulsos = (TMR1H << 8) + TMR1L;
  5005  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0DFE  080F               	movf	15,w	;volatile
  5008  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  5009  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  5010  0E01  01C0               	clrf	(_pulsos+1)^(0+128)
  5011  0E02  07C0               	addwf	(_pulsos+1)^(0+128),f
  5012  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0E05  080E               	movf	14,w	;volatile
  5015  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  5016  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  5017  0E08  01BF               	clrf	_pulsos^(0+128)
  5018  0E09  07BF               	addwf	_pulsos^(0+128),f
  5019                           
  5020                           ;main.c: 446: rpm = ((pulsos / pas_cooler) * 120);
  5021  0E0A  086C               	movf	(_pas_cooler+1)^(0+128),w
  5022  0E0B  01F1               	clrf	i1___lwdiv@divisor+1
  5023  0E0C  07F1               	addwf	i1___lwdiv@divisor+1,f
  5024  0E0D  086B               	movf	_pas_cooler^(0+128),w
  5025  0E0E  01F0               	clrf	i1___lwdiv@divisor
  5026  0E0F  07F0               	addwf	i1___lwdiv@divisor,f
  5027  0E10  0840               	movf	(_pulsos+1)^(0+128),w
  5028  0E11  01F3               	clrf	i1___lwdiv@dividend+1
  5029  0E12  07F3               	addwf	i1___lwdiv@dividend+1,f
  5030  0E13  083F               	movf	_pulsos^(0+128),w
  5031  0E14  01F2               	clrf	i1___lwdiv@dividend
  5032  0E15  07F2               	addwf	i1___lwdiv@dividend,f
  5033  0E16  160A  118A  22E7  120A  158A  	fcall	i1___lwdiv
  5034  0E1B  0871               	movf	?i1___lwdiv+1,w
  5035  0E1C  01F9               	clrf	i1___wmul@multiplier+1
  5036  0E1D  07F9               	addwf	i1___wmul@multiplier+1,f
  5037  0E1E  0870               	movf	?i1___lwdiv,w
  5038  0E1F  01F8               	clrf	i1___wmul@multiplier
  5039  0E20  07F8               	addwf	i1___wmul@multiplier,f
  5040  0E21  3078               	movlw	120
  5041  0E22  00FA               	movwf	i1___wmul@multiplicand
  5042  0E23  3000               	movlw	0
  5043  0E24  00FB               	movwf	i1___wmul@multiplicand+1
  5044  0E25  160A  118A  21DF  120A  158A  	fcall	i1___wmul
  5045  0E2A  0879               	movf	?i1___wmul+1,w
  5046  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  5047  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  5048  0E2D  01C2               	clrf	(_rpm+1)^(0+128)
  5049  0E2E  07C2               	addwf	(_rpm+1)^(0+128),f
  5050  0E2F  0878               	movf	?i1___wmul,w
  5051  0E30  01C1               	clrf	_rpm^(0+128)
  5052  0E31  07C1               	addwf	_rpm^(0+128),f
  5053                           
  5054                           ;main.c: 449: TMR1L = 0x00;
  5055  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0E34  018E               	clrf	14	;volatile
  5058                           
  5059                           ;main.c: 450: TMR1H = 0x00;
  5060  0E35  018F               	clrf	15	;volatile
  5061                           
  5062                           ;main.c: 453: PORTBbits.RB6 = 0;
  5063  0E36  1306               	bcf	6,6	;volatile
  5064  0E37                     i1l3279:	
  5065                           
  5066                           ;main.c: 454: }
  5067                           ;main.c: 457: INTCONbits.T0IF = 0;
  5068  0E37  110B               	bcf	11,2	;volatile
  5069  0E38                     i1l3281:	
  5070                           
  5071                           ;main.c: 458: }
  5072                           ;main.c: 461: if (PIR1bits.TMR1IF)
  5073  0E38  180C               	btfsc	12,0	;volatile
  5074                           
  5075                           ;main.c: 462: {
  5076                           ;main.c: 466: PIR1bits.TMR1IF = 0;
  5077  0E39  100C               	bcf	12,0	;volatile
  5078                           
  5079                           ;main.c: 467: }
  5080                           ;main.c: 470: if (PIR1bits.SSPIF)
  5081  0E3A  198C               	btfsc	12,3	;volatile
  5082                           
  5083                           ;main.c: 471: {
  5084                           ;main.c: 475: PIR1bits.SSPIF = 0;
  5085  0E3B  118C               	bcf	12,3	;volatile
  5086  0E3C                     i1l181:	
  5087  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0E3E  086C               	movf	??_ISR+3,w
  5090  0E3F  00FF               	movwf	127
  5091  0E40  086B               	movf	??_ISR+2,w
  5092  0E41  008A               	movwf	10
  5093  0E42  086A               	movf	??_ISR+1,w
  5094  0E43  0084               	movwf	4
  5095  0E44  0E69               	swapf	??_ISR^0,w
  5096  0E45  0083               	movwf	3
  5097  0E46  0EFE               	swapf	126,f
  5098  0E47  0E7E               	swapf	126,w
  5099  0E48  0009               	retfie
  5100  0E49                     __end_of_ISR:	
  5101                           
  5102                           	psect	intentry
  5103  0004                     __pintentry:	
  5104                           ;incstack = 0
  5105                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5106                           
  5107  0004                     interrupt_function:	
  5108  007E                     saved_w	set	btemp
  5109  0004  00FE               	movwf	btemp
  5110  0005  0E03               	swapf	3,w
  5111  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0008  00E9               	movwf	??_ISR
  5114  0009  0804               	movf	4,w
  5115  000A  00EA               	movwf	??_ISR+1
  5116  000B  080A               	movf	10,w
  5117  000C  00EB               	movwf	??_ISR+2
  5118  000D  087F               	movf	btemp+1,w
  5119  000E  00EC               	movwf	??_ISR+3
  5120  000F  120A  158A  2CCE   	ljmp	_ISR
  5121                           
  5122                           	psect	text23
  5123  11DF                     __ptext23:	
  5124 ;; *************** function i1___wmul *****************
  5125 ;; Defined at:
  5126 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  multiplier      2    8[COMMON] unsigned int 
  5129 ;;  multiplicand    2   10[COMMON] unsigned int 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  __wmul          2   12[COMMON] unsigned int 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  2    8[COMMON] unsigned int 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         4       0       0       0       0
  5142 ;;      Locals:         2       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0
  5144 ;;      Totals:         6       0       0       0       0
  5145 ;;Total ram usage:        6 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_ISR
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function i1___wmul
  5156  11DF                     i1___wmul:	
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5160  11DF  01FC               	clrf	i1___wmul@product
  5161  11E0  01FD               	clrf	i1___wmul@product+1
  5162  11E1                     i1l3143:	
  5163  11E1  1C78               	btfss	i1___wmul@multiplier,0
  5164  11E2  29E9               	goto	i1l595
  5165  11E3  087A               	movf	i1___wmul@multiplicand,w
  5166  11E4  07FC               	addwf	i1___wmul@product,f
  5167  11E5  1803               	skipnc
  5168  11E6  0AFD               	incf	i1___wmul@product+1,f
  5169  11E7  087B               	movf	i1___wmul@multiplicand+1,w
  5170  11E8  07FD               	addwf	i1___wmul@product+1,f
  5171  11E9                     i1l595:	
  5172  11E9  3001               	movlw	1
  5173  11EA                     u382_25:	
  5174  11EA  1003               	clrc
  5175  11EB  0DFA               	rlf	i1___wmul@multiplicand,f
  5176  11EC  0DFB               	rlf	i1___wmul@multiplicand+1,f
  5177  11ED  3EFF               	addlw	-1
  5178  11EE  1D03               	skipz
  5179  11EF  29EA               	goto	u382_25
  5180  11F0  3001               	movlw	1
  5181  11F1                     u383_25:	
  5182  11F1  1003               	clrc
  5183  11F2  0CF9               	rrf	i1___wmul@multiplier+1,f
  5184  11F3  0CF8               	rrf	i1___wmul@multiplier,f
  5185  11F4  3EFF               	addlw	-1
  5186  11F5  1D03               	skipz
  5187  11F6  29F1               	goto	u383_25
  5188  11F7  0879               	movf	i1___wmul@multiplier+1,w
  5189  11F8  0478               	iorwf	i1___wmul@multiplier,w
  5190  11F9  1D03               	skipz
  5191  11FA  29E1               	goto	i1l3143
  5192  11FB  087D               	movf	i1___wmul@product+1,w
  5193  11FC  01F9               	clrf	?i1___wmul+1
  5194  11FD  07F9               	addwf	?i1___wmul+1,f
  5195  11FE  087C               	movf	i1___wmul@product,w
  5196  11FF  01F8               	clrf	?i1___wmul
  5197  1200  07F8               	addwf	?i1___wmul,f
  5198  1201  0008               	return
  5199  1202                     __end_ofi1___wmul:	
  5200                           
  5201                           	psect	text24
  5202  12E7                     __ptext24:	
  5203 ;; *************** function i1___lwdiv *****************
  5204 ;; Defined at:
  5205 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  divisor         2    0[COMMON] unsigned int 
  5208 ;;  dividend        2    2[COMMON] unsigned int 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5211 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  2    0[COMMON] unsigned int 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5221 ;;      Params:         4       0       0       0       0
  5222 ;;      Locals:         3       0       0       0       0
  5223 ;;      Temps:          1       0       0       0       0
  5224 ;;      Totals:         8       0       0       0       0
  5225 ;;Total ram usage:        8 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_ISR
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function i1___lwdiv
  5236  12E7                     i1___lwdiv:	
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5240  12E7  01F5               	clrf	i1___lwdiv@quotient
  5241  12E8  01F6               	clrf	i1___lwdiv@quotient+1
  5242  12E9  0871               	movf	i1___lwdiv@divisor+1,w
  5243  12EA  0470               	iorwf	i1___lwdiv@divisor,w
  5244  12EB  1903               	skipnz
  5245  12EC  2B1E               	goto	i1l3175
  5246  12ED  01F7               	clrf	i1___lwdiv@counter
  5247  12EE  0AF7               	incf	i1___lwdiv@counter,f
  5248  12EF                     i1l3163:	
  5249  12EF  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5250  12F0  2AFD               	goto	i1l3165
  5251  12F1  3001               	movlw	1
  5252  12F2                     u386_25:	
  5253  12F2  1003               	clrc
  5254  12F3  0DF0               	rlf	i1___lwdiv@divisor,f
  5255  12F4  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5256  12F5  3EFF               	addlw	-1
  5257  12F6  1D03               	skipz
  5258  12F7  2AF2               	goto	u386_25
  5259  12F8  3001               	movlw	1
  5260  12F9  00F4               	movwf	??i1___lwdiv
  5261  12FA  0874               	movf	??i1___lwdiv,w
  5262  12FB  07F7               	addwf	i1___lwdiv@counter,f
  5263  12FC  2AEF               	goto	i1l3163
  5264  12FD                     i1l3165:	
  5265  12FD  3001               	movlw	1
  5266  12FE                     u388_25:	
  5267  12FE  1003               	clrc
  5268  12FF  0DF5               	rlf	i1___lwdiv@quotient,f
  5269  1300  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5270  1301  3EFF               	addlw	-1
  5271  1302  1D03               	skipz
  5272  1303  2AFE               	goto	u388_25
  5273  1304  0871               	movf	i1___lwdiv@divisor+1,w
  5274  1305  0273               	subwf	i1___lwdiv@dividend+1,w
  5275  1306  1D03               	skipz
  5276  1307  2B0A               	goto	u389_25
  5277  1308  0870               	movf	i1___lwdiv@divisor,w
  5278  1309  0272               	subwf	i1___lwdiv@dividend,w
  5279  130A                     u389_25:	
  5280  130A  1C03               	skipc
  5281  130B  2B13               	goto	i1l3171
  5282  130C  0870               	movf	i1___lwdiv@divisor,w
  5283  130D  02F2               	subwf	i1___lwdiv@dividend,f
  5284  130E  0871               	movf	i1___lwdiv@divisor+1,w
  5285  130F  1C03               	skipc
  5286  1310  03F3               	decf	i1___lwdiv@dividend+1,f
  5287  1311  02F3               	subwf	i1___lwdiv@dividend+1,f
  5288  1312  1475               	bsf	i1___lwdiv@quotient,0
  5289  1313                     i1l3171:	
  5290  1313  3001               	movlw	1
  5291  1314                     u390_25:	
  5292  1314  1003               	clrc
  5293  1315  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5294  1316  0CF0               	rrf	i1___lwdiv@divisor,f
  5295  1317  3EFF               	addlw	-1
  5296  1318  1D03               	skipz
  5297  1319  2B14               	goto	u390_25
  5298  131A  3001               	movlw	1
  5299  131B  02F7               	subwf	i1___lwdiv@counter,f
  5300  131C  1D03               	btfss	3,2
  5301  131D  2AFD               	goto	i1l3165
  5302  131E                     i1l3175:	
  5303  131E  0876               	movf	i1___lwdiv@quotient+1,w
  5304  131F  01F1               	clrf	?i1___lwdiv+1
  5305  1320  07F1               	addwf	?i1___lwdiv+1,f
  5306  1321  0875               	movf	i1___lwdiv@quotient,w
  5307  1322  01F0               	clrf	?i1___lwdiv
  5308  1323  07F0               	addwf	?i1___lwdiv,f
  5309  1324  0008               	return
  5310  1325                     __end_ofi1___lwdiv:	
  5311                           
  5312                           	psect	text25
  5313  1062                     __ptext25:	
  5314 ;; *************** function i1_TIMER0_Set *****************
  5315 ;; Defined at:
  5316 ;;		line 20 in file "R:\Note\Ultimo C no MPLAB\timers.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  contagens       1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  contagens       1    0[COMMON] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5330 ;;      Params:         0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0
  5333 ;;      Totals:         1       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_ISR
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           
  5344                           ;psect for function i1_TIMER0_Set
  5345  1062                     i1_TIMER0_Set:	
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in i1_TIMER0_Set: [wreg]
  5349                           ;i1TIMER0_Set@contagens stored from wreg
  5350  1062  00F0               	movwf	i1TIMER0_Set@contagens
  5351                           
  5352                           ;timers.c: 22: TMR0 = contagens;
  5353  1063  0870               	movf	i1TIMER0_Set@contagens,w
  5354  1064  1283               	bcf	3,5	;RP0=0, select bank0
  5355  1065  1303               	bcf	3,6	;RP1=0, select bank0
  5356  1066  0081               	movwf	1	;volatile
  5357  1067  0008               	return
  5358  1068                     __end_ofi1_TIMER0_Set:	
  5359                           
  5360                           	psect	text26
  5361  07E4                     __ptext26:	
  5362 ;; *************** function _USART_ReceiveChar *****************
  5363 ;; Defined at:
  5364 ;;		line 63 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  byte            1    4[COMMON] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      unsigned char 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5378 ;;      Params:         0       0       0       0       0
  5379 ;;      Locals:         1       0       0       0       0
  5380 ;;      Temps:          1       0       0       0       0
  5381 ;;      Totals:         2       0       0       0       0
  5382 ;;Total ram usage:        2 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    2
  5385 ;; This function calls:
  5386 ;;		i1_USART_WriteString
  5387 ;; This function is called by:
  5388 ;;		_ISR
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _USART_ReceiveChar
  5394  07E4                     _USART_ReceiveChar:	
  5395                           
  5396                           ;usart.c: 65: unsigned char byte;
  5397                           ;usart.c: 67: if (!OERR)
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5401  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  5402  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  5403  07E6  1898               	btfsc	24,1	;volatile
  5404  07E7  2FED               	goto	i1l2873
  5405                           
  5406                           ;usart.c: 68: {
  5407                           ;usart.c: 69: byte = RCREG;
  5408  07E8  081A               	movf	26,w	;volatile
  5409  07E9  00F3               	movwf	??_USART_ReceiveChar
  5410  07EA  0873               	movf	??_USART_ReceiveChar,w
  5411  07EB  00F4               	movwf	USART_ReceiveChar@byte
  5412  07EC  2FFC               	goto	i1l2881
  5413  07ED                     i1l2873:	
  5414                           ;usart.c: 71: }
  5415                           
  5416                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5417                           
  5418                           
  5419                           ;usart.c: 72: else
  5420                           ;usart.c: 73: {
  5421                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5422  07ED  300B               	movlw	low (STR_19-__stringbase)
  5423  07EE  00F1               	movwf	i1USART_WriteString@str
  5424  07EF  3080               	movlw	128
  5425  07F0  00F2               	movwf	i1USART_WriteString@str+1
  5426  07F1  160A  118A  21BC   	fcall	i1_USART_WriteString
  5427                           
  5428                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5429  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  5430  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  5431  07F6  1218               	bcf	24,4	;volatile
  5432                           
  5433                           ;usart.c: 77: byte = RCREG;
  5434  07F7  081A               	movf	26,w	;volatile
  5435  07F8  00F3               	movwf	??_USART_ReceiveChar
  5436  07F9  0873               	movf	??_USART_ReceiveChar,w
  5437  07FA  00F4               	movwf	USART_ReceiveChar@byte
  5438                           
  5439                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5440  07FB  1618               	bsf	24,4	;volatile
  5441  07FC                     i1l2881:	
  5442                           
  5443                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5444  07FC  128C               	bcf	12,5	;volatile
  5445                           
  5446                           ;usart.c: 80: }
  5447                           ;usart.c: 82: return(byte);
  5448  07FD  0874               	movf	USART_ReceiveChar@byte,w
  5449  07FE  0008               	return
  5450  07FF                     __end_of_USART_ReceiveChar:	
  5451                           
  5452                           	psect	text27
  5453  11BC                     __ptext27:	
  5454 ;; *************** function i1_USART_WriteString *****************
  5455 ;; Defined at:
  5456 ;;		line 52 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  str             2    1[COMMON] PTR const unsigned char 
  5459 ;;		 -> STR_19(40), STR_16(3), display_rpm(10), STR_12(20), 
  5460 ;;		 -> STR_11(29), STR_10(15), STR_9(11), STR_8(14), 
  5461 ;;		 -> STR_7(14), STR_6(11), STR_5(11), STR_4(11), 
  5462 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;		None               void
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5474 ;;      Params:         2       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0
  5477 ;;      Totals:         2       0       0       0       0
  5478 ;;Total ram usage:        2 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    1
  5481 ;; This function calls:
  5482 ;;		i1_USART_WriteChar
  5483 ;; This function is called by:
  5484 ;;		_ISR
  5485 ;;		_USART_ReceiveChar
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           
  5490                           ;psect for function i1_USART_WriteString
  5491  11BC                     i1_USART_WriteString:	
  5492  11BC                     i1l2719:	
  5493                           ;usart.c: 54: while(*str != '\0')
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in i1_USART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  5497                           
  5498  11BC  0872               	movf	i1USART_WriteString@str+1,w
  5499  11BD  1283               	bcf	3,5	;RP0=0, select bank0
  5500  11BE  1303               	bcf	3,6	;RP1=0, select bank0
  5501  11BF  00FF               	movwf	127
  5502  11C0  0871               	movf	i1USART_WriteString@str,w
  5503  11C1  0084               	movwf	4
  5504  11C2  120A  158A  2000  160A  118A  	fcall	stringtab
  5505  11C7  3800               	iorlw	0
  5506  11C8  1903               	btfsc	3,2
  5507  11C9  0008               	return
  5508                           
  5509                           ;usart.c: 55: {
  5510                           ;usart.c: 56: USART_WriteChar(*str);
  5511  11CA  0872               	movf	i1USART_WriteString@str+1,w
  5512  11CB  1283               	bcf	3,5	;RP0=0, select bank0
  5513  11CC  1303               	bcf	3,6	;RP1=0, select bank0
  5514  11CD  00FF               	movwf	127
  5515  11CE  0871               	movf	i1USART_WriteString@str,w
  5516  11CF  0084               	movwf	4
  5517  11D0  120A  158A  2000  160A  118A  	fcall	stringtab
  5518  11D5  160A  118A  2068  160A  118A  	fcall	i1_USART_WriteChar
  5519                           
  5520                           ;usart.c: 57: str++;
  5521  11DA  3001               	movlw	1
  5522  11DB  07F1               	addwf	i1USART_WriteString@str,f
  5523  11DC  1803               	skipnc
  5524  11DD  0AF2               	incf	i1USART_WriteString@str+1,f
  5525  11DE  29BC               	goto	i1l2719
  5526  11DF                     __end_ofi1_USART_WriteString:	
  5527                           
  5528                           	psect	text28
  5529  1068                     __ptext28:	
  5530 ;; *************** function i1_USART_WriteChar *****************
  5531 ;; Defined at:
  5532 ;;		line 44 in file "R:\Note\Ultimo C no MPLAB\usart.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  byte            1    wreg     unsigned char 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  byte            1    0[COMMON] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;		None               void
  5539 ;; Registers used:
  5540 ;;		wreg
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5546 ;;      Params:         0       0       0       0       0
  5547 ;;      Locals:         1       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0
  5549 ;;      Totals:         1       0       0       0       0
  5550 ;;Total ram usage:        1 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		i1_USART_WriteString
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function i1_USART_WriteChar
  5561  1068                     i1_USART_WriteChar:	
  5562                           
  5563                           ;incstack = 0
  5564                           ; Regs used in i1_USART_WriteChar: [wreg]
  5565                           ;i1USART_WriteChar@byte stored from wreg
  5566  1068  00F0               	movwf	i1USART_WriteChar@byte
  5567  1069                     i1l224:	
  5568                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5569                           
  5570  1069  1283               	bcf	3,5	;RP0=0, select bank0
  5571  106A  1303               	bcf	3,6	;RP1=0, select bank0
  5572  106B  1E0C               	btfss	12,4	;volatile
  5573  106C  2869               	goto	i1l224
  5574                           
  5575                           ;usart.c: 47: TXREG = byte;
  5576  106D  0870               	movf	i1USART_WriteChar@byte,w
  5577  106E  0099               	movwf	25	;volatile
  5578  106F  0008               	return
  5579  1070                     __end_ofi1_USART_WriteChar:	
  5580                           
  5581                           	psect	text29
  5582  0047                     __ptext29:	
  5583 ;; *************** function _Fuzzy *****************
  5584 ;; Defined at:
  5585 ;;		line 129 in file "R:\Note\Ultimo C no MPLAB\main.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  a               2   59[BANK0 ] int 
  5590 ;;  a               2   57[BANK0 ] int 
  5591 ;;  a               2   55[BANK0 ] int 
  5592 ;;  deltaRpm        3   70[BANK0 ] float 
  5593 ;;  aumenta         3   67[BANK0 ] float 
  5594 ;;  reduz           3   64[BANK0 ] float 
  5595 ;;  mantem          3   61[BANK0 ] float 
  5596 ;;  tip             3   52[BANK0 ] float 
  5597 ;;  freio           2   50[BANK0 ] unsigned int 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       0       0       0       0
  5608 ;;      Locals:         0      23       0       0       0
  5609 ;;      Temps:          0       0       0       0       0
  5610 ;;      Totals:         0      23       0       0       0
  5611 ;;Total ram usage:       23 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    3
  5614 ;; This function calls:
  5615 ;;		___ftadd
  5616 ;;		___ftdiv
  5617 ;;		___ftge
  5618 ;;		___ftmul
  5619 ;;		___ftneg
  5620 ;;		___fttol
  5621 ;;		___lwtoft
  5622 ;;		_max_val
  5623 ;;		_trapmf
  5624 ;;		_trimf
  5625 ;;		i1_PWM_DutyCycle2
  5626 ;; This function is called by:
  5627 ;;		_ISR
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           
  5632                           ;psect for function _Fuzzy
  5633  0047                     _Fuzzy:	
  5634                           
  5635                           ;main.c: 140: setpoint = (float)setpointUI;
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5639  0047  1683               	bsf	3,5	;RP0=1, select bank1
  5640  0048  1303               	bcf	3,6	;RP1=0, select bank1
  5641  0049  086E               	movf	(_setpointUI+1)^(0+128),w
  5642  004A  01F9               	clrf	___lwtoft@c+1
  5643  004B  07F9               	addwf	___lwtoft@c+1,f
  5644  004C  086D               	movf	_setpointUI^(0+128),w
  5645  004D  01F8               	clrf	___lwtoft@c
  5646  004E  07F8               	addwf	___lwtoft@c,f
  5647  004F  160A  118A  20DF  120A  118A  	fcall	___lwtoft
  5648  0054  0878               	movf	?___lwtoft,w
  5649  0055  1683               	bsf	3,5	;RP0=1, select bank1
  5650  0056  1303               	bcf	3,6	;RP1=0, select bank1
  5651  0057  00E5               	movwf	_setpoint^(0+128)
  5652  0058  0879               	movf	?___lwtoft+1,w
  5653  0059  00E6               	movwf	(_setpoint+1)^(0+128)
  5654  005A  087A               	movf	?___lwtoft+2,w
  5655  005B  00E7               	movwf	(_setpoint+2)^(0+128)
  5656                           
  5657                           ;main.c: 141: float deltaRpm = 0;
  5658  005C  3000               	movlw	0
  5659  005D  1283               	bcf	3,5	;RP0=0, select bank0
  5660  005E  1303               	bcf	3,6	;RP1=0, select bank0
  5661  005F  00E6               	movwf	Fuzzy@deltaRpm
  5662  0060  3000               	movlw	0
  5663  0061  00E7               	movwf	Fuzzy@deltaRpm+1
  5664  0062  3000               	movlw	0
  5665  0063  00E8               	movwf	Fuzzy@deltaRpm+2
  5666                           
  5667                           ;main.c: 144: unsigned int freio = 0;
  5668  0064  01D2               	clrf	Fuzzy@freio
  5669  0065  01D3               	clrf	Fuzzy@freio+1
  5670                           
  5671                           ;main.c: 150: float mantem = 0;
  5672  0066  3000               	movlw	0
  5673  0067  00DD               	movwf	Fuzzy@mantem
  5674  0068  3000               	movlw	0
  5675  0069  00DE               	movwf	Fuzzy@mantem+1
  5676  006A  3000               	movlw	0
  5677  006B  00DF               	movwf	Fuzzy@mantem+2
  5678                           
  5679                           ;main.c: 151: float reduz = 0;
  5680  006C  3000               	movlw	0
  5681  006D  00E0               	movwf	Fuzzy@reduz
  5682  006E  3000               	movlw	0
  5683  006F  00E1               	movwf	Fuzzy@reduz+1
  5684  0070  3000               	movlw	0
  5685  0071  00E2               	movwf	Fuzzy@reduz+2
  5686                           
  5687                           ;main.c: 152: float aumenta = 0;
  5688  0072  3000               	movlw	0
  5689  0073  00E3               	movwf	Fuzzy@aumenta
  5690  0074  3000               	movlw	0
  5691  0075  00E4               	movwf	Fuzzy@aumenta+1
  5692  0076  3000               	movlw	0
  5693  0077  00E5               	movwf	Fuzzy@aumenta+2
  5694                           
  5695                           ;main.c: 153: float tip;
  5696                           ;main.c: 154: fitemp = 0;
  5697  0078  3000               	movlw	0
  5698  0079  1683               	bsf	3,5	;RP0=1, select bank1
  5699  007A  1303               	bcf	3,6	;RP1=0, select bank1
  5700  007B  00A3               	movwf	_fitemp^(0+128)
  5701  007C  3000               	movlw	0
  5702  007D  00A4               	movwf	(_fitemp+1)^(0+128)
  5703  007E  3000               	movlw	0
  5704  007F  00A5               	movwf	(_fitemp+2)^(0+128)
  5705                           
  5706                           ;main.c: 157: deltaRpm = (setpoint - tf);
  5707  0080  0865               	movf	_setpoint^(0+128),w
  5708  0081  1283               	bcf	3,5	;RP0=0, select bank0
  5709  0082  1303               	bcf	3,6	;RP1=0, select bank0
  5710  0083  00A3               	movwf	___ftadd@f1
  5711  0084  1683               	bsf	3,5	;RP0=1, select bank1
  5712  0085  1303               	bcf	3,6	;RP1=0, select bank1
  5713  0086  0866               	movf	(_setpoint+1)^(0+128),w
  5714  0087  1283               	bcf	3,5	;RP0=0, select bank0
  5715  0088  1303               	bcf	3,6	;RP1=0, select bank0
  5716  0089  00A4               	movwf	___ftadd@f1+1
  5717  008A  1683               	bsf	3,5	;RP0=1, select bank1
  5718  008B  1303               	bcf	3,6	;RP1=0, select bank1
  5719  008C  0867               	movf	(_setpoint+2)^(0+128),w
  5720  008D  1283               	bcf	3,5	;RP0=0, select bank0
  5721  008E  1303               	bcf	3,6	;RP1=0, select bank0
  5722  008F  00A5               	movwf	___ftadd@f1+2
  5723  0090  1683               	bsf	3,5	;RP0=1, select bank1
  5724  0091  1303               	bcf	3,6	;RP1=0, select bank1
  5725  0092  0868               	movf	_tf^(0+128),w
  5726  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0094  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0095  00A0               	movwf	___ftneg@f1
  5729  0096  1683               	bsf	3,5	;RP0=1, select bank1
  5730  0097  1303               	bcf	3,6	;RP1=0, select bank1
  5731  0098  0869               	movf	(_tf+1)^(0+128),w
  5732  0099  1283               	bcf	3,5	;RP0=0, select bank0
  5733  009A  1303               	bcf	3,6	;RP1=0, select bank0
  5734  009B  00A1               	movwf	___ftneg@f1+1
  5735  009C  1683               	bsf	3,5	;RP0=1, select bank1
  5736  009D  1303               	bcf	3,6	;RP1=0, select bank1
  5737  009E  086A               	movf	(_tf+2)^(0+128),w
  5738  009F  1283               	bcf	3,5	;RP0=0, select bank0
  5739  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  5740  00A1  00A2               	movwf	___ftneg@f1+2
  5741  00A2  160A  118A  2080  120A  118A  	fcall	___ftneg
  5742  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  5743  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  5744  00A9  0820               	movf	?___ftneg,w
  5745  00AA  00A6               	movwf	___ftadd@f2
  5746  00AB  0821               	movf	?___ftneg+1,w
  5747  00AC  00A7               	movwf	___ftadd@f2+1
  5748  00AD  0822               	movf	?___ftneg+2,w
  5749  00AE  00A8               	movwf	___ftadd@f2+2
  5750  00AF  160A  118A  26F7  120A  118A  	fcall	___ftadd
  5751  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  5752  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  5753  00B6  0823               	movf	?___ftadd,w
  5754  00B7  00E6               	movwf	Fuzzy@deltaRpm
  5755  00B8  0824               	movf	?___ftadd+1,w
  5756  00B9  00E7               	movwf	Fuzzy@deltaRpm+1
  5757  00BA  0825               	movf	?___ftadd+2,w
  5758  00BB  00E8               	movwf	Fuzzy@deltaRpm+2
  5759                           
  5760                           ;main.c: 158: deltaRpm = (deltaRpm/100);
  5761  00BC  3000               	movlw	0
  5762  00BD  00B0               	movwf	___ftdiv@f2
  5763  00BE  30C8               	movlw	200
  5764  00BF  00B1               	movwf	___ftdiv@f2+1
  5765  00C0  3042               	movlw	66
  5766  00C1  00B2               	movwf	___ftdiv@f2+2
  5767  00C2  0866               	movf	Fuzzy@deltaRpm,w
  5768  00C3  00B3               	movwf	___ftdiv@f1
  5769  00C4  0867               	movf	Fuzzy@deltaRpm+1,w
  5770  00C5  00B4               	movwf	___ftdiv@f1+1
  5771  00C6  0868               	movf	Fuzzy@deltaRpm+2,w
  5772  00C7  00B5               	movwf	___ftdiv@f1+2
  5773  00C8  160A  118A  256E  120A  118A  	fcall	___ftdiv
  5774  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  5775  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  5776  00CF  0830               	movf	?___ftdiv,w
  5777  00D0  00E6               	movwf	Fuzzy@deltaRpm
  5778  00D1  0831               	movf	?___ftdiv+1,w
  5779  00D2  00E7               	movwf	Fuzzy@deltaRpm+1
  5780  00D3  0832               	movf	?___ftdiv+2,w
  5781  00D4  00E8               	movwf	Fuzzy@deltaRpm+2
  5782                           
  5783                           ;main.c: 160: deltaV = deltaRpm;
  5784  00D5  0866               	movf	Fuzzy@deltaRpm,w
  5785  00D6  00B0               	movwf	___fttol@f1
  5786  00D7  0867               	movf	Fuzzy@deltaRpm+1,w
  5787  00D8  00B1               	movwf	___fttol@f1+1
  5788  00D9  0868               	movf	Fuzzy@deltaRpm+2,w
  5789  00DA  00B2               	movwf	___fttol@f1+2
  5790  00DB  160A  118A  24E0  120A  118A  	fcall	___fttol
  5791  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  5792  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  5793  00E2  0831               	movf	?___fttol+1,w
  5794  00E3  01EE               	clrf	_deltaV+1
  5795  00E4  07EE               	addwf	_deltaV+1,f
  5796  00E5  0830               	movf	?___fttol,w
  5797  00E6  01ED               	clrf	_deltaV
  5798  00E7  07ED               	addwf	_deltaV,f
  5799                           
  5800                           ;main.c: 162: if (deltaRpm <0)
  5801  00E8  0866               	movf	Fuzzy@deltaRpm,w
  5802  00E9  00B0               	movwf	___ftge@ff1
  5803  00EA  0867               	movf	Fuzzy@deltaRpm+1,w
  5804  00EB  00B1               	movwf	___ftge@ff1+1
  5805  00EC  0868               	movf	Fuzzy@deltaRpm+2,w
  5806  00ED  00B2               	movwf	___ftge@ff1+2
  5807  00EE  3000               	movlw	0
  5808  00EF  00B3               	movwf	___ftge@ff2
  5809  00F0  3000               	movlw	0
  5810  00F1  00B4               	movwf	___ftge@ff2+1
  5811  00F2  3000               	movlw	0
  5812  00F3  00B5               	movwf	___ftge@ff2+2
  5813  00F4  160A  118A  23AE  120A  118A  	fcall	___ftge
  5814  00F9  1803               	btfsc	3,0
  5815  00FA  291F               	goto	i1l2755
  5816                           
  5817                           ;main.c: 163: {
  5818                           ;main.c: 164: if(PORTBbits.RB1 == 0)
  5819  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  5820  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  5821  00FD  1886               	btfsc	6,1	;volatile
  5822  00FE  2901               	goto	i1l150
  5823                           
  5824                           ;main.c: 165: {
  5825                           ;main.c: 166: PORTBbits.RB1 = 1;
  5826  00FF  1486               	bsf	6,1	;volatile
  5827                           
  5828                           ;main.c: 167: }else{
  5829  0100  2902               	goto	i1l2751
  5830  0101                     i1l150:	
  5831                           
  5832                           ;main.c: 168: PORTBbits.RB1 = 0;
  5833  0101  1086               	bcf	6,1	;volatile
  5834  0102                     i1l2751:	
  5835                           
  5836                           ;main.c: 169: }
  5837                           ;main.c: 171: deltaRpm = deltaRpm*-1;
  5838  0102  3000               	movlw	0
  5839  0103  00F8               	movwf	___ftmul@f1
  5840  0104  3080               	movlw	128
  5841  0105  00F9               	movwf	___ftmul@f1+1
  5842  0106  30BF               	movlw	191
  5843  0107  00FA               	movwf	___ftmul@f1+2
  5844  0108  0866               	movf	Fuzzy@deltaRpm,w
  5845  0109  00FB               	movwf	___ftmul@f2
  5846  010A  0867               	movf	Fuzzy@deltaRpm+1,w
  5847  010B  00FC               	movwf	___ftmul@f2+1
  5848  010C  0868               	movf	Fuzzy@deltaRpm+2,w
  5849  010D  00FD               	movwf	___ftmul@f2+2
  5850  010E  160A  118A  2626  120A  118A  	fcall	___ftmul
  5851  0113  0878               	movf	?___ftmul,w
  5852  0114  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0115  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0116  00E6               	movwf	Fuzzy@deltaRpm
  5855  0117  0879               	movf	?___ftmul+1,w
  5856  0118  00E7               	movwf	Fuzzy@deltaRpm+1
  5857  0119  087A               	movf	?___ftmul+2,w
  5858  011A  00E8               	movwf	Fuzzy@deltaRpm+2
  5859                           
  5860                           ;main.c: 172: freio = 1;
  5861  011B  3001               	movlw	1
  5862  011C  00D2               	movwf	Fuzzy@freio
  5863  011D  3000               	movlw	0
  5864  011E  00D3               	movwf	Fuzzy@freio+1
  5865  011F                     i1l2755:	
  5866                           
  5867                           ;main.c: 173: }
  5868                           ;main.c: 175: if (deltaRpm >90) deltaRpm = 90;
  5869  011F  3000               	movlw	0
  5870  0120  1283               	bcf	3,5	;RP0=0, select bank0
  5871  0121  1303               	bcf	3,6	;RP1=0, select bank0
  5872  0122  00B0               	movwf	___ftge@ff1
  5873  0123  30B4               	movlw	180
  5874  0124  00B1               	movwf	___ftge@ff1+1
  5875  0125  3042               	movlw	66
  5876  0126  00B2               	movwf	___ftge@ff1+2
  5877  0127  0866               	movf	Fuzzy@deltaRpm,w
  5878  0128  00B3               	movwf	___ftge@ff2
  5879  0129  0867               	movf	Fuzzy@deltaRpm+1,w
  5880  012A  00B4               	movwf	___ftge@ff2+1
  5881  012B  0868               	movf	Fuzzy@deltaRpm+2,w
  5882  012C  00B5               	movwf	___ftge@ff2+2
  5883  012D  160A  118A  23AE  120A  118A  	fcall	___ftge
  5884  0132  1803               	btfsc	3,0
  5885  0133  293C               	goto	i1l2759
  5886  0134  3000               	movlw	0
  5887  0135  1283               	bcf	3,5	;RP0=0, select bank0
  5888  0136  1303               	bcf	3,6	;RP1=0, select bank0
  5889  0137  00E6               	movwf	Fuzzy@deltaRpm
  5890  0138  30B4               	movlw	180
  5891  0139  00E7               	movwf	Fuzzy@deltaRpm+1
  5892  013A  3042               	movlw	66
  5893  013B  00E8               	movwf	Fuzzy@deltaRpm+2
  5894  013C                     i1l2759:	
  5895                           
  5896                           ;main.c: 178: if (deltaRpm < 25)
  5897  013C  1283               	bcf	3,5	;RP0=0, select bank0
  5898  013D  1303               	bcf	3,6	;RP1=0, select bank0
  5899  013E  0866               	movf	Fuzzy@deltaRpm,w
  5900  013F  00B0               	movwf	___ftge@ff1
  5901  0140  0867               	movf	Fuzzy@deltaRpm+1,w
  5902  0141  00B1               	movwf	___ftge@ff1+1
  5903  0142  0868               	movf	Fuzzy@deltaRpm+2,w
  5904  0143  00B2               	movwf	___ftge@ff1+2
  5905  0144  3000               	movlw	0
  5906  0145  00B3               	movwf	___ftge@ff2
  5907  0146  30C8               	movlw	200
  5908  0147  00B4               	movwf	___ftge@ff2+1
  5909  0148  3041               	movlw	65
  5910  0149  00B5               	movwf	___ftge@ff2+2
  5911  014A  160A  118A  23AE  120A  118A  	fcall	___ftge
  5912  014F  1803               	btfsc	3,0
  5913  0150  2AB1               	goto	i1l2783
  5914                           
  5915                           ;main.c: 179: {
  5916                           ;main.c: 183: fitemp = trapmf(deltaRpm, 0,0,13,32);
  5917  0151  1283               	bcf	3,5	;RP0=0, select bank0
  5918  0152  1303               	bcf	3,6	;RP1=0, select bank0
  5919  0153  0866               	movf	Fuzzy@deltaRpm,w
  5920  0154  00C0               	movwf	trapmf@x
  5921  0155  0867               	movf	Fuzzy@deltaRpm+1,w
  5922  0156  00C1               	movwf	trapmf@x+1
  5923  0157  0868               	movf	Fuzzy@deltaRpm+2,w
  5924  0158  00C2               	movwf	trapmf@x+2
  5925  0159  3000               	movlw	0
  5926  015A  00C3               	movwf	trapmf@a
  5927  015B  3000               	movlw	0
  5928  015C  00C4               	movwf	trapmf@a+1
  5929  015D  3000               	movlw	0
  5930  015E  00C5               	movwf	trapmf@a+2
  5931  015F  3000               	movlw	0
  5932  0160  00C6               	movwf	trapmf@b
  5933  0161  3000               	movlw	0
  5934  0162  00C7               	movwf	trapmf@b+1
  5935  0163  3000               	movlw	0
  5936  0164  00C8               	movwf	trapmf@b+2
  5937  0165  3000               	movlw	0
  5938  0166  00C9               	movwf	trapmf@c
  5939  0167  3050               	movlw	80
  5940  0168  00CA               	movwf	trapmf@c+1
  5941  0169  3041               	movlw	65
  5942  016A  00CB               	movwf	trapmf@c+2
  5943  016B  3000               	movlw	0
  5944  016C  00CC               	movwf	trapmf@d
  5945  016D  3000               	movlw	0
  5946  016E  00CD               	movwf	trapmf@d+1
  5947  016F  3042               	movlw	66
  5948  0170  00CE               	movwf	trapmf@d+2
  5949  0171  120A  158A  2378  120A  118A  	fcall	_trapmf
  5950  0176  1283               	bcf	3,5	;RP0=0, select bank0
  5951  0177  1303               	bcf	3,6	;RP1=0, select bank0
  5952  0178  0840               	movf	?_trapmf,w
  5953  0179  1683               	bsf	3,5	;RP0=1, select bank1
  5954  017A  1303               	bcf	3,6	;RP1=0, select bank1
  5955  017B  00A3               	movwf	_fitemp^(0+128)
  5956  017C  1283               	bcf	3,5	;RP0=0, select bank0
  5957  017D  1303               	bcf	3,6	;RP1=0, select bank0
  5958  017E  0841               	movf	?_trapmf+1,w
  5959  017F  1683               	bsf	3,5	;RP0=1, select bank1
  5960  0180  1303               	bcf	3,6	;RP1=0, select bank1
  5961  0181  00A4               	movwf	(_fitemp+1)^(0+128)
  5962  0182  1283               	bcf	3,5	;RP0=0, select bank0
  5963  0183  1303               	bcf	3,6	;RP1=0, select bank0
  5964  0184  0842               	movf	?_trapmf+2,w
  5965  0185  1683               	bsf	3,5	;RP0=1, select bank1
  5966  0186  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0187  00A5               	movwf	(_fitemp+2)^(0+128)
  5968                           
  5969                           ;main.c: 186: fop_rule1 = max_val(fitemp,0.1);
  5970  0188  0823               	movf	_fitemp^(0+128),w
  5971  0189  1283               	bcf	3,5	;RP0=0, select bank0
  5972  018A  1303               	bcf	3,6	;RP1=0, select bank0
  5973  018B  00BC               	movwf	max_val@a
  5974  018C  1683               	bsf	3,5	;RP0=1, select bank1
  5975  018D  1303               	bcf	3,6	;RP1=0, select bank1
  5976  018E  0824               	movf	(_fitemp+1)^(0+128),w
  5977  018F  1283               	bcf	3,5	;RP0=0, select bank0
  5978  0190  1303               	bcf	3,6	;RP1=0, select bank0
  5979  0191  00BD               	movwf	max_val@a+1
  5980  0192  1683               	bsf	3,5	;RP0=1, select bank1
  5981  0193  1303               	bcf	3,6	;RP1=0, select bank1
  5982  0194  0825               	movf	(_fitemp+2)^(0+128),w
  5983  0195  1283               	bcf	3,5	;RP0=0, select bank0
  5984  0196  1303               	bcf	3,6	;RP1=0, select bank0
  5985  0197  00BE               	movwf	max_val@a+2
  5986  0198  30CD               	movlw	205
  5987  0199  00BF               	movwf	max_val@b
  5988  019A  30CC               	movlw	204
  5989  019B  00C0               	movwf	max_val@b+1
  5990  019C  303D               	movlw	61
  5991  019D  00C1               	movwf	max_val@b+2
  5992  019E  160A  118A  213C  120A  118A  	fcall	_max_val
  5993  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  5994  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  5995  01A5  083C               	movf	?_max_val,w
  5996  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  5997  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  5998  01A8  00A6               	movwf	_fop_rule1^(0+128)
  5999  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6000  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  6001  01AB  083D               	movf	?_max_val+1,w
  6002  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  6003  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  6004  01AE  00A7               	movwf	(_fop_rule1+1)^(0+128)
  6005  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  6006  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  6007  01B1  083E               	movf	?_max_val+2,w
  6008  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  6009  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  6010  01B4  00A8               	movwf	(_fop_rule1+2)^(0+128)
  6011                           
  6012                           ;main.c: 189: x=0;
  6013  01B5  3000               	movlw	0
  6014  01B6  00B5               	movwf	_x^(0+128)
  6015  01B7  3000               	movlw	0
  6016  01B8  00B6               	movwf	(_x+1)^(0+128)
  6017  01B9  3000               	movlw	0
  6018  01BA  00B7               	movwf	(_x+2)^(0+128)
  6019                           
  6020                           ;main.c: 190: y=0;
  6021  01BB  3000               	movlw	0
  6022  01BC  00B8               	movwf	_y^(0+128)
  6023  01BD  3000               	movlw	0
  6024  01BE  00B9               	movwf	(_y+1)^(0+128)
  6025  01BF  3000               	movlw	0
  6026  01C0  00BA               	movwf	(_y+2)^(0+128)
  6027                           
  6028                           ;main.c: 191: for (int a=0; a<=90; a++)
  6029  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  6030  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  6031  01C3  01D7               	clrf	Fuzzy@a
  6032  01C4  01D8               	clrf	Fuzzy@a+1
  6033  01C5  0858               	movf	Fuzzy@a+1,w
  6034  01C6  3A80               	xorlw	128
  6035  01C7  00FF               	movwf	127
  6036  01C8  3080               	movlw	128
  6037  01C9  027F               	subwf	127,w
  6038  01CA  1D03               	skipz
  6039  01CB  29CE               	goto	u336_25
  6040  01CC  305B               	movlw	91
  6041  01CD  0257               	subwf	Fuzzy@a,w
  6042  01CE                     u336_25:	
  6043  01CE  1803               	btfsc	3,0
  6044  01CF  2AB1               	goto	i1l2783
  6045  01D0                     i1l2773:	
  6046                           
  6047                           ;main.c: 192: {
  6048                           ;main.c: 193: y = trapmf(x,0,0,13,32);
  6049  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  6050  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  6051  01D2  0835               	movf	_x^(0+128),w
  6052  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  6053  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  6054  01D5  00C0               	movwf	trapmf@x
  6055  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  6056  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  6057  01D8  0836               	movf	(_x+1)^(0+128),w
  6058  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  6059  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  6060  01DB  00C1               	movwf	trapmf@x+1
  6061  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  6062  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  6063  01DE  0837               	movf	(_x+2)^(0+128),w
  6064  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  6065  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  6066  01E1  00C2               	movwf	trapmf@x+2
  6067  01E2  3000               	movlw	0
  6068  01E3  00C3               	movwf	trapmf@a
  6069  01E4  3000               	movlw	0
  6070  01E5  00C4               	movwf	trapmf@a+1
  6071  01E6  3000               	movlw	0
  6072  01E7  00C5               	movwf	trapmf@a+2
  6073  01E8  3000               	movlw	0
  6074  01E9  00C6               	movwf	trapmf@b
  6075  01EA  3000               	movlw	0
  6076  01EB  00C7               	movwf	trapmf@b+1
  6077  01EC  3000               	movlw	0
  6078  01ED  00C8               	movwf	trapmf@b+2
  6079  01EE  3000               	movlw	0
  6080  01EF  00C9               	movwf	trapmf@c
  6081  01F0  3050               	movlw	80
  6082  01F1  00CA               	movwf	trapmf@c+1
  6083  01F2  3041               	movlw	65
  6084  01F3  00CB               	movwf	trapmf@c+2
  6085  01F4  3000               	movlw	0
  6086  01F5  00CC               	movwf	trapmf@d
  6087  01F6  3000               	movlw	0
  6088  01F7  00CD               	movwf	trapmf@d+1
  6089  01F8  3042               	movlw	66
  6090  01F9  00CE               	movwf	trapmf@d+2
  6091  01FA  120A  158A  2378  120A  118A  	fcall	_trapmf
  6092  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  6093  0200  1303               	bcf	3,6	;RP1=0, select bank0
  6094  0201  0840               	movf	?_trapmf,w
  6095  0202  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0203  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0204  00B8               	movwf	_y^(0+128)
  6098  0205  1283               	bcf	3,5	;RP0=0, select bank0
  6099  0206  1303               	bcf	3,6	;RP1=0, select bank0
  6100  0207  0841               	movf	?_trapmf+1,w
  6101  0208  1683               	bsf	3,5	;RP0=1, select bank1
  6102  0209  1303               	bcf	3,6	;RP1=0, select bank1
  6103  020A  00B9               	movwf	(_y+1)^(0+128)
  6104  020B  1283               	bcf	3,5	;RP0=0, select bank0
  6105  020C  1303               	bcf	3,6	;RP1=0, select bank0
  6106  020D  0842               	movf	?_trapmf+2,w
  6107  020E  1683               	bsf	3,5	;RP0=1, select bank1
  6108  020F  1303               	bcf	3,6	;RP1=0, select bank1
  6109  0210  00BA               	movwf	(_y+2)^(0+128)
  6110                           
  6111                           ;main.c: 195: if (y > fop_rule1)
  6112  0211  0826               	movf	_fop_rule1^(0+128),w
  6113  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0213  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0214  00B0               	movwf	___ftge@ff1
  6116  0215  1683               	bsf	3,5	;RP0=1, select bank1
  6117  0216  1303               	bcf	3,6	;RP1=0, select bank1
  6118  0217  0827               	movf	(_fop_rule1+1)^(0+128),w
  6119  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6120  0219  1303               	bcf	3,6	;RP1=0, select bank0
  6121  021A  00B1               	movwf	___ftge@ff1+1
  6122  021B  1683               	bsf	3,5	;RP0=1, select bank1
  6123  021C  1303               	bcf	3,6	;RP1=0, select bank1
  6124  021D  0828               	movf	(_fop_rule1+2)^(0+128),w
  6125  021E  1283               	bcf	3,5	;RP0=0, select bank0
  6126  021F  1303               	bcf	3,6	;RP1=0, select bank0
  6127  0220  00B2               	movwf	___ftge@ff1+2
  6128  0221  1683               	bsf	3,5	;RP0=1, select bank1
  6129  0222  1303               	bcf	3,6	;RP1=0, select bank1
  6130  0223  0838               	movf	_y^(0+128),w
  6131  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0226  00B3               	movwf	___ftge@ff2
  6134  0227  1683               	bsf	3,5	;RP0=1, select bank1
  6135  0228  1303               	bcf	3,6	;RP1=0, select bank1
  6136  0229  0839               	movf	(_y+1)^(0+128),w
  6137  022A  1283               	bcf	3,5	;RP0=0, select bank0
  6138  022B  1303               	bcf	3,6	;RP1=0, select bank0
  6139  022C  00B4               	movwf	___ftge@ff2+1
  6140  022D  1683               	bsf	3,5	;RP0=1, select bank1
  6141  022E  1303               	bcf	3,6	;RP1=0, select bank1
  6142  022F  083A               	movf	(_y+2)^(0+128),w
  6143  0230  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0231  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0232  00B5               	movwf	___ftge@ff2+2
  6146  0233  160A  118A  23AE  120A  118A  	fcall	___ftge
  6147  0238  1803               	btfsc	3,0
  6148  0239  2A4A               	goto	i1l2777
  6149                           
  6150                           ;main.c: 196: {
  6151                           ;main.c: 197: reduz += fop_rule1;
  6152  023A  1683               	bsf	3,5	;RP0=1, select bank1
  6153  023B  1303               	bcf	3,6	;RP1=0, select bank1
  6154  023C  0826               	movf	_fop_rule1^(0+128),w
  6155  023D  1283               	bcf	3,5	;RP0=0, select bank0
  6156  023E  1303               	bcf	3,6	;RP1=0, select bank0
  6157  023F  00A3               	movwf	___ftadd@f1
  6158  0240  1683               	bsf	3,5	;RP0=1, select bank1
  6159  0241  1303               	bcf	3,6	;RP1=0, select bank1
  6160  0242  0827               	movf	(_fop_rule1+1)^(0+128),w
  6161  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6162  0244  1303               	bcf	3,6	;RP1=0, select bank0
  6163  0245  00A4               	movwf	___ftadd@f1+1
  6164  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6165  0247  1303               	bcf	3,6	;RP1=0, select bank1
  6166  0248  0828               	movf	(_fop_rule1+2)^(0+128),w
  6167  0249  2A59               	goto	L3
  6168  024A                     i1l2777:	
  6169                           ;main.c: 198: }
  6170                           
  6171                           
  6172                           ;main.c: 199: else
  6173                           ;main.c: 200: {
  6174                           ;main.c: 201: reduz += y;
  6175  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6176  024B  1303               	bcf	3,6	;RP1=0, select bank1
  6177  024C  0838               	movf	_y^(0+128),w
  6178  024D  1283               	bcf	3,5	;RP0=0, select bank0
  6179  024E  1303               	bcf	3,6	;RP1=0, select bank0
  6180  024F  00A3               	movwf	___ftadd@f1
  6181  0250  1683               	bsf	3,5	;RP0=1, select bank1
  6182  0251  1303               	bcf	3,6	;RP1=0, select bank1
  6183  0252  0839               	movf	(_y+1)^(0+128),w
  6184  0253  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0254  1303               	bcf	3,6	;RP1=0, select bank0
  6186  0255  00A4               	movwf	___ftadd@f1+1
  6187  0256  1683               	bsf	3,5	;RP0=1, select bank1
  6188  0257  1303               	bcf	3,6	;RP1=0, select bank1
  6189  0258  083A               	movf	(_y+2)^(0+128),w
  6190  0259                     L3:	
  6191  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6192  025A  1303               	bcf	3,6	;RP1=0, select bank0
  6193  025B  00A5               	movwf	___ftadd@f1+2
  6194  025C  0860               	movf	Fuzzy@reduz,w
  6195  025D  00A6               	movwf	___ftadd@f2
  6196  025E  0861               	movf	Fuzzy@reduz+1,w
  6197  025F  00A7               	movwf	___ftadd@f2+1
  6198  0260  0862               	movf	Fuzzy@reduz+2,w
  6199  0261  00A8               	movwf	___ftadd@f2+2
  6200  0262  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6201  0267  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0268  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0269  0823               	movf	?___ftadd,w
  6204  026A  00E0               	movwf	Fuzzy@reduz
  6205  026B  0824               	movf	?___ftadd+1,w
  6206  026C  00E1               	movwf	Fuzzy@reduz+1
  6207  026D  0825               	movf	?___ftadd+2,w
  6208  026E  00E2               	movwf	Fuzzy@reduz+2
  6209                           
  6210                           ;main.c: 202: }
  6211                           ;main.c: 204: x=x+1;
  6212  026F  3000               	movlw	0
  6213  0270  00A3               	movwf	___ftadd@f1
  6214  0271  3080               	movlw	128
  6215  0272  00A4               	movwf	___ftadd@f1+1
  6216  0273  303F               	movlw	63
  6217  0274  00A5               	movwf	___ftadd@f1+2
  6218  0275  1683               	bsf	3,5	;RP0=1, select bank1
  6219  0276  1303               	bcf	3,6	;RP1=0, select bank1
  6220  0277  0835               	movf	_x^(0+128),w
  6221  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0279  1303               	bcf	3,6	;RP1=0, select bank0
  6223  027A  00A6               	movwf	___ftadd@f2
  6224  027B  1683               	bsf	3,5	;RP0=1, select bank1
  6225  027C  1303               	bcf	3,6	;RP1=0, select bank1
  6226  027D  0836               	movf	(_x+1)^(0+128),w
  6227  027E  1283               	bcf	3,5	;RP0=0, select bank0
  6228  027F  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0280  00A7               	movwf	___ftadd@f2+1
  6230  0281  1683               	bsf	3,5	;RP0=1, select bank1
  6231  0282  1303               	bcf	3,6	;RP1=0, select bank1
  6232  0283  0837               	movf	(_x+2)^(0+128),w
  6233  0284  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0285  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0286  00A8               	movwf	___ftadd@f2+2
  6236  0287  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6237  028C  1283               	bcf	3,5	;RP0=0, select bank0
  6238  028D  1303               	bcf	3,6	;RP1=0, select bank0
  6239  028E  0823               	movf	?___ftadd,w
  6240  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6241  0290  1303               	bcf	3,6	;RP1=0, select bank1
  6242  0291  00B5               	movwf	_x^(0+128)
  6243  0292  1283               	bcf	3,5	;RP0=0, select bank0
  6244  0293  1303               	bcf	3,6	;RP1=0, select bank0
  6245  0294  0824               	movf	?___ftadd+1,w
  6246  0295  1683               	bsf	3,5	;RP0=1, select bank1
  6247  0296  1303               	bcf	3,6	;RP1=0, select bank1
  6248  0297  00B6               	movwf	(_x+1)^(0+128)
  6249  0298  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0299  1303               	bcf	3,6	;RP1=0, select bank0
  6251  029A  0825               	movf	?___ftadd+2,w
  6252  029B  1683               	bsf	3,5	;RP0=1, select bank1
  6253  029C  1303               	bcf	3,6	;RP1=0, select bank1
  6254  029D  00B7               	movwf	(_x+2)^(0+128)
  6255  029E  3001               	movlw	1
  6256  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6257  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  6258  02A1  07D7               	addwf	Fuzzy@a,f
  6259  02A2  1803               	skipnc
  6260  02A3  0AD8               	incf	Fuzzy@a+1,f
  6261  02A4  3000               	movlw	0
  6262  02A5  07D8               	addwf	Fuzzy@a+1,f
  6263  02A6  0858               	movf	Fuzzy@a+1,w
  6264  02A7  3A80               	xorlw	128
  6265  02A8  00FF               	movwf	127
  6266  02A9  3080               	movlw	128
  6267  02AA  027F               	subwf	127,w
  6268  02AB  1D03               	skipz
  6269  02AC  2AAF               	goto	u338_25
  6270  02AD  305B               	movlw	91
  6271  02AE  0257               	subwf	Fuzzy@a,w
  6272  02AF                     u338_25:	
  6273  02AF  1C03               	skipc
  6274  02B0  29D0               	goto	i1l2773
  6275  02B1                     i1l2783:	
  6276                           
  6277                           ;main.c: 205: }
  6278                           ;main.c: 207: }
  6279                           ;main.c: 213: if ((deltaRpm > 20) && (deltaRpm < 70))
  6280  02B1  3000               	movlw	0
  6281  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  6282  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  6283  02B4  00B0               	movwf	___ftge@ff1
  6284  02B5  30A0               	movlw	160
  6285  02B6  00B1               	movwf	___ftge@ff1+1
  6286  02B7  3041               	movlw	65
  6287  02B8  00B2               	movwf	___ftge@ff1+2
  6288  02B9  0866               	movf	Fuzzy@deltaRpm,w
  6289  02BA  00B3               	movwf	___ftge@ff2
  6290  02BB  0867               	movf	Fuzzy@deltaRpm+1,w
  6291  02BC  00B4               	movwf	___ftge@ff2+1
  6292  02BD  0868               	movf	Fuzzy@deltaRpm+2,w
  6293  02BE  00B5               	movwf	___ftge@ff2+2
  6294  02BF  160A  118A  23AE  120A  118A  	fcall	___ftge
  6295  02C4  1803               	btfsc	3,0
  6296  02C5  2C2F               	goto	i1l2809
  6297  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  6298  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  6299  02C8  0866               	movf	Fuzzy@deltaRpm,w
  6300  02C9  00B0               	movwf	___ftge@ff1
  6301  02CA  0867               	movf	Fuzzy@deltaRpm+1,w
  6302  02CB  00B1               	movwf	___ftge@ff1+1
  6303  02CC  0868               	movf	Fuzzy@deltaRpm+2,w
  6304  02CD  00B2               	movwf	___ftge@ff1+2
  6305  02CE  3000               	movlw	0
  6306  02CF  00B3               	movwf	___ftge@ff2
  6307  02D0  308C               	movlw	140
  6308  02D1  00B4               	movwf	___ftge@ff2+1
  6309  02D2  3042               	movlw	66
  6310  02D3  00B5               	movwf	___ftge@ff2+2
  6311  02D4  160A  118A  23AE  120A  118A  	fcall	___ftge
  6312  02D9  1803               	btfsc	3,0
  6313  02DA  2C2F               	goto	i1l2809
  6314                           
  6315                           ;main.c: 214: {
  6316                           ;main.c: 217: fitemp = trimf(deltaRpm, 9, 45, 81);
  6317  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  6318  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  6319  02DD  0866               	movf	Fuzzy@deltaRpm,w
  6320  02DE  00C0               	movwf	trimf@x
  6321  02DF  0867               	movf	Fuzzy@deltaRpm+1,w
  6322  02E0  00C1               	movwf	trimf@x+1
  6323  02E1  0868               	movf	Fuzzy@deltaRpm+2,w
  6324  02E2  00C2               	movwf	trimf@x+2
  6325  02E3  3000               	movlw	0
  6326  02E4  00C3               	movwf	trimf@a
  6327  02E5  3010               	movlw	16
  6328  02E6  00C4               	movwf	trimf@a+1
  6329  02E7  3041               	movlw	65
  6330  02E8  00C5               	movwf	trimf@a+2
  6331  02E9  3000               	movlw	0
  6332  02EA  00C6               	movwf	trimf@b
  6333  02EB  3034               	movlw	52
  6334  02EC  00C7               	movwf	trimf@b+1
  6335  02ED  3042               	movlw	66
  6336  02EE  00C8               	movwf	trimf@b+2
  6337  02EF  3000               	movlw	0
  6338  02F0  00C9               	movwf	trimf@c
  6339  02F1  30A2               	movlw	162
  6340  02F2  00CA               	movwf	trimf@c+1
  6341  02F3  3042               	movlw	66
  6342  02F4  00CB               	movwf	trimf@c+2
  6343  02F5  120A  158A  2103  120A  118A  	fcall	_trimf
  6344  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  6345  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  6346  02FC  0840               	movf	?_trimf,w
  6347  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  6348  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  6349  02FF  00A3               	movwf	_fitemp^(0+128)
  6350  0300  1283               	bcf	3,5	;RP0=0, select bank0
  6351  0301  1303               	bcf	3,6	;RP1=0, select bank0
  6352  0302  0841               	movf	?_trimf+1,w
  6353  0303  1683               	bsf	3,5	;RP0=1, select bank1
  6354  0304  1303               	bcf	3,6	;RP1=0, select bank1
  6355  0305  00A4               	movwf	(_fitemp+1)^(0+128)
  6356  0306  1283               	bcf	3,5	;RP0=0, select bank0
  6357  0307  1303               	bcf	3,6	;RP1=0, select bank0
  6358  0308  0842               	movf	?_trimf+2,w
  6359  0309  1683               	bsf	3,5	;RP0=1, select bank1
  6360  030A  1303               	bcf	3,6	;RP1=0, select bank1
  6361  030B  00A5               	movwf	(_fitemp+2)^(0+128)
  6362                           
  6363                           ;main.c: 220: fop_rule2 = max_val(fitemp,0.1);
  6364  030C  0823               	movf	_fitemp^(0+128),w
  6365  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6366  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6367  030F  00BC               	movwf	max_val@a
  6368  0310  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0311  1303               	bcf	3,6	;RP1=0, select bank1
  6370  0312  0824               	movf	(_fitemp+1)^(0+128),w
  6371  0313  1283               	bcf	3,5	;RP0=0, select bank0
  6372  0314  1303               	bcf	3,6	;RP1=0, select bank0
  6373  0315  00BD               	movwf	max_val@a+1
  6374  0316  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0317  1303               	bcf	3,6	;RP1=0, select bank1
  6376  0318  0825               	movf	(_fitemp+2)^(0+128),w
  6377  0319  1283               	bcf	3,5	;RP0=0, select bank0
  6378  031A  1303               	bcf	3,6	;RP1=0, select bank0
  6379  031B  00BE               	movwf	max_val@a+2
  6380  031C  30CD               	movlw	205
  6381  031D  00BF               	movwf	max_val@b
  6382  031E  30CC               	movlw	204
  6383  031F  00C0               	movwf	max_val@b+1
  6384  0320  303D               	movlw	61
  6385  0321  00C1               	movwf	max_val@b+2
  6386  0322  160A  118A  213C  120A  118A  	fcall	_max_val
  6387  0327  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0328  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0329  083C               	movf	?_max_val,w
  6390  032A  1683               	bsf	3,5	;RP0=1, select bank1
  6391  032B  1303               	bcf	3,6	;RP1=0, select bank1
  6392  032C  00A9               	movwf	_fop_rule2^(0+128)
  6393  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6394  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6395  032F  083D               	movf	?_max_val+1,w
  6396  0330  1683               	bsf	3,5	;RP0=1, select bank1
  6397  0331  1303               	bcf	3,6	;RP1=0, select bank1
  6398  0332  00AA               	movwf	(_fop_rule2+1)^(0+128)
  6399  0333  1283               	bcf	3,5	;RP0=0, select bank0
  6400  0334  1303               	bcf	3,6	;RP1=0, select bank0
  6401  0335  083E               	movf	?_max_val+2,w
  6402  0336  1683               	bsf	3,5	;RP0=1, select bank1
  6403  0337  1303               	bcf	3,6	;RP1=0, select bank1
  6404  0338  00AB               	movwf	(_fop_rule2+2)^(0+128)
  6405                           
  6406                           ;main.c: 223: x=0;
  6407  0339  3000               	movlw	0
  6408  033A  00B5               	movwf	_x^(0+128)
  6409  033B  3000               	movlw	0
  6410  033C  00B6               	movwf	(_x+1)^(0+128)
  6411  033D  3000               	movlw	0
  6412  033E  00B7               	movwf	(_x+2)^(0+128)
  6413                           
  6414                           ;main.c: 224: y=0;
  6415  033F  3000               	movlw	0
  6416  0340  00B8               	movwf	_y^(0+128)
  6417  0341  3000               	movlw	0
  6418  0342  00B9               	movwf	(_y+1)^(0+128)
  6419  0343  3000               	movlw	0
  6420  0344  00BA               	movwf	(_y+2)^(0+128)
  6421                           
  6422                           ;main.c: 225: for (int a=0; a<=90; a++)
  6423  0345  1283               	bcf	3,5	;RP0=0, select bank0
  6424  0346  1303               	bcf	3,6	;RP1=0, select bank0
  6425  0347  01D9               	clrf	Fuzzy@a_242
  6426  0348  01DA               	clrf	Fuzzy@a_242+1
  6427  0349  085A               	movf	Fuzzy@a_242+1,w
  6428  034A  3A80               	xorlw	128
  6429  034B  00FF               	movwf	127
  6430  034C  3080               	movlw	128
  6431  034D  027F               	subwf	127,w
  6432  034E  1D03               	skipz
  6433  034F  2B52               	goto	u341_25
  6434  0350  305B               	movlw	91
  6435  0351  0259               	subwf	Fuzzy@a_242,w
  6436  0352                     u341_25:	
  6437  0352  1803               	btfsc	3,0
  6438  0353  2C2F               	goto	i1l2809
  6439  0354                     i1l2799:	
  6440                           
  6441                           ;main.c: 226: {
  6442                           ;main.c: 227: y = trimf(x, 9, 45, 81);
  6443  0354  1683               	bsf	3,5	;RP0=1, select bank1
  6444  0355  1303               	bcf	3,6	;RP1=0, select bank1
  6445  0356  0835               	movf	_x^(0+128),w
  6446  0357  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0358  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0359  00C0               	movwf	trimf@x
  6449  035A  1683               	bsf	3,5	;RP0=1, select bank1
  6450  035B  1303               	bcf	3,6	;RP1=0, select bank1
  6451  035C  0836               	movf	(_x+1)^(0+128),w
  6452  035D  1283               	bcf	3,5	;RP0=0, select bank0
  6453  035E  1303               	bcf	3,6	;RP1=0, select bank0
  6454  035F  00C1               	movwf	trimf@x+1
  6455  0360  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0361  1303               	bcf	3,6	;RP1=0, select bank1
  6457  0362  0837               	movf	(_x+2)^(0+128),w
  6458  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6460  0365  00C2               	movwf	trimf@x+2
  6461  0366  3000               	movlw	0
  6462  0367  00C3               	movwf	trimf@a
  6463  0368  3010               	movlw	16
  6464  0369  00C4               	movwf	trimf@a+1
  6465  036A  3041               	movlw	65
  6466  036B  00C5               	movwf	trimf@a+2
  6467  036C  3000               	movlw	0
  6468  036D  00C6               	movwf	trimf@b
  6469  036E  3034               	movlw	52
  6470  036F  00C7               	movwf	trimf@b+1
  6471  0370  3042               	movlw	66
  6472  0371  00C8               	movwf	trimf@b+2
  6473  0372  3000               	movlw	0
  6474  0373  00C9               	movwf	trimf@c
  6475  0374  30A2               	movlw	162
  6476  0375  00CA               	movwf	trimf@c+1
  6477  0376  3042               	movlw	66
  6478  0377  00CB               	movwf	trimf@c+2
  6479  0378  120A  158A  2103  120A  118A  	fcall	_trimf
  6480  037D  1283               	bcf	3,5	;RP0=0, select bank0
  6481  037E  1303               	bcf	3,6	;RP1=0, select bank0
  6482  037F  0840               	movf	?_trimf,w
  6483  0380  1683               	bsf	3,5	;RP0=1, select bank1
  6484  0381  1303               	bcf	3,6	;RP1=0, select bank1
  6485  0382  00B8               	movwf	_y^(0+128)
  6486  0383  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0384  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0385  0841               	movf	?_trimf+1,w
  6489  0386  1683               	bsf	3,5	;RP0=1, select bank1
  6490  0387  1303               	bcf	3,6	;RP1=0, select bank1
  6491  0388  00B9               	movwf	(_y+1)^(0+128)
  6492  0389  1283               	bcf	3,5	;RP0=0, select bank0
  6493  038A  1303               	bcf	3,6	;RP1=0, select bank0
  6494  038B  0842               	movf	?_trimf+2,w
  6495  038C  1683               	bsf	3,5	;RP0=1, select bank1
  6496  038D  1303               	bcf	3,6	;RP1=0, select bank1
  6497  038E  00BA               	movwf	(_y+2)^(0+128)
  6498                           
  6499                           ;main.c: 229: if (y >= fop_rule2)
  6500  038F  0838               	movf	_y^(0+128),w
  6501  0390  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0391  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0392  00B0               	movwf	___ftge@ff1
  6504  0393  1683               	bsf	3,5	;RP0=1, select bank1
  6505  0394  1303               	bcf	3,6	;RP1=0, select bank1
  6506  0395  0839               	movf	(_y+1)^(0+128),w
  6507  0396  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0397  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0398  00B1               	movwf	___ftge@ff1+1
  6510  0399  1683               	bsf	3,5	;RP0=1, select bank1
  6511  039A  1303               	bcf	3,6	;RP1=0, select bank1
  6512  039B  083A               	movf	(_y+2)^(0+128),w
  6513  039C  1283               	bcf	3,5	;RP0=0, select bank0
  6514  039D  1303               	bcf	3,6	;RP1=0, select bank0
  6515  039E  00B2               	movwf	___ftge@ff1+2
  6516  039F  1683               	bsf	3,5	;RP0=1, select bank1
  6517  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  6518  03A1  0829               	movf	_fop_rule2^(0+128),w
  6519  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  6520  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  6521  03A4  00B3               	movwf	___ftge@ff2
  6522  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  6523  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  6524  03A7  082A               	movf	(_fop_rule2+1)^(0+128),w
  6525  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  6526  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  6527  03AA  00B4               	movwf	___ftge@ff2+1
  6528  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  6529  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  6530  03AD  082B               	movf	(_fop_rule2+2)^(0+128),w
  6531  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  6532  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  6533  03B0  00B5               	movwf	___ftge@ff2+2
  6534  03B1  160A  118A  23AE  120A  118A  	fcall	___ftge
  6535  03B6  1C03               	btfss	3,0
  6536  03B7  2BC8               	goto	i1l2803
  6537                           
  6538                           ;main.c: 230: {
  6539                           ;main.c: 231: mantem += fop_rule2;
  6540  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  6541  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  6542  03BA  0829               	movf	_fop_rule2^(0+128),w
  6543  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  6544  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  6545  03BD  00A3               	movwf	___ftadd@f1
  6546  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  6547  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  6548  03C0  082A               	movf	(_fop_rule2+1)^(0+128),w
  6549  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  6550  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  6551  03C3  00A4               	movwf	___ftadd@f1+1
  6552  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  6553  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  6554  03C6  082B               	movf	(_fop_rule2+2)^(0+128),w
  6555  03C7  2BD7               	goto	L4
  6556  03C8                     i1l2803:	
  6557                           ;main.c: 232: }
  6558                           
  6559                           
  6560                           ;main.c: 233: else
  6561                           ;main.c: 234: {
  6562                           ;main.c: 235: mantem += y;
  6563  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6564  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6565  03CA  0838               	movf	_y^(0+128),w
  6566  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  6567  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  6568  03CD  00A3               	movwf	___ftadd@f1
  6569  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  6570  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  6571  03D0  0839               	movf	(_y+1)^(0+128),w
  6572  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  6573  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  6574  03D3  00A4               	movwf	___ftadd@f1+1
  6575  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6576  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  6577  03D6  083A               	movf	(_y+2)^(0+128),w
  6578  03D7                     L4:	
  6579  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  6580  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  6581  03D9  00A5               	movwf	___ftadd@f1+2
  6582  03DA  085D               	movf	Fuzzy@mantem,w
  6583  03DB  00A6               	movwf	___ftadd@f2
  6584  03DC  085E               	movf	Fuzzy@mantem+1,w
  6585  03DD  00A7               	movwf	___ftadd@f2+1
  6586  03DE  085F               	movf	Fuzzy@mantem+2,w
  6587  03DF  00A8               	movwf	___ftadd@f2+2
  6588  03E0  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6589  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  6590  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  6591  03E7  0823               	movf	?___ftadd,w
  6592  03E8  00DD               	movwf	Fuzzy@mantem
  6593  03E9  0824               	movf	?___ftadd+1,w
  6594  03EA  00DE               	movwf	Fuzzy@mantem+1
  6595  03EB  0825               	movf	?___ftadd+2,w
  6596  03EC  00DF               	movwf	Fuzzy@mantem+2
  6597                           
  6598                           ;main.c: 236: }
  6599                           ;main.c: 238: x=x+1;
  6600  03ED  3000               	movlw	0
  6601  03EE  00A3               	movwf	___ftadd@f1
  6602  03EF  3080               	movlw	128
  6603  03F0  00A4               	movwf	___ftadd@f1+1
  6604  03F1  303F               	movlw	63
  6605  03F2  00A5               	movwf	___ftadd@f1+2
  6606  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  6607  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  6608  03F5  0835               	movf	_x^(0+128),w
  6609  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  6610  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  6611  03F8  00A6               	movwf	___ftadd@f2
  6612  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  6613  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  6614  03FB  0836               	movf	(_x+1)^(0+128),w
  6615  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  6616  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  6617  03FE  00A7               	movwf	___ftadd@f2+1
  6618  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  6619  0400  1303               	bcf	3,6	;RP1=0, select bank1
  6620  0401  0837               	movf	(_x+2)^(0+128),w
  6621  0402  1283               	bcf	3,5	;RP0=0, select bank0
  6622  0403  1303               	bcf	3,6	;RP1=0, select bank0
  6623  0404  00A8               	movwf	___ftadd@f2+2
  6624  0405  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6625  040A  1283               	bcf	3,5	;RP0=0, select bank0
  6626  040B  1303               	bcf	3,6	;RP1=0, select bank0
  6627  040C  0823               	movf	?___ftadd,w
  6628  040D  1683               	bsf	3,5	;RP0=1, select bank1
  6629  040E  1303               	bcf	3,6	;RP1=0, select bank1
  6630  040F  00B5               	movwf	_x^(0+128)
  6631  0410  1283               	bcf	3,5	;RP0=0, select bank0
  6632  0411  1303               	bcf	3,6	;RP1=0, select bank0
  6633  0412  0824               	movf	?___ftadd+1,w
  6634  0413  1683               	bsf	3,5	;RP0=1, select bank1
  6635  0414  1303               	bcf	3,6	;RP1=0, select bank1
  6636  0415  00B6               	movwf	(_x+1)^(0+128)
  6637  0416  1283               	bcf	3,5	;RP0=0, select bank0
  6638  0417  1303               	bcf	3,6	;RP1=0, select bank0
  6639  0418  0825               	movf	?___ftadd+2,w
  6640  0419  1683               	bsf	3,5	;RP0=1, select bank1
  6641  041A  1303               	bcf	3,6	;RP1=0, select bank1
  6642  041B  00B7               	movwf	(_x+2)^(0+128)
  6643  041C  3001               	movlw	1
  6644  041D  1283               	bcf	3,5	;RP0=0, select bank0
  6645  041E  1303               	bcf	3,6	;RP1=0, select bank0
  6646  041F  07D9               	addwf	Fuzzy@a_242,f
  6647  0420  1803               	skipnc
  6648  0421  0ADA               	incf	Fuzzy@a_242+1,f
  6649  0422  3000               	movlw	0
  6650  0423  07DA               	addwf	Fuzzy@a_242+1,f
  6651  0424  085A               	movf	Fuzzy@a_242+1,w
  6652  0425  3A80               	xorlw	128
  6653  0426  00FF               	movwf	127
  6654  0427  3080               	movlw	128
  6655  0428  027F               	subwf	127,w
  6656  0429  1D03               	skipz
  6657  042A  2C2D               	goto	u343_25
  6658  042B  305B               	movlw	91
  6659  042C  0259               	subwf	Fuzzy@a_242,w
  6660  042D                     u343_25:	
  6661  042D  1C03               	skipc
  6662  042E  2B54               	goto	i1l2799
  6663  042F                     i1l2809:	
  6664                           
  6665                           ;main.c: 239: }
  6666                           ;main.c: 241: }
  6667                           ;main.c: 247: if (deltaRpm > 70 )
  6668  042F  3000               	movlw	0
  6669  0430  1283               	bcf	3,5	;RP0=0, select bank0
  6670  0431  1303               	bcf	3,6	;RP1=0, select bank0
  6671  0432  00B0               	movwf	___ftge@ff1
  6672  0433  308C               	movlw	140
  6673  0434  00B1               	movwf	___ftge@ff1+1
  6674  0435  3042               	movlw	66
  6675  0436  00B2               	movwf	___ftge@ff1+2
  6676  0437  0866               	movf	Fuzzy@deltaRpm,w
  6677  0438  00B3               	movwf	___ftge@ff2
  6678  0439  0867               	movf	Fuzzy@deltaRpm+1,w
  6679  043A  00B4               	movwf	___ftge@ff2+1
  6680  043B  0868               	movf	Fuzzy@deltaRpm+2,w
  6681  043C  00B5               	movwf	___ftge@ff2+2
  6682  043D  160A  118A  23AE  120A  118A  	fcall	___ftge
  6683  0442  1803               	btfsc	3,0
  6684  0443  2DA4               	goto	i1l2833
  6685                           
  6686                           ;main.c: 248: {
  6687                           ;main.c: 251: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  6688  0444  1283               	bcf	3,5	;RP0=0, select bank0
  6689  0445  1303               	bcf	3,6	;RP1=0, select bank0
  6690  0446  0866               	movf	Fuzzy@deltaRpm,w
  6691  0447  00C0               	movwf	trapmf@x
  6692  0448  0867               	movf	Fuzzy@deltaRpm+1,w
  6693  0449  00C1               	movwf	trapmf@x+1
  6694  044A  0868               	movf	Fuzzy@deltaRpm+2,w
  6695  044B  00C2               	movwf	trapmf@x+2
  6696  044C  3000               	movlw	0
  6697  044D  00C3               	movwf	trapmf@a
  6698  044E  3078               	movlw	120
  6699  044F  00C4               	movwf	trapmf@a+1
  6700  0450  3042               	movlw	66
  6701  0451  00C5               	movwf	trapmf@a+2
  6702  0452  3000               	movlw	0
  6703  0453  00C6               	movwf	trapmf@b
  6704  0454  309E               	movlw	158
  6705  0455  00C7               	movwf	trapmf@b+1
  6706  0456  3042               	movlw	66
  6707  0457  00C8               	movwf	trapmf@b+2
  6708  0458  3000               	movlw	0
  6709  0459  00C9               	movwf	trapmf@c
  6710  045A  30B4               	movlw	180
  6711  045B  00CA               	movwf	trapmf@c+1
  6712  045C  3042               	movlw	66
  6713  045D  00CB               	movwf	trapmf@c+2
  6714  045E  3000               	movlw	0
  6715  045F  00CC               	movwf	trapmf@d
  6716  0460  30B4               	movlw	180
  6717  0461  00CD               	movwf	trapmf@d+1
  6718  0462  3042               	movlw	66
  6719  0463  00CE               	movwf	trapmf@d+2
  6720  0464  120A  158A  2378  120A  118A  	fcall	_trapmf
  6721  0469  1283               	bcf	3,5	;RP0=0, select bank0
  6722  046A  1303               	bcf	3,6	;RP1=0, select bank0
  6723  046B  0840               	movf	?_trapmf,w
  6724  046C  1683               	bsf	3,5	;RP0=1, select bank1
  6725  046D  1303               	bcf	3,6	;RP1=0, select bank1
  6726  046E  00A3               	movwf	_fitemp^(0+128)
  6727  046F  1283               	bcf	3,5	;RP0=0, select bank0
  6728  0470  1303               	bcf	3,6	;RP1=0, select bank0
  6729  0471  0841               	movf	?_trapmf+1,w
  6730  0472  1683               	bsf	3,5	;RP0=1, select bank1
  6731  0473  1303               	bcf	3,6	;RP1=0, select bank1
  6732  0474  00A4               	movwf	(_fitemp+1)^(0+128)
  6733  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0477  0842               	movf	?_trapmf+2,w
  6736  0478  1683               	bsf	3,5	;RP0=1, select bank1
  6737  0479  1303               	bcf	3,6	;RP1=0, select bank1
  6738  047A  00A5               	movwf	(_fitemp+2)^(0+128)
  6739                           
  6740                           ;main.c: 255: fop_rule3 = max_val(fitemp,0.1);
  6741  047B  0823               	movf	_fitemp^(0+128),w
  6742  047C  1283               	bcf	3,5	;RP0=0, select bank0
  6743  047D  1303               	bcf	3,6	;RP1=0, select bank0
  6744  047E  00BC               	movwf	max_val@a
  6745  047F  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0480  1303               	bcf	3,6	;RP1=0, select bank1
  6747  0481  0824               	movf	(_fitemp+1)^(0+128),w
  6748  0482  1283               	bcf	3,5	;RP0=0, select bank0
  6749  0483  1303               	bcf	3,6	;RP1=0, select bank0
  6750  0484  00BD               	movwf	max_val@a+1
  6751  0485  1683               	bsf	3,5	;RP0=1, select bank1
  6752  0486  1303               	bcf	3,6	;RP1=0, select bank1
  6753  0487  0825               	movf	(_fitemp+2)^(0+128),w
  6754  0488  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0489  1303               	bcf	3,6	;RP1=0, select bank0
  6756  048A  00BE               	movwf	max_val@a+2
  6757  048B  30CD               	movlw	205
  6758  048C  00BF               	movwf	max_val@b
  6759  048D  30CC               	movlw	204
  6760  048E  00C0               	movwf	max_val@b+1
  6761  048F  303D               	movlw	61
  6762  0490  00C1               	movwf	max_val@b+2
  6763  0491  160A  118A  213C  120A  118A  	fcall	_max_val
  6764  0496  1283               	bcf	3,5	;RP0=0, select bank0
  6765  0497  1303               	bcf	3,6	;RP1=0, select bank0
  6766  0498  083C               	movf	?_max_val,w
  6767  0499  1683               	bsf	3,5	;RP0=1, select bank1
  6768  049A  1303               	bcf	3,6	;RP1=0, select bank1
  6769  049B  00AC               	movwf	_fop_rule3^(0+128)
  6770  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6771  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6772  049E  083D               	movf	?_max_val+1,w
  6773  049F  1683               	bsf	3,5	;RP0=1, select bank1
  6774  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  6775  04A1  00AD               	movwf	(_fop_rule3+1)^(0+128)
  6776  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6777  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6778  04A4  083E               	movf	?_max_val+2,w
  6779  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  6780  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  6781  04A7  00AE               	movwf	(_fop_rule3+2)^(0+128)
  6782                           
  6783                           ;main.c: 258: x=0;
  6784  04A8  3000               	movlw	0
  6785  04A9  00B5               	movwf	_x^(0+128)
  6786  04AA  3000               	movlw	0
  6787  04AB  00B6               	movwf	(_x+1)^(0+128)
  6788  04AC  3000               	movlw	0
  6789  04AD  00B7               	movwf	(_x+2)^(0+128)
  6790                           
  6791                           ;main.c: 259: y=0;
  6792  04AE  3000               	movlw	0
  6793  04AF  00B8               	movwf	_y^(0+128)
  6794  04B0  3000               	movlw	0
  6795  04B1  00B9               	movwf	(_y+1)^(0+128)
  6796  04B2  3000               	movlw	0
  6797  04B3  00BA               	movwf	(_y+2)^(0+128)
  6798                           
  6799                           ;main.c: 260: for (int a=0; a<=90; a++)
  6800  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  6801  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  6802  04B6  01DB               	clrf	Fuzzy@a_243
  6803  04B7  01DC               	clrf	Fuzzy@a_243+1
  6804  04B8  085C               	movf	Fuzzy@a_243+1,w
  6805  04B9  3A80               	xorlw	128
  6806  04BA  00FF               	movwf	127
  6807  04BB  3080               	movlw	128
  6808  04BC  027F               	subwf	127,w
  6809  04BD  1D03               	skipz
  6810  04BE  2CC1               	goto	u345_25
  6811  04BF  305B               	movlw	91
  6812  04C0  025B               	subwf	Fuzzy@a_243,w
  6813  04C1                     u345_25:	
  6814  04C1  1803               	btfsc	3,0
  6815  04C2  2DA4               	goto	i1l2833
  6816  04C3                     i1l2823:	
  6817                           
  6818                           ;main.c: 261: {
  6819                           ;main.c: 262: y = trapmf(x, 62, 79, 90, 90);
  6820  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  6821  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  6822  04C5  0835               	movf	_x^(0+128),w
  6823  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6824  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6825  04C8  00C0               	movwf	trapmf@x
  6826  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  6827  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  6828  04CB  0836               	movf	(_x+1)^(0+128),w
  6829  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  6830  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  6831  04CE  00C1               	movwf	trapmf@x+1
  6832  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  6833  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  6834  04D1  0837               	movf	(_x+2)^(0+128),w
  6835  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  6836  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  6837  04D4  00C2               	movwf	trapmf@x+2
  6838  04D5  3000               	movlw	0
  6839  04D6  00C3               	movwf	trapmf@a
  6840  04D7  3078               	movlw	120
  6841  04D8  00C4               	movwf	trapmf@a+1
  6842  04D9  3042               	movlw	66
  6843  04DA  00C5               	movwf	trapmf@a+2
  6844  04DB  3000               	movlw	0
  6845  04DC  00C6               	movwf	trapmf@b
  6846  04DD  309E               	movlw	158
  6847  04DE  00C7               	movwf	trapmf@b+1
  6848  04DF  3042               	movlw	66
  6849  04E0  00C8               	movwf	trapmf@b+2
  6850  04E1  3000               	movlw	0
  6851  04E2  00C9               	movwf	trapmf@c
  6852  04E3  30B4               	movlw	180
  6853  04E4  00CA               	movwf	trapmf@c+1
  6854  04E5  3042               	movlw	66
  6855  04E6  00CB               	movwf	trapmf@c+2
  6856  04E7  3000               	movlw	0
  6857  04E8  00CC               	movwf	trapmf@d
  6858  04E9  30B4               	movlw	180
  6859  04EA  00CD               	movwf	trapmf@d+1
  6860  04EB  3042               	movlw	66
  6861  04EC  00CE               	movwf	trapmf@d+2
  6862  04ED  120A  158A  2378  120A  118A  	fcall	_trapmf
  6863  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  6864  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  6865  04F4  0840               	movf	?_trapmf,w
  6866  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  6867  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  6868  04F7  00B8               	movwf	_y^(0+128)
  6869  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  6870  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  6871  04FA  0841               	movf	?_trapmf+1,w
  6872  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  6873  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  6874  04FD  00B9               	movwf	(_y+1)^(0+128)
  6875  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  6876  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  6877  0500  0842               	movf	?_trapmf+2,w
  6878  0501  1683               	bsf	3,5	;RP0=1, select bank1
  6879  0502  1303               	bcf	3,6	;RP1=0, select bank1
  6880  0503  00BA               	movwf	(_y+2)^(0+128)
  6881                           
  6882                           ;main.c: 264: if (y >= fop_rule3)
  6883  0504  0838               	movf	_y^(0+128),w
  6884  0505  1283               	bcf	3,5	;RP0=0, select bank0
  6885  0506  1303               	bcf	3,6	;RP1=0, select bank0
  6886  0507  00B0               	movwf	___ftge@ff1
  6887  0508  1683               	bsf	3,5	;RP0=1, select bank1
  6888  0509  1303               	bcf	3,6	;RP1=0, select bank1
  6889  050A  0839               	movf	(_y+1)^(0+128),w
  6890  050B  1283               	bcf	3,5	;RP0=0, select bank0
  6891  050C  1303               	bcf	3,6	;RP1=0, select bank0
  6892  050D  00B1               	movwf	___ftge@ff1+1
  6893  050E  1683               	bsf	3,5	;RP0=1, select bank1
  6894  050F  1303               	bcf	3,6	;RP1=0, select bank1
  6895  0510  083A               	movf	(_y+2)^(0+128),w
  6896  0511  1283               	bcf	3,5	;RP0=0, select bank0
  6897  0512  1303               	bcf	3,6	;RP1=0, select bank0
  6898  0513  00B2               	movwf	___ftge@ff1+2
  6899  0514  1683               	bsf	3,5	;RP0=1, select bank1
  6900  0515  1303               	bcf	3,6	;RP1=0, select bank1
  6901  0516  082C               	movf	_fop_rule3^(0+128),w
  6902  0517  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0518  1303               	bcf	3,6	;RP1=0, select bank0
  6904  0519  00B3               	movwf	___ftge@ff2
  6905  051A  1683               	bsf	3,5	;RP0=1, select bank1
  6906  051B  1303               	bcf	3,6	;RP1=0, select bank1
  6907  051C  082D               	movf	(_fop_rule3+1)^(0+128),w
  6908  051D  1283               	bcf	3,5	;RP0=0, select bank0
  6909  051E  1303               	bcf	3,6	;RP1=0, select bank0
  6910  051F  00B4               	movwf	___ftge@ff2+1
  6911  0520  1683               	bsf	3,5	;RP0=1, select bank1
  6912  0521  1303               	bcf	3,6	;RP1=0, select bank1
  6913  0522  082E               	movf	(_fop_rule3+2)^(0+128),w
  6914  0523  1283               	bcf	3,5	;RP0=0, select bank0
  6915  0524  1303               	bcf	3,6	;RP1=0, select bank0
  6916  0525  00B5               	movwf	___ftge@ff2+2
  6917  0526  160A  118A  23AE  120A  118A  	fcall	___ftge
  6918  052B  1C03               	btfss	3,0
  6919  052C  2D3D               	goto	i1l2827
  6920                           
  6921                           ;main.c: 265: {
  6922                           ;main.c: 266: aumenta += fop_rule3;
  6923  052D  1683               	bsf	3,5	;RP0=1, select bank1
  6924  052E  1303               	bcf	3,6	;RP1=0, select bank1
  6925  052F  082C               	movf	_fop_rule3^(0+128),w
  6926  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0531  1303               	bcf	3,6	;RP1=0, select bank0
  6928  0532  00A3               	movwf	___ftadd@f1
  6929  0533  1683               	bsf	3,5	;RP0=1, select bank1
  6930  0534  1303               	bcf	3,6	;RP1=0, select bank1
  6931  0535  082D               	movf	(_fop_rule3+1)^(0+128),w
  6932  0536  1283               	bcf	3,5	;RP0=0, select bank0
  6933  0537  1303               	bcf	3,6	;RP1=0, select bank0
  6934  0538  00A4               	movwf	___ftadd@f1+1
  6935  0539  1683               	bsf	3,5	;RP0=1, select bank1
  6936  053A  1303               	bcf	3,6	;RP1=0, select bank1
  6937  053B  082E               	movf	(_fop_rule3+2)^(0+128),w
  6938  053C  2D4C               	goto	L5
  6939  053D                     i1l2827:	
  6940                           ;main.c: 267: }
  6941                           
  6942                           
  6943                           ;main.c: 268: else
  6944                           ;main.c: 269: {
  6945                           ;main.c: 270: aumenta += y;
  6946  053D  1683               	bsf	3,5	;RP0=1, select bank1
  6947  053E  1303               	bcf	3,6	;RP1=0, select bank1
  6948  053F  0838               	movf	_y^(0+128),w
  6949  0540  1283               	bcf	3,5	;RP0=0, select bank0
  6950  0541  1303               	bcf	3,6	;RP1=0, select bank0
  6951  0542  00A3               	movwf	___ftadd@f1
  6952  0543  1683               	bsf	3,5	;RP0=1, select bank1
  6953  0544  1303               	bcf	3,6	;RP1=0, select bank1
  6954  0545  0839               	movf	(_y+1)^(0+128),w
  6955  0546  1283               	bcf	3,5	;RP0=0, select bank0
  6956  0547  1303               	bcf	3,6	;RP1=0, select bank0
  6957  0548  00A4               	movwf	___ftadd@f1+1
  6958  0549  1683               	bsf	3,5	;RP0=1, select bank1
  6959  054A  1303               	bcf	3,6	;RP1=0, select bank1
  6960  054B  083A               	movf	(_y+2)^(0+128),w
  6961  054C                     L5:	
  6962  054C  1283               	bcf	3,5	;RP0=0, select bank0
  6963  054D  1303               	bcf	3,6	;RP1=0, select bank0
  6964  054E  00A5               	movwf	___ftadd@f1+2
  6965  054F  0863               	movf	Fuzzy@aumenta,w
  6966  0550  00A6               	movwf	___ftadd@f2
  6967  0551  0864               	movf	Fuzzy@aumenta+1,w
  6968  0552  00A7               	movwf	___ftadd@f2+1
  6969  0553  0865               	movf	Fuzzy@aumenta+2,w
  6970  0554  00A8               	movwf	___ftadd@f2+2
  6971  0555  160A  118A  26F7  120A  118A  	fcall	___ftadd
  6972  055A  1283               	bcf	3,5	;RP0=0, select bank0
  6973  055B  1303               	bcf	3,6	;RP1=0, select bank0
  6974  055C  0823               	movf	?___ftadd,w
  6975  055D  00E3               	movwf	Fuzzy@aumenta
  6976  055E  0824               	movf	?___ftadd+1,w
  6977  055F  00E4               	movwf	Fuzzy@aumenta+1
  6978  0560  0825               	movf	?___ftadd+2,w
  6979  0561  00E5               	movwf	Fuzzy@aumenta+2
  6980                           
  6981                           ;main.c: 271: }
  6982                           ;main.c: 273: x=x+1;
  6983  0562  3000               	movlw	0
  6984  0563  00A3               	movwf	___ftadd@f1
  6985  0564  3080               	movlw	128
  6986  0565  00A4               	movwf	___ftadd@f1+1
  6987  0566  303F               	movlw	63
  6988  0567  00A5               	movwf	___ftadd@f1+2
  6989  0568  1683               	bsf	3,5	;RP0=1, select bank1
  6990  0569  1303               	bcf	3,6	;RP1=0, select bank1
  6991  056A  0835               	movf	_x^(0+128),w
  6992  056B  1283               	bcf	3,5	;RP0=0, select bank0
  6993  056C  1303               	bcf	3,6	;RP1=0, select bank0
  6994  056D  00A6               	movwf	___ftadd@f2
  6995  056E  1683               	bsf	3,5	;RP0=1, select bank1
  6996  056F  1303               	bcf	3,6	;RP1=0, select bank1
  6997  0570  0836               	movf	(_x+1)^(0+128),w
  6998  0571  1283               	bcf	3,5	;RP0=0, select bank0
  6999  0572  1303               	bcf	3,6	;RP1=0, select bank0
  7000  0573  00A7               	movwf	___ftadd@f2+1
  7001  0574  1683               	bsf	3,5	;RP0=1, select bank1
  7002  0575  1303               	bcf	3,6	;RP1=0, select bank1
  7003  0576  0837               	movf	(_x+2)^(0+128),w
  7004  0577  1283               	bcf	3,5	;RP0=0, select bank0
  7005  0578  1303               	bcf	3,6	;RP1=0, select bank0
  7006  0579  00A8               	movwf	___ftadd@f2+2
  7007  057A  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7008  057F  1283               	bcf	3,5	;RP0=0, select bank0
  7009  0580  1303               	bcf	3,6	;RP1=0, select bank0
  7010  0581  0823               	movf	?___ftadd,w
  7011  0582  1683               	bsf	3,5	;RP0=1, select bank1
  7012  0583  1303               	bcf	3,6	;RP1=0, select bank1
  7013  0584  00B5               	movwf	_x^(0+128)
  7014  0585  1283               	bcf	3,5	;RP0=0, select bank0
  7015  0586  1303               	bcf	3,6	;RP1=0, select bank0
  7016  0587  0824               	movf	?___ftadd+1,w
  7017  0588  1683               	bsf	3,5	;RP0=1, select bank1
  7018  0589  1303               	bcf	3,6	;RP1=0, select bank1
  7019  058A  00B6               	movwf	(_x+1)^(0+128)
  7020  058B  1283               	bcf	3,5	;RP0=0, select bank0
  7021  058C  1303               	bcf	3,6	;RP1=0, select bank0
  7022  058D  0825               	movf	?___ftadd+2,w
  7023  058E  1683               	bsf	3,5	;RP0=1, select bank1
  7024  058F  1303               	bcf	3,6	;RP1=0, select bank1
  7025  0590  00B7               	movwf	(_x+2)^(0+128)
  7026  0591  3001               	movlw	1
  7027  0592  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0593  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0594  07DB               	addwf	Fuzzy@a_243,f
  7030  0595  1803               	skipnc
  7031  0596  0ADC               	incf	Fuzzy@a_243+1,f
  7032  0597  3000               	movlw	0
  7033  0598  07DC               	addwf	Fuzzy@a_243+1,f
  7034  0599  085C               	movf	Fuzzy@a_243+1,w
  7035  059A  3A80               	xorlw	128
  7036  059B  00FF               	movwf	127
  7037  059C  3080               	movlw	128
  7038  059D  027F               	subwf	127,w
  7039  059E  1D03               	skipz
  7040  059F  2DA2               	goto	u347_25
  7041  05A0  305B               	movlw	91
  7042  05A1  025B               	subwf	Fuzzy@a_243,w
  7043  05A2                     u347_25:	
  7044  05A2  1C03               	skipc
  7045  05A3  2CC3               	goto	i1l2823
  7046  05A4                     i1l2833:	
  7047                           
  7048                           ;main.c: 274: }
  7049                           ;main.c: 276: }
  7050                           ;main.c: 279: if (deltaRpm < 25)
  7051  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  7052  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  7053  05A6  0866               	movf	Fuzzy@deltaRpm,w
  7054  05A7  00B0               	movwf	___ftge@ff1
  7055  05A8  0867               	movf	Fuzzy@deltaRpm+1,w
  7056  05A9  00B1               	movwf	___ftge@ff1+1
  7057  05AA  0868               	movf	Fuzzy@deltaRpm+2,w
  7058  05AB  00B2               	movwf	___ftge@ff1+2
  7059  05AC  3000               	movlw	0
  7060  05AD  00B3               	movwf	___ftge@ff2
  7061  05AE  30C8               	movlw	200
  7062  05AF  00B4               	movwf	___ftge@ff2+1
  7063  05B0  3041               	movlw	65
  7064  05B1  00B5               	movwf	___ftge@ff2+2
  7065  05B2  160A  118A  23AE  120A  118A  	fcall	___ftge
  7066  05B7  1803               	btfsc	3,0
  7067  05B8  2DC1               	goto	i1l2837
  7068                           
  7069                           ;main.c: 280: {
  7070                           ;main.c: 281: tip = reduz;
  7071  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  7072  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  7073  05BB  0860               	movf	Fuzzy@reduz,w
  7074  05BC  00D4               	movwf	Fuzzy@tip
  7075  05BD  0861               	movf	Fuzzy@reduz+1,w
  7076  05BE  00D5               	movwf	Fuzzy@tip+1
  7077  05BF  0862               	movf	Fuzzy@reduz+2,w
  7078  05C0  2DFA               	goto	L7
  7079  05C1                     i1l2837:	
  7080                           ;main.c: 282: }else
  7081                           
  7082                           
  7083                           ;main.c: 283: if (deltaRpm >= 25 && deltaRpm < 75)
  7084  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  7085  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  7086  05C3  0866               	movf	Fuzzy@deltaRpm,w
  7087  05C4  00B0               	movwf	___ftge@ff1
  7088  05C5  0867               	movf	Fuzzy@deltaRpm+1,w
  7089  05C6  00B1               	movwf	___ftge@ff1+1
  7090  05C7  0868               	movf	Fuzzy@deltaRpm+2,w
  7091  05C8  00B2               	movwf	___ftge@ff1+2
  7092  05C9  3000               	movlw	0
  7093  05CA  00B3               	movwf	___ftge@ff2
  7094  05CB  30C8               	movlw	200
  7095  05CC  00B4               	movwf	___ftge@ff2+1
  7096  05CD  3041               	movlw	65
  7097  05CE  00B5               	movwf	___ftge@ff2+2
  7098  05CF  160A  118A  23AE  120A  118A  	fcall	___ftge
  7099  05D4  1C03               	btfss	3,0
  7100  05D5  2DF3               	goto	i1l2843
  7101  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  7102  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  7103  05D8  0866               	movf	Fuzzy@deltaRpm,w
  7104  05D9  00B0               	movwf	___ftge@ff1
  7105  05DA  0867               	movf	Fuzzy@deltaRpm+1,w
  7106  05DB  00B1               	movwf	___ftge@ff1+1
  7107  05DC  0868               	movf	Fuzzy@deltaRpm+2,w
  7108  05DD  00B2               	movwf	___ftge@ff1+2
  7109  05DE  3000               	movlw	0
  7110  05DF  00B3               	movwf	___ftge@ff2
  7111  05E0  3096               	movlw	150
  7112  05E1  00B4               	movwf	___ftge@ff2+1
  7113  05E2  3042               	movlw	66
  7114  05E3  00B5               	movwf	___ftge@ff2+2
  7115  05E4  160A  118A  23AE  120A  118A  	fcall	___ftge
  7116  05E9  1803               	btfsc	3,0
  7117  05EA  2DF3               	goto	i1l2843
  7118                           
  7119                           ;main.c: 284: {
  7120                           ;main.c: 285: tip = mantem;
  7121  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  7122  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  7123  05ED  085D               	movf	Fuzzy@mantem,w
  7124  05EE  00D4               	movwf	Fuzzy@tip
  7125  05EF  085E               	movf	Fuzzy@mantem+1,w
  7126  05F0  00D5               	movwf	Fuzzy@tip+1
  7127  05F1  085F               	movf	Fuzzy@mantem+2,w
  7128  05F2  2DFA               	goto	L7
  7129  05F3                     i1l2843:	
  7130                           ;main.c: 286: }else
  7131                           
  7132                           
  7133                           ;main.c: 287: {
  7134                           ;main.c: 288: tip = aumenta;
  7135  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  7136  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  7137  05F5  0863               	movf	Fuzzy@aumenta,w
  7138  05F6  00D4               	movwf	Fuzzy@tip
  7139  05F7  0864               	movf	Fuzzy@aumenta+1,w
  7140  05F8  00D5               	movwf	Fuzzy@tip+1
  7141  05F9  0865               	movf	Fuzzy@aumenta+2,w
  7142  05FA                     L7:	
  7143  05FA  00D6               	movwf	Fuzzy@tip+2
  7144                           
  7145                           ;main.c: 289: }
  7146                           ;main.c: 292: total_area = 90;
  7147  05FB  3000               	movlw	0
  7148  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  7149  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  7150  05FE  00B2               	movwf	_total_area^(0+128)
  7151  05FF  30B4               	movlw	180
  7152  0600  00B3               	movwf	(_total_area+1)^(0+128)
  7153  0601  3042               	movlw	66
  7154  0602  00B4               	movwf	(_total_area+2)^(0+128)
  7155                           
  7156                           ;main.c: 293: sum = 0;
  7157  0603  3000               	movlw	0
  7158  0604  00AF               	movwf	_sum^(0+128)
  7159  0605  3000               	movlw	0
  7160  0606  00B0               	movwf	(_sum+1)^(0+128)
  7161  0607  3000               	movlw	0
  7162  0608  00B1               	movwf	(_sum+2)^(0+128)
  7163                           
  7164                           ;main.c: 294: sum = sum + tip;
  7165  0609  1283               	bcf	3,5	;RP0=0, select bank0
  7166  060A  1303               	bcf	3,6	;RP1=0, select bank0
  7167  060B  0854               	movf	Fuzzy@tip,w
  7168  060C  00A3               	movwf	___ftadd@f1
  7169  060D  0855               	movf	Fuzzy@tip+1,w
  7170  060E  00A4               	movwf	___ftadd@f1+1
  7171  060F  0856               	movf	Fuzzy@tip+2,w
  7172  0610  00A5               	movwf	___ftadd@f1+2
  7173  0611  1683               	bsf	3,5	;RP0=1, select bank1
  7174  0612  1303               	bcf	3,6	;RP1=0, select bank1
  7175  0613  082F               	movf	_sum^(0+128),w
  7176  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7177  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7178  0616  00A6               	movwf	___ftadd@f2
  7179  0617  1683               	bsf	3,5	;RP0=1, select bank1
  7180  0618  1303               	bcf	3,6	;RP1=0, select bank1
  7181  0619  0830               	movf	(_sum+1)^(0+128),w
  7182  061A  1283               	bcf	3,5	;RP0=0, select bank0
  7183  061B  1303               	bcf	3,6	;RP1=0, select bank0
  7184  061C  00A7               	movwf	___ftadd@f2+1
  7185  061D  1683               	bsf	3,5	;RP0=1, select bank1
  7186  061E  1303               	bcf	3,6	;RP1=0, select bank1
  7187  061F  0831               	movf	(_sum+2)^(0+128),w
  7188  0620  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0621  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0622  00A8               	movwf	___ftadd@f2+2
  7191  0623  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7192  0628  1283               	bcf	3,5	;RP0=0, select bank0
  7193  0629  1303               	bcf	3,6	;RP1=0, select bank0
  7194  062A  0823               	movf	?___ftadd,w
  7195  062B  1683               	bsf	3,5	;RP0=1, select bank1
  7196  062C  1303               	bcf	3,6	;RP1=0, select bank1
  7197  062D  00AF               	movwf	_sum^(0+128)
  7198  062E  1283               	bcf	3,5	;RP0=0, select bank0
  7199  062F  1303               	bcf	3,6	;RP1=0, select bank0
  7200  0630  0824               	movf	?___ftadd+1,w
  7201  0631  1683               	bsf	3,5	;RP0=1, select bank1
  7202  0632  1303               	bcf	3,6	;RP1=0, select bank1
  7203  0633  00B0               	movwf	(_sum+1)^(0+128)
  7204  0634  1283               	bcf	3,5	;RP0=0, select bank0
  7205  0635  1303               	bcf	3,6	;RP1=0, select bank0
  7206  0636  0825               	movf	?___ftadd+2,w
  7207  0637  1683               	bsf	3,5	;RP0=1, select bank1
  7208  0638  1303               	bcf	3,6	;RP1=0, select bank1
  7209  0639  00B1               	movwf	(_sum+2)^(0+128)
  7210                           
  7211                           ;main.c: 297: ativa_fan = sum/total_area;
  7212  063A  0832               	movf	_total_area^(0+128),w
  7213  063B  1283               	bcf	3,5	;RP0=0, select bank0
  7214  063C  1303               	bcf	3,6	;RP1=0, select bank0
  7215  063D  00B0               	movwf	___ftdiv@f2
  7216  063E  1683               	bsf	3,5	;RP0=1, select bank1
  7217  063F  1303               	bcf	3,6	;RP1=0, select bank1
  7218  0640  0833               	movf	(_total_area+1)^(0+128),w
  7219  0641  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0642  1303               	bcf	3,6	;RP1=0, select bank0
  7221  0643  00B1               	movwf	___ftdiv@f2+1
  7222  0644  1683               	bsf	3,5	;RP0=1, select bank1
  7223  0645  1303               	bcf	3,6	;RP1=0, select bank1
  7224  0646  0834               	movf	(_total_area+2)^(0+128),w
  7225  0647  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0648  1303               	bcf	3,6	;RP1=0, select bank0
  7227  0649  00B2               	movwf	___ftdiv@f2+2
  7228  064A  1683               	bsf	3,5	;RP0=1, select bank1
  7229  064B  1303               	bcf	3,6	;RP1=0, select bank1
  7230  064C  082F               	movf	_sum^(0+128),w
  7231  064D  1283               	bcf	3,5	;RP0=0, select bank0
  7232  064E  1303               	bcf	3,6	;RP1=0, select bank0
  7233  064F  00B3               	movwf	___ftdiv@f1
  7234  0650  1683               	bsf	3,5	;RP0=1, select bank1
  7235  0651  1303               	bcf	3,6	;RP1=0, select bank1
  7236  0652  0830               	movf	(_sum+1)^(0+128),w
  7237  0653  1283               	bcf	3,5	;RP0=0, select bank0
  7238  0654  1303               	bcf	3,6	;RP1=0, select bank0
  7239  0655  00B4               	movwf	___ftdiv@f1+1
  7240  0656  1683               	bsf	3,5	;RP0=1, select bank1
  7241  0657  1303               	bcf	3,6	;RP1=0, select bank1
  7242  0658  0831               	movf	(_sum+2)^(0+128),w
  7243  0659  1283               	bcf	3,5	;RP0=0, select bank0
  7244  065A  1303               	bcf	3,6	;RP1=0, select bank0
  7245  065B  00B5               	movwf	___ftdiv@f1+2
  7246  065C  160A  118A  256E  120A  118A  	fcall	___ftdiv
  7247  0661  1283               	bcf	3,5	;RP0=0, select bank0
  7248  0662  1303               	bcf	3,6	;RP1=0, select bank0
  7249  0663  0830               	movf	?___ftdiv,w
  7250  0664  1683               	bsf	3,5	;RP0=1, select bank1
  7251  0665  1303               	bcf	3,6	;RP1=0, select bank1
  7252  0666  00A0               	movwf	_ativa_fan^(0+128)
  7253  0667  1283               	bcf	3,5	;RP0=0, select bank0
  7254  0668  1303               	bcf	3,6	;RP1=0, select bank0
  7255  0669  0831               	movf	?___ftdiv+1,w
  7256  066A  1683               	bsf	3,5	;RP0=1, select bank1
  7257  066B  1303               	bcf	3,6	;RP1=0, select bank1
  7258  066C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7259  066D  1283               	bcf	3,5	;RP0=0, select bank0
  7260  066E  1303               	bcf	3,6	;RP1=0, select bank0
  7261  066F  0832               	movf	?___ftdiv+2,w
  7262  0670  1683               	bsf	3,5	;RP0=1, select bank1
  7263  0671  1303               	bcf	3,6	;RP1=0, select bank1
  7264  0672  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7265                           
  7266                           ;main.c: 300: ativa_fan = ativa_fan*100;
  7267  0673  3000               	movlw	0
  7268  0674  00F8               	movwf	___ftmul@f1
  7269  0675  30C8               	movlw	200
  7270  0676  00F9               	movwf	___ftmul@f1+1
  7271  0677  3042               	movlw	66
  7272  0678  00FA               	movwf	___ftmul@f1+2
  7273  0679  0820               	movf	_ativa_fan^(0+128),w
  7274  067A  00FB               	movwf	___ftmul@f2
  7275  067B  0821               	movf	(_ativa_fan+1)^(0+128),w
  7276  067C  00FC               	movwf	___ftmul@f2+1
  7277  067D  0822               	movf	(_ativa_fan+2)^(0+128),w
  7278  067E  00FD               	movwf	___ftmul@f2+2
  7279  067F  160A  118A  2626  120A  118A  	fcall	___ftmul
  7280  0684  0878               	movf	?___ftmul,w
  7281  0685  1683               	bsf	3,5	;RP0=1, select bank1
  7282  0686  1303               	bcf	3,6	;RP1=0, select bank1
  7283  0687  00A0               	movwf	_ativa_fan^(0+128)
  7284  0688  0879               	movf	?___ftmul+1,w
  7285  0689  00A1               	movwf	(_ativa_fan+1)^(0+128)
  7286  068A  087A               	movf	?___ftmul+2,w
  7287  068B  00A2               	movwf	(_ativa_fan+2)^(0+128)
  7288                           
  7289                           ;main.c: 304: if (freio = 1)
  7290  068C  3001               	movlw	1
  7291  068D  1283               	bcf	3,5	;RP0=0, select bank0
  7292  068E  1303               	bcf	3,6	;RP1=0, select bank0
  7293  068F  00D2               	movwf	Fuzzy@freio
  7294  0690  3000               	movlw	0
  7295  0691  00D3               	movwf	Fuzzy@freio+1
  7296                           
  7297                           ;main.c: 305: {
  7298                           ;main.c: 306: if ((tf + deltaV) >0 && (tf + deltaV) < 1020)
  7299  0692  3000               	movlw	0
  7300  0693  00B0               	movwf	___ftge@ff1
  7301  0694  3000               	movlw	0
  7302  0695  00B1               	movwf	___ftge@ff1+1
  7303  0696  3000               	movlw	0
  7304  0697  00B2               	movwf	___ftge@ff1+2
  7305  0698  1683               	bsf	3,5	;RP0=1, select bank1
  7306  0699  1303               	bcf	3,6	;RP1=0, select bank1
  7307  069A  0868               	movf	_tf^(0+128),w
  7308  069B  1283               	bcf	3,5	;RP0=0, select bank0
  7309  069C  1303               	bcf	3,6	;RP1=0, select bank0
  7310  069D  00A3               	movwf	___ftadd@f1
  7311  069E  1683               	bsf	3,5	;RP0=1, select bank1
  7312  069F  1303               	bcf	3,6	;RP1=0, select bank1
  7313  06A0  0869               	movf	(_tf+1)^(0+128),w
  7314  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  7315  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  7316  06A3  00A4               	movwf	___ftadd@f1+1
  7317  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  7318  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  7319  06A6  086A               	movf	(_tf+2)^(0+128),w
  7320  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  7321  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  7322  06A9  00A5               	movwf	___ftadd@f1+2
  7323  06AA  086E               	movf	_deltaV+1,w
  7324  06AB  01F9               	clrf	___lwtoft@c+1
  7325  06AC  07F9               	addwf	___lwtoft@c+1,f
  7326  06AD  086D               	movf	_deltaV,w
  7327  06AE  01F8               	clrf	___lwtoft@c
  7328  06AF  07F8               	addwf	___lwtoft@c,f
  7329  06B0  160A  118A  20DF  120A  118A  	fcall	___lwtoft
  7330  06B5  0878               	movf	?___lwtoft,w
  7331  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  7332  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  7333  06B8  00A6               	movwf	___ftadd@f2
  7334  06B9  0879               	movf	?___lwtoft+1,w
  7335  06BA  00A7               	movwf	___ftadd@f2+1
  7336  06BB  087A               	movf	?___lwtoft+2,w
  7337  06BC  00A8               	movwf	___ftadd@f2+2
  7338  06BD  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7339  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  7340  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  7341  06C4  0823               	movf	?___ftadd,w
  7342  06C5  00B3               	movwf	___ftge@ff2
  7343  06C6  0824               	movf	?___ftadd+1,w
  7344  06C7  00B4               	movwf	___ftge@ff2+1
  7345  06C8  0825               	movf	?___ftadd+2,w
  7346  06C9  00B5               	movwf	___ftge@ff2+2
  7347  06CA  160A  118A  23AE  120A  118A  	fcall	___ftge
  7348  06CF  1803               	btfsc	3,0
  7349  06D0  0008               	return
  7350  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  7351  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  7352  06D3  0868               	movf	_tf^(0+128),w
  7353  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  7354  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  7355  06D6  00A3               	movwf	___ftadd@f1
  7356  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  7357  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  7358  06D9  0869               	movf	(_tf+1)^(0+128),w
  7359  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  7360  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  7361  06DC  00A4               	movwf	___ftadd@f1+1
  7362  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  7363  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  7364  06DF  086A               	movf	(_tf+2)^(0+128),w
  7365  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  7366  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  7367  06E2  00A5               	movwf	___ftadd@f1+2
  7368  06E3  086E               	movf	_deltaV+1,w
  7369  06E4  01F9               	clrf	___lwtoft@c+1
  7370  06E5  07F9               	addwf	___lwtoft@c+1,f
  7371  06E6  086D               	movf	_deltaV,w
  7372  06E7  01F8               	clrf	___lwtoft@c
  7373  06E8  07F8               	addwf	___lwtoft@c,f
  7374  06E9  160A  118A  20DF  120A  118A  	fcall	___lwtoft
  7375  06EE  0878               	movf	?___lwtoft,w
  7376  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  7377  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  7378  06F1  00A6               	movwf	___ftadd@f2
  7379  06F2  0879               	movf	?___lwtoft+1,w
  7380  06F3  00A7               	movwf	___ftadd@f2+1
  7381  06F4  087A               	movf	?___lwtoft+2,w
  7382  06F5  00A8               	movwf	___ftadd@f2+2
  7383  06F6  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7384  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  7385  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  7386  06FD  0823               	movf	?___ftadd,w
  7387  06FE  00B0               	movwf	___ftge@ff1
  7388  06FF  0824               	movf	?___ftadd+1,w
  7389  0700  00B1               	movwf	___ftge@ff1+1
  7390  0701  0825               	movf	?___ftadd+2,w
  7391  0702  00B2               	movwf	___ftge@ff1+2
  7392  0703  3000               	movlw	0
  7393  0704  00B3               	movwf	___ftge@ff2
  7394  0705  307F               	movlw	127
  7395  0706  00B4               	movwf	___ftge@ff2+1
  7396  0707  3044               	movlw	68
  7397  0708  00B5               	movwf	___ftge@ff2+2
  7398  0709  160A  118A  23AE  120A  118A  	fcall	___ftge
  7399  070E  1803               	btfsc	3,0
  7400  070F  0008               	return
  7401                           
  7402                           ;main.c: 307: {
  7403                           ;main.c: 308: PWM_DutyCycle2(tf + deltaV);
  7404  0710  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0711  1303               	bcf	3,6	;RP1=0, select bank0
  7406  0712  086E               	movf	_deltaV+1,w
  7407  0713  01F9               	clrf	___lwtoft@c+1
  7408  0714  07F9               	addwf	___lwtoft@c+1,f
  7409  0715  086D               	movf	_deltaV,w
  7410  0716  01F8               	clrf	___lwtoft@c
  7411  0717  07F8               	addwf	___lwtoft@c,f
  7412  0718  160A  118A  20DF  120A  118A  	fcall	___lwtoft
  7413  071D  0878               	movf	?___lwtoft,w
  7414  071E  1283               	bcf	3,5	;RP0=0, select bank0
  7415  071F  1303               	bcf	3,6	;RP1=0, select bank0
  7416  0720  00A6               	movwf	___ftadd@f2
  7417  0721  0879               	movf	?___lwtoft+1,w
  7418  0722  00A7               	movwf	___ftadd@f2+1
  7419  0723  087A               	movf	?___lwtoft+2,w
  7420  0724  00A8               	movwf	___ftadd@f2+2
  7421  0725  1683               	bsf	3,5	;RP0=1, select bank1
  7422  0726  1303               	bcf	3,6	;RP1=0, select bank1
  7423  0727  0868               	movf	_tf^(0+128),w
  7424  0728  1283               	bcf	3,5	;RP0=0, select bank0
  7425  0729  1303               	bcf	3,6	;RP1=0, select bank0
  7426  072A  00A3               	movwf	___ftadd@f1
  7427  072B  1683               	bsf	3,5	;RP0=1, select bank1
  7428  072C  1303               	bcf	3,6	;RP1=0, select bank1
  7429  072D  0869               	movf	(_tf+1)^(0+128),w
  7430  072E  1283               	bcf	3,5	;RP0=0, select bank0
  7431  072F  1303               	bcf	3,6	;RP1=0, select bank0
  7432  0730  00A4               	movwf	___ftadd@f1+1
  7433  0731  1683               	bsf	3,5	;RP0=1, select bank1
  7434  0732  1303               	bcf	3,6	;RP1=0, select bank1
  7435  0733  086A               	movf	(_tf+2)^(0+128),w
  7436  0734  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0735  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0736  00A5               	movwf	___ftadd@f1+2
  7439  0737  160A  118A  26F7  120A  118A  	fcall	___ftadd
  7440  073C  1283               	bcf	3,5	;RP0=0, select bank0
  7441  073D  1303               	bcf	3,6	;RP1=0, select bank0
  7442  073E  0823               	movf	?___ftadd,w
  7443  073F  00B0               	movwf	___fttol@f1
  7444  0740  0824               	movf	?___ftadd+1,w
  7445  0741  00B1               	movwf	___fttol@f1+1
  7446  0742  0825               	movf	?___ftadd+2,w
  7447  0743  00B2               	movwf	___fttol@f1+2
  7448  0744  160A  118A  24E0  120A  118A  	fcall	___fttol
  7449  0749  1283               	bcf	3,5	;RP0=0, select bank0
  7450  074A  1303               	bcf	3,6	;RP1=0, select bank0
  7451  074B  0831               	movf	?___fttol+1,w
  7452  074C  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  7453  074D  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  7454  074E  0830               	movf	?___fttol,w
  7455  074F  01BE               	clrf	i1PWM_DutyCycle2@valor
  7456  0750  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  7457  0751  160A  118A  2121   	fcall	i1_PWM_DutyCycle2
  7458                           
  7459                           ;main.c: 309: }
  7460                           ;main.c: 310: }else
  7461  0754  0008               	return
  7462  0755                     __end_of_Fuzzy:	
  7463                           ;main.c: 313: {
  7464                           ;main.c: 314: PWM_DutyCycle2(tf - deltaV);
  7465                           
  7466                           ;main.c: 311: {
  7467                           ;main.c: 312: if ((tf - deltaV) >0 && (tf - deltaV) < 1020)
  7468                           
  7469                           
  7470                           	psect	text30
  7471  1121                     __ptext30:	
  7472 ;; *************** function i1_PWM_DutyCycle2 *****************
  7473 ;; Defined at:
  7474 ;;		line 96 in file "R:\Note\Ultimo C no MPLAB\pwm.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  valor           2   30[BANK0 ] int 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;		None               void
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7488 ;;      Params:         0       2       0       0       0
  7489 ;;      Locals:         0       0       0       0       0
  7490 ;;      Temps:          2       0       0       0       0
  7491 ;;      Totals:         2       2       0       0       0
  7492 ;;Total ram usage:        4 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_Fuzzy
  7498 ;;		_ISR
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function i1_PWM_DutyCycle2
  7504  1121                     i1_PWM_DutyCycle2:	
  7505                           
  7506                           ;pwm.c: 98: CCPR2L = valor >> 2;
  7507                           
  7508                           ;incstack = 0
  7509                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  7510  1121  1283               	bcf	3,5	;RP0=0, select bank0
  7511  1122  1303               	bcf	3,6	;RP1=0, select bank0
  7512  1123  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  7513  1124  00FD               	movwf	??i1_PWM_DutyCycle2+1
  7514  1125  083E               	movf	i1PWM_DutyCycle2@valor,w
  7515  1126  00FC               	movwf	??i1_PWM_DutyCycle2
  7516  1127  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7517  1128  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7518  1129  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7519  112A  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  7520  112B  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  7521  112C  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  7522  112D  087C               	movf	??i1_PWM_DutyCycle2,w
  7523  112E  009B               	movwf	27	;volatile
  7524                           
  7525                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  7526  112F  083E               	movf	i1PWM_DutyCycle2@valor,w
  7527  1130  00FC               	movwf	??i1_PWM_DutyCycle2
  7528  1131  3003               	movlw	3
  7529  1132                     u331_25:	
  7530  1132  1003               	clrc
  7531  1133  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  7532  1134  3EFF               	addlw	-1
  7533  1135  1D03               	skipz
  7534  1136  2932               	goto	u331_25
  7535  1137  1003               	clrc
  7536  1138  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  7537  1139  380C               	iorlw	12
  7538  113A  009D               	movwf	29	;volatile
  7539  113B  0008               	return
  7540  113C                     __end_ofi1_PWM_DutyCycle2:	
  7541                           
  7542                           	psect	text31
  7543  0903                     __ptext31:	
  7544 ;; *************** function _trimf *****************
  7545 ;; Defined at:
  7546 ;;		line 68 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  x               3   32[BANK0 ] float 
  7549 ;;  a               3   35[BANK0 ] float 
  7550 ;;  b               3   38[BANK0 ] float 
  7551 ;;  c               3   41[BANK0 ] float 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  ua              3   44[BANK0 ] float 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  3   32[BANK0 ] float 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0, pclath, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7563 ;;      Params:         0      12       0       0       0
  7564 ;;      Locals:         0       3       0       0       0
  7565 ;;      Temps:          0       0       0       0       0
  7566 ;;      Totals:         0      15       0       0       0
  7567 ;;Total ram usage:       15 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:    2
  7570 ;; This function calls:
  7571 ;;		___ftadd
  7572 ;;		___ftdiv
  7573 ;;		___ftge
  7574 ;;		___ftneg
  7575 ;; This function is called by:
  7576 ;;		_Fuzzy
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function _trimf
  7582  0903                     _trimf:	
  7583                           
  7584                           ;main.c: 70: float ua = 0;
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  7588  0903  3000               	movlw	0
  7589  0904  1283               	bcf	3,5	;RP0=0, select bank0
  7590  0905  1303               	bcf	3,6	;RP1=0, select bank0
  7591  0906  00CC               	movwf	trimf@ua
  7592  0907  3000               	movlw	0
  7593  0908  00CD               	movwf	trimf@ua+1
  7594  0909  3000               	movlw	0
  7595  090A  00CE               	movwf	trimf@ua+2
  7596                           
  7597                           ;main.c: 72: if (x <= a)
  7598  090B  0843               	movf	trimf@a,w
  7599  090C  00B0               	movwf	___ftge@ff1
  7600  090D  0844               	movf	trimf@a+1,w
  7601  090E  00B1               	movwf	___ftge@ff1+1
  7602  090F  0845               	movf	trimf@a+2,w
  7603  0910  00B2               	movwf	___ftge@ff1+2
  7604  0911  0840               	movf	trimf@x,w
  7605  0912  00B3               	movwf	___ftge@ff2
  7606  0913  0841               	movf	trimf@x+1,w
  7607  0914  00B4               	movwf	___ftge@ff2+1
  7608  0915  0842               	movf	trimf@x+2,w
  7609  0916  00B5               	movwf	___ftge@ff2+2
  7610  0917  160A  118A  23AE  120A  158A  	fcall	___ftge
  7611  091C  1803               	btfsc	3,0
  7612  091D  2A16               	goto	L12
  7613                           
  7614                           ;main.c: 74: else if ((a < x) && (x <= b))
  7615                           
  7616                           ;main.c: 73: ua = 0;
  7617  091E  1283               	bcf	3,5	;RP0=0, select bank0
  7618  091F  1303               	bcf	3,6	;RP1=0, select bank0
  7619  0920  0843               	movf	trimf@a,w
  7620  0921  00B0               	movwf	___ftge@ff1
  7621  0922  0844               	movf	trimf@a+1,w
  7622  0923  00B1               	movwf	___ftge@ff1+1
  7623  0924  0845               	movf	trimf@a+2,w
  7624  0925  00B2               	movwf	___ftge@ff1+2
  7625  0926  0840               	movf	trimf@x,w
  7626  0927  00B3               	movwf	___ftge@ff2
  7627  0928  0841               	movf	trimf@x+1,w
  7628  0929  00B4               	movwf	___ftge@ff2+1
  7629  092A  0842               	movf	trimf@x+2,w
  7630  092B  00B5               	movwf	___ftge@ff2+2
  7631  092C  160A  118A  23AE  120A  158A  	fcall	___ftge
  7632  0931  1803               	btfsc	3,0
  7633  0932  297C               	goto	i1l2431
  7634  0933  1283               	bcf	3,5	;RP0=0, select bank0
  7635  0934  1303               	bcf	3,6	;RP1=0, select bank0
  7636  0935  0846               	movf	trimf@b,w
  7637  0936  00B0               	movwf	___ftge@ff1
  7638  0937  0847               	movf	trimf@b+1,w
  7639  0938  00B1               	movwf	___ftge@ff1+1
  7640  0939  0848               	movf	trimf@b+2,w
  7641  093A  00B2               	movwf	___ftge@ff1+2
  7642  093B  0840               	movf	trimf@x,w
  7643  093C  00B3               	movwf	___ftge@ff2
  7644  093D  0841               	movf	trimf@x+1,w
  7645  093E  00B4               	movwf	___ftge@ff2+1
  7646  093F  0842               	movf	trimf@x+2,w
  7647  0940  00B5               	movwf	___ftge@ff2+2
  7648  0941  160A  118A  23AE  120A  158A  	fcall	___ftge
  7649  0946  1C03               	btfss	3,0
  7650  0947  297C               	goto	i1l2431
  7651                           
  7652                           ;main.c: 75: ua = ((x - a) / (b - a));
  7653  0948  1283               	bcf	3,5	;RP0=0, select bank0
  7654  0949  1303               	bcf	3,6	;RP1=0, select bank0
  7655  094A  0846               	movf	trimf@b,w
  7656  094B  00A3               	movwf	___ftadd@f1
  7657  094C  0847               	movf	trimf@b+1,w
  7658  094D  00A4               	movwf	___ftadd@f1+1
  7659  094E  0848               	movf	trimf@b+2,w
  7660  094F  00A5               	movwf	___ftadd@f1+2
  7661  0950  0843               	movf	trimf@a,w
  7662  0951  00A0               	movwf	___ftneg@f1
  7663  0952  0844               	movf	trimf@a+1,w
  7664  0953  00A1               	movwf	___ftneg@f1+1
  7665  0954  0845               	movf	trimf@a+2,w
  7666  0955  00A2               	movwf	___ftneg@f1+2
  7667  0956  160A  118A  2080  120A  158A  	fcall	___ftneg
  7668  095B  1283               	bcf	3,5	;RP0=0, select bank0
  7669  095C  1303               	bcf	3,6	;RP1=0, select bank0
  7670  095D  0820               	movf	?___ftneg,w
  7671  095E  00A6               	movwf	___ftadd@f2
  7672  095F  0821               	movf	?___ftneg+1,w
  7673  0960  00A7               	movwf	___ftadd@f2+1
  7674  0961  0822               	movf	?___ftneg+2,w
  7675  0962  00A8               	movwf	___ftadd@f2+2
  7676  0963  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7677  0968  1283               	bcf	3,5	;RP0=0, select bank0
  7678  0969  1303               	bcf	3,6	;RP1=0, select bank0
  7679  096A  0823               	movf	?___ftadd,w
  7680  096B  00B0               	movwf	___ftdiv@f2
  7681  096C  0824               	movf	?___ftadd+1,w
  7682  096D  00B1               	movwf	___ftdiv@f2+1
  7683  096E  0825               	movf	?___ftadd+2,w
  7684  096F  00B2               	movwf	___ftdiv@f2+2
  7685  0970  0840               	movf	trimf@x,w
  7686  0971  00A3               	movwf	___ftadd@f1
  7687  0972  0841               	movf	trimf@x+1,w
  7688  0973  00A4               	movwf	___ftadd@f1+1
  7689  0974  0842               	movf	trimf@x+2,w
  7690  0975  00A5               	movwf	___ftadd@f1+2
  7691  0976  0843               	movf	trimf@a,w
  7692  0977  00A0               	movwf	___ftneg@f1
  7693  0978  0844               	movf	trimf@a+1,w
  7694  0979  00A1               	movwf	___ftneg@f1+1
  7695  097A  0845               	movf	trimf@a+2,w
  7696  097B  29D9               	goto	L13
  7697  097C                     i1l2431:	
  7698                           
  7699                           ;main.c: 76: else if ((b < x) && (x <= c))
  7700  097C  1283               	bcf	3,5	;RP0=0, select bank0
  7701  097D  1303               	bcf	3,6	;RP1=0, select bank0
  7702  097E  0846               	movf	trimf@b,w
  7703  097F  00B0               	movwf	___ftge@ff1
  7704  0980  0847               	movf	trimf@b+1,w
  7705  0981  00B1               	movwf	___ftge@ff1+1
  7706  0982  0848               	movf	trimf@b+2,w
  7707  0983  00B2               	movwf	___ftge@ff1+2
  7708  0984  0840               	movf	trimf@x,w
  7709  0985  00B3               	movwf	___ftge@ff2
  7710  0986  0841               	movf	trimf@x+1,w
  7711  0987  00B4               	movwf	___ftge@ff2+1
  7712  0988  0842               	movf	trimf@x+2,w
  7713  0989  00B5               	movwf	___ftge@ff2+2
  7714  098A  160A  118A  23AE  120A  158A  	fcall	___ftge
  7715  098F  1803               	btfsc	3,0
  7716  0990  2A01               	goto	i1l2437
  7717  0991  1283               	bcf	3,5	;RP0=0, select bank0
  7718  0992  1303               	bcf	3,6	;RP1=0, select bank0
  7719  0993  0849               	movf	trimf@c,w
  7720  0994  00B0               	movwf	___ftge@ff1
  7721  0995  084A               	movf	trimf@c+1,w
  7722  0996  00B1               	movwf	___ftge@ff1+1
  7723  0997  084B               	movf	trimf@c+2,w
  7724  0998  00B2               	movwf	___ftge@ff1+2
  7725  0999  0840               	movf	trimf@x,w
  7726  099A  00B3               	movwf	___ftge@ff2
  7727  099B  0841               	movf	trimf@x+1,w
  7728  099C  00B4               	movwf	___ftge@ff2+1
  7729  099D  0842               	movf	trimf@x+2,w
  7730  099E  00B5               	movwf	___ftge@ff2+2
  7731  099F  160A  118A  23AE  120A  158A  	fcall	___ftge
  7732  09A4  1C03               	btfss	3,0
  7733  09A5  2A01               	goto	i1l2437
  7734                           
  7735                           ;main.c: 77: ua = ((x - c) / (b - c));
  7736  09A6  1283               	bcf	3,5	;RP0=0, select bank0
  7737  09A7  1303               	bcf	3,6	;RP1=0, select bank0
  7738  09A8  0846               	movf	trimf@b,w
  7739  09A9  00A3               	movwf	___ftadd@f1
  7740  09AA  0847               	movf	trimf@b+1,w
  7741  09AB  00A4               	movwf	___ftadd@f1+1
  7742  09AC  0848               	movf	trimf@b+2,w
  7743  09AD  00A5               	movwf	___ftadd@f1+2
  7744  09AE  0849               	movf	trimf@c,w
  7745  09AF  00A0               	movwf	___ftneg@f1
  7746  09B0  084A               	movf	trimf@c+1,w
  7747  09B1  00A1               	movwf	___ftneg@f1+1
  7748  09B2  084B               	movf	trimf@c+2,w
  7749  09B3  00A2               	movwf	___ftneg@f1+2
  7750  09B4  160A  118A  2080  120A  158A  	fcall	___ftneg
  7751  09B9  1283               	bcf	3,5	;RP0=0, select bank0
  7752  09BA  1303               	bcf	3,6	;RP1=0, select bank0
  7753  09BB  0820               	movf	?___ftneg,w
  7754  09BC  00A6               	movwf	___ftadd@f2
  7755  09BD  0821               	movf	?___ftneg+1,w
  7756  09BE  00A7               	movwf	___ftadd@f2+1
  7757  09BF  0822               	movf	?___ftneg+2,w
  7758  09C0  00A8               	movwf	___ftadd@f2+2
  7759  09C1  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7760  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  7761  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  7762  09C8  0823               	movf	?___ftadd,w
  7763  09C9  00B0               	movwf	___ftdiv@f2
  7764  09CA  0824               	movf	?___ftadd+1,w
  7765  09CB  00B1               	movwf	___ftdiv@f2+1
  7766  09CC  0825               	movf	?___ftadd+2,w
  7767  09CD  00B2               	movwf	___ftdiv@f2+2
  7768  09CE  0840               	movf	trimf@x,w
  7769  09CF  00A3               	movwf	___ftadd@f1
  7770  09D0  0841               	movf	trimf@x+1,w
  7771  09D1  00A4               	movwf	___ftadd@f1+1
  7772  09D2  0842               	movf	trimf@x+2,w
  7773  09D3  00A5               	movwf	___ftadd@f1+2
  7774  09D4  0849               	movf	trimf@c,w
  7775  09D5  00A0               	movwf	___ftneg@f1
  7776  09D6  084A               	movf	trimf@c+1,w
  7777  09D7  00A1               	movwf	___ftneg@f1+1
  7778  09D8  084B               	movf	trimf@c+2,w
  7779  09D9                     L13:	
  7780  09D9  00A2               	movwf	___ftneg@f1+2
  7781  09DA  160A  118A  2080  120A  158A  	fcall	___ftneg
  7782  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  7783  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  7784  09E1  0820               	movf	?___ftneg,w
  7785  09E2  00A6               	movwf	___ftadd@f2
  7786  09E3  0821               	movf	?___ftneg+1,w
  7787  09E4  00A7               	movwf	___ftadd@f2+1
  7788  09E5  0822               	movf	?___ftneg+2,w
  7789  09E6  00A8               	movwf	___ftadd@f2+2
  7790  09E7  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7791  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  7792  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  7793  09EE  0823               	movf	?___ftadd,w
  7794  09EF  00B3               	movwf	___ftdiv@f1
  7795  09F0  0824               	movf	?___ftadd+1,w
  7796  09F1  00B4               	movwf	___ftdiv@f1+1
  7797  09F2  0825               	movf	?___ftadd+2,w
  7798  09F3  00B5               	movwf	___ftdiv@f1+2
  7799  09F4  160A  118A  256E  120A  158A  	fcall	___ftdiv
  7800  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  7801  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  7802  09FB  0830               	movf	?___ftdiv,w
  7803  09FC  00CC               	movwf	trimf@ua
  7804  09FD  0831               	movf	?___ftdiv+1,w
  7805  09FE  00CD               	movwf	trimf@ua+1
  7806  09FF  0832               	movf	?___ftdiv+2,w
  7807  0A00  2A1D               	goto	L10
  7808  0A01                     i1l2437:	
  7809                           
  7810                           ;main.c: 78: else if (x > c)
  7811  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  7812  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  7813  0A03  0849               	movf	trimf@c,w
  7814  0A04  00B0               	movwf	___ftge@ff1
  7815  0A05  084A               	movf	trimf@c+1,w
  7816  0A06  00B1               	movwf	___ftge@ff1+1
  7817  0A07  084B               	movf	trimf@c+2,w
  7818  0A08  00B2               	movwf	___ftge@ff1+2
  7819  0A09  0840               	movf	trimf@x,w
  7820  0A0A  00B3               	movwf	___ftge@ff2
  7821  0A0B  0841               	movf	trimf@x+1,w
  7822  0A0C  00B4               	movwf	___ftge@ff2+1
  7823  0A0D  0842               	movf	trimf@x+2,w
  7824  0A0E  00B5               	movwf	___ftge@ff2+2
  7825  0A0F  160A  118A  23AE  120A  158A  	fcall	___ftge
  7826  0A14  1803               	btfsc	3,0
  7827  0A15  2A1E               	goto	i1l118
  7828  0A16                     L12:	
  7829                           
  7830                           ;main.c: 79: ua = 0;
  7831  0A16  3000               	movlw	0
  7832  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  7833  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  7834  0A19  00CC               	movwf	trimf@ua
  7835  0A1A  3000               	movlw	0
  7836  0A1B  00CD               	movwf	trimf@ua+1
  7837  0A1C  3000               	movlw	0
  7838  0A1D                     L10:	
  7839  0A1D  00CE               	movwf	trimf@ua+2
  7840  0A1E                     i1l118:	
  7841                           
  7842                           ;main.c: 81: return(ua);
  7843  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  7844  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  7845  0A20  084C               	movf	trimf@ua,w
  7846  0A21  00C0               	movwf	?_trimf
  7847  0A22  084D               	movf	trimf@ua+1,w
  7848  0A23  00C1               	movwf	?_trimf+1
  7849  0A24  084E               	movf	trimf@ua+2,w
  7850  0A25  00C2               	movwf	?_trimf+2
  7851  0A26  0008               	return
  7852  0A27                     __end_of_trimf:	
  7853                           
  7854                           	psect	text32
  7855  0B78                     __ptext32:	
  7856 ;; *************** function _trapmf *****************
  7857 ;; Defined at:
  7858 ;;		line 87 in file "R:\Note\Ultimo C no MPLAB\main.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  x               3   32[BANK0 ] float 
  7861 ;;  a               3   35[BANK0 ] float 
  7862 ;;  b               3   38[BANK0 ] float 
  7863 ;;  c               3   41[BANK0 ] float 
  7864 ;;  d               3   44[BANK0 ] float 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  ua              3   47[BANK0 ] float 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  3   32[BANK0 ] float 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0, pclath, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7876 ;;      Params:         0      15       0       0       0
  7877 ;;      Locals:         0       3       0       0       0
  7878 ;;      Temps:          0       0       0       0       0
  7879 ;;      Totals:         0      18       0       0       0
  7880 ;;Total ram usage:       18 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    2
  7883 ;; This function calls:
  7884 ;;		___ftadd
  7885 ;;		___ftdiv
  7886 ;;		___ftge
  7887 ;;		___ftneg
  7888 ;; This function is called by:
  7889 ;;		_Fuzzy
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _trapmf
  7895  0B78                     _trapmf:	
  7896                           
  7897                           ;main.c: 89: float ua = 0;
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  7901  0B78  3000               	movlw	0
  7902  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  7903  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  7904  0B7B  00CF               	movwf	trapmf@ua
  7905  0B7C  3000               	movlw	0
  7906  0B7D  00D0               	movwf	trapmf@ua+1
  7907  0B7E  3000               	movlw	0
  7908  0B7F  00D1               	movwf	trapmf@ua+2
  7909                           
  7910                           ;main.c: 91: if (x <= a)
  7911  0B80  0843               	movf	trapmf@a,w
  7912  0B81  00B0               	movwf	___ftge@ff1
  7913  0B82  0844               	movf	trapmf@a+1,w
  7914  0B83  00B1               	movwf	___ftge@ff1+1
  7915  0B84  0845               	movf	trapmf@a+2,w
  7916  0B85  00B2               	movwf	___ftge@ff1+2
  7917  0B86  0840               	movf	trapmf@x,w
  7918  0B87  00B3               	movwf	___ftge@ff2
  7919  0B88  0841               	movf	trapmf@x+1,w
  7920  0B89  00B4               	movwf	___ftge@ff2+1
  7921  0B8A  0842               	movf	trapmf@x+2,w
  7922  0B8B  00B5               	movwf	___ftge@ff2+2
  7923  0B8C  160A  118A  23AE  120A  158A  	fcall	___ftge
  7924  0B91  1803               	btfsc	3,0
  7925  0B92  2CBD               	goto	L18
  7926                           
  7927                           ;main.c: 93: else if ((a < x) && (x <= b))
  7928                           
  7929                           ;main.c: 92: ua = 0;
  7930  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  7931  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  7932  0B95  0843               	movf	trapmf@a,w
  7933  0B96  00B0               	movwf	___ftge@ff1
  7934  0B97  0844               	movf	trapmf@a+1,w
  7935  0B98  00B1               	movwf	___ftge@ff1+1
  7936  0B99  0845               	movf	trapmf@a+2,w
  7937  0B9A  00B2               	movwf	___ftge@ff1+2
  7938  0B9B  0840               	movf	trapmf@x,w
  7939  0B9C  00B3               	movwf	___ftge@ff2
  7940  0B9D  0841               	movf	trapmf@x+1,w
  7941  0B9E  00B4               	movwf	___ftge@ff2+1
  7942  0B9F  0842               	movf	trapmf@x+2,w
  7943  0BA0  00B5               	movwf	___ftge@ff2+2
  7944  0BA1  160A  118A  23AE  120A  158A  	fcall	___ftge
  7945  0BA6  1803               	btfsc	3,0
  7946  0BA7  2BF1               	goto	i1l2455
  7947  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  7949  0BAA  0846               	movf	trapmf@b,w
  7950  0BAB  00B0               	movwf	___ftge@ff1
  7951  0BAC  0847               	movf	trapmf@b+1,w
  7952  0BAD  00B1               	movwf	___ftge@ff1+1
  7953  0BAE  0848               	movf	trapmf@b+2,w
  7954  0BAF  00B2               	movwf	___ftge@ff1+2
  7955  0BB0  0840               	movf	trapmf@x,w
  7956  0BB1  00B3               	movwf	___ftge@ff2
  7957  0BB2  0841               	movf	trapmf@x+1,w
  7958  0BB3  00B4               	movwf	___ftge@ff2+1
  7959  0BB4  0842               	movf	trapmf@x+2,w
  7960  0BB5  00B5               	movwf	___ftge@ff2+2
  7961  0BB6  160A  118A  23AE  120A  158A  	fcall	___ftge
  7962  0BBB  1C03               	btfss	3,0
  7963  0BBC  2BF1               	goto	i1l2455
  7964                           
  7965                           ;main.c: 94: ua = ((x - a) / (b - a));
  7966  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  7967  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  7968  0BBF  0846               	movf	trapmf@b,w
  7969  0BC0  00A3               	movwf	___ftadd@f1
  7970  0BC1  0847               	movf	trapmf@b+1,w
  7971  0BC2  00A4               	movwf	___ftadd@f1+1
  7972  0BC3  0848               	movf	trapmf@b+2,w
  7973  0BC4  00A5               	movwf	___ftadd@f1+2
  7974  0BC5  0843               	movf	trapmf@a,w
  7975  0BC6  00A0               	movwf	___ftneg@f1
  7976  0BC7  0844               	movf	trapmf@a+1,w
  7977  0BC8  00A1               	movwf	___ftneg@f1+1
  7978  0BC9  0845               	movf	trapmf@a+2,w
  7979  0BCA  00A2               	movwf	___ftneg@f1+2
  7980  0BCB  160A  118A  2080  120A  158A  	fcall	___ftneg
  7981  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  7982  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  7983  0BD2  0820               	movf	?___ftneg,w
  7984  0BD3  00A6               	movwf	___ftadd@f2
  7985  0BD4  0821               	movf	?___ftneg+1,w
  7986  0BD5  00A7               	movwf	___ftadd@f2+1
  7987  0BD6  0822               	movf	?___ftneg+2,w
  7988  0BD7  00A8               	movwf	___ftadd@f2+2
  7989  0BD8  160A  118A  26F7  120A  158A  	fcall	___ftadd
  7990  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  7991  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  7992  0BDF  0823               	movf	?___ftadd,w
  7993  0BE0  00B0               	movwf	___ftdiv@f2
  7994  0BE1  0824               	movf	?___ftadd+1,w
  7995  0BE2  00B1               	movwf	___ftdiv@f2+1
  7996  0BE3  0825               	movf	?___ftadd+2,w
  7997  0BE4  00B2               	movwf	___ftdiv@f2+2
  7998  0BE5  0840               	movf	trapmf@x,w
  7999  0BE6  00A3               	movwf	___ftadd@f1
  8000  0BE7  0841               	movf	trapmf@x+1,w
  8001  0BE8  00A4               	movwf	___ftadd@f1+1
  8002  0BE9  0842               	movf	trapmf@x+2,w
  8003  0BEA  00A5               	movwf	___ftadd@f1+2
  8004  0BEB  0843               	movf	trapmf@a,w
  8005  0BEC  00A0               	movwf	___ftneg@f1
  8006  0BED  0844               	movf	trapmf@a+1,w
  8007  0BEE  00A1               	movwf	___ftneg@f1+1
  8008  0BEF  0845               	movf	trapmf@a+2,w
  8009  0BF0  2C80               	goto	L20
  8010  0BF1                     i1l2455:	
  8011                           
  8012                           ;main.c: 95: else if ((b <= x) && (x <= c))
  8013  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  8014  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  8015  0BF3  0840               	movf	trapmf@x,w
  8016  0BF4  00B0               	movwf	___ftge@ff1
  8017  0BF5  0841               	movf	trapmf@x+1,w
  8018  0BF6  00B1               	movwf	___ftge@ff1+1
  8019  0BF7  0842               	movf	trapmf@x+2,w
  8020  0BF8  00B2               	movwf	___ftge@ff1+2
  8021  0BF9  0846               	movf	trapmf@b,w
  8022  0BFA  00B3               	movwf	___ftge@ff2
  8023  0BFB  0847               	movf	trapmf@b+1,w
  8024  0BFC  00B4               	movwf	___ftge@ff2+1
  8025  0BFD  0848               	movf	trapmf@b+2,w
  8026  0BFE  00B5               	movwf	___ftge@ff2+2
  8027  0BFF  160A  118A  23AE  120A  158A  	fcall	___ftge
  8028  0C04  1C03               	btfss	3,0
  8029  0C05  2C23               	goto	i1l2461
  8030  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  8031  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  8032  0C08  0849               	movf	trapmf@c,w
  8033  0C09  00B0               	movwf	___ftge@ff1
  8034  0C0A  084A               	movf	trapmf@c+1,w
  8035  0C0B  00B1               	movwf	___ftge@ff1+1
  8036  0C0C  084B               	movf	trapmf@c+2,w
  8037  0C0D  00B2               	movwf	___ftge@ff1+2
  8038  0C0E  0840               	movf	trapmf@x,w
  8039  0C0F  00B3               	movwf	___ftge@ff2
  8040  0C10  0841               	movf	trapmf@x+1,w
  8041  0C11  00B4               	movwf	___ftge@ff2+1
  8042  0C12  0842               	movf	trapmf@x+2,w
  8043  0C13  00B5               	movwf	___ftge@ff2+2
  8044  0C14  160A  118A  23AE  120A  158A  	fcall	___ftge
  8045  0C19  1C03               	btfss	3,0
  8046  0C1A  2C23               	goto	i1l2461
  8047                           
  8048                           ;main.c: 96: ua = 1;
  8049  0C1B  3000               	movlw	0
  8050  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  8051  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  8052  0C1E  00CF               	movwf	trapmf@ua
  8053  0C1F  3080               	movlw	128
  8054  0C20  00D0               	movwf	trapmf@ua+1
  8055  0C21  303F               	movlw	63
  8056  0C22  2CC4               	goto	L17
  8057  0C23                     i1l2461:	
  8058                           
  8059                           ;main.c: 97: else if ((c < x) && (x <= d))
  8060  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  8061  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  8062  0C25  0849               	movf	trapmf@c,w
  8063  0C26  00B0               	movwf	___ftge@ff1
  8064  0C27  084A               	movf	trapmf@c+1,w
  8065  0C28  00B1               	movwf	___ftge@ff1+1
  8066  0C29  084B               	movf	trapmf@c+2,w
  8067  0C2A  00B2               	movwf	___ftge@ff1+2
  8068  0C2B  0840               	movf	trapmf@x,w
  8069  0C2C  00B3               	movwf	___ftge@ff2
  8070  0C2D  0841               	movf	trapmf@x+1,w
  8071  0C2E  00B4               	movwf	___ftge@ff2+1
  8072  0C2F  0842               	movf	trapmf@x+2,w
  8073  0C30  00B5               	movwf	___ftge@ff2+2
  8074  0C31  160A  118A  23AE  120A  158A  	fcall	___ftge
  8075  0C36  1803               	btfsc	3,0
  8076  0C37  2CA8               	goto	i1l2467
  8077  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  8078  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  8079  0C3A  084C               	movf	trapmf@d,w
  8080  0C3B  00B0               	movwf	___ftge@ff1
  8081  0C3C  084D               	movf	trapmf@d+1,w
  8082  0C3D  00B1               	movwf	___ftge@ff1+1
  8083  0C3E  084E               	movf	trapmf@d+2,w
  8084  0C3F  00B2               	movwf	___ftge@ff1+2
  8085  0C40  0840               	movf	trapmf@x,w
  8086  0C41  00B3               	movwf	___ftge@ff2
  8087  0C42  0841               	movf	trapmf@x+1,w
  8088  0C43  00B4               	movwf	___ftge@ff2+1
  8089  0C44  0842               	movf	trapmf@x+2,w
  8090  0C45  00B5               	movwf	___ftge@ff2+2
  8091  0C46  160A  118A  23AE  120A  158A  	fcall	___ftge
  8092  0C4B  1C03               	btfss	3,0
  8093  0C4C  2CA8               	goto	i1l2467
  8094                           
  8095                           ;main.c: 98: ua = ((d - x) / (d - c));
  8096  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  8097  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  8098  0C4F  084C               	movf	trapmf@d,w
  8099  0C50  00A3               	movwf	___ftadd@f1
  8100  0C51  084D               	movf	trapmf@d+1,w
  8101  0C52  00A4               	movwf	___ftadd@f1+1
  8102  0C53  084E               	movf	trapmf@d+2,w
  8103  0C54  00A5               	movwf	___ftadd@f1+2
  8104  0C55  0849               	movf	trapmf@c,w
  8105  0C56  00A0               	movwf	___ftneg@f1
  8106  0C57  084A               	movf	trapmf@c+1,w
  8107  0C58  00A1               	movwf	___ftneg@f1+1
  8108  0C59  084B               	movf	trapmf@c+2,w
  8109  0C5A  00A2               	movwf	___ftneg@f1+2
  8110  0C5B  160A  118A  2080  120A  158A  	fcall	___ftneg
  8111  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  8112  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  8113  0C62  0820               	movf	?___ftneg,w
  8114  0C63  00A6               	movwf	___ftadd@f2
  8115  0C64  0821               	movf	?___ftneg+1,w
  8116  0C65  00A7               	movwf	___ftadd@f2+1
  8117  0C66  0822               	movf	?___ftneg+2,w
  8118  0C67  00A8               	movwf	___ftadd@f2+2
  8119  0C68  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8120  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  8121  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  8122  0C6F  0823               	movf	?___ftadd,w
  8123  0C70  00B0               	movwf	___ftdiv@f2
  8124  0C71  0824               	movf	?___ftadd+1,w
  8125  0C72  00B1               	movwf	___ftdiv@f2+1
  8126  0C73  0825               	movf	?___ftadd+2,w
  8127  0C74  00B2               	movwf	___ftdiv@f2+2
  8128  0C75  084C               	movf	trapmf@d,w
  8129  0C76  00A3               	movwf	___ftadd@f1
  8130  0C77  084D               	movf	trapmf@d+1,w
  8131  0C78  00A4               	movwf	___ftadd@f1+1
  8132  0C79  084E               	movf	trapmf@d+2,w
  8133  0C7A  00A5               	movwf	___ftadd@f1+2
  8134  0C7B  0840               	movf	trapmf@x,w
  8135  0C7C  00A0               	movwf	___ftneg@f1
  8136  0C7D  0841               	movf	trapmf@x+1,w
  8137  0C7E  00A1               	movwf	___ftneg@f1+1
  8138  0C7F  0842               	movf	trapmf@x+2,w
  8139  0C80                     L20:	
  8140  0C80  00A2               	movwf	___ftneg@f1+2
  8141  0C81  160A  118A  2080  120A  158A  	fcall	___ftneg
  8142  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  8143  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  8144  0C88  0820               	movf	?___ftneg,w
  8145  0C89  00A6               	movwf	___ftadd@f2
  8146  0C8A  0821               	movf	?___ftneg+1,w
  8147  0C8B  00A7               	movwf	___ftadd@f2+1
  8148  0C8C  0822               	movf	?___ftneg+2,w
  8149  0C8D  00A8               	movwf	___ftadd@f2+2
  8150  0C8E  160A  118A  26F7  120A  158A  	fcall	___ftadd
  8151  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  8152  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  8153  0C95  0823               	movf	?___ftadd,w
  8154  0C96  00B3               	movwf	___ftdiv@f1
  8155  0C97  0824               	movf	?___ftadd+1,w
  8156  0C98  00B4               	movwf	___ftdiv@f1+1
  8157  0C99  0825               	movf	?___ftadd+2,w
  8158  0C9A  00B5               	movwf	___ftdiv@f1+2
  8159  0C9B  160A  118A  256E  120A  158A  	fcall	___ftdiv
  8160  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  8161  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  8162  0CA2  0830               	movf	?___ftdiv,w
  8163  0CA3  00CF               	movwf	trapmf@ua
  8164  0CA4  0831               	movf	?___ftdiv+1,w
  8165  0CA5  00D0               	movwf	trapmf@ua+1
  8166  0CA6  0832               	movf	?___ftdiv+2,w
  8167  0CA7  2CC4               	goto	L17
  8168  0CA8                     i1l2467:	
  8169                           
  8170                           ;main.c: 99: else if (x > d)
  8171  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  8172  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  8173  0CAA  084C               	movf	trapmf@d,w
  8174  0CAB  00B0               	movwf	___ftge@ff1
  8175  0CAC  084D               	movf	trapmf@d+1,w
  8176  0CAD  00B1               	movwf	___ftge@ff1+1
  8177  0CAE  084E               	movf	trapmf@d+2,w
  8178  0CAF  00B2               	movwf	___ftge@ff1+2
  8179  0CB0  0840               	movf	trapmf@x,w
  8180  0CB1  00B3               	movwf	___ftge@ff2
  8181  0CB2  0841               	movf	trapmf@x+1,w
  8182  0CB3  00B4               	movwf	___ftge@ff2+1
  8183  0CB4  0842               	movf	trapmf@x+2,w
  8184  0CB5  00B5               	movwf	___ftge@ff2+2
  8185  0CB6  160A  118A  23AE  120A  158A  	fcall	___ftge
  8186  0CBB  1803               	btfsc	3,0
  8187  0CBC  2CC5               	goto	i1l128
  8188  0CBD                     L18:	
  8189                           
  8190                           ;main.c: 100: ua = 0;
  8191  0CBD  3000               	movlw	0
  8192  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  8193  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  8194  0CC0  00CF               	movwf	trapmf@ua
  8195  0CC1  3000               	movlw	0
  8196  0CC2  00D0               	movwf	trapmf@ua+1
  8197  0CC3  3000               	movlw	0
  8198  0CC4                     L17:	
  8199  0CC4  00D1               	movwf	trapmf@ua+2
  8200  0CC5                     i1l128:	
  8201                           
  8202                           ;main.c: 102: return(ua);
  8203  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  8204  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  8205  0CC7  084F               	movf	trapmf@ua,w
  8206  0CC8  00C0               	movwf	?_trapmf
  8207  0CC9  0850               	movf	trapmf@ua+1,w
  8208  0CCA  00C1               	movwf	?_trapmf+1
  8209  0CCB  0851               	movf	trapmf@ua+2,w
  8210  0CCC  00C2               	movwf	?_trapmf+2
  8211  0CCD  0008               	return
  8212  0CCE                     __end_of_trapmf:	
  8213                           
  8214                           	psect	text33
  8215  1080                     __ptext33:	
  8216 ;; *************** function ___ftneg *****************
  8217 ;; Defined at:
  8218 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  f1              3    0[BANK0 ] float 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  3    0[BANK0 ] float 
  8225 ;; Registers used:
  8226 ;;		wreg
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8232 ;;      Params:         0       3       0       0       0
  8233 ;;      Locals:         0       0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0
  8235 ;;      Totals:         0       3       0       0       0
  8236 ;;Total ram usage:        3 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_trimf
  8242 ;;		_trapmf
  8243 ;;		_Fuzzy
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function ___ftneg
  8249  1080                     ___ftneg:	
  8250                           
  8251                           ;incstack = 0
  8252                           ; Regs used in ___ftneg: [wreg]
  8253  1080  1283               	bcf	3,5	;RP0=0, select bank0
  8254  1081  1303               	bcf	3,6	;RP1=0, select bank0
  8255  1082  0822               	movf	___ftneg@f1+2,w
  8256  1083  0421               	iorwf	___ftneg@f1+1,w
  8257  1084  0420               	iorwf	___ftneg@f1,w
  8258  1085  1903               	skipnz
  8259  1086  0008               	return
  8260  1087  3080               	movlw	128
  8261  1088  06A2               	xorwf	___ftneg@f1+2,f
  8262  1089  0008               	return
  8263  108A                     __end_of___ftneg:	
  8264                           
  8265                           	psect	text34
  8266  156E                     __ptext34:	
  8267 ;; *************** function ___ftdiv *****************
  8268 ;; Defined at:
  8269 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  f2              3   16[BANK0 ] float 
  8272 ;;  f1              3   19[BANK0 ] float 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  f3              3   27[BANK0 ] float 
  8275 ;;  sign            1   31[BANK0 ] unsigned char 
  8276 ;;  exp             1   30[BANK0 ] unsigned char 
  8277 ;;  cntr            1   26[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  3   16[BANK0 ] float 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8287 ;;      Params:         0       6       0       0       0
  8288 ;;      Locals:         0       6       0       0       0
  8289 ;;      Temps:          0       4       0       0       0
  8290 ;;      Totals:         0      16       0       0       0
  8291 ;;Total ram usage:       16 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    1
  8294 ;; This function calls:
  8295 ;;		___ftpack
  8296 ;; This function is called by:
  8297 ;;		_trimf
  8298 ;;		_trapmf
  8299 ;;		_Fuzzy
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           
  8304                           ;psect for function ___ftdiv
  8305  156E                     ___ftdiv:	
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8309  156E  1283               	bcf	3,5	;RP0=0, select bank0
  8310  156F  1303               	bcf	3,6	;RP1=0, select bank0
  8311  1570  0833               	movf	___ftdiv@f1,w
  8312  1571  00B6               	movwf	??___ftdiv
  8313  1572  0834               	movf	___ftdiv@f1+1,w
  8314  1573  00B7               	movwf	??___ftdiv+1
  8315  1574  0835               	movf	___ftdiv@f1+2,w
  8316  1575  00B8               	movwf	??___ftdiv+2
  8317  1576  1003               	clrc
  8318  1577  0D37               	rlf	??___ftdiv+1,w
  8319  1578  0D38               	rlf	??___ftdiv+2,w
  8320  1579  00B9               	movwf	??___ftdiv+3
  8321  157A  0839               	movf	??___ftdiv+3,w
  8322  157B  00BE               	movwf	___ftdiv@exp
  8323  157C  08BE               	movf	___ftdiv@exp,f
  8324  157D  1D03               	skipz
  8325  157E  2D86               	goto	i1l2351
  8326  157F  3000               	movlw	0
  8327  1580  00B0               	movwf	?___ftdiv
  8328  1581  3000               	movlw	0
  8329  1582  00B1               	movwf	?___ftdiv+1
  8330  1583  3000               	movlw	0
  8331  1584  00B2               	movwf	?___ftdiv+2
  8332  1585  0008               	return
  8333  1586                     i1l2351:	
  8334  1586  0830               	movf	___ftdiv@f2,w
  8335  1587  00B6               	movwf	??___ftdiv
  8336  1588  0831               	movf	___ftdiv@f2+1,w
  8337  1589  00B7               	movwf	??___ftdiv+1
  8338  158A  0832               	movf	___ftdiv@f2+2,w
  8339  158B  00B8               	movwf	??___ftdiv+2
  8340  158C  1003               	clrc
  8341  158D  0D37               	rlf	??___ftdiv+1,w
  8342  158E  0D38               	rlf	??___ftdiv+2,w
  8343  158F  00B9               	movwf	??___ftdiv+3
  8344  1590  0839               	movf	??___ftdiv+3,w
  8345  1591  00BF               	movwf	___ftdiv@sign
  8346  1592  08BF               	movf	___ftdiv@sign,f
  8347  1593  1D03               	skipz
  8348  1594  2D9C               	goto	i1l2357
  8349  1595  3000               	movlw	0
  8350  1596  00B0               	movwf	?___ftdiv
  8351  1597  3000               	movlw	0
  8352  1598  00B1               	movwf	?___ftdiv+1
  8353  1599  3000               	movlw	0
  8354  159A  00B2               	movwf	?___ftdiv+2
  8355  159B  0008               	return
  8356  159C                     i1l2357:	
  8357  159C  3000               	movlw	0
  8358  159D  00BB               	movwf	___ftdiv@f3
  8359  159E  3000               	movlw	0
  8360  159F  00BC               	movwf	___ftdiv@f3+1
  8361  15A0  3000               	movlw	0
  8362  15A1  00BD               	movwf	___ftdiv@f3+2
  8363  15A2  3089               	movlw	137
  8364  15A3  073F               	addwf	___ftdiv@sign,w
  8365  15A4  00B6               	movwf	??___ftdiv
  8366  15A5  0836               	movf	??___ftdiv,w
  8367  15A6  02BE               	subwf	___ftdiv@exp,f
  8368  15A7  0833               	movf	___ftdiv@f1,w
  8369  15A8  00B6               	movwf	??___ftdiv
  8370  15A9  0834               	movf	___ftdiv@f1+1,w
  8371  15AA  00B7               	movwf	??___ftdiv+1
  8372  15AB  0835               	movf	___ftdiv@f1+2,w
  8373  15AC  00B8               	movwf	??___ftdiv+2
  8374  15AD  3010               	movlw	16
  8375  15AE                     u248_25:	
  8376  15AE  1003               	clrc
  8377  15AF  0CB8               	rrf	??___ftdiv+2,f
  8378  15B0  0CB7               	rrf	??___ftdiv+1,f
  8379  15B1  0CB6               	rrf	??___ftdiv,f
  8380  15B2  3EFF               	addlw	-1
  8381  15B3  1D03               	skipz
  8382  15B4  2DAE               	goto	u248_25
  8383  15B5  0836               	movf	??___ftdiv,w
  8384  15B6  00B9               	movwf	??___ftdiv+3
  8385  15B7  0839               	movf	??___ftdiv+3,w
  8386  15B8  00BF               	movwf	___ftdiv@sign
  8387  15B9  0830               	movf	___ftdiv@f2,w
  8388  15BA  00B6               	movwf	??___ftdiv
  8389  15BB  0831               	movf	___ftdiv@f2+1,w
  8390  15BC  00B7               	movwf	??___ftdiv+1
  8391  15BD  0832               	movf	___ftdiv@f2+2,w
  8392  15BE  00B8               	movwf	??___ftdiv+2
  8393  15BF  3010               	movlw	16
  8394  15C0                     u249_25:	
  8395  15C0  1003               	clrc
  8396  15C1  0CB8               	rrf	??___ftdiv+2,f
  8397  15C2  0CB7               	rrf	??___ftdiv+1,f
  8398  15C3  0CB6               	rrf	??___ftdiv,f
  8399  15C4  3EFF               	addlw	-1
  8400  15C5  1D03               	skipz
  8401  15C6  2DC0               	goto	u249_25
  8402  15C7  0836               	movf	??___ftdiv,w
  8403  15C8  00B9               	movwf	??___ftdiv+3
  8404  15C9  0839               	movf	??___ftdiv+3,w
  8405  15CA  06BF               	xorwf	___ftdiv@sign,f
  8406  15CB  3080               	movlw	128
  8407  15CC  00B6               	movwf	??___ftdiv
  8408  15CD  0836               	movf	??___ftdiv,w
  8409  15CE  05BF               	andwf	___ftdiv@sign,f
  8410  15CF  17B4               	bsf	___ftdiv@f1+1,7
  8411  15D0  30FF               	movlw	255
  8412  15D1  05B3               	andwf	___ftdiv@f1,f
  8413  15D2  30FF               	movlw	255
  8414  15D3  05B4               	andwf	___ftdiv@f1+1,f
  8415  15D4  3000               	movlw	0
  8416  15D5  05B5               	andwf	___ftdiv@f1+2,f
  8417  15D6  17B1               	bsf	___ftdiv@f2+1,7
  8418  15D7  30FF               	movlw	255
  8419  15D8  05B0               	andwf	___ftdiv@f2,f
  8420  15D9  30FF               	movlw	255
  8421  15DA  05B1               	andwf	___ftdiv@f2+1,f
  8422  15DB  3000               	movlw	0
  8423  15DC  05B2               	andwf	___ftdiv@f2+2,f
  8424  15DD  3018               	movlw	24
  8425  15DE  00B6               	movwf	??___ftdiv
  8426  15DF  0836               	movf	??___ftdiv,w
  8427  15E0  00BA               	movwf	___ftdiv@cntr
  8428  15E1                     i1l2371:	
  8429  15E1  3001               	movlw	1
  8430  15E2                     u250_25:	
  8431  15E2  1003               	clrc
  8432  15E3  0DBB               	rlf	___ftdiv@f3,f
  8433  15E4  0DBC               	rlf	___ftdiv@f3+1,f
  8434  15E5  0DBD               	rlf	___ftdiv@f3+2,f
  8435  15E6  3EFF               	addlw	-1
  8436  15E7  1D03               	skipz
  8437  15E8  2DE2               	goto	u250_25
  8438  15E9  0832               	movf	___ftdiv@f2+2,w
  8439  15EA  0235               	subwf	___ftdiv@f1+2,w
  8440  15EB  1D03               	skipz
  8441  15EC  2DF3               	goto	u251_25
  8442  15ED  0831               	movf	___ftdiv@f2+1,w
  8443  15EE  0234               	subwf	___ftdiv@f1+1,w
  8444  15EF  1D03               	skipz
  8445  15F0  2DF3               	goto	u251_25
  8446  15F1  0830               	movf	___ftdiv@f2,w
  8447  15F2  0233               	subwf	___ftdiv@f1,w
  8448  15F3                     u251_25:	
  8449  15F3  1C03               	skipc
  8450  15F4  2E00               	goto	i1l2379
  8451  15F5  0830               	movf	___ftdiv@f2,w
  8452  15F6  02B3               	subwf	___ftdiv@f1,f
  8453  15F7  0831               	movf	___ftdiv@f2+1,w
  8454  15F8  1C03               	skipc
  8455  15F9  0F31               	incfsz	___ftdiv@f2+1,w
  8456  15FA  02B4               	subwf	___ftdiv@f1+1,f
  8457  15FB  0832               	movf	___ftdiv@f2+2,w
  8458  15FC  1C03               	skipc
  8459  15FD  0A32               	incf	___ftdiv@f2+2,w
  8460  15FE  02B5               	subwf	___ftdiv@f1+2,f
  8461  15FF  143B               	bsf	___ftdiv@f3,0
  8462  1600                     i1l2379:	
  8463  1600  3001               	movlw	1
  8464  1601                     u252_25:	
  8465  1601  1003               	clrc
  8466  1602  0DB3               	rlf	___ftdiv@f1,f
  8467  1603  0DB4               	rlf	___ftdiv@f1+1,f
  8468  1604  0DB5               	rlf	___ftdiv@f1+2,f
  8469  1605  3EFF               	addlw	-1
  8470  1606  1D03               	skipz
  8471  1607  2E01               	goto	u252_25
  8472  1608  3001               	movlw	1
  8473  1609  02BA               	subwf	___ftdiv@cntr,f
  8474  160A  1D03               	btfss	3,2
  8475  160B  2DE1               	goto	i1l2371
  8476  160C  083B               	movf	___ftdiv@f3,w
  8477  160D  00F0               	movwf	___ftpack@arg
  8478  160E  083C               	movf	___ftdiv@f3+1,w
  8479  160F  00F1               	movwf	___ftpack@arg+1
  8480  1610  083D               	movf	___ftdiv@f3+2,w
  8481  1611  00F2               	movwf	___ftpack@arg+2
  8482  1612  083E               	movf	___ftdiv@exp,w
  8483  1613  00B6               	movwf	??___ftdiv
  8484  1614  0836               	movf	??___ftdiv,w
  8485  1615  00F3               	movwf	___ftpack@exp
  8486  1616  083F               	movf	___ftdiv@sign,w
  8487  1617  00B7               	movwf	??___ftdiv+1
  8488  1618  0837               	movf	??___ftdiv+1,w
  8489  1619  00F4               	movwf	___ftpack@sign
  8490  161A  160A  118A  240D   	fcall	___ftpack
  8491  161D  0870               	movf	?___ftpack,w
  8492  161E  1283               	bcf	3,5	;RP0=0, select bank0
  8493  161F  1303               	bcf	3,6	;RP1=0, select bank0
  8494  1620  00B0               	movwf	?___ftdiv
  8495  1621  0871               	movf	?___ftpack+1,w
  8496  1622  00B1               	movwf	?___ftdiv+1
  8497  1623  0872               	movf	?___ftpack+2,w
  8498  1624  00B2               	movwf	?___ftdiv+2
  8499  1625  0008               	return
  8500  1626                     __end_of___ftdiv:	
  8501                           
  8502                           	psect	text35
  8503  16F7                     __ptext35:	
  8504 ;; *************** function ___ftadd *****************
  8505 ;; Defined at:
  8506 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  f1              3    3[BANK0 ] float 
  8509 ;;  f2              3    6[BANK0 ] float 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  exp1            1   15[BANK0 ] unsigned char 
  8512 ;;  exp2            1   14[BANK0 ] unsigned char 
  8513 ;;  sign            1   13[BANK0 ] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  3    3[BANK0 ] float 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, pclath, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8523 ;;      Params:         0       6       0       0       0
  8524 ;;      Locals:         0       3       0       0       0
  8525 ;;      Temps:          0       4       0       0       0
  8526 ;;      Totals:         0      13       0       0       0
  8527 ;;Total ram usage:       13 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    1
  8530 ;; This function calls:
  8531 ;;		___ftpack
  8532 ;; This function is called by:
  8533 ;;		_trimf
  8534 ;;		_trapmf
  8535 ;;		_Fuzzy
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           
  8540                           ;psect for function ___ftadd
  8541  16F7                     ___ftadd:	
  8542                           
  8543                           ;incstack = 0
  8544                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8545  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  8546  16F8  1303               	bcf	3,6	;RP1=0, select bank0
  8547  16F9  0823               	movf	___ftadd@f1,w
  8548  16FA  00A9               	movwf	??___ftadd
  8549  16FB  0824               	movf	___ftadd@f1+1,w
  8550  16FC  00AA               	movwf	??___ftadd+1
  8551  16FD  0825               	movf	___ftadd@f1+2,w
  8552  16FE  00AB               	movwf	??___ftadd+2
  8553  16FF  1003               	clrc
  8554  1700  0D2A               	rlf	??___ftadd+1,w
  8555  1701  0D2B               	rlf	??___ftadd+2,w
  8556  1702  00AC               	movwf	??___ftadd+3
  8557  1703  082C               	movf	??___ftadd+3,w
  8558  1704  00AF               	movwf	___ftadd@exp1
  8559  1705  0826               	movf	___ftadd@f2,w
  8560  1706  00A9               	movwf	??___ftadd
  8561  1707  0827               	movf	___ftadd@f2+1,w
  8562  1708  00AA               	movwf	??___ftadd+1
  8563  1709  0828               	movf	___ftadd@f2+2,w
  8564  170A  00AB               	movwf	??___ftadd+2
  8565  170B  1003               	clrc
  8566  170C  0D2A               	rlf	??___ftadd+1,w
  8567  170D  0D2B               	rlf	??___ftadd+2,w
  8568  170E  00AC               	movwf	??___ftadd+3
  8569  170F  082C               	movf	??___ftadd+3,w
  8570  1710  00AE               	movwf	___ftadd@exp2
  8571  1711  082F               	movf	___ftadd@exp1,w
  8572  1712  1903               	btfsc	3,2
  8573  1713  2F20               	goto	i1l2281
  8574  1714  082E               	movf	___ftadd@exp2,w
  8575  1715  022F               	subwf	___ftadd@exp1,w
  8576  1716  1803               	skipnc
  8577  1717  2F27               	goto	i1l2285
  8578  1718  032F               	decf	___ftadd@exp1,w
  8579  1719  3AFF               	xorlw	255
  8580  171A  072E               	addwf	___ftadd@exp2,w
  8581  171B  00A9               	movwf	??___ftadd
  8582  171C  3019               	movlw	25
  8583  171D  0229               	subwf	??___ftadd,w
  8584  171E  1C03               	skipc
  8585  171F  2F27               	goto	i1l2285
  8586  1720                     i1l2281:	
  8587  1720  0826               	movf	___ftadd@f2,w
  8588  1721  00A3               	movwf	?___ftadd
  8589  1722  0827               	movf	___ftadd@f2+1,w
  8590  1723  00A4               	movwf	?___ftadd+1
  8591  1724  0828               	movf	___ftadd@f2+2,w
  8592  1725  00A5               	movwf	?___ftadd+2
  8593  1726  0008               	return
  8594  1727                     i1l2285:	
  8595  1727  082E               	movf	___ftadd@exp2,w
  8596  1728  1903               	btfsc	3,2
  8597  1729  0008               	return
  8598  172A  082F               	movf	___ftadd@exp1,w
  8599  172B  022E               	subwf	___ftadd@exp2,w
  8600  172C  1803               	skipnc
  8601  172D  2F36               	goto	i1l2291
  8602  172E  032E               	decf	___ftadd@exp2,w
  8603  172F  3AFF               	xorlw	255
  8604  1730  072F               	addwf	___ftadd@exp1,w
  8605  1731  00A9               	movwf	??___ftadd
  8606  1732  3019               	movlw	25
  8607  1733  0229               	subwf	??___ftadd,w
  8608  1734  1803               	btfsc	3,0
  8609  1735  0008               	return
  8610  1736                     i1l2291:	
  8611  1736  3006               	movlw	6
  8612  1737  00A9               	movwf	??___ftadd
  8613  1738  0829               	movf	??___ftadd,w
  8614  1739  00AD               	movwf	___ftadd@sign
  8615  173A  1BA5               	btfsc	___ftadd@f1+2,7
  8616  173B  17AD               	bsf	___ftadd@sign,7
  8617  173C  1BA8               	btfsc	___ftadd@f2+2,7
  8618  173D  172D               	bsf	___ftadd@sign,6
  8619  173E  17A4               	bsf	___ftadd@f1+1,7
  8620  173F  30FF               	movlw	255
  8621  1740  05A3               	andwf	___ftadd@f1,f
  8622  1741  30FF               	movlw	255
  8623  1742  05A4               	andwf	___ftadd@f1+1,f
  8624  1743  3000               	movlw	0
  8625  1744  05A5               	andwf	___ftadd@f1+2,f
  8626  1745  17A7               	bsf	___ftadd@f2+1,7
  8627  1746  30FF               	movlw	255
  8628  1747  05A6               	andwf	___ftadd@f2,f
  8629  1748  30FF               	movlw	255
  8630  1749  05A7               	andwf	___ftadd@f2+1,f
  8631  174A  3000               	movlw	0
  8632  174B  05A8               	andwf	___ftadd@f2+2,f
  8633  174C  082E               	movf	___ftadd@exp2,w
  8634  174D  022F               	subwf	___ftadd@exp1,w
  8635  174E  1803               	skipnc
  8636  174F  2F76               	goto	i1l2313
  8637  1750                     i1l2303:	
  8638  1750  3001               	movlw	1
  8639  1751                     u231_25:	
  8640  1751  1003               	clrc
  8641  1752  0DA6               	rlf	___ftadd@f2,f
  8642  1753  0DA7               	rlf	___ftadd@f2+1,f
  8643  1754  0DA8               	rlf	___ftadd@f2+2,f
  8644  1755  3EFF               	addlw	-1
  8645  1756  1D03               	skipz
  8646  1757  2F51               	goto	u231_25
  8647  1758  3001               	movlw	1
  8648  1759  02AE               	subwf	___ftadd@exp2,f
  8649  175A  082E               	movf	___ftadd@exp2,w
  8650  175B  062F               	xorwf	___ftadd@exp1,w
  8651  175C  1903               	skipnz
  8652  175D  2F71               	goto	i1l2311
  8653  175E  3001               	movlw	1
  8654  175F  02AD               	subwf	___ftadd@sign,f
  8655  1760  082D               	movf	___ftadd@sign,w
  8656  1761  3907               	andlw	7
  8657  1762  1903               	btfsc	3,2
  8658  1763  2F71               	goto	i1l2311
  8659  1764  2F50               	goto	i1l2303
  8660  1765                     i1l2309:	
  8661  1765  3001               	movlw	1
  8662  1766                     u234_25:	
  8663  1766  1003               	clrc
  8664  1767  0CA5               	rrf	___ftadd@f1+2,f
  8665  1768  0CA4               	rrf	___ftadd@f1+1,f
  8666  1769  0CA3               	rrf	___ftadd@f1,f
  8667  176A  3EFF               	addlw	-1
  8668  176B  1D03               	skipz
  8669  176C  2F66               	goto	u234_25
  8670  176D  3001               	movlw	1
  8671  176E  00A9               	movwf	??___ftadd
  8672  176F  0829               	movf	??___ftadd,w
  8673  1770  07AF               	addwf	___ftadd@exp1,f
  8674  1771                     i1l2311:	
  8675  1771  082F               	movf	___ftadd@exp1,w
  8676  1772  062E               	xorwf	___ftadd@exp2,w
  8677  1773  1903               	btfsc	3,2
  8678  1774  2F9F               	goto	i1l785
  8679  1775  2F65               	goto	i1l2309
  8680  1776                     i1l2313:	
  8681  1776  082F               	movf	___ftadd@exp1,w
  8682  1777  022E               	subwf	___ftadd@exp2,w
  8683  1778  1803               	skipnc
  8684  1779  2F9F               	goto	i1l785
  8685  177A                     i1l2315:	
  8686  177A  3001               	movlw	1
  8687  177B                     u237_25:	
  8688  177B  1003               	clrc
  8689  177C  0DA3               	rlf	___ftadd@f1,f
  8690  177D  0DA4               	rlf	___ftadd@f1+1,f
  8691  177E  0DA5               	rlf	___ftadd@f1+2,f
  8692  177F  3EFF               	addlw	-1
  8693  1780  1D03               	skipz
  8694  1781  2F7B               	goto	u237_25
  8695  1782  3001               	movlw	1
  8696  1783  02AF               	subwf	___ftadd@exp1,f
  8697  1784  082E               	movf	___ftadd@exp2,w
  8698  1785  062F               	xorwf	___ftadd@exp1,w
  8699  1786  1903               	skipnz
  8700  1787  2F9B               	goto	i1l2323
  8701  1788  3001               	movlw	1
  8702  1789  02AD               	subwf	___ftadd@sign,f
  8703  178A  082D               	movf	___ftadd@sign,w
  8704  178B  3907               	andlw	7
  8705  178C  1903               	btfsc	3,2
  8706  178D  2F9B               	goto	i1l2323
  8707  178E  2F7A               	goto	i1l2315
  8708  178F                     i1l2321:	
  8709  178F  3001               	movlw	1
  8710  1790                     u240_25:	
  8711  1790  1003               	clrc
  8712  1791  0CA8               	rrf	___ftadd@f2+2,f
  8713  1792  0CA7               	rrf	___ftadd@f2+1,f
  8714  1793  0CA6               	rrf	___ftadd@f2,f
  8715  1794  3EFF               	addlw	-1
  8716  1795  1D03               	skipz
  8717  1796  2F90               	goto	u240_25
  8718  1797  3001               	movlw	1
  8719  1798  00A9               	movwf	??___ftadd
  8720  1799  0829               	movf	??___ftadd,w
  8721  179A  07AE               	addwf	___ftadd@exp2,f
  8722  179B                     i1l2323:	
  8723  179B  082F               	movf	___ftadd@exp1,w
  8724  179C  062E               	xorwf	___ftadd@exp2,w
  8725  179D  1D03               	skipz
  8726  179E  2F8F               	goto	i1l2321
  8727  179F                     i1l785:	
  8728  179F  1FAD               	btfss	___ftadd@sign,7
  8729  17A0  2FB1               	goto	i1l2327
  8730  17A1  30FF               	movlw	255
  8731  17A2  06A3               	xorwf	___ftadd@f1,f
  8732  17A3  30FF               	movlw	255
  8733  17A4  06A4               	xorwf	___ftadd@f1+1,f
  8734  17A5  30FF               	movlw	255
  8735  17A6  06A5               	xorwf	___ftadd@f1+2,f
  8736  17A7  3001               	movlw	1
  8737  17A8  07A3               	addwf	___ftadd@f1,f
  8738  17A9  3000               	movlw	0
  8739  17AA  1803               	skipnc
  8740  17AB  3001               	movlw	1
  8741  17AC  07A4               	addwf	___ftadd@f1+1,f
  8742  17AD  3000               	movlw	0
  8743  17AE  1803               	skipnc
  8744  17AF  3001               	movlw	1
  8745  17B0  07A5               	addwf	___ftadd@f1+2,f
  8746  17B1                     i1l2327:	
  8747  17B1  1F2D               	btfss	___ftadd@sign,6
  8748  17B2  2FC3               	goto	i1l2331
  8749  17B3  30FF               	movlw	255
  8750  17B4  06A6               	xorwf	___ftadd@f2,f
  8751  17B5  30FF               	movlw	255
  8752  17B6  06A7               	xorwf	___ftadd@f2+1,f
  8753  17B7  30FF               	movlw	255
  8754  17B8  06A8               	xorwf	___ftadd@f2+2,f
  8755  17B9  3001               	movlw	1
  8756  17BA  07A6               	addwf	___ftadd@f2,f
  8757  17BB  3000               	movlw	0
  8758  17BC  1803               	skipnc
  8759  17BD  3001               	movlw	1
  8760  17BE  07A7               	addwf	___ftadd@f2+1,f
  8761  17BF  3000               	movlw	0
  8762  17C0  1803               	skipnc
  8763  17C1  3001               	movlw	1
  8764  17C2  07A8               	addwf	___ftadd@f2+2,f
  8765  17C3                     i1l2331:	
  8766  17C3  01AD               	clrf	___ftadd@sign
  8767  17C4  0823               	movf	___ftadd@f1,w
  8768  17C5  07A6               	addwf	___ftadd@f2,f
  8769  17C6  0824               	movf	___ftadd@f1+1,w
  8770  17C7  1103               	clrz
  8771  17C8  1803               	skipnc
  8772  17C9  0A24               	incf	___ftadd@f1+1,w
  8773  17CA  1D03               	btfss	3,2
  8774  17CB  07A7               	addwf	___ftadd@f2+1,f
  8775  17CC  0825               	movf	___ftadd@f1+2,w
  8776  17CD  1103               	clrz
  8777  17CE  1803               	skipnc
  8778  17CF  0A25               	incf	___ftadd@f1+2,w
  8779  17D0  1D03               	btfss	3,2
  8780  17D1  07A8               	addwf	___ftadd@f2+2,f
  8781  17D2  1FA8               	btfss	___ftadd@f2+2,7
  8782  17D3  2FE6               	goto	i1l2341
  8783  17D4  30FF               	movlw	255
  8784  17D5  06A6               	xorwf	___ftadd@f2,f
  8785  17D6  30FF               	movlw	255
  8786  17D7  06A7               	xorwf	___ftadd@f2+1,f
  8787  17D8  30FF               	movlw	255
  8788  17D9  06A8               	xorwf	___ftadd@f2+2,f
  8789  17DA  3001               	movlw	1
  8790  17DB  07A6               	addwf	___ftadd@f2,f
  8791  17DC  3000               	movlw	0
  8792  17DD  1803               	skipnc
  8793  17DE  3001               	movlw	1
  8794  17DF  07A7               	addwf	___ftadd@f2+1,f
  8795  17E0  3000               	movlw	0
  8796  17E1  1803               	skipnc
  8797  17E2  3001               	movlw	1
  8798  17E3  07A8               	addwf	___ftadd@f2+2,f
  8799  17E4  01AD               	clrf	___ftadd@sign
  8800  17E5  0AAD               	incf	___ftadd@sign,f
  8801  17E6                     i1l2341:	
  8802  17E6  0826               	movf	___ftadd@f2,w
  8803  17E7  00F0               	movwf	___ftpack@arg
  8804  17E8  0827               	movf	___ftadd@f2+1,w
  8805  17E9  00F1               	movwf	___ftpack@arg+1
  8806  17EA  0828               	movf	___ftadd@f2+2,w
  8807  17EB  00F2               	movwf	___ftpack@arg+2
  8808  17EC  082F               	movf	___ftadd@exp1,w
  8809  17ED  00A9               	movwf	??___ftadd
  8810  17EE  0829               	movf	??___ftadd,w
  8811  17EF  00F3               	movwf	___ftpack@exp
  8812  17F0  082D               	movf	___ftadd@sign,w
  8813  17F1  00AA               	movwf	??___ftadd+1
  8814  17F2  082A               	movf	??___ftadd+1,w
  8815  17F3  00F4               	movwf	___ftpack@sign
  8816  17F4  160A  118A  240D   	fcall	___ftpack
  8817  17F7  0870               	movf	?___ftpack,w
  8818  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  8819  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  8820  17FA  00A3               	movwf	?___ftadd
  8821  17FB  0871               	movf	?___ftpack+1,w
  8822  17FC  00A4               	movwf	?___ftadd+1
  8823  17FD  0872               	movf	?___ftpack+2,w
  8824  17FE  00A5               	movwf	?___ftadd+2
  8825  17FF  0008               	return
  8826  1800                     __end_of___ftadd:	
  8827                           
  8828                           	psect	text36
  8829  113C                     __ptext36:	
  8830 ;; *************** function _max_val *****************
  8831 ;; Defined at:
  8832 ;;		line 117 in file "R:\Note\Ultimo C no MPLAB\main.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  a               3   28[BANK0 ] float 
  8835 ;;  b               3   31[BANK0 ] float 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  3   28[BANK0 ] float 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8847 ;;      Params:         0       6       0       0       0
  8848 ;;      Locals:         0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0
  8850 ;;      Totals:         0       6       0       0       0
  8851 ;;Total ram usage:        6 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    1
  8854 ;; This function calls:
  8855 ;;		___ftge
  8856 ;; This function is called by:
  8857 ;;		_Fuzzy
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           
  8862                           ;psect for function _max_val
  8863  113C                     _max_val:	
  8864                           
  8865                           ;main.c: 119: if (a > b)
  8866                           
  8867                           ;incstack = 0
  8868                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  8869  113C  1283               	bcf	3,5	;RP0=0, select bank0
  8870  113D  1303               	bcf	3,6	;RP1=0, select bank0
  8871  113E  083F               	movf	max_val@b,w
  8872  113F  00B0               	movwf	___ftge@ff1
  8873  1140  0840               	movf	max_val@b+1,w
  8874  1141  00B1               	movwf	___ftge@ff1+1
  8875  1142  0841               	movf	max_val@b+2,w
  8876  1143  00B2               	movwf	___ftge@ff1+2
  8877  1144  083C               	movf	max_val@a,w
  8878  1145  00B3               	movwf	___ftge@ff2
  8879  1146  083D               	movf	max_val@a+1,w
  8880  1147  00B4               	movwf	___ftge@ff2+1
  8881  1148  083E               	movf	max_val@a+2,w
  8882  1149  00B5               	movwf	___ftge@ff2+2
  8883  114A  160A  118A  23AE  160A  118A  	fcall	___ftge
  8884  114F  1C03               	btfss	3,0
  8885  1150  0008               	return
  8886                           
  8887                           ;main.c: 121: else
  8888                           ;main.c: 122: return b;
  8889                           
  8890                           ;main.c: 120: return a;
  8891  1151  1283               	bcf	3,5	;RP0=0, select bank0
  8892  1152  1303               	bcf	3,6	;RP1=0, select bank0
  8893  1153  083F               	movf	max_val@b,w
  8894  1154  00BC               	movwf	?_max_val
  8895  1155  0840               	movf	max_val@b+1,w
  8896  1156  00BD               	movwf	?_max_val+1
  8897  1157  0841               	movf	max_val@b+2,w
  8898  1158  00BE               	movwf	?_max_val+2
  8899  1159  0008               	return
  8900  115A                     __end_of_max_val:	
  8901                           
  8902                           	psect	text37
  8903  13AE                     __ptext37:	
  8904 ;; *************** function ___ftge *****************
  8905 ;; Defined at:
  8906 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  ff1             3   16[BANK0 ] float 
  8909 ;;  ff2             3   19[BANK0 ] float 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;		None               void
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8921 ;;      Params:         0       6       0       0       0
  8922 ;;      Locals:         0       0       0       0       0
  8923 ;;      Temps:          0       6       0       0       0
  8924 ;;      Totals:         0      12       0       0       0
  8925 ;;Total ram usage:       12 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_trimf
  8931 ;;		_trapmf
  8932 ;;		_max_val
  8933 ;;		_Fuzzy
  8934 ;;		_min_val
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           
  8939                           ;psect for function ___ftge
  8940  13AE                     ___ftge:	
  8941                           
  8942                           ;incstack = 0
  8943                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8944  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  8945  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  8946  13B0  1FB2               	btfss	___ftge@ff1+2,7
  8947  13B1  2BD7               	goto	i1l2391
  8948  13B2  3000               	movlw	0
  8949  13B3  00B6               	movwf	??___ftge
  8950  13B4  3000               	movlw	0
  8951  13B5  00B7               	movwf	??___ftge+1
  8952  13B6  3080               	movlw	128
  8953  13B7  00B8               	movwf	??___ftge+2
  8954  13B8  0930               	comf	___ftge@ff1,w
  8955  13B9  00B9               	movwf	??___ftge+3
  8956  13BA  0931               	comf	___ftge@ff1+1,w
  8957  13BB  00BA               	movwf	??___ftge+4
  8958  13BC  0932               	comf	___ftge@ff1+2,w
  8959  13BD  00BB               	movwf	??___ftge+5
  8960  13BE  0AB9               	incf	??___ftge+3,f
  8961  13BF  1903               	skipnz
  8962  13C0  0ABA               	incf	??___ftge+4,f
  8963  13C1  1903               	skipnz
  8964  13C2  0ABB               	incf	??___ftge+5,f
  8965  13C3  0839               	movf	??___ftge+3,w
  8966  13C4  07B6               	addwf	??___ftge,f
  8967  13C5  083A               	movf	??___ftge+4,w
  8968  13C6  1803               	skipnc
  8969  13C7  0F3A               	incfsz	??___ftge+4,w
  8970  13C8  2BCA               	goto	u255_21
  8971  13C9  2BCB               	goto	u255_22
  8972  13CA                     u255_21:	
  8973  13CA  07B7               	addwf	??___ftge+1,f
  8974  13CB                     u255_22:	
  8975  13CB  083B               	movf	??___ftge+5,w
  8976  13CC  1803               	skipnc
  8977  13CD  0F3B               	incfsz	??___ftge+5,w
  8978  13CE  2BD0               	goto	u255_23
  8979  13CF  2BD1               	goto	u255_24
  8980  13D0                     u255_23:	
  8981  13D0  07B8               	addwf	??___ftge+2,f
  8982  13D1                     u255_24:	
  8983  13D1  0836               	movf	??___ftge,w
  8984  13D2  00B0               	movwf	___ftge@ff1
  8985  13D3  0837               	movf	??___ftge+1,w
  8986  13D4  00B1               	movwf	___ftge@ff1+1
  8987  13D5  0838               	movf	??___ftge+2,w
  8988  13D6  00B2               	movwf	___ftge@ff1+2
  8989  13D7                     i1l2391:	
  8990  13D7  1FB5               	btfss	___ftge@ff2+2,7
  8991  13D8  2BFE               	goto	i1l2395
  8992  13D9  3000               	movlw	0
  8993  13DA  00B6               	movwf	??___ftge
  8994  13DB  3000               	movlw	0
  8995  13DC  00B7               	movwf	??___ftge+1
  8996  13DD  3080               	movlw	128
  8997  13DE  00B8               	movwf	??___ftge+2
  8998  13DF  0933               	comf	___ftge@ff2,w
  8999  13E0  00B9               	movwf	??___ftge+3
  9000  13E1  0934               	comf	___ftge@ff2+1,w
  9001  13E2  00BA               	movwf	??___ftge+4
  9002  13E3  0935               	comf	___ftge@ff2+2,w
  9003  13E4  00BB               	movwf	??___ftge+5
  9004  13E5  0AB9               	incf	??___ftge+3,f
  9005  13E6  1903               	skipnz
  9006  13E7  0ABA               	incf	??___ftge+4,f
  9007  13E8  1903               	skipnz
  9008  13E9  0ABB               	incf	??___ftge+5,f
  9009  13EA  0839               	movf	??___ftge+3,w
  9010  13EB  07B6               	addwf	??___ftge,f
  9011  13EC  083A               	movf	??___ftge+4,w
  9012  13ED  1803               	skipnc
  9013  13EE  0F3A               	incfsz	??___ftge+4,w
  9014  13EF  2BF1               	goto	u257_21
  9015  13F0  2BF2               	goto	u257_22
  9016  13F1                     u257_21:	
  9017  13F1  07B7               	addwf	??___ftge+1,f
  9018  13F2                     u257_22:	
  9019  13F2  083B               	movf	??___ftge+5,w
  9020  13F3  1803               	skipnc
  9021  13F4  0F3B               	incfsz	??___ftge+5,w
  9022  13F5  2BF7               	goto	u257_23
  9023  13F6  2BF8               	goto	u257_24
  9024  13F7                     u257_23:	
  9025  13F7  07B8               	addwf	??___ftge+2,f
  9026  13F8                     u257_24:	
  9027  13F8  0836               	movf	??___ftge,w
  9028  13F9  00B3               	movwf	___ftge@ff2
  9029  13FA  0837               	movf	??___ftge+1,w
  9030  13FB  00B4               	movwf	___ftge@ff2+1
  9031  13FC  0838               	movf	??___ftge+2,w
  9032  13FD  00B5               	movwf	___ftge@ff2+2
  9033  13FE                     i1l2395:	
  9034  13FE  3080               	movlw	128
  9035  13FF  06B2               	xorwf	___ftge@ff1+2,f
  9036  1400  3080               	movlw	128
  9037  1401  06B5               	xorwf	___ftge@ff2+2,f
  9038  1402  0835               	movf	___ftge@ff2+2,w
  9039  1403  0232               	subwf	___ftge@ff1+2,w
  9040  1404  1D03               	skipz
  9041  1405  0008               	return
  9042  1406  0834               	movf	___ftge@ff2+1,w
  9043  1407  0231               	subwf	___ftge@ff1+1,w
  9044  1408  1D03               	skipz
  9045  1409  0008               	return
  9046  140A  0833               	movf	___ftge@ff2,w
  9047  140B  0230               	subwf	___ftge@ff1,w
  9048  140C  0008               	return
  9049  140D                     __end_of___ftge:	
  9050                           
  9051                           	psect	text38
  9052  10DF                     __ptext38:	
  9053 ;; *************** function ___lwtoft *****************
  9054 ;; Defined at:
  9055 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  c               2    8[COMMON] unsigned int 
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  3    8[COMMON] float 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0, pclath, cstack
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9069 ;;      Params:         3       0       0       0       0
  9070 ;;      Locals:         0       0       0       0       0
  9071 ;;      Temps:          1       0       0       0       0
  9072 ;;      Totals:         4       0       0       0       0
  9073 ;;Total ram usage:        4 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; Hardware stack levels required when called:    1
  9076 ;; This function calls:
  9077 ;;		___ftpack
  9078 ;; This function is called by:
  9079 ;;		_Fuzzy
  9080 ;;		_ISR
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           
  9085                           ;psect for function ___lwtoft
  9086  10DF                     ___lwtoft:	
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9090  10DF  0878               	movf	___lwtoft@c,w
  9091  10E0  00F0               	movwf	___ftpack@arg
  9092  10E1  0879               	movf	___lwtoft@c+1,w
  9093  10E2  00F1               	movwf	___ftpack@arg+1
  9094  10E3  01F2               	clrf	___ftpack@arg+2
  9095  10E4  308E               	movlw	142
  9096  10E5  00FB               	movwf	??___lwtoft
  9097  10E6  087B               	movf	??___lwtoft,w
  9098  10E7  00F3               	movwf	___ftpack@exp
  9099  10E8  01F4               	clrf	___ftpack@sign
  9100  10E9  160A  118A  240D   	fcall	___ftpack
  9101  10EC  0870               	movf	?___ftpack,w
  9102  10ED  00F8               	movwf	?___lwtoft
  9103  10EE  0871               	movf	?___ftpack+1,w
  9104  10EF  00F9               	movwf	?___lwtoft+1
  9105  10F0  0872               	movf	?___ftpack+2,w
  9106  10F1  00FA               	movwf	?___lwtoft+2
  9107  10F2  0008               	return
  9108  10F3                     __end_of___lwtoft:	
  9109                           
  9110                           	psect	text39
  9111  14E0                     __ptext39:	
  9112 ;; *************** function ___fttol *****************
  9113 ;; Defined at:
  9114 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  f1              3   16[BANK0 ] float 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  lval            4   25[BANK0 ] unsigned long 
  9119 ;;  exp1            1   29[BANK0 ] unsigned char 
  9120 ;;  sign1           1   24[BANK0 ] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  4   16[BANK0 ] long 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9130 ;;      Params:         0       4       0       0       0
  9131 ;;      Locals:         0       6       0       0       0
  9132 ;;      Temps:          0       4       0       0       0
  9133 ;;      Totals:         0      14       0       0       0
  9134 ;;Total ram usage:       14 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_Fuzzy
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function ___fttol
  9145  14E0                     ___fttol:	
  9146                           
  9147                           ;incstack = 0
  9148                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9149  14E0  1283               	bcf	3,5	;RP0=0, select bank0
  9150  14E1  1303               	bcf	3,6	;RP1=0, select bank0
  9151  14E2  0830               	movf	___fttol@f1,w
  9152  14E3  00B4               	movwf	??___fttol
  9153  14E4  0831               	movf	___fttol@f1+1,w
  9154  14E5  00B5               	movwf	??___fttol+1
  9155  14E6  0832               	movf	___fttol@f1+2,w
  9156  14E7  00B6               	movwf	??___fttol+2
  9157  14E8  1003               	clrc
  9158  14E9  0D35               	rlf	??___fttol+1,w
  9159  14EA  0D36               	rlf	??___fttol+2,w
  9160  14EB  00B7               	movwf	??___fttol+3
  9161  14EC  0837               	movf	??___fttol+3,w
  9162  14ED  00BD               	movwf	___fttol@exp1
  9163  14EE  08BD               	movf	___fttol@exp1,f
  9164  14EF  1D03               	skipz
  9165  14F0  2CFA               	goto	i1l2623
  9166  14F1  3000               	movlw	0
  9167  14F2  00B3               	movwf	?___fttol+3
  9168  14F3  3000               	movlw	0
  9169  14F4  00B2               	movwf	?___fttol+2
  9170  14F5  3000               	movlw	0
  9171  14F6  00B1               	movwf	?___fttol+1
  9172  14F7  3000               	movlw	0
  9173  14F8  00B0               	movwf	?___fttol
  9174  14F9  0008               	return
  9175  14FA                     i1l2623:	
  9176  14FA  0830               	movf	___fttol@f1,w
  9177  14FB  00B4               	movwf	??___fttol
  9178  14FC  0831               	movf	___fttol@f1+1,w
  9179  14FD  00B5               	movwf	??___fttol+1
  9180  14FE  0832               	movf	___fttol@f1+2,w
  9181  14FF  00B6               	movwf	??___fttol+2
  9182  1500  3017               	movlw	23
  9183  1501                     u308_25:	
  9184  1501  1003               	clrc
  9185  1502  0CB6               	rrf	??___fttol+2,f
  9186  1503  0CB5               	rrf	??___fttol+1,f
  9187  1504  0CB4               	rrf	??___fttol,f
  9188  1505  3EFF               	addlw	-1
  9189  1506  1D03               	skipz
  9190  1507  2D01               	goto	u308_25
  9191  1508  0834               	movf	??___fttol,w
  9192  1509  00B7               	movwf	??___fttol+3
  9193  150A  0837               	movf	??___fttol+3,w
  9194  150B  00B8               	movwf	___fttol@sign1
  9195  150C  17B1               	bsf	___fttol@f1+1,7
  9196  150D  30FF               	movlw	255
  9197  150E  05B0               	andwf	___fttol@f1,f
  9198  150F  30FF               	movlw	255
  9199  1510  05B1               	andwf	___fttol@f1+1,f
  9200  1511  3000               	movlw	0
  9201  1512  05B2               	andwf	___fttol@f1+2,f
  9202  1513  0830               	movf	___fttol@f1,w
  9203  1514  00B9               	movwf	___fttol@lval
  9204  1515  0831               	movf	___fttol@f1+1,w
  9205  1516  00BA               	movwf	___fttol@lval+1
  9206  1517  0832               	movf	___fttol@f1+2,w
  9207  1518  00BB               	movwf	___fttol@lval+2
  9208  1519  01BC               	clrf	___fttol@lval+3
  9209  151A  308E               	movlw	142
  9210  151B  02BD               	subwf	___fttol@exp1,f
  9211  151C  1FBD               	btfss	___fttol@exp1,7
  9212  151D  2D3C               	goto	i1l2643
  9213  151E  083D               	movf	___fttol@exp1,w
  9214  151F  3A80               	xorlw	128
  9215  1520  3E8F               	addlw	143
  9216  1521  1803               	skipnc
  9217  1522  2D2C               	goto	i1l2641
  9218  1523  3000               	movlw	0
  9219  1524  00B3               	movwf	?___fttol+3
  9220  1525  3000               	movlw	0
  9221  1526  00B2               	movwf	?___fttol+2
  9222  1527  3000               	movlw	0
  9223  1528  00B1               	movwf	?___fttol+1
  9224  1529  3000               	movlw	0
  9225  152A  00B0               	movwf	?___fttol
  9226  152B  0008               	return
  9227  152C                     i1l2641:	
  9228  152C  3001               	movlw	1
  9229  152D                     u311_25:	
  9230  152D  1003               	clrc
  9231  152E  0CBC               	rrf	___fttol@lval+3,f
  9232  152F  0CBB               	rrf	___fttol@lval+2,f
  9233  1530  0CBA               	rrf	___fttol@lval+1,f
  9234  1531  0CB9               	rrf	___fttol@lval,f
  9235  1532  3EFF               	addlw	-1
  9236  1533  1D03               	skipz
  9237  1534  2D2D               	goto	u311_25
  9238  1535  3001               	movlw	1
  9239  1536  00B4               	movwf	??___fttol
  9240  1537  0834               	movf	??___fttol,w
  9241  1538  07BD               	addwf	___fttol@exp1,f
  9242  1539  1903               	btfsc	3,2
  9243  153A  2D57               	goto	i1l2653
  9244  153B  2D2C               	goto	i1l2641
  9245  153C                     i1l2643:	
  9246  153C  3018               	movlw	24
  9247  153D  023D               	subwf	___fttol@exp1,w
  9248  153E  1C03               	skipc
  9249  153F  2D54               	goto	i1l2651
  9250  1540  3000               	movlw	0
  9251  1541  00B3               	movwf	?___fttol+3
  9252  1542  3000               	movlw	0
  9253  1543  00B2               	movwf	?___fttol+2
  9254  1544  3000               	movlw	0
  9255  1545  00B1               	movwf	?___fttol+1
  9256  1546  3000               	movlw	0
  9257  1547  00B0               	movwf	?___fttol
  9258  1548  0008               	return
  9259  1549                     i1l2649:	
  9260  1549  3001               	movlw	1
  9261  154A  00B4               	movwf	??___fttol
  9262  154B                     u314_25:	
  9263  154B  1003               	clrc
  9264  154C  0DB9               	rlf	___fttol@lval,f
  9265  154D  0DBA               	rlf	___fttol@lval+1,f
  9266  154E  0DBB               	rlf	___fttol@lval+2,f
  9267  154F  0DBC               	rlf	___fttol@lval+3,f
  9268  1550  0BB4               	decfsz	??___fttol,f
  9269  1551  2D4B               	goto	u314_25
  9270  1552  3001               	movlw	1
  9271  1553  02BD               	subwf	___fttol@exp1,f
  9272  1554                     i1l2651:	
  9273  1554  08BD               	movf	___fttol@exp1,f
  9274  1555  1D03               	skipz
  9275  1556  2D49               	goto	i1l2649
  9276  1557                     i1l2653:	
  9277  1557  0838               	movf	___fttol@sign1,w
  9278  1558  1903               	btfsc	3,2
  9279  1559  2D65               	goto	i1l2657
  9280  155A  09B9               	comf	___fttol@lval,f
  9281  155B  09BA               	comf	___fttol@lval+1,f
  9282  155C  09BB               	comf	___fttol@lval+2,f
  9283  155D  09BC               	comf	___fttol@lval+3,f
  9284  155E  0AB9               	incf	___fttol@lval,f
  9285  155F  1903               	skipnz
  9286  1560  0ABA               	incf	___fttol@lval+1,f
  9287  1561  1903               	skipnz
  9288  1562  0ABB               	incf	___fttol@lval+2,f
  9289  1563  1903               	skipnz
  9290  1564  0ABC               	incf	___fttol@lval+3,f
  9291  1565                     i1l2657:	
  9292  1565  083C               	movf	___fttol@lval+3,w
  9293  1566  00B3               	movwf	?___fttol+3
  9294  1567  083B               	movf	___fttol@lval+2,w
  9295  1568  00B2               	movwf	?___fttol+2
  9296  1569  083A               	movf	___fttol@lval+1,w
  9297  156A  00B1               	movwf	?___fttol+1
  9298  156B  0839               	movf	___fttol@lval,w
  9299  156C  00B0               	movwf	?___fttol
  9300  156D  0008               	return
  9301  156E                     __end_of___fttol:	
  9302                           
  9303                           	psect	text40
  9304  1626                     __ptext40:	
  9305 ;; *************** function ___ftmul *****************
  9306 ;; Defined at:
  9307 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  f1              3    8[COMMON] float 
  9310 ;;  f2              3   11[COMMON] float 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9313 ;;  sign            1    9[BANK0 ] unsigned char 
  9314 ;;  cntr            1    8[BANK0 ] unsigned char 
  9315 ;;  exp             1    4[BANK0 ] unsigned char 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  3    8[COMMON] float 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0, pclath, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9325 ;;      Params:         6       0       0       0       0
  9326 ;;      Locals:         0       6       0       0       0
  9327 ;;      Temps:          0       4       0       0       0
  9328 ;;      Totals:         6      10       0       0       0
  9329 ;;Total ram usage:       16 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    1
  9332 ;; This function calls:
  9333 ;;		___ftpack
  9334 ;; This function is called by:
  9335 ;;		_Fuzzy
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           
  9340                           ;psect for function ___ftmul
  9341  1626                     ___ftmul:	
  9342                           
  9343                           ;incstack = 0
  9344                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9345  1626  0878               	movf	___ftmul@f1,w
  9346  1627  1283               	bcf	3,5	;RP0=0, select bank0
  9347  1628  1303               	bcf	3,6	;RP1=0, select bank0
  9348  1629  00A0               	movwf	??___ftmul
  9349  162A  0879               	movf	___ftmul@f1+1,w
  9350  162B  00A1               	movwf	??___ftmul+1
  9351  162C  087A               	movf	___ftmul@f1+2,w
  9352  162D  00A2               	movwf	??___ftmul+2
  9353  162E  1003               	clrc
  9354  162F  0D21               	rlf	??___ftmul+1,w
  9355  1630  0D22               	rlf	??___ftmul+2,w
  9356  1631  00A3               	movwf	??___ftmul+3
  9357  1632  0823               	movf	??___ftmul+3,w
  9358  1633  00A4               	movwf	___ftmul@exp
  9359  1634  08A4               	movf	___ftmul@exp,f
  9360  1635  1D03               	skipz
  9361  1636  2E3E               	goto	i1l2573
  9362  1637  3000               	movlw	0
  9363  1638  00F8               	movwf	?___ftmul
  9364  1639  3000               	movlw	0
  9365  163A  00F9               	movwf	?___ftmul+1
  9366  163B  3000               	movlw	0
  9367  163C  00FA               	movwf	?___ftmul+2
  9368  163D  0008               	return
  9369  163E                     i1l2573:	
  9370  163E  087B               	movf	___ftmul@f2,w
  9371  163F  00A0               	movwf	??___ftmul
  9372  1640  087C               	movf	___ftmul@f2+1,w
  9373  1641  00A1               	movwf	??___ftmul+1
  9374  1642  087D               	movf	___ftmul@f2+2,w
  9375  1643  00A2               	movwf	??___ftmul+2
  9376  1644  1003               	clrc
  9377  1645  0D21               	rlf	??___ftmul+1,w
  9378  1646  0D22               	rlf	??___ftmul+2,w
  9379  1647  00A3               	movwf	??___ftmul+3
  9380  1648  0823               	movf	??___ftmul+3,w
  9381  1649  00A9               	movwf	___ftmul@sign
  9382  164A  08A9               	movf	___ftmul@sign,f
  9383  164B  1D03               	skipz
  9384  164C  2E54               	goto	i1l2579
  9385  164D  3000               	movlw	0
  9386  164E  00F8               	movwf	?___ftmul
  9387  164F  3000               	movlw	0
  9388  1650  00F9               	movwf	?___ftmul+1
  9389  1651  3000               	movlw	0
  9390  1652  00FA               	movwf	?___ftmul+2
  9391  1653  0008               	return
  9392  1654                     i1l2579:	
  9393  1654  0829               	movf	___ftmul@sign,w
  9394  1655  3E7B               	addlw	123
  9395  1656  00A0               	movwf	??___ftmul
  9396  1657  0820               	movf	??___ftmul,w
  9397  1658  07A4               	addwf	___ftmul@exp,f
  9398  1659  0878               	movf	___ftmul@f1,w
  9399  165A  00A0               	movwf	??___ftmul
  9400  165B  0879               	movf	___ftmul@f1+1,w
  9401  165C  00A1               	movwf	??___ftmul+1
  9402  165D  087A               	movf	___ftmul@f1+2,w
  9403  165E  00A2               	movwf	??___ftmul+2
  9404  165F  3010               	movlw	16
  9405  1660                     u295_25:	
  9406  1660  1003               	clrc
  9407  1661  0CA2               	rrf	??___ftmul+2,f
  9408  1662  0CA1               	rrf	??___ftmul+1,f
  9409  1663  0CA0               	rrf	??___ftmul,f
  9410  1664  3EFF               	addlw	-1
  9411  1665  1D03               	skipz
  9412  1666  2E60               	goto	u295_25
  9413  1667  0820               	movf	??___ftmul,w
  9414  1668  00A3               	movwf	??___ftmul+3
  9415  1669  0823               	movf	??___ftmul+3,w
  9416  166A  00A9               	movwf	___ftmul@sign
  9417  166B  087B               	movf	___ftmul@f2,w
  9418  166C  00A0               	movwf	??___ftmul
  9419  166D  087C               	movf	___ftmul@f2+1,w
  9420  166E  00A1               	movwf	??___ftmul+1
  9421  166F  087D               	movf	___ftmul@f2+2,w
  9422  1670  00A2               	movwf	??___ftmul+2
  9423  1671  3010               	movlw	16
  9424  1672                     u296_25:	
  9425  1672  1003               	clrc
  9426  1673  0CA2               	rrf	??___ftmul+2,f
  9427  1674  0CA1               	rrf	??___ftmul+1,f
  9428  1675  0CA0               	rrf	??___ftmul,f
  9429  1676  3EFF               	addlw	-1
  9430  1677  1D03               	skipz
  9431  1678  2E72               	goto	u296_25
  9432  1679  0820               	movf	??___ftmul,w
  9433  167A  00A3               	movwf	??___ftmul+3
  9434  167B  0823               	movf	??___ftmul+3,w
  9435  167C  06A9               	xorwf	___ftmul@sign,f
  9436  167D  3080               	movlw	128
  9437  167E  00A0               	movwf	??___ftmul
  9438  167F  0820               	movf	??___ftmul,w
  9439  1680  05A9               	andwf	___ftmul@sign,f
  9440  1681  17F9               	bsf	___ftmul@f1+1,7
  9441  1682  17FC               	bsf	___ftmul@f2+1,7
  9442  1683  30FF               	movlw	255
  9443  1684  05FB               	andwf	___ftmul@f2,f
  9444  1685  30FF               	movlw	255
  9445  1686  05FC               	andwf	___ftmul@f2+1,f
  9446  1687  3000               	movlw	0
  9447  1688  05FD               	andwf	___ftmul@f2+2,f
  9448  1689  3000               	movlw	0
  9449  168A  00A5               	movwf	___ftmul@f3_as_product
  9450  168B  3000               	movlw	0
  9451  168C  00A6               	movwf	___ftmul@f3_as_product+1
  9452  168D  3000               	movlw	0
  9453  168E  00A7               	movwf	___ftmul@f3_as_product+2
  9454  168F  3007               	movlw	7
  9455  1690  00A0               	movwf	??___ftmul
  9456  1691  0820               	movf	??___ftmul,w
  9457  1692  00A8               	movwf	___ftmul@cntr
  9458  1693                     i1l2591:	
  9459  1693  1C78               	btfss	___ftmul@f1,0
  9460  1694  2EA3               	goto	i1l2595
  9461  1695  087B               	movf	___ftmul@f2,w
  9462  1696  07A5               	addwf	___ftmul@f3_as_product,f
  9463  1697  087C               	movf	___ftmul@f2+1,w
  9464  1698  1103               	clrz
  9465  1699  1803               	skipnc
  9466  169A  0A7C               	incf	___ftmul@f2+1,w
  9467  169B  1D03               	btfss	3,2
  9468  169C  07A6               	addwf	___ftmul@f3_as_product+1,f
  9469  169D  087D               	movf	___ftmul@f2+2,w
  9470  169E  1103               	clrz
  9471  169F  1803               	skipnc
  9472  16A0  0A7D               	incf	___ftmul@f2+2,w
  9473  16A1  1D03               	btfss	3,2
  9474  16A2  07A7               	addwf	___ftmul@f3_as_product+2,f
  9475  16A3                     i1l2595:	
  9476  16A3  3001               	movlw	1
  9477  16A4                     u299_25:	
  9478  16A4  1003               	clrc
  9479  16A5  0CFA               	rrf	___ftmul@f1+2,f
  9480  16A6  0CF9               	rrf	___ftmul@f1+1,f
  9481  16A7  0CF8               	rrf	___ftmul@f1,f
  9482  16A8  3EFF               	addlw	-1
  9483  16A9  1D03               	skipz
  9484  16AA  2EA4               	goto	u299_25
  9485  16AB  3001               	movlw	1
  9486  16AC                     u300_25:	
  9487  16AC  1003               	clrc
  9488  16AD  0DFB               	rlf	___ftmul@f2,f
  9489  16AE  0DFC               	rlf	___ftmul@f2+1,f
  9490  16AF  0DFD               	rlf	___ftmul@f2+2,f
  9491  16B0  3EFF               	addlw	-1
  9492  16B1  1D03               	skipz
  9493  16B2  2EAC               	goto	u300_25
  9494  16B3  3001               	movlw	1
  9495  16B4  02A8               	subwf	___ftmul@cntr,f
  9496  16B5  1D03               	btfss	3,2
  9497  16B6  2E93               	goto	i1l2591
  9498  16B7  3009               	movlw	9
  9499  16B8  00A0               	movwf	??___ftmul
  9500  16B9  0820               	movf	??___ftmul,w
  9501  16BA  00A8               	movwf	___ftmul@cntr
  9502  16BB                     i1l2603:	
  9503  16BB  1C78               	btfss	___ftmul@f1,0
  9504  16BC  2ECB               	goto	i1l2607
  9505  16BD  087B               	movf	___ftmul@f2,w
  9506  16BE  07A5               	addwf	___ftmul@f3_as_product,f
  9507  16BF  087C               	movf	___ftmul@f2+1,w
  9508  16C0  1103               	clrz
  9509  16C1  1803               	skipnc
  9510  16C2  0A7C               	incf	___ftmul@f2+1,w
  9511  16C3  1D03               	btfss	3,2
  9512  16C4  07A6               	addwf	___ftmul@f3_as_product+1,f
  9513  16C5  087D               	movf	___ftmul@f2+2,w
  9514  16C6  1103               	clrz
  9515  16C7  1803               	skipnc
  9516  16C8  0A7D               	incf	___ftmul@f2+2,w
  9517  16C9  1D03               	btfss	3,2
  9518  16CA  07A7               	addwf	___ftmul@f3_as_product+2,f
  9519  16CB                     i1l2607:	
  9520  16CB  3001               	movlw	1
  9521  16CC                     u304_25:	
  9522  16CC  1003               	clrc
  9523  16CD  0CFA               	rrf	___ftmul@f1+2,f
  9524  16CE  0CF9               	rrf	___ftmul@f1+1,f
  9525  16CF  0CF8               	rrf	___ftmul@f1,f
  9526  16D0  3EFF               	addlw	-1
  9527  16D1  1D03               	skipz
  9528  16D2  2ECC               	goto	u304_25
  9529  16D3  3001               	movlw	1
  9530  16D4                     u305_25:	
  9531  16D4  1003               	clrc
  9532  16D5  0CA7               	rrf	___ftmul@f3_as_product+2,f
  9533  16D6  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9534  16D7  0CA5               	rrf	___ftmul@f3_as_product,f
  9535  16D8  3EFF               	addlw	-1
  9536  16D9  1D03               	skipz
  9537  16DA  2ED4               	goto	u305_25
  9538  16DB  3001               	movlw	1
  9539  16DC  02A8               	subwf	___ftmul@cntr,f
  9540  16DD  1D03               	btfss	3,2
  9541  16DE  2EBB               	goto	i1l2603
  9542  16DF  0825               	movf	___ftmul@f3_as_product,w
  9543  16E0  00F0               	movwf	___ftpack@arg
  9544  16E1  0826               	movf	___ftmul@f3_as_product+1,w
  9545  16E2  00F1               	movwf	___ftpack@arg+1
  9546  16E3  0827               	movf	___ftmul@f3_as_product+2,w
  9547  16E4  00F2               	movwf	___ftpack@arg+2
  9548  16E5  0824               	movf	___ftmul@exp,w
  9549  16E6  00A0               	movwf	??___ftmul
  9550  16E7  0820               	movf	??___ftmul,w
  9551  16E8  00F3               	movwf	___ftpack@exp
  9552  16E9  0829               	movf	___ftmul@sign,w
  9553  16EA  00A1               	movwf	??___ftmul+1
  9554  16EB  0821               	movf	??___ftmul+1,w
  9555  16EC  00F4               	movwf	___ftpack@sign
  9556  16ED  160A  118A  240D   	fcall	___ftpack
  9557  16F0  0870               	movf	?___ftpack,w
  9558  16F1  00F8               	movwf	?___ftmul
  9559  16F2  0871               	movf	?___ftpack+1,w
  9560  16F3  00F9               	movwf	?___ftmul+1
  9561  16F4  0872               	movf	?___ftpack+2,w
  9562  16F5  00FA               	movwf	?___ftmul+2
  9563  16F6  0008               	return
  9564  16F7                     __end_of___ftmul:	
  9565                           
  9566                           	psect	text41
  9567  140D                     __ptext41:	
  9568 ;; *************** function ___ftpack *****************
  9569 ;; Defined at:
  9570 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  arg             3    0[COMMON] unsigned um
  9573 ;;  exp             1    3[COMMON] unsigned char 
  9574 ;;  sign            1    4[COMMON] unsigned char 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  3    0[COMMON] float 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9586 ;;      Params:         5       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0
  9588 ;;      Temps:          3       0       0       0       0
  9589 ;;      Totals:         8       0       0       0       0
  9590 ;;Total ram usage:        8 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		___ftadd
  9596 ;;		___ftdiv
  9597 ;;		___ftmul
  9598 ;;		___lwtoft
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           
  9603                           ;psect for function ___ftpack
  9604  140D                     ___ftpack:	
  9605                           
  9606                           ;incstack = 0
  9607                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9608  140D  0873               	movf	___ftpack@exp,w
  9609  140E  1903               	btfsc	3,2
  9610  140F  2C15               	goto	i1l2247
  9611  1410  0872               	movf	___ftpack@arg+2,w
  9612  1411  0471               	iorwf	___ftpack@arg+1,w
  9613  1412  0470               	iorwf	___ftpack@arg,w
  9614  1413  1D03               	skipz
  9615  1414  2C28               	goto	i1l2253
  9616  1415                     i1l2247:	
  9617  1415  3000               	movlw	0
  9618  1416  00F0               	movwf	?___ftpack
  9619  1417  3000               	movlw	0
  9620  1418  00F1               	movwf	?___ftpack+1
  9621  1419  3000               	movlw	0
  9622  141A  00F2               	movwf	?___ftpack+2
  9623  141B  0008               	return
  9624  141C                     i1l2251:	
  9625  141C  3001               	movlw	1
  9626  141D  00F5               	movwf	??___ftpack
  9627  141E  0875               	movf	??___ftpack,w
  9628  141F  07F3               	addwf	___ftpack@exp,f
  9629  1420  3001               	movlw	1
  9630  1421                     u213_25:	
  9631  1421  1003               	clrc
  9632  1422  0CF2               	rrf	___ftpack@arg+2,f
  9633  1423  0CF1               	rrf	___ftpack@arg+1,f
  9634  1424  0CF0               	rrf	___ftpack@arg,f
  9635  1425  3EFF               	addlw	-1
  9636  1426  1D03               	skipz
  9637  1427  2C21               	goto	u213_25
  9638  1428                     i1l2253:	
  9639  1428  30FE               	movlw	254
  9640  1429  0572               	andwf	___ftpack@arg+2,w
  9641  142A  1903               	btfsc	3,2
  9642  142B  2C43               	goto	i1l756
  9643  142C  2C1C               	goto	i1l2251
  9644  142D                     i1l2255:	
  9645  142D  3001               	movlw	1
  9646  142E  00F5               	movwf	??___ftpack
  9647  142F  0875               	movf	??___ftpack,w
  9648  1430  07F3               	addwf	___ftpack@exp,f
  9649  1431  3001               	movlw	1
  9650  1432  07F0               	addwf	___ftpack@arg,f
  9651  1433  3000               	movlw	0
  9652  1434  1803               	skipnc
  9653  1435  3001               	movlw	1
  9654  1436  07F1               	addwf	___ftpack@arg+1,f
  9655  1437  3000               	movlw	0
  9656  1438  1803               	skipnc
  9657  1439  3001               	movlw	1
  9658  143A  07F2               	addwf	___ftpack@arg+2,f
  9659  143B  3001               	movlw	1
  9660  143C                     u215_25:	
  9661  143C  1003               	clrc
  9662  143D  0CF2               	rrf	___ftpack@arg+2,f
  9663  143E  0CF1               	rrf	___ftpack@arg+1,f
  9664  143F  0CF0               	rrf	___ftpack@arg,f
  9665  1440  3EFF               	addlw	-1
  9666  1441  1D03               	skipz
  9667  1442  2C3C               	goto	u215_25
  9668  1443                     i1l756:	
  9669  1443  30FF               	movlw	255
  9670  1444  0572               	andwf	___ftpack@arg+2,w
  9671  1445  1903               	btfsc	3,2
  9672  1446  2C52               	goto	i1l2263
  9673  1447  2C2D               	goto	i1l2255
  9674  1448                     i1l2261:	
  9675  1448  3001               	movlw	1
  9676  1449  02F3               	subwf	___ftpack@exp,f
  9677  144A  3001               	movlw	1
  9678  144B                     u217_25:	
  9679  144B  1003               	clrc
  9680  144C  0DF0               	rlf	___ftpack@arg,f
  9681  144D  0DF1               	rlf	___ftpack@arg+1,f
  9682  144E  0DF2               	rlf	___ftpack@arg+2,f
  9683  144F  3EFF               	addlw	-1
  9684  1450  1D03               	skipz
  9685  1451  2C4B               	goto	u217_25
  9686  1452                     i1l2263:	
  9687  1452  1FF1               	btfss	___ftpack@arg+1,7
  9688  1453  2C48               	goto	i1l2261
  9689  1454  1873               	btfsc	___ftpack@exp,0
  9690  1455  2C5C               	goto	i1l762
  9691  1456  30FF               	movlw	255
  9692  1457  05F0               	andwf	___ftpack@arg,f
  9693  1458  307F               	movlw	127
  9694  1459  05F1               	andwf	___ftpack@arg+1,f
  9695  145A  30FF               	movlw	255
  9696  145B  05F2               	andwf	___ftpack@arg+2,f
  9697  145C                     i1l762:	
  9698  145C  1003               	clrc
  9699  145D  0CF3               	rrf	___ftpack@exp,f
  9700  145E  0873               	movf	___ftpack@exp,w
  9701  145F  00F5               	movwf	??___ftpack
  9702  1460  01F6               	clrf	??___ftpack+1
  9703  1461  01F7               	clrf	??___ftpack+2
  9704  1462  3010               	movlw	16
  9705  1463                     u220_25:	
  9706  1463  1003               	clrc
  9707  1464  0DF5               	rlf	??___ftpack,f
  9708  1465  0DF6               	rlf	??___ftpack+1,f
  9709  1466  0DF7               	rlf	??___ftpack+2,f
  9710  1467  3EFF               	addlw	-1
  9711  1468  1D03               	skipz
  9712  1469  2C63               	goto	u220_25
  9713  146A  0875               	movf	??___ftpack,w
  9714  146B  04F0               	iorwf	___ftpack@arg,f
  9715  146C  0876               	movf	??___ftpack+1,w
  9716  146D  04F1               	iorwf	___ftpack@arg+1,f
  9717  146E  0877               	movf	??___ftpack+2,w
  9718  146F  04F2               	iorwf	___ftpack@arg+2,f
  9719  1470  0874               	movf	___ftpack@sign,w
  9720  1471  1903               	btfsc	3,2
  9721  1472  0008               	return
  9722  1473  17F2               	bsf	___ftpack@arg+2,7
  9723  1474  0008               	return
  9724  1475                     __end_of___ftpack:	
  9725  007E                     btemp	set	126	;btemp
  9726  007E                     wtemp	set	126
  9727  007E                     wtemp0	set	126
  9728  0080                     wtemp1	set	128
  9729  0082                     wtemp2	set	130
  9730  0084                     wtemp3	set	132
  9731  0086                     wtemp4	set	134
  9732  0088                     wtemp5	set	136
  9733  007F                     wtemp6	set	127
  9734  007E                     ttemp	set	126
  9735  007E                     ttemp0	set	126
  9736  0081                     ttemp1	set	129
  9737  0084                     ttemp2	set	132
  9738  0087                     ttemp3	set	135
  9739  007F                     ttemp4	set	127
  9740  007E                     ltemp	set	126
  9741  007E                     ltemp0	set	126
  9742  0082                     ltemp1	set	130
  9743  0086                     ltemp2	set	134
  9744  0080                     ltemp3	set	128


Data Sizes:
    Strings     193
    Constant    10
    Data        12
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     34      79
    BANK3            96      0      33
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_15(CODE[5]), STR_14(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display_pwm(BANK3[10]), display_rpm(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1253$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[8]), STR_17(CODE[6]), display_pwm(BANK3[10]), display_rpm(BANK3[10]), 
		 -> STR_13(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_19(CODE[40]), STR_16(CODE[3]), display_rpm(BANK3[10]), STR_12(CODE[20]), 
		 -> STR_11(CODE[29]), STR_10(CODE[15]), STR_9(CODE[11]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_PWM_DutyCycle2
    _ISR->i1___wmul
    i1___wmul->i1___lwdiv
    _USART_ReceiveChar->i1_USART_WriteString
    i1_USART_WriteString->i1_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_WriteString->_USART_WriteChar
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4553
                                             31 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                  _USART_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    2129
                                             14 BANK1     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     296
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     366
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_WriteString                                    2     0      2     741
                                              1 BANK1      2     0      2
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART_WriteChar                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     387
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     386
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   60812
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                           ___lwtoft
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                i1_USART_WriteString
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     377
                                              3 COMMON     2     2      0
                i1_USART_WriteString
 ---------------------------------------------------------------------------------
 (4) i1_USART_WriteString                                  2     0      2     353
                                              1 COMMON     2     0      2
                  i1_USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) i1_USART_WriteChar                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56998
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15310
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16167
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3096
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _USART_WriteString
     _USART_WriteChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     i1_USART_WriteString
       i1_USART_WriteChar
   ___lwtoft
     ___ftpack
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set
   i1_USART_WriteString
     i1_USART_WriteChar
   i1___lwdiv
   i1___wmul
     i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      21       9       34.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CD      12        0.0%
ABS                  0      0      CD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Jun 06 23:53:18 2022

           ?i1_PWM_DutyCycle2 003E                             _x 00B5                             _y 00B8  
                           pc 0002                   ?_LCD_Cursor 00C3       __size_of_PWM_DutyCycle1 0021  
     __size_of_PWM_DutyCycle2 0021                   __CFG_CP$OFF 0000                   _SSPSTATbits 0094  
                          _tf 00E8                            fsr 0004           ___wmul@multiplicand 00C5  
          ??i1_PWM_DutyCycle2 007C              i1___wmul@product 007C                  ___ftadd@exp1 002F  
                ___ftadd@exp2 002E                 _contagens_tm0 00BD                  ___ftadd@sign 002D  
                         l224 10A2                           l199 0ACC                           l650 0767  
                         l476 0E76                           l494 0F3B                           l595 08EA  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _ISR 0CCE  
                         _rpm 00C1                           fsr0 0004                           _pwm 01AF  
                         _sum 00AF    __size_of_USART_WriteString 0031                           indf 0000  
                __CFG_FOSC$HS 0000             ??_LCD_WriteString 00C7                  __CFG_LVP$OFF 0000  
                        ?_ISR 0070                  ___ftdiv@cntr 003A                  ___ftdiv@sign 003F  
                        l3013 124F                          l3101 0F89            LCD_WriteString@Str 00C5  
                        l3121 0FB1                          l3113 0FAD                          l3033 0E7B  
                        l3107 0F9E                          l3051 0EED                          l3035 0E86  
                        l3027 0E72                          l3123 0E50                          l3061 0F06  
                        l3125 0FF9                          l2511 10BA                          l3039 0E98  
                        l3081 0F5A                          l3073 0F2D                          l3065 0F0C  
                        l3049 0ED6                          l3091 0F6F                          l3083 0F5E  
                        l2701 12D5                          l2517 08E2                          l2545 0788  
                        l2537 0778                          l2705 12E0                          l2563 07DB  
                        l2555 07C0                          l2547 0798                          l3099 0F85  
                        l2559 07CD                          l2671 132F                          l2673 133D  
                        l2683 135E                          l2679 1353                          l2695 12B9  
                        l2697 12C7                          l2893 1280                          l2999 1168  
                        STR_1 08AF                          STR_2 08BD                          STR_3 08BD  
                        STR_4 08BD                          STR_5 08BD                          STR_6 08BD  
                        STR_7 08A1                          STR_8 0893                          STR_9 08BD  
                        u3205 133E                          u3215 134A                          u3225 1354  
                        u4107 111B                          u4117 147F                          u4207 1232  
                        u4127 148F                          u3255 12BC                          u4217 1240  
                        u4137 149D                          u3185 1332                          u4227 124C  
                        u4147 14A9                          u3275 12CD                          u4237 1104  
                        u4157 14B5                          u3285 12D6                          u2805 08EB  
                        u4167 14C3                          u3615 118F                          u2815 08F2  
                        u4087 0AC5                          u4177 14D1                          u2905 07C1  
                        u4097 0B71                          u4187 14DD                          u3555 11B0  
                        u3715 0F4A                          u4197 1174                          u2865 078C  
                        u3585 1370                          u3675 0F23                          u2885 079A  
                        u2895 07AF                          _OERR 00C1                          _TMR0 0001  
                        _TMR1 000E                          _main 0A27                  ___ftpack@arg 0070  
          __size_of_LCD_Clear 0029                  ___ftpack@exp 0073                          btemp 007E  
            __end_of_ADC_Init 10DF                          ltemp 007E                          start 0012  
                        ttemp 007E                          wtemp 007E                 ?_LCD_WriteCmd 0070  
               _LCD_WriteData 110A                  ___ftmul@cntr 0028                  ___ftmul@sign 0029  
     __end_of_USART_WriteChar 10AC                         ??_ISR 0069                  ___fttol@exp1 003D  
                ___fttol@lval 0039                   ?_TIMER0_Set 0070              __end_of_LCD_Init 14E0  
             __end_of___aldiv 07E4                         ?_main 0070                         _EEADR 010D  
             __end_of___ftadd 1800                         STR_10 0884                         STR_11 0842  
                       STR_12 085F                         STR_13 0873                         STR_14 08D6  
                       STR_15 08D6                         STR_16 08C5                         STR_17 08D0  
               __CFG_WDTE$OFF 0000                         STR_18 08C8                         STR_19 081A  
             __end_of___ftdiv 1626               __end_of___ftneg 108A               __end_of___ftmul 16F7  
                       _T1CON 0010               __end_of___fttol 156E               __end_of___lwdiv 1365  
                       i1l118 0A1E                         i1l150 0101                         i1l128 0CC5  
                       i1l224 1069                         i1l181 0E3C               __end_of___lwmod 12E7  
                       i1l762 145C                         i1l595 11E9                         i1l756 1443  
                       i1l785 179F                         _RCREG 001A                         _TMR1H 000F  
                       _TMR1L 000E                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019                 __CFG_PWRTE$ON 0000                         _Fuzzy 0047  
                       _derro 0190               __end_of_dpowers 081A               __end_of_max_val 115A  
             __end_of_isdigit 10BC                 ___ftpack@sign 0074                         _trimf 0903  
              __CFG_BOREN$OFF 0000           __size_of_LCD_Cursor 0020                         pclath 000A  
            __end_of_PWM_Init 1226              __end_ofi1___wmul 1202                         ltemp0 007E  
                       ltemp1 0082                         ltemp2 0086                         ltemp3 0080  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
         i1___wmul@multiplier 0078                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 1000  
          __size_ofi1___lwdiv 003E                ??_LCD_WriteCmd 00C3                ?_LCD_WriteData 0070  
                 ?_USART_Init 00D2         i1TIMER0_Set@contagens 0070               __initialization 0015  
                __end_of_main 0B78                        ??_main 00E2                 ___fttol@sign1 0038  
                ?_TIMER0_Init 0070             __end_of_LCD_Clear 124F                    Fuzzy@a_242 0059  
                  Fuzzy@a_243 005B                        ?_Fuzzy 0070                    Fuzzy@freio 0052  
                  Fuzzy@reduz 0060                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _CCPR1L 0015                        _CCPR2L 001B  
                      _EECON2 018D              __end_of___ftpack 1475                        ?_trimf 0040  
                      i1l2311 1771                        i1l2303 1750                        i1l2321 178F  
                      i1l2313 1776                        i1l3201 0D04                        i1l2251 141C  
                      i1l2331 17C3                        i1l2323 179B                        i1l2315 177A  
                      i1l2261 1448                        i1l2253 1428                        i1l2341 17E6  
                      i1l2309 1765                        i1l3213 0D32                        i1l2263 1452  
                      i1l2255 142D                        i1l2247 1415                        i1l2327 17B1  
                      i1l2351 1586                        i1l2431 097C                        i1l3143 11E1  
                      i1l3231 0D77                        i1l3207 0D1B                        i1l2281 1720  
                      i1l3225 0D60                        i1l2603 16BB                        i1l2291 1736  
                      i1l2371 15E1                        i1l3171 1313                        i1l3163 12EF  
                      i1l3243 0DA5                        i1l3219 0D49                        i1l2285 1727  
                      i1l2357 159C                        i1l2461 0C23                        i1l2437 0A01  
                      i1l3165 12FD                        i1l3237 0D8E                        i1l2607 16CB  
                      i1l2623 14FA                        i1l2391 13D7                        i1l2455 0BF1  
                      i1l3175 131E                        i1l3255 0DDB                        i1l2641 152C  
                      i1l3281 0E38                        i1l3249 0DBC                        i1l2651 1554  
                      i1l2643 153C                        i1l2395 13FE                        i1l2379 1600  
                      i1l2467 0CA8                        i1l2803 03C8                        i1l3267 0DF8  
                      i1l3195 0CED                        i1l2573 163E                        i1l2653 1557  
                      i1l2591 1693                        i1l2823 04C3                        i1l2751 0102  
                      i1l2719 11BC                        i1l3279 0E37                        i1l2657 1565  
                      i1l2649 1549                        i1l2833 05A4                        i1l2809 042F  
                      i1l2595 16A3                        i1l2579 1654                        i1l2843 05F3  
                      i1l2827 053D                        i1l2755 011F                        i1l2837 05C1  
                      i1l2773 01D0                        i1l2783 02B1                        i1l2759 013C  
                      i1l2777 024A                        i1l2881 07FC                        i1l2873 07ED  
                      u220_25 1463                        u300_25 16AC                        i1l2799 0354  
                      u213_25 1421                        u215_25 143C                        u311_25 152D  
                      u231_25 1751                        u304_25 16CC                        u240_25 1790  
                      u217_25 144B                        u305_25 16D4                        u314_25 154B  
                      u234_25 1766                        u250_25 15E2                        u251_25 15F3  
                      u331_25 1132                        u308_25 1501                        u252_25 1601  
                      u237_25 177B                        u341_25 0352                        u255_21 13CA  
                      u255_22 13CB                        u255_23 13D0                        u255_24 13D1  
                      u343_25 042D                        u248_25 15AE                        u336_25 01CE  
                      u257_21 13F1                        u257_22 13F2                        u257_23 13F7  
                      u257_24 13F8                        u249_25 15C0                        u345_25 04C1  
            __end_of___lwtoft 10F3                        u338_25 02AF                        u347_25 05A2  
         __size_of_TIMER0_Set 0008                        u390_25 1314                        u382_25 11EA  
                      u295_25 1660                        u383_25 11F1                        u296_25 1672  
                      u386_25 12F2                        u299_25 16A4                        u388_25 12FE  
                      u389_25 130A                        _SSPADD 0093                        _SSPBUF 0013  
                      Fuzzy@a 0057              LCD_WriteCmd@Byte 00C4           i1_USART_WriteString 11BC  
                      ___ftge 13AE                     ??___aldiv 00CB                        ___wmul 08DE  
                   ??___ftadd 0029                _PWM_DutyCycle1 117A                _PWM_DutyCycle2 119B  
            ?_USART_WriteChar 0070                     ??___ftdiv 0036                     ??___ftneg 007C  
                      _deltaV 006D                     ??___ftmul 0020                     ??___fttol 0034  
                   ??___lwdiv 00C7                     ??___lwmod 00CF                        _fitemp 00A3  
       USART_ReceiveChar@byte 0074                        _trapmf 0B78                        _pulsos 00BF  
                      _status 0195         ___ftmul@f3_as_product 0025                     ??_max_val 007C  
           __end_ofi1___lwdiv 1325                     ??_isdigit 00C3                     ?_ADC_Init 0070  
                      saved_w 007E          ?i1_USART_WriteString 0071           __size_of_USART_Init 0049  
                      trimf@a 0043                        trimf@b 0046                        trimf@c 0049  
                      trimf@x 0040                     ??_sprintf 00D4                 ?i1_TIMER0_Set 0070  
     __end_of__initialization 0043                     ?_LCD_Init 0070                    ___ftadd@f1 0023  
                  ___ftadd@f2 0026               ??_LCD_WriteData 00C3                    ___ftge@ff1 0030  
                  ___ftge@ff2 0033                    ___ftdiv@f1 0033                    ___ftdiv@f2 0030  
                  ___ftdiv@f3 003B                    ___ftneg@f1 0020        __end_of_PWM_DutyCycle1 119B  
      __end_of_PWM_DutyCycle2 11BC                    ___ftmul@f1 0078                    ___ftmul@f2 007B  
                  ___fttol@f1 0030                __pcstackCOMMON 0070                 __end_of_Fuzzy 0755  
                __pidataBANK1 108A                  __pidataBANK3 08DC                 LCD_Cursor@Col 00C3  
               LCD_Cursor@Row 00C5                  ??_LCD_Cursor 00C4               _LCD_WriteString 124F  
               __end_of_trimf 0A27                    ___lwtoft@c 0078                     ?_PWM_Init 0070  
                   ?i1___wmul 0078                _OPTION_REGbits 0081                    ??_ADC_Init 00C3  
        __end_of_LCD_WriteCmd 110A         ??i1_USART_WriteString 0073                       ??_Fuzzy 007E  
   __size_ofi1_PWM_DutyCycle2 001B                ??i1_TIMER0_Set 0070                  sprintf@width 00DE  
                     ??_trimf 007C                    __pbssBANK0 006D                    __pbssBANK1 00A0  
                  __pbssBANK3 0190            __end_of_LCD_Cursor 117A                    ??_LCD_Init 00C5  
       i1USART_WriteChar@byte 0070                 Fuzzy@deltaRpm 0066               ?_PWM_DutyCycle1 00C3  
             ?_PWM_DutyCycle2 00C3                    __pmaintext 0A27                   Fuzzy@mantem 005D  
                     ?___ftge 0030                       ?___wmul 00C3                    __pintentry 0004  
                ??_TIMER0_Set 00C3                       _CCP1CON 0017                       _CCP2CON 001D  
                   ?___ftpack 0070                       ?_trapmf 0040                    ??_PWM_Init 00C3  
                  ??i1___wmul 007C                     ?___lwtoft 0078          __size_of_TIMER0_Init 000B  
                     _SSPCON2 0091                    __stringtab 0800            __end_of_TIMER0_Set 1078  
     __end_of_LCD_WriteString 1280                     _ADCResult 00BB                  ??_USART_Init 00D6  
           LCD_WriteData@Byte 00C4                       ___aldiv 0755               __size_of___ftge 005F  
                     ___ftadd 16F7                       ___ftdiv 156E                       ___ftneg 1080  
             __size_of___wmul 0025                       ___ftmul 1626                       ___fttol 14E0  
                     ___lwdiv 1325                       ___lwmod 12B1                    ??___ftpack 0075  
                     __ptext1 0E49                       __ptext2 10AC                       __ptext3 08DE  
                     __ptext4 12B1                       __ptext5 1325                       __ptext6 1280  
                     __ptext7 109F                       __ptext8 1365                       __ptext9 0755  
                  _pas_cooler 00EB                    ??___lwtoft 007B               __size_of_trapmf 0156  
                __size_of_ISR 017B                     _T1CONbits 0010                       _dpowers 0810  
           i1___lwdiv@divisor 0070                     _T2CONbits 0012                       _max_val 113C  
                     _isdigit 10AC             i1___lwdiv@counter 0077              ___aldiv@dividend 00C7  
                   _LCD_Clear 1226            __end_of_USART_Init 13AE                       _sprintf 0E49  
                     clrloop0 1079          end_of_initialization 0043                     _RCSTAbits 0018  
            ___aldiv@quotient 00CE                       trapmf@a 0043                       trapmf@b 0046  
                     trapmf@c 0049                       trapmf@d 004C                       trapmf@x 0040  
                     trimf@ua 004C          __end_ofi1_TIMER0_Set 1068         i1___wmul@multiplicand 007A  
       __size_of_LCD_WriteCmd 0017                     _PORTBbits 0006                     _PORTEbits 0009  
                  _setpointUI 00ED                    ?_LCD_Clear 0070              i1_PWM_DutyCycle2 1121  
           __size_of_ADC_Init 0012                     i1___lwdiv 12E7                  _contador_rb6 0193  
         PWM_DutyCycle1@valor 00C3                    _total_area 00B2           PWM_DutyCycle2@valor 00C3  
                 _CCP1CONbits 0017                   ___ftdiv@exp 003E                   _CCP2CONbits 001D  
                   _TXSTAbits 0098              ?_LCD_WriteString 00C5             __size_of_LCD_Init 006B  
                _LCD_WriteCmd 10F3                   ___ftmul@exp 0024                __end_of___ftge 140D  
              __end_of___wmul 0903             i1_USART_WriteChar 1068            ?i1_USART_WriteChar 0070  
              __end_of_trapmf 0CCE      __size_of_USART_WriteChar 000D             __size_of_PWM_Init 0024  
         start_initialization 0015             __size_ofi1___wmul 0023                   __end_of_ISR 0E49  
         ??i1_USART_WriteChar 0070                    ?i1___lwdiv 0070              ??_PWM_DutyCycle1 00C5  
            ??_PWM_DutyCycle2 00C5         __end_of_LCD_WriteData 1121             _USART_ReceiveChar 07E4  
                    ??___ftge 0036            ?_USART_ReceiveChar 0070     __end_ofi1_USART_WriteChar 1070  
                    ??___wmul 00C7                    init_fetch0 10BC                   __pdataBANK1 00E5  
                 __pdataBANK3 01AF   __end_ofi1_USART_WriteString 11DF                      ??_trapmf 007C  
         ??_USART_ReceiveChar 0073             __size_of___ftpack 0068                     ___latbits 0002  
           __size_of___lwtoft 0014                 __pcstackBANK0 0020                 __pcstackBANK1 00C3  
                 ??_LCD_Clear 00C5           __end_of__stringdata 08DB                  _isdigit$1449 00C3  
                 sprintf@_val 00D9                   sprintf@flag 00DD                   sprintf@prec 00D8  
   __end_of_USART_ReceiveChar 07FF         __size_ofi1_TIMER0_Set 0006              ___lwdiv@dividend 00C5  
         TIMER0_Set@contagens 00C3                  Fuzzy@aumenta 0063                      ?___aldiv 00C3  
                    ?___ftadd 0023                      ?___ftdiv 0030                      ?___ftneg 0020  
                    ?___ftmul 0078                      ?___fttol 0030                      ?___lwdiv 00C3  
                    ?___lwmod 00CB                     __pstrings 0800                     _ativa_fan 00A0  
               ??_TIMER0_Init 00C3            USART_Init@BaudRate 00D2                      ?_max_val 003C  
                    ?_isdigit 0070                      _ADC_Init 10CD                     _fop_rule1 00A6  
                   _fop_rule2 00A9                     _fop_rule3 00AC                __size_of_Fuzzy 070E  
            ___lwdiv@quotient 00C8                   ??i1___lwdiv 0074                      ?_sprintf 00D1  
              __size_of_trimf 0124             ??_USART_WriteChar 00C3                  i1_TIMER0_Set 1062  
             ___aldiv@divisor 00C3             interrupt_function 0004               ___aldiv@counter 00CC  
                    _LCD_Init 1475                ___wmul@product 00C7                     clear_ram0 1078  
                    _PIE1bits 008C                      _PIE2bits 008D                      _PIR1bits 000C  
                    _PIR2bits 000D                     _temp_lida 0197      __end_ofi1_PWM_DutyCycle2 113C  
                   _tempo_rb6 0199    __size_ofi1_USART_WriteChar 0008                   _display_rpm 01A5  
                 _display_pwm 019B                    _ADCON0bits 001F                   __stringbase 080F  
                  _ADCON1bits 009F                   __stringdata 081A                      _PWM_Init 1202  
           ___wmul@multiplier 00C3                      i1___wmul 11DF           __end_of_TIMER0_Init 109F  
  __size_of_USART_ReceiveChar 001B                    _EECON1bits 018C                      Fuzzy@tip 0054  
            __size_of___aldiv 008F              __size_of___ftadd 0109              __size_of___ftdiv 00B8  
            __size_of___ftneg 000A              __size_of___ftmul 00D1              __size_of___fttol 008E  
            __size_of___lwdiv 0040              __size_of___lwmod 0036                      ___ftpack 140D  
          __end_of__stringtab 0810                      ___lwtoft 10DF              __size_of_max_val 001E  
            __size_of_isdigit 0010               ___lwdiv@divisor 00C3               ___lwdiv@counter 00CA  
           _USART_WriteString 1280                      __ptext10 1070                      __ptext11 1094  
                    __ptext20 10F3                      __ptext12 1202                      __ptext21 10CD  
                    __ptext13 119B                      __ptext30 1121                      __ptext22 0CCE  
                    __ptext14 117A                      __ptext31 0903                      __ptext23 11DF  
                    __ptext15 124F                      __ptext40 1626                      __ptext32 0B78  
                    __ptext24 12E7                      __ptext16 110A                      __ptext41 140D  
                    __ptext33 1080                      __ptext25 1062                      __ptext17 1475  
                    __ptext34 156E                      __ptext26 07E4                      __ptext18 115A  
                    __ptext35 16F7                      __ptext27 11BC                      __ptext19 1226  
                    __ptext36 113C                      __ptext28 1068                      __ptext37 13AE  
                    __ptext29 0047                      __ptext38 10DF                      __ptext39 14E0  
          ?_USART_WriteString 00C4              __size_of_sprintf 01B7            i1___lwdiv@dividend 0072  
               __size_of_main 0151           USART_WriteChar@byte 00C3           ??_USART_WriteString 00C6  
      i1USART_WriteString@str 0071                      _setpoint 00E5                    _LCD_Cursor 115A  
    __size_of_LCD_WriteString 0031            i1___lwdiv@quotient 0075                   _TIMER0_Init 1094  
                  _INTCONbits 000B     __end_of_USART_WriteString 12B1                      max_val@a 003C  
                    max_val@b 003F                      init_ram0 10C0                      isdigit@c 00C4  
                    intlevel1 0000                     sprintf@ap 00D7                     sprintf@sp 00E0  
            ___lwmod@dividend 00CD                     stringcode 080A          USART_WriteString@str 00C4  
                  _TIMER0_Set 1070                      trapmf@ua 004F               _USART_WriteChar 109F  
                    sprintf@c 00E1                      sprintf@f 00D1               ___lwmod@divisor 00CB  
             ___lwmod@counter 00D0                      stringdir 080A                      stringtab 0800  
                ___aldiv@sign 00CD        __size_of_LCD_WriteData 0017  __size_ofi1_USART_WriteString 0023  
                 _SSPCON2bits 0091         i1PWM_DutyCycle2@valor 003E                    _SSPCONbits 0014  
                  _USART_Init 1365  
