

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jun 22 13:19:55 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  000E                     	;# 
   369  000E                     	;# 
   370  000F                     	;# 
   371  0010                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0013                     	;# 
   375  0014                     	;# 
   376  0015                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  0088                     	;# 
   394  0089                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  010E                     	;# 
   411  010F                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0088                     	;# 
   454  0089                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0094                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  018C                     	;# 
   593  018D                     	;# 
   594                           
   595                           	psect	idataBANK1
   596  13F6                     __pidataBANK1:	
   597                           
   598                           ;initializer for _antigo
   599  13F6  3400               	retlw	0
   600  13F7  3448               	retlw	72
   601  13F8  3442               	retlw	66
   602                           
   603                           ;initializer for _setpoint
   604  13F9  3400               	retlw	0
   605  13FA  34A0               	retlw	160
   606  13FB  3441               	retlw	65
   607                           
   608                           ;initializer for _pas_cooler
   609  13FC  3407               	retlw	7
   610  13FD  3400               	retlw	0
   611                           
   612                           ;initializer for _pwm
   613  13FE  3432               	retlw	50
   614  13FF  3400               	retlw	0
   615  000E                     _TMR1	set	14
   616  001F                     _ADCON0bits	set	31
   617  001E                     _ADRESH	set	30
   618  0017                     _CCP1CON	set	23
   619  0017                     _CCP1CONbits	set	23
   620  001D                     _CCP2CON	set	29
   621  001D                     _CCP2CONbits	set	29
   622  0015                     _CCPR1L	set	21
   623  001B                     _CCPR2L	set	27
   624  000B                     _INTCONbits	set	11
   625  000C                     _PIR1bits	set	12
   626  000D                     _PIR2bits	set	13
   627  0005                     _PORTA	set	5
   628  0006                     _PORTB	set	6
   629  0006                     _PORTBbits	set	6
   630  0007                     _PORTC	set	7
   631  0008                     _PORTD	set	8
   632  0009                     _PORTE	set	9
   633  0009                     _PORTEbits	set	9
   634  001A                     _RCREG	set	26
   635  0018                     _RCSTAbits	set	24
   636  0013                     _SSPBUF	set	19
   637  0014                     _SSPCONbits	set	20
   638  0010                     _T1CON	set	16
   639  0010                     _T1CONbits	set	16
   640  0012                     _T2CONbits	set	18
   641  0001                     _TMR0	set	1
   642  000F                     _TMR1H	set	15
   643  000E                     _TMR1L	set	14
   644  0019                     _TXREG	set	25
   645  00C1                     _OERR	set	193
   646  009F                     _ADCON1bits	set	159
   647  009E                     _ADRESL	set	158
   648  0081                     _OPTION_REGbits	set	129
   649  008C                     _PIE1bits	set	140
   650  008D                     _PIE2bits	set	141
   651  0092                     _PR2	set	146
   652  0099                     _SPBRG	set	153
   653  0093                     _SSPADD	set	147
   654  0091                     _SSPCON2	set	145
   655  0091                     _SSPCON2bits	set	145
   656  0094                     _SSPSTATbits	set	148
   657  0085                     _TRISA	set	133
   658  0086                     _TRISB	set	134
   659  0087                     _TRISC	set	135
   660  0088                     _TRISD	set	136
   661  0089                     _TRISE	set	137
   662  0098                     _TXSTAbits	set	152
   663  010D                     _EEADR	set	269
   664  010C                     _EEDATA	set	268
   665  018C                     _EECON1bits	set	396
   666  018D                     _EECON2	set	397
   667                           
   668                           	psect	strings
   669  1000                     __pstrings:	
   670  1000                     stringtab:	
   671  1000                     __stringtab:	
   672                           
   673                           ;	String table - string pointers are 1 byte each
   674  1000  1BFF               	btfsc	btemp+1,7
   675  1001  280A               	ljmp	stringcode
   676  1002  1383               	bcf	3,7
   677  1003  187F               	btfsc	btemp+1,0
   678  1004  1783               	bsf	3,7
   679  1005  0800               	movf	0,w
   680  1006  0A84               	incf	4,f
   681  1007  1903               	skipnz
   682  1008  0AFF               	incf	btemp+1,f
   683  1009  0008               	return
   684  100A                     stringcode:	
   685  100A                     stringdir:	
   686  100A  3010               	movlw	high stringdir
   687  100B  008A               	movwf	10
   688  100C  0804               	movf	4,w
   689  100D  0A84               	incf	4,f
   690  100E  0782               	addwf	2,f
   691  100F                     __stringbase:	
   692  100F  3400               	retlw	0
   693  1010                     __end_of__stringtab:	
   694  1010                     __stringdata:	
   695  1010                     STR_4:	
   696  1010  340A               	retlw	10
   697  1011  340D               	retlw	13
   698  1012  3420               	retlw	32	;' '
   699  1013  342D               	retlw	45	;'-'
   700  1014  342D               	retlw	45	;'-'
   701  1015  342D               	retlw	45	;'-'
   702  1016  342D               	retlw	45	;'-'
   703  1017  342D               	retlw	45	;'-'
   704  1018  342D               	retlw	45	;'-'
   705  1019  342D               	retlw	45	;'-'
   706  101A  3420               	retlw	32	;' '
   707  101B  3445               	retlw	69	;'E'
   708  101C  3453               	retlw	83	;'S'
   709  101D  3454               	retlw	84	;'T'
   710  101E  344F               	retlw	79	;'O'
   711  101F  3455               	retlw	85	;'U'
   712  1020  3452               	retlw	82	;'R'
   713  1021  344F               	retlw	79	;'O'
   714  1022  3420               	retlw	32	;' '
   715  1023  3444               	retlw	68	;'D'
   716  1024  3445               	retlw	69	;'E'
   717  1025  3420               	retlw	32	;' '
   718  1026  3450               	retlw	80	;'P'
   719  1027  3449               	retlw	73	;'I'
   720  1028  344C               	retlw	76	;'L'
   721  1029  3448               	retlw	72	;'H'
   722  102A  3441               	retlw	65	;'A'
   723  102B  3420               	retlw	32	;' '
   724  102C  342D               	retlw	45	;'-'
   725  102D  342D               	retlw	45	;'-'
   726  102E  342D               	retlw	45	;'-'
   727  102F  342D               	retlw	45	;'-'
   728  1030  342D               	retlw	45	;'-'
   729  1031  342D               	retlw	45	;'-'
   730  1032  342D               	retlw	45	;'-'
   731  1033  3420               	retlw	32	;' '
   732  1034  340A               	retlw	10
   733  1035  340D               	retlw	13
   734  1036  3420               	retlw	32	;' '
   735  1037  3400               	retlw	0
   736  1038                     STR_2:	
   737  1038  3449               	retlw	73	;'I'
   738  1039  346E               	retlw	110	;'n'
   739  103A  3469               	retlw	105	;'i'
   740  103B  3463               	retlw	99	;'c'
   741  103C  3469               	retlw	105	;'i'
   742  103D  3461               	retlw	97	;'a'
   743  103E  346C               	retlw	108	;'l'
   744  103F  3469               	retlw	105	;'i'
   745  1040  347A               	retlw	122	;'z'
   746  1041  3461               	retlw	97	;'a'
   747  1042  346E               	retlw	110	;'n'
   748  1043  3464               	retlw	100	;'d'
   749  1044  346F               	retlw	111	;'o'
   750  1045  342E               	retlw	46	;'.'
   751  1046  342E               	retlw	46	;'.'
   752  1047  342E               	retlw	46	;'.'
   753  1048  3400               	retlw	0
   754  1049                     STR_1:	
   755  1049  340A               	retlw	10
   756  104A  340D               	retlw	13
   757  104B  3464               	retlw	100	;'d'
   758  104C  3465               	retlw	101	;'e'
   759  104D  3473               	retlw	115	;'s'
   760  104E  346C               	retlw	108	;'l'
   761  104F  3469               	retlw	105	;'i'
   762  1050  3467               	retlw	103	;'g'
   763  1051  3461               	retlw	97	;'a'
   764  1052  3464               	retlw	100	;'d'
   765  1053  346F               	retlw	111	;'o'
   766  1054  340A               	retlw	10
   767  1055  340D               	retlw	13
   768  1056  3400               	retlw	0
   769  1057                     STR_3:	
   770  1057  346B               	retlw	107	;'k'
   771  1058  346D               	retlw	109	;'m'
   772  1059  3448               	retlw	72	;'H'
   773  105A  343A               	retlw	58	;':'
   774  105B  3420               	retlw	32	;' '
   775  105C  3400               	retlw	0
   776  105D                     __end_of__stringdata:	
   777                           
   778                           ; #config settings
   779  0000                     
   780                           	psect	cinit
   781  0015                     start_initialization:	
   782  0015                     __initialization:	
   783                           
   784                           ; Clear objects allocated to BANK0
   785  0015  01ED               	clrf	__pbssBANK0& (0+127)
   786  0016  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   787                           
   788                           ; Clear objects allocated to BANK1
   789  0017  1383               	bcf	3,7	;select IRP bank0
   790  0018  30A0               	movlw	low __pbssBANK1
   791  0019  0084               	movwf	4
   792  001A  30C9               	movlw	low (__pbssBANK1+41)
   793  001B  160A  118A  23E4  120A  118A  	fcall	clear_ram0
   794                           
   795                           ; Clear objects allocated to BANK3
   796  0020  1783               	bsf	3,7	;select IRP bank2
   797  0021  3090               	movlw	low __pbssBANK3
   798  0022  0084               	movwf	4
   799  0023  30AA               	movlw	low (__pbssBANK3+26)
   800  0024  160A  118A  23E4  120A  118A  	fcall	clear_ram0
   801                           
   802                           ; Initialize objects allocated to BANK1
   803  0029  1383               	bcf	3,7	;select IRP bank0
   804  002A  30ED               	movlw	low (__pdataBANK1+10)
   805  002B  00FD               	movwf	btemp+-1
   806  002C  3013               	movlw	high __pidataBANK1
   807  002D  00FE               	movwf	btemp
   808  002E  30F6               	movlw	low __pidataBANK1
   809  002F  00FF               	movwf	btemp+1
   810  0030  30E3               	movlw	low __pdataBANK1
   811  0031  0084               	movwf	4
   812  0032  160A  118A  2404   	fcall	init_ram0
   813  0035                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  0035                     __end_of__initialization:	
   817  0035  0183               	clrf	3
   818  0036  120A  158A  2A5D   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  006D                     __pbssBANK0:	
   822  006D                     _deltaV:	
   823  006D                     	ds	2
   824                           
   825                           	psect	bssBANK1
   826  00A0                     __pbssBANK1:	
   827  00A0                     _ativa_fan:	
   828  00A0                     	ds	3
   829  00A3                     _fitemp:	
   830  00A3                     	ds	3
   831  00A6                     _fop_rule1:	
   832  00A6                     	ds	3
   833  00A9                     _fop_rule2:	
   834  00A9                     	ds	3
   835  00AC                     _fop_rule3:	
   836  00AC                     	ds	3
   837  00AF                     _sum:	
   838  00AF                     	ds	3
   839  00B2                     _total_area:	
   840  00B2                     	ds	3
   841  00B5                     _x:	
   842  00B5                     	ds	3
   843  00B8                     _y:	
   844  00B8                     	ds	3
   845  00BB                     _ADCResult:	
   846  00BB                     	ds	2
   847  00BD                     _antigoUI:	
   848  00BD                     	ds	2
   849  00BF                     _contagens_tm0:	
   850  00BF                     	ds	2
   851  00C1                     _pulsos:	
   852  00C1                     	ds	2
   853  00C3                     _rpm:	
   854  00C3                     	ds	2
   855  00C5                     _setpointUI:	
   856  00C5                     	ds	2
   857  00C7                     _status:	
   858  00C7                     	ds	2
   859                           
   860                           	psect	dataBANK1
   861  00E3                     __pdataBANK1:	
   862  00E3                     _antigo:	
   863  00E3                     	ds	3
   864  00E6                     _setpoint:	
   865  00E6                     	ds	3
   866  00E9                     _pas_cooler:	
   867  00E9                     	ds	2
   868  00EB                     _pwm:	
   869  00EB                     	ds	2
   870                           
   871                           	psect	bssBANK3
   872  0190                     __pbssBANK3:	
   873  0190                     _buffer:	
   874  0190                     	ds	16
   875  01A0                     _display_rpm:	
   876  01A0                     	ds	10
   877                           
   878                           	psect	clrtext
   879  13E4                     clear_ram0:	
   880                           ;	Called with FSR containing the base address, and
   881                           ;	W with the last address+1
   882                           
   883  13E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   884  13E5                     clrloop0:	
   885  13E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   886  13E6  0A84               	incf	4,f	;increment pointer
   887  13E7  0604               	xorwf	4,w	;XOR with final address
   888  13E8  1903               	btfsc	3,2	;have we reached the end yet?
   889  13E9  3400               	retlw	0	;all done for this memory range, return
   890  13EA  0604               	xorwf	4,w	;XOR again to restore value
   891  13EB  2BE5               	goto	clrloop0	;do the next byte
   892                           
   893                           	psect	inittext
   894  1400                     init_fetch0:	
   895                           ;	Called with low address in FSR and high address in W
   896                           
   897  1400  087E               	movf	126,w
   898  1401  008A               	movwf	10
   899  1402  087F               	movf	127,w
   900  1403  0082               	movwf	2
   901  1404                     init_ram0:	
   902                           ;Called with:
   903                           ;	high address of idata address in btemp 
   904                           ;	low address of idata address in btemp+1 
   905                           ;	low address of data in FSR
   906                           ;	high address + 1 of data in btemp-1
   907                           
   908  1404  2400  160A  118A   	fcall	init_fetch0
   909  1407  0080               	movwf	0
   910  1408  0A84               	incf	4,f
   911  1409  0804               	movf	4,w
   912  140A  067D               	xorwf	125,w
   913  140B  1903               	btfsc	3,2
   914  140C  3400               	retlw	0
   915  140D  0AFF               	incf	127,f
   916  140E  1903               	btfsc	3,2
   917  140F  0AFE               	incf	126,f
   918  1410  2C04               	goto	init_ram0
   919                           
   920                           	psect	cstackBANK1
   921  00C9                     __pcstackBANK1:	
   922  00C9                     ?_PWM_DutyCycle2:	
   923  00C9                     ??_TIMER0_Set:	
   924                           ; 0 bytes @ 0x0
   925                           
   926  00C9                     ??_TIMER0_Init:	
   927                           ; 0 bytes @ 0x0
   928                           
   929  00C9                     ??_ADC_Init:	
   930                           ; 0 bytes @ 0x0
   931                           
   932  00C9                     ??_PWM_Init:	
   933                           ; 0 bytes @ 0x0
   934                           
   935  00C9                     ?_LCD_Cursor:	
   936                           ; 0 bytes @ 0x0
   937                           
   938  00C9                     ?_PWM_DutyCycle1:	
   939                           ; 0 bytes @ 0x0
   940                           
   941  00C9                     ??_LCD_WriteCmd:	
   942                           ; 0 bytes @ 0x0
   943                           
   944  00C9                     ??_LCD_WriteData:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  00C9                     ?___aldiv:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  00C9                     TIMER0_Set@contagens:	
   951                           ; 4 bytes @ 0x0
   952                           
   953  00C9                     LCD_Cursor@Col:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  00C9                     PWM_DutyCycle1@valor:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  00C9                     PWM_DutyCycle2@valor:	
   960                           ; 2 bytes @ 0x0
   961                           
   962  00C9                     ___aldiv@divisor:	
   963                           ; 2 bytes @ 0x0
   964                           
   965                           
   966                           ; 4 bytes @ 0x0
   967  00C9                     	ds	1
   968  00CA                     ??_LCD_Cursor:	
   969  00CA                     LCD_WriteCmd@Byte:	
   970                           ; 0 bytes @ 0x1
   971                           
   972  00CA                     LCD_WriteData@Byte:	
   973                           ; 1 bytes @ 0x1
   974                           
   975                           
   976                           ; 1 bytes @ 0x1
   977  00CA                     	ds	1
   978  00CB                     ??_PWM_DutyCycle2:	
   979  00CB                     ??_LCD_Init:	
   980                           ; 0 bytes @ 0x2
   981                           
   982  00CB                     ?_LCD_WriteString:	
   983                           ; 0 bytes @ 0x2
   984                           
   985  00CB                     ??_PWM_DutyCycle1:	
   986                           ; 0 bytes @ 0x2
   987                           
   988  00CB                     ??_LCD_Clear:	
   989                           ; 0 bytes @ 0x2
   990                           
   991  00CB                     LCD_Cursor@Row:	
   992                           ; 0 bytes @ 0x2
   993                           
   994  00CB                     LCD_WriteString@Str:	
   995                           ; 1 bytes @ 0x2
   996                           
   997                           
   998                           ; 2 bytes @ 0x2
   999  00CB                     	ds	2
  1000  00CD                     ??_LCD_WriteString:	
  1001  00CD                     ___aldiv@dividend:	
  1002                           ; 0 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  00CD                     	ds	4
  1007  00D1                     ??___aldiv:	
  1008                           
  1009                           ; 0 bytes @ 0x8
  1010  00D1                     	ds	1
  1011  00D2                     ___aldiv@counter:	
  1012                           
  1013                           ; 1 bytes @ 0x9
  1014  00D2                     	ds	1
  1015  00D3                     ___aldiv@sign:	
  1016                           
  1017                           ; 1 bytes @ 0xA
  1018  00D3                     	ds	1
  1019  00D4                     ___aldiv@quotient:	
  1020                           
  1021                           ; 4 bytes @ 0xB
  1022  00D4                     	ds	4
  1023  00D8                     ?_USART_Init:	
  1024  00D8                     USART_Init@BaudRate:	
  1025                           ; 0 bytes @ 0xF
  1026                           
  1027                           
  1028                           ; 4 bytes @ 0xF
  1029  00D8                     	ds	4
  1030  00DC                     ??_USART_Init:	
  1031                           
  1032                           ; 0 bytes @ 0x13
  1033  00DC                     	ds	4
  1034  00E0                     ??_main:	
  1035                           
  1036                           ; 0 bytes @ 0x17
  1037  00E0                     	ds	3
  1038                           
  1039                           	psect	cstackCOMMON
  1040  0070                     __pcstackCOMMON:	
  1041  0070                     ?_USART_WriteChar:	
  1042  0070                     ??_USART_WriteChar:	
  1043                           ; 0 bytes @ 0x0
  1044                           
  1045  0070                     ?_USART_WriteString:	
  1046                           ; 0 bytes @ 0x0
  1047                           
  1048  0070                     ?_TIMER0_Set:	
  1049                           ; 0 bytes @ 0x0
  1050                           
  1051  0070                     ?_TIMER0_Init:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ?_ADC_Init:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057  0070                     ?_PWM_Init:	
  1058                           ; 0 bytes @ 0x0
  1059                           
  1060  0070                     ?_LCD_Init:	
  1061                           ; 0 bytes @ 0x0
  1062                           
  1063  0070                     ?_LCD_Clear:	
  1064                           ; 0 bytes @ 0x0
  1065                           
  1066  0070                     ?_send:	
  1067                           ; 0 bytes @ 0x0
  1068                           
  1069  0070                     ?_Fuzzy:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?_ISR:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ?_main:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  0070                     ?_LCD_WriteCmd:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  0070                     ?_LCD_WriteData:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?i1_TIMER0_Set:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ??i1_TIMER0_Set:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_USART_ReceiveChar:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?___lwdiv:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0070                     ?___ftpack:	
  1097                           ; 2 bytes @ 0x0
  1098                           
  1099  0070                     USART_WriteChar@byte:	
  1100                           ; 3 bytes @ 0x0
  1101                           
  1102  0070                     i1TIMER0_Set@contagens:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     ___lwdiv@divisor:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     ___ftpack@arg:	
  1109                           ; 2 bytes @ 0x0
  1110                           
  1111                           
  1112                           ; 3 bytes @ 0x0
  1113  0070                     	ds	1
  1114  0071                     ??_USART_WriteString:	
  1115                           
  1116                           ; 0 bytes @ 0x1
  1117  0071                     	ds	1
  1118  0072                     USART_WriteString@str:	
  1119  0072                     ___lwdiv@dividend:	
  1120                           ; 1 bytes @ 0x2
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x2
  1124  0072                     	ds	1
  1125  0073                     ??_USART_ReceiveChar:	
  1126  0073                     ___ftpack@exp:	
  1127                           ; 0 bytes @ 0x3
  1128                           
  1129                           
  1130                           ; 1 bytes @ 0x3
  1131  0073                     	ds	1
  1132  0074                     ??___lwdiv:	
  1133  0074                     USART_ReceiveChar@byte:	
  1134                           ; 0 bytes @ 0x4
  1135                           
  1136  0074                     ___ftpack@sign:	
  1137                           ; 1 bytes @ 0x4
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x4
  1141  0074                     	ds	1
  1142  0075                     ??___ftpack:	
  1143  0075                     ___lwdiv@quotient:	
  1144                           ; 0 bytes @ 0x5
  1145                           
  1146                           
  1147                           ; 2 bytes @ 0x5
  1148  0075                     	ds	2
  1149  0077                     ___lwdiv@counter:	
  1150                           
  1151                           ; 1 bytes @ 0x7
  1152  0077                     	ds	1
  1153  0078                     ?___wmul:	
  1154  0078                     ?___ftmul:	
  1155                           ; 2 bytes @ 0x8
  1156                           
  1157  0078                     ?___lwtoft:	
  1158                           ; 3 bytes @ 0x8
  1159                           
  1160  0078                     ___wmul@multiplier:	
  1161                           ; 3 bytes @ 0x8
  1162                           
  1163  0078                     ___lwtoft@c:	
  1164                           ; 2 bytes @ 0x8
  1165                           
  1166  0078                     ___ftmul@f1:	
  1167                           ; 2 bytes @ 0x8
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0x8
  1171  0078                     	ds	2
  1172  007A                     ___wmul@multiplicand:	
  1173                           
  1174                           ; 2 bytes @ 0xA
  1175  007A                     	ds	1
  1176  007B                     ??___lwtoft:	
  1177  007B                     ___ftmul@f2:	
  1178                           ; 0 bytes @ 0xB
  1179                           
  1180                           
  1181                           ; 3 bytes @ 0xB
  1182  007B                     	ds	1
  1183  007C                     ??_trimf:	
  1184  007C                     ??_trapmf:	
  1185                           ; 0 bytes @ 0xC
  1186                           
  1187  007C                     ??_max_val:	
  1188                           ; 0 bytes @ 0xC
  1189                           
  1190  007C                     ??___wmul:	
  1191                           ; 0 bytes @ 0xC
  1192                           
  1193  007C                     ??___ftneg:	
  1194                           ; 0 bytes @ 0xC
  1195                           
  1196  007C                     ??i1_PWM_DutyCycle2:	
  1197                           ; 0 bytes @ 0xC
  1198                           
  1199  007C                     ___wmul@product:	
  1200                           ; 0 bytes @ 0xC
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0xC
  1204  007C                     	ds	2
  1205  007E                     ??_Fuzzy:	
  1206                           
  1207                           	psect	cstackBANK0
  1208  0020                     __pcstackBANK0:	
  1209                           ; 0 bytes @ 0xE
  1210                           
  1211  0020                     ??_send:	
  1212  0020                     ??___ftmul:	
  1213                           ; 0 bytes @ 0x0
  1214                           
  1215  0020                     ?___ftneg:	
  1216                           ; 0 bytes @ 0x0
  1217                           
  1218  0020                     ___ftneg@f1:	
  1219                           ; 3 bytes @ 0x0
  1220                           
  1221                           
  1222                           ; 3 bytes @ 0x0
  1223  0020                     	ds	1
  1224  0021                     send@checksum:	
  1225                           
  1226                           ; 1 bytes @ 0x1
  1227  0021                     	ds	1
  1228  0022                     send@velocidade:	
  1229                           
  1230                           ; 2 bytes @ 0x2
  1231  0022                     	ds	1
  1232  0023                     ?___ftadd:	
  1233  0023                     ___ftadd@f1:	
  1234                           ; 3 bytes @ 0x3
  1235                           
  1236                           
  1237                           ; 3 bytes @ 0x3
  1238  0023                     	ds	1
  1239  0024                     send@index:	
  1240  0024                     ___ftmul@exp:	
  1241                           ; 1 bytes @ 0x4
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x4
  1245  0024                     	ds	1
  1246  0025                     ___ftmul@f3_as_product:	
  1247                           
  1248                           ; 3 bytes @ 0x5
  1249  0025                     	ds	1
  1250  0026                     ___ftadd@f2:	
  1251                           
  1252                           ; 3 bytes @ 0x6
  1253  0026                     	ds	2
  1254  0028                     ___ftmul@cntr:	
  1255                           
  1256                           ; 1 bytes @ 0x8
  1257  0028                     	ds	1
  1258  0029                     ??___ftadd:	
  1259  0029                     ___ftmul@sign:	
  1260                           ; 0 bytes @ 0x9
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x9
  1264  0029                     	ds	4
  1265  002D                     ___ftadd@sign:	
  1266                           
  1267                           ; 1 bytes @ 0xD
  1268  002D                     	ds	1
  1269  002E                     ___ftadd@exp2:	
  1270                           
  1271                           ; 1 bytes @ 0xE
  1272  002E                     	ds	1
  1273  002F                     ___ftadd@exp1:	
  1274                           
  1275                           ; 1 bytes @ 0xF
  1276  002F                     	ds	1
  1277  0030                     ?___ftge:	
  1278  0030                     ?___ftdiv:	
  1279                           ; 1 bit 
  1280                           
  1281  0030                     ?___fttol:	
  1282                           ; 3 bytes @ 0x10
  1283                           
  1284  0030                     ___ftdiv@f2:	
  1285                           ; 4 bytes @ 0x10
  1286                           
  1287  0030                     ___ftge@ff1:	
  1288                           ; 3 bytes @ 0x10
  1289                           
  1290  0030                     ___fttol@f1:	
  1291                           ; 3 bytes @ 0x10
  1292                           
  1293                           
  1294                           ; 3 bytes @ 0x10
  1295  0030                     	ds	3
  1296  0033                     ___ftdiv@f1:	
  1297  0033                     ___ftge@ff2:	
  1298                           ; 3 bytes @ 0x13
  1299                           
  1300                           
  1301                           ; 3 bytes @ 0x13
  1302  0033                     	ds	1
  1303  0034                     ??___fttol:	
  1304                           
  1305                           ; 0 bytes @ 0x14
  1306  0034                     	ds	2
  1307  0036                     ??___ftdiv:	
  1308  0036                     ??___ftge:	
  1309                           ; 0 bytes @ 0x16
  1310                           
  1311                           
  1312                           ; 0 bytes @ 0x16
  1313  0036                     	ds	2
  1314  0038                     ___fttol@sign1:	
  1315                           
  1316                           ; 1 bytes @ 0x18
  1317  0038                     	ds	1
  1318  0039                     ___fttol@lval:	
  1319                           
  1320                           ; 4 bytes @ 0x19
  1321  0039                     	ds	1
  1322  003A                     ___ftdiv@cntr:	
  1323                           
  1324                           ; 1 bytes @ 0x1A
  1325  003A                     	ds	1
  1326  003B                     ___ftdiv@f3:	
  1327                           
  1328                           ; 3 bytes @ 0x1B
  1329  003B                     	ds	1
  1330  003C                     ?_max_val:	
  1331  003C                     max_val@a:	
  1332                           ; 3 bytes @ 0x1C
  1333                           
  1334                           
  1335                           ; 3 bytes @ 0x1C
  1336  003C                     	ds	1
  1337  003D                     ___fttol@exp1:	
  1338                           
  1339                           ; 1 bytes @ 0x1D
  1340  003D                     	ds	1
  1341  003E                     ?i1_PWM_DutyCycle2:	
  1342  003E                     ___ftdiv@exp:	
  1343                           ; 0 bytes @ 0x1E
  1344                           
  1345  003E                     i1PWM_DutyCycle2@valor:	
  1346                           ; 1 bytes @ 0x1E
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x1E
  1350  003E                     	ds	1
  1351  003F                     ___ftdiv@sign:	
  1352  003F                     max_val@b:	
  1353                           ; 1 bytes @ 0x1F
  1354                           
  1355                           
  1356                           ; 3 bytes @ 0x1F
  1357  003F                     	ds	1
  1358  0040                     ?_trimf:	
  1359  0040                     ?_trapmf:	
  1360                           ; 3 bytes @ 0x20
  1361                           
  1362  0040                     trimf@x:	
  1363                           ; 3 bytes @ 0x20
  1364                           
  1365  0040                     trapmf@x:	
  1366                           ; 3 bytes @ 0x20
  1367                           
  1368                           
  1369                           ; 3 bytes @ 0x20
  1370  0040                     	ds	3
  1371  0043                     trimf@a:	
  1372  0043                     trapmf@a:	
  1373                           ; 3 bytes @ 0x23
  1374                           
  1375                           
  1376                           ; 3 bytes @ 0x23
  1377  0043                     	ds	3
  1378  0046                     trimf@b:	
  1379  0046                     trapmf@b:	
  1380                           ; 3 bytes @ 0x26
  1381                           
  1382                           
  1383                           ; 3 bytes @ 0x26
  1384  0046                     	ds	3
  1385  0049                     trimf@c:	
  1386  0049                     trapmf@c:	
  1387                           ; 3 bytes @ 0x29
  1388                           
  1389                           
  1390                           ; 3 bytes @ 0x29
  1391  0049                     	ds	3
  1392  004C                     trimf@ua:	
  1393  004C                     trapmf@d:	
  1394                           ; 3 bytes @ 0x2C
  1395                           
  1396                           
  1397                           ; 3 bytes @ 0x2C
  1398  004C                     	ds	3
  1399  004F                     trapmf@ua:	
  1400                           
  1401                           ; 3 bytes @ 0x2F
  1402  004F                     	ds	3
  1403  0052                     Fuzzy@freio:	
  1404                           
  1405                           ; 2 bytes @ 0x32
  1406  0052                     	ds	2
  1407  0054                     Fuzzy@tip:	
  1408                           
  1409                           ; 3 bytes @ 0x34
  1410  0054                     	ds	3
  1411  0057                     Fuzzy@a:	
  1412                           
  1413                           ; 2 bytes @ 0x37
  1414  0057                     	ds	2
  1415  0059                     Fuzzy@a_242:	
  1416                           
  1417                           ; 2 bytes @ 0x39
  1418  0059                     	ds	2
  1419  005B                     Fuzzy@a_243:	
  1420                           
  1421                           ; 2 bytes @ 0x3B
  1422  005B                     	ds	2
  1423  005D                     Fuzzy@mantem:	
  1424                           
  1425                           ; 3 bytes @ 0x3D
  1426  005D                     	ds	3
  1427  0060                     Fuzzy@reduz:	
  1428                           
  1429                           ; 3 bytes @ 0x40
  1430  0060                     	ds	3
  1431  0063                     Fuzzy@aumenta:	
  1432                           
  1433                           ; 3 bytes @ 0x43
  1434  0063                     	ds	3
  1435  0066                     Fuzzy@deltaRpm:	
  1436                           
  1437                           ; 3 bytes @ 0x46
  1438  0066                     	ds	3
  1439  0069                     ??_ISR:	
  1440                           
  1441                           ; 0 bytes @ 0x49
  1442  0069                     	ds	4
  1443                           
  1444                           	psect	maintext
  1445  0A5D                     __pmaintext:	
  1446 ;;
  1447 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1448 ;;
  1449 ;; *************** function _main *****************
  1450 ;; Defined at:
  1451 ;;		line 518 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;		None               void
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 17F/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0
  1467 ;;      Temps:          0       0       3       0       0
  1468 ;;      Totals:         0       0       3       0       0
  1469 ;;Total ram usage:        3 bytes
  1470 ;; Hardware stack levels required when called:    7
  1471 ;; This function calls:
  1472 ;;		_ADC_Init
  1473 ;;		_LCD_Clear
  1474 ;;		_LCD_Cursor
  1475 ;;		_LCD_Init
  1476 ;;		_LCD_WriteString
  1477 ;;		_PWM_DutyCycle1
  1478 ;;		_PWM_DutyCycle2
  1479 ;;		_PWM_Init
  1480 ;;		_TIMER0_Init
  1481 ;;		_TIMER0_Set
  1482 ;;		_USART_Init
  1483 ;; This function is called by:
  1484 ;;		Startup code after reset
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _main
  1490  0A5D                     _main:	
  1491                           
  1492                           ;main.c: 520: TRISA = 0b00000001;
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1496  0A5D  3001               	movlw	1
  1497  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  1498  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  1499  0A60  0085               	movwf	5	;volatile
  1500                           
  1501                           ;main.c: 521: PORTA = 0b00000001;
  1502  0A61  3001               	movlw	1
  1503  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0A64  0085               	movwf	5	;volatile
  1506                           
  1507                           ;main.c: 522: TRISB = 0b00000000;
  1508  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0A67  0186               	clrf	6	;volatile
  1511                           
  1512                           ;main.c: 523: PORTB = 0b00000000;
  1513  0A68  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0A69  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0A6A  0186               	clrf	6	;volatile
  1516                           
  1517                           ;main.c: 524: TRISC = 0b10000001;
  1518  0A6B  3081               	movlw	129
  1519  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0A6E  0087               	movwf	7	;volatile
  1522                           
  1523                           ;main.c: 525: PORTC = 0b11000000;
  1524  0A6F  30C0               	movlw	192
  1525  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0A72  0087               	movwf	7	;volatile
  1528                           
  1529                           ;main.c: 526: TRISD = 0b00000000;
  1530  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0A75  0188               	clrf	8	;volatile
  1533                           
  1534                           ;main.c: 527: PORTD = 0b00000000;
  1535  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0A78  0188               	clrf	8	;volatile
  1538                           
  1539                           ;main.c: 528: TRISE = 0b00000000;
  1540  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0A7B  0189               	clrf	9	;volatile
  1543                           
  1544                           ;main.c: 529: PORTE = 0b00000000;
  1545  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0A7E  0189               	clrf	9	;volatile
  1548                           
  1549                           ;main.c: 532: T1CON = 0x03;
  1550  0A7F  3003               	movlw	3
  1551  0A80  0090               	movwf	16	;volatile
  1552                           
  1553                           ;main.c: 533: TMR1L = 0x00;
  1554  0A81  018E               	clrf	14	;volatile
  1555                           
  1556                           ;main.c: 534: TMR1H = 0x00;
  1557  0A82  018F               	clrf	15	;volatile
  1558                           
  1559                           ;main.c: 537: USART_Init(115200);
  1560  0A83  3000               	movlw	0
  1561  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0A85  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0A86  00DB               	movwf	(USART_Init@BaudRate+3)^(0+128)
  1564  0A87  3001               	movlw	1
  1565  0A88  00DA               	movwf	(USART_Init@BaudRate+2)^(0+128)
  1566  0A89  30C2               	movlw	194
  1567  0A8A  00D9               	movwf	(USART_Init@BaudRate+1)^(0+128)
  1568  0A8B  3000               	movlw	0
  1569  0A8C  00D8               	movwf	USART_Init@BaudRate^(0+128)
  1570  0A8D  160A  118A  25F7  120A  158A  	fcall	_USART_Init
  1571                           
  1572                           ;main.c: 538: TIMER0_Init();
  1573  0A92  120A  158A  2003  120A  158A  	fcall	_TIMER0_Init
  1574                           
  1575                           ;main.c: 539: ADC_Init();
  1576  0A97  160A  118A  2411  120A  158A  	fcall	_ADC_Init
  1577                           
  1578                           ;main.c: 540: PWM_Init();
  1579  0A9C  160A  118A  253B  120A  158A  	fcall	_PWM_Init
  1580                           
  1581                           ;main.c: 541: LCD_Init();
  1582  0AA1  160A  118A  2707  120A  158A  	fcall	_LCD_Init
  1583                           
  1584                           ;main.c: 544: INTCONbits.PEIE = 1;
  1585  0AA6  170B               	bsf	11,6	;volatile
  1586                           
  1587                           ;main.c: 545: INTCONbits.GIE = 1;
  1588  0AA7  178B               	bsf	11,7	;volatile
  1589                           
  1590                           ;main.c: 552: LCD_Init();
  1591  0AA8  160A  118A  2707  120A  158A  	fcall	_LCD_Init
  1592                           
  1593                           ;main.c: 553: LCD_Cursor(0,0);
  1594  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0AAF  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1597  0AB0  3000               	movlw	0
  1598  0AB1  160A  118A  24B6  120A  158A  	fcall	_LCD_Cursor
  1599                           
  1600                           ;main.c: 554: LCD_WriteString("Inicializando...");
  1601  0AB6  3029               	movlw	low (STR_2-__stringbase)
  1602  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  1603  0AB8  1303               	bcf	3,6	;RP1=0, select bank1
  1604  0AB9  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1605  0ABA  3080               	movlw	128
  1606  0ABB  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1607  0ABC  160A  118A  2588  120A  158A  	fcall	_LCD_WriteString
  1608                           
  1609                           ;main.c: 557: PWM_DutyCycle1(0);
  1610  0AC1  3000               	movlw	0
  1611  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0AC3  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0AC4  00C9               	movwf	PWM_DutyCycle1@valor^(0+128)
  1614  0AC5  3000               	movlw	0
  1615  0AC6  00CA               	movwf	(PWM_DutyCycle1@valor^(0+128)+1)
  1616  0AC7  160A  118A  24D6  120A  158A  	fcall	_PWM_DutyCycle1
  1617                           
  1618                           ;main.c: 558: PWM_DutyCycle2(0);
  1619  0ACC  3000               	movlw	0
  1620  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0ACF  00C9               	movwf	PWM_DutyCycle2@valor^(0+128)
  1623  0AD0  3000               	movlw	0
  1624  0AD1  00CA               	movwf	(PWM_DutyCycle2@valor^(0+128)+1)
  1625  0AD2  160A  118A  24F7  120A  158A  	fcall	_PWM_DutyCycle2
  1626                           
  1627                           ;main.c: 561: TIMER0_Set(238);
  1628  0AD7  30EE               	movlw	238
  1629  0AD8  160A  118A  23DC  120A  158A  	fcall	_TIMER0_Set
  1630                           
  1631                           ;main.c: 564: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1632  0ADD  3018               	movlw	24
  1633  0ADE  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0ADF  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0AE0  00E2               	movwf	(??_main^(0+128)+2)
  1636  0AE1  3061               	movlw	97
  1637  0AE2  00E1               	movwf	(??_main^(0+128)+1)
  1638  0AE3  306E               	movlw	110
  1639  0AE4  00E0               	movwf	??_main^(0+128)
  1640  0AE5                     u3347:	
  1641  0AE5  0BE0               	decfsz	??_main^(0+128),f
  1642  0AE6  2AE5               	goto	u3347
  1643  0AE7  0BE1               	decfsz	(??_main^(0+128)+1),f
  1644  0AE8  2AE5               	goto	u3347
  1645  0AE9  0BE2               	decfsz	(??_main^(0+128)+2),f
  1646  0AEA  2AE5               	goto	u3347
  1647  0AEB  0000               	nop
  1648  0AEC                     l2949:	
  1649                           ;main.c: 567: while(1)
  1650                           
  1651                           
  1652                           ;main.c: 568: {
  1653                           ;main.c: 574: LCD_Clear();
  1654  0AEC  160A  118A  255F  120A  158A  	fcall	_LCD_Clear
  1655                           
  1656                           ;main.c: 575: LCD_Cursor(0,0);
  1657  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0AF3  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1660  0AF4  3000               	movlw	0
  1661  0AF5  160A  118A  24B6  120A  158A  	fcall	_LCD_Cursor
  1662                           
  1663                           ;main.c: 576: LCD_WriteString("kmH: ");
  1664  0AFA  3048               	movlw	low (STR_3-__stringbase)
  1665  0AFB  1683               	bsf	3,5	;RP0=1, select bank1
  1666  0AFC  1303               	bcf	3,6	;RP1=0, select bank1
  1667  0AFD  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1668  0AFE  3080               	movlw	128
  1669  0AFF  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1670  0B00  160A  118A  2588  120A  158A  	fcall	_LCD_WriteString
  1671                           
  1672                           ;main.c: 577: LCD_Cursor(0,6);
  1673  0B05  3006               	movlw	6
  1674  0B06  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0B07  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0B08  00E0               	movwf	??_main^(0+128)
  1677  0B09  0860               	movf	??_main^(0+128),w
  1678  0B0A  00C9               	movwf	LCD_Cursor@Col^(0+128)
  1679  0B0B  3000               	movlw	0
  1680  0B0C  160A  118A  24B6  120A  158A  	fcall	_LCD_Cursor
  1681                           
  1682                           ;main.c: 578: LCD_WriteString(display_rpm);
  1683  0B11  30A0               	movlw	_display_rpm& (0+255)
  1684  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0B14  00CB               	movwf	LCD_WriteString@Str^(0+128)
  1687  0B15  3001               	movlw	1
  1688  0B16  00CC               	movwf	(LCD_WriteString@Str+1)^(0+128)
  1689  0B17  160A  118A  2588  120A  158A  	fcall	_LCD_WriteString
  1690                           
  1691                           ;main.c: 579: LCD_Cursor(1,0);
  1692  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  1693  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0B1E  01C9               	clrf	LCD_Cursor@Col^(0+128)
  1695  0B1F  3001               	movlw	1
  1696  0B20  160A  118A  24B6  120A  158A  	fcall	_LCD_Cursor
  1697                           
  1698                           ;main.c: 584: _delay((unsigned long)((200)*(18432000/4000.0)));
  1699  0B25  3005               	movlw	5
  1700  0B26  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0B27  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0B28  00E2               	movwf	(??_main^(0+128)+2)
  1703  0B29  30AD               	movlw	173
  1704  0B2A  00E1               	movwf	(??_main^(0+128)+1)
  1705  0B2B  30E0               	movlw	224
  1706  0B2C  00E0               	movwf	??_main^(0+128)
  1707  0B2D                     u3357:	
  1708  0B2D  0BE0               	decfsz	??_main^(0+128),f
  1709  0B2E  2B2D               	goto	u3357
  1710  0B2F  0BE1               	decfsz	(??_main^(0+128)+1),f
  1711  0B30  2B2D               	goto	u3357
  1712  0B31  0BE2               	decfsz	(??_main^(0+128)+2),f
  1713  0B32  2B2D               	goto	u3357
  1714  0B33  2AEC               	goto	l2949
  1715  0B34                     __end_of_main:	
  1716                           
  1717                           	psect	text1
  1718  15F7                     __ptext1:	
  1719 ;; *************** function _USART_Init *****************
  1720 ;; Defined at:
  1721 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  BaudRate        4   15[BANK1 ] long 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;		None               void
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       0       4       0       0
  1736 ;;      Locals:         0       0       0       0       0
  1737 ;;      Temps:          0       0       4       0       0
  1738 ;;      Totals:         0       0       8       0       0
  1739 ;;Total ram usage:        8 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    6
  1742 ;; This function calls:
  1743 ;;		___aldiv
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _USART_Init
  1751  15F7                     _USART_Init:	
  1752                           
  1753                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1757  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  1758  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  1759  15F9  0858               	movf	USART_Init@BaudRate^(0+128),w
  1760  15FA  00DC               	movwf	??_USART_Init^(0+128)
  1761  15FB  0859               	movf	(USART_Init@BaudRate+1)^(0+128),w
  1762  15FC  00DD               	movwf	(??_USART_Init^(0+128)+1)
  1763  15FD  085A               	movf	(USART_Init@BaudRate+2)^(0+128),w
  1764  15FE  00DE               	movwf	(??_USART_Init^(0+128)+2)
  1765  15FF  085B               	movf	(USART_Init@BaudRate+3)^(0+128),w
  1766  1600  00DF               	movwf	(??_USART_Init^(0+128)+3)
  1767  1601  3004               	movlw	4
  1768  1602                     u3065:	
  1769  1602  1003               	clrc
  1770  1603  0DDC               	rlf	??_USART_Init^(0+128),f
  1771  1604  0DDD               	rlf	(??_USART_Init^(0+128)+1),f
  1772  1605  0DDE               	rlf	(??_USART_Init^(0+128)+2),f
  1773  1606  0DDF               	rlf	(??_USART_Init^(0+128)+3),f
  1774  1607  3EFF               	addlw	-1
  1775  1608  1D03               	skipz
  1776  1609  2E02               	goto	u3065
  1777  160A  085F               	movf	(??_USART_Init+3)^(0+128),w
  1778  160B  00CC               	movwf	(___aldiv@divisor+3)^(0+128)
  1779  160C  085E               	movf	(??_USART_Init+2)^(0+128),w
  1780  160D  00CB               	movwf	(___aldiv@divisor+2)^(0+128)
  1781  160E  085D               	movf	(??_USART_Init+1)^(0+128),w
  1782  160F  00CA               	movwf	(___aldiv@divisor+1)^(0+128)
  1783  1610  085C               	movf	??_USART_Init^(0+128),w
  1784  1611  00C9               	movwf	___aldiv@divisor^(0+128)
  1785  1612  3001               	movlw	1
  1786  1613  00D0               	movwf	(___aldiv@dividend+3)^(0+128)
  1787  1614  3019               	movlw	25
  1788  1615  00CF               	movwf	(___aldiv@dividend+2)^(0+128)
  1789  1616  3040               	movlw	64
  1790  1617  00CE               	movwf	(___aldiv@dividend+1)^(0+128)
  1791  1618  3000               	movlw	0
  1792  1619  00CD               	movwf	___aldiv@dividend^(0+128)
  1793  161A  120A  118A  2755   	fcall	___aldiv
  1794  161D  1683               	bsf	3,5	;RP0=1, select bank1
  1795  161E  1303               	bcf	3,6	;RP1=0, select bank1
  1796  161F  0849               	movf	?___aldiv^(0+128),w
  1797  1620  3EFF               	addlw	255
  1798  1621  0099               	movwf	25	;volatile
  1799                           
  1800                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1801  1622  1398               	bcf	24,7	;volatile
  1802                           
  1803                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1804  1623  1318               	bcf	24,6	;volatile
  1805                           
  1806                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1807  1624  1698               	bsf	24,5	;volatile
  1808                           
  1809                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1810  1625  1218               	bcf	24,4	;volatile
  1811                           
  1812                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1813  1626  1518               	bsf	24,2	;volatile
  1814                           
  1815                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1816  1627  1498               	bsf	24,1	;volatile
  1817                           
  1818                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1819  1628  1018               	bcf	24,0	;volatile
  1820                           
  1821                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1822  1629  1283               	bcf	3,5	;RP0=0, select bank0
  1823  162A  1303               	bcf	3,6	;RP1=0, select bank0
  1824  162B  1798               	bsf	24,7	;volatile
  1825                           
  1826                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1827  162C  1318               	bcf	24,6	;volatile
  1828                           
  1829                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1830  162D  1298               	bcf	24,5	;volatile
  1831                           
  1832                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1833  162E  1618               	bsf	24,4	;volatile
  1834                           
  1835                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1836  162F  1198               	bcf	24,3	;volatile
  1837                           
  1838                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1839  1630  1118               	bcf	24,2	;volatile
  1840                           
  1841                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1842  1631  1098               	bcf	24,1	;volatile
  1843                           
  1844                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1845  1632  1018               	bcf	24,0	;volatile
  1846                           
  1847                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1848  1633  1683               	bsf	3,5	;RP0=1, select bank1
  1849  1634  1303               	bcf	3,6	;RP1=0, select bank1
  1850  1635  120C               	bcf	12,4	;volatile
  1851                           
  1852                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1853  1636  1283               	bcf	3,5	;RP0=0, select bank0
  1854  1637  1303               	bcf	3,6	;RP1=0, select bank0
  1855  1638  120C               	bcf	12,4	;volatile
  1856                           
  1857                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1858  1639  1683               	bsf	3,5	;RP0=1, select bank1
  1859  163A  1303               	bcf	3,6	;RP1=0, select bank1
  1860  163B  168C               	bsf	12,5	;volatile
  1861                           
  1862                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1863  163C  1283               	bcf	3,5	;RP0=0, select bank0
  1864  163D  1303               	bcf	3,6	;RP1=0, select bank0
  1865  163E  128C               	bcf	12,5	;volatile
  1866  163F  0008               	return
  1867  1640                     __end_of_USART_Init:	
  1868                           
  1869                           	psect	text2
  1870  0755                     __ptext2:	
  1871 ;; *************** function ___aldiv *****************
  1872 ;; Defined at:
  1873 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  divisor         4    0[BANK1 ] long 
  1876 ;;  dividend        4    4[BANK1 ] long 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  quotient        4   11[BANK1 ] long 
  1879 ;;  sign            1   10[BANK1 ] unsigned char 
  1880 ;;  counter         1    9[BANK1 ] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  4    0[BANK1 ] long 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       8       0       0
  1891 ;;      Locals:         0       0       6       0       0
  1892 ;;      Temps:          0       0       1       0       0
  1893 ;;      Totals:         0       0      15       0       0
  1894 ;;Total ram usage:       15 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    5
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_USART_Init
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function ___aldiv
  1906  0755                     ___aldiv:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1910  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0757  01D3               	clrf	___aldiv@sign^(0+128)
  1913  0758  1FCC               	btfss	(___aldiv@divisor+3)^(0+128),7
  1914  0759  2F67               	goto	l599
  1915  075A  09C9               	comf	___aldiv@divisor^(0+128),f
  1916  075B  09CA               	comf	(___aldiv@divisor+1)^(0+128),f
  1917  075C  09CB               	comf	(___aldiv@divisor+2)^(0+128),f
  1918  075D  09CC               	comf	(___aldiv@divisor+3)^(0+128),f
  1919  075E  0AC9               	incf	___aldiv@divisor^(0+128),f
  1920  075F  1903               	skipnz
  1921  0760  0ACA               	incf	(___aldiv@divisor+1)^(0+128),f
  1922  0761  1903               	skipnz
  1923  0762  0ACB               	incf	(___aldiv@divisor+2)^(0+128),f
  1924  0763  1903               	skipnz
  1925  0764  0ACC               	incf	(___aldiv@divisor+3)^(0+128),f
  1926  0765  01D3               	clrf	___aldiv@sign^(0+128)
  1927  0766  0AD3               	incf	___aldiv@sign^(0+128),f
  1928  0767                     l599:	
  1929  0767  1FD0               	btfss	(___aldiv@dividend+3)^(0+128),7
  1930  0768  2F78               	goto	l2307
  1931  0769  09CD               	comf	___aldiv@dividend^(0+128),f
  1932  076A  09CE               	comf	(___aldiv@dividend+1)^(0+128),f
  1933  076B  09CF               	comf	(___aldiv@dividend+2)^(0+128),f
  1934  076C  09D0               	comf	(___aldiv@dividend+3)^(0+128),f
  1935  076D  0ACD               	incf	___aldiv@dividend^(0+128),f
  1936  076E  1903               	skipnz
  1937  076F  0ACE               	incf	(___aldiv@dividend+1)^(0+128),f
  1938  0770  1903               	skipnz
  1939  0771  0ACF               	incf	(___aldiv@dividend+2)^(0+128),f
  1940  0772  1903               	skipnz
  1941  0773  0AD0               	incf	(___aldiv@dividend+3)^(0+128),f
  1942  0774  3001               	movlw	1
  1943  0775  00D1               	movwf	??___aldiv^(0+128)
  1944  0776  0851               	movf	??___aldiv^(0+128),w
  1945  0777  06D3               	xorwf	___aldiv@sign^(0+128),f
  1946  0778                     l2307:	
  1947  0778  3000               	movlw	0
  1948  0779  00D7               	movwf	(___aldiv@quotient+3)^(0+128)
  1949  077A  3000               	movlw	0
  1950  077B  00D6               	movwf	(___aldiv@quotient+2)^(0+128)
  1951  077C  3000               	movlw	0
  1952  077D  00D5               	movwf	(___aldiv@quotient+1)^(0+128)
  1953  077E  3000               	movlw	0
  1954  077F  00D4               	movwf	___aldiv@quotient^(0+128)
  1955  0780  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  1956  0781  044B               	iorwf	(___aldiv@divisor+2)^(0+128),w
  1957  0782  044A               	iorwf	(___aldiv@divisor+1)^(0+128),w
  1958  0783  0449               	iorwf	___aldiv@divisor^(0+128),w
  1959  0784  1903               	skipnz
  1960  0785  2FCD               	goto	l2329
  1961  0786  01D2               	clrf	___aldiv@counter^(0+128)
  1962  0787  0AD2               	incf	___aldiv@counter^(0+128),f
  1963  0788                     l2315:	
  1964  0788  1BCC               	btfsc	(___aldiv@divisor+3)^(0+128),7
  1965  0789  2F98               	goto	l2317
  1966  078A  3001               	movlw	1
  1967  078B  00D1               	movwf	??___aldiv^(0+128)
  1968  078C                     u2475:	
  1969  078C  1003               	clrc
  1970  078D  0DC9               	rlf	___aldiv@divisor^(0+128),f
  1971  078E  0DCA               	rlf	(___aldiv@divisor+1)^(0+128),f
  1972  078F  0DCB               	rlf	(___aldiv@divisor+2)^(0+128),f
  1973  0790  0DCC               	rlf	(___aldiv@divisor+3)^(0+128),f
  1974  0791  0BD1               	decfsz	??___aldiv^(0+128),f
  1975  0792  2F8C               	goto	u2475
  1976  0793  3001               	movlw	1
  1977  0794  00D1               	movwf	??___aldiv^(0+128)
  1978  0795  0851               	movf	??___aldiv^(0+128),w
  1979  0796  07D2               	addwf	___aldiv@counter^(0+128),f
  1980  0797  2F88               	goto	l2315
  1981  0798                     l2317:	
  1982  0798  3001               	movlw	1
  1983  0799  00D1               	movwf	??___aldiv^(0+128)
  1984  079A                     u2495:	
  1985  079A  1003               	clrc
  1986  079B  0DD4               	rlf	___aldiv@quotient^(0+128),f
  1987  079C  0DD5               	rlf	(___aldiv@quotient+1)^(0+128),f
  1988  079D  0DD6               	rlf	(___aldiv@quotient+2)^(0+128),f
  1989  079E  0DD7               	rlf	(___aldiv@quotient+3)^(0+128),f
  1990  079F  0BD1               	decfsz	??___aldiv^(0+128),f
  1991  07A0  2F9A               	goto	u2495
  1992  07A1  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  1993  07A2  0250               	subwf	(___aldiv@dividend+3)^(0+128),w
  1994  07A3  1D03               	skipz
  1995  07A4  2FAF               	goto	u2505
  1996  07A5  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  1997  07A6  024F               	subwf	(___aldiv@dividend+2)^(0+128),w
  1998  07A7  1D03               	skipz
  1999  07A8  2FAF               	goto	u2505
  2000  07A9  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  2001  07AA  024E               	subwf	(___aldiv@dividend+1)^(0+128),w
  2002  07AB  1D03               	skipz
  2003  07AC  2FAF               	goto	u2505
  2004  07AD  0849               	movf	___aldiv@divisor^(0+128),w
  2005  07AE  024D               	subwf	___aldiv@dividend^(0+128),w
  2006  07AF                     u2505:	
  2007  07AF  1C03               	skipc
  2008  07B0  2FC0               	goto	l2325
  2009  07B1  0849               	movf	___aldiv@divisor^(0+128),w
  2010  07B2  02CD               	subwf	___aldiv@dividend^(0+128),f
  2011  07B3  084A               	movf	(___aldiv@divisor+1)^(0+128),w
  2012  07B4  1C03               	skipc
  2013  07B5  0F4A               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2014  07B6  02CE               	subwf	(___aldiv@dividend+1)^(0+128),f
  2015  07B7  084B               	movf	(___aldiv@divisor+2)^(0+128),w
  2016  07B8  1C03               	skipc
  2017  07B9  0F4B               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2018  07BA  02CF               	subwf	(___aldiv@dividend+2)^(0+128),f
  2019  07BB  084C               	movf	(___aldiv@divisor+3)^(0+128),w
  2020  07BC  1C03               	skipc
  2021  07BD  0F4C               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2022  07BE  02D0               	subwf	(___aldiv@dividend+3)^(0+128),f
  2023  07BF  1454               	bsf	___aldiv@quotient^(0+128),0
  2024  07C0                     l2325:	
  2025  07C0  3001               	movlw	1
  2026  07C1                     u2515:	
  2027  07C1  1003               	clrc
  2028  07C2  0CCC               	rrf	(___aldiv@divisor+3)^(0+128),f
  2029  07C3  0CCB               	rrf	(___aldiv@divisor+2)^(0+128),f
  2030  07C4  0CCA               	rrf	(___aldiv@divisor+1)^(0+128),f
  2031  07C5  0CC9               	rrf	___aldiv@divisor^(0+128),f
  2032  07C6  3EFF               	addlw	-1
  2033  07C7  1D03               	skipz
  2034  07C8  2FC1               	goto	u2515
  2035  07C9  3001               	movlw	1
  2036  07CA  02D2               	subwf	___aldiv@counter^(0+128),f
  2037  07CB  1D03               	btfss	3,2
  2038  07CC  2F98               	goto	l2317
  2039  07CD                     l2329:	
  2040  07CD  0853               	movf	___aldiv@sign^(0+128),w
  2041  07CE  1903               	btfsc	3,2
  2042  07CF  2FDB               	goto	l2333
  2043  07D0  09D4               	comf	___aldiv@quotient^(0+128),f
  2044  07D1  09D5               	comf	(___aldiv@quotient+1)^(0+128),f
  2045  07D2  09D6               	comf	(___aldiv@quotient+2)^(0+128),f
  2046  07D3  09D7               	comf	(___aldiv@quotient+3)^(0+128),f
  2047  07D4  0AD4               	incf	___aldiv@quotient^(0+128),f
  2048  07D5  1903               	skipnz
  2049  07D6  0AD5               	incf	(___aldiv@quotient+1)^(0+128),f
  2050  07D7  1903               	skipnz
  2051  07D8  0AD6               	incf	(___aldiv@quotient+2)^(0+128),f
  2052  07D9  1903               	skipnz
  2053  07DA  0AD7               	incf	(___aldiv@quotient+3)^(0+128),f
  2054  07DB                     l2333:	
  2055  07DB  0857               	movf	(___aldiv@quotient+3)^(0+128),w
  2056  07DC  00CC               	movwf	(?___aldiv+3)^(0+128)
  2057  07DD  0856               	movf	(___aldiv@quotient+2)^(0+128),w
  2058  07DE  00CB               	movwf	(?___aldiv+2)^(0+128)
  2059  07DF  0855               	movf	(___aldiv@quotient+1)^(0+128),w
  2060  07E0  00CA               	movwf	(?___aldiv+1)^(0+128)
  2061  07E1  0854               	movf	___aldiv@quotient^(0+128),w
  2062  07E2  00C9               	movwf	?___aldiv^(0+128)
  2063  07E3  0008               	return
  2064  07E4                     __end_of___aldiv:	
  2065                           
  2066                           	psect	text3
  2067  13DC                     __ptext3:	
  2068 ;; *************** function _TIMER0_Set *****************
  2069 ;; Defined at:
  2070 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  contagens       1    wreg     unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  contagens       1    0[BANK1 ] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;		None               void
  2077 ;; Registers used:
  2078 ;;		wreg
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         0       0       0       0       0
  2085 ;;      Locals:         0       0       1       0       0
  2086 ;;      Temps:          0       0       0       0       0
  2087 ;;      Totals:         0       0       1       0       0
  2088 ;;Total ram usage:        1 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    5
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _TIMER0_Set
  2100  13DC                     _TIMER0_Set:	
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _TIMER0_Set: [wreg]
  2104                           ;TIMER0_Set@contagens stored from wreg
  2105  13DC  1683               	bsf	3,5	;RP0=1, select bank1
  2106  13DD  1303               	bcf	3,6	;RP1=0, select bank1
  2107  13DE  00C9               	movwf	TIMER0_Set@contagens^(0+128)
  2108                           
  2109                           ;timers.c: 22: TMR0 = contagens;
  2110  13DF  0849               	movf	TIMER0_Set@contagens^(0+128),w
  2111  13E0  1283               	bcf	3,5	;RP0=0, select bank0
  2112  13E1  1303               	bcf	3,6	;RP1=0, select bank0
  2113  13E2  0081               	movwf	1	;volatile
  2114  13E3  0008               	return
  2115  13E4                     __end_of_TIMER0_Set:	
  2116                           
  2117                           	psect	text4
  2118  0803                     __ptext4:	
  2119 ;; *************** function _TIMER0_Init *****************
  2120 ;; Defined at:
  2121 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		None
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    5
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _TIMER0_Init
  2151  0803                     _TIMER0_Init:	
  2152                           
  2153                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _TIMER0_Init: []
  2157  0803  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0804  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0805  1281               	bcf	1,5	;volatile
  2160                           
  2161                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2162  0806  1201               	bcf	1,4	;volatile
  2163                           
  2164                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2165  0807  1181               	bcf	1,3	;volatile
  2166                           
  2167                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2168  0808  1501               	bsf	1,2	;volatile
  2169                           
  2170                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2171  0809  1481               	bsf	1,1	;volatile
  2172                           
  2173                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2174  080A  1401               	bsf	1,0	;volatile
  2175                           
  2176                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2177  080B  110B               	bcf	11,2	;volatile
  2178                           
  2179                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2180  080C  168B               	bsf	11,5	;volatile
  2181  080D  0008               	return
  2182  080E                     __end_of_TIMER0_Init:	
  2183                           
  2184                           	psect	text5
  2185  153B                     __ptext5:	
  2186 ;; *************** function _PWM_Init *****************
  2187 ;; Defined at:
  2188 ;;		line 5 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    5
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _PWM_Init
  2218  153B                     _PWM_Init:	
  2219                           
  2220                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _PWM_Init: [wreg]
  2224  153B  1283               	bcf	3,5	;RP0=0, select bank0
  2225  153C  1303               	bcf	3,6	;RP1=0, select bank0
  2226  153D  1492               	bsf	18,1	;volatile
  2227                           
  2228                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2229  153E  1012               	bcf	18,0	;volatile
  2230                           
  2231                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2232  153F  1312               	bcf	18,6	;volatile
  2233                           
  2234                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2235  1540  1292               	bcf	18,5	;volatile
  2236                           
  2237                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2238  1541  1212               	bcf	18,4	;volatile
  2239                           
  2240                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2241  1542  1192               	bcf	18,3	;volatile
  2242                           
  2243                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2244  1543  1512               	bsf	18,2	;volatile
  2245                           
  2246                           ;pwm.c: 27: PR2 = 255;
  2247  1544  30FF               	movlw	255
  2248  1545  1683               	bsf	3,5	;RP0=1, select bank1
  2249  1546  1303               	bcf	3,6	;RP1=0, select bank1
  2250  1547  0092               	movwf	18	;volatile
  2251                           
  2252                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2253  1548  1283               	bcf	3,5	;RP0=0, select bank0
  2254  1549  1303               	bcf	3,6	;RP1=0, select bank0
  2255  154A  1597               	bsf	23,3	;volatile
  2256                           
  2257                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2258  154B  1517               	bsf	23,2	;volatile
  2259                           
  2260                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2261  154C  1497               	bsf	23,1	;volatile
  2262                           
  2263                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2264  154D  1417               	bsf	23,0	;volatile
  2265                           
  2266                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2267  154E  1683               	bsf	3,5	;RP0=1, select bank1
  2268  154F  1303               	bcf	3,6	;RP1=0, select bank1
  2269  1550  150C               	bsf	12,2	;volatile
  2270                           
  2271                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2272  1551  1283               	bcf	3,5	;RP0=0, select bank0
  2273  1552  1303               	bcf	3,6	;RP1=0, select bank0
  2274  1553  110C               	bcf	12,2	;volatile
  2275                           
  2276                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2277  1554  159D               	bsf	29,3	;volatile
  2278                           
  2279                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2280  1555  151D               	bsf	29,2	;volatile
  2281                           
  2282                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2283  1556  149D               	bsf	29,1	;volatile
  2284                           
  2285                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2286  1557  141D               	bsf	29,0	;volatile
  2287                           
  2288                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2289  1558  1683               	bsf	3,5	;RP0=1, select bank1
  2290  1559  1303               	bcf	3,6	;RP1=0, select bank1
  2291  155A  140D               	bsf	13,0	;volatile
  2292                           
  2293                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2294  155B  1283               	bcf	3,5	;RP0=0, select bank0
  2295  155C  1303               	bcf	3,6	;RP1=0, select bank0
  2296  155D  100D               	bcf	13,0	;volatile
  2297  155E  0008               	return
  2298  155F                     __end_of_PWM_Init:	
  2299                           
  2300                           	psect	text6
  2301  14F7                     __ptext6:	
  2302 ;; *************** function _PWM_DutyCycle2 *****************
  2303 ;; Defined at:
  2304 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  valor           2    0[BANK1 ] int 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2318 ;;      Params:         0       0       2       0       0
  2319 ;;      Locals:         0       0       0       0       0
  2320 ;;      Temps:          0       0       2       0       0
  2321 ;;      Totals:         0       0       4       0       0
  2322 ;;Total ram usage:        4 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    5
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _PWM_DutyCycle2
  2334  14F7                     _PWM_DutyCycle2:	
  2335                           
  2336                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2340  14F7  1683               	bsf	3,5	;RP0=1, select bank1
  2341  14F8  1303               	bcf	3,6	;RP1=0, select bank1
  2342  14F9  084A               	movf	(PWM_DutyCycle2@valor+1)^(0+128),w
  2343  14FA  00CC               	movwf	(??_PWM_DutyCycle2^(0+128)+1)
  2344  14FB  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  2345  14FC  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  2346  14FD  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2347  14FE  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2348  14FF  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  2349  1500  0D4C               	rlf	(??_PWM_DutyCycle2^(0+128)+1),w
  2350  1501  0CCC               	rrf	(??_PWM_DutyCycle2^(0+128)+1),f
  2351  1502  0CCB               	rrf	??_PWM_DutyCycle2^(0+128),f
  2352  1503  084B               	movf	??_PWM_DutyCycle2^(0+128),w
  2353  1504  1283               	bcf	3,5	;RP0=0, select bank0
  2354  1505  1303               	bcf	3,6	;RP1=0, select bank0
  2355  1506  009B               	movwf	27	;volatile
  2356                           
  2357                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2358  1507  1683               	bsf	3,5	;RP0=1, select bank1
  2359  1508  1303               	bcf	3,6	;RP1=0, select bank1
  2360  1509  0849               	movf	PWM_DutyCycle2@valor^(0+128),w
  2361  150A  00CB               	movwf	??_PWM_DutyCycle2^(0+128)
  2362  150B  3003               	movlw	3
  2363  150C                     u3045:	
  2364  150C  1003               	clrc
  2365  150D  0DCB               	rlf	??_PWM_DutyCycle2^(0+128),f
  2366  150E  3EFF               	addlw	-1
  2367  150F  1D03               	skipz
  2368  1510  2D0C               	goto	u3045
  2369  1511  1003               	clrc
  2370  1512  0D4B               	rlf	??_PWM_DutyCycle2^(0+128),w
  2371  1513  380C               	iorlw	12
  2372  1514  1283               	bcf	3,5	;RP0=0, select bank0
  2373  1515  1303               	bcf	3,6	;RP1=0, select bank0
  2374  1516  009D               	movwf	29	;volatile
  2375  1517  0008               	return
  2376  1518                     __end_of_PWM_DutyCycle2:	
  2377                           
  2378                           	psect	text7
  2379  14D6                     __ptext7:	
  2380 ;; *************** function _PWM_DutyCycle1 *****************
  2381 ;; Defined at:
  2382 ;;		line 64 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  valor           2    0[BANK1 ] int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;		None               void
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       2       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          0       0       2       0       0
  2399 ;;      Totals:         0       0       4       0       0
  2400 ;;Total ram usage:        4 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    5
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _PWM_DutyCycle1
  2412  14D6                     _PWM_DutyCycle1:	
  2413                           
  2414                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2415                           
  2416                           ;incstack = 0
  2417                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2418  14D6  1683               	bsf	3,5	;RP0=1, select bank1
  2419  14D7  1303               	bcf	3,6	;RP1=0, select bank1
  2420  14D8  084A               	movf	(PWM_DutyCycle1@valor+1)^(0+128),w
  2421  14D9  00CC               	movwf	(??_PWM_DutyCycle1^(0+128)+1)
  2422  14DA  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  2423  14DB  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  2424  14DC  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2425  14DD  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2426  14DE  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  2427  14DF  0D4C               	rlf	(??_PWM_DutyCycle1^(0+128)+1),w
  2428  14E0  0CCC               	rrf	(??_PWM_DutyCycle1^(0+128)+1),f
  2429  14E1  0CCB               	rrf	??_PWM_DutyCycle1^(0+128),f
  2430  14E2  084B               	movf	??_PWM_DutyCycle1^(0+128),w
  2431  14E3  1283               	bcf	3,5	;RP0=0, select bank0
  2432  14E4  1303               	bcf	3,6	;RP1=0, select bank0
  2433  14E5  0095               	movwf	21	;volatile
  2434                           
  2435                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2436  14E6  1683               	bsf	3,5	;RP0=1, select bank1
  2437  14E7  1303               	bcf	3,6	;RP1=0, select bank1
  2438  14E8  0849               	movf	PWM_DutyCycle1@valor^(0+128),w
  2439  14E9  00CB               	movwf	??_PWM_DutyCycle1^(0+128)
  2440  14EA  3003               	movlw	3
  2441  14EB                     u3095:	
  2442  14EB  1003               	clrc
  2443  14EC  0DCB               	rlf	??_PWM_DutyCycle1^(0+128),f
  2444  14ED  3EFF               	addlw	-1
  2445  14EE  1D03               	skipz
  2446  14EF  2CEB               	goto	u3095
  2447  14F0  1003               	clrc
  2448  14F1  0D4B               	rlf	??_PWM_DutyCycle1^(0+128),w
  2449  14F2  380C               	iorlw	12
  2450  14F3  1283               	bcf	3,5	;RP0=0, select bank0
  2451  14F4  1303               	bcf	3,6	;RP1=0, select bank0
  2452  14F5  0097               	movwf	23	;volatile
  2453  14F6  0008               	return
  2454  14F7                     __end_of_PWM_DutyCycle1:	
  2455                           
  2456                           	psect	text8
  2457  1588                     __ptext8:	
  2458 ;; *************** function _LCD_WriteString *****************
  2459 ;; Defined at:
  2460 ;;		line 61 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  Str             2    2[BANK1 ] PTR const unsigned char 
  2463 ;;		 -> display_rpm(10), STR_3(6), STR_2(17), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       2       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0
  2478 ;;      Totals:         0       0       2       0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    6
  2482 ;; This function calls:
  2483 ;;		_LCD_WriteData
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _LCD_WriteString
  2491  1588                     _LCD_WriteString:	
  2492  1588                     l2767:	
  2493                           ;lcd.c: 63: while(*Str != '\0')
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2497                           
  2498  1588  1683               	bsf	3,5	;RP0=1, select bank1
  2499  1589  1303               	bcf	3,6	;RP1=0, select bank1
  2500  158A  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2501  158B  1283               	bcf	3,5	;RP0=0, select bank0
  2502  158C  1303               	bcf	3,6	;RP1=0, select bank0
  2503  158D  00FF               	movwf	127
  2504  158E  1683               	bsf	3,5	;RP0=1, select bank1
  2505  158F  1303               	bcf	3,6	;RP1=0, select bank1
  2506  1590  084B               	movf	LCD_WriteString@Str^(0+128),w
  2507  1591  0084               	movwf	4
  2508  1592  1283               	bcf	3,5	;RP0=0, select bank0
  2509  1593  1303               	bcf	3,6	;RP1=0, select bank0
  2510  1594  160A  118A  2000  160A  118A  	fcall	stringtab
  2511  1599  3800               	iorlw	0
  2512  159A  1903               	btfsc	3,2
  2513  159B  0008               	return
  2514                           
  2515                           ;lcd.c: 64: {
  2516                           ;lcd.c: 65: LCD_WriteData(*Str);
  2517  159C  1683               	bsf	3,5	;RP0=1, select bank1
  2518  159D  1303               	bcf	3,6	;RP1=0, select bank1
  2519  159E  084C               	movf	(LCD_WriteString@Str+1)^(0+128),w
  2520  159F  1283               	bcf	3,5	;RP0=0, select bank0
  2521  15A0  1303               	bcf	3,6	;RP1=0, select bank0
  2522  15A1  00FF               	movwf	127
  2523  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2524  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2525  15A4  084B               	movf	LCD_WriteString@Str^(0+128),w
  2526  15A5  0084               	movwf	4
  2527  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  2528  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  2529  15A8  160A  118A  2000  160A  118A  	fcall	stringtab
  2530  15AD  160A  118A  244E  160A  118A  	fcall	_LCD_WriteData
  2531                           
  2532                           ;lcd.c: 66: Str++;
  2533  15B2  3001               	movlw	1
  2534  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  2535  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  2536  15B5  07CB               	addwf	LCD_WriteString@Str^(0+128),f
  2537  15B6  1803               	skipnc
  2538  15B7  0ACC               	incf	(LCD_WriteString@Str+1)^(0+128),f
  2539  15B8  2D88               	goto	l2767
  2540  15B9                     __end_of_LCD_WriteString:	
  2541                           
  2542                           	psect	text9
  2543  144E                     __ptext9:	
  2544 ;; *************** function _LCD_WriteData *****************
  2545 ;; Defined at:
  2546 ;;		line 47 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  Byte            1    wreg     unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  Byte            1    1[BANK1 ] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       0       0       0       0
  2561 ;;      Locals:         0       0       1       0       0
  2562 ;;      Temps:          0       0       1       0       0
  2563 ;;      Totals:         0       0       2       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    5
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_LCD_WriteString
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _LCD_WriteData
  2576  144E                     _LCD_WriteData:	
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in _LCD_WriteData: [wreg]
  2580                           ;LCD_WriteData@Byte stored from wreg
  2581  144E  1683               	bsf	3,5	;RP0=1, select bank1
  2582  144F  1303               	bcf	3,6	;RP1=0, select bank1
  2583  1450  00CA               	movwf	LCD_WriteData@Byte^(0+128)
  2584                           
  2585                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  2586  1451  1283               	bcf	3,5	;RP0=0, select bank0
  2587  1452  1303               	bcf	3,6	;RP1=0, select bank0
  2588  1453  1409               	bsf	9,0	;volatile
  2589                           
  2590                           ;lcd.c: 51: PORTD = Byte;
  2591  1454  1683               	bsf	3,5	;RP0=1, select bank1
  2592  1455  1303               	bcf	3,6	;RP1=0, select bank1
  2593  1456  084A               	movf	LCD_WriteData@Byte^(0+128),w
  2594  1457  1283               	bcf	3,5	;RP0=0, select bank0
  2595  1458  1303               	bcf	3,6	;RP1=0, select bank0
  2596  1459  0088               	movwf	8	;volatile
  2597                           
  2598                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  2599  145A  1489               	bsf	9,1	;volatile
  2600                           
  2601                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2602  145B  303D               	movlw	61
  2603  145C  1683               	bsf	3,5	;RP0=1, select bank1
  2604  145D  1303               	bcf	3,6	;RP1=0, select bank1
  2605  145E  00C9               	movwf	??_LCD_WriteData^(0+128)
  2606  145F                     u3367:	
  2607  145F  0BC9               	decfsz	??_LCD_WriteData^(0+128),f
  2608  1460  2C5F               	goto	u3367
  2609                           
  2610                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  2611  1461  1283               	bcf	3,5	;RP0=0, select bank0
  2612  1462  1303               	bcf	3,6	;RP1=0, select bank0
  2613  1463  1089               	bcf	9,1	;volatile
  2614  1464  0008               	return
  2615  1465                     __end_of_LCD_WriteData:	
  2616                           
  2617                           	psect	text10
  2618  1707                     __ptext10:	
  2619 ;; *************** function _LCD_Init *****************
  2620 ;; Defined at:
  2621 ;;		line 87 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          0       0       2       0       0
  2638 ;;      Totals:         0       0       2       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    6
  2642 ;; This function calls:
  2643 ;;		_LCD_WriteCmd
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _LCD_Init
  2651  1707                     _LCD_Init:	
  2652                           
  2653                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2657  1707  1683               	bsf	3,5	;RP0=1, select bank1
  2658  1708  1303               	bcf	3,6	;RP1=0, select bank1
  2659  1709  119F               	bcf	31,3	;volatile
  2660                           
  2661                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2662  170A  151F               	bsf	31,2	;volatile
  2663                           
  2664                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2665  170B  109F               	bcf	31,1	;volatile
  2666                           
  2667                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2668  170C  101F               	bcf	31,0	;volatile
  2669                           
  2670                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2671  170D  305A               	movlw	90
  2672  170E  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2673  170F  30C3               	movlw	195
  2674  1710  00CB               	movwf	??_LCD_Init^(0+128)
  2675  1711                     u3377:	
  2676  1711  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2677  1712  2F11               	goto	u3377
  2678  1713  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2679  1714  2F11               	goto	u3377
  2680                           
  2681                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2682  1715  3030               	movlw	48
  2683  1716  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2684                           
  2685                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2686  171B  3018               	movlw	24
  2687  171C  1683               	bsf	3,5	;RP0=1, select bank1
  2688  171D  1303               	bcf	3,6	;RP1=0, select bank1
  2689  171E  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2690  171F  30EF               	movlw	239
  2691  1720  00CB               	movwf	??_LCD_Init^(0+128)
  2692  1721                     u3387:	
  2693  1721  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2694  1722  2F21               	goto	u3387
  2695  1723  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2696  1724  2F21               	goto	u3387
  2697                           
  2698                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2699  1725  3030               	movlw	48
  2700  1726  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2701                           
  2702                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2703  172B  3099               	movlw	153
  2704  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2705  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2706  172E  00CB               	movwf	??_LCD_Init^(0+128)
  2707  172F                     u3397:	
  2708  172F  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2709  1730  2F2F               	goto	u3397
  2710                           
  2711                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2712  1731  3030               	movlw	48
  2713  1732  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2714                           
  2715                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2716  1737  303D               	movlw	61
  2717  1738  1683               	bsf	3,5	;RP0=1, select bank1
  2718  1739  1303               	bcf	3,6	;RP1=0, select bank1
  2719  173A  00CB               	movwf	??_LCD_Init^(0+128)
  2720  173B                     u3407:	
  2721  173B  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2722  173C  2F3B               	goto	u3407
  2723                           
  2724                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2725  173D  3038               	movlw	56
  2726  173E  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2727                           
  2728                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2729  1743  303D               	movlw	61
  2730  1744  1683               	bsf	3,5	;RP0=1, select bank1
  2731  1745  1303               	bcf	3,6	;RP1=0, select bank1
  2732  1746  00CB               	movwf	??_LCD_Init^(0+128)
  2733  1747                     u3417:	
  2734  1747  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2735  1748  2F47               	goto	u3417
  2736                           
  2737                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2738  1749  3001               	movlw	1
  2739  174A  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2740                           
  2741                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2742  174F  300C               	movlw	12
  2743  1750  1683               	bsf	3,5	;RP0=1, select bank1
  2744  1751  1303               	bcf	3,6	;RP1=0, select bank1
  2745  1752  00CC               	movwf	(??_LCD_Init^(0+128)+1)
  2746  1753  30F7               	movlw	247
  2747  1754  00CB               	movwf	??_LCD_Init^(0+128)
  2748  1755                     u3427:	
  2749  1755  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2750  1756  2F55               	goto	u3427
  2751  1757  0BCC               	decfsz	(??_LCD_Init^(0+128)+1),f
  2752  1758  2F55               	goto	u3427
  2753                           
  2754                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2755  1759  300C               	movlw	12
  2756  175A  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2757                           
  2758                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2759  175F  303D               	movlw	61
  2760  1760  1683               	bsf	3,5	;RP0=1, select bank1
  2761  1761  1303               	bcf	3,6	;RP1=0, select bank1
  2762  1762  00CB               	movwf	??_LCD_Init^(0+128)
  2763  1763                     u3437:	
  2764  1763  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2765  1764  2F63               	goto	u3437
  2766                           
  2767                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2768  1765  3006               	movlw	6
  2769  1766  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2770                           
  2771                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2772  176B  303D               	movlw	61
  2773  176C  1683               	bsf	3,5	;RP0=1, select bank1
  2774  176D  1303               	bcf	3,6	;RP1=0, select bank1
  2775  176E  00CB               	movwf	??_LCD_Init^(0+128)
  2776  176F                     u3447:	
  2777  176F  0BCB               	decfsz	??_LCD_Init^(0+128),f
  2778  1770  2F6F               	goto	u3447
  2779  1771  0008               	return
  2780  1772                     __end_of_LCD_Init:	
  2781                           
  2782                           	psect	text11
  2783  14B6                     __ptext11:	
  2784 ;; *************** function _LCD_Cursor *****************
  2785 ;; Defined at:
  2786 ;;		line 10 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  Row             1    wreg     unsigned char 
  2789 ;;  Col             1    0[BANK1 ] unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  Row             1    2[BANK1 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;		None               void
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       1       0       0
  2802 ;;      Locals:         0       0       1       0       0
  2803 ;;      Temps:          0       0       1       0       0
  2804 ;;      Totals:         0       0       3       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _LCD_Cursor
  2817  14B6                     _LCD_Cursor:	
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  2821                           ;LCD_Cursor@Row stored from wreg
  2822  14B6  1683               	bsf	3,5	;RP0=1, select bank1
  2823  14B7  1303               	bcf	3,6	;RP1=0, select bank1
  2824  14B8  00CB               	movwf	LCD_Cursor@Row^(0+128)
  2825                           
  2826                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  2827  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  2828  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  2829  14BB  1009               	bcf	9,0	;volatile
  2830                           
  2831                           ;lcd.c: 14: if (Row == 0)
  2832  14BC  1683               	bsf	3,5	;RP0=1, select bank1
  2833  14BD  1303               	bcf	3,6	;RP1=0, select bank1
  2834  14BE  08CB               	movf	LCD_Cursor@Row^(0+128),f
  2835  14BF  1D03               	skipz
  2836  14C0  2CC4               	goto	l2753
  2837                           
  2838                           ;lcd.c: 15: {
  2839                           ;lcd.c: 16: PORTD = 0x80 + Col;
  2840  14C1  0849               	movf	LCD_Cursor@Col^(0+128),w
  2841  14C2  3E80               	addlw	128
  2842  14C3  2CC8               	goto	L1
  2843  14C4                     l2753:	
  2844                           ;lcd.c: 17: }
  2845                           
  2846                           
  2847                           ;lcd.c: 18: else
  2848                           ;lcd.c: 19: {
  2849                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  2850  14C4  1683               	bsf	3,5	;RP0=1, select bank1
  2851  14C5  1303               	bcf	3,6	;RP1=0, select bank1
  2852  14C6  0849               	movf	LCD_Cursor@Col^(0+128),w
  2853  14C7  3EC0               	addlw	192
  2854  14C8                     L1:	
  2855  14C8  1283               	bcf	3,5	;RP0=0, select bank0
  2856  14C9  1303               	bcf	3,6	;RP1=0, select bank0
  2857  14CA  0088               	movwf	8	;volatile
  2858                           
  2859                           ;lcd.c: 21: }
  2860                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  2861  14CB  1489               	bsf	9,1	;volatile
  2862                           
  2863                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2864  14CC  303D               	movlw	61
  2865  14CD  1683               	bsf	3,5	;RP0=1, select bank1
  2866  14CE  1303               	bcf	3,6	;RP1=0, select bank1
  2867  14CF  00CA               	movwf	??_LCD_Cursor^(0+128)
  2868  14D0                     u3457:	
  2869  14D0  0BCA               	decfsz	??_LCD_Cursor^(0+128),f
  2870  14D1  2CD0               	goto	u3457
  2871                           
  2872                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  2873  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  2874  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  2875  14D4  1089               	bcf	9,1	;volatile
  2876  14D5  0008               	return
  2877  14D6                     __end_of_LCD_Cursor:	
  2878                           
  2879                           	psect	text12
  2880  155F                     __ptext12:	
  2881 ;; *************** function _LCD_Clear *****************
  2882 ;; Defined at:
  2883 ;;		line 71 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          0       0       2       0       0
  2900 ;;      Totals:         0       0       2       0       0
  2901 ;;Total ram usage:        2 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    6
  2904 ;; This function calls:
  2905 ;;		_LCD_WriteCmd
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function _LCD_Clear
  2913  155F                     _LCD_Clear:	
  2914                           
  2915                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2919  155F  3001               	movlw	1
  2920  1560  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2921                           
  2922                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  2923  1565  300C               	movlw	12
  2924  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2925  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2926  1568  00CC               	movwf	(??_LCD_Clear^(0+128)+1)
  2927  1569  30F7               	movlw	247
  2928  156A  00CB               	movwf	??_LCD_Clear^(0+128)
  2929  156B                     u3467:	
  2930  156B  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2931  156C  2D6B               	goto	u3467
  2932  156D  0BCC               	decfsz	(??_LCD_Clear^(0+128)+1),f
  2933  156E  2D6B               	goto	u3467
  2934                           
  2935                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  2936  156F  300C               	movlw	12
  2937  1570  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2938                           
  2939                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2940  1575  303D               	movlw	61
  2941  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2942  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2943  1578  00CB               	movwf	??_LCD_Clear^(0+128)
  2944  1579                     u3477:	
  2945  1579  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2946  157A  2D79               	goto	u3477
  2947                           
  2948                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  2949  157B  3006               	movlw	6
  2950  157C  160A  118A  2437  160A  118A  	fcall	_LCD_WriteCmd
  2951                           
  2952                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2953  1581  303D               	movlw	61
  2954  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2955  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2956  1584  00CB               	movwf	??_LCD_Clear^(0+128)
  2957  1585                     u3487:	
  2958  1585  0BCB               	decfsz	??_LCD_Clear^(0+128),f
  2959  1586  2D85               	goto	u3487
  2960  1587  0008               	return
  2961  1588                     __end_of_LCD_Clear:	
  2962                           
  2963                           	psect	text13
  2964  1437                     __ptext13:	
  2965 ;; *************** function _LCD_WriteCmd *****************
  2966 ;; Defined at:
  2967 ;;		line 32 in file "R:\Note\Sistema I\Ultimo C no MPLAB\lcd.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  Byte            1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  Byte            1    1[BANK1 ] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;		None               void
  2974 ;; Registers used:
  2975 ;;		wreg
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       0       0       0       0
  2982 ;;      Locals:         0       0       1       0       0
  2983 ;;      Temps:          0       0       1       0       0
  2984 ;;      Totals:         0       0       2       0       0
  2985 ;;Total ram usage:        2 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    5
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_LCD_Clear
  2992 ;;		_LCD_Init
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _LCD_WriteCmd
  2998  1437                     _LCD_WriteCmd:	
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in _LCD_WriteCmd: [wreg]
  3002                           ;LCD_WriteCmd@Byte stored from wreg
  3003  1437  1683               	bsf	3,5	;RP0=1, select bank1
  3004  1438  1303               	bcf	3,6	;RP1=0, select bank1
  3005  1439  00CA               	movwf	LCD_WriteCmd@Byte^(0+128)
  3006                           
  3007                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3008  143A  1283               	bcf	3,5	;RP0=0, select bank0
  3009  143B  1303               	bcf	3,6	;RP1=0, select bank0
  3010  143C  1009               	bcf	9,0	;volatile
  3011                           
  3012                           ;lcd.c: 36: PORTD = Byte;
  3013  143D  1683               	bsf	3,5	;RP0=1, select bank1
  3014  143E  1303               	bcf	3,6	;RP1=0, select bank1
  3015  143F  084A               	movf	LCD_WriteCmd@Byte^(0+128),w
  3016  1440  1283               	bcf	3,5	;RP0=0, select bank0
  3017  1441  1303               	bcf	3,6	;RP1=0, select bank0
  3018  1442  0088               	movwf	8	;volatile
  3019                           
  3020                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3021  1443  1489               	bsf	9,1	;volatile
  3022                           
  3023                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3024  1444  303D               	movlw	61
  3025  1445  1683               	bsf	3,5	;RP0=1, select bank1
  3026  1446  1303               	bcf	3,6	;RP1=0, select bank1
  3027  1447  00C9               	movwf	??_LCD_WriteCmd^(0+128)
  3028  1448                     u3497:	
  3029  1448  0BC9               	decfsz	??_LCD_WriteCmd^(0+128),f
  3030  1449  2C48               	goto	u3497
  3031                           
  3032                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3033  144A  1283               	bcf	3,5	;RP0=0, select bank0
  3034  144B  1303               	bcf	3,6	;RP1=0, select bank0
  3035  144C  1089               	bcf	9,1	;volatile
  3036  144D  0008               	return
  3037  144E                     __end_of_LCD_WriteCmd:	
  3038                           
  3039                           	psect	text14
  3040  1411                     __ptext14:	
  3041 ;; *************** function _ADC_Init *****************
  3042 ;; Defined at:
  3043 ;;		line 6 in file "R:\Note\Sistema I\Ultimo C no MPLAB\adc.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		None
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    5
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function _ADC_Init
  3073  1411                     _ADC_Init:	
  3074                           
  3075                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  3076                           
  3077                           ;incstack = 0
  3078                           ; Regs used in _ADC_Init: []
  3079  1411  1683               	bsf	3,5	;RP0=1, select bank1
  3080  1412  1303               	bcf	3,6	;RP1=0, select bank1
  3081  1413  179F               	bsf	31,7	;volatile
  3082                           
  3083                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  3084  1414  159F               	bsf	31,3	;volatile
  3085                           
  3086                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  3087  1415  151F               	bsf	31,2	;volatile
  3088                           
  3089                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  3090  1416  149F               	bsf	31,1	;volatile
  3091                           
  3092                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  3093  1417  101F               	bcf	31,0	;volatile
  3094                           
  3095                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  3096  1418  1283               	bcf	3,5	;RP0=0, select bank0
  3097  1419  1303               	bcf	3,6	;RP1=0, select bank0
  3098  141A  179F               	bsf	31,7	;volatile
  3099                           
  3100                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  3101  141B  131F               	bcf	31,6	;volatile
  3102                           
  3103                           ;adc.c: 42: PIE1bits.ADIE = 0;
  3104  141C  1683               	bsf	3,5	;RP0=1, select bank1
  3105  141D  1303               	bcf	3,6	;RP1=0, select bank1
  3106  141E  130C               	bcf	12,6	;volatile
  3107                           
  3108                           ;adc.c: 43: PIR1bits.ADIF = 0;
  3109  141F  1283               	bcf	3,5	;RP0=0, select bank0
  3110  1420  1303               	bcf	3,6	;RP1=0, select bank0
  3111  1421  130C               	bcf	12,6	;volatile
  3112  1422  0008               	return
  3113  1423                     __end_of_ADC_Init:	
  3114                           
  3115                           	psect	text15
  3116  0D61                     __ptext15:	
  3117 ;; *************** function _ISR *****************
  3118 ;; Defined at:
  3119 ;;		line 367 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;		None               void
  3126 ;; Registers used:
  3127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       4       0       0       0
  3136 ;;      Totals:         0       4       0       0       0
  3137 ;;Total ram usage:        4 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    4
  3140 ;; This function calls:
  3141 ;;		_Fuzzy
  3142 ;;		_USART_ReceiveChar
  3143 ;;		_USART_WriteString
  3144 ;;		___lwdiv
  3145 ;;		___lwtoft
  3146 ;;		___wmul
  3147 ;;		_send
  3148 ;;		i1_PWM_DutyCycle2
  3149 ;;		i1_TIMER0_Set
  3150 ;; This function is called by:
  3151 ;;		Interrupt level 1
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _ISR
  3157  0D61                     _ISR:	
  3158                           
  3159                           ;main.c: 370: if (PIR1bits.RCIF)
  3160  0D61  1E8C               	btfss	12,5	;volatile
  3161  0D62  2E25               	goto	i1l2873
  3162                           
  3163                           ;main.c: 371: {
  3164                           ;main.c: 372: if (USART_ReceiveChar() == '0')
  3165  0D63  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3166  0D68  3A30               	xorlw	48
  3167  0D69  1D03               	skipz
  3168  0D6A  2D7D               	goto	i1l2827
  3169                           
  3170                           ;main.c: 373: {
  3171                           ;main.c: 374: USART_WriteString("\n\rdesligado\n\r");
  3172  0D6B  303A               	movlw	(STR_1-__stringbase)& (0+255)
  3173  0D6C  120A  118A  27E4  120A  158A  	fcall	_USART_WriteString
  3174                           
  3175                           ;main.c: 376: PWM_DutyCycle2(0);
  3176  0D71  3000               	movlw	0
  3177  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0D74  00BE               	movwf	i1PWM_DutyCycle2@valor
  3180  0D75  3000               	movlw	0
  3181  0D76  00BF               	movwf	i1PWM_DutyCycle2@valor+1
  3182  0D77  160A  118A  247D  120A  158A  	fcall	i1_PWM_DutyCycle2
  3183                           
  3184                           ;main.c: 377: return;
  3185  0D7C  2E9D               	goto	i1l180
  3186  0D7D                     i1l2827:	
  3187                           
  3188                           ;main.c: 378: }
  3189                           ;main.c: 380: if (USART_ReceiveChar() == '1')
  3190  0D7D  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3191  0D82  3A31               	xorlw	49
  3192  0D83  1D03               	skipz
  3193  0D84  2D8B               	goto	i1l2831
  3194                           
  3195                           ;main.c: 381: {
  3196                           ;main.c: 382: setpointUI = 720;
  3197  0D85  30D0               	movlw	208
  3198  0D86  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0D87  1303               	bcf	3,6	;RP1=0, select bank1
  3200  0D88  00C5               	movwf	_setpointUI^(0+128)
  3201  0D89  3002               	movlw	2
  3202  0D8A  00C6               	movwf	(_setpointUI^(0+128)+1)
  3203  0D8B                     i1l2831:	
  3204                           
  3205                           ;main.c: 384: }
  3206                           ;main.c: 386: if (USART_ReceiveChar() == '2')
  3207  0D8B  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3208  0D90  3A32               	xorlw	50
  3209  0D91  1D03               	skipz
  3210  0D92  2D99               	goto	i1l2835
  3211                           
  3212                           ;main.c: 387: {
  3213                           ;main.c: 388: setpointUI = 1450;
  3214  0D93  30AA               	movlw	170
  3215  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  3217  0D96  00C5               	movwf	_setpointUI^(0+128)
  3218  0D97  3005               	movlw	5
  3219  0D98  00C6               	movwf	(_setpointUI^(0+128)+1)
  3220  0D99                     i1l2835:	
  3221                           
  3222                           ;main.c: 390: }
  3223                           ;main.c: 392: if (USART_ReceiveChar() == '3')
  3224  0D99  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3225  0D9E  3A33               	xorlw	51
  3226  0D9F  1D03               	skipz
  3227  0DA0  2DA7               	goto	i1l2839
  3228                           
  3229                           ;main.c: 393: {
  3230                           ;main.c: 394: setpointUI = 2828;
  3231  0DA1  300C               	movlw	12
  3232  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  3233  0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  3234  0DA4  00C5               	movwf	_setpointUI^(0+128)
  3235  0DA5  300B               	movlw	11
  3236  0DA6  00C6               	movwf	(_setpointUI^(0+128)+1)
  3237  0DA7                     i1l2839:	
  3238                           
  3239                           ;main.c: 396: }
  3240                           ;main.c: 398: if (USART_ReceiveChar() == '4')
  3241  0DA7  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3242  0DAC  3A34               	xorlw	52
  3243  0DAD  1D03               	skipz
  3244  0DAE  2DB5               	goto	i1l2843
  3245                           
  3246                           ;main.c: 399: {
  3247                           ;main.c: 400: setpointUI = 3256;
  3248  0DAF  30B8               	movlw	184
  3249  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0DB2  00C5               	movwf	_setpointUI^(0+128)
  3252  0DB3  300C               	movlw	12
  3253  0DB4  00C6               	movwf	(_setpointUI^(0+128)+1)
  3254  0DB5                     i1l2843:	
  3255                           
  3256                           ;main.c: 402: }
  3257                           ;main.c: 404: if (USART_ReceiveChar() == '5')
  3258  0DB5  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3259  0DBA  3A35               	xorlw	53
  3260  0DBB  1D03               	skipz
  3261  0DBC  2DC3               	goto	i1l2847
  3262                           
  3263                           ;main.c: 405: {
  3264                           ;main.c: 406: setpointUI = 4510;
  3265  0DBD  309E               	movlw	158
  3266  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  3268  0DC0  00C5               	movwf	_setpointUI^(0+128)
  3269  0DC1  3011               	movlw	17
  3270  0DC2  00C6               	movwf	(_setpointUI^(0+128)+1)
  3271  0DC3                     i1l2847:	
  3272                           
  3273                           ;main.c: 408: }
  3274                           ;main.c: 410: if (USART_ReceiveChar() == '6')
  3275  0DC3  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3276  0DC8  3A36               	xorlw	54
  3277  0DC9  1D03               	skipz
  3278  0DCA  2DD1               	goto	i1l2851
  3279                           
  3280                           ;main.c: 411: {
  3281                           ;main.c: 412: setpointUI = 5760;
  3282  0DCB  3080               	movlw	128
  3283  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0DCE  00C5               	movwf	_setpointUI^(0+128)
  3286  0DCF  3016               	movlw	22
  3287  0DD0  00C6               	movwf	(_setpointUI^(0+128)+1)
  3288  0DD1                     i1l2851:	
  3289                           
  3290                           ;main.c: 414: }
  3291                           ;main.c: 416: if (USART_ReceiveChar() == '7')
  3292  0DD1  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3293  0DD6  3A37               	xorlw	55
  3294  0DD7  1D03               	skipz
  3295  0DD8  2DDF               	goto	i1l2855
  3296                           
  3297                           ;main.c: 417: {
  3298                           ;main.c: 418: setpointUI = 6890;
  3299  0DD9  30EA               	movlw	234
  3300  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0DDC  00C5               	movwf	_setpointUI^(0+128)
  3303  0DDD  301A               	movlw	26
  3304  0DDE  00C6               	movwf	(_setpointUI^(0+128)+1)
  3305  0DDF                     i1l2855:	
  3306                           
  3307                           ;main.c: 420: }
  3308                           ;main.c: 422: if (USART_ReceiveChar() == '8')
  3309  0DDF  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3310  0DE4  3A38               	xorlw	56
  3311  0DE5  1D03               	skipz
  3312  0DE6  2DED               	goto	i1l2859
  3313                           
  3314                           ;main.c: 423: {
  3315                           ;main.c: 424: setpointUI = 8100;
  3316  0DE7  30A4               	movlw	164
  3317  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  3319  0DEA  00C5               	movwf	_setpointUI^(0+128)
  3320  0DEB  301F               	movlw	31
  3321  0DEC  00C6               	movwf	(_setpointUI^(0+128)+1)
  3322  0DED                     i1l2859:	
  3323                           
  3324                           ;main.c: 426: }
  3325                           ;main.c: 428: if (USART_ReceiveChar() == '9')
  3326  0DED  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3327  0DF2  3A39               	xorlw	57
  3328  0DF3  1D03               	skipz
  3329  0DF4  2DFB               	goto	i1l2863
  3330                           
  3331                           ;main.c: 429: {
  3332                           ;main.c: 430: setpointUI = 9000;
  3333  0DF5  3028               	movlw	40
  3334  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0DF7  1303               	bcf	3,6	;RP1=0, select bank1
  3336  0DF8  00C5               	movwf	_setpointUI^(0+128)
  3337  0DF9  3023               	movlw	35
  3338  0DFA  00C6               	movwf	(_setpointUI^(0+128)+1)
  3339  0DFB                     i1l2863:	
  3340                           
  3341                           ;main.c: 432: }
  3342                           ;main.c: 436: Fuzzy();
  3343  0DFB  120A  118A  2039  120A  158A  	fcall	_Fuzzy
  3344                           
  3345                           ;main.c: 437: antigo = setpointUI;
  3346  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  3347  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  3348  0E02  0846               	movf	(_setpointUI+1)^(0+128),w
  3349  0E03  01F9               	clrf	___lwtoft@c+1
  3350  0E04  07F9               	addwf	___lwtoft@c+1,f
  3351  0E05  0845               	movf	_setpointUI^(0+128),w
  3352  0E06  01F8               	clrf	___lwtoft@c
  3353  0E07  07F8               	addwf	___lwtoft@c,f
  3354  0E08  160A  118A  2423  120A  158A  	fcall	___lwtoft
  3355  0E0D  0878               	movf	?___lwtoft,w
  3356  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0E10  00E3               	movwf	_antigo^(0+128)
  3359  0E11  0879               	movf	?___lwtoft+1,w
  3360  0E12  00E4               	movwf	(_antigo+1)^(0+128)
  3361  0E13  087A               	movf	?___lwtoft+2,w
  3362  0E14  00E5               	movwf	(_antigo+2)^(0+128)
  3363                           
  3364                           ;main.c: 440: if(USART_ReceiveChar() == 'X')
  3365  0E15  160A  118A  2465  120A  158A  	fcall	_USART_ReceiveChar
  3366  0E1A  3A58               	xorlw	88
  3367  0E1B  1D03               	skipz
  3368  0E1C  2E22               	goto	i1l2871
  3369                           
  3370                           ;main.c: 441: {
  3371                           ;main.c: 442: send();
  3372  0E1D  120A  158A  20C6  120A  158A  	fcall	_send
  3373  0E22                     i1l2871:	
  3374                           
  3375                           ;main.c: 443: }
  3376                           ;main.c: 445: PIR1bits.RCIF = 0;
  3377  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0E23  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0E24  128C               	bcf	12,5	;volatile
  3380  0E25                     i1l2873:	
  3381                           
  3382                           ;main.c: 446: }
  3383                           ;main.c: 449: if (PIR1bits.ADIF)
  3384  0E25  1B0C               	btfsc	12,6	;volatile
  3385                           
  3386                           ;main.c: 450: {
  3387                           ;main.c: 454: PIR1bits.ADIF = 0;
  3388  0E26  130C               	bcf	12,6	;volatile
  3389                           
  3390                           ;main.c: 455: }
  3391                           ;main.c: 459: if (INTCONbits.T0IF)
  3392  0E27  1D0B               	btfss	11,2	;volatile
  3393  0E28  2E99               	goto	i1l2901
  3394                           
  3395                           ;main.c: 460: {
  3396                           ;main.c: 462: TIMER0_Set(238);
  3397  0E29  30EE               	movlw	238
  3398  0E2A  160A  118A  23CE  120A  158A  	fcall	i1_TIMER0_Set
  3399                           
  3400                           ;main.c: 465: if (contagens_tm0 < 499)
  3401  0E2F  3001               	movlw	1
  3402  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  3404  0E32  0240               	subwf	(_contagens_tm0+1)^(0+128),w
  3405  0E33  30F3               	movlw	243
  3406  0E34  1903               	skipnz
  3407  0E35  023F               	subwf	_contagens_tm0^(0+128),w
  3408  0E36  1803               	skipnc
  3409  0E37  2E42               	goto	i1l2885
  3410                           
  3411                           ;main.c: 466: {
  3412                           ;main.c: 468: contagens_tm0++;
  3413  0E38  3001               	movlw	1
  3414  0E39  07BF               	addwf	_contagens_tm0^(0+128),f
  3415  0E3A  1803               	skipnc
  3416  0E3B  0AC0               	incf	(_contagens_tm0+1)^(0+128),f
  3417  0E3C  3000               	movlw	0
  3418  0E3D  07C0               	addwf	(_contagens_tm0+1)^(0+128),f
  3419                           
  3420                           ;main.c: 471: PORTBbits.RB6 = 1;
  3421  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0E40  1706               	bsf	6,6	;volatile
  3424                           
  3425                           ;main.c: 472: }
  3426  0E41  2E98               	goto	i1l2899
  3427  0E42                     i1l2885:	
  3428                           
  3429                           ;main.c: 473: else
  3430                           ;main.c: 474: {
  3431                           ;main.c: 476: contagens_tm0 = 0;
  3432  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  3433  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0E44  01BF               	clrf	_contagens_tm0^(0+128)
  3435  0E45  01C0               	clrf	(_contagens_tm0+1)^(0+128)
  3436                           
  3437                           ;main.c: 479: pulsos = (TMR1H << 8) + TMR1L;
  3438  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0E48  080F               	movf	15,w	;volatile
  3441  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3442  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3443  0E4B  01C2               	clrf	(_pulsos+1)^(0+128)
  3444  0E4C  07C2               	addwf	(_pulsos+1)^(0+128),f
  3445  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0E4F  080E               	movf	14,w	;volatile
  3448  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0E52  01C1               	clrf	_pulsos^(0+128)
  3451  0E53  07C1               	addwf	_pulsos^(0+128),f
  3452                           
  3453                           ;main.c: 480: rpm = ((pulsos / pas_cooler) * 120);
  3454  0E54  086A               	movf	(_pas_cooler+1)^(0+128),w
  3455  0E55  01F1               	clrf	___lwdiv@divisor+1
  3456  0E56  07F1               	addwf	___lwdiv@divisor+1,f
  3457  0E57  0869               	movf	_pas_cooler^(0+128),w
  3458  0E58  01F0               	clrf	___lwdiv@divisor
  3459  0E59  07F0               	addwf	___lwdiv@divisor,f
  3460  0E5A  0842               	movf	(_pulsos+1)^(0+128),w
  3461  0E5B  01F3               	clrf	___lwdiv@dividend+1
  3462  0E5C  07F3               	addwf	___lwdiv@dividend+1,f
  3463  0E5D  0841               	movf	_pulsos^(0+128),w
  3464  0E5E  01F2               	clrf	___lwdiv@dividend
  3465  0E5F  07F2               	addwf	___lwdiv@dividend,f
  3466  0E60  160A  118A  25B9  120A  158A  	fcall	___lwdiv
  3467  0E65  0871               	movf	?___lwdiv+1,w
  3468  0E66  01F9               	clrf	___wmul@multiplier+1
  3469  0E67  07F9               	addwf	___wmul@multiplier+1,f
  3470  0E68  0870               	movf	?___lwdiv,w
  3471  0E69  01F8               	clrf	___wmul@multiplier
  3472  0E6A  07F8               	addwf	___wmul@multiplier,f
  3473  0E6B  3078               	movlw	120
  3474  0E6C  00FA               	movwf	___wmul@multiplicand
  3475  0E6D  3000               	movlw	0
  3476  0E6E  00FB               	movwf	___wmul@multiplicand+1
  3477  0E6F  160A  118A  2518  120A  158A  	fcall	___wmul
  3478  0E74  0879               	movf	?___wmul+1,w
  3479  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0E77  01C4               	clrf	(_rpm+1)^(0+128)
  3482  0E78  07C4               	addwf	(_rpm+1)^(0+128),f
  3483  0E79  0878               	movf	?___wmul,w
  3484  0E7A  01C3               	clrf	_rpm^(0+128)
  3485  0E7B  07C3               	addwf	_rpm^(0+128),f
  3486                           
  3487                           ;main.c: 484: rpm = rpm / 40;
  3488  0E7C  3028               	movlw	40
  3489  0E7D  00F0               	movwf	___lwdiv@divisor
  3490  0E7E  3000               	movlw	0
  3491  0E7F  00F1               	movwf	___lwdiv@divisor+1
  3492  0E80  0844               	movf	(_rpm+1)^(0+128),w
  3493  0E81  01F3               	clrf	___lwdiv@dividend+1
  3494  0E82  07F3               	addwf	___lwdiv@dividend+1,f
  3495  0E83  0843               	movf	_rpm^(0+128),w
  3496  0E84  01F2               	clrf	___lwdiv@dividend
  3497  0E85  07F2               	addwf	___lwdiv@dividend,f
  3498  0E86  160A  118A  25B9  120A  158A  	fcall	___lwdiv
  3499  0E8B  0871               	movf	?___lwdiv+1,w
  3500  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  3502  0E8E  01C4               	clrf	(_rpm+1)^(0+128)
  3503  0E8F  07C4               	addwf	(_rpm+1)^(0+128),f
  3504  0E90  0870               	movf	?___lwdiv,w
  3505  0E91  01C3               	clrf	_rpm^(0+128)
  3506  0E92  07C3               	addwf	_rpm^(0+128),f
  3507                           
  3508                           ;main.c: 487: TMR1L = 0x00;
  3509  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0E95  018E               	clrf	14	;volatile
  3512                           
  3513                           ;main.c: 488: TMR1H = 0x00;
  3514  0E96  018F               	clrf	15	;volatile
  3515                           
  3516                           ;main.c: 491: PORTBbits.RB6 = 0;
  3517  0E97  1306               	bcf	6,6	;volatile
  3518  0E98                     i1l2899:	
  3519                           
  3520                           ;main.c: 492: }
  3521                           ;main.c: 495: INTCONbits.T0IF = 0;
  3522  0E98  110B               	bcf	11,2	;volatile
  3523  0E99                     i1l2901:	
  3524                           
  3525                           ;main.c: 496: }
  3526                           ;main.c: 499: if (PIR1bits.TMR1IF)
  3527  0E99  180C               	btfsc	12,0	;volatile
  3528                           
  3529                           ;main.c: 500: {
  3530                           ;main.c: 504: PIR1bits.TMR1IF = 0;
  3531  0E9A  100C               	bcf	12,0	;volatile
  3532                           
  3533                           ;main.c: 505: }
  3534                           ;main.c: 508: if (PIR1bits.SSPIF)
  3535  0E9B  198C               	btfsc	12,3	;volatile
  3536                           
  3537                           ;main.c: 509: {
  3538                           ;main.c: 513: PIR1bits.SSPIF = 0;
  3539  0E9C  118C               	bcf	12,3	;volatile
  3540  0E9D                     i1l180:	
  3541  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0E9F  086C               	movf	??_ISR+3,w
  3544  0EA0  00FF               	movwf	127
  3545  0EA1  086B               	movf	??_ISR+2,w
  3546  0EA2  008A               	movwf	10
  3547  0EA3  086A               	movf	??_ISR+1,w
  3548  0EA4  0084               	movwf	4
  3549  0EA5  0E69               	swapf	??_ISR^0,w
  3550  0EA6  0083               	movwf	3
  3551  0EA7  0EFE               	swapf	126,f
  3552  0EA8  0E7E               	swapf	126,w
  3553  0EA9  0009               	retfie
  3554  0EAA                     __end_of_ISR:	
  3555                           
  3556                           	psect	intentry
  3557  0004                     __pintentry:	
  3558                           ;incstack = 0
  3559                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3560                           
  3561  0004                     interrupt_function:	
  3562  007E                     saved_w	set	btemp
  3563  0004  00FE               	movwf	btemp
  3564  0005  0E03               	swapf	3,w
  3565  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0008  00E9               	movwf	??_ISR
  3568  0009  0804               	movf	4,w
  3569  000A  00EA               	movwf	??_ISR+1
  3570  000B  080A               	movf	10,w
  3571  000C  00EB               	movwf	??_ISR+2
  3572  000D  087F               	movf	btemp+1,w
  3573  000E  00EC               	movwf	??_ISR+3
  3574  000F  120A  158A  2D61   	ljmp	_ISR
  3575                           
  3576                           	psect	text16
  3577  13CE                     __ptext16:	
  3578 ;; *************** function i1_TIMER0_Set *****************
  3579 ;; Defined at:
  3580 ;;		line 20 in file "R:\Note\Sistema I\Ultimo C no MPLAB\timers.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  contagens       1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  contagens       1    0[COMMON] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         1       0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_ISR
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function i1_TIMER0_Set
  3609  13CE                     i1_TIMER0_Set:	
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in i1_TIMER0_Set: [wreg]
  3613                           ;i1TIMER0_Set@contagens stored from wreg
  3614  13CE  00F0               	movwf	i1TIMER0_Set@contagens
  3615                           
  3616                           ;timers.c: 22: TMR0 = contagens;
  3617  13CF  0870               	movf	i1TIMER0_Set@contagens,w
  3618  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  3619  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  3620  13D2  0081               	movwf	1	;volatile
  3621  13D3  0008               	return
  3622  13D4                     __end_ofi1_TIMER0_Set:	
  3623                           
  3624                           	psect	text17
  3625  08C6                     __ptext17:	
  3626 ;; *************** function _send *****************
  3627 ;; Defined at:
  3628 ;;		line 105 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  index           1    4[BANK0 ] unsigned char 
  3633 ;;  velocidade      2    2[BANK0 ] unsigned int 
  3634 ;;  checksum        1    1[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;		None               void
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         0       4       0       0       0
  3646 ;;      Temps:          0       1       0       0       0
  3647 ;;      Totals:         0       5       0       0       0
  3648 ;;Total ram usage:        5 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		_USART_WriteChar
  3653 ;;		___wmul
  3654 ;; This function is called by:
  3655 ;;		_ISR
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _send
  3661  08C6                     _send:	
  3662                           
  3663                           ;main.c: 108: buffer[0] = '#';
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3667  08C6  3023               	movlw	35
  3668  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  3669  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  3670  08C9  00A0               	movwf	??_send
  3671  08CA  0820               	movf	??_send,w
  3672  08CB  1683               	bsf	3,5	;RP0=1, select bank3
  3673  08CC  1703               	bsf	3,6	;RP1=1, select bank3
  3674  08CD  0090               	movwf	_buffer^(0+384)
  3675                           
  3676                           ;main.c: 109: buffer[1] = '$';
  3677  08CE  3024               	movlw	36
  3678  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  3679  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  3680  08D1  00A0               	movwf	??_send
  3681  08D2  0820               	movf	??_send,w
  3682  08D3  1683               	bsf	3,5	;RP0=1, select bank3
  3683  08D4  1703               	bsf	3,6	;RP1=1, select bank3
  3684  08D5  0091               	movwf	(_buffer^(0+384)+1)
  3685                           
  3686                           ;main.c: 110: buffer[2] = ':';
  3687  08D6  303A               	movlw	58
  3688  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  3689  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  3690  08D9  00A0               	movwf	??_send
  3691  08DA  0820               	movf	??_send,w
  3692  08DB  1683               	bsf	3,5	;RP0=1, select bank3
  3693  08DC  1703               	bsf	3,6	;RP1=1, select bank3
  3694  08DD  0092               	movwf	(_buffer^(0+384)+2)
  3695                           
  3696                           ;main.c: 112: unsigned int velocidade = rpm * 40;
  3697  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  3698  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  3699  08E0  0844               	movf	(_rpm+1)^(0+128),w
  3700  08E1  01F9               	clrf	___wmul@multiplier+1
  3701  08E2  07F9               	addwf	___wmul@multiplier+1,f
  3702  08E3  0843               	movf	_rpm^(0+128),w
  3703  08E4  01F8               	clrf	___wmul@multiplier
  3704  08E5  07F8               	addwf	___wmul@multiplier,f
  3705  08E6  3028               	movlw	40
  3706  08E7  00FA               	movwf	___wmul@multiplicand
  3707  08E8  3000               	movlw	0
  3708  08E9  00FB               	movwf	___wmul@multiplicand+1
  3709  08EA  160A  118A  2518  120A  158A  	fcall	___wmul
  3710  08EF  0879               	movf	?___wmul+1,w
  3711  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  3712  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  3713  08F2  01A3               	clrf	send@velocidade+1
  3714  08F3  07A3               	addwf	send@velocidade+1,f
  3715  08F4  0878               	movf	?___wmul,w
  3716  08F5  01A2               	clrf	send@velocidade
  3717  08F6  07A2               	addwf	send@velocidade,f
  3718                           
  3719                           ;main.c: 114: buffer[3] = (velocidade >> 8) & 0xFF;
  3720  08F7  0823               	movf	send@velocidade+1,w
  3721  08F8  00A0               	movwf	??_send
  3722  08F9  0820               	movf	??_send,w
  3723  08FA  1683               	bsf	3,5	;RP0=1, select bank3
  3724  08FB  1703               	bsf	3,6	;RP1=1, select bank3
  3725  08FC  0093               	movwf	(_buffer^(0+384)+3)
  3726                           
  3727                           ;main.c: 115: buffer[4] = velocidade & 0xFF;
  3728  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  3729  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  3730  08FF  0822               	movf	send@velocidade,w
  3731  0900  00A0               	movwf	??_send
  3732  0901  0820               	movf	??_send,w
  3733  0902  1683               	bsf	3,5	;RP0=1, select bank3
  3734  0903  1703               	bsf	3,6	;RP1=1, select bank3
  3735  0904  0094               	movwf	(_buffer^(0+384)+4)
  3736                           
  3737                           ;main.c: 116: buffer[5] = 'V';
  3738  0905  3056               	movlw	86
  3739  0906  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0907  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0908  00A0               	movwf	??_send
  3742  0909  0820               	movf	??_send,w
  3743  090A  1683               	bsf	3,5	;RP0=1, select bank3
  3744  090B  1703               	bsf	3,6	;RP1=1, select bank3
  3745  090C  0095               	movwf	(_buffer^(0+384)+5)
  3746                           
  3747                           ;main.c: 119: buffer[6] = (setpointUI >> 8) & 0xFF;
  3748  090D  1683               	bsf	3,5	;RP0=1, select bank1
  3749  090E  1303               	bcf	3,6	;RP1=0, select bank1
  3750  090F  0846               	movf	(_setpointUI+1)^(0+128),w
  3751  0910  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0911  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0912  00A0               	movwf	??_send
  3754  0913  0820               	movf	??_send,w
  3755  0914  1683               	bsf	3,5	;RP0=1, select bank3
  3756  0915  1703               	bsf	3,6	;RP1=1, select bank3
  3757  0916  0096               	movwf	(_buffer^(0+384)+6)
  3758                           
  3759                           ;main.c: 120: buffer[7] = setpointUI & 0xFF;
  3760  0917  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0918  1303               	bcf	3,6	;RP1=0, select bank1
  3762  0919  0845               	movf	_setpointUI^(0+128),w
  3763  091A  1283               	bcf	3,5	;RP0=0, select bank0
  3764  091B  1303               	bcf	3,6	;RP1=0, select bank0
  3765  091C  00A0               	movwf	??_send
  3766  091D  0820               	movf	??_send,w
  3767  091E  1683               	bsf	3,5	;RP0=1, select bank3
  3768  091F  1703               	bsf	3,6	;RP1=1, select bank3
  3769  0920  0097               	movwf	(_buffer^(0+384)+7)
  3770                           
  3771                           ;main.c: 121: buffer[8] = 'S';
  3772  0921  3053               	movlw	83
  3773  0922  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0923  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0924  00A0               	movwf	??_send
  3776  0925  0820               	movf	??_send,w
  3777  0926  1683               	bsf	3,5	;RP0=1, select bank3
  3778  0927  1703               	bsf	3,6	;RP1=1, select bank3
  3779  0928  0098               	movwf	(_buffer^(0+384)+8)
  3780                           
  3781                           ;main.c: 124: buffer[9] = (deltaV >> 8) & 0xFF;
  3782  0929  1283               	bcf	3,5	;RP0=0, select bank0
  3783  092A  1303               	bcf	3,6	;RP1=0, select bank0
  3784  092B  086E               	movf	_deltaV+1,w
  3785  092C  00A0               	movwf	??_send
  3786  092D  0820               	movf	??_send,w
  3787  092E  1683               	bsf	3,5	;RP0=1, select bank3
  3788  092F  1703               	bsf	3,6	;RP1=1, select bank3
  3789  0930  0099               	movwf	(_buffer^(0+384)+9)
  3790                           
  3791                           ;main.c: 125: buffer[10] = deltaV & 0xFF;
  3792  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0933  086D               	movf	_deltaV,w
  3795  0934  00A0               	movwf	??_send
  3796  0935  0820               	movf	??_send,w
  3797  0936  1683               	bsf	3,5	;RP0=1, select bank3
  3798  0937  1703               	bsf	3,6	;RP1=1, select bank3
  3799  0938  009A               	movwf	(_buffer^(0+384)+10)
  3800                           
  3801                           ;main.c: 126: buffer[11] = 'S';
  3802  0939  3053               	movlw	83
  3803  093A  1283               	bcf	3,5	;RP0=0, select bank0
  3804  093B  1303               	bcf	3,6	;RP1=0, select bank0
  3805  093C  00A0               	movwf	??_send
  3806  093D  0820               	movf	??_send,w
  3807  093E  1683               	bsf	3,5	;RP0=1, select bank3
  3808  093F  1703               	bsf	3,6	;RP1=1, select bank3
  3809  0940  009B               	movwf	(_buffer^(0+384)+11)
  3810                           
  3811                           ;main.c: 129: buffer[12] = (antigoUI >> 8) & 0xFF;
  3812  0941  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0942  1303               	bcf	3,6	;RP1=0, select bank1
  3814  0943  083E               	movf	(_antigoUI+1)^(0+128),w
  3815  0944  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0945  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0946  00A0               	movwf	??_send
  3818  0947  0820               	movf	??_send,w
  3819  0948  1683               	bsf	3,5	;RP0=1, select bank3
  3820  0949  1703               	bsf	3,6	;RP1=1, select bank3
  3821  094A  009C               	movwf	(_buffer^(0+384)+12)
  3822                           
  3823                           ;main.c: 130: buffer[13] = antigoUI & 0xFF;
  3824  094B  1683               	bsf	3,5	;RP0=1, select bank1
  3825  094C  1303               	bcf	3,6	;RP1=0, select bank1
  3826  094D  083D               	movf	_antigoUI^(0+128),w
  3827  094E  1283               	bcf	3,5	;RP0=0, select bank0
  3828  094F  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0950  00A0               	movwf	??_send
  3830  0951  0820               	movf	??_send,w
  3831  0952  1683               	bsf	3,5	;RP0=1, select bank3
  3832  0953  1703               	bsf	3,6	;RP1=1, select bank3
  3833  0954  009D               	movwf	(_buffer^(0+384)+13)
  3834                           
  3835                           ;main.c: 131: buffer[14] = 'S';
  3836  0955  3053               	movlw	83
  3837  0956  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0957  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0958  00A0               	movwf	??_send
  3840  0959  0820               	movf	??_send,w
  3841  095A  1683               	bsf	3,5	;RP0=1, select bank3
  3842  095B  1703               	bsf	3,6	;RP1=1, select bank3
  3843  095C  009E               	movwf	(_buffer^(0+384)+14)
  3844                           
  3845                           ;main.c: 133: unsigned char checksum = 0x00;
  3846  095D  1283               	bcf	3,5	;RP0=0, select bank0
  3847  095E  1303               	bcf	3,6	;RP1=0, select bank0
  3848  095F  01A1               	clrf	send@checksum
  3849                           
  3850                           ;main.c: 134: for (unsigned char index = 0; index < 15; index++)
  3851  0960  01A4               	clrf	send@index
  3852  0961  300F               	movlw	15
  3853  0962  0224               	subwf	send@index,w
  3854  0963  1803               	btfsc	3,0
  3855  0964  2981               	goto	i1l2483
  3856  0965                     i1l2475:	
  3857                           
  3858                           ;main.c: 135: {
  3859                           ;main.c: 136: USART_WriteChar(buffer[index]);
  3860  0965  0824               	movf	send@index,w
  3861  0966  3E90               	addlw	_buffer& (0+255)
  3862  0967  0084               	movwf	4
  3863  0968  1783               	bsf	3,7	;select IRP bank3
  3864  0969  0800               	movf	0,w
  3865  096A  160A  118A  23D4  120A  158A  	fcall	_USART_WriteChar
  3866                           
  3867                           ;main.c: 137: checksum ^= buffer[index];
  3868  096F  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0970  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0971  0824               	movf	send@index,w
  3871  0972  3E90               	addlw	_buffer& (0+255)
  3872  0973  0084               	movwf	4
  3873  0974  1783               	bsf	3,7	;select IRP bank3
  3874  0975  0800               	movf	0,w
  3875  0976  00A0               	movwf	??_send
  3876  0977  0820               	movf	??_send,w
  3877  0978  06A1               	xorwf	send@checksum,f
  3878  0979  3001               	movlw	1
  3879  097A  00A0               	movwf	??_send
  3880  097B  0820               	movf	??_send,w
  3881  097C  07A4               	addwf	send@index,f
  3882  097D  300F               	movlw	15
  3883  097E  0224               	subwf	send@index,w
  3884  097F  1C03               	skipc
  3885  0980  2965               	goto	i1l2475
  3886  0981                     i1l2483:	
  3887                           
  3888                           ;main.c: 138: }
  3889                           ;main.c: 139: buffer[15] = checksum;
  3890  0981  0821               	movf	send@checksum,w
  3891  0982  00A0               	movwf	??_send
  3892  0983  0820               	movf	??_send,w
  3893  0984  1683               	bsf	3,5	;RP0=1, select bank3
  3894  0985  1703               	bsf	3,6	;RP1=1, select bank3
  3895  0986  009F               	movwf	(_buffer^(0+384)+15)
  3896                           
  3897                           ;main.c: 140: USART_WriteChar(buffer[15]);
  3898  0987  081F               	movf	(_buffer^(0+384)+15),w
  3899  0988  160A  118A  23D4   	fcall	_USART_WriteChar
  3900  098B  0008               	return
  3901  098C                     __end_of_send:	
  3902                           
  3903                           	psect	text18
  3904  1518                     __ptext18:	
  3905 ;; *************** function ___wmul *****************
  3906 ;; Defined at:
  3907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  multiplier      2    8[COMMON] unsigned int 
  3910 ;;  multiplicand    2   10[COMMON] unsigned int 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  product         2   12[COMMON] unsigned int 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2    8[COMMON] unsigned int 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         4       0       0       0       0
  3923 ;;      Locals:         2       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         6       0       0       0       0
  3926 ;;Total ram usage:        6 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_send
  3932 ;;		_ISR
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function ___wmul
  3938  1518                     ___wmul:	
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3942  1518  01FC               	clrf	___wmul@product
  3943  1519  01FD               	clrf	___wmul@product+1
  3944  151A                     i1l2287:	
  3945  151A  1C78               	btfss	___wmul@multiplier,0
  3946  151B  2D22               	goto	i1l544
  3947  151C  087A               	movf	___wmul@multiplicand,w
  3948  151D  07FC               	addwf	___wmul@product,f
  3949  151E  1803               	skipnc
  3950  151F  0AFD               	incf	___wmul@product+1,f
  3951  1520  087B               	movf	___wmul@multiplicand+1,w
  3952  1521  07FD               	addwf	___wmul@product+1,f
  3953  1522                     i1l544:	
  3954  1522  3001               	movlw	1
  3955  1523                     u241_25:	
  3956  1523  1003               	clrc
  3957  1524  0DFA               	rlf	___wmul@multiplicand,f
  3958  1525  0DFB               	rlf	___wmul@multiplicand+1,f
  3959  1526  3EFF               	addlw	-1
  3960  1527  1D03               	skipz
  3961  1528  2D23               	goto	u241_25
  3962  1529  3001               	movlw	1
  3963  152A                     u242_25:	
  3964  152A  1003               	clrc
  3965  152B  0CF9               	rrf	___wmul@multiplier+1,f
  3966  152C  0CF8               	rrf	___wmul@multiplier,f
  3967  152D  3EFF               	addlw	-1
  3968  152E  1D03               	skipz
  3969  152F  2D2A               	goto	u242_25
  3970  1530  0879               	movf	___wmul@multiplier+1,w
  3971  1531  0478               	iorwf	___wmul@multiplier,w
  3972  1532  1D03               	skipz
  3973  1533  2D1A               	goto	i1l2287
  3974  1534  087D               	movf	___wmul@product+1,w
  3975  1535  01F9               	clrf	?___wmul+1
  3976  1536  07F9               	addwf	?___wmul+1,f
  3977  1537  087C               	movf	___wmul@product,w
  3978  1538  01F8               	clrf	?___wmul
  3979  1539  07F8               	addwf	?___wmul,f
  3980  153A  0008               	return
  3981  153B                     __end_of___wmul:	
  3982                           
  3983                           	psect	text19
  3984  15B9                     __ptext19:	
  3985 ;; *************** function ___lwdiv *****************
  3986 ;; Defined at:
  3987 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  divisor         2    0[COMMON] unsigned int 
  3990 ;;  dividend        2    2[COMMON] unsigned int 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  quotient        2    5[COMMON] unsigned int 
  3993 ;;  counter         1    7[COMMON] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    0[COMMON] unsigned int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         4       0       0       0       0
  4004 ;;      Locals:         3       0       0       0       0
  4005 ;;      Temps:          1       0       0       0       0
  4006 ;;      Totals:         8       0       0       0       0
  4007 ;;Total ram usage:        8 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_ISR
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function ___lwdiv
  4018  15B9                     ___lwdiv:	
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4022  15B9  01F5               	clrf	___lwdiv@quotient
  4023  15BA  01F6               	clrf	___lwdiv@quotient+1
  4024  15BB  0871               	movf	___lwdiv@divisor+1,w
  4025  15BC  0470               	iorwf	___lwdiv@divisor,w
  4026  15BD  1903               	skipnz
  4027  15BE  2DF0               	goto	i1l2805
  4028  15BF  01F7               	clrf	___lwdiv@counter
  4029  15C0  0AF7               	incf	___lwdiv@counter,f
  4030  15C1                     i1l2793:	
  4031  15C1  1BF1               	btfsc	___lwdiv@divisor+1,7
  4032  15C2  2DCF               	goto	i1l2795
  4033  15C3  3001               	movlw	1
  4034  15C4                     u311_25:	
  4035  15C4  1003               	clrc
  4036  15C5  0DF0               	rlf	___lwdiv@divisor,f
  4037  15C6  0DF1               	rlf	___lwdiv@divisor+1,f
  4038  15C7  3EFF               	addlw	-1
  4039  15C8  1D03               	skipz
  4040  15C9  2DC4               	goto	u311_25
  4041  15CA  3001               	movlw	1
  4042  15CB  00F4               	movwf	??___lwdiv
  4043  15CC  0874               	movf	??___lwdiv,w
  4044  15CD  07F7               	addwf	___lwdiv@counter,f
  4045  15CE  2DC1               	goto	i1l2793
  4046  15CF                     i1l2795:	
  4047  15CF  3001               	movlw	1
  4048  15D0                     u313_25:	
  4049  15D0  1003               	clrc
  4050  15D1  0DF5               	rlf	___lwdiv@quotient,f
  4051  15D2  0DF6               	rlf	___lwdiv@quotient+1,f
  4052  15D3  3EFF               	addlw	-1
  4053  15D4  1D03               	skipz
  4054  15D5  2DD0               	goto	u313_25
  4055  15D6  0871               	movf	___lwdiv@divisor+1,w
  4056  15D7  0273               	subwf	___lwdiv@dividend+1,w
  4057  15D8  1D03               	skipz
  4058  15D9  2DDC               	goto	u314_25
  4059  15DA  0870               	movf	___lwdiv@divisor,w
  4060  15DB  0272               	subwf	___lwdiv@dividend,w
  4061  15DC                     u314_25:	
  4062  15DC  1C03               	skipc
  4063  15DD  2DE5               	goto	i1l2801
  4064  15DE  0870               	movf	___lwdiv@divisor,w
  4065  15DF  02F2               	subwf	___lwdiv@dividend,f
  4066  15E0  0871               	movf	___lwdiv@divisor+1,w
  4067  15E1  1C03               	skipc
  4068  15E2  03F3               	decf	___lwdiv@dividend+1,f
  4069  15E3  02F3               	subwf	___lwdiv@dividend+1,f
  4070  15E4  1475               	bsf	___lwdiv@quotient,0
  4071  15E5                     i1l2801:	
  4072  15E5  3001               	movlw	1
  4073  15E6                     u315_25:	
  4074  15E6  1003               	clrc
  4075  15E7  0CF1               	rrf	___lwdiv@divisor+1,f
  4076  15E8  0CF0               	rrf	___lwdiv@divisor,f
  4077  15E9  3EFF               	addlw	-1
  4078  15EA  1D03               	skipz
  4079  15EB  2DE6               	goto	u315_25
  4080  15EC  3001               	movlw	1
  4081  15ED  02F7               	subwf	___lwdiv@counter,f
  4082  15EE  1D03               	btfss	3,2
  4083  15EF  2DCF               	goto	i1l2795
  4084  15F0                     i1l2805:	
  4085  15F0  0876               	movf	___lwdiv@quotient+1,w
  4086  15F1  01F1               	clrf	?___lwdiv+1
  4087  15F2  07F1               	addwf	?___lwdiv+1,f
  4088  15F3  0875               	movf	___lwdiv@quotient,w
  4089  15F4  01F0               	clrf	?___lwdiv
  4090  15F5  07F0               	addwf	?___lwdiv,f
  4091  15F6  0008               	return
  4092  15F7                     __end_of___lwdiv:	
  4093                           
  4094                           	psect	text20
  4095  1465                     __ptext20:	
  4096 ;; *************** function _USART_ReceiveChar *****************
  4097 ;; Defined at:
  4098 ;;		line 63 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  byte            1    4[COMMON] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      unsigned char 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       0       0       0       0
  4113 ;;      Locals:         1       0       0       0       0
  4114 ;;      Temps:          1       0       0       0       0
  4115 ;;      Totals:         2       0       0       0       0
  4116 ;;Total ram usage:        2 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    2
  4119 ;; This function calls:
  4120 ;;		_USART_WriteString
  4121 ;; This function is called by:
  4122 ;;		_ISR
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function _USART_ReceiveChar
  4128  1465                     _USART_ReceiveChar:	
  4129                           
  4130                           ;usart.c: 65: unsigned char byte;
  4131                           ;usart.c: 67: if (!OERR)
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4135  1465  1283               	bcf	3,5	;RP0=0, select bank0
  4136  1466  1303               	bcf	3,6	;RP1=0, select bank0
  4137  1467  1898               	btfsc	24,1	;volatile
  4138  1468  2C6E               	goto	i1l2635
  4139                           
  4140                           ;usart.c: 68: {
  4141                           ;usart.c: 69: byte = RCREG;
  4142  1469  081A               	movf	26,w	;volatile
  4143  146A  00F3               	movwf	??_USART_ReceiveChar
  4144  146B  0873               	movf	??_USART_ReceiveChar,w
  4145  146C  00F4               	movwf	USART_ReceiveChar@byte
  4146  146D  2C7A               	goto	i1l2643
  4147  146E                     i1l2635:	
  4148                           ;usart.c: 71: }
  4149                           
  4150                           ;usart.c: 70: PIR1bits.RCIF = 0;
  4151                           
  4152                           
  4153                           ;usart.c: 72: else
  4154                           ;usart.c: 73: {
  4155                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  4156  146E  3001               	movlw	(STR_4-__stringbase)& (0+255)
  4157  146F  120A  118A  27E4   	fcall	_USART_WriteString
  4158                           
  4159                           ;usart.c: 76: RCSTAbits.CREN = 0;
  4160  1472  1283               	bcf	3,5	;RP0=0, select bank0
  4161  1473  1303               	bcf	3,6	;RP1=0, select bank0
  4162  1474  1218               	bcf	24,4	;volatile
  4163                           
  4164                           ;usart.c: 77: byte = RCREG;
  4165  1475  081A               	movf	26,w	;volatile
  4166  1476  00F3               	movwf	??_USART_ReceiveChar
  4167  1477  0873               	movf	??_USART_ReceiveChar,w
  4168  1478  00F4               	movwf	USART_ReceiveChar@byte
  4169                           
  4170                           ;usart.c: 78: RCSTAbits.CREN = 1;
  4171  1479  1618               	bsf	24,4	;volatile
  4172  147A                     i1l2643:	
  4173                           
  4174                           ;usart.c: 79: PIR1bits.RCIF = 0;
  4175  147A  128C               	bcf	12,5	;volatile
  4176                           
  4177                           ;usart.c: 80: }
  4178                           ;usart.c: 82: return(byte);
  4179  147B  0874               	movf	USART_ReceiveChar@byte,w
  4180  147C  0008               	return
  4181  147D                     __end_of_USART_ReceiveChar:	
  4182                           
  4183                           	psect	text21
  4184  07E4                     __ptext21:	
  4185 ;; *************** function _USART_WriteString *****************
  4186 ;; Defined at:
  4187 ;;		line 52 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  str             1    wreg     PTR const unsigned char 
  4190 ;;		 -> STR_4(40), STR_1(14), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  str             1    2[COMMON] PTR const unsigned char 
  4193 ;;		 -> STR_4(40), STR_1(14), 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0
  4205 ;;      Temps:          1       0       0       0       0
  4206 ;;      Totals:         2       0       0       0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    1
  4210 ;; This function calls:
  4211 ;;		_USART_WriteChar
  4212 ;; This function is called by:
  4213 ;;		_ISR
  4214 ;;		_USART_ReceiveChar
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _USART_WriteString
  4220  07E4                     _USART_WriteString:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4224                           ;USART_WriteString@str stored from wreg
  4225  07E4  00F2               	movwf	USART_WriteString@str
  4226  07E5                     i1l2267:	
  4227                           ;usart.c: 54: while(*str != '\0')
  4228                           
  4229  07E5  0872               	movf	USART_WriteString@str,w
  4230  07E6  0084               	movwf	4
  4231  07E7  160A  118A  200A  120A  118A  	fcall	stringdir
  4232  07EC  3800               	iorlw	0
  4233  07ED  1903               	btfsc	3,2
  4234  07EE  0008               	return
  4235                           
  4236                           ;usart.c: 55: {
  4237                           ;usart.c: 56: USART_WriteChar(*str);
  4238  07EF  0872               	movf	USART_WriteString@str,w
  4239  07F0  0084               	movwf	4
  4240  07F1  160A  118A  200A  120A  118A  	fcall	stringdir
  4241  07F6  160A  118A  23D4  120A  118A  	fcall	_USART_WriteChar
  4242                           
  4243                           ;usart.c: 57: str++;
  4244  07FB  3001               	movlw	1
  4245  07FC  00F1               	movwf	??_USART_WriteString
  4246  07FD  0871               	movf	??_USART_WriteString,w
  4247  07FE  07F2               	addwf	USART_WriteString@str,f
  4248  07FF  2FE5               	goto	i1l2267
  4249  0800                     __end_of_USART_WriteString:	
  4250                           
  4251                           	psect	text22
  4252  13D4                     __ptext22:	
  4253 ;; *************** function _USART_WriteChar *****************
  4254 ;; Defined at:
  4255 ;;		line 44 in file "R:\Note\Sistema I\Ultimo C no MPLAB\usart.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  byte            1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  byte            1    0[COMMON] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       0       0       0       0
  4270 ;;      Locals:         1       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         1       0       0       0       0
  4273 ;;Total ram usage:        1 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_send
  4279 ;;		_USART_WriteString
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _USART_WriteChar
  4285  13D4                     _USART_WriteChar:	
  4286                           
  4287                           ;incstack = 0
  4288                           ; Regs used in _USART_WriteChar: [wreg]
  4289                           ;USART_WriteChar@byte stored from wreg
  4290  13D4  00F0               	movwf	USART_WriteChar@byte
  4291  13D5                     i1l224:	
  4292                           ;usart.c: 46: while(!PIR1bits.TXIF);
  4293                           
  4294  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  4295  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  4296  13D7  1E0C               	btfss	12,4	;volatile
  4297  13D8  2BD5               	goto	i1l224
  4298                           
  4299                           ;usart.c: 47: TXREG = byte;
  4300  13D9  0870               	movf	USART_WriteChar@byte,w
  4301  13DA  0099               	movwf	25	;volatile
  4302  13DB  0008               	return
  4303  13DC                     __end_of_USART_WriteChar:	
  4304                           
  4305                           	psect	text23
  4306  0039                     __ptext23:	
  4307 ;; *************** function _Fuzzy *****************
  4308 ;; Defined at:
  4309 ;;		line 165 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  a               2   59[BANK0 ] int 
  4314 ;;  a               2   57[BANK0 ] int 
  4315 ;;  a               2   55[BANK0 ] int 
  4316 ;;  deltaRpm        3   70[BANK0 ] float 
  4317 ;;  aumenta         3   67[BANK0 ] float 
  4318 ;;  reduz           3   64[BANK0 ] float 
  4319 ;;  mantem          3   61[BANK0 ] float 
  4320 ;;  tip             3   52[BANK0 ] float 
  4321 ;;  freio           2   50[BANK0 ] unsigned int 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4331 ;;      Params:         0       0       0       0       0
  4332 ;;      Locals:         0      23       0       0       0
  4333 ;;      Temps:          0       0       0       0       0
  4334 ;;      Totals:         0      23       0       0       0
  4335 ;;Total ram usage:       23 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    3
  4338 ;; This function calls:
  4339 ;;		___ftadd
  4340 ;;		___ftdiv
  4341 ;;		___ftge
  4342 ;;		___ftmul
  4343 ;;		___ftneg
  4344 ;;		___fttol
  4345 ;;		___lwtoft
  4346 ;;		_max_val
  4347 ;;		_trapmf
  4348 ;;		_trimf
  4349 ;;		i1_PWM_DutyCycle2
  4350 ;; This function is called by:
  4351 ;;		_ISR
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _Fuzzy
  4357  0039                     _Fuzzy:	
  4358                           
  4359                           ;main.c: 176: setpoint = (float)setpointUI;
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _Fuzzy: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4363  0039  1683               	bsf	3,5	;RP0=1, select bank1
  4364  003A  1303               	bcf	3,6	;RP1=0, select bank1
  4365  003B  0846               	movf	(_setpointUI+1)^(0+128),w
  4366  003C  01F9               	clrf	___lwtoft@c+1
  4367  003D  07F9               	addwf	___lwtoft@c+1,f
  4368  003E  0845               	movf	_setpointUI^(0+128),w
  4369  003F  01F8               	clrf	___lwtoft@c
  4370  0040  07F8               	addwf	___lwtoft@c,f
  4371  0041  160A  118A  2423  120A  118A  	fcall	___lwtoft
  4372  0046  0878               	movf	?___lwtoft,w
  4373  0047  1683               	bsf	3,5	;RP0=1, select bank1
  4374  0048  1303               	bcf	3,6	;RP1=0, select bank1
  4375  0049  00E6               	movwf	_setpoint^(0+128)
  4376  004A  0879               	movf	?___lwtoft+1,w
  4377  004B  00E7               	movwf	(_setpoint+1)^(0+128)
  4378  004C  087A               	movf	?___lwtoft+2,w
  4379  004D  00E8               	movwf	(_setpoint+2)^(0+128)
  4380                           
  4381                           ;main.c: 177: float deltaRpm = 0;
  4382  004E  3000               	movlw	0
  4383  004F  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0050  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0051  00E6               	movwf	Fuzzy@deltaRpm
  4386  0052  3000               	movlw	0
  4387  0053  00E7               	movwf	Fuzzy@deltaRpm+1
  4388  0054  3000               	movlw	0
  4389  0055  00E8               	movwf	Fuzzy@deltaRpm+2
  4390                           
  4391                           ;main.c: 180: unsigned int freio = 0;
  4392  0056  01D2               	clrf	Fuzzy@freio
  4393  0057  01D3               	clrf	Fuzzy@freio+1
  4394                           
  4395                           ;main.c: 186: float mantem = 0;
  4396  0058  3000               	movlw	0
  4397  0059  00DD               	movwf	Fuzzy@mantem
  4398  005A  3000               	movlw	0
  4399  005B  00DE               	movwf	Fuzzy@mantem+1
  4400  005C  3000               	movlw	0
  4401  005D  00DF               	movwf	Fuzzy@mantem+2
  4402                           
  4403                           ;main.c: 187: float reduz = 0;
  4404  005E  3000               	movlw	0
  4405  005F  00E0               	movwf	Fuzzy@reduz
  4406  0060  3000               	movlw	0
  4407  0061  00E1               	movwf	Fuzzy@reduz+1
  4408  0062  3000               	movlw	0
  4409  0063  00E2               	movwf	Fuzzy@reduz+2
  4410                           
  4411                           ;main.c: 188: float aumenta = 0;
  4412  0064  3000               	movlw	0
  4413  0065  00E3               	movwf	Fuzzy@aumenta
  4414  0066  3000               	movlw	0
  4415  0067  00E4               	movwf	Fuzzy@aumenta+1
  4416  0068  3000               	movlw	0
  4417  0069  00E5               	movwf	Fuzzy@aumenta+2
  4418                           
  4419                           ;main.c: 189: float tip;
  4420                           ;main.c: 190: fitemp = 0;
  4421  006A  3000               	movlw	0
  4422  006B  1683               	bsf	3,5	;RP0=1, select bank1
  4423  006C  1303               	bcf	3,6	;RP1=0, select bank1
  4424  006D  00A3               	movwf	_fitemp^(0+128)
  4425  006E  3000               	movlw	0
  4426  006F  00A4               	movwf	(_fitemp+1)^(0+128)
  4427  0070  3000               	movlw	0
  4428  0071  00A5               	movwf	(_fitemp+2)^(0+128)
  4429                           
  4430                           ;main.c: 193: deltaRpm = (setpoint - antigo);
  4431  0072  0866               	movf	_setpoint^(0+128),w
  4432  0073  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0074  1303               	bcf	3,6	;RP1=0, select bank0
  4434  0075  00A3               	movwf	___ftadd@f1
  4435  0076  1683               	bsf	3,5	;RP0=1, select bank1
  4436  0077  1303               	bcf	3,6	;RP1=0, select bank1
  4437  0078  0867               	movf	(_setpoint+1)^(0+128),w
  4438  0079  1283               	bcf	3,5	;RP0=0, select bank0
  4439  007A  1303               	bcf	3,6	;RP1=0, select bank0
  4440  007B  00A4               	movwf	___ftadd@f1+1
  4441  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4442  007D  1303               	bcf	3,6	;RP1=0, select bank1
  4443  007E  0868               	movf	(_setpoint+2)^(0+128),w
  4444  007F  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0080  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0081  00A5               	movwf	___ftadd@f1+2
  4447  0082  1683               	bsf	3,5	;RP0=1, select bank1
  4448  0083  1303               	bcf	3,6	;RP1=0, select bank1
  4449  0084  0863               	movf	_antigo^(0+128),w
  4450  0085  1283               	bcf	3,5	;RP0=0, select bank0
  4451  0086  1303               	bcf	3,6	;RP1=0, select bank0
  4452  0087  00A0               	movwf	___ftneg@f1
  4453  0088  1683               	bsf	3,5	;RP0=1, select bank1
  4454  0089  1303               	bcf	3,6	;RP1=0, select bank1
  4455  008A  0864               	movf	(_antigo+1)^(0+128),w
  4456  008B  1283               	bcf	3,5	;RP0=0, select bank0
  4457  008C  1303               	bcf	3,6	;RP1=0, select bank0
  4458  008D  00A1               	movwf	___ftneg@f1+1
  4459  008E  1683               	bsf	3,5	;RP0=1, select bank1
  4460  008F  1303               	bcf	3,6	;RP1=0, select bank1
  4461  0090  0865               	movf	(_antigo+2)^(0+128),w
  4462  0091  1283               	bcf	3,5	;RP0=0, select bank0
  4463  0092  1303               	bcf	3,6	;RP1=0, select bank0
  4464  0093  00A2               	movwf	___ftneg@f1+2
  4465  0094  160A  118A  23EC  120A  118A  	fcall	___ftneg
  4466  0099  1283               	bcf	3,5	;RP0=0, select bank0
  4467  009A  1303               	bcf	3,6	;RP1=0, select bank0
  4468  009B  0820               	movf	?___ftneg,w
  4469  009C  00A6               	movwf	___ftadd@f2
  4470  009D  0821               	movf	?___ftneg+1,w
  4471  009E  00A7               	movwf	___ftadd@f2+1
  4472  009F  0822               	movf	?___ftneg+2,w
  4473  00A0  00A8               	movwf	___ftadd@f2+2
  4474  00A1  120A  158A  2334  120A  118A  	fcall	___ftadd
  4475  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  4476  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  4477  00A8  0823               	movf	?___ftadd,w
  4478  00A9  00E6               	movwf	Fuzzy@deltaRpm
  4479  00AA  0824               	movf	?___ftadd+1,w
  4480  00AB  00E7               	movwf	Fuzzy@deltaRpm+1
  4481  00AC  0825               	movf	?___ftadd+2,w
  4482  00AD  00E8               	movwf	Fuzzy@deltaRpm+2
  4483                           
  4484                           ;main.c: 194: antigoUI = antigo;
  4485  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4486  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4487  00B0  0863               	movf	_antigo^(0+128),w
  4488  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  4489  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  4490  00B3  00B0               	movwf	___fttol@f1
  4491  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  4492  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  4493  00B6  0864               	movf	(_antigo+1)^(0+128),w
  4494  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  4495  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  4496  00B9  00B1               	movwf	___fttol@f1+1
  4497  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  4498  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  4499  00BC  0865               	movf	(_antigo+2)^(0+128),w
  4500  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  4501  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  4502  00BF  00B2               	movwf	___fttol@f1+2
  4503  00C0  160A  118A  2772  120A  118A  	fcall	___fttol
  4504  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  4505  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  4506  00C7  0831               	movf	?___fttol+1,w
  4507  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  4508  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  4509  00CA  01BE               	clrf	(_antigoUI+1)^(0+128)
  4510  00CB  07BE               	addwf	(_antigoUI+1)^(0+128),f
  4511  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4512  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4513  00CE  0830               	movf	?___fttol,w
  4514  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  4515  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  4516  00D1  01BD               	clrf	_antigoUI^(0+128)
  4517  00D2  07BD               	addwf	_antigoUI^(0+128),f
  4518                           
  4519                           ;main.c: 197: deltaV = deltaRpm;
  4520  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4521  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4522  00D5  0866               	movf	Fuzzy@deltaRpm,w
  4523  00D6  00B0               	movwf	___fttol@f1
  4524  00D7  0867               	movf	Fuzzy@deltaRpm+1,w
  4525  00D8  00B1               	movwf	___fttol@f1+1
  4526  00D9  0868               	movf	Fuzzy@deltaRpm+2,w
  4527  00DA  00B2               	movwf	___fttol@f1+2
  4528  00DB  160A  118A  2772  120A  118A  	fcall	___fttol
  4529  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  4530  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  4531  00E2  0831               	movf	?___fttol+1,w
  4532  00E3  01EE               	clrf	_deltaV+1
  4533  00E4  07EE               	addwf	_deltaV+1,f
  4534  00E5  0830               	movf	?___fttol,w
  4535  00E6  01ED               	clrf	_deltaV
  4536  00E7  07ED               	addwf	_deltaV,f
  4537                           
  4538                           ;main.c: 199: if (deltaRpm <=0)
  4539  00E8  3000               	movlw	0
  4540  00E9  00B0               	movwf	___ftge@ff1
  4541  00EA  3000               	movlw	0
  4542  00EB  00B1               	movwf	___ftge@ff1+1
  4543  00EC  3000               	movlw	0
  4544  00ED  00B2               	movwf	___ftge@ff1+2
  4545  00EE  0866               	movf	Fuzzy@deltaRpm,w
  4546  00EF  00B3               	movwf	___ftge@ff2
  4547  00F0  0867               	movf	Fuzzy@deltaRpm+1,w
  4548  00F1  00B4               	movwf	___ftge@ff2+1
  4549  00F2  0868               	movf	Fuzzy@deltaRpm+2,w
  4550  00F3  00B5               	movwf	___ftge@ff2+2
  4551  00F4  160A  118A  2640  120A  118A  	fcall	___ftge
  4552  00F9  1C03               	btfss	3,0
  4553  00FA  291F               	goto	i1l2517
  4554                           
  4555                           ;main.c: 200: {
  4556                           ;main.c: 201: if(PORTBbits.RB1 == 0)
  4557  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4558  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4559  00FD  1886               	btfsc	6,1	;volatile
  4560  00FE  2901               	goto	i1l149
  4561                           
  4562                           ;main.c: 202: {
  4563                           ;main.c: 203: PORTBbits.RB1 = 1;
  4564  00FF  1486               	bsf	6,1	;volatile
  4565                           
  4566                           ;main.c: 204: }else{
  4567  0100  2902               	goto	i1l2513
  4568  0101                     i1l149:	
  4569                           
  4570                           ;main.c: 205: PORTBbits.RB1 = 0;
  4571  0101  1086               	bcf	6,1	;volatile
  4572  0102                     i1l2513:	
  4573                           
  4574                           ;main.c: 206: }
  4575                           ;main.c: 208: deltaRpm = deltaRpm*-1;
  4576  0102  3000               	movlw	0
  4577  0103  00F8               	movwf	___ftmul@f1
  4578  0104  3080               	movlw	128
  4579  0105  00F9               	movwf	___ftmul@f1+1
  4580  0106  30BF               	movlw	191
  4581  0107  00FA               	movwf	___ftmul@f1+2
  4582  0108  0866               	movf	Fuzzy@deltaRpm,w
  4583  0109  00FB               	movwf	___ftmul@f2
  4584  010A  0867               	movf	Fuzzy@deltaRpm+1,w
  4585  010B  00FC               	movwf	___ftmul@f2+1
  4586  010C  0868               	movf	Fuzzy@deltaRpm+2,w
  4587  010D  00FD               	movwf	___ftmul@f2+2
  4588  010E  120A  158A  218C  120A  118A  	fcall	___ftmul
  4589  0113  0878               	movf	?___ftmul,w
  4590  0114  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0115  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0116  00E6               	movwf	Fuzzy@deltaRpm
  4593  0117  0879               	movf	?___ftmul+1,w
  4594  0118  00E7               	movwf	Fuzzy@deltaRpm+1
  4595  0119  087A               	movf	?___ftmul+2,w
  4596  011A  00E8               	movwf	Fuzzy@deltaRpm+2
  4597                           
  4598                           ;main.c: 209: freio = 1;
  4599  011B  3001               	movlw	1
  4600  011C  00D2               	movwf	Fuzzy@freio
  4601  011D  3000               	movlw	0
  4602  011E  00D3               	movwf	Fuzzy@freio+1
  4603  011F                     i1l2517:	
  4604                           
  4605                           ;main.c: 210: }
  4606                           ;main.c: 212: if (deltaRpm >90) deltaRpm = 90;
  4607  011F  3000               	movlw	0
  4608  0120  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0121  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0122  00B0               	movwf	___ftge@ff1
  4611  0123  30B4               	movlw	180
  4612  0124  00B1               	movwf	___ftge@ff1+1
  4613  0125  3042               	movlw	66
  4614  0126  00B2               	movwf	___ftge@ff1+2
  4615  0127  0866               	movf	Fuzzy@deltaRpm,w
  4616  0128  00B3               	movwf	___ftge@ff2
  4617  0129  0867               	movf	Fuzzy@deltaRpm+1,w
  4618  012A  00B4               	movwf	___ftge@ff2+1
  4619  012B  0868               	movf	Fuzzy@deltaRpm+2,w
  4620  012C  00B5               	movwf	___ftge@ff2+2
  4621  012D  160A  118A  2640  120A  118A  	fcall	___ftge
  4622  0132  1803               	btfsc	3,0
  4623  0133  293C               	goto	i1l2521
  4624  0134  3000               	movlw	0
  4625  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0136  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0137  00E6               	movwf	Fuzzy@deltaRpm
  4628  0138  30B4               	movlw	180
  4629  0139  00E7               	movwf	Fuzzy@deltaRpm+1
  4630  013A  3042               	movlw	66
  4631  013B  00E8               	movwf	Fuzzy@deltaRpm+2
  4632  013C                     i1l2521:	
  4633                           
  4634                           ;main.c: 215: if (deltaRpm < 25)
  4635  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4636  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4637  013E  0866               	movf	Fuzzy@deltaRpm,w
  4638  013F  00B0               	movwf	___ftge@ff1
  4639  0140  0867               	movf	Fuzzy@deltaRpm+1,w
  4640  0141  00B1               	movwf	___ftge@ff1+1
  4641  0142  0868               	movf	Fuzzy@deltaRpm+2,w
  4642  0143  00B2               	movwf	___ftge@ff1+2
  4643  0144  3000               	movlw	0
  4644  0145  00B3               	movwf	___ftge@ff2
  4645  0146  30C8               	movlw	200
  4646  0147  00B4               	movwf	___ftge@ff2+1
  4647  0148  3041               	movlw	65
  4648  0149  00B5               	movwf	___ftge@ff2+2
  4649  014A  160A  118A  2640  120A  118A  	fcall	___ftge
  4650  014F  1803               	btfsc	3,0
  4651  0150  2AB1               	goto	i1l2545
  4652                           
  4653                           ;main.c: 216: {
  4654                           ;main.c: 220: fitemp = trapmf(deltaRpm, 0,0,13,32);
  4655  0151  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0152  1303               	bcf	3,6	;RP1=0, select bank0
  4657  0153  0866               	movf	Fuzzy@deltaRpm,w
  4658  0154  00C0               	movwf	trapmf@x
  4659  0155  0867               	movf	Fuzzy@deltaRpm+1,w
  4660  0156  00C1               	movwf	trapmf@x+1
  4661  0157  0868               	movf	Fuzzy@deltaRpm+2,w
  4662  0158  00C2               	movwf	trapmf@x+2
  4663  0159  3000               	movlw	0
  4664  015A  00C3               	movwf	trapmf@a
  4665  015B  3000               	movlw	0
  4666  015C  00C4               	movwf	trapmf@a+1
  4667  015D  3000               	movlw	0
  4668  015E  00C5               	movwf	trapmf@a+2
  4669  015F  3000               	movlw	0
  4670  0160  00C6               	movwf	trapmf@b
  4671  0161  3000               	movlw	0
  4672  0162  00C7               	movwf	trapmf@b+1
  4673  0163  3000               	movlw	0
  4674  0164  00C8               	movwf	trapmf@b+2
  4675  0165  3000               	movlw	0
  4676  0166  00C9               	movwf	trapmf@c
  4677  0167  3050               	movlw	80
  4678  0168  00CA               	movwf	trapmf@c+1
  4679  0169  3041               	movlw	65
  4680  016A  00CB               	movwf	trapmf@c+2
  4681  016B  3000               	movlw	0
  4682  016C  00CC               	movwf	trapmf@d
  4683  016D  3000               	movlw	0
  4684  016E  00CD               	movwf	trapmf@d+1
  4685  016F  3042               	movlw	66
  4686  0170  00CE               	movwf	trapmf@d+2
  4687  0171  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4688  0176  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0177  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0178  0840               	movf	?_trapmf,w
  4691  0179  1683               	bsf	3,5	;RP0=1, select bank1
  4692  017A  1303               	bcf	3,6	;RP1=0, select bank1
  4693  017B  00A3               	movwf	_fitemp^(0+128)
  4694  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4695  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4696  017E  0841               	movf	?_trapmf+1,w
  4697  017F  1683               	bsf	3,5	;RP0=1, select bank1
  4698  0180  1303               	bcf	3,6	;RP1=0, select bank1
  4699  0181  00A4               	movwf	(_fitemp+1)^(0+128)
  4700  0182  1283               	bcf	3,5	;RP0=0, select bank0
  4701  0183  1303               	bcf	3,6	;RP1=0, select bank0
  4702  0184  0842               	movf	?_trapmf+2,w
  4703  0185  1683               	bsf	3,5	;RP0=1, select bank1
  4704  0186  1303               	bcf	3,6	;RP1=0, select bank1
  4705  0187  00A5               	movwf	(_fitemp+2)^(0+128)
  4706                           
  4707                           ;main.c: 223: fop_rule1 = max_val(fitemp,0.1);
  4708  0188  0823               	movf	_fitemp^(0+128),w
  4709  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4710  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4711  018B  00BC               	movwf	max_val@a
  4712  018C  1683               	bsf	3,5	;RP0=1, select bank1
  4713  018D  1303               	bcf	3,6	;RP1=0, select bank1
  4714  018E  0824               	movf	(_fitemp+1)^(0+128),w
  4715  018F  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0190  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0191  00BD               	movwf	max_val@a+1
  4718  0192  1683               	bsf	3,5	;RP0=1, select bank1
  4719  0193  1303               	bcf	3,6	;RP1=0, select bank1
  4720  0194  0825               	movf	(_fitemp+2)^(0+128),w
  4721  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0197  00BE               	movwf	max_val@a+2
  4724  0198  30CD               	movlw	205
  4725  0199  00BF               	movwf	max_val@b
  4726  019A  30CC               	movlw	204
  4727  019B  00C0               	movwf	max_val@b+1
  4728  019C  303D               	movlw	61
  4729  019D  00C1               	movwf	max_val@b+2
  4730  019E  160A  118A  2498  120A  118A  	fcall	_max_val
  4731  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  4732  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  4733  01A5  083C               	movf	?_max_val,w
  4734  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  4735  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  4736  01A8  00A6               	movwf	_fop_rule1^(0+128)
  4737  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  4738  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  4739  01AB  083D               	movf	?_max_val+1,w
  4740  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  4741  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  4742  01AE  00A7               	movwf	(_fop_rule1+1)^(0+128)
  4743  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  4744  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  4745  01B1  083E               	movf	?_max_val+2,w
  4746  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  4747  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  4748  01B4  00A8               	movwf	(_fop_rule1+2)^(0+128)
  4749                           
  4750                           ;main.c: 226: x=0;
  4751  01B5  3000               	movlw	0
  4752  01B6  00B5               	movwf	_x^(0+128)
  4753  01B7  3000               	movlw	0
  4754  01B8  00B6               	movwf	(_x+1)^(0+128)
  4755  01B9  3000               	movlw	0
  4756  01BA  00B7               	movwf	(_x+2)^(0+128)
  4757                           
  4758                           ;main.c: 227: y=0;
  4759  01BB  3000               	movlw	0
  4760  01BC  00B8               	movwf	_y^(0+128)
  4761  01BD  3000               	movlw	0
  4762  01BE  00B9               	movwf	(_y+1)^(0+128)
  4763  01BF  3000               	movlw	0
  4764  01C0  00BA               	movwf	(_y+2)^(0+128)
  4765                           
  4766                           ;main.c: 228: for (int a=0; a<=90; a++)
  4767  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4768  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4769  01C3  01D7               	clrf	Fuzzy@a
  4770  01C4  01D8               	clrf	Fuzzy@a+1
  4771  01C5  0858               	movf	Fuzzy@a+1,w
  4772  01C6  3A80               	xorlw	128
  4773  01C7  00FF               	movwf	127
  4774  01C8  3080               	movlw	128
  4775  01C9  027F               	subwf	127,w
  4776  01CA  1D03               	skipz
  4777  01CB  29CE               	goto	u285_25
  4778  01CC  305B               	movlw	91
  4779  01CD  0257               	subwf	Fuzzy@a,w
  4780  01CE                     u285_25:	
  4781  01CE  1803               	btfsc	3,0
  4782  01CF  2AB1               	goto	i1l2545
  4783  01D0                     i1l2535:	
  4784                           
  4785                           ;main.c: 229: {
  4786                           ;main.c: 230: y = trapmf(x,0,0,13,32);
  4787  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  4788  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  4789  01D2  0835               	movf	_x^(0+128),w
  4790  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  4791  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  4792  01D5  00C0               	movwf	trapmf@x
  4793  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  4794  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  4795  01D8  0836               	movf	(_x+1)^(0+128),w
  4796  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4797  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4798  01DB  00C1               	movwf	trapmf@x+1
  4799  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  4800  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  4801  01DE  0837               	movf	(_x+2)^(0+128),w
  4802  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4803  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4804  01E1  00C2               	movwf	trapmf@x+2
  4805  01E2  3000               	movlw	0
  4806  01E3  00C3               	movwf	trapmf@a
  4807  01E4  3000               	movlw	0
  4808  01E5  00C4               	movwf	trapmf@a+1
  4809  01E6  3000               	movlw	0
  4810  01E7  00C5               	movwf	trapmf@a+2
  4811  01E8  3000               	movlw	0
  4812  01E9  00C6               	movwf	trapmf@b
  4813  01EA  3000               	movlw	0
  4814  01EB  00C7               	movwf	trapmf@b+1
  4815  01EC  3000               	movlw	0
  4816  01ED  00C8               	movwf	trapmf@b+2
  4817  01EE  3000               	movlw	0
  4818  01EF  00C9               	movwf	trapmf@c
  4819  01F0  3050               	movlw	80
  4820  01F1  00CA               	movwf	trapmf@c+1
  4821  01F2  3041               	movlw	65
  4822  01F3  00CB               	movwf	trapmf@c+2
  4823  01F4  3000               	movlw	0
  4824  01F5  00CC               	movwf	trapmf@d
  4825  01F6  3000               	movlw	0
  4826  01F7  00CD               	movwf	trapmf@d+1
  4827  01F8  3042               	movlw	66
  4828  01F9  00CE               	movwf	trapmf@d+2
  4829  01FA  120A  158A  26AA  120A  118A  	fcall	_trapmf
  4830  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0200  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0201  0840               	movf	?_trapmf,w
  4833  0202  1683               	bsf	3,5	;RP0=1, select bank1
  4834  0203  1303               	bcf	3,6	;RP1=0, select bank1
  4835  0204  00B8               	movwf	_y^(0+128)
  4836  0205  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0206  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0207  0841               	movf	?_trapmf+1,w
  4839  0208  1683               	bsf	3,5	;RP0=1, select bank1
  4840  0209  1303               	bcf	3,6	;RP1=0, select bank1
  4841  020A  00B9               	movwf	(_y+1)^(0+128)
  4842  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4843  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4844  020D  0842               	movf	?_trapmf+2,w
  4845  020E  1683               	bsf	3,5	;RP0=1, select bank1
  4846  020F  1303               	bcf	3,6	;RP1=0, select bank1
  4847  0210  00BA               	movwf	(_y+2)^(0+128)
  4848                           
  4849                           ;main.c: 232: if (y > fop_rule1)
  4850  0211  0826               	movf	_fop_rule1^(0+128),w
  4851  0212  1283               	bcf	3,5	;RP0=0, select bank0
  4852  0213  1303               	bcf	3,6	;RP1=0, select bank0
  4853  0214  00B0               	movwf	___ftge@ff1
  4854  0215  1683               	bsf	3,5	;RP0=1, select bank1
  4855  0216  1303               	bcf	3,6	;RP1=0, select bank1
  4856  0217  0827               	movf	(_fop_rule1+1)^(0+128),w
  4857  0218  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0219  1303               	bcf	3,6	;RP1=0, select bank0
  4859  021A  00B1               	movwf	___ftge@ff1+1
  4860  021B  1683               	bsf	3,5	;RP0=1, select bank1
  4861  021C  1303               	bcf	3,6	;RP1=0, select bank1
  4862  021D  0828               	movf	(_fop_rule1+2)^(0+128),w
  4863  021E  1283               	bcf	3,5	;RP0=0, select bank0
  4864  021F  1303               	bcf	3,6	;RP1=0, select bank0
  4865  0220  00B2               	movwf	___ftge@ff1+2
  4866  0221  1683               	bsf	3,5	;RP0=1, select bank1
  4867  0222  1303               	bcf	3,6	;RP1=0, select bank1
  4868  0223  0838               	movf	_y^(0+128),w
  4869  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0226  00B3               	movwf	___ftge@ff2
  4872  0227  1683               	bsf	3,5	;RP0=1, select bank1
  4873  0228  1303               	bcf	3,6	;RP1=0, select bank1
  4874  0229  0839               	movf	(_y+1)^(0+128),w
  4875  022A  1283               	bcf	3,5	;RP0=0, select bank0
  4876  022B  1303               	bcf	3,6	;RP1=0, select bank0
  4877  022C  00B4               	movwf	___ftge@ff2+1
  4878  022D  1683               	bsf	3,5	;RP0=1, select bank1
  4879  022E  1303               	bcf	3,6	;RP1=0, select bank1
  4880  022F  083A               	movf	(_y+2)^(0+128),w
  4881  0230  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0231  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0232  00B5               	movwf	___ftge@ff2+2
  4884  0233  160A  118A  2640  120A  118A  	fcall	___ftge
  4885  0238  1803               	btfsc	3,0
  4886  0239  2A4A               	goto	i1l2539
  4887                           
  4888                           ;main.c: 233: {
  4889                           ;main.c: 234: reduz += fop_rule1;
  4890  023A  1683               	bsf	3,5	;RP0=1, select bank1
  4891  023B  1303               	bcf	3,6	;RP1=0, select bank1
  4892  023C  0826               	movf	_fop_rule1^(0+128),w
  4893  023D  1283               	bcf	3,5	;RP0=0, select bank0
  4894  023E  1303               	bcf	3,6	;RP1=0, select bank0
  4895  023F  00A3               	movwf	___ftadd@f1
  4896  0240  1683               	bsf	3,5	;RP0=1, select bank1
  4897  0241  1303               	bcf	3,6	;RP1=0, select bank1
  4898  0242  0827               	movf	(_fop_rule1+1)^(0+128),w
  4899  0243  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0244  1303               	bcf	3,6	;RP1=0, select bank0
  4901  0245  00A4               	movwf	___ftadd@f1+1
  4902  0246  1683               	bsf	3,5	;RP0=1, select bank1
  4903  0247  1303               	bcf	3,6	;RP1=0, select bank1
  4904  0248  0828               	movf	(_fop_rule1+2)^(0+128),w
  4905  0249  2A59               	goto	L2
  4906  024A                     i1l2539:	
  4907                           ;main.c: 235: }
  4908                           
  4909                           
  4910                           ;main.c: 236: else
  4911                           ;main.c: 237: {
  4912                           ;main.c: 238: reduz += y;
  4913  024A  1683               	bsf	3,5	;RP0=1, select bank1
  4914  024B  1303               	bcf	3,6	;RP1=0, select bank1
  4915  024C  0838               	movf	_y^(0+128),w
  4916  024D  1283               	bcf	3,5	;RP0=0, select bank0
  4917  024E  1303               	bcf	3,6	;RP1=0, select bank0
  4918  024F  00A3               	movwf	___ftadd@f1
  4919  0250  1683               	bsf	3,5	;RP0=1, select bank1
  4920  0251  1303               	bcf	3,6	;RP1=0, select bank1
  4921  0252  0839               	movf	(_y+1)^(0+128),w
  4922  0253  1283               	bcf	3,5	;RP0=0, select bank0
  4923  0254  1303               	bcf	3,6	;RP1=0, select bank0
  4924  0255  00A4               	movwf	___ftadd@f1+1
  4925  0256  1683               	bsf	3,5	;RP0=1, select bank1
  4926  0257  1303               	bcf	3,6	;RP1=0, select bank1
  4927  0258  083A               	movf	(_y+2)^(0+128),w
  4928  0259                     L2:	
  4929  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4930  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4931  025B  00A5               	movwf	___ftadd@f1+2
  4932  025C  0860               	movf	Fuzzy@reduz,w
  4933  025D  00A6               	movwf	___ftadd@f2
  4934  025E  0861               	movf	Fuzzy@reduz+1,w
  4935  025F  00A7               	movwf	___ftadd@f2+1
  4936  0260  0862               	movf	Fuzzy@reduz+2,w
  4937  0261  00A8               	movwf	___ftadd@f2+2
  4938  0262  120A  158A  2334  120A  118A  	fcall	___ftadd
  4939  0267  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0268  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0269  0823               	movf	?___ftadd,w
  4942  026A  00E0               	movwf	Fuzzy@reduz
  4943  026B  0824               	movf	?___ftadd+1,w
  4944  026C  00E1               	movwf	Fuzzy@reduz+1
  4945  026D  0825               	movf	?___ftadd+2,w
  4946  026E  00E2               	movwf	Fuzzy@reduz+2
  4947                           
  4948                           ;main.c: 239: }
  4949                           ;main.c: 241: x=x+1;
  4950  026F  3000               	movlw	0
  4951  0270  00A3               	movwf	___ftadd@f1
  4952  0271  3080               	movlw	128
  4953  0272  00A4               	movwf	___ftadd@f1+1
  4954  0273  303F               	movlw	63
  4955  0274  00A5               	movwf	___ftadd@f1+2
  4956  0275  1683               	bsf	3,5	;RP0=1, select bank1
  4957  0276  1303               	bcf	3,6	;RP1=0, select bank1
  4958  0277  0835               	movf	_x^(0+128),w
  4959  0278  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0279  1303               	bcf	3,6	;RP1=0, select bank0
  4961  027A  00A6               	movwf	___ftadd@f2
  4962  027B  1683               	bsf	3,5	;RP0=1, select bank1
  4963  027C  1303               	bcf	3,6	;RP1=0, select bank1
  4964  027D  0836               	movf	(_x+1)^(0+128),w
  4965  027E  1283               	bcf	3,5	;RP0=0, select bank0
  4966  027F  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0280  00A7               	movwf	___ftadd@f2+1
  4968  0281  1683               	bsf	3,5	;RP0=1, select bank1
  4969  0282  1303               	bcf	3,6	;RP1=0, select bank1
  4970  0283  0837               	movf	(_x+2)^(0+128),w
  4971  0284  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0285  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0286  00A8               	movwf	___ftadd@f2+2
  4974  0287  120A  158A  2334  120A  118A  	fcall	___ftadd
  4975  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4976  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4977  028E  0823               	movf	?___ftadd,w
  4978  028F  1683               	bsf	3,5	;RP0=1, select bank1
  4979  0290  1303               	bcf	3,6	;RP1=0, select bank1
  4980  0291  00B5               	movwf	_x^(0+128)
  4981  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4982  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4983  0294  0824               	movf	?___ftadd+1,w
  4984  0295  1683               	bsf	3,5	;RP0=1, select bank1
  4985  0296  1303               	bcf	3,6	;RP1=0, select bank1
  4986  0297  00B6               	movwf	(_x+1)^(0+128)
  4987  0298  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0299  1303               	bcf	3,6	;RP1=0, select bank0
  4989  029A  0825               	movf	?___ftadd+2,w
  4990  029B  1683               	bsf	3,5	;RP0=1, select bank1
  4991  029C  1303               	bcf	3,6	;RP1=0, select bank1
  4992  029D  00B7               	movwf	(_x+2)^(0+128)
  4993  029E  3001               	movlw	1
  4994  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4995  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4996  02A1  07D7               	addwf	Fuzzy@a,f
  4997  02A2  1803               	skipnc
  4998  02A3  0AD8               	incf	Fuzzy@a+1,f
  4999  02A4  3000               	movlw	0
  5000  02A5  07D8               	addwf	Fuzzy@a+1,f
  5001  02A6  0858               	movf	Fuzzy@a+1,w
  5002  02A7  3A80               	xorlw	128
  5003  02A8  00FF               	movwf	127
  5004  02A9  3080               	movlw	128
  5005  02AA  027F               	subwf	127,w
  5006  02AB  1D03               	skipz
  5007  02AC  2AAF               	goto	u287_25
  5008  02AD  305B               	movlw	91
  5009  02AE  0257               	subwf	Fuzzy@a,w
  5010  02AF                     u287_25:	
  5011  02AF  1C03               	skipc
  5012  02B0  29D0               	goto	i1l2535
  5013  02B1                     i1l2545:	
  5014                           
  5015                           ;main.c: 242: }
  5016                           ;main.c: 244: }
  5017                           ;main.c: 250: if ((deltaRpm > 20) && (deltaRpm < 70))
  5018  02B1  3000               	movlw	0
  5019  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5020  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5021  02B4  00B0               	movwf	___ftge@ff1
  5022  02B5  30A0               	movlw	160
  5023  02B6  00B1               	movwf	___ftge@ff1+1
  5024  02B7  3041               	movlw	65
  5025  02B8  00B2               	movwf	___ftge@ff1+2
  5026  02B9  0866               	movf	Fuzzy@deltaRpm,w
  5027  02BA  00B3               	movwf	___ftge@ff2
  5028  02BB  0867               	movf	Fuzzy@deltaRpm+1,w
  5029  02BC  00B4               	movwf	___ftge@ff2+1
  5030  02BD  0868               	movf	Fuzzy@deltaRpm+2,w
  5031  02BE  00B5               	movwf	___ftge@ff2+2
  5032  02BF  160A  118A  2640  120A  118A  	fcall	___ftge
  5033  02C4  1803               	btfsc	3,0
  5034  02C5  2C2F               	goto	i1l2571
  5035  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  5036  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  5037  02C8  0866               	movf	Fuzzy@deltaRpm,w
  5038  02C9  00B0               	movwf	___ftge@ff1
  5039  02CA  0867               	movf	Fuzzy@deltaRpm+1,w
  5040  02CB  00B1               	movwf	___ftge@ff1+1
  5041  02CC  0868               	movf	Fuzzy@deltaRpm+2,w
  5042  02CD  00B2               	movwf	___ftge@ff1+2
  5043  02CE  3000               	movlw	0
  5044  02CF  00B3               	movwf	___ftge@ff2
  5045  02D0  308C               	movlw	140
  5046  02D1  00B4               	movwf	___ftge@ff2+1
  5047  02D2  3042               	movlw	66
  5048  02D3  00B5               	movwf	___ftge@ff2+2
  5049  02D4  160A  118A  2640  120A  118A  	fcall	___ftge
  5050  02D9  1803               	btfsc	3,0
  5051  02DA  2C2F               	goto	i1l2571
  5052                           
  5053                           ;main.c: 251: {
  5054                           ;main.c: 254: fitemp = trimf(deltaRpm, 9, 45, 81);
  5055  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  5056  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  5057  02DD  0866               	movf	Fuzzy@deltaRpm,w
  5058  02DE  00C0               	movwf	trimf@x
  5059  02DF  0867               	movf	Fuzzy@deltaRpm+1,w
  5060  02E0  00C1               	movwf	trimf@x+1
  5061  02E1  0868               	movf	Fuzzy@deltaRpm+2,w
  5062  02E2  00C2               	movwf	trimf@x+2
  5063  02E3  3000               	movlw	0
  5064  02E4  00C3               	movwf	trimf@a
  5065  02E5  3010               	movlw	16
  5066  02E6  00C4               	movwf	trimf@a+1
  5067  02E7  3041               	movlw	65
  5068  02E8  00C5               	movwf	trimf@a+2
  5069  02E9  3000               	movlw	0
  5070  02EA  00C6               	movwf	trimf@b
  5071  02EB  3034               	movlw	52
  5072  02EC  00C7               	movwf	trimf@b+1
  5073  02ED  3042               	movlw	66
  5074  02EE  00C8               	movwf	trimf@b+2
  5075  02EF  3000               	movlw	0
  5076  02F0  00C9               	movwf	trimf@c
  5077  02F1  30A2               	movlw	162
  5078  02F2  00CA               	movwf	trimf@c+1
  5079  02F3  3042               	movlw	66
  5080  02F4  00CB               	movwf	trimf@c+2
  5081  02F5  120A  158A  243D  120A  118A  	fcall	_trimf
  5082  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  5083  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  5084  02FC  0840               	movf	?_trimf,w
  5085  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  5086  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  5087  02FF  00A3               	movwf	_fitemp^(0+128)
  5088  0300  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0301  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0302  0841               	movf	?_trimf+1,w
  5091  0303  1683               	bsf	3,5	;RP0=1, select bank1
  5092  0304  1303               	bcf	3,6	;RP1=0, select bank1
  5093  0305  00A4               	movwf	(_fitemp+1)^(0+128)
  5094  0306  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0307  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0308  0842               	movf	?_trimf+2,w
  5097  0309  1683               	bsf	3,5	;RP0=1, select bank1
  5098  030A  1303               	bcf	3,6	;RP1=0, select bank1
  5099  030B  00A5               	movwf	(_fitemp+2)^(0+128)
  5100                           
  5101                           ;main.c: 257: fop_rule2 = max_val(fitemp,0.1);
  5102  030C  0823               	movf	_fitemp^(0+128),w
  5103  030D  1283               	bcf	3,5	;RP0=0, select bank0
  5104  030E  1303               	bcf	3,6	;RP1=0, select bank0
  5105  030F  00BC               	movwf	max_val@a
  5106  0310  1683               	bsf	3,5	;RP0=1, select bank1
  5107  0311  1303               	bcf	3,6	;RP1=0, select bank1
  5108  0312  0824               	movf	(_fitemp+1)^(0+128),w
  5109  0313  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0314  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0315  00BD               	movwf	max_val@a+1
  5112  0316  1683               	bsf	3,5	;RP0=1, select bank1
  5113  0317  1303               	bcf	3,6	;RP1=0, select bank1
  5114  0318  0825               	movf	(_fitemp+2)^(0+128),w
  5115  0319  1283               	bcf	3,5	;RP0=0, select bank0
  5116  031A  1303               	bcf	3,6	;RP1=0, select bank0
  5117  031B  00BE               	movwf	max_val@a+2
  5118  031C  30CD               	movlw	205
  5119  031D  00BF               	movwf	max_val@b
  5120  031E  30CC               	movlw	204
  5121  031F  00C0               	movwf	max_val@b+1
  5122  0320  303D               	movlw	61
  5123  0321  00C1               	movwf	max_val@b+2
  5124  0322  160A  118A  2498  120A  118A  	fcall	_max_val
  5125  0327  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0328  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0329  083C               	movf	?_max_val,w
  5128  032A  1683               	bsf	3,5	;RP0=1, select bank1
  5129  032B  1303               	bcf	3,6	;RP1=0, select bank1
  5130  032C  00A9               	movwf	_fop_rule2^(0+128)
  5131  032D  1283               	bcf	3,5	;RP0=0, select bank0
  5132  032E  1303               	bcf	3,6	;RP1=0, select bank0
  5133  032F  083D               	movf	?_max_val+1,w
  5134  0330  1683               	bsf	3,5	;RP0=1, select bank1
  5135  0331  1303               	bcf	3,6	;RP1=0, select bank1
  5136  0332  00AA               	movwf	(_fop_rule2+1)^(0+128)
  5137  0333  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0334  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0335  083E               	movf	?_max_val+2,w
  5140  0336  1683               	bsf	3,5	;RP0=1, select bank1
  5141  0337  1303               	bcf	3,6	;RP1=0, select bank1
  5142  0338  00AB               	movwf	(_fop_rule2+2)^(0+128)
  5143                           
  5144                           ;main.c: 260: x=0;
  5145  0339  3000               	movlw	0
  5146  033A  00B5               	movwf	_x^(0+128)
  5147  033B  3000               	movlw	0
  5148  033C  00B6               	movwf	(_x+1)^(0+128)
  5149  033D  3000               	movlw	0
  5150  033E  00B7               	movwf	(_x+2)^(0+128)
  5151                           
  5152                           ;main.c: 261: y=0;
  5153  033F  3000               	movlw	0
  5154  0340  00B8               	movwf	_y^(0+128)
  5155  0341  3000               	movlw	0
  5156  0342  00B9               	movwf	(_y+1)^(0+128)
  5157  0343  3000               	movlw	0
  5158  0344  00BA               	movwf	(_y+2)^(0+128)
  5159                           
  5160                           ;main.c: 262: for (int a=0; a<=90; a++)
  5161  0345  1283               	bcf	3,5	;RP0=0, select bank0
  5162  0346  1303               	bcf	3,6	;RP1=0, select bank0
  5163  0347  01D9               	clrf	Fuzzy@a_242
  5164  0348  01DA               	clrf	Fuzzy@a_242+1
  5165  0349  085A               	movf	Fuzzy@a_242+1,w
  5166  034A  3A80               	xorlw	128
  5167  034B  00FF               	movwf	127
  5168  034C  3080               	movlw	128
  5169  034D  027F               	subwf	127,w
  5170  034E  1D03               	skipz
  5171  034F  2B52               	goto	u290_25
  5172  0350  305B               	movlw	91
  5173  0351  0259               	subwf	Fuzzy@a_242,w
  5174  0352                     u290_25:	
  5175  0352  1803               	btfsc	3,0
  5176  0353  2C2F               	goto	i1l2571
  5177  0354                     i1l2561:	
  5178                           
  5179                           ;main.c: 263: {
  5180                           ;main.c: 264: y = trimf(x, 9, 45, 81);
  5181  0354  1683               	bsf	3,5	;RP0=1, select bank1
  5182  0355  1303               	bcf	3,6	;RP1=0, select bank1
  5183  0356  0835               	movf	_x^(0+128),w
  5184  0357  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0358  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0359  00C0               	movwf	trimf@x
  5187  035A  1683               	bsf	3,5	;RP0=1, select bank1
  5188  035B  1303               	bcf	3,6	;RP1=0, select bank1
  5189  035C  0836               	movf	(_x+1)^(0+128),w
  5190  035D  1283               	bcf	3,5	;RP0=0, select bank0
  5191  035E  1303               	bcf	3,6	;RP1=0, select bank0
  5192  035F  00C1               	movwf	trimf@x+1
  5193  0360  1683               	bsf	3,5	;RP0=1, select bank1
  5194  0361  1303               	bcf	3,6	;RP1=0, select bank1
  5195  0362  0837               	movf	(_x+2)^(0+128),w
  5196  0363  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0364  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0365  00C2               	movwf	trimf@x+2
  5199  0366  3000               	movlw	0
  5200  0367  00C3               	movwf	trimf@a
  5201  0368  3010               	movlw	16
  5202  0369  00C4               	movwf	trimf@a+1
  5203  036A  3041               	movlw	65
  5204  036B  00C5               	movwf	trimf@a+2
  5205  036C  3000               	movlw	0
  5206  036D  00C6               	movwf	trimf@b
  5207  036E  3034               	movlw	52
  5208  036F  00C7               	movwf	trimf@b+1
  5209  0370  3042               	movlw	66
  5210  0371  00C8               	movwf	trimf@b+2
  5211  0372  3000               	movlw	0
  5212  0373  00C9               	movwf	trimf@c
  5213  0374  30A2               	movlw	162
  5214  0375  00CA               	movwf	trimf@c+1
  5215  0376  3042               	movlw	66
  5216  0377  00CB               	movwf	trimf@c+2
  5217  0378  120A  158A  243D  120A  118A  	fcall	_trimf
  5218  037D  1283               	bcf	3,5	;RP0=0, select bank0
  5219  037E  1303               	bcf	3,6	;RP1=0, select bank0
  5220  037F  0840               	movf	?_trimf,w
  5221  0380  1683               	bsf	3,5	;RP0=1, select bank1
  5222  0381  1303               	bcf	3,6	;RP1=0, select bank1
  5223  0382  00B8               	movwf	_y^(0+128)
  5224  0383  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0384  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0385  0841               	movf	?_trimf+1,w
  5227  0386  1683               	bsf	3,5	;RP0=1, select bank1
  5228  0387  1303               	bcf	3,6	;RP1=0, select bank1
  5229  0388  00B9               	movwf	(_y+1)^(0+128)
  5230  0389  1283               	bcf	3,5	;RP0=0, select bank0
  5231  038A  1303               	bcf	3,6	;RP1=0, select bank0
  5232  038B  0842               	movf	?_trimf+2,w
  5233  038C  1683               	bsf	3,5	;RP0=1, select bank1
  5234  038D  1303               	bcf	3,6	;RP1=0, select bank1
  5235  038E  00BA               	movwf	(_y+2)^(0+128)
  5236                           
  5237                           ;main.c: 266: if (y >= fop_rule2)
  5238  038F  0838               	movf	_y^(0+128),w
  5239  0390  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0391  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0392  00B0               	movwf	___ftge@ff1
  5242  0393  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0394  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0395  0839               	movf	(_y+1)^(0+128),w
  5245  0396  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0397  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0398  00B1               	movwf	___ftge@ff1+1
  5248  0399  1683               	bsf	3,5	;RP0=1, select bank1
  5249  039A  1303               	bcf	3,6	;RP1=0, select bank1
  5250  039B  083A               	movf	(_y+2)^(0+128),w
  5251  039C  1283               	bcf	3,5	;RP0=0, select bank0
  5252  039D  1303               	bcf	3,6	;RP1=0, select bank0
  5253  039E  00B2               	movwf	___ftge@ff1+2
  5254  039F  1683               	bsf	3,5	;RP0=1, select bank1
  5255  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  5256  03A1  0829               	movf	_fop_rule2^(0+128),w
  5257  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  5258  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  5259  03A4  00B3               	movwf	___ftge@ff2
  5260  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  5261  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  5262  03A7  082A               	movf	(_fop_rule2+1)^(0+128),w
  5263  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  5264  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  5265  03AA  00B4               	movwf	___ftge@ff2+1
  5266  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  5267  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  5268  03AD  082B               	movf	(_fop_rule2+2)^(0+128),w
  5269  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  5270  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  5271  03B0  00B5               	movwf	___ftge@ff2+2
  5272  03B1  160A  118A  2640  120A  118A  	fcall	___ftge
  5273  03B6  1C03               	btfss	3,0
  5274  03B7  2BC8               	goto	i1l2565
  5275                           
  5276                           ;main.c: 267: {
  5277                           ;main.c: 268: mantem += fop_rule2;
  5278  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  5279  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  5280  03BA  0829               	movf	_fop_rule2^(0+128),w
  5281  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  5282  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  5283  03BD  00A3               	movwf	___ftadd@f1
  5284  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  5285  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  5286  03C0  082A               	movf	(_fop_rule2+1)^(0+128),w
  5287  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  5288  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  5289  03C3  00A4               	movwf	___ftadd@f1+1
  5290  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  5291  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  5292  03C6  082B               	movf	(_fop_rule2+2)^(0+128),w
  5293  03C7  2BD7               	goto	L3
  5294  03C8                     i1l2565:	
  5295                           ;main.c: 269: }
  5296                           
  5297                           
  5298                           ;main.c: 270: else
  5299                           ;main.c: 271: {
  5300                           ;main.c: 272: mantem += y;
  5301  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  5302  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  5303  03CA  0838               	movf	_y^(0+128),w
  5304  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  5305  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  5306  03CD  00A3               	movwf	___ftadd@f1
  5307  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  5308  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  5309  03D0  0839               	movf	(_y+1)^(0+128),w
  5310  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  5311  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  5312  03D3  00A4               	movwf	___ftadd@f1+1
  5313  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  5314  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  5315  03D6  083A               	movf	(_y+2)^(0+128),w
  5316  03D7                     L3:	
  5317  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  5318  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  5319  03D9  00A5               	movwf	___ftadd@f1+2
  5320  03DA  085D               	movf	Fuzzy@mantem,w
  5321  03DB  00A6               	movwf	___ftadd@f2
  5322  03DC  085E               	movf	Fuzzy@mantem+1,w
  5323  03DD  00A7               	movwf	___ftadd@f2+1
  5324  03DE  085F               	movf	Fuzzy@mantem+2,w
  5325  03DF  00A8               	movwf	___ftadd@f2+2
  5326  03E0  120A  158A  2334  120A  118A  	fcall	___ftadd
  5327  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  5328  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  5329  03E7  0823               	movf	?___ftadd,w
  5330  03E8  00DD               	movwf	Fuzzy@mantem
  5331  03E9  0824               	movf	?___ftadd+1,w
  5332  03EA  00DE               	movwf	Fuzzy@mantem+1
  5333  03EB  0825               	movf	?___ftadd+2,w
  5334  03EC  00DF               	movwf	Fuzzy@mantem+2
  5335                           
  5336                           ;main.c: 273: }
  5337                           ;main.c: 275: x=x+1;
  5338  03ED  3000               	movlw	0
  5339  03EE  00A3               	movwf	___ftadd@f1
  5340  03EF  3080               	movlw	128
  5341  03F0  00A4               	movwf	___ftadd@f1+1
  5342  03F1  303F               	movlw	63
  5343  03F2  00A5               	movwf	___ftadd@f1+2
  5344  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  5345  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  5346  03F5  0835               	movf	_x^(0+128),w
  5347  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  5348  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  5349  03F8  00A6               	movwf	___ftadd@f2
  5350  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  5351  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  5352  03FB  0836               	movf	(_x+1)^(0+128),w
  5353  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  5354  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  5355  03FE  00A7               	movwf	___ftadd@f2+1
  5356  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  5357  0400  1303               	bcf	3,6	;RP1=0, select bank1
  5358  0401  0837               	movf	(_x+2)^(0+128),w
  5359  0402  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0403  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0404  00A8               	movwf	___ftadd@f2+2
  5362  0405  120A  158A  2334  120A  118A  	fcall	___ftadd
  5363  040A  1283               	bcf	3,5	;RP0=0, select bank0
  5364  040B  1303               	bcf	3,6	;RP1=0, select bank0
  5365  040C  0823               	movf	?___ftadd,w
  5366  040D  1683               	bsf	3,5	;RP0=1, select bank1
  5367  040E  1303               	bcf	3,6	;RP1=0, select bank1
  5368  040F  00B5               	movwf	_x^(0+128)
  5369  0410  1283               	bcf	3,5	;RP0=0, select bank0
  5370  0411  1303               	bcf	3,6	;RP1=0, select bank0
  5371  0412  0824               	movf	?___ftadd+1,w
  5372  0413  1683               	bsf	3,5	;RP0=1, select bank1
  5373  0414  1303               	bcf	3,6	;RP1=0, select bank1
  5374  0415  00B6               	movwf	(_x+1)^(0+128)
  5375  0416  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0417  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0418  0825               	movf	?___ftadd+2,w
  5378  0419  1683               	bsf	3,5	;RP0=1, select bank1
  5379  041A  1303               	bcf	3,6	;RP1=0, select bank1
  5380  041B  00B7               	movwf	(_x+2)^(0+128)
  5381  041C  3001               	movlw	1
  5382  041D  1283               	bcf	3,5	;RP0=0, select bank0
  5383  041E  1303               	bcf	3,6	;RP1=0, select bank0
  5384  041F  07D9               	addwf	Fuzzy@a_242,f
  5385  0420  1803               	skipnc
  5386  0421  0ADA               	incf	Fuzzy@a_242+1,f
  5387  0422  3000               	movlw	0
  5388  0423  07DA               	addwf	Fuzzy@a_242+1,f
  5389  0424  085A               	movf	Fuzzy@a_242+1,w
  5390  0425  3A80               	xorlw	128
  5391  0426  00FF               	movwf	127
  5392  0427  3080               	movlw	128
  5393  0428  027F               	subwf	127,w
  5394  0429  1D03               	skipz
  5395  042A  2C2D               	goto	u292_25
  5396  042B  305B               	movlw	91
  5397  042C  0259               	subwf	Fuzzy@a_242,w
  5398  042D                     u292_25:	
  5399  042D  1C03               	skipc
  5400  042E  2B54               	goto	i1l2561
  5401  042F                     i1l2571:	
  5402                           
  5403                           ;main.c: 276: }
  5404                           ;main.c: 278: }
  5405                           ;main.c: 284: if (deltaRpm > 70 )
  5406  042F  3000               	movlw	0
  5407  0430  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0431  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0432  00B0               	movwf	___ftge@ff1
  5410  0433  308C               	movlw	140
  5411  0434  00B1               	movwf	___ftge@ff1+1
  5412  0435  3042               	movlw	66
  5413  0436  00B2               	movwf	___ftge@ff1+2
  5414  0437  0866               	movf	Fuzzy@deltaRpm,w
  5415  0438  00B3               	movwf	___ftge@ff2
  5416  0439  0867               	movf	Fuzzy@deltaRpm+1,w
  5417  043A  00B4               	movwf	___ftge@ff2+1
  5418  043B  0868               	movf	Fuzzy@deltaRpm+2,w
  5419  043C  00B5               	movwf	___ftge@ff2+2
  5420  043D  160A  118A  2640  120A  118A  	fcall	___ftge
  5421  0442  1803               	btfsc	3,0
  5422  0443  2DA4               	goto	i1l2595
  5423                           
  5424                           ;main.c: 285: {
  5425                           ;main.c: 288: fitemp = trapmf(deltaRpm, 62, 79, 90, 90);
  5426  0444  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0445  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0446  0866               	movf	Fuzzy@deltaRpm,w
  5429  0447  00C0               	movwf	trapmf@x
  5430  0448  0867               	movf	Fuzzy@deltaRpm+1,w
  5431  0449  00C1               	movwf	trapmf@x+1
  5432  044A  0868               	movf	Fuzzy@deltaRpm+2,w
  5433  044B  00C2               	movwf	trapmf@x+2
  5434  044C  3000               	movlw	0
  5435  044D  00C3               	movwf	trapmf@a
  5436  044E  3078               	movlw	120
  5437  044F  00C4               	movwf	trapmf@a+1
  5438  0450  3042               	movlw	66
  5439  0451  00C5               	movwf	trapmf@a+2
  5440  0452  3000               	movlw	0
  5441  0453  00C6               	movwf	trapmf@b
  5442  0454  309E               	movlw	158
  5443  0455  00C7               	movwf	trapmf@b+1
  5444  0456  3042               	movlw	66
  5445  0457  00C8               	movwf	trapmf@b+2
  5446  0458  3000               	movlw	0
  5447  0459  00C9               	movwf	trapmf@c
  5448  045A  30B4               	movlw	180
  5449  045B  00CA               	movwf	trapmf@c+1
  5450  045C  3042               	movlw	66
  5451  045D  00CB               	movwf	trapmf@c+2
  5452  045E  3000               	movlw	0
  5453  045F  00CC               	movwf	trapmf@d
  5454  0460  30B4               	movlw	180
  5455  0461  00CD               	movwf	trapmf@d+1
  5456  0462  3042               	movlw	66
  5457  0463  00CE               	movwf	trapmf@d+2
  5458  0464  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5459  0469  1283               	bcf	3,5	;RP0=0, select bank0
  5460  046A  1303               	bcf	3,6	;RP1=0, select bank0
  5461  046B  0840               	movf	?_trapmf,w
  5462  046C  1683               	bsf	3,5	;RP0=1, select bank1
  5463  046D  1303               	bcf	3,6	;RP1=0, select bank1
  5464  046E  00A3               	movwf	_fitemp^(0+128)
  5465  046F  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0470  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0471  0841               	movf	?_trapmf+1,w
  5468  0472  1683               	bsf	3,5	;RP0=1, select bank1
  5469  0473  1303               	bcf	3,6	;RP1=0, select bank1
  5470  0474  00A4               	movwf	(_fitemp+1)^(0+128)
  5471  0475  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0476  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0477  0842               	movf	?_trapmf+2,w
  5474  0478  1683               	bsf	3,5	;RP0=1, select bank1
  5475  0479  1303               	bcf	3,6	;RP1=0, select bank1
  5476  047A  00A5               	movwf	(_fitemp+2)^(0+128)
  5477                           
  5478                           ;main.c: 292: fop_rule3 = max_val(fitemp,0.1);
  5479  047B  0823               	movf	_fitemp^(0+128),w
  5480  047C  1283               	bcf	3,5	;RP0=0, select bank0
  5481  047D  1303               	bcf	3,6	;RP1=0, select bank0
  5482  047E  00BC               	movwf	max_val@a
  5483  047F  1683               	bsf	3,5	;RP0=1, select bank1
  5484  0480  1303               	bcf	3,6	;RP1=0, select bank1
  5485  0481  0824               	movf	(_fitemp+1)^(0+128),w
  5486  0482  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0483  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0484  00BD               	movwf	max_val@a+1
  5489  0485  1683               	bsf	3,5	;RP0=1, select bank1
  5490  0486  1303               	bcf	3,6	;RP1=0, select bank1
  5491  0487  0825               	movf	(_fitemp+2)^(0+128),w
  5492  0488  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0489  1303               	bcf	3,6	;RP1=0, select bank0
  5494  048A  00BE               	movwf	max_val@a+2
  5495  048B  30CD               	movlw	205
  5496  048C  00BF               	movwf	max_val@b
  5497  048D  30CC               	movlw	204
  5498  048E  00C0               	movwf	max_val@b+1
  5499  048F  303D               	movlw	61
  5500  0490  00C1               	movwf	max_val@b+2
  5501  0491  160A  118A  2498  120A  118A  	fcall	_max_val
  5502  0496  1283               	bcf	3,5	;RP0=0, select bank0
  5503  0497  1303               	bcf	3,6	;RP1=0, select bank0
  5504  0498  083C               	movf	?_max_val,w
  5505  0499  1683               	bsf	3,5	;RP0=1, select bank1
  5506  049A  1303               	bcf	3,6	;RP1=0, select bank1
  5507  049B  00AC               	movwf	_fop_rule3^(0+128)
  5508  049C  1283               	bcf	3,5	;RP0=0, select bank0
  5509  049D  1303               	bcf	3,6	;RP1=0, select bank0
  5510  049E  083D               	movf	?_max_val+1,w
  5511  049F  1683               	bsf	3,5	;RP0=1, select bank1
  5512  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  5513  04A1  00AD               	movwf	(_fop_rule3+1)^(0+128)
  5514  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  5515  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  5516  04A4  083E               	movf	?_max_val+2,w
  5517  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  5518  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  5519  04A7  00AE               	movwf	(_fop_rule3+2)^(0+128)
  5520                           
  5521                           ;main.c: 295: x=0;
  5522  04A8  3000               	movlw	0
  5523  04A9  00B5               	movwf	_x^(0+128)
  5524  04AA  3000               	movlw	0
  5525  04AB  00B6               	movwf	(_x+1)^(0+128)
  5526  04AC  3000               	movlw	0
  5527  04AD  00B7               	movwf	(_x+2)^(0+128)
  5528                           
  5529                           ;main.c: 296: y=0;
  5530  04AE  3000               	movlw	0
  5531  04AF  00B8               	movwf	_y^(0+128)
  5532  04B0  3000               	movlw	0
  5533  04B1  00B9               	movwf	(_y+1)^(0+128)
  5534  04B2  3000               	movlw	0
  5535  04B3  00BA               	movwf	(_y+2)^(0+128)
  5536                           
  5537                           ;main.c: 297: for (int a=0; a<=90; a++)
  5538  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5539  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5540  04B6  01DB               	clrf	Fuzzy@a_243
  5541  04B7  01DC               	clrf	Fuzzy@a_243+1
  5542  04B8  085C               	movf	Fuzzy@a_243+1,w
  5543  04B9  3A80               	xorlw	128
  5544  04BA  00FF               	movwf	127
  5545  04BB  3080               	movlw	128
  5546  04BC  027F               	subwf	127,w
  5547  04BD  1D03               	skipz
  5548  04BE  2CC1               	goto	u294_25
  5549  04BF  305B               	movlw	91
  5550  04C0  025B               	subwf	Fuzzy@a_243,w
  5551  04C1                     u294_25:	
  5552  04C1  1803               	btfsc	3,0
  5553  04C2  2DA4               	goto	i1l2595
  5554  04C3                     i1l2585:	
  5555                           
  5556                           ;main.c: 298: {
  5557                           ;main.c: 299: y = trapmf(x, 62, 79, 90, 90);
  5558  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  5559  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  5560  04C5  0835               	movf	_x^(0+128),w
  5561  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  5562  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  5563  04C8  00C0               	movwf	trapmf@x
  5564  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  5565  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  5566  04CB  0836               	movf	(_x+1)^(0+128),w
  5567  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  5568  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  5569  04CE  00C1               	movwf	trapmf@x+1
  5570  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  5571  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  5572  04D1  0837               	movf	(_x+2)^(0+128),w
  5573  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  5574  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  5575  04D4  00C2               	movwf	trapmf@x+2
  5576  04D5  3000               	movlw	0
  5577  04D6  00C3               	movwf	trapmf@a
  5578  04D7  3078               	movlw	120
  5579  04D8  00C4               	movwf	trapmf@a+1
  5580  04D9  3042               	movlw	66
  5581  04DA  00C5               	movwf	trapmf@a+2
  5582  04DB  3000               	movlw	0
  5583  04DC  00C6               	movwf	trapmf@b
  5584  04DD  309E               	movlw	158
  5585  04DE  00C7               	movwf	trapmf@b+1
  5586  04DF  3042               	movlw	66
  5587  04E0  00C8               	movwf	trapmf@b+2
  5588  04E1  3000               	movlw	0
  5589  04E2  00C9               	movwf	trapmf@c
  5590  04E3  30B4               	movlw	180
  5591  04E4  00CA               	movwf	trapmf@c+1
  5592  04E5  3042               	movlw	66
  5593  04E6  00CB               	movwf	trapmf@c+2
  5594  04E7  3000               	movlw	0
  5595  04E8  00CC               	movwf	trapmf@d
  5596  04E9  30B4               	movlw	180
  5597  04EA  00CD               	movwf	trapmf@d+1
  5598  04EB  3042               	movlw	66
  5599  04EC  00CE               	movwf	trapmf@d+2
  5600  04ED  120A  158A  26AA  120A  118A  	fcall	_trapmf
  5601  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  5602  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  5603  04F4  0840               	movf	?_trapmf,w
  5604  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  5605  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  5606  04F7  00B8               	movwf	_y^(0+128)
  5607  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  5608  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  5609  04FA  0841               	movf	?_trapmf+1,w
  5610  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  5611  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  5612  04FD  00B9               	movwf	(_y+1)^(0+128)
  5613  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  5614  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  5615  0500  0842               	movf	?_trapmf+2,w
  5616  0501  1683               	bsf	3,5	;RP0=1, select bank1
  5617  0502  1303               	bcf	3,6	;RP1=0, select bank1
  5618  0503  00BA               	movwf	(_y+2)^(0+128)
  5619                           
  5620                           ;main.c: 301: if (y >= fop_rule3)
  5621  0504  0838               	movf	_y^(0+128),w
  5622  0505  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0506  1303               	bcf	3,6	;RP1=0, select bank0
  5624  0507  00B0               	movwf	___ftge@ff1
  5625  0508  1683               	bsf	3,5	;RP0=1, select bank1
  5626  0509  1303               	bcf	3,6	;RP1=0, select bank1
  5627  050A  0839               	movf	(_y+1)^(0+128),w
  5628  050B  1283               	bcf	3,5	;RP0=0, select bank0
  5629  050C  1303               	bcf	3,6	;RP1=0, select bank0
  5630  050D  00B1               	movwf	___ftge@ff1+1
  5631  050E  1683               	bsf	3,5	;RP0=1, select bank1
  5632  050F  1303               	bcf	3,6	;RP1=0, select bank1
  5633  0510  083A               	movf	(_y+2)^(0+128),w
  5634  0511  1283               	bcf	3,5	;RP0=0, select bank0
  5635  0512  1303               	bcf	3,6	;RP1=0, select bank0
  5636  0513  00B2               	movwf	___ftge@ff1+2
  5637  0514  1683               	bsf	3,5	;RP0=1, select bank1
  5638  0515  1303               	bcf	3,6	;RP1=0, select bank1
  5639  0516  082C               	movf	_fop_rule3^(0+128),w
  5640  0517  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0518  1303               	bcf	3,6	;RP1=0, select bank0
  5642  0519  00B3               	movwf	___ftge@ff2
  5643  051A  1683               	bsf	3,5	;RP0=1, select bank1
  5644  051B  1303               	bcf	3,6	;RP1=0, select bank1
  5645  051C  082D               	movf	(_fop_rule3+1)^(0+128),w
  5646  051D  1283               	bcf	3,5	;RP0=0, select bank0
  5647  051E  1303               	bcf	3,6	;RP1=0, select bank0
  5648  051F  00B4               	movwf	___ftge@ff2+1
  5649  0520  1683               	bsf	3,5	;RP0=1, select bank1
  5650  0521  1303               	bcf	3,6	;RP1=0, select bank1
  5651  0522  082E               	movf	(_fop_rule3+2)^(0+128),w
  5652  0523  1283               	bcf	3,5	;RP0=0, select bank0
  5653  0524  1303               	bcf	3,6	;RP1=0, select bank0
  5654  0525  00B5               	movwf	___ftge@ff2+2
  5655  0526  160A  118A  2640  120A  118A  	fcall	___ftge
  5656  052B  1C03               	btfss	3,0
  5657  052C  2D3D               	goto	i1l2589
  5658                           
  5659                           ;main.c: 302: {
  5660                           ;main.c: 303: aumenta += fop_rule3;
  5661  052D  1683               	bsf	3,5	;RP0=1, select bank1
  5662  052E  1303               	bcf	3,6	;RP1=0, select bank1
  5663  052F  082C               	movf	_fop_rule3^(0+128),w
  5664  0530  1283               	bcf	3,5	;RP0=0, select bank0
  5665  0531  1303               	bcf	3,6	;RP1=0, select bank0
  5666  0532  00A3               	movwf	___ftadd@f1
  5667  0533  1683               	bsf	3,5	;RP0=1, select bank1
  5668  0534  1303               	bcf	3,6	;RP1=0, select bank1
  5669  0535  082D               	movf	(_fop_rule3+1)^(0+128),w
  5670  0536  1283               	bcf	3,5	;RP0=0, select bank0
  5671  0537  1303               	bcf	3,6	;RP1=0, select bank0
  5672  0538  00A4               	movwf	___ftadd@f1+1
  5673  0539  1683               	bsf	3,5	;RP0=1, select bank1
  5674  053A  1303               	bcf	3,6	;RP1=0, select bank1
  5675  053B  082E               	movf	(_fop_rule3+2)^(0+128),w
  5676  053C  2D4C               	goto	L4
  5677  053D                     i1l2589:	
  5678                           ;main.c: 304: }
  5679                           
  5680                           
  5681                           ;main.c: 305: else
  5682                           ;main.c: 306: {
  5683                           ;main.c: 307: aumenta += y;
  5684  053D  1683               	bsf	3,5	;RP0=1, select bank1
  5685  053E  1303               	bcf	3,6	;RP1=0, select bank1
  5686  053F  0838               	movf	_y^(0+128),w
  5687  0540  1283               	bcf	3,5	;RP0=0, select bank0
  5688  0541  1303               	bcf	3,6	;RP1=0, select bank0
  5689  0542  00A3               	movwf	___ftadd@f1
  5690  0543  1683               	bsf	3,5	;RP0=1, select bank1
  5691  0544  1303               	bcf	3,6	;RP1=0, select bank1
  5692  0545  0839               	movf	(_y+1)^(0+128),w
  5693  0546  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0547  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0548  00A4               	movwf	___ftadd@f1+1
  5696  0549  1683               	bsf	3,5	;RP0=1, select bank1
  5697  054A  1303               	bcf	3,6	;RP1=0, select bank1
  5698  054B  083A               	movf	(_y+2)^(0+128),w
  5699  054C                     L4:	
  5700  054C  1283               	bcf	3,5	;RP0=0, select bank0
  5701  054D  1303               	bcf	3,6	;RP1=0, select bank0
  5702  054E  00A5               	movwf	___ftadd@f1+2
  5703  054F  0863               	movf	Fuzzy@aumenta,w
  5704  0550  00A6               	movwf	___ftadd@f2
  5705  0551  0864               	movf	Fuzzy@aumenta+1,w
  5706  0552  00A7               	movwf	___ftadd@f2+1
  5707  0553  0865               	movf	Fuzzy@aumenta+2,w
  5708  0554  00A8               	movwf	___ftadd@f2+2
  5709  0555  120A  158A  2334  120A  118A  	fcall	___ftadd
  5710  055A  1283               	bcf	3,5	;RP0=0, select bank0
  5711  055B  1303               	bcf	3,6	;RP1=0, select bank0
  5712  055C  0823               	movf	?___ftadd,w
  5713  055D  00E3               	movwf	Fuzzy@aumenta
  5714  055E  0824               	movf	?___ftadd+1,w
  5715  055F  00E4               	movwf	Fuzzy@aumenta+1
  5716  0560  0825               	movf	?___ftadd+2,w
  5717  0561  00E5               	movwf	Fuzzy@aumenta+2
  5718                           
  5719                           ;main.c: 308: }
  5720                           ;main.c: 310: x=x+1;
  5721  0562  3000               	movlw	0
  5722  0563  00A3               	movwf	___ftadd@f1
  5723  0564  3080               	movlw	128
  5724  0565  00A4               	movwf	___ftadd@f1+1
  5725  0566  303F               	movlw	63
  5726  0567  00A5               	movwf	___ftadd@f1+2
  5727  0568  1683               	bsf	3,5	;RP0=1, select bank1
  5728  0569  1303               	bcf	3,6	;RP1=0, select bank1
  5729  056A  0835               	movf	_x^(0+128),w
  5730  056B  1283               	bcf	3,5	;RP0=0, select bank0
  5731  056C  1303               	bcf	3,6	;RP1=0, select bank0
  5732  056D  00A6               	movwf	___ftadd@f2
  5733  056E  1683               	bsf	3,5	;RP0=1, select bank1
  5734  056F  1303               	bcf	3,6	;RP1=0, select bank1
  5735  0570  0836               	movf	(_x+1)^(0+128),w
  5736  0571  1283               	bcf	3,5	;RP0=0, select bank0
  5737  0572  1303               	bcf	3,6	;RP1=0, select bank0
  5738  0573  00A7               	movwf	___ftadd@f2+1
  5739  0574  1683               	bsf	3,5	;RP0=1, select bank1
  5740  0575  1303               	bcf	3,6	;RP1=0, select bank1
  5741  0576  0837               	movf	(_x+2)^(0+128),w
  5742  0577  1283               	bcf	3,5	;RP0=0, select bank0
  5743  0578  1303               	bcf	3,6	;RP1=0, select bank0
  5744  0579  00A8               	movwf	___ftadd@f2+2
  5745  057A  120A  158A  2334  120A  118A  	fcall	___ftadd
  5746  057F  1283               	bcf	3,5	;RP0=0, select bank0
  5747  0580  1303               	bcf	3,6	;RP1=0, select bank0
  5748  0581  0823               	movf	?___ftadd,w
  5749  0582  1683               	bsf	3,5	;RP0=1, select bank1
  5750  0583  1303               	bcf	3,6	;RP1=0, select bank1
  5751  0584  00B5               	movwf	_x^(0+128)
  5752  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5754  0587  0824               	movf	?___ftadd+1,w
  5755  0588  1683               	bsf	3,5	;RP0=1, select bank1
  5756  0589  1303               	bcf	3,6	;RP1=0, select bank1
  5757  058A  00B6               	movwf	(_x+1)^(0+128)
  5758  058B  1283               	bcf	3,5	;RP0=0, select bank0
  5759  058C  1303               	bcf	3,6	;RP1=0, select bank0
  5760  058D  0825               	movf	?___ftadd+2,w
  5761  058E  1683               	bsf	3,5	;RP0=1, select bank1
  5762  058F  1303               	bcf	3,6	;RP1=0, select bank1
  5763  0590  00B7               	movwf	(_x+2)^(0+128)
  5764  0591  3001               	movlw	1
  5765  0592  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0593  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0594  07DB               	addwf	Fuzzy@a_243,f
  5768  0595  1803               	skipnc
  5769  0596  0ADC               	incf	Fuzzy@a_243+1,f
  5770  0597  3000               	movlw	0
  5771  0598  07DC               	addwf	Fuzzy@a_243+1,f
  5772  0599  085C               	movf	Fuzzy@a_243+1,w
  5773  059A  3A80               	xorlw	128
  5774  059B  00FF               	movwf	127
  5775  059C  3080               	movlw	128
  5776  059D  027F               	subwf	127,w
  5777  059E  1D03               	skipz
  5778  059F  2DA2               	goto	u296_25
  5779  05A0  305B               	movlw	91
  5780  05A1  025B               	subwf	Fuzzy@a_243,w
  5781  05A2                     u296_25:	
  5782  05A2  1C03               	skipc
  5783  05A3  2CC3               	goto	i1l2585
  5784  05A4                     i1l2595:	
  5785                           
  5786                           ;main.c: 311: }
  5787                           ;main.c: 313: }
  5788                           ;main.c: 316: if (deltaRpm < 25)
  5789  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  5790  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  5791  05A6  0866               	movf	Fuzzy@deltaRpm,w
  5792  05A7  00B0               	movwf	___ftge@ff1
  5793  05A8  0867               	movf	Fuzzy@deltaRpm+1,w
  5794  05A9  00B1               	movwf	___ftge@ff1+1
  5795  05AA  0868               	movf	Fuzzy@deltaRpm+2,w
  5796  05AB  00B2               	movwf	___ftge@ff1+2
  5797  05AC  3000               	movlw	0
  5798  05AD  00B3               	movwf	___ftge@ff2
  5799  05AE  30C8               	movlw	200
  5800  05AF  00B4               	movwf	___ftge@ff2+1
  5801  05B0  3041               	movlw	65
  5802  05B1  00B5               	movwf	___ftge@ff2+2
  5803  05B2  160A  118A  2640  120A  118A  	fcall	___ftge
  5804  05B7  1803               	btfsc	3,0
  5805  05B8  2DC1               	goto	i1l2599
  5806                           
  5807                           ;main.c: 317: {
  5808                           ;main.c: 318: tip = reduz;
  5809  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  5810  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  5811  05BB  0860               	movf	Fuzzy@reduz,w
  5812  05BC  00D4               	movwf	Fuzzy@tip
  5813  05BD  0861               	movf	Fuzzy@reduz+1,w
  5814  05BE  00D5               	movwf	Fuzzy@tip+1
  5815  05BF  0862               	movf	Fuzzy@reduz+2,w
  5816  05C0  2DFA               	goto	L6
  5817  05C1                     i1l2599:	
  5818                           ;main.c: 319: }else
  5819                           
  5820                           
  5821                           ;main.c: 320: if (deltaRpm >= 25 && deltaRpm < 75)
  5822  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  5823  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  5824  05C3  0866               	movf	Fuzzy@deltaRpm,w
  5825  05C4  00B0               	movwf	___ftge@ff1
  5826  05C5  0867               	movf	Fuzzy@deltaRpm+1,w
  5827  05C6  00B1               	movwf	___ftge@ff1+1
  5828  05C7  0868               	movf	Fuzzy@deltaRpm+2,w
  5829  05C8  00B2               	movwf	___ftge@ff1+2
  5830  05C9  3000               	movlw	0
  5831  05CA  00B3               	movwf	___ftge@ff2
  5832  05CB  30C8               	movlw	200
  5833  05CC  00B4               	movwf	___ftge@ff2+1
  5834  05CD  3041               	movlw	65
  5835  05CE  00B5               	movwf	___ftge@ff2+2
  5836  05CF  160A  118A  2640  120A  118A  	fcall	___ftge
  5837  05D4  1C03               	btfss	3,0
  5838  05D5  2DF3               	goto	i1l2605
  5839  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  5840  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  5841  05D8  0866               	movf	Fuzzy@deltaRpm,w
  5842  05D9  00B0               	movwf	___ftge@ff1
  5843  05DA  0867               	movf	Fuzzy@deltaRpm+1,w
  5844  05DB  00B1               	movwf	___ftge@ff1+1
  5845  05DC  0868               	movf	Fuzzy@deltaRpm+2,w
  5846  05DD  00B2               	movwf	___ftge@ff1+2
  5847  05DE  3000               	movlw	0
  5848  05DF  00B3               	movwf	___ftge@ff2
  5849  05E0  3096               	movlw	150
  5850  05E1  00B4               	movwf	___ftge@ff2+1
  5851  05E2  3042               	movlw	66
  5852  05E3  00B5               	movwf	___ftge@ff2+2
  5853  05E4  160A  118A  2640  120A  118A  	fcall	___ftge
  5854  05E9  1803               	btfsc	3,0
  5855  05EA  2DF3               	goto	i1l2605
  5856                           
  5857                           ;main.c: 321: {
  5858                           ;main.c: 322: tip = mantem;
  5859  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  5860  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  5861  05ED  085D               	movf	Fuzzy@mantem,w
  5862  05EE  00D4               	movwf	Fuzzy@tip
  5863  05EF  085E               	movf	Fuzzy@mantem+1,w
  5864  05F0  00D5               	movwf	Fuzzy@tip+1
  5865  05F1  085F               	movf	Fuzzy@mantem+2,w
  5866  05F2  2DFA               	goto	L6
  5867  05F3                     i1l2605:	
  5868                           ;main.c: 323: }else
  5869                           
  5870                           
  5871                           ;main.c: 324: {
  5872                           ;main.c: 325: tip = aumenta;
  5873  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  5874  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  5875  05F5  0863               	movf	Fuzzy@aumenta,w
  5876  05F6  00D4               	movwf	Fuzzy@tip
  5877  05F7  0864               	movf	Fuzzy@aumenta+1,w
  5878  05F8  00D5               	movwf	Fuzzy@tip+1
  5879  05F9  0865               	movf	Fuzzy@aumenta+2,w
  5880  05FA                     L6:	
  5881  05FA  00D6               	movwf	Fuzzy@tip+2
  5882                           
  5883                           ;main.c: 326: }
  5884                           ;main.c: 329: total_area = 90;
  5885  05FB  3000               	movlw	0
  5886  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  5887  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  5888  05FE  00B2               	movwf	_total_area^(0+128)
  5889  05FF  30B4               	movlw	180
  5890  0600  00B3               	movwf	(_total_area+1)^(0+128)
  5891  0601  3042               	movlw	66
  5892  0602  00B4               	movwf	(_total_area+2)^(0+128)
  5893                           
  5894                           ;main.c: 330: sum = 0;
  5895  0603  3000               	movlw	0
  5896  0604  00AF               	movwf	_sum^(0+128)
  5897  0605  3000               	movlw	0
  5898  0606  00B0               	movwf	(_sum+1)^(0+128)
  5899  0607  3000               	movlw	0
  5900  0608  00B1               	movwf	(_sum+2)^(0+128)
  5901                           
  5902                           ;main.c: 331: sum = sum + tip;
  5903  0609  1283               	bcf	3,5	;RP0=0, select bank0
  5904  060A  1303               	bcf	3,6	;RP1=0, select bank0
  5905  060B  0854               	movf	Fuzzy@tip,w
  5906  060C  00A3               	movwf	___ftadd@f1
  5907  060D  0855               	movf	Fuzzy@tip+1,w
  5908  060E  00A4               	movwf	___ftadd@f1+1
  5909  060F  0856               	movf	Fuzzy@tip+2,w
  5910  0610  00A5               	movwf	___ftadd@f1+2
  5911  0611  1683               	bsf	3,5	;RP0=1, select bank1
  5912  0612  1303               	bcf	3,6	;RP1=0, select bank1
  5913  0613  082F               	movf	_sum^(0+128),w
  5914  0614  1283               	bcf	3,5	;RP0=0, select bank0
  5915  0615  1303               	bcf	3,6	;RP1=0, select bank0
  5916  0616  00A6               	movwf	___ftadd@f2
  5917  0617  1683               	bsf	3,5	;RP0=1, select bank1
  5918  0618  1303               	bcf	3,6	;RP1=0, select bank1
  5919  0619  0830               	movf	(_sum+1)^(0+128),w
  5920  061A  1283               	bcf	3,5	;RP0=0, select bank0
  5921  061B  1303               	bcf	3,6	;RP1=0, select bank0
  5922  061C  00A7               	movwf	___ftadd@f2+1
  5923  061D  1683               	bsf	3,5	;RP0=1, select bank1
  5924  061E  1303               	bcf	3,6	;RP1=0, select bank1
  5925  061F  0831               	movf	(_sum+2)^(0+128),w
  5926  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5927  0621  1303               	bcf	3,6	;RP1=0, select bank0
  5928  0622  00A8               	movwf	___ftadd@f2+2
  5929  0623  120A  158A  2334  120A  118A  	fcall	___ftadd
  5930  0628  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0629  1303               	bcf	3,6	;RP1=0, select bank0
  5932  062A  0823               	movf	?___ftadd,w
  5933  062B  1683               	bsf	3,5	;RP0=1, select bank1
  5934  062C  1303               	bcf	3,6	;RP1=0, select bank1
  5935  062D  00AF               	movwf	_sum^(0+128)
  5936  062E  1283               	bcf	3,5	;RP0=0, select bank0
  5937  062F  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0630  0824               	movf	?___ftadd+1,w
  5939  0631  1683               	bsf	3,5	;RP0=1, select bank1
  5940  0632  1303               	bcf	3,6	;RP1=0, select bank1
  5941  0633  00B0               	movwf	(_sum+1)^(0+128)
  5942  0634  1283               	bcf	3,5	;RP0=0, select bank0
  5943  0635  1303               	bcf	3,6	;RP1=0, select bank0
  5944  0636  0825               	movf	?___ftadd+2,w
  5945  0637  1683               	bsf	3,5	;RP0=1, select bank1
  5946  0638  1303               	bcf	3,6	;RP1=0, select bank1
  5947  0639  00B1               	movwf	(_sum+2)^(0+128)
  5948                           
  5949                           ;main.c: 334: ativa_fan = sum/total_area;
  5950  063A  0832               	movf	_total_area^(0+128),w
  5951  063B  1283               	bcf	3,5	;RP0=0, select bank0
  5952  063C  1303               	bcf	3,6	;RP1=0, select bank0
  5953  063D  00B0               	movwf	___ftdiv@f2
  5954  063E  1683               	bsf	3,5	;RP0=1, select bank1
  5955  063F  1303               	bcf	3,6	;RP1=0, select bank1
  5956  0640  0833               	movf	(_total_area+1)^(0+128),w
  5957  0641  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0642  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0643  00B1               	movwf	___ftdiv@f2+1
  5960  0644  1683               	bsf	3,5	;RP0=1, select bank1
  5961  0645  1303               	bcf	3,6	;RP1=0, select bank1
  5962  0646  0834               	movf	(_total_area+2)^(0+128),w
  5963  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0648  1303               	bcf	3,6	;RP1=0, select bank0
  5965  0649  00B2               	movwf	___ftdiv@f2+2
  5966  064A  1683               	bsf	3,5	;RP0=1, select bank1
  5967  064B  1303               	bcf	3,6	;RP1=0, select bank1
  5968  064C  082F               	movf	_sum^(0+128),w
  5969  064D  1283               	bcf	3,5	;RP0=0, select bank0
  5970  064E  1303               	bcf	3,6	;RP1=0, select bank0
  5971  064F  00B3               	movwf	___ftdiv@f1
  5972  0650  1683               	bsf	3,5	;RP0=1, select bank1
  5973  0651  1303               	bcf	3,6	;RP1=0, select bank1
  5974  0652  0830               	movf	(_sum+1)^(0+128),w
  5975  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0655  00B4               	movwf	___ftdiv@f1+1
  5978  0656  1683               	bsf	3,5	;RP0=1, select bank1
  5979  0657  1303               	bcf	3,6	;RP1=0, select bank1
  5980  0658  0831               	movf	(_sum+2)^(0+128),w
  5981  0659  1283               	bcf	3,5	;RP0=0, select bank0
  5982  065A  1303               	bcf	3,6	;RP1=0, select bank0
  5983  065B  00B5               	movwf	___ftdiv@f1+2
  5984  065C  120A  158A  200E  120A  118A  	fcall	___ftdiv
  5985  0661  1283               	bcf	3,5	;RP0=0, select bank0
  5986  0662  1303               	bcf	3,6	;RP1=0, select bank0
  5987  0663  0830               	movf	?___ftdiv,w
  5988  0664  1683               	bsf	3,5	;RP0=1, select bank1
  5989  0665  1303               	bcf	3,6	;RP1=0, select bank1
  5990  0666  00A0               	movwf	_ativa_fan^(0+128)
  5991  0667  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0668  1303               	bcf	3,6	;RP1=0, select bank0
  5993  0669  0831               	movf	?___ftdiv+1,w
  5994  066A  1683               	bsf	3,5	;RP0=1, select bank1
  5995  066B  1303               	bcf	3,6	;RP1=0, select bank1
  5996  066C  00A1               	movwf	(_ativa_fan+1)^(0+128)
  5997  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5998  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5999  066F  0832               	movf	?___ftdiv+2,w
  6000  0670  1683               	bsf	3,5	;RP0=1, select bank1
  6001  0671  1303               	bcf	3,6	;RP1=0, select bank1
  6002  0672  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6003                           
  6004                           ;main.c: 337: ativa_fan = ativa_fan*100;
  6005  0673  3000               	movlw	0
  6006  0674  00F8               	movwf	___ftmul@f1
  6007  0675  30C8               	movlw	200
  6008  0676  00F9               	movwf	___ftmul@f1+1
  6009  0677  3042               	movlw	66
  6010  0678  00FA               	movwf	___ftmul@f1+2
  6011  0679  0820               	movf	_ativa_fan^(0+128),w
  6012  067A  00FB               	movwf	___ftmul@f2
  6013  067B  0821               	movf	(_ativa_fan+1)^(0+128),w
  6014  067C  00FC               	movwf	___ftmul@f2+1
  6015  067D  0822               	movf	(_ativa_fan+2)^(0+128),w
  6016  067E  00FD               	movwf	___ftmul@f2+2
  6017  067F  120A  158A  218C  120A  118A  	fcall	___ftmul
  6018  0684  0878               	movf	?___ftmul,w
  6019  0685  1683               	bsf	3,5	;RP0=1, select bank1
  6020  0686  1303               	bcf	3,6	;RP1=0, select bank1
  6021  0687  00A0               	movwf	_ativa_fan^(0+128)
  6022  0688  0879               	movf	?___ftmul+1,w
  6023  0689  00A1               	movwf	(_ativa_fan+1)^(0+128)
  6024  068A  087A               	movf	?___ftmul+2,w
  6025  068B  00A2               	movwf	(_ativa_fan+2)^(0+128)
  6026                           
  6027                           ;main.c: 341: if (freio = 1)
  6028  068C  3001               	movlw	1
  6029  068D  1283               	bcf	3,5	;RP0=0, select bank0
  6030  068E  1303               	bcf	3,6	;RP1=0, select bank0
  6031  068F  00D2               	movwf	Fuzzy@freio
  6032  0690  3000               	movlw	0
  6033  0691  00D3               	movwf	Fuzzy@freio+1
  6034                           
  6035                           ;main.c: 342: {
  6036                           ;main.c: 343: if ((antigo + deltaV) >0 && (antigo + deltaV) < 1020)
  6037  0692  3000               	movlw	0
  6038  0693  00B0               	movwf	___ftge@ff1
  6039  0694  3000               	movlw	0
  6040  0695  00B1               	movwf	___ftge@ff1+1
  6041  0696  3000               	movlw	0
  6042  0697  00B2               	movwf	___ftge@ff1+2
  6043  0698  1683               	bsf	3,5	;RP0=1, select bank1
  6044  0699  1303               	bcf	3,6	;RP1=0, select bank1
  6045  069A  0863               	movf	_antigo^(0+128),w
  6046  069B  1283               	bcf	3,5	;RP0=0, select bank0
  6047  069C  1303               	bcf	3,6	;RP1=0, select bank0
  6048  069D  00A3               	movwf	___ftadd@f1
  6049  069E  1683               	bsf	3,5	;RP0=1, select bank1
  6050  069F  1303               	bcf	3,6	;RP1=0, select bank1
  6051  06A0  0864               	movf	(_antigo+1)^(0+128),w
  6052  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  6053  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  6054  06A3  00A4               	movwf	___ftadd@f1+1
  6055  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  6056  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  6057  06A6  0865               	movf	(_antigo+2)^(0+128),w
  6058  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  6059  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  6060  06A9  00A5               	movwf	___ftadd@f1+2
  6061  06AA  086E               	movf	_deltaV+1,w
  6062  06AB  01F9               	clrf	___lwtoft@c+1
  6063  06AC  07F9               	addwf	___lwtoft@c+1,f
  6064  06AD  086D               	movf	_deltaV,w
  6065  06AE  01F8               	clrf	___lwtoft@c
  6066  06AF  07F8               	addwf	___lwtoft@c,f
  6067  06B0  160A  118A  2423  120A  118A  	fcall	___lwtoft
  6068  06B5  0878               	movf	?___lwtoft,w
  6069  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  6070  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  6071  06B8  00A6               	movwf	___ftadd@f2
  6072  06B9  0879               	movf	?___lwtoft+1,w
  6073  06BA  00A7               	movwf	___ftadd@f2+1
  6074  06BB  087A               	movf	?___lwtoft+2,w
  6075  06BC  00A8               	movwf	___ftadd@f2+2
  6076  06BD  120A  158A  2334  120A  118A  	fcall	___ftadd
  6077  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  6078  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  6079  06C4  0823               	movf	?___ftadd,w
  6080  06C5  00B3               	movwf	___ftge@ff2
  6081  06C6  0824               	movf	?___ftadd+1,w
  6082  06C7  00B4               	movwf	___ftge@ff2+1
  6083  06C8  0825               	movf	?___ftadd+2,w
  6084  06C9  00B5               	movwf	___ftge@ff2+2
  6085  06CA  160A  118A  2640  120A  118A  	fcall	___ftge
  6086  06CF  1803               	btfsc	3,0
  6087  06D0  0008               	return
  6088  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  6089  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  6090  06D3  0863               	movf	_antigo^(0+128),w
  6091  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  6092  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  6093  06D6  00A3               	movwf	___ftadd@f1
  6094  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  6095  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  6096  06D9  0864               	movf	(_antigo+1)^(0+128),w
  6097  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  6098  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  6099  06DC  00A4               	movwf	___ftadd@f1+1
  6100  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  6101  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  6102  06DF  0865               	movf	(_antigo+2)^(0+128),w
  6103  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  6104  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  6105  06E2  00A5               	movwf	___ftadd@f1+2
  6106  06E3  086E               	movf	_deltaV+1,w
  6107  06E4  01F9               	clrf	___lwtoft@c+1
  6108  06E5  07F9               	addwf	___lwtoft@c+1,f
  6109  06E6  086D               	movf	_deltaV,w
  6110  06E7  01F8               	clrf	___lwtoft@c
  6111  06E8  07F8               	addwf	___lwtoft@c,f
  6112  06E9  160A  118A  2423  120A  118A  	fcall	___lwtoft
  6113  06EE  0878               	movf	?___lwtoft,w
  6114  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  6115  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  6116  06F1  00A6               	movwf	___ftadd@f2
  6117  06F2  0879               	movf	?___lwtoft+1,w
  6118  06F3  00A7               	movwf	___ftadd@f2+1
  6119  06F4  087A               	movf	?___lwtoft+2,w
  6120  06F5  00A8               	movwf	___ftadd@f2+2
  6121  06F6  120A  158A  2334  120A  118A  	fcall	___ftadd
  6122  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  6123  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  6124  06FD  0823               	movf	?___ftadd,w
  6125  06FE  00B0               	movwf	___ftge@ff1
  6126  06FF  0824               	movf	?___ftadd+1,w
  6127  0700  00B1               	movwf	___ftge@ff1+1
  6128  0701  0825               	movf	?___ftadd+2,w
  6129  0702  00B2               	movwf	___ftge@ff1+2
  6130  0703  3000               	movlw	0
  6131  0704  00B3               	movwf	___ftge@ff2
  6132  0705  307F               	movlw	127
  6133  0706  00B4               	movwf	___ftge@ff2+1
  6134  0707  3044               	movlw	68
  6135  0708  00B5               	movwf	___ftge@ff2+2
  6136  0709  160A  118A  2640  120A  118A  	fcall	___ftge
  6137  070E  1803               	btfsc	3,0
  6138  070F  0008               	return
  6139                           
  6140                           ;main.c: 344: {
  6141                           ;main.c: 345: PWM_DutyCycle2(antigo + deltaV);
  6142  0710  1283               	bcf	3,5	;RP0=0, select bank0
  6143  0711  1303               	bcf	3,6	;RP1=0, select bank0
  6144  0712  086E               	movf	_deltaV+1,w
  6145  0713  01F9               	clrf	___lwtoft@c+1
  6146  0714  07F9               	addwf	___lwtoft@c+1,f
  6147  0715  086D               	movf	_deltaV,w
  6148  0716  01F8               	clrf	___lwtoft@c
  6149  0717  07F8               	addwf	___lwtoft@c,f
  6150  0718  160A  118A  2423  120A  118A  	fcall	___lwtoft
  6151  071D  0878               	movf	?___lwtoft,w
  6152  071E  1283               	bcf	3,5	;RP0=0, select bank0
  6153  071F  1303               	bcf	3,6	;RP1=0, select bank0
  6154  0720  00A6               	movwf	___ftadd@f2
  6155  0721  0879               	movf	?___lwtoft+1,w
  6156  0722  00A7               	movwf	___ftadd@f2+1
  6157  0723  087A               	movf	?___lwtoft+2,w
  6158  0724  00A8               	movwf	___ftadd@f2+2
  6159  0725  1683               	bsf	3,5	;RP0=1, select bank1
  6160  0726  1303               	bcf	3,6	;RP1=0, select bank1
  6161  0727  0863               	movf	_antigo^(0+128),w
  6162  0728  1283               	bcf	3,5	;RP0=0, select bank0
  6163  0729  1303               	bcf	3,6	;RP1=0, select bank0
  6164  072A  00A3               	movwf	___ftadd@f1
  6165  072B  1683               	bsf	3,5	;RP0=1, select bank1
  6166  072C  1303               	bcf	3,6	;RP1=0, select bank1
  6167  072D  0864               	movf	(_antigo+1)^(0+128),w
  6168  072E  1283               	bcf	3,5	;RP0=0, select bank0
  6169  072F  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0730  00A4               	movwf	___ftadd@f1+1
  6171  0731  1683               	bsf	3,5	;RP0=1, select bank1
  6172  0732  1303               	bcf	3,6	;RP1=0, select bank1
  6173  0733  0865               	movf	(_antigo+2)^(0+128),w
  6174  0734  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0735  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0736  00A5               	movwf	___ftadd@f1+2
  6177  0737  120A  158A  2334  120A  118A  	fcall	___ftadd
  6178  073C  1283               	bcf	3,5	;RP0=0, select bank0
  6179  073D  1303               	bcf	3,6	;RP1=0, select bank0
  6180  073E  0823               	movf	?___ftadd,w
  6181  073F  00B0               	movwf	___fttol@f1
  6182  0740  0824               	movf	?___ftadd+1,w
  6183  0741  00B1               	movwf	___fttol@f1+1
  6184  0742  0825               	movf	?___ftadd+2,w
  6185  0743  00B2               	movwf	___fttol@f1+2
  6186  0744  160A  118A  2772  120A  118A  	fcall	___fttol
  6187  0749  1283               	bcf	3,5	;RP0=0, select bank0
  6188  074A  1303               	bcf	3,6	;RP1=0, select bank0
  6189  074B  0831               	movf	?___fttol+1,w
  6190  074C  01BF               	clrf	i1PWM_DutyCycle2@valor+1
  6191  074D  07BF               	addwf	i1PWM_DutyCycle2@valor+1,f
  6192  074E  0830               	movf	?___fttol,w
  6193  074F  01BE               	clrf	i1PWM_DutyCycle2@valor
  6194  0750  07BE               	addwf	i1PWM_DutyCycle2@valor,f
  6195  0751  160A  118A  247D   	fcall	i1_PWM_DutyCycle2
  6196                           
  6197                           ;main.c: 346: }
  6198                           ;main.c: 347: }else
  6199  0754  0008               	return
  6200  0755                     __end_of_Fuzzy:	
  6201                           ;main.c: 350: {
  6202                           ;main.c: 351: PWM_DutyCycle2(antigo - deltaV);
  6203                           
  6204                           ;main.c: 348: {
  6205                           ;main.c: 349: if ((antigo - deltaV) >0 && (antigo - deltaV) < 1020)
  6206                           
  6207                           
  6208                           	psect	text24
  6209  147D                     __ptext24:	
  6210 ;; *************** function i1_PWM_DutyCycle2 *****************
  6211 ;; Defined at:
  6212 ;;		line 96 in file "R:\Note\Sistema I\Ultimo C no MPLAB\pwm.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  valor           2   30[BANK0 ] int 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;		None               void
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6226 ;;      Params:         0       2       0       0       0
  6227 ;;      Locals:         0       0       0       0       0
  6228 ;;      Temps:          2       0       0       0       0
  6229 ;;      Totals:         2       2       0       0       0
  6230 ;;Total ram usage:        4 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_Fuzzy
  6236 ;;		_ISR
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function i1_PWM_DutyCycle2
  6242  147D                     i1_PWM_DutyCycle2:	
  6243                           
  6244                           ;pwm.c: 98: CCPR2L = valor >> 2;
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  6248  147D  1283               	bcf	3,5	;RP0=0, select bank0
  6249  147E  1303               	bcf	3,6	;RP1=0, select bank0
  6250  147F  083F               	movf	i1PWM_DutyCycle2@valor+1,w
  6251  1480  00FD               	movwf	??i1_PWM_DutyCycle2+1
  6252  1481  083E               	movf	i1PWM_DutyCycle2@valor,w
  6253  1482  00FC               	movwf	??i1_PWM_DutyCycle2
  6254  1483  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6255  1484  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6256  1485  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6257  1486  0D7D               	rlf	??i1_PWM_DutyCycle2+1,w
  6258  1487  0CFD               	rrf	??i1_PWM_DutyCycle2+1,f
  6259  1488  0CFC               	rrf	??i1_PWM_DutyCycle2,f
  6260  1489  087C               	movf	??i1_PWM_DutyCycle2,w
  6261  148A  009B               	movwf	27	;volatile
  6262                           
  6263                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  6264  148B  083E               	movf	i1PWM_DutyCycle2@valor,w
  6265  148C  00FC               	movwf	??i1_PWM_DutyCycle2
  6266  148D  3003               	movlw	3
  6267  148E                     u278_25:	
  6268  148E  1003               	clrc
  6269  148F  0DFC               	rlf	??i1_PWM_DutyCycle2,f
  6270  1490  3EFF               	addlw	-1
  6271  1491  1D03               	skipz
  6272  1492  2C8E               	goto	u278_25
  6273  1493  1003               	clrc
  6274  1494  0D7C               	rlf	??i1_PWM_DutyCycle2,w
  6275  1495  380C               	iorlw	12
  6276  1496  009D               	movwf	29	;volatile
  6277  1497  0008               	return
  6278  1498                     __end_ofi1_PWM_DutyCycle2:	
  6279                           
  6280                           	psect	text25
  6281  0C3D                     __ptext25:	
  6282 ;; *************** function _trimf *****************
  6283 ;; Defined at:
  6284 ;;		line 66 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  x               3   32[BANK0 ] float 
  6287 ;;  a               3   35[BANK0 ] float 
  6288 ;;  b               3   38[BANK0 ] float 
  6289 ;;  c               3   41[BANK0 ] float 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  ua              3   44[BANK0 ] float 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  3   32[BANK0 ] float 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, pclath, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6301 ;;      Params:         0      12       0       0       0
  6302 ;;      Locals:         0       3       0       0       0
  6303 ;;      Temps:          0       0       0       0       0
  6304 ;;      Totals:         0      15       0       0       0
  6305 ;;Total ram usage:       15 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    2
  6308 ;; This function calls:
  6309 ;;		___ftadd
  6310 ;;		___ftdiv
  6311 ;;		___ftge
  6312 ;;		___ftneg
  6313 ;; This function is called by:
  6314 ;;		_Fuzzy
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           
  6319                           ;psect for function _trimf
  6320  0C3D                     _trimf:	
  6321                           
  6322                           ;main.c: 68: float ua = 0;
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  6326  0C3D  3000               	movlw	0
  6327  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  6328  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  6329  0C40  00CC               	movwf	trimf@ua
  6330  0C41  3000               	movlw	0
  6331  0C42  00CD               	movwf	trimf@ua+1
  6332  0C43  3000               	movlw	0
  6333  0C44  00CE               	movwf	trimf@ua+2
  6334                           
  6335                           ;main.c: 70: if (x <= a)
  6336  0C45  0843               	movf	trimf@a,w
  6337  0C46  00B0               	movwf	___ftge@ff1
  6338  0C47  0844               	movf	trimf@a+1,w
  6339  0C48  00B1               	movwf	___ftge@ff1+1
  6340  0C49  0845               	movf	trimf@a+2,w
  6341  0C4A  00B2               	movwf	___ftge@ff1+2
  6342  0C4B  0840               	movf	trimf@x,w
  6343  0C4C  00B3               	movwf	___ftge@ff2
  6344  0C4D  0841               	movf	trimf@x+1,w
  6345  0C4E  00B4               	movwf	___ftge@ff2+1
  6346  0C4F  0842               	movf	trimf@x+2,w
  6347  0C50  00B5               	movwf	___ftge@ff2+2
  6348  0C51  160A  118A  2640  120A  158A  	fcall	___ftge
  6349  0C56  1803               	btfsc	3,0
  6350  0C57  2D50               	goto	L11
  6351                           
  6352                           ;main.c: 72: else if ((a < x) && (x <= b))
  6353                           
  6354                           ;main.c: 71: ua = 0;
  6355  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  6356  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  6357  0C5A  0843               	movf	trimf@a,w
  6358  0C5B  00B0               	movwf	___ftge@ff1
  6359  0C5C  0844               	movf	trimf@a+1,w
  6360  0C5D  00B1               	movwf	___ftge@ff1+1
  6361  0C5E  0845               	movf	trimf@a+2,w
  6362  0C5F  00B2               	movwf	___ftge@ff1+2
  6363  0C60  0840               	movf	trimf@x,w
  6364  0C61  00B3               	movwf	___ftge@ff2
  6365  0C62  0841               	movf	trimf@x+1,w
  6366  0C63  00B4               	movwf	___ftge@ff2+1
  6367  0C64  0842               	movf	trimf@x+2,w
  6368  0C65  00B5               	movwf	___ftge@ff2+2
  6369  0C66  160A  118A  2640  120A  158A  	fcall	___ftge
  6370  0C6B  1803               	btfsc	3,0
  6371  0C6C  2CB6               	goto	i1l2209
  6372  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  6374  0C6F  0846               	movf	trimf@b,w
  6375  0C70  00B0               	movwf	___ftge@ff1
  6376  0C71  0847               	movf	trimf@b+1,w
  6377  0C72  00B1               	movwf	___ftge@ff1+1
  6378  0C73  0848               	movf	trimf@b+2,w
  6379  0C74  00B2               	movwf	___ftge@ff1+2
  6380  0C75  0840               	movf	trimf@x,w
  6381  0C76  00B3               	movwf	___ftge@ff2
  6382  0C77  0841               	movf	trimf@x+1,w
  6383  0C78  00B4               	movwf	___ftge@ff2+1
  6384  0C79  0842               	movf	trimf@x+2,w
  6385  0C7A  00B5               	movwf	___ftge@ff2+2
  6386  0C7B  160A  118A  2640  120A  158A  	fcall	___ftge
  6387  0C80  1C03               	btfss	3,0
  6388  0C81  2CB6               	goto	i1l2209
  6389                           
  6390                           ;main.c: 73: ua = ((x - a) / (b - a));
  6391  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  6392  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  6393  0C84  0846               	movf	trimf@b,w
  6394  0C85  00A3               	movwf	___ftadd@f1
  6395  0C86  0847               	movf	trimf@b+1,w
  6396  0C87  00A4               	movwf	___ftadd@f1+1
  6397  0C88  0848               	movf	trimf@b+2,w
  6398  0C89  00A5               	movwf	___ftadd@f1+2
  6399  0C8A  0843               	movf	trimf@a,w
  6400  0C8B  00A0               	movwf	___ftneg@f1
  6401  0C8C  0844               	movf	trimf@a+1,w
  6402  0C8D  00A1               	movwf	___ftneg@f1+1
  6403  0C8E  0845               	movf	trimf@a+2,w
  6404  0C8F  00A2               	movwf	___ftneg@f1+2
  6405  0C90  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6406  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  6407  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  6408  0C97  0820               	movf	?___ftneg,w
  6409  0C98  00A6               	movwf	___ftadd@f2
  6410  0C99  0821               	movf	?___ftneg+1,w
  6411  0C9A  00A7               	movwf	___ftadd@f2+1
  6412  0C9B  0822               	movf	?___ftneg+2,w
  6413  0C9C  00A8               	movwf	___ftadd@f2+2
  6414  0C9D  120A  158A  2334  120A  158A  	fcall	___ftadd
  6415  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  6417  0CA4  0823               	movf	?___ftadd,w
  6418  0CA5  00B0               	movwf	___ftdiv@f2
  6419  0CA6  0824               	movf	?___ftadd+1,w
  6420  0CA7  00B1               	movwf	___ftdiv@f2+1
  6421  0CA8  0825               	movf	?___ftadd+2,w
  6422  0CA9  00B2               	movwf	___ftdiv@f2+2
  6423  0CAA  0840               	movf	trimf@x,w
  6424  0CAB  00A3               	movwf	___ftadd@f1
  6425  0CAC  0841               	movf	trimf@x+1,w
  6426  0CAD  00A4               	movwf	___ftadd@f1+1
  6427  0CAE  0842               	movf	trimf@x+2,w
  6428  0CAF  00A5               	movwf	___ftadd@f1+2
  6429  0CB0  0843               	movf	trimf@a,w
  6430  0CB1  00A0               	movwf	___ftneg@f1
  6431  0CB2  0844               	movf	trimf@a+1,w
  6432  0CB3  00A1               	movwf	___ftneg@f1+1
  6433  0CB4  0845               	movf	trimf@a+2,w
  6434  0CB5  2D13               	goto	L12
  6435  0CB6                     i1l2209:	
  6436                           
  6437                           ;main.c: 74: else if ((b < x) && (x <= c))
  6438  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  6439  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  6440  0CB8  0846               	movf	trimf@b,w
  6441  0CB9  00B0               	movwf	___ftge@ff1
  6442  0CBA  0847               	movf	trimf@b+1,w
  6443  0CBB  00B1               	movwf	___ftge@ff1+1
  6444  0CBC  0848               	movf	trimf@b+2,w
  6445  0CBD  00B2               	movwf	___ftge@ff1+2
  6446  0CBE  0840               	movf	trimf@x,w
  6447  0CBF  00B3               	movwf	___ftge@ff2
  6448  0CC0  0841               	movf	trimf@x+1,w
  6449  0CC1  00B4               	movwf	___ftge@ff2+1
  6450  0CC2  0842               	movf	trimf@x+2,w
  6451  0CC3  00B5               	movwf	___ftge@ff2+2
  6452  0CC4  160A  118A  2640  120A  158A  	fcall	___ftge
  6453  0CC9  1803               	btfsc	3,0
  6454  0CCA  2D3B               	goto	i1l2215
  6455  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  6456  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  6457  0CCD  0849               	movf	trimf@c,w
  6458  0CCE  00B0               	movwf	___ftge@ff1
  6459  0CCF  084A               	movf	trimf@c+1,w
  6460  0CD0  00B1               	movwf	___ftge@ff1+1
  6461  0CD1  084B               	movf	trimf@c+2,w
  6462  0CD2  00B2               	movwf	___ftge@ff1+2
  6463  0CD3  0840               	movf	trimf@x,w
  6464  0CD4  00B3               	movwf	___ftge@ff2
  6465  0CD5  0841               	movf	trimf@x+1,w
  6466  0CD6  00B4               	movwf	___ftge@ff2+1
  6467  0CD7  0842               	movf	trimf@x+2,w
  6468  0CD8  00B5               	movwf	___ftge@ff2+2
  6469  0CD9  160A  118A  2640  120A  158A  	fcall	___ftge
  6470  0CDE  1C03               	btfss	3,0
  6471  0CDF  2D3B               	goto	i1l2215
  6472                           
  6473                           ;main.c: 75: ua = ((x - c) / (b - c));
  6474  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0CE2  0846               	movf	trimf@b,w
  6477  0CE3  00A3               	movwf	___ftadd@f1
  6478  0CE4  0847               	movf	trimf@b+1,w
  6479  0CE5  00A4               	movwf	___ftadd@f1+1
  6480  0CE6  0848               	movf	trimf@b+2,w
  6481  0CE7  00A5               	movwf	___ftadd@f1+2
  6482  0CE8  0849               	movf	trimf@c,w
  6483  0CE9  00A0               	movwf	___ftneg@f1
  6484  0CEA  084A               	movf	trimf@c+1,w
  6485  0CEB  00A1               	movwf	___ftneg@f1+1
  6486  0CEC  084B               	movf	trimf@c+2,w
  6487  0CED  00A2               	movwf	___ftneg@f1+2
  6488  0CEE  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6489  0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  6490  0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  6491  0CF5  0820               	movf	?___ftneg,w
  6492  0CF6  00A6               	movwf	___ftadd@f2
  6493  0CF7  0821               	movf	?___ftneg+1,w
  6494  0CF8  00A7               	movwf	___ftadd@f2+1
  6495  0CF9  0822               	movf	?___ftneg+2,w
  6496  0CFA  00A8               	movwf	___ftadd@f2+2
  6497  0CFB  120A  158A  2334  120A  158A  	fcall	___ftadd
  6498  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0D02  0823               	movf	?___ftadd,w
  6501  0D03  00B0               	movwf	___ftdiv@f2
  6502  0D04  0824               	movf	?___ftadd+1,w
  6503  0D05  00B1               	movwf	___ftdiv@f2+1
  6504  0D06  0825               	movf	?___ftadd+2,w
  6505  0D07  00B2               	movwf	___ftdiv@f2+2
  6506  0D08  0840               	movf	trimf@x,w
  6507  0D09  00A3               	movwf	___ftadd@f1
  6508  0D0A  0841               	movf	trimf@x+1,w
  6509  0D0B  00A4               	movwf	___ftadd@f1+1
  6510  0D0C  0842               	movf	trimf@x+2,w
  6511  0D0D  00A5               	movwf	___ftadd@f1+2
  6512  0D0E  0849               	movf	trimf@c,w
  6513  0D0F  00A0               	movwf	___ftneg@f1
  6514  0D10  084A               	movf	trimf@c+1,w
  6515  0D11  00A1               	movwf	___ftneg@f1+1
  6516  0D12  084B               	movf	trimf@c+2,w
  6517  0D13                     L12:	
  6518  0D13  00A2               	movwf	___ftneg@f1+2
  6519  0D14  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6520  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  6521  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  6522  0D1B  0820               	movf	?___ftneg,w
  6523  0D1C  00A6               	movwf	___ftadd@f2
  6524  0D1D  0821               	movf	?___ftneg+1,w
  6525  0D1E  00A7               	movwf	___ftadd@f2+1
  6526  0D1F  0822               	movf	?___ftneg+2,w
  6527  0D20  00A8               	movwf	___ftadd@f2+2
  6528  0D21  120A  158A  2334  120A  158A  	fcall	___ftadd
  6529  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0D28  0823               	movf	?___ftadd,w
  6532  0D29  00B3               	movwf	___ftdiv@f1
  6533  0D2A  0824               	movf	?___ftadd+1,w
  6534  0D2B  00B4               	movwf	___ftdiv@f1+1
  6535  0D2C  0825               	movf	?___ftadd+2,w
  6536  0D2D  00B5               	movwf	___ftdiv@f1+2
  6537  0D2E  120A  158A  200E  120A  158A  	fcall	___ftdiv
  6538  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  6539  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  6540  0D35  0830               	movf	?___ftdiv,w
  6541  0D36  00CC               	movwf	trimf@ua
  6542  0D37  0831               	movf	?___ftdiv+1,w
  6543  0D38  00CD               	movwf	trimf@ua+1
  6544  0D39  0832               	movf	?___ftdiv+2,w
  6545  0D3A  2D57               	goto	L9
  6546  0D3B                     i1l2215:	
  6547                           
  6548                           ;main.c: 76: else if (x > c)
  6549  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  6550  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  6551  0D3D  0849               	movf	trimf@c,w
  6552  0D3E  00B0               	movwf	___ftge@ff1
  6553  0D3F  084A               	movf	trimf@c+1,w
  6554  0D40  00B1               	movwf	___ftge@ff1+1
  6555  0D41  084B               	movf	trimf@c+2,w
  6556  0D42  00B2               	movwf	___ftge@ff1+2
  6557  0D43  0840               	movf	trimf@x,w
  6558  0D44  00B3               	movwf	___ftge@ff2
  6559  0D45  0841               	movf	trimf@x+1,w
  6560  0D46  00B4               	movwf	___ftge@ff2+1
  6561  0D47  0842               	movf	trimf@x+2,w
  6562  0D48  00B5               	movwf	___ftge@ff2+2
  6563  0D49  160A  118A  2640  120A  158A  	fcall	___ftge
  6564  0D4E  1803               	btfsc	3,0
  6565  0D4F  2D58               	goto	i1l112
  6566  0D50                     L11:	
  6567                           
  6568                           ;main.c: 77: ua = 0;
  6569  0D50  3000               	movlw	0
  6570  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0D53  00CC               	movwf	trimf@ua
  6573  0D54  3000               	movlw	0
  6574  0D55  00CD               	movwf	trimf@ua+1
  6575  0D56  3000               	movlw	0
  6576  0D57                     L9:	
  6577  0D57  00CE               	movwf	trimf@ua+2
  6578  0D58                     i1l112:	
  6579                           
  6580                           ;main.c: 79: return(ua);
  6581  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  6582  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  6583  0D5A  084C               	movf	trimf@ua,w
  6584  0D5B  00C0               	movwf	?_trimf
  6585  0D5C  084D               	movf	trimf@ua+1,w
  6586  0D5D  00C1               	movwf	?_trimf+1
  6587  0D5E  084E               	movf	trimf@ua+2,w
  6588  0D5F  00C2               	movwf	?_trimf+2
  6589  0D60  0008               	return
  6590  0D61                     __end_of_trimf:	
  6591                           
  6592                           	psect	text26
  6593  0EAA                     __ptext26:	
  6594 ;; *************** function _trapmf *****************
  6595 ;; Defined at:
  6596 ;;		line 85 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  x               3   32[BANK0 ] float 
  6599 ;;  a               3   35[BANK0 ] float 
  6600 ;;  b               3   38[BANK0 ] float 
  6601 ;;  c               3   41[BANK0 ] float 
  6602 ;;  d               3   44[BANK0 ] float 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  ua              3   47[BANK0 ] float 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  3   32[BANK0 ] float 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0, pclath, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6614 ;;      Params:         0      15       0       0       0
  6615 ;;      Locals:         0       3       0       0       0
  6616 ;;      Temps:          0       0       0       0       0
  6617 ;;      Totals:         0      18       0       0       0
  6618 ;;Total ram usage:       18 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    2
  6621 ;; This function calls:
  6622 ;;		___ftadd
  6623 ;;		___ftdiv
  6624 ;;		___ftge
  6625 ;;		___ftneg
  6626 ;; This function is called by:
  6627 ;;		_Fuzzy
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function _trapmf
  6633  0EAA                     _trapmf:	
  6634                           
  6635                           ;main.c: 87: float ua = 0;
  6636                           
  6637                           ;incstack = 0
  6638                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  6639  0EAA  3000               	movlw	0
  6640  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  6642  0EAD  00CF               	movwf	trapmf@ua
  6643  0EAE  3000               	movlw	0
  6644  0EAF  00D0               	movwf	trapmf@ua+1
  6645  0EB0  3000               	movlw	0
  6646  0EB1  00D1               	movwf	trapmf@ua+2
  6647                           
  6648                           ;main.c: 89: if (x <= a)
  6649  0EB2  0843               	movf	trapmf@a,w
  6650  0EB3  00B0               	movwf	___ftge@ff1
  6651  0EB4  0844               	movf	trapmf@a+1,w
  6652  0EB5  00B1               	movwf	___ftge@ff1+1
  6653  0EB6  0845               	movf	trapmf@a+2,w
  6654  0EB7  00B2               	movwf	___ftge@ff1+2
  6655  0EB8  0840               	movf	trapmf@x,w
  6656  0EB9  00B3               	movwf	___ftge@ff2
  6657  0EBA  0841               	movf	trapmf@x+1,w
  6658  0EBB  00B4               	movwf	___ftge@ff2+1
  6659  0EBC  0842               	movf	trapmf@x+2,w
  6660  0EBD  00B5               	movwf	___ftge@ff2+2
  6661  0EBE  160A  118A  2640  120A  158A  	fcall	___ftge
  6662  0EC3  1803               	btfsc	3,0
  6663  0EC4  2FEF               	goto	L17
  6664                           
  6665                           ;main.c: 91: else if ((a < x) && (x <= b))
  6666                           
  6667                           ;main.c: 90: ua = 0;
  6668  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  6670  0EC7  0843               	movf	trapmf@a,w
  6671  0EC8  00B0               	movwf	___ftge@ff1
  6672  0EC9  0844               	movf	trapmf@a+1,w
  6673  0ECA  00B1               	movwf	___ftge@ff1+1
  6674  0ECB  0845               	movf	trapmf@a+2,w
  6675  0ECC  00B2               	movwf	___ftge@ff1+2
  6676  0ECD  0840               	movf	trapmf@x,w
  6677  0ECE  00B3               	movwf	___ftge@ff2
  6678  0ECF  0841               	movf	trapmf@x+1,w
  6679  0ED0  00B4               	movwf	___ftge@ff2+1
  6680  0ED1  0842               	movf	trapmf@x+2,w
  6681  0ED2  00B5               	movwf	___ftge@ff2+2
  6682  0ED3  160A  118A  2640  120A  158A  	fcall	___ftge
  6683  0ED8  1803               	btfsc	3,0
  6684  0ED9  2F23               	goto	i1l2233
  6685  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  6687  0EDC  0846               	movf	trapmf@b,w
  6688  0EDD  00B0               	movwf	___ftge@ff1
  6689  0EDE  0847               	movf	trapmf@b+1,w
  6690  0EDF  00B1               	movwf	___ftge@ff1+1
  6691  0EE0  0848               	movf	trapmf@b+2,w
  6692  0EE1  00B2               	movwf	___ftge@ff1+2
  6693  0EE2  0840               	movf	trapmf@x,w
  6694  0EE3  00B3               	movwf	___ftge@ff2
  6695  0EE4  0841               	movf	trapmf@x+1,w
  6696  0EE5  00B4               	movwf	___ftge@ff2+1
  6697  0EE6  0842               	movf	trapmf@x+2,w
  6698  0EE7  00B5               	movwf	___ftge@ff2+2
  6699  0EE8  160A  118A  2640  120A  158A  	fcall	___ftge
  6700  0EED  1C03               	btfss	3,0
  6701  0EEE  2F23               	goto	i1l2233
  6702                           
  6703                           ;main.c: 92: ua = ((x - a) / (b - a));
  6704  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0EF1  0846               	movf	trapmf@b,w
  6707  0EF2  00A3               	movwf	___ftadd@f1
  6708  0EF3  0847               	movf	trapmf@b+1,w
  6709  0EF4  00A4               	movwf	___ftadd@f1+1
  6710  0EF5  0848               	movf	trapmf@b+2,w
  6711  0EF6  00A5               	movwf	___ftadd@f1+2
  6712  0EF7  0843               	movf	trapmf@a,w
  6713  0EF8  00A0               	movwf	___ftneg@f1
  6714  0EF9  0844               	movf	trapmf@a+1,w
  6715  0EFA  00A1               	movwf	___ftneg@f1+1
  6716  0EFB  0845               	movf	trapmf@a+2,w
  6717  0EFC  00A2               	movwf	___ftneg@f1+2
  6718  0EFD  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6719  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  6720  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  6721  0F04  0820               	movf	?___ftneg,w
  6722  0F05  00A6               	movwf	___ftadd@f2
  6723  0F06  0821               	movf	?___ftneg+1,w
  6724  0F07  00A7               	movwf	___ftadd@f2+1
  6725  0F08  0822               	movf	?___ftneg+2,w
  6726  0F09  00A8               	movwf	___ftadd@f2+2
  6727  0F0A  120A  158A  2334  120A  158A  	fcall	___ftadd
  6728  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  6729  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  6730  0F11  0823               	movf	?___ftadd,w
  6731  0F12  00B0               	movwf	___ftdiv@f2
  6732  0F13  0824               	movf	?___ftadd+1,w
  6733  0F14  00B1               	movwf	___ftdiv@f2+1
  6734  0F15  0825               	movf	?___ftadd+2,w
  6735  0F16  00B2               	movwf	___ftdiv@f2+2
  6736  0F17  0840               	movf	trapmf@x,w
  6737  0F18  00A3               	movwf	___ftadd@f1
  6738  0F19  0841               	movf	trapmf@x+1,w
  6739  0F1A  00A4               	movwf	___ftadd@f1+1
  6740  0F1B  0842               	movf	trapmf@x+2,w
  6741  0F1C  00A5               	movwf	___ftadd@f1+2
  6742  0F1D  0843               	movf	trapmf@a,w
  6743  0F1E  00A0               	movwf	___ftneg@f1
  6744  0F1F  0844               	movf	trapmf@a+1,w
  6745  0F20  00A1               	movwf	___ftneg@f1+1
  6746  0F21  0845               	movf	trapmf@a+2,w
  6747  0F22  2FB2               	goto	L19
  6748  0F23                     i1l2233:	
  6749                           
  6750                           ;main.c: 93: else if ((b <= x) && (x <= c))
  6751  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  6753  0F25  0840               	movf	trapmf@x,w
  6754  0F26  00B0               	movwf	___ftge@ff1
  6755  0F27  0841               	movf	trapmf@x+1,w
  6756  0F28  00B1               	movwf	___ftge@ff1+1
  6757  0F29  0842               	movf	trapmf@x+2,w
  6758  0F2A  00B2               	movwf	___ftge@ff1+2
  6759  0F2B  0846               	movf	trapmf@b,w
  6760  0F2C  00B3               	movwf	___ftge@ff2
  6761  0F2D  0847               	movf	trapmf@b+1,w
  6762  0F2E  00B4               	movwf	___ftge@ff2+1
  6763  0F2F  0848               	movf	trapmf@b+2,w
  6764  0F30  00B5               	movwf	___ftge@ff2+2
  6765  0F31  160A  118A  2640  120A  158A  	fcall	___ftge
  6766  0F36  1C03               	btfss	3,0
  6767  0F37  2F55               	goto	i1l2239
  6768  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  6769  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  6770  0F3A  0849               	movf	trapmf@c,w
  6771  0F3B  00B0               	movwf	___ftge@ff1
  6772  0F3C  084A               	movf	trapmf@c+1,w
  6773  0F3D  00B1               	movwf	___ftge@ff1+1
  6774  0F3E  084B               	movf	trapmf@c+2,w
  6775  0F3F  00B2               	movwf	___ftge@ff1+2
  6776  0F40  0840               	movf	trapmf@x,w
  6777  0F41  00B3               	movwf	___ftge@ff2
  6778  0F42  0841               	movf	trapmf@x+1,w
  6779  0F43  00B4               	movwf	___ftge@ff2+1
  6780  0F44  0842               	movf	trapmf@x+2,w
  6781  0F45  00B5               	movwf	___ftge@ff2+2
  6782  0F46  160A  118A  2640  120A  158A  	fcall	___ftge
  6783  0F4B  1C03               	btfss	3,0
  6784  0F4C  2F55               	goto	i1l2239
  6785                           
  6786                           ;main.c: 94: ua = 1;
  6787  0F4D  3000               	movlw	0
  6788  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  6789  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  6790  0F50  00CF               	movwf	trapmf@ua
  6791  0F51  3080               	movlw	128
  6792  0F52  00D0               	movwf	trapmf@ua+1
  6793  0F53  303F               	movlw	63
  6794  0F54  2FF6               	goto	L16
  6795  0F55                     i1l2239:	
  6796                           
  6797                           ;main.c: 95: else if ((c < x) && (x <= d))
  6798  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  6799  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  6800  0F57  0849               	movf	trapmf@c,w
  6801  0F58  00B0               	movwf	___ftge@ff1
  6802  0F59  084A               	movf	trapmf@c+1,w
  6803  0F5A  00B1               	movwf	___ftge@ff1+1
  6804  0F5B  084B               	movf	trapmf@c+2,w
  6805  0F5C  00B2               	movwf	___ftge@ff1+2
  6806  0F5D  0840               	movf	trapmf@x,w
  6807  0F5E  00B3               	movwf	___ftge@ff2
  6808  0F5F  0841               	movf	trapmf@x+1,w
  6809  0F60  00B4               	movwf	___ftge@ff2+1
  6810  0F61  0842               	movf	trapmf@x+2,w
  6811  0F62  00B5               	movwf	___ftge@ff2+2
  6812  0F63  160A  118A  2640  120A  158A  	fcall	___ftge
  6813  0F68  1803               	btfsc	3,0
  6814  0F69  2FDA               	goto	i1l2245
  6815  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  6816  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  6817  0F6C  084C               	movf	trapmf@d,w
  6818  0F6D  00B0               	movwf	___ftge@ff1
  6819  0F6E  084D               	movf	trapmf@d+1,w
  6820  0F6F  00B1               	movwf	___ftge@ff1+1
  6821  0F70  084E               	movf	trapmf@d+2,w
  6822  0F71  00B2               	movwf	___ftge@ff1+2
  6823  0F72  0840               	movf	trapmf@x,w
  6824  0F73  00B3               	movwf	___ftge@ff2
  6825  0F74  0841               	movf	trapmf@x+1,w
  6826  0F75  00B4               	movwf	___ftge@ff2+1
  6827  0F76  0842               	movf	trapmf@x+2,w
  6828  0F77  00B5               	movwf	___ftge@ff2+2
  6829  0F78  160A  118A  2640  120A  158A  	fcall	___ftge
  6830  0F7D  1C03               	btfss	3,0
  6831  0F7E  2FDA               	goto	i1l2245
  6832                           
  6833                           ;main.c: 96: ua = ((d - x) / (d - c));
  6834  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6835  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6836  0F81  084C               	movf	trapmf@d,w
  6837  0F82  00A3               	movwf	___ftadd@f1
  6838  0F83  084D               	movf	trapmf@d+1,w
  6839  0F84  00A4               	movwf	___ftadd@f1+1
  6840  0F85  084E               	movf	trapmf@d+2,w
  6841  0F86  00A5               	movwf	___ftadd@f1+2
  6842  0F87  0849               	movf	trapmf@c,w
  6843  0F88  00A0               	movwf	___ftneg@f1
  6844  0F89  084A               	movf	trapmf@c+1,w
  6845  0F8A  00A1               	movwf	___ftneg@f1+1
  6846  0F8B  084B               	movf	trapmf@c+2,w
  6847  0F8C  00A2               	movwf	___ftneg@f1+2
  6848  0F8D  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6849  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  6850  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  6851  0F94  0820               	movf	?___ftneg,w
  6852  0F95  00A6               	movwf	___ftadd@f2
  6853  0F96  0821               	movf	?___ftneg+1,w
  6854  0F97  00A7               	movwf	___ftadd@f2+1
  6855  0F98  0822               	movf	?___ftneg+2,w
  6856  0F99  00A8               	movwf	___ftadd@f2+2
  6857  0F9A  120A  158A  2334  120A  158A  	fcall	___ftadd
  6858  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  6859  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  6860  0FA1  0823               	movf	?___ftadd,w
  6861  0FA2  00B0               	movwf	___ftdiv@f2
  6862  0FA3  0824               	movf	?___ftadd+1,w
  6863  0FA4  00B1               	movwf	___ftdiv@f2+1
  6864  0FA5  0825               	movf	?___ftadd+2,w
  6865  0FA6  00B2               	movwf	___ftdiv@f2+2
  6866  0FA7  084C               	movf	trapmf@d,w
  6867  0FA8  00A3               	movwf	___ftadd@f1
  6868  0FA9  084D               	movf	trapmf@d+1,w
  6869  0FAA  00A4               	movwf	___ftadd@f1+1
  6870  0FAB  084E               	movf	trapmf@d+2,w
  6871  0FAC  00A5               	movwf	___ftadd@f1+2
  6872  0FAD  0840               	movf	trapmf@x,w
  6873  0FAE  00A0               	movwf	___ftneg@f1
  6874  0FAF  0841               	movf	trapmf@x+1,w
  6875  0FB0  00A1               	movwf	___ftneg@f1+1
  6876  0FB1  0842               	movf	trapmf@x+2,w
  6877  0FB2                     L19:	
  6878  0FB2  00A2               	movwf	___ftneg@f1+2
  6879  0FB3  160A  118A  23EC  120A  158A  	fcall	___ftneg
  6880  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6881  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  6882  0FBA  0820               	movf	?___ftneg,w
  6883  0FBB  00A6               	movwf	___ftadd@f2
  6884  0FBC  0821               	movf	?___ftneg+1,w
  6885  0FBD  00A7               	movwf	___ftadd@f2+1
  6886  0FBE  0822               	movf	?___ftneg+2,w
  6887  0FBF  00A8               	movwf	___ftadd@f2+2
  6888  0FC0  120A  158A  2334  120A  158A  	fcall	___ftadd
  6889  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  6890  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  6891  0FC7  0823               	movf	?___ftadd,w
  6892  0FC8  00B3               	movwf	___ftdiv@f1
  6893  0FC9  0824               	movf	?___ftadd+1,w
  6894  0FCA  00B4               	movwf	___ftdiv@f1+1
  6895  0FCB  0825               	movf	?___ftadd+2,w
  6896  0FCC  00B5               	movwf	___ftdiv@f1+2
  6897  0FCD  120A  158A  200E  120A  158A  	fcall	___ftdiv
  6898  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  6900  0FD4  0830               	movf	?___ftdiv,w
  6901  0FD5  00CF               	movwf	trapmf@ua
  6902  0FD6  0831               	movf	?___ftdiv+1,w
  6903  0FD7  00D0               	movwf	trapmf@ua+1
  6904  0FD8  0832               	movf	?___ftdiv+2,w
  6905  0FD9  2FF6               	goto	L16
  6906  0FDA                     i1l2245:	
  6907                           
  6908                           ;main.c: 97: else if (x > d)
  6909  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0FDC  084C               	movf	trapmf@d,w
  6912  0FDD  00B0               	movwf	___ftge@ff1
  6913  0FDE  084D               	movf	trapmf@d+1,w
  6914  0FDF  00B1               	movwf	___ftge@ff1+1
  6915  0FE0  084E               	movf	trapmf@d+2,w
  6916  0FE1  00B2               	movwf	___ftge@ff1+2
  6917  0FE2  0840               	movf	trapmf@x,w
  6918  0FE3  00B3               	movwf	___ftge@ff2
  6919  0FE4  0841               	movf	trapmf@x+1,w
  6920  0FE5  00B4               	movwf	___ftge@ff2+1
  6921  0FE6  0842               	movf	trapmf@x+2,w
  6922  0FE7  00B5               	movwf	___ftge@ff2+2
  6923  0FE8  160A  118A  2640  120A  158A  	fcall	___ftge
  6924  0FED  1803               	btfsc	3,0
  6925  0FEE  2FF7               	goto	i1l122
  6926  0FEF                     L17:	
  6927                           
  6928                           ;main.c: 98: ua = 0;
  6929  0FEF  3000               	movlw	0
  6930  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0FF2  00CF               	movwf	trapmf@ua
  6933  0FF3  3000               	movlw	0
  6934  0FF4  00D0               	movwf	trapmf@ua+1
  6935  0FF5  3000               	movlw	0
  6936  0FF6                     L16:	
  6937  0FF6  00D1               	movwf	trapmf@ua+2
  6938  0FF7                     i1l122:	
  6939                           
  6940                           ;main.c: 100: return(ua);
  6941  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6943  0FF9  084F               	movf	trapmf@ua,w
  6944  0FFA  00C0               	movwf	?_trapmf
  6945  0FFB  0850               	movf	trapmf@ua+1,w
  6946  0FFC  00C1               	movwf	?_trapmf+1
  6947  0FFD  0851               	movf	trapmf@ua+2,w
  6948  0FFE  00C2               	movwf	?_trapmf+2
  6949  0FFF  0008               	return
  6950  1000                     __end_of_trapmf:	
  6951                           
  6952                           	psect	text27
  6953  13EC                     __ptext27:	
  6954 ;; *************** function ___ftneg *****************
  6955 ;; Defined at:
  6956 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  f1              3    0[BANK0 ] float 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  3    0[BANK0 ] float 
  6963 ;; Registers used:
  6964 ;;		wreg
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6970 ;;      Params:         0       3       0       0       0
  6971 ;;      Locals:         0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0
  6973 ;;      Totals:         0       3       0       0       0
  6974 ;;Total ram usage:        3 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_trimf
  6980 ;;		_trapmf
  6981 ;;		_Fuzzy
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function ___ftneg
  6987  13EC                     ___ftneg:	
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in ___ftneg: [wreg]
  6991  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  6992  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  6993  13EE  0822               	movf	___ftneg@f1+2,w
  6994  13EF  0421               	iorwf	___ftneg@f1+1,w
  6995  13F0  0420               	iorwf	___ftneg@f1,w
  6996  13F1  1903               	skipnz
  6997  13F2  0008               	return
  6998  13F3  3080               	movlw	128
  6999  13F4  06A2               	xorwf	___ftneg@f1+2,f
  7000  13F5  0008               	return
  7001  13F6                     __end_of___ftneg:	
  7002                           
  7003                           	psect	text28
  7004  080E                     __ptext28:	
  7005 ;; *************** function ___ftdiv *****************
  7006 ;; Defined at:
  7007 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  f2              3   16[BANK0 ] float 
  7010 ;;  f1              3   19[BANK0 ] float 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  f3              3   27[BANK0 ] float 
  7013 ;;  sign            1   31[BANK0 ] unsigned char 
  7014 ;;  exp             1   30[BANK0 ] unsigned char 
  7015 ;;  cntr            1   26[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  3   16[BANK0 ] float 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7025 ;;      Params:         0       6       0       0       0
  7026 ;;      Locals:         0       6       0       0       0
  7027 ;;      Temps:          0       4       0       0       0
  7028 ;;      Totals:         0      16       0       0       0
  7029 ;;Total ram usage:       16 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    1
  7032 ;; This function calls:
  7033 ;;		___ftpack
  7034 ;; This function is called by:
  7035 ;;		_trimf
  7036 ;;		_trapmf
  7037 ;;		_Fuzzy
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function ___ftdiv
  7043  080E                     ___ftdiv:	
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7047  080E  1283               	bcf	3,5	;RP0=0, select bank0
  7048  080F  1303               	bcf	3,6	;RP1=0, select bank0
  7049  0810  0833               	movf	___ftdiv@f1,w
  7050  0811  00B6               	movwf	??___ftdiv
  7051  0812  0834               	movf	___ftdiv@f1+1,w
  7052  0813  00B7               	movwf	??___ftdiv+1
  7053  0814  0835               	movf	___ftdiv@f1+2,w
  7054  0815  00B8               	movwf	??___ftdiv+2
  7055  0816  1003               	clrc
  7056  0817  0D37               	rlf	??___ftdiv+1,w
  7057  0818  0D38               	rlf	??___ftdiv+2,w
  7058  0819  00B9               	movwf	??___ftdiv+3
  7059  081A  0839               	movf	??___ftdiv+3,w
  7060  081B  00BE               	movwf	___ftdiv@exp
  7061  081C  08BE               	movf	___ftdiv@exp,f
  7062  081D  1D03               	skipz
  7063  081E  2826               	goto	i1l2133
  7064  081F  3000               	movlw	0
  7065  0820  00B0               	movwf	?___ftdiv
  7066  0821  3000               	movlw	0
  7067  0822  00B1               	movwf	?___ftdiv+1
  7068  0823  3000               	movlw	0
  7069  0824  00B2               	movwf	?___ftdiv+2
  7070  0825  0008               	return
  7071  0826                     i1l2133:	
  7072  0826  0830               	movf	___ftdiv@f2,w
  7073  0827  00B6               	movwf	??___ftdiv
  7074  0828  0831               	movf	___ftdiv@f2+1,w
  7075  0829  00B7               	movwf	??___ftdiv+1
  7076  082A  0832               	movf	___ftdiv@f2+2,w
  7077  082B  00B8               	movwf	??___ftdiv+2
  7078  082C  1003               	clrc
  7079  082D  0D37               	rlf	??___ftdiv+1,w
  7080  082E  0D38               	rlf	??___ftdiv+2,w
  7081  082F  00B9               	movwf	??___ftdiv+3
  7082  0830  0839               	movf	??___ftdiv+3,w
  7083  0831  00BF               	movwf	___ftdiv@sign
  7084  0832  08BF               	movf	___ftdiv@sign,f
  7085  0833  1D03               	skipz
  7086  0834  283C               	goto	i1l2139
  7087  0835  3000               	movlw	0
  7088  0836  00B0               	movwf	?___ftdiv
  7089  0837  3000               	movlw	0
  7090  0838  00B1               	movwf	?___ftdiv+1
  7091  0839  3000               	movlw	0
  7092  083A  00B2               	movwf	?___ftdiv+2
  7093  083B  0008               	return
  7094  083C                     i1l2139:	
  7095  083C  3000               	movlw	0
  7096  083D  00BB               	movwf	___ftdiv@f3
  7097  083E  3000               	movlw	0
  7098  083F  00BC               	movwf	___ftdiv@f3+1
  7099  0840  3000               	movlw	0
  7100  0841  00BD               	movwf	___ftdiv@f3+2
  7101  0842  3089               	movlw	137
  7102  0843  073F               	addwf	___ftdiv@sign,w
  7103  0844  00B6               	movwf	??___ftdiv
  7104  0845  0836               	movf	??___ftdiv,w
  7105  0846  02BE               	subwf	___ftdiv@exp,f
  7106  0847  0833               	movf	___ftdiv@f1,w
  7107  0848  00B6               	movwf	??___ftdiv
  7108  0849  0834               	movf	___ftdiv@f1+1,w
  7109  084A  00B7               	movwf	??___ftdiv+1
  7110  084B  0835               	movf	___ftdiv@f1+2,w
  7111  084C  00B8               	movwf	??___ftdiv+2
  7112  084D  3010               	movlw	16
  7113  084E                     u212_25:	
  7114  084E  1003               	clrc
  7115  084F  0CB8               	rrf	??___ftdiv+2,f
  7116  0850  0CB7               	rrf	??___ftdiv+1,f
  7117  0851  0CB6               	rrf	??___ftdiv,f
  7118  0852  3EFF               	addlw	-1
  7119  0853  1D03               	skipz
  7120  0854  284E               	goto	u212_25
  7121  0855  0836               	movf	??___ftdiv,w
  7122  0856  00B9               	movwf	??___ftdiv+3
  7123  0857  0839               	movf	??___ftdiv+3,w
  7124  0858  00BF               	movwf	___ftdiv@sign
  7125  0859  0830               	movf	___ftdiv@f2,w
  7126  085A  00B6               	movwf	??___ftdiv
  7127  085B  0831               	movf	___ftdiv@f2+1,w
  7128  085C  00B7               	movwf	??___ftdiv+1
  7129  085D  0832               	movf	___ftdiv@f2+2,w
  7130  085E  00B8               	movwf	??___ftdiv+2
  7131  085F  3010               	movlw	16
  7132  0860                     u213_25:	
  7133  0860  1003               	clrc
  7134  0861  0CB8               	rrf	??___ftdiv+2,f
  7135  0862  0CB7               	rrf	??___ftdiv+1,f
  7136  0863  0CB6               	rrf	??___ftdiv,f
  7137  0864  3EFF               	addlw	-1
  7138  0865  1D03               	skipz
  7139  0866  2860               	goto	u213_25
  7140  0867  0836               	movf	??___ftdiv,w
  7141  0868  00B9               	movwf	??___ftdiv+3
  7142  0869  0839               	movf	??___ftdiv+3,w
  7143  086A  06BF               	xorwf	___ftdiv@sign,f
  7144  086B  3080               	movlw	128
  7145  086C  00B6               	movwf	??___ftdiv
  7146  086D  0836               	movf	??___ftdiv,w
  7147  086E  05BF               	andwf	___ftdiv@sign,f
  7148  086F  17B4               	bsf	___ftdiv@f1+1,7
  7149  0870  30FF               	movlw	255
  7150  0871  05B3               	andwf	___ftdiv@f1,f
  7151  0872  30FF               	movlw	255
  7152  0873  05B4               	andwf	___ftdiv@f1+1,f
  7153  0874  3000               	movlw	0
  7154  0875  05B5               	andwf	___ftdiv@f1+2,f
  7155  0876  17B1               	bsf	___ftdiv@f2+1,7
  7156  0877  30FF               	movlw	255
  7157  0878  05B0               	andwf	___ftdiv@f2,f
  7158  0879  30FF               	movlw	255
  7159  087A  05B1               	andwf	___ftdiv@f2+1,f
  7160  087B  3000               	movlw	0
  7161  087C  05B2               	andwf	___ftdiv@f2+2,f
  7162  087D  3018               	movlw	24
  7163  087E  00B6               	movwf	??___ftdiv
  7164  087F  0836               	movf	??___ftdiv,w
  7165  0880  00BA               	movwf	___ftdiv@cntr
  7166  0881                     i1l2153:	
  7167  0881  3001               	movlw	1
  7168  0882                     u214_25:	
  7169  0882  1003               	clrc
  7170  0883  0DBB               	rlf	___ftdiv@f3,f
  7171  0884  0DBC               	rlf	___ftdiv@f3+1,f
  7172  0885  0DBD               	rlf	___ftdiv@f3+2,f
  7173  0886  3EFF               	addlw	-1
  7174  0887  1D03               	skipz
  7175  0888  2882               	goto	u214_25
  7176  0889  0832               	movf	___ftdiv@f2+2,w
  7177  088A  0235               	subwf	___ftdiv@f1+2,w
  7178  088B  1D03               	skipz
  7179  088C  2893               	goto	u215_25
  7180  088D  0831               	movf	___ftdiv@f2+1,w
  7181  088E  0234               	subwf	___ftdiv@f1+1,w
  7182  088F  1D03               	skipz
  7183  0890  2893               	goto	u215_25
  7184  0891  0830               	movf	___ftdiv@f2,w
  7185  0892  0233               	subwf	___ftdiv@f1,w
  7186  0893                     u215_25:	
  7187  0893  1C03               	skipc
  7188  0894  28A0               	goto	i1l2161
  7189  0895  0830               	movf	___ftdiv@f2,w
  7190  0896  02B3               	subwf	___ftdiv@f1,f
  7191  0897  0831               	movf	___ftdiv@f2+1,w
  7192  0898  1C03               	skipc
  7193  0899  0F31               	incfsz	___ftdiv@f2+1,w
  7194  089A  02B4               	subwf	___ftdiv@f1+1,f
  7195  089B  0832               	movf	___ftdiv@f2+2,w
  7196  089C  1C03               	skipc
  7197  089D  0A32               	incf	___ftdiv@f2+2,w
  7198  089E  02B5               	subwf	___ftdiv@f1+2,f
  7199  089F  143B               	bsf	___ftdiv@f3,0
  7200  08A0                     i1l2161:	
  7201  08A0  3001               	movlw	1
  7202  08A1                     u216_25:	
  7203  08A1  1003               	clrc
  7204  08A2  0DB3               	rlf	___ftdiv@f1,f
  7205  08A3  0DB4               	rlf	___ftdiv@f1+1,f
  7206  08A4  0DB5               	rlf	___ftdiv@f1+2,f
  7207  08A5  3EFF               	addlw	-1
  7208  08A6  1D03               	skipz
  7209  08A7  28A1               	goto	u216_25
  7210  08A8  3001               	movlw	1
  7211  08A9  02BA               	subwf	___ftdiv@cntr,f
  7212  08AA  1D03               	btfss	3,2
  7213  08AB  2881               	goto	i1l2153
  7214  08AC  083B               	movf	___ftdiv@f3,w
  7215  08AD  00F0               	movwf	___ftpack@arg
  7216  08AE  083C               	movf	___ftdiv@f3+1,w
  7217  08AF  00F1               	movwf	___ftpack@arg+1
  7218  08B0  083D               	movf	___ftdiv@f3+2,w
  7219  08B1  00F2               	movwf	___ftpack@arg+2
  7220  08B2  083E               	movf	___ftdiv@exp,w
  7221  08B3  00B6               	movwf	??___ftdiv
  7222  08B4  0836               	movf	??___ftdiv,w
  7223  08B5  00F3               	movwf	___ftpack@exp
  7224  08B6  083F               	movf	___ftdiv@sign,w
  7225  08B7  00B7               	movwf	??___ftdiv+1
  7226  08B8  0837               	movf	??___ftdiv+1,w
  7227  08B9  00F4               	movwf	___ftpack@sign
  7228  08BA  160A  118A  269F   	fcall	___ftpack
  7229  08BD  0870               	movf	?___ftpack,w
  7230  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  7231  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  7232  08C0  00B0               	movwf	?___ftdiv
  7233  08C1  0871               	movf	?___ftpack+1,w
  7234  08C2  00B1               	movwf	?___ftdiv+1
  7235  08C3  0872               	movf	?___ftpack+2,w
  7236  08C4  00B2               	movwf	?___ftdiv+2
  7237  08C5  0008               	return
  7238  08C6                     __end_of___ftdiv:	
  7239                           
  7240                           	psect	text29
  7241  0B34                     __ptext29:	
  7242 ;; *************** function ___ftadd *****************
  7243 ;; Defined at:
  7244 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  f1              3    3[BANK0 ] float 
  7247 ;;  f2              3    6[BANK0 ] float 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  exp1            1   15[BANK0 ] unsigned char 
  7250 ;;  exp2            1   14[BANK0 ] unsigned char 
  7251 ;;  sign            1   13[BANK0 ] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  3    3[BANK0 ] float 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0, pclath, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7261 ;;      Params:         0       6       0       0       0
  7262 ;;      Locals:         0       3       0       0       0
  7263 ;;      Temps:          0       4       0       0       0
  7264 ;;      Totals:         0      13       0       0       0
  7265 ;;Total ram usage:       13 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; Hardware stack levels required when called:    1
  7268 ;; This function calls:
  7269 ;;		___ftpack
  7270 ;; This function is called by:
  7271 ;;		_trimf
  7272 ;;		_trapmf
  7273 ;;		_Fuzzy
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           
  7278                           ;psect for function ___ftadd
  7279  0B34                     ___ftadd:	
  7280                           
  7281                           ;incstack = 0
  7282                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7283  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7284  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7285  0B36  0823               	movf	___ftadd@f1,w
  7286  0B37  00A9               	movwf	??___ftadd
  7287  0B38  0824               	movf	___ftadd@f1+1,w
  7288  0B39  00AA               	movwf	??___ftadd+1
  7289  0B3A  0825               	movf	___ftadd@f1+2,w
  7290  0B3B  00AB               	movwf	??___ftadd+2
  7291  0B3C  1003               	clrc
  7292  0B3D  0D2A               	rlf	??___ftadd+1,w
  7293  0B3E  0D2B               	rlf	??___ftadd+2,w
  7294  0B3F  00AC               	movwf	??___ftadd+3
  7295  0B40  082C               	movf	??___ftadd+3,w
  7296  0B41  00AF               	movwf	___ftadd@exp1
  7297  0B42  0826               	movf	___ftadd@f2,w
  7298  0B43  00A9               	movwf	??___ftadd
  7299  0B44  0827               	movf	___ftadd@f2+1,w
  7300  0B45  00AA               	movwf	??___ftadd+1
  7301  0B46  0828               	movf	___ftadd@f2+2,w
  7302  0B47  00AB               	movwf	??___ftadd+2
  7303  0B48  1003               	clrc
  7304  0B49  0D2A               	rlf	??___ftadd+1,w
  7305  0B4A  0D2B               	rlf	??___ftadd+2,w
  7306  0B4B  00AC               	movwf	??___ftadd+3
  7307  0B4C  082C               	movf	??___ftadd+3,w
  7308  0B4D  00AE               	movwf	___ftadd@exp2
  7309  0B4E  082F               	movf	___ftadd@exp1,w
  7310  0B4F  1903               	btfsc	3,2
  7311  0B50  2B5D               	goto	i1l2063
  7312  0B51  082E               	movf	___ftadd@exp2,w
  7313  0B52  022F               	subwf	___ftadd@exp1,w
  7314  0B53  1803               	skipnc
  7315  0B54  2B64               	goto	i1l2067
  7316  0B55  032F               	decf	___ftadd@exp1,w
  7317  0B56  3AFF               	xorlw	255
  7318  0B57  072E               	addwf	___ftadd@exp2,w
  7319  0B58  00A9               	movwf	??___ftadd
  7320  0B59  3019               	movlw	25
  7321  0B5A  0229               	subwf	??___ftadd,w
  7322  0B5B  1C03               	skipc
  7323  0B5C  2B64               	goto	i1l2067
  7324  0B5D                     i1l2063:	
  7325  0B5D  0826               	movf	___ftadd@f2,w
  7326  0B5E  00A3               	movwf	?___ftadd
  7327  0B5F  0827               	movf	___ftadd@f2+1,w
  7328  0B60  00A4               	movwf	?___ftadd+1
  7329  0B61  0828               	movf	___ftadd@f2+2,w
  7330  0B62  00A5               	movwf	?___ftadd+2
  7331  0B63  0008               	return
  7332  0B64                     i1l2067:	
  7333  0B64  082E               	movf	___ftadd@exp2,w
  7334  0B65  1903               	btfsc	3,2
  7335  0B66  0008               	return
  7336  0B67  082F               	movf	___ftadd@exp1,w
  7337  0B68  022E               	subwf	___ftadd@exp2,w
  7338  0B69  1803               	skipnc
  7339  0B6A  2B73               	goto	i1l2073
  7340  0B6B  032E               	decf	___ftadd@exp2,w
  7341  0B6C  3AFF               	xorlw	255
  7342  0B6D  072F               	addwf	___ftadd@exp1,w
  7343  0B6E  00A9               	movwf	??___ftadd
  7344  0B6F  3019               	movlw	25
  7345  0B70  0229               	subwf	??___ftadd,w
  7346  0B71  1803               	btfsc	3,0
  7347  0B72  0008               	return
  7348  0B73                     i1l2073:	
  7349  0B73  3006               	movlw	6
  7350  0B74  00A9               	movwf	??___ftadd
  7351  0B75  0829               	movf	??___ftadd,w
  7352  0B76  00AD               	movwf	___ftadd@sign
  7353  0B77  1BA5               	btfsc	___ftadd@f1+2,7
  7354  0B78  17AD               	bsf	___ftadd@sign,7
  7355  0B79  1BA8               	btfsc	___ftadd@f2+2,7
  7356  0B7A  172D               	bsf	___ftadd@sign,6
  7357  0B7B  17A4               	bsf	___ftadd@f1+1,7
  7358  0B7C  30FF               	movlw	255
  7359  0B7D  05A3               	andwf	___ftadd@f1,f
  7360  0B7E  30FF               	movlw	255
  7361  0B7F  05A4               	andwf	___ftadd@f1+1,f
  7362  0B80  3000               	movlw	0
  7363  0B81  05A5               	andwf	___ftadd@f1+2,f
  7364  0B82  17A7               	bsf	___ftadd@f2+1,7
  7365  0B83  30FF               	movlw	255
  7366  0B84  05A6               	andwf	___ftadd@f2,f
  7367  0B85  30FF               	movlw	255
  7368  0B86  05A7               	andwf	___ftadd@f2+1,f
  7369  0B87  3000               	movlw	0
  7370  0B88  05A8               	andwf	___ftadd@f2+2,f
  7371  0B89  082E               	movf	___ftadd@exp2,w
  7372  0B8A  022F               	subwf	___ftadd@exp1,w
  7373  0B8B  1803               	skipnc
  7374  0B8C  2BB3               	goto	i1l2095
  7375  0B8D                     i1l2085:	
  7376  0B8D  3001               	movlw	1
  7377  0B8E                     u195_25:	
  7378  0B8E  1003               	clrc
  7379  0B8F  0DA6               	rlf	___ftadd@f2,f
  7380  0B90  0DA7               	rlf	___ftadd@f2+1,f
  7381  0B91  0DA8               	rlf	___ftadd@f2+2,f
  7382  0B92  3EFF               	addlw	-1
  7383  0B93  1D03               	skipz
  7384  0B94  2B8E               	goto	u195_25
  7385  0B95  3001               	movlw	1
  7386  0B96  02AE               	subwf	___ftadd@exp2,f
  7387  0B97  082E               	movf	___ftadd@exp2,w
  7388  0B98  062F               	xorwf	___ftadd@exp1,w
  7389  0B99  1903               	skipnz
  7390  0B9A  2BAE               	goto	i1l2093
  7391  0B9B  3001               	movlw	1
  7392  0B9C  02AD               	subwf	___ftadd@sign,f
  7393  0B9D  082D               	movf	___ftadd@sign,w
  7394  0B9E  3907               	andlw	7
  7395  0B9F  1903               	btfsc	3,2
  7396  0BA0  2BAE               	goto	i1l2093
  7397  0BA1  2B8D               	goto	i1l2085
  7398  0BA2                     i1l2091:	
  7399  0BA2  3001               	movlw	1
  7400  0BA3                     u198_25:	
  7401  0BA3  1003               	clrc
  7402  0BA4  0CA5               	rrf	___ftadd@f1+2,f
  7403  0BA5  0CA4               	rrf	___ftadd@f1+1,f
  7404  0BA6  0CA3               	rrf	___ftadd@f1,f
  7405  0BA7  3EFF               	addlw	-1
  7406  0BA8  1D03               	skipz
  7407  0BA9  2BA3               	goto	u198_25
  7408  0BAA  3001               	movlw	1
  7409  0BAB  00A9               	movwf	??___ftadd
  7410  0BAC  0829               	movf	??___ftadd,w
  7411  0BAD  07AF               	addwf	___ftadd@exp1,f
  7412  0BAE                     i1l2093:	
  7413  0BAE  082F               	movf	___ftadd@exp1,w
  7414  0BAF  062E               	xorwf	___ftadd@exp2,w
  7415  0BB0  1903               	btfsc	3,2
  7416  0BB1  2BDC               	goto	i1l734
  7417  0BB2  2BA2               	goto	i1l2091
  7418  0BB3                     i1l2095:	
  7419  0BB3  082F               	movf	___ftadd@exp1,w
  7420  0BB4  022E               	subwf	___ftadd@exp2,w
  7421  0BB5  1803               	skipnc
  7422  0BB6  2BDC               	goto	i1l734
  7423  0BB7                     i1l2097:	
  7424  0BB7  3001               	movlw	1
  7425  0BB8                     u201_25:	
  7426  0BB8  1003               	clrc
  7427  0BB9  0DA3               	rlf	___ftadd@f1,f
  7428  0BBA  0DA4               	rlf	___ftadd@f1+1,f
  7429  0BBB  0DA5               	rlf	___ftadd@f1+2,f
  7430  0BBC  3EFF               	addlw	-1
  7431  0BBD  1D03               	skipz
  7432  0BBE  2BB8               	goto	u201_25
  7433  0BBF  3001               	movlw	1
  7434  0BC0  02AF               	subwf	___ftadd@exp1,f
  7435  0BC1  082E               	movf	___ftadd@exp2,w
  7436  0BC2  062F               	xorwf	___ftadd@exp1,w
  7437  0BC3  1903               	skipnz
  7438  0BC4  2BD8               	goto	i1l2105
  7439  0BC5  3001               	movlw	1
  7440  0BC6  02AD               	subwf	___ftadd@sign,f
  7441  0BC7  082D               	movf	___ftadd@sign,w
  7442  0BC8  3907               	andlw	7
  7443  0BC9  1903               	btfsc	3,2
  7444  0BCA  2BD8               	goto	i1l2105
  7445  0BCB  2BB7               	goto	i1l2097
  7446  0BCC                     i1l2103:	
  7447  0BCC  3001               	movlw	1
  7448  0BCD                     u204_25:	
  7449  0BCD  1003               	clrc
  7450  0BCE  0CA8               	rrf	___ftadd@f2+2,f
  7451  0BCF  0CA7               	rrf	___ftadd@f2+1,f
  7452  0BD0  0CA6               	rrf	___ftadd@f2,f
  7453  0BD1  3EFF               	addlw	-1
  7454  0BD2  1D03               	skipz
  7455  0BD3  2BCD               	goto	u204_25
  7456  0BD4  3001               	movlw	1
  7457  0BD5  00A9               	movwf	??___ftadd
  7458  0BD6  0829               	movf	??___ftadd,w
  7459  0BD7  07AE               	addwf	___ftadd@exp2,f
  7460  0BD8                     i1l2105:	
  7461  0BD8  082F               	movf	___ftadd@exp1,w
  7462  0BD9  062E               	xorwf	___ftadd@exp2,w
  7463  0BDA  1D03               	skipz
  7464  0BDB  2BCC               	goto	i1l2103
  7465  0BDC                     i1l734:	
  7466  0BDC  1FAD               	btfss	___ftadd@sign,7
  7467  0BDD  2BEE               	goto	i1l2109
  7468  0BDE  30FF               	movlw	255
  7469  0BDF  06A3               	xorwf	___ftadd@f1,f
  7470  0BE0  30FF               	movlw	255
  7471  0BE1  06A4               	xorwf	___ftadd@f1+1,f
  7472  0BE2  30FF               	movlw	255
  7473  0BE3  06A5               	xorwf	___ftadd@f1+2,f
  7474  0BE4  3001               	movlw	1
  7475  0BE5  07A3               	addwf	___ftadd@f1,f
  7476  0BE6  3000               	movlw	0
  7477  0BE7  1803               	skipnc
  7478  0BE8  3001               	movlw	1
  7479  0BE9  07A4               	addwf	___ftadd@f1+1,f
  7480  0BEA  3000               	movlw	0
  7481  0BEB  1803               	skipnc
  7482  0BEC  3001               	movlw	1
  7483  0BED  07A5               	addwf	___ftadd@f1+2,f
  7484  0BEE                     i1l2109:	
  7485  0BEE  1F2D               	btfss	___ftadd@sign,6
  7486  0BEF  2C00               	goto	i1l2113
  7487  0BF0  30FF               	movlw	255
  7488  0BF1  06A6               	xorwf	___ftadd@f2,f
  7489  0BF2  30FF               	movlw	255
  7490  0BF3  06A7               	xorwf	___ftadd@f2+1,f
  7491  0BF4  30FF               	movlw	255
  7492  0BF5  06A8               	xorwf	___ftadd@f2+2,f
  7493  0BF6  3001               	movlw	1
  7494  0BF7  07A6               	addwf	___ftadd@f2,f
  7495  0BF8  3000               	movlw	0
  7496  0BF9  1803               	skipnc
  7497  0BFA  3001               	movlw	1
  7498  0BFB  07A7               	addwf	___ftadd@f2+1,f
  7499  0BFC  3000               	movlw	0
  7500  0BFD  1803               	skipnc
  7501  0BFE  3001               	movlw	1
  7502  0BFF  07A8               	addwf	___ftadd@f2+2,f
  7503  0C00                     i1l2113:	
  7504  0C00  01AD               	clrf	___ftadd@sign
  7505  0C01  0823               	movf	___ftadd@f1,w
  7506  0C02  07A6               	addwf	___ftadd@f2,f
  7507  0C03  0824               	movf	___ftadd@f1+1,w
  7508  0C04  1103               	clrz
  7509  0C05  1803               	skipnc
  7510  0C06  0A24               	incf	___ftadd@f1+1,w
  7511  0C07  1D03               	btfss	3,2
  7512  0C08  07A7               	addwf	___ftadd@f2+1,f
  7513  0C09  0825               	movf	___ftadd@f1+2,w
  7514  0C0A  1103               	clrz
  7515  0C0B  1803               	skipnc
  7516  0C0C  0A25               	incf	___ftadd@f1+2,w
  7517  0C0D  1D03               	btfss	3,2
  7518  0C0E  07A8               	addwf	___ftadd@f2+2,f
  7519  0C0F  1FA8               	btfss	___ftadd@f2+2,7
  7520  0C10  2C23               	goto	i1l2123
  7521  0C11  30FF               	movlw	255
  7522  0C12  06A6               	xorwf	___ftadd@f2,f
  7523  0C13  30FF               	movlw	255
  7524  0C14  06A7               	xorwf	___ftadd@f2+1,f
  7525  0C15  30FF               	movlw	255
  7526  0C16  06A8               	xorwf	___ftadd@f2+2,f
  7527  0C17  3001               	movlw	1
  7528  0C18  07A6               	addwf	___ftadd@f2,f
  7529  0C19  3000               	movlw	0
  7530  0C1A  1803               	skipnc
  7531  0C1B  3001               	movlw	1
  7532  0C1C  07A7               	addwf	___ftadd@f2+1,f
  7533  0C1D  3000               	movlw	0
  7534  0C1E  1803               	skipnc
  7535  0C1F  3001               	movlw	1
  7536  0C20  07A8               	addwf	___ftadd@f2+2,f
  7537  0C21  01AD               	clrf	___ftadd@sign
  7538  0C22  0AAD               	incf	___ftadd@sign,f
  7539  0C23                     i1l2123:	
  7540  0C23  0826               	movf	___ftadd@f2,w
  7541  0C24  00F0               	movwf	___ftpack@arg
  7542  0C25  0827               	movf	___ftadd@f2+1,w
  7543  0C26  00F1               	movwf	___ftpack@arg+1
  7544  0C27  0828               	movf	___ftadd@f2+2,w
  7545  0C28  00F2               	movwf	___ftpack@arg+2
  7546  0C29  082F               	movf	___ftadd@exp1,w
  7547  0C2A  00A9               	movwf	??___ftadd
  7548  0C2B  0829               	movf	??___ftadd,w
  7549  0C2C  00F3               	movwf	___ftpack@exp
  7550  0C2D  082D               	movf	___ftadd@sign,w
  7551  0C2E  00AA               	movwf	??___ftadd+1
  7552  0C2F  082A               	movf	??___ftadd+1,w
  7553  0C30  00F4               	movwf	___ftpack@sign
  7554  0C31  160A  118A  269F   	fcall	___ftpack
  7555  0C34  0870               	movf	?___ftpack,w
  7556  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0C37  00A3               	movwf	?___ftadd
  7559  0C38  0871               	movf	?___ftpack+1,w
  7560  0C39  00A4               	movwf	?___ftadd+1
  7561  0C3A  0872               	movf	?___ftpack+2,w
  7562  0C3B  00A5               	movwf	?___ftadd+2
  7563  0C3C  0008               	return
  7564  0C3D                     __end_of___ftadd:	
  7565                           
  7566                           	psect	text30
  7567  1498                     __ptext30:	
  7568 ;; *************** function _max_val *****************
  7569 ;; Defined at:
  7570 ;;		line 153 in file "R:\Note\Sistema I\Ultimo C no MPLAB\main.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  a               3   28[BANK0 ] float 
  7573 ;;  b               3   31[BANK0 ] float 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  3   28[BANK0 ] float 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0, pclath, cstack
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7585 ;;      Params:         0       6       0       0       0
  7586 ;;      Locals:         0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0
  7588 ;;      Totals:         0       6       0       0       0
  7589 ;;Total ram usage:        6 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    1
  7592 ;; This function calls:
  7593 ;;		___ftge
  7594 ;; This function is called by:
  7595 ;;		_Fuzzy
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           
  7600                           ;psect for function _max_val
  7601  1498                     _max_val:	
  7602                           
  7603                           ;main.c: 155: if (a > b)
  7604                           
  7605                           ;incstack = 0
  7606                           ; Regs used in _max_val: [wreg+status,2+status,0+pclath+cstack]
  7607  1498  1283               	bcf	3,5	;RP0=0, select bank0
  7608  1499  1303               	bcf	3,6	;RP1=0, select bank0
  7609  149A  083F               	movf	max_val@b,w
  7610  149B  00B0               	movwf	___ftge@ff1
  7611  149C  0840               	movf	max_val@b+1,w
  7612  149D  00B1               	movwf	___ftge@ff1+1
  7613  149E  0841               	movf	max_val@b+2,w
  7614  149F  00B2               	movwf	___ftge@ff1+2
  7615  14A0  083C               	movf	max_val@a,w
  7616  14A1  00B3               	movwf	___ftge@ff2
  7617  14A2  083D               	movf	max_val@a+1,w
  7618  14A3  00B4               	movwf	___ftge@ff2+1
  7619  14A4  083E               	movf	max_val@a+2,w
  7620  14A5  00B5               	movwf	___ftge@ff2+2
  7621  14A6  160A  118A  2640  160A  118A  	fcall	___ftge
  7622  14AB  1C03               	btfss	3,0
  7623  14AC  0008               	return
  7624                           
  7625                           ;main.c: 157: else
  7626                           ;main.c: 158: return b;
  7627                           
  7628                           ;main.c: 156: return a;
  7629  14AD  1283               	bcf	3,5	;RP0=0, select bank0
  7630  14AE  1303               	bcf	3,6	;RP1=0, select bank0
  7631  14AF  083F               	movf	max_val@b,w
  7632  14B0  00BC               	movwf	?_max_val
  7633  14B1  0840               	movf	max_val@b+1,w
  7634  14B2  00BD               	movwf	?_max_val+1
  7635  14B3  0841               	movf	max_val@b+2,w
  7636  14B4  00BE               	movwf	?_max_val+2
  7637  14B5  0008               	return
  7638  14B6                     __end_of_max_val:	
  7639                           
  7640                           	psect	text31
  7641  1640                     __ptext31:	
  7642 ;; *************** function ___ftge *****************
  7643 ;; Defined at:
  7644 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  ff1             3   16[BANK0 ] float 
  7647 ;;  ff2             3   19[BANK0 ] float 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;		None               void
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7659 ;;      Params:         0       6       0       0       0
  7660 ;;      Locals:         0       0       0       0       0
  7661 ;;      Temps:          0       6       0       0       0
  7662 ;;      Totals:         0      12       0       0       0
  7663 ;;Total ram usage:       12 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_trimf
  7669 ;;		_trapmf
  7670 ;;		_max_val
  7671 ;;		_Fuzzy
  7672 ;;		_min_val
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function ___ftge
  7678  1640                     ___ftge:	
  7679                           
  7680                           ;incstack = 0
  7681                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7682  1640  1283               	bcf	3,5	;RP0=0, select bank0
  7683  1641  1303               	bcf	3,6	;RP1=0, select bank0
  7684  1642  1FB2               	btfss	___ftge@ff1+2,7
  7685  1643  2E69               	goto	i1l2173
  7686  1644  3000               	movlw	0
  7687  1645  00B6               	movwf	??___ftge
  7688  1646  3000               	movlw	0
  7689  1647  00B7               	movwf	??___ftge+1
  7690  1648  3080               	movlw	128
  7691  1649  00B8               	movwf	??___ftge+2
  7692  164A  0930               	comf	___ftge@ff1,w
  7693  164B  00B9               	movwf	??___ftge+3
  7694  164C  0931               	comf	___ftge@ff1+1,w
  7695  164D  00BA               	movwf	??___ftge+4
  7696  164E  0932               	comf	___ftge@ff1+2,w
  7697  164F  00BB               	movwf	??___ftge+5
  7698  1650  0AB9               	incf	??___ftge+3,f
  7699  1651  1903               	skipnz
  7700  1652  0ABA               	incf	??___ftge+4,f
  7701  1653  1903               	skipnz
  7702  1654  0ABB               	incf	??___ftge+5,f
  7703  1655  0839               	movf	??___ftge+3,w
  7704  1656  07B6               	addwf	??___ftge,f
  7705  1657  083A               	movf	??___ftge+4,w
  7706  1658  1803               	skipnc
  7707  1659  0F3A               	incfsz	??___ftge+4,w
  7708  165A  2E5C               	goto	u219_21
  7709  165B  2E5D               	goto	u219_22
  7710  165C                     u219_21:	
  7711  165C  07B7               	addwf	??___ftge+1,f
  7712  165D                     u219_22:	
  7713  165D  083B               	movf	??___ftge+5,w
  7714  165E  1803               	skipnc
  7715  165F  0F3B               	incfsz	??___ftge+5,w
  7716  1660  2E62               	goto	u219_23
  7717  1661  2E63               	goto	u219_24
  7718  1662                     u219_23:	
  7719  1662  07B8               	addwf	??___ftge+2,f
  7720  1663                     u219_24:	
  7721  1663  0836               	movf	??___ftge,w
  7722  1664  00B0               	movwf	___ftge@ff1
  7723  1665  0837               	movf	??___ftge+1,w
  7724  1666  00B1               	movwf	___ftge@ff1+1
  7725  1667  0838               	movf	??___ftge+2,w
  7726  1668  00B2               	movwf	___ftge@ff1+2
  7727  1669                     i1l2173:	
  7728  1669  1FB5               	btfss	___ftge@ff2+2,7
  7729  166A  2E90               	goto	i1l2177
  7730  166B  3000               	movlw	0
  7731  166C  00B6               	movwf	??___ftge
  7732  166D  3000               	movlw	0
  7733  166E  00B7               	movwf	??___ftge+1
  7734  166F  3080               	movlw	128
  7735  1670  00B8               	movwf	??___ftge+2
  7736  1671  0933               	comf	___ftge@ff2,w
  7737  1672  00B9               	movwf	??___ftge+3
  7738  1673  0934               	comf	___ftge@ff2+1,w
  7739  1674  00BA               	movwf	??___ftge+4
  7740  1675  0935               	comf	___ftge@ff2+2,w
  7741  1676  00BB               	movwf	??___ftge+5
  7742  1677  0AB9               	incf	??___ftge+3,f
  7743  1678  1903               	skipnz
  7744  1679  0ABA               	incf	??___ftge+4,f
  7745  167A  1903               	skipnz
  7746  167B  0ABB               	incf	??___ftge+5,f
  7747  167C  0839               	movf	??___ftge+3,w
  7748  167D  07B6               	addwf	??___ftge,f
  7749  167E  083A               	movf	??___ftge+4,w
  7750  167F  1803               	skipnc
  7751  1680  0F3A               	incfsz	??___ftge+4,w
  7752  1681  2E83               	goto	u221_21
  7753  1682  2E84               	goto	u221_22
  7754  1683                     u221_21:	
  7755  1683  07B7               	addwf	??___ftge+1,f
  7756  1684                     u221_22:	
  7757  1684  083B               	movf	??___ftge+5,w
  7758  1685  1803               	skipnc
  7759  1686  0F3B               	incfsz	??___ftge+5,w
  7760  1687  2E89               	goto	u221_23
  7761  1688  2E8A               	goto	u221_24
  7762  1689                     u221_23:	
  7763  1689  07B8               	addwf	??___ftge+2,f
  7764  168A                     u221_24:	
  7765  168A  0836               	movf	??___ftge,w
  7766  168B  00B3               	movwf	___ftge@ff2
  7767  168C  0837               	movf	??___ftge+1,w
  7768  168D  00B4               	movwf	___ftge@ff2+1
  7769  168E  0838               	movf	??___ftge+2,w
  7770  168F  00B5               	movwf	___ftge@ff2+2
  7771  1690                     i1l2177:	
  7772  1690  3080               	movlw	128
  7773  1691  06B2               	xorwf	___ftge@ff1+2,f
  7774  1692  3080               	movlw	128
  7775  1693  06B5               	xorwf	___ftge@ff2+2,f
  7776  1694  0835               	movf	___ftge@ff2+2,w
  7777  1695  0232               	subwf	___ftge@ff1+2,w
  7778  1696  1D03               	skipz
  7779  1697  0008               	return
  7780  1698  0834               	movf	___ftge@ff2+1,w
  7781  1699  0231               	subwf	___ftge@ff1+1,w
  7782  169A  1D03               	skipz
  7783  169B  0008               	return
  7784  169C  0833               	movf	___ftge@ff2,w
  7785  169D  0230               	subwf	___ftge@ff1,w
  7786  169E  0008               	return
  7787  169F                     __end_of___ftge:	
  7788                           
  7789                           	psect	text32
  7790  1423                     __ptext32:	
  7791 ;; *************** function ___lwtoft *****************
  7792 ;; Defined at:
  7793 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  c               2    8[COMMON] unsigned int 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  3    8[COMMON] float 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, status,0, pclath, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7807 ;;      Params:         3       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0
  7809 ;;      Temps:          1       0       0       0       0
  7810 ;;      Totals:         4       0       0       0       0
  7811 ;;Total ram usage:        4 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    1
  7814 ;; This function calls:
  7815 ;;		___ftpack
  7816 ;; This function is called by:
  7817 ;;		_Fuzzy
  7818 ;;		_ISR
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function ___lwtoft
  7824  1423                     ___lwtoft:	
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7828  1423  0878               	movf	___lwtoft@c,w
  7829  1424  00F0               	movwf	___ftpack@arg
  7830  1425  0879               	movf	___lwtoft@c+1,w
  7831  1426  00F1               	movwf	___ftpack@arg+1
  7832  1427  01F2               	clrf	___ftpack@arg+2
  7833  1428  308E               	movlw	142
  7834  1429  00FB               	movwf	??___lwtoft
  7835  142A  087B               	movf	??___lwtoft,w
  7836  142B  00F3               	movwf	___ftpack@exp
  7837  142C  01F4               	clrf	___ftpack@sign
  7838  142D  160A  118A  269F   	fcall	___ftpack
  7839  1430  0870               	movf	?___ftpack,w
  7840  1431  00F8               	movwf	?___lwtoft
  7841  1432  0871               	movf	?___ftpack+1,w
  7842  1433  00F9               	movwf	?___lwtoft+1
  7843  1434  0872               	movf	?___ftpack+2,w
  7844  1435  00FA               	movwf	?___lwtoft+2
  7845  1436  0008               	return
  7846  1437                     __end_of___lwtoft:	
  7847                           
  7848                           	psect	text33
  7849  1772                     __ptext33:	
  7850 ;; *************** function ___fttol *****************
  7851 ;; Defined at:
  7852 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  f1              3   16[BANK0 ] float 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  lval            4   25[BANK0 ] unsigned long 
  7857 ;;  exp1            1   29[BANK0 ] unsigned char 
  7858 ;;  sign1           1   24[BANK0 ] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  4   16[BANK0 ] long 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7868 ;;      Params:         0       4       0       0       0
  7869 ;;      Locals:         0       6       0       0       0
  7870 ;;      Temps:          0       4       0       0       0
  7871 ;;      Totals:         0      14       0       0       0
  7872 ;;Total ram usage:       14 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_Fuzzy
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___fttol
  7883  1772                     ___fttol:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7887  1772  1283               	bcf	3,5	;RP0=0, select bank0
  7888  1773  1303               	bcf	3,6	;RP1=0, select bank0
  7889  1774  0830               	movf	___fttol@f1,w
  7890  1775  00B4               	movwf	??___fttol
  7891  1776  0831               	movf	___fttol@f1+1,w
  7892  1777  00B5               	movwf	??___fttol+1
  7893  1778  0832               	movf	___fttol@f1+2,w
  7894  1779  00B6               	movwf	??___fttol+2
  7895  177A  1003               	clrc
  7896  177B  0D35               	rlf	??___fttol+1,w
  7897  177C  0D36               	rlf	??___fttol+2,w
  7898  177D  00B7               	movwf	??___fttol+3
  7899  177E  0837               	movf	??___fttol+3,w
  7900  177F  00BD               	movwf	___fttol@exp1
  7901  1780  08BD               	movf	___fttol@exp1,f
  7902  1781  1D03               	skipz
  7903  1782  2F8C               	goto	i1l2393
  7904  1783  3000               	movlw	0
  7905  1784  00B3               	movwf	?___fttol+3
  7906  1785  3000               	movlw	0
  7907  1786  00B2               	movwf	?___fttol+2
  7908  1787  3000               	movlw	0
  7909  1788  00B1               	movwf	?___fttol+1
  7910  1789  3000               	movlw	0
  7911  178A  00B0               	movwf	?___fttol
  7912  178B  0008               	return
  7913  178C                     i1l2393:	
  7914  178C  0830               	movf	___fttol@f1,w
  7915  178D  00B4               	movwf	??___fttol
  7916  178E  0831               	movf	___fttol@f1+1,w
  7917  178F  00B5               	movwf	??___fttol+1
  7918  1790  0832               	movf	___fttol@f1+2,w
  7919  1791  00B6               	movwf	??___fttol+2
  7920  1792  3017               	movlw	23
  7921  1793                     u269_25:	
  7922  1793  1003               	clrc
  7923  1794  0CB6               	rrf	??___fttol+2,f
  7924  1795  0CB5               	rrf	??___fttol+1,f
  7925  1796  0CB4               	rrf	??___fttol,f
  7926  1797  3EFF               	addlw	-1
  7927  1798  1D03               	skipz
  7928  1799  2F93               	goto	u269_25
  7929  179A  0834               	movf	??___fttol,w
  7930  179B  00B7               	movwf	??___fttol+3
  7931  179C  0837               	movf	??___fttol+3,w
  7932  179D  00B8               	movwf	___fttol@sign1
  7933  179E  17B1               	bsf	___fttol@f1+1,7
  7934  179F  30FF               	movlw	255
  7935  17A0  05B0               	andwf	___fttol@f1,f
  7936  17A1  30FF               	movlw	255
  7937  17A2  05B1               	andwf	___fttol@f1+1,f
  7938  17A3  3000               	movlw	0
  7939  17A4  05B2               	andwf	___fttol@f1+2,f
  7940  17A5  0830               	movf	___fttol@f1,w
  7941  17A6  00B9               	movwf	___fttol@lval
  7942  17A7  0831               	movf	___fttol@f1+1,w
  7943  17A8  00BA               	movwf	___fttol@lval+1
  7944  17A9  0832               	movf	___fttol@f1+2,w
  7945  17AA  00BB               	movwf	___fttol@lval+2
  7946  17AB  01BC               	clrf	___fttol@lval+3
  7947  17AC  308E               	movlw	142
  7948  17AD  02BD               	subwf	___fttol@exp1,f
  7949  17AE  1FBD               	btfss	___fttol@exp1,7
  7950  17AF  2FCE               	goto	i1l2413
  7951  17B0  083D               	movf	___fttol@exp1,w
  7952  17B1  3A80               	xorlw	128
  7953  17B2  3E8F               	addlw	143
  7954  17B3  1803               	skipnc
  7955  17B4  2FBE               	goto	i1l2411
  7956  17B5  3000               	movlw	0
  7957  17B6  00B3               	movwf	?___fttol+3
  7958  17B7  3000               	movlw	0
  7959  17B8  00B2               	movwf	?___fttol+2
  7960  17B9  3000               	movlw	0
  7961  17BA  00B1               	movwf	?___fttol+1
  7962  17BB  3000               	movlw	0
  7963  17BC  00B0               	movwf	?___fttol
  7964  17BD  0008               	return
  7965  17BE                     i1l2411:	
  7966  17BE  3001               	movlw	1
  7967  17BF                     u272_25:	
  7968  17BF  1003               	clrc
  7969  17C0  0CBC               	rrf	___fttol@lval+3,f
  7970  17C1  0CBB               	rrf	___fttol@lval+2,f
  7971  17C2  0CBA               	rrf	___fttol@lval+1,f
  7972  17C3  0CB9               	rrf	___fttol@lval,f
  7973  17C4  3EFF               	addlw	-1
  7974  17C5  1D03               	skipz
  7975  17C6  2FBF               	goto	u272_25
  7976  17C7  3001               	movlw	1
  7977  17C8  00B4               	movwf	??___fttol
  7978  17C9  0834               	movf	??___fttol,w
  7979  17CA  07BD               	addwf	___fttol@exp1,f
  7980  17CB  1903               	btfsc	3,2
  7981  17CC  2FE9               	goto	i1l2423
  7982  17CD  2FBE               	goto	i1l2411
  7983  17CE                     i1l2413:	
  7984  17CE  3018               	movlw	24
  7985  17CF  023D               	subwf	___fttol@exp1,w
  7986  17D0  1C03               	skipc
  7987  17D1  2FE6               	goto	i1l2421
  7988  17D2  3000               	movlw	0
  7989  17D3  00B3               	movwf	?___fttol+3
  7990  17D4  3000               	movlw	0
  7991  17D5  00B2               	movwf	?___fttol+2
  7992  17D6  3000               	movlw	0
  7993  17D7  00B1               	movwf	?___fttol+1
  7994  17D8  3000               	movlw	0
  7995  17D9  00B0               	movwf	?___fttol
  7996  17DA  0008               	return
  7997  17DB                     i1l2419:	
  7998  17DB  3001               	movlw	1
  7999  17DC  00B4               	movwf	??___fttol
  8000  17DD                     u275_25:	
  8001  17DD  1003               	clrc
  8002  17DE  0DB9               	rlf	___fttol@lval,f
  8003  17DF  0DBA               	rlf	___fttol@lval+1,f
  8004  17E0  0DBB               	rlf	___fttol@lval+2,f
  8005  17E1  0DBC               	rlf	___fttol@lval+3,f
  8006  17E2  0BB4               	decfsz	??___fttol,f
  8007  17E3  2FDD               	goto	u275_25
  8008  17E4  3001               	movlw	1
  8009  17E5  02BD               	subwf	___fttol@exp1,f
  8010  17E6                     i1l2421:	
  8011  17E6  08BD               	movf	___fttol@exp1,f
  8012  17E7  1D03               	skipz
  8013  17E8  2FDB               	goto	i1l2419
  8014  17E9                     i1l2423:	
  8015  17E9  0838               	movf	___fttol@sign1,w
  8016  17EA  1903               	btfsc	3,2
  8017  17EB  2FF7               	goto	i1l2427
  8018  17EC  09B9               	comf	___fttol@lval,f
  8019  17ED  09BA               	comf	___fttol@lval+1,f
  8020  17EE  09BB               	comf	___fttol@lval+2,f
  8021  17EF  09BC               	comf	___fttol@lval+3,f
  8022  17F0  0AB9               	incf	___fttol@lval,f
  8023  17F1  1903               	skipnz
  8024  17F2  0ABA               	incf	___fttol@lval+1,f
  8025  17F3  1903               	skipnz
  8026  17F4  0ABB               	incf	___fttol@lval+2,f
  8027  17F5  1903               	skipnz
  8028  17F6  0ABC               	incf	___fttol@lval+3,f
  8029  17F7                     i1l2427:	
  8030  17F7  083C               	movf	___fttol@lval+3,w
  8031  17F8  00B3               	movwf	?___fttol+3
  8032  17F9  083B               	movf	___fttol@lval+2,w
  8033  17FA  00B2               	movwf	?___fttol+2
  8034  17FB  083A               	movf	___fttol@lval+1,w
  8035  17FC  00B1               	movwf	?___fttol+1
  8036  17FD  0839               	movf	___fttol@lval,w
  8037  17FE  00B0               	movwf	?___fttol
  8038  17FF  0008               	return
  8039  1800                     __end_of___fttol:	
  8040                           
  8041                           	psect	text34
  8042  098C                     __ptext34:	
  8043 ;; *************** function ___ftmul *****************
  8044 ;; Defined at:
  8045 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  f1              3    8[COMMON] float 
  8048 ;;  f2              3   11[COMMON] float 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  8051 ;;  sign            1    9[BANK0 ] unsigned char 
  8052 ;;  cntr            1    8[BANK0 ] unsigned char 
  8053 ;;  exp             1    4[BANK0 ] unsigned char 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  3    8[COMMON] float 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8063 ;;      Params:         6       0       0       0       0
  8064 ;;      Locals:         0       6       0       0       0
  8065 ;;      Temps:          0       4       0       0       0
  8066 ;;      Totals:         6      10       0       0       0
  8067 ;;Total ram usage:       16 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    1
  8070 ;; This function calls:
  8071 ;;		___ftpack
  8072 ;; This function is called by:
  8073 ;;		_Fuzzy
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function ___ftmul
  8079  098C                     ___ftmul:	
  8080                           
  8081                           ;incstack = 0
  8082                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8083  098C  0878               	movf	___ftmul@f1,w
  8084  098D  1283               	bcf	3,5	;RP0=0, select bank0
  8085  098E  1303               	bcf	3,6	;RP1=0, select bank0
  8086  098F  00A0               	movwf	??___ftmul
  8087  0990  0879               	movf	___ftmul@f1+1,w
  8088  0991  00A1               	movwf	??___ftmul+1
  8089  0992  087A               	movf	___ftmul@f1+2,w
  8090  0993  00A2               	movwf	??___ftmul+2
  8091  0994  1003               	clrc
  8092  0995  0D21               	rlf	??___ftmul+1,w
  8093  0996  0D22               	rlf	??___ftmul+2,w
  8094  0997  00A3               	movwf	??___ftmul+3
  8095  0998  0823               	movf	??___ftmul+3,w
  8096  0999  00A4               	movwf	___ftmul@exp
  8097  099A  08A4               	movf	___ftmul@exp,f
  8098  099B  1D03               	skipz
  8099  099C  29A4               	goto	i1l2343
  8100  099D  3000               	movlw	0
  8101  099E  00F8               	movwf	?___ftmul
  8102  099F  3000               	movlw	0
  8103  09A0  00F9               	movwf	?___ftmul+1
  8104  09A1  3000               	movlw	0
  8105  09A2  00FA               	movwf	?___ftmul+2
  8106  09A3  0008               	return
  8107  09A4                     i1l2343:	
  8108  09A4  087B               	movf	___ftmul@f2,w
  8109  09A5  00A0               	movwf	??___ftmul
  8110  09A6  087C               	movf	___ftmul@f2+1,w
  8111  09A7  00A1               	movwf	??___ftmul+1
  8112  09A8  087D               	movf	___ftmul@f2+2,w
  8113  09A9  00A2               	movwf	??___ftmul+2
  8114  09AA  1003               	clrc
  8115  09AB  0D21               	rlf	??___ftmul+1,w
  8116  09AC  0D22               	rlf	??___ftmul+2,w
  8117  09AD  00A3               	movwf	??___ftmul+3
  8118  09AE  0823               	movf	??___ftmul+3,w
  8119  09AF  00A9               	movwf	___ftmul@sign
  8120  09B0  08A9               	movf	___ftmul@sign,f
  8121  09B1  1D03               	skipz
  8122  09B2  29BA               	goto	i1l2349
  8123  09B3  3000               	movlw	0
  8124  09B4  00F8               	movwf	?___ftmul
  8125  09B5  3000               	movlw	0
  8126  09B6  00F9               	movwf	?___ftmul+1
  8127  09B7  3000               	movlw	0
  8128  09B8  00FA               	movwf	?___ftmul+2
  8129  09B9  0008               	return
  8130  09BA                     i1l2349:	
  8131  09BA  0829               	movf	___ftmul@sign,w
  8132  09BB  3E7B               	addlw	123
  8133  09BC  00A0               	movwf	??___ftmul
  8134  09BD  0820               	movf	??___ftmul,w
  8135  09BE  07A4               	addwf	___ftmul@exp,f
  8136  09BF  0878               	movf	___ftmul@f1,w
  8137  09C0  00A0               	movwf	??___ftmul
  8138  09C1  0879               	movf	___ftmul@f1+1,w
  8139  09C2  00A1               	movwf	??___ftmul+1
  8140  09C3  087A               	movf	___ftmul@f1+2,w
  8141  09C4  00A2               	movwf	??___ftmul+2
  8142  09C5  3010               	movlw	16
  8143  09C6                     u256_25:	
  8144  09C6  1003               	clrc
  8145  09C7  0CA2               	rrf	??___ftmul+2,f
  8146  09C8  0CA1               	rrf	??___ftmul+1,f
  8147  09C9  0CA0               	rrf	??___ftmul,f
  8148  09CA  3EFF               	addlw	-1
  8149  09CB  1D03               	skipz
  8150  09CC  29C6               	goto	u256_25
  8151  09CD  0820               	movf	??___ftmul,w
  8152  09CE  00A3               	movwf	??___ftmul+3
  8153  09CF  0823               	movf	??___ftmul+3,w
  8154  09D0  00A9               	movwf	___ftmul@sign
  8155  09D1  087B               	movf	___ftmul@f2,w
  8156  09D2  00A0               	movwf	??___ftmul
  8157  09D3  087C               	movf	___ftmul@f2+1,w
  8158  09D4  00A1               	movwf	??___ftmul+1
  8159  09D5  087D               	movf	___ftmul@f2+2,w
  8160  09D6  00A2               	movwf	??___ftmul+2
  8161  09D7  3010               	movlw	16
  8162  09D8                     u257_25:	
  8163  09D8  1003               	clrc
  8164  09D9  0CA2               	rrf	??___ftmul+2,f
  8165  09DA  0CA1               	rrf	??___ftmul+1,f
  8166  09DB  0CA0               	rrf	??___ftmul,f
  8167  09DC  3EFF               	addlw	-1
  8168  09DD  1D03               	skipz
  8169  09DE  29D8               	goto	u257_25
  8170  09DF  0820               	movf	??___ftmul,w
  8171  09E0  00A3               	movwf	??___ftmul+3
  8172  09E1  0823               	movf	??___ftmul+3,w
  8173  09E2  06A9               	xorwf	___ftmul@sign,f
  8174  09E3  3080               	movlw	128
  8175  09E4  00A0               	movwf	??___ftmul
  8176  09E5  0820               	movf	??___ftmul,w
  8177  09E6  05A9               	andwf	___ftmul@sign,f
  8178  09E7  17F9               	bsf	___ftmul@f1+1,7
  8179  09E8  17FC               	bsf	___ftmul@f2+1,7
  8180  09E9  30FF               	movlw	255
  8181  09EA  05FB               	andwf	___ftmul@f2,f
  8182  09EB  30FF               	movlw	255
  8183  09EC  05FC               	andwf	___ftmul@f2+1,f
  8184  09ED  3000               	movlw	0
  8185  09EE  05FD               	andwf	___ftmul@f2+2,f
  8186  09EF  3000               	movlw	0
  8187  09F0  00A5               	movwf	___ftmul@f3_as_product
  8188  09F1  3000               	movlw	0
  8189  09F2  00A6               	movwf	___ftmul@f3_as_product+1
  8190  09F3  3000               	movlw	0
  8191  09F4  00A7               	movwf	___ftmul@f3_as_product+2
  8192  09F5  3007               	movlw	7
  8193  09F6  00A0               	movwf	??___ftmul
  8194  09F7  0820               	movf	??___ftmul,w
  8195  09F8  00A8               	movwf	___ftmul@cntr
  8196  09F9                     i1l2361:	
  8197  09F9  1C78               	btfss	___ftmul@f1,0
  8198  09FA  2A09               	goto	i1l2365
  8199  09FB  087B               	movf	___ftmul@f2,w
  8200  09FC  07A5               	addwf	___ftmul@f3_as_product,f
  8201  09FD  087C               	movf	___ftmul@f2+1,w
  8202  09FE  1103               	clrz
  8203  09FF  1803               	skipnc
  8204  0A00  0A7C               	incf	___ftmul@f2+1,w
  8205  0A01  1D03               	btfss	3,2
  8206  0A02  07A6               	addwf	___ftmul@f3_as_product+1,f
  8207  0A03  087D               	movf	___ftmul@f2+2,w
  8208  0A04  1103               	clrz
  8209  0A05  1803               	skipnc
  8210  0A06  0A7D               	incf	___ftmul@f2+2,w
  8211  0A07  1D03               	btfss	3,2
  8212  0A08  07A7               	addwf	___ftmul@f3_as_product+2,f
  8213  0A09                     i1l2365:	
  8214  0A09  3001               	movlw	1
  8215  0A0A                     u260_25:	
  8216  0A0A  1003               	clrc
  8217  0A0B  0CFA               	rrf	___ftmul@f1+2,f
  8218  0A0C  0CF9               	rrf	___ftmul@f1+1,f
  8219  0A0D  0CF8               	rrf	___ftmul@f1,f
  8220  0A0E  3EFF               	addlw	-1
  8221  0A0F  1D03               	skipz
  8222  0A10  2A0A               	goto	u260_25
  8223  0A11  3001               	movlw	1
  8224  0A12                     u261_25:	
  8225  0A12  1003               	clrc
  8226  0A13  0DFB               	rlf	___ftmul@f2,f
  8227  0A14  0DFC               	rlf	___ftmul@f2+1,f
  8228  0A15  0DFD               	rlf	___ftmul@f2+2,f
  8229  0A16  3EFF               	addlw	-1
  8230  0A17  1D03               	skipz
  8231  0A18  2A12               	goto	u261_25
  8232  0A19  3001               	movlw	1
  8233  0A1A  02A8               	subwf	___ftmul@cntr,f
  8234  0A1B  1D03               	btfss	3,2
  8235  0A1C  29F9               	goto	i1l2361
  8236  0A1D  3009               	movlw	9
  8237  0A1E  00A0               	movwf	??___ftmul
  8238  0A1F  0820               	movf	??___ftmul,w
  8239  0A20  00A8               	movwf	___ftmul@cntr
  8240  0A21                     i1l2373:	
  8241  0A21  1C78               	btfss	___ftmul@f1,0
  8242  0A22  2A31               	goto	i1l2377
  8243  0A23  087B               	movf	___ftmul@f2,w
  8244  0A24  07A5               	addwf	___ftmul@f3_as_product,f
  8245  0A25  087C               	movf	___ftmul@f2+1,w
  8246  0A26  1103               	clrz
  8247  0A27  1803               	skipnc
  8248  0A28  0A7C               	incf	___ftmul@f2+1,w
  8249  0A29  1D03               	btfss	3,2
  8250  0A2A  07A6               	addwf	___ftmul@f3_as_product+1,f
  8251  0A2B  087D               	movf	___ftmul@f2+2,w
  8252  0A2C  1103               	clrz
  8253  0A2D  1803               	skipnc
  8254  0A2E  0A7D               	incf	___ftmul@f2+2,w
  8255  0A2F  1D03               	btfss	3,2
  8256  0A30  07A7               	addwf	___ftmul@f3_as_product+2,f
  8257  0A31                     i1l2377:	
  8258  0A31  3001               	movlw	1
  8259  0A32                     u265_25:	
  8260  0A32  1003               	clrc
  8261  0A33  0CFA               	rrf	___ftmul@f1+2,f
  8262  0A34  0CF9               	rrf	___ftmul@f1+1,f
  8263  0A35  0CF8               	rrf	___ftmul@f1,f
  8264  0A36  3EFF               	addlw	-1
  8265  0A37  1D03               	skipz
  8266  0A38  2A32               	goto	u265_25
  8267  0A39  3001               	movlw	1
  8268  0A3A                     u266_25:	
  8269  0A3A  1003               	clrc
  8270  0A3B  0CA7               	rrf	___ftmul@f3_as_product+2,f
  8271  0A3C  0CA6               	rrf	___ftmul@f3_as_product+1,f
  8272  0A3D  0CA5               	rrf	___ftmul@f3_as_product,f
  8273  0A3E  3EFF               	addlw	-1
  8274  0A3F  1D03               	skipz
  8275  0A40  2A3A               	goto	u266_25
  8276  0A41  3001               	movlw	1
  8277  0A42  02A8               	subwf	___ftmul@cntr,f
  8278  0A43  1D03               	btfss	3,2
  8279  0A44  2A21               	goto	i1l2373
  8280  0A45  0825               	movf	___ftmul@f3_as_product,w
  8281  0A46  00F0               	movwf	___ftpack@arg
  8282  0A47  0826               	movf	___ftmul@f3_as_product+1,w
  8283  0A48  00F1               	movwf	___ftpack@arg+1
  8284  0A49  0827               	movf	___ftmul@f3_as_product+2,w
  8285  0A4A  00F2               	movwf	___ftpack@arg+2
  8286  0A4B  0824               	movf	___ftmul@exp,w
  8287  0A4C  00A0               	movwf	??___ftmul
  8288  0A4D  0820               	movf	??___ftmul,w
  8289  0A4E  00F3               	movwf	___ftpack@exp
  8290  0A4F  0829               	movf	___ftmul@sign,w
  8291  0A50  00A1               	movwf	??___ftmul+1
  8292  0A51  0821               	movf	??___ftmul+1,w
  8293  0A52  00F4               	movwf	___ftpack@sign
  8294  0A53  160A  118A  269F   	fcall	___ftpack
  8295  0A56  0870               	movf	?___ftpack,w
  8296  0A57  00F8               	movwf	?___ftmul
  8297  0A58  0871               	movf	?___ftpack+1,w
  8298  0A59  00F9               	movwf	?___ftmul+1
  8299  0A5A  0872               	movf	?___ftpack+2,w
  8300  0A5B  00FA               	movwf	?___ftmul+2
  8301  0A5C  0008               	return
  8302  0A5D                     __end_of___ftmul:	
  8303                           
  8304                           	psect	text35
  8305  169F                     __ptext35:	
  8306 ;; *************** function ___ftpack *****************
  8307 ;; Defined at:
  8308 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  arg             3    0[COMMON] unsigned um
  8311 ;;  exp             1    3[COMMON] unsigned char 
  8312 ;;  sign            1    4[COMMON] unsigned char 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  3    0[COMMON] float 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8324 ;;      Params:         5       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0
  8326 ;;      Temps:          3       0       0       0       0
  8327 ;;      Totals:         8       0       0       0       0
  8328 ;;Total ram usage:        8 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		___ftadd
  8334 ;;		___ftdiv
  8335 ;;		___ftmul
  8336 ;;		___lwtoft
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function ___ftpack
  8342  169F                     ___ftpack:	
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8346  169F  0873               	movf	___ftpack@exp,w
  8347  16A0  1903               	btfsc	3,2
  8348  16A1  2EA7               	goto	i1l2025
  8349  16A2  0872               	movf	___ftpack@arg+2,w
  8350  16A3  0471               	iorwf	___ftpack@arg+1,w
  8351  16A4  0470               	iorwf	___ftpack@arg,w
  8352  16A5  1D03               	skipz
  8353  16A6  2EBA               	goto	i1l2031
  8354  16A7                     i1l2025:	
  8355  16A7  3000               	movlw	0
  8356  16A8  00F0               	movwf	?___ftpack
  8357  16A9  3000               	movlw	0
  8358  16AA  00F1               	movwf	?___ftpack+1
  8359  16AB  3000               	movlw	0
  8360  16AC  00F2               	movwf	?___ftpack+2
  8361  16AD  0008               	return
  8362  16AE                     i1l2029:	
  8363  16AE  3001               	movlw	1
  8364  16AF  00F5               	movwf	??___ftpack
  8365  16B0  0875               	movf	??___ftpack,w
  8366  16B1  07F3               	addwf	___ftpack@exp,f
  8367  16B2  3001               	movlw	1
  8368  16B3                     u176_25:	
  8369  16B3  1003               	clrc
  8370  16B4  0CF2               	rrf	___ftpack@arg+2,f
  8371  16B5  0CF1               	rrf	___ftpack@arg+1,f
  8372  16B6  0CF0               	rrf	___ftpack@arg,f
  8373  16B7  3EFF               	addlw	-1
  8374  16B8  1D03               	skipz
  8375  16B9  2EB3               	goto	u176_25
  8376  16BA                     i1l2031:	
  8377  16BA  30FE               	movlw	254
  8378  16BB  0572               	andwf	___ftpack@arg+2,w
  8379  16BC  1903               	btfsc	3,2
  8380  16BD  2ED5               	goto	i1l705
  8381  16BE  2EAE               	goto	i1l2029
  8382  16BF                     i1l2033:	
  8383  16BF  3001               	movlw	1
  8384  16C0  00F5               	movwf	??___ftpack
  8385  16C1  0875               	movf	??___ftpack,w
  8386  16C2  07F3               	addwf	___ftpack@exp,f
  8387  16C3  3001               	movlw	1
  8388  16C4  07F0               	addwf	___ftpack@arg,f
  8389  16C5  3000               	movlw	0
  8390  16C6  1803               	skipnc
  8391  16C7  3001               	movlw	1
  8392  16C8  07F1               	addwf	___ftpack@arg+1,f
  8393  16C9  3000               	movlw	0
  8394  16CA  1803               	skipnc
  8395  16CB  3001               	movlw	1
  8396  16CC  07F2               	addwf	___ftpack@arg+2,f
  8397  16CD  3001               	movlw	1
  8398  16CE                     u178_25:	
  8399  16CE  1003               	clrc
  8400  16CF  0CF2               	rrf	___ftpack@arg+2,f
  8401  16D0  0CF1               	rrf	___ftpack@arg+1,f
  8402  16D1  0CF0               	rrf	___ftpack@arg,f
  8403  16D2  3EFF               	addlw	-1
  8404  16D3  1D03               	skipz
  8405  16D4  2ECE               	goto	u178_25
  8406  16D5                     i1l705:	
  8407  16D5  30FF               	movlw	255
  8408  16D6  0572               	andwf	___ftpack@arg+2,w
  8409  16D7  1903               	btfsc	3,2
  8410  16D8  2EE4               	goto	i1l2041
  8411  16D9  2EBF               	goto	i1l2033
  8412  16DA                     i1l2039:	
  8413  16DA  3001               	movlw	1
  8414  16DB  02F3               	subwf	___ftpack@exp,f
  8415  16DC  3001               	movlw	1
  8416  16DD                     u180_25:	
  8417  16DD  1003               	clrc
  8418  16DE  0DF0               	rlf	___ftpack@arg,f
  8419  16DF  0DF1               	rlf	___ftpack@arg+1,f
  8420  16E0  0DF2               	rlf	___ftpack@arg+2,f
  8421  16E1  3EFF               	addlw	-1
  8422  16E2  1D03               	skipz
  8423  16E3  2EDD               	goto	u180_25
  8424  16E4                     i1l2041:	
  8425  16E4  1FF1               	btfss	___ftpack@arg+1,7
  8426  16E5  2EDA               	goto	i1l2039
  8427  16E6  1873               	btfsc	___ftpack@exp,0
  8428  16E7  2EEE               	goto	i1l711
  8429  16E8  30FF               	movlw	255
  8430  16E9  05F0               	andwf	___ftpack@arg,f
  8431  16EA  307F               	movlw	127
  8432  16EB  05F1               	andwf	___ftpack@arg+1,f
  8433  16EC  30FF               	movlw	255
  8434  16ED  05F2               	andwf	___ftpack@arg+2,f
  8435  16EE                     i1l711:	
  8436  16EE  1003               	clrc
  8437  16EF  0CF3               	rrf	___ftpack@exp,f
  8438  16F0  0873               	movf	___ftpack@exp,w
  8439  16F1  00F5               	movwf	??___ftpack
  8440  16F2  01F6               	clrf	??___ftpack+1
  8441  16F3  01F7               	clrf	??___ftpack+2
  8442  16F4  3010               	movlw	16
  8443  16F5                     u183_25:	
  8444  16F5  1003               	clrc
  8445  16F6  0DF5               	rlf	??___ftpack,f
  8446  16F7  0DF6               	rlf	??___ftpack+1,f
  8447  16F8  0DF7               	rlf	??___ftpack+2,f
  8448  16F9  3EFF               	addlw	-1
  8449  16FA  1D03               	skipz
  8450  16FB  2EF5               	goto	u183_25
  8451  16FC  0875               	movf	??___ftpack,w
  8452  16FD  04F0               	iorwf	___ftpack@arg,f
  8453  16FE  0876               	movf	??___ftpack+1,w
  8454  16FF  04F1               	iorwf	___ftpack@arg+1,f
  8455  1700  0877               	movf	??___ftpack+2,w
  8456  1701  04F2               	iorwf	___ftpack@arg+2,f
  8457  1702  0874               	movf	___ftpack@sign,w
  8458  1703  1903               	btfsc	3,2
  8459  1704  0008               	return
  8460  1705  17F2               	bsf	___ftpack@arg+2,7
  8461  1706  0008               	return
  8462  1707                     __end_of___ftpack:	
  8463  007E                     btemp	set	126	;btemp
  8464  007E                     wtemp	set	126
  8465  007E                     wtemp0	set	126
  8466  0080                     wtemp1	set	128
  8467  0082                     wtemp2	set	130
  8468  0084                     wtemp3	set	132
  8469  0086                     wtemp4	set	134
  8470  0088                     wtemp5	set	136
  8471  007F                     wtemp6	set	127
  8472  007E                     ttemp	set	126
  8473  007E                     ttemp0	set	126
  8474  0081                     ttemp1	set	129
  8475  0084                     ttemp2	set	132
  8476  0087                     ttemp3	set	135
  8477  007F                     ttemp4	set	127
  8478  007E                     ltemp	set	126
  8479  007E                     ltemp0	set	126
  8480  0082                     ltemp1	set	130
  8481  0086                     ltemp2	set	134
  8482  0080                     ltemp3	set	128


Data Sizes:
    Strings     77
    Constant    0
    Data        10
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      79
    BANK1            80     26      77
    BANK3            96      0      26
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> display_rpm(BANK3[10]), STR_3(CODE[6]), STR_2(CODE[17]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___wmul
    _ISR->i1_PWM_DutyCycle2
    _send->___wmul
    ___wmul->___lwdiv
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar
    _Fuzzy->___ftmul
    _Fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___lwtoft
    ___ftneg->___lwtoft
    ___ftadd->___lwtoft
    ___ftge->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_Fuzzy
    _Fuzzy->_trapmf
    i1_PWM_DutyCycle2->___fttol
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _max_val->___ftge
    ___ftge->___ftadd
    ___fttol->___ftadd

Critical Paths under _main in BANK1

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1491
                                             23 BANK1      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK1      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     222
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              2 BANK1      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     322
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK1      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   60954
                                             73 BANK0      4     4      0
                              _Fuzzy
                  _USART_ReceiveChar
                  _USART_WriteString
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                               _send
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send                                                 5     5      0     529
                                              0 BANK0      5     5      0
                    _USART_WriteChar
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     348
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     151
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (4) _USART_WriteString                                    2     2      0     127
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Fuzzy                                               23    23      0   56655
                                             50 BANK0     23    23      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                            _max_val
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2     122
                                             12 COMMON     2     2      0
                                             30 BANK0      2     0      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _trimf                                               15     3     12   15182
                                             32 BANK0     15     3     12
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapmf                                              18     3     15   16039
                                             32 BANK0     18     3     15
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     813
                                              0 BANK0      3     0      3
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    2968
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    6190
                                              3 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) _max_val                                              6     0      6    4704
                                             28 BANK0      6     0      6
                             ___ftge
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    4232
                                             16 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2582
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     508
                                             16 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2630
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2048
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _Fuzzy
     ___ftadd
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _max_val
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _trapmf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     _trimf
       ___ftadd
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___lwtoft (ARG)
           ___ftpack
     i1_PWM_DutyCycle2
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteString
     _USART_WriteChar
   ___lwdiv
   ___lwtoft
     ___ftpack
   ___wmul
     ___lwdiv (ARG)
   _send
     _USART_WriteChar
     ___wmul
       ___lwdiv (ARG)
   i1_PWM_DutyCycle2
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      1A       9       27.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C4      12        0.0%
ABS                  0      0      C4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jun 22 13:19:55 2022

         ?i1_PWM_DutyCycle2 003E                           _x 00B5                           _y 00B8  
                         pc 0002                 ?_LCD_Cursor 00C9     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 007A          ??i1_PWM_DutyCycle2 007C  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00BF  
              ___ftadd@sign 002D                         l599 0767                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0D61                         _rpm 00C3  
                       fsr0 0004                         _pwm 00EB                         _sum 00AF  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
         ??_LCD_WriteString 00CD                __CFG_LVP$OFF 0000                        ?_ISR 0070  
              ___ftdiv@cntr 003A                ___ftdiv@sign 003F          LCD_WriteString@Str 00CB  
                      l2315 0788                        l2307 0778                        l2333 07DB  
                      l2325 07C0                        l2317 0798                        l2329 07CD  
                      l2753 14C4                        l2767 1588                        l2949 0AEC  
                      STR_1 1049                        STR_2 1038                        STR_3 1057  
                      STR_4 1010                        u3045 150C                        u2505 07AF  
                      u3065 1602                        u2515 07C1                        u3407 173B  
                      u3095 14EB                        u3417 1747                        u3427 1755  
                      u2475 078C                        u3347 0AE5                        u3437 1763  
                      u3357 0B2D                        u3447 176F                        u3367 145F  
                      u2495 079A                        u3457 14D0                        u3377 1711  
                      u3467 156B                        u3387 1721                        u3477 1579  
                      u3397 172F                        u3487 1585                        u3497 1448  
                      _OERR 00C1                        _TMR0 0001                        _TMR1 000E  
                      _main 0A5D                ___ftpack@arg 0070          __size_of_LCD_Clear 0029  
              ___ftpack@exp 0073                        _send 08C6                        btemp 007E  
          __end_of_ADC_Init 1423                        ltemp 007E                        start 0012  
                      ttemp 007E                        wtemp 007E               ?_LCD_WriteCmd 0070  
             _LCD_WriteData 144E                ___ftmul@cntr 0028                ___ftmul@sign 0029  
   __end_of_USART_WriteChar 13DC                       ??_ISR 0069                ___fttol@exp1 003D  
              ___fttol@lval 0039                 ?_TIMER0_Set 0070            __end_of_LCD_Init 1772  
           __end_of___aldiv 07E4                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 0C3D                       ?_send 0070               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 08C6             __end_of___ftneg 13F6             __end_of___ftmul 0A5D  
                     _T1CON 0010             __end_of___fttol 1800             __end_of___lwdiv 15F7  
                     i1l112 0D58                       i1l122 0FF7                       i1l224 13D5  
                     i1l180 0E9D                       i1l149 0101                       i1l711 16EE  
                     i1l544 1522                       i1l705 16D5                       i1l734 0BDC  
                     _RCREG 001A                       _TMR1H 000F                       _TMR1L 000E  
                     _SPBRG 0099                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _TXREG 0019  
             __CFG_PWRTE$ON 0000                       _Fuzzy 0039             __end_of_max_val 14B6  
             ___ftpack@sign 0074                       _trimf 0C3D              __CFG_BOREN$OFF 0000  
       __size_of_LCD_Cursor 0020                       pclath 000A            __end_of_PWM_Init 155F  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F              ??_LCD_WriteCmd 00C9  
            ?_LCD_WriteData 0070                 ?_USART_Init 00D8       i1TIMER0_Set@contagens 0070  
           __initialization 0015                __end_of_main 0B34                __end_of_send 098C  
                    ??_main 00E0               ___fttol@sign1 0038                      ??_send 0020  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 1588                  Fuzzy@a_242 0059  
                Fuzzy@a_243 005B                      ?_Fuzzy 0070                  Fuzzy@freio 0052  
                Fuzzy@reduz 0060                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___ftpack 1707                      ?_trimf 0040  
                    i1l2031 16BA                      i1l2103 0BCC                      i1l2041 16E4  
                    i1l2033 16BF                      i1l2025 16A7                      i1l2113 0C00  
                    i1l2105 0BD8                      i1l2123 0C23                      i1l2029 16AE  
                    i1l2109 0BEE                      i1l2133 0826                      i1l2039 16DA  
                    i1l2063 0B5D                      i1l2215 0D3B                      i1l2073 0B73  
                    i1l2161 08A0                      i1l2153 0881                      i1l2233 0F23  
                    i1l2209 0CB6                      i1l2411 17BE                      i1l2091 0BA2  
                    i1l2067 0B64                      i1l2139 083C                      i1l2421 17E6  
                    i1l2413 17CE                      i1l2173 1669                      i1l2093 0BAE  
                    i1l2085 0B8D                      i1l2245 0FDA                      i1l2343 09A4  
                    i1l2423 17E9                      i1l2095 0BB3                      i1l2239 0F55  
                    i1l2361 09F9                      i1l2177 1690                      i1l2097 0BB7  
                    i1l2521 013C                      i1l2513 0102                      i1l2427 17F7  
                    i1l2419 17DB                      i1l2267 07E5                      i1l2373 0A21  
                    i1l2365 0A09                      i1l2349 09BA                      u201_25 0BB8  
                    i1l2605 05F3                      i1l2517 011F                      i1l2535 01D0  
                    i1l2287 151A                      i1l2377 0A31                      i1l2393 178C  
                    i1l2561 0354                      i1l2545 02B1                      i1l2801 15E5  
                    i1l2571 042F                      i1l2539 024A                      i1l2643 147A  
                    i1l2635 146E                      i1l2483 0981                      i1l2475 0965  
                    i1l2565 03C8                      i1l2805 15F0                      i1l2901 0E99  
                    i1l2831 0D8B                      i1l2585 04C3                      i1l2595 05A4  
                    i1l2851 0DD1                      i1l2843 0DB5                      i1l2835 0D99  
                    i1l2827 0D7D                      i1l2589 053D                      i1l2599 05C1  
                    i1l2871 0E22                      i1l2863 0DFB                      i1l2855 0DDF  
                    i1l2847 0DC3                      i1l2839 0DA7                      i1l2793 15C1  
                    i1l2873 0E25                      i1l2795 15CF                      i1l2859 0DED  
                    u204_25 0BCD                      u212_25 084E                      i1l2885 0E42  
                    u221_21 1683                      u221_22 1684                      u221_23 1689  
                    i1l2899 0E98                      u221_24 168A                      u213_25 0860  
                    u214_25 0882                      u215_25 0893                      u311_25 15C4  
                    u216_25 08A1                      u313_25 15D0                      u241_25 1523  
                    u314_25 15DC                      u242_25 152A                      u219_21 165C  
                    u219_22 165D                      u219_23 1662                      u219_24 1663  
                    u315_25 15E6                      u180_25 16DD                      u260_25 0A0A  
                    u261_25 0A12                      u183_25 16F5                      u176_25 16B3  
                    u256_25 09C6                      u272_25 17BF                      u265_25 0A32  
                    u257_25 09D8            __end_of___lwtoft 1437                      u178_25 16CE  
                    u266_25 0A3A                      u290_25 0352                      u275_25 17DD  
                    u195_25 0B8E                      u292_25 042D                      u269_25 1793  
                    u285_25 01CE         __size_of_TIMER0_Set 0008                      u198_25 0BA3  
                    u278_25 148E                      u294_25 04C1                      u287_25 02AF  
                    u296_25 05A2                      _SSPADD 0093                      _SSPBUF 0013  
                    Fuzzy@a 0057            LCD_WriteCmd@Byte 00CA                      ___ftge 1640  
                 ??___aldiv 00D1                      ___wmul 1518                   ??___ftadd 0029  
            _PWM_DutyCycle1 14D6              _PWM_DutyCycle2 14F7            ?_USART_WriteChar 0070  
                 ??___ftdiv 0036                   ??___ftneg 007C                      _deltaV 006D  
                 ??___ftmul 0020                   ??___fttol 0034                   ??___lwdiv 0074  
                    _antigo 00E3                      _buffer 0190                      _fitemp 00A3  
     USART_ReceiveChar@byte 0074                      _trapmf 0EAA                      _pulsos 00C1  
                    _status 00C7       ___ftmul@f3_as_product 0025                   ??_max_val 007C  
                 ?_ADC_Init 0070                      saved_w 007E         __size_of_USART_Init 0049  
                    trimf@a 0043                      trimf@b 0046                      trimf@c 0049  
                    trimf@x 0040               ?i1_TIMER0_Set 0070     __end_of__initialization 0035  
                 ?_LCD_Init 0070                  ___ftadd@f1 0023                  ___ftadd@f2 0026  
           ??_LCD_WriteData 00C9                  ___ftge@ff1 0030                  ___ftge@ff2 0033  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020      __end_of_PWM_DutyCycle1 14F7      __end_of_PWM_DutyCycle2 1518  
                ___ftmul@f1 0078                  ___ftmul@f2 007B                  ___fttol@f1 0030  
            __pcstackCOMMON 0070               __end_of_Fuzzy 0755                __pidataBANK1 13F6  
             LCD_Cursor@Col 00C9               LCD_Cursor@Row 00CB                ??_LCD_Cursor 00CA  
           _LCD_WriteString 1588               __end_of_trimf 0D61                  ___lwtoft@c 0078  
                 ?_PWM_Init 0070              _OPTION_REGbits 0081                  ??_ADC_Init 00C9  
      __end_of_LCD_WriteCmd 144E                     ??_Fuzzy 007E   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                     ??_trimf 007C                  __pbssBANK0 006D  
                __pbssBANK1 00A0                  __pbssBANK3 0190          __end_of_LCD_Cursor 14D6  
                ??_LCD_Init 00CB               Fuzzy@deltaRpm 0066             ?_PWM_DutyCycle1 00C9  
           ?_PWM_DutyCycle2 00C9                  __pmaintext 0A5D                 Fuzzy@mantem 005D  
                   ?___ftge 0030                     ?___wmul 0078                  __pintentry 0004  
              ??_TIMER0_Set 00C9                     _CCP1CON 0017                     _CCP2CON 001D  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 00C9  
                 ?___lwtoft 0078        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 13E4     __end_of_LCD_WriteString 15B9  
                 _ADCResult 00BB                ??_USART_Init 00DC           LCD_WriteData@Byte 00CA  
                   ___aldiv 0755             __size_of___ftge 005F                     ___ftadd 0B34  
                   ___ftdiv 080E                     ___ftneg 13EC             __size_of___wmul 0023  
                   ___ftmul 098C                     ___fttol 1772                     ___lwdiv 15B9  
                ??___ftpack 0075                     __ptext1 15F7                     __ptext2 0755  
                   __ptext3 13DC                     __ptext4 0803                     __ptext5 153B  
                   __ptext6 14F7                     __ptext7 14D6                     __ptext8 1588  
                   __ptext9 144E                  _pas_cooler 00E9                  ??___lwtoft 007B  
           __size_of_trapmf 0156                __size_of_ISR 0149                   _T1CONbits 0010  
                 _T2CONbits 0012                     _max_val 1498            ___aldiv@dividend 00CD  
                 _LCD_Clear 155F          __end_of_USART_Init 1640                     clrloop0 13E5  
      end_of_initialization 0035                   _RCSTAbits 0018            ___aldiv@quotient 00D4  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040                     trimf@ua 004C  
      __end_ofi1_TIMER0_Set 13D4       __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006  
                 _PORTEbits 0009                  _setpointUI 00C5                  ?_LCD_Clear 0070  
          i1_PWM_DutyCycle2 147D           __size_of_ADC_Init 0012         PWM_DutyCycle1@valor 00C9  
                _total_area 00B2         PWM_DutyCycle2@valor 00C9                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 00CB           __size_of_LCD_Init 006B                _LCD_WriteCmd 1437  
               ___ftmul@exp 0024              __end_of___ftge 169F              __end_of___wmul 153B  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 0EAA            ??_PWM_DutyCycle1 00CB  
          ??_PWM_DutyCycle2 00CB       __end_of_LCD_WriteData 1465           _USART_ReceiveChar 1465  
                  ??___ftge 0036          ?_USART_ReceiveChar 0070                    ??___wmul 007C  
                init_fetch0 1400                 __pdataBANK1 00E3                send@checksum 0021  
                  ??_trapmf 007C              send@velocidade 0022         ??_USART_ReceiveChar 0073  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0014  
             __pcstackBANK0 0020               __pcstackBANK1 00C9                 ??_LCD_Clear 00CB  
       __end_of__stringdata 105D   __end_of_USART_ReceiveChar 147D       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 00C9                Fuzzy@aumenta 0063  
                  ?___aldiv 00C9                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0078                    ?___fttol 0030  
                  ?___lwdiv 0070                   __pstrings 1000                   _ativa_fan 00A0  
             ??_TIMER0_Init 00C9          USART_Init@BaudRate 00D8                    ?_max_val 003C  
                  _ADC_Init 1411                   _fop_rule1 00A6                   _fop_rule2 00A9  
                 _fop_rule3 00AC              __size_of_Fuzzy 071C            ___lwdiv@quotient 0075  
            __size_of_trimf 0124           ??_USART_WriteChar 0070                i1_TIMER0_Set 13CE  
           ___aldiv@divisor 00C9           interrupt_function 0004             ___aldiv@counter 00D2  
                  _LCD_Init 1707              ___wmul@product 007C                   clear_ram0 13E4  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 1498                 _display_rpm 01A0  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
               __stringdata 1010                    _PWM_Init 153B           ___wmul@multiplier 0078  
       __end_of_TIMER0_Init 080E  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
                  Fuzzy@tip 0054            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D1  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___ftpack 169F  
        __end_of__stringtab 1010                    ___lwtoft 1423                   send@index 0024  
          __size_of_max_val 001E             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 07E4                    __ptext10 1707                    __ptext11 14B6  
                  __ptext20 1465                    __ptext12 155F                    __ptext21 07E4  
                  __ptext13 1437                    __ptext30 1498                    __ptext22 13D4  
                  __ptext14 1411                    __ptext31 1640                    __ptext23 0039  
                  __ptext15 0D61                    __ptext32 1423                    __ptext24 147D  
                  __ptext16 13CE                    __ptext33 1772                    __ptext25 0C3D  
                  __ptext17 08C6                    __ptext34 098C                    __ptext26 0EAA  
                  __ptext18 1518                    __ptext35 169F                    __ptext27 13EC  
                  __ptext19 15B9                    __ptext28 080E                    __ptext29 0B34  
                  _antigoUI 00BD          ?_USART_WriteString 0070               __size_of_main 00D7  
             __size_of_send 00C6         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
                  _setpoint 00E6                  _LCD_Cursor 14B6    __size_of_LCD_WriteString 0031  
               _TIMER0_Init 0803                  _INTCONbits 000B   __end_of_USART_WriteString 0800  
                  max_val@a 003C                    max_val@b 003F                    init_ram0 1404  
                  intlevel1 0000                   stringcode 100A        USART_WriteString@str 0072  
                _TIMER0_Set 13DC                    trapmf@ua 004F             _USART_WriteChar 13D4  
                  stringdir 100A                    stringtab 1000                ___aldiv@sign 00D3  
    __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 003E  
                _SSPCONbits 0014                  _USART_Init 15F7  
